<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-27T01:36:16Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AutohomeCorp/frostmourne</title>
    <updated>2023-07-27T01:36:16Z</updated>
    <id>tag:github.com,2023-07-27:/AutohomeCorp/frostmourne</id>
    <link href="https://github.com/AutohomeCorp/frostmourne" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Frostmourne（霜之哀伤监控平台）是基于Elasticsearch, Prometheus, SkyWalking, InfluxDB，Mysql/TiDB，ClickHouse, SqlServer, IoTDB数据的分布式监控报警系统. Monitor &amp; alert &amp; alarm for Elasticsearch，Prometheus data。主要使用springboot2 + vue-element-admin&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne&#34;&gt;&lt;img src=&#34;https://gitee.com/tim_guai/frostmourne/raw/master/doc/img/logo/frostmourne_logo.jpg&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/AutohomeCorp/frostmourne&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/AutohomeCorp/frostmourne&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/AutohomeCorp/frostmourne&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/AutohomeCorp/frostmourne&#34; alt=&#34;GitHub Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/AutohomeCorp/frostmourne&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://openjdk.java.net/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Java-8,11,13-blue?logo=java&amp;amp;logoColor=white&#34; alt=&#34;JDK support&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/l/svelte.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/AutohomeCorp/frostmourne/total.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne&#34;&gt;Github地址&lt;/a&gt; | &lt;a href=&#34;https://gitee.com/tim_guai/frostmourne&#34;&gt;Gitee地址&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/README.md&#34;&gt;中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/README_en.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;📖 介绍&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;Frostmourne&lt;/code&gt;(霜之哀伤)是汽车之家经销商技术部监控系统的开源版本，用于帮助监控几乎所有数据库数据(包括&lt;code&gt;Elasticsearch&lt;/code&gt;, &lt;code&gt;Prometheus&lt;/code&gt;, &lt;code&gt;SkyWalking&lt;/code&gt;, &lt;code&gt;MySql&lt;/code&gt; 等等)。如果你已经建立起了日志系统， 指标体系，却苦恼于没有一个配套监控系统，也许它能帮到你。使用本系统得当，至少可以做到线上应用出了什么问题，相关开发能第一时间了解报错情况，知道问题出在哪里， 可以快速响应处理，几乎先于所有人知道线上的情况，也因为心中有数所以可以从容应对各种问询，一点都不慌，你们团队值得拥有。&lt;/p&gt; &#xA;&lt;h3&gt;项目初衷&lt;/h3&gt; &#xA;&lt;p&gt;在用&lt;code&gt;ELK&lt;/code&gt;建立起日志系统之后，我们发现应用日志监控这块除了&lt;code&gt;ElastAlert&lt;/code&gt;之外，没有其他方案。我们初期使用&lt;code&gt;ElastAlert&lt;/code&gt;来解决日志监控的问题， 但是随着配置的增加，不仅管理成本和使用成本较高，稳定性方面也不能让我们满意，所以为了更好的易用性，稳定性，我们决定自己做一套简单的监控系统， 来解决日志监控的问题。&lt;/p&gt; &#xA;&lt;p&gt;项目并不局限于&lt;code&gt;Elasticsearch&lt;/code&gt;数据，还支持&lt;code&gt;HTTP&lt;/code&gt;, &lt;code&gt;PING&lt;/code&gt;, &lt;code&gt;Telnet&lt;/code&gt;监控，&lt;code&gt;Prometheus&lt;/code&gt;, &lt;code&gt;SkyWalking&lt;/code&gt;, &lt;code&gt;InfluxDB&lt;/code&gt;，&lt;code&gt;MySQL&lt;/code&gt;, &lt;code&gt;ClickHouse&lt;/code&gt;, &lt;code&gt;IoTDB&lt;/code&gt;, &lt;code&gt;SqlServer&lt;/code&gt;数据监控， 后面还会加入更多的常用数据源(如：&lt;code&gt;Loki&lt;/code&gt;, &lt;code&gt;MongoDB&lt;/code&gt;, &lt;code&gt;Redis&lt;/code&gt;, &lt;code&gt;Oracle&lt;/code&gt; 等)纳入监控范畴，需要做的东西还有很多，需要更多相关开发加入进来，欢迎联系我们，一起做大做强。&lt;/p&gt; &#xA;&lt;h1&gt;✨ 主要功能&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;只需要写一条数据查询就可以轻松搞定监控&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;多种数据源支持：&lt;code&gt;Elasticsearch, HTTP, SkyWalking, Prometheus, InfluxDB, MySQL/TiDb, ClickHouse, SqlServer, PING, IotDB, Telnet&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;数值计算类型监控：&lt;code&gt;count, min, max, avg, sum, unique count, percentiles, standard deviation&lt;/code&gt;; &lt;code&gt;Elasticsearch&lt;/code&gt;数据支持分桶&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;多种报警消息发送方式：钉钉(机器人)、企业微信(机器人)、飞书机器人、Email、短信、HTTP&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;多种消息格式：&lt;code&gt;text, markdown&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;灵活的报警消息&lt;code&gt;Freemarker&lt;/code&gt;模板定制，支持变量占位符；消息模板管理&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;分布式调度实现，每个监控都是独立调度，互不影响&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;报警消息附带日志查询短链接，直达报警原因&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;数值同比，环比监控&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;HTTP&lt;/code&gt;数据监控, &lt;code&gt;Javascript&lt;/code&gt;表达式判断是否报警; &lt;code&gt;PING&lt;/code&gt;连通监控, &lt;code&gt;Telnet&lt;/code&gt;端口连通监控&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;前端简单易用：监控管理、测试、另存、执行日志和历史消息&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Elasticsearch&lt;/code&gt;数据查询、分享和下载&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;报警消息抑制功能，防止消息轰炸；也有报警升级功能，避免故障相关方长时间得不到通知。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自带账号，团队，部门信息管理模块，也可自己实现内部对接&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;集成&lt;code&gt;LDAP&lt;/code&gt;登录认证&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;权限控制，数据隔离，各团队互不影响&lt;/p&gt; &lt;h4&gt;企业微信机器人报警截图展示： （&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/feature_image.md&#34; target=&#34;_blank&#34;&gt;查看完整功能截图展示&lt;/a&gt;）&lt;/h4&gt; &lt;img src=&#34;https://gitee.com/tim_guai/frostmourne/raw/master/doc/wiki/img/markdown_wechat_robot.png&#34;&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- TOC --&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#-%E4%BB%8B%E7%BB%8D&#34;&gt;介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#-%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD&#34;&gt;主要功能&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#-%E5%9C%A8%E7%BA%BFdemo&#34;&gt;在线demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#-%E5%BF%AB%E9%80%9F%E5%90%AF%E5%8A%A8&#34;&gt;快速启动&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#-%E9%83%A8%E7%BD%B2&#34;&gt;部署&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#%E9%A2%84%E5%A4%87%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E5%88%9B%E5%BB%BA&#34;&gt;环境准备&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#%E4%B8%80k8s%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F&#34;&gt;k8s部署方式&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#%E4%BA%8Czip%E5%8C%85%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F&#34;&gt;zip包部署方式&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#%E4%B8%89%E8%87%AA%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F&#34;&gt;自构建部署方式&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#-%E5%8A%9F%E8%83%BD%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97&#34;&gt;功能使用指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#-%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95&#34;&gt;开发调试&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#%E5%90%8E%E7%BB%AD%E8%A7%84%E5%88%92&#34;&gt;后续规划&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/ReleaseNotes.md&#34;&gt;发版历史&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/#-contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /TOC --&gt; &#xA;&lt;h1&gt;💻 在线demo&lt;/h1&gt; &#xA;&lt;p&gt;为了更快的理解本项目的作用，提供了一个接口全&lt;code&gt;mock&lt;/code&gt;的静态站点供大家预览功能: &lt;a href=&#34;https://frostmourne-demo.github.io/&#34;&gt;在线demo&lt;/a&gt; 在线&lt;code&gt;demo&lt;/code&gt;更新不及时，请以项目实际运行效果为准，&lt;code&gt;demo&lt;/code&gt;只是用于快速浏览&lt;/p&gt; &#xA;&lt;h1&gt;📦 快速启动&lt;/h1&gt; &#xA;&lt;p&gt;提供&lt;code&gt;docker-compose&lt;/code&gt;方式，让你更快运行起来便于更好理解项目作用。详细请看文档：&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/quick-start.md&#34; target=&#34;_blank&#34;&gt;Quick-Start&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🧰 部署&lt;/h1&gt; &#xA;&lt;h4&gt;预备环境准备：&lt;code&gt;MySQL&lt;/code&gt;数据库表创建&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Frostmourne所有表的创建语句都在 &lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/mysql-schema/frostmourne.sql&#34;&gt;frostmourne.sql&lt;/a&gt; 文件中。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;数据库密码默认使用明文，没有加密策略。如果你需要对密码进行加密，请参考druid官方文档：&lt;a href=&#34;https://github.com/alibaba/druid/wiki/%E4%BD%BF%E7%94%A8ConfigFilter&#34;&gt;druid数据库密码加密&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;一、&lt;code&gt;k8s&lt;/code&gt;部署方式&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;k8s&lt;/code&gt;部署参考以下三个配置文件&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/docker/k8s/frostmourne-monitor-namespace.yaml&#34;&gt;frostmourne-monitor-namespace.yaml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/docker/k8s/frostmourne-monitor-deployment.yaml&#34;&gt;frostmourne-monitor-deployment.yaml&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/docker/k8s/frostmourne-monitor-service.yaml&#34;&gt;frostmourne-monitor-service.yaml&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;相关参数在 &lt;code&gt;frostmourne-monitor-deployment.yaml&lt;/code&gt; 文件里配置。需要注意的是在&lt;code&gt;frostmourne-monitor-service.yaml&lt;/code&gt;里指定对外映射端口，默认&lt;code&gt;nodePort=30054&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kubectl applt -f frostmourne-monitor-namespace.yaml&#xA;kubectl applt -f frostmourne-monitor-deployment.yaml&#xA;kubectl apply -f frostmourne-monitor-service.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;二、&lt;code&gt;zip&lt;/code&gt;包部署方式&lt;/h4&gt; &#xA;&lt;p&gt;依赖环境&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JDK 1.8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MySQL 5.7.8+&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;最新的Release版本zip包，请到 &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/releases&#34;&gt;releases&lt;/a&gt; 中下载，解压后然后根据自己的环境修改应用配置文件&lt;code&gt;application.properties&lt;/code&gt;文件和环境变量配置文件&lt;code&gt;env&lt;/code&gt;，然后执行如下命令启动：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/startup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;执行如下命令停止应用：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/shutdown.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;三、自构建部署方式&lt;/h4&gt; &#xA;&lt;p&gt;依赖环境&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JDK 1.8&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Maven 3.2.x+&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MySQL 5.7.8+&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;在项目&lt;code&gt;frostmourne&lt;/code&gt;主目录下执&lt;code&gt;maven&lt;/code&gt;构建命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn -U clean package -DskipTests=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;前端项目&lt;code&gt;frostmourne-vue&lt;/code&gt;会自动把资源构建到&lt;code&gt;frostmourne-monitor&lt;/code&gt;的&lt;code&gt;resources/dist&lt;/code&gt;下，所以你只需要部署&lt;code&gt;frostmourne-monitor&lt;/code&gt;即可。&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;frostmourne-monitor&lt;/code&gt;已经配置了&lt;code&gt;assembly&lt;/code&gt;打包，&lt;code&gt;target&lt;/code&gt;目录下会生成&lt;code&gt;zip&lt;/code&gt;包，你只需要将&lt;code&gt;zip&lt;/code&gt;包解压，然后根据自己的 环境修改应用配置文件&lt;code&gt;application.properties&lt;/code&gt;文件和环境变量配置文件env，然后执行如下命令启动：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/startup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;执行如下命令停止应用：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./scripts/shutdown.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;📚 功能使用指南&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/es.md&#34; target=&#34;_blank&#34;&gt;Elasticsearch数据监控指南&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/http-alarm.md&#34; target=&#34;_blank&#34;&gt;HTTP监控使用说明&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/prometheus.md&#34; target=&#34;_blank&#34;&gt;Prometheus数据监控指南&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/skywalking.md&#34; target=&#34;_blank&#34;&gt;SkyWalking数据监控指南&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/jdbc-mysql.md&#34; target=&#34;_blank&#34;&gt;MySQL/TiDB数据监控指南&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/jdbc-clickhouse.md&#34; target=&#34;_blank&#34;&gt;ClickHouse数据监控指南&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/influxdb.md&#34; target=&#34;_blank&#34;&gt;InfluxDB数据监控指南&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/ping.md&#34; target=&#34;_blank&#34;&gt;PING监控指南&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/same-time-compare.md&#34; target=&#34;_blank&#34;&gt;数值同比监控使用指南&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/template.md&#34; target=&#34;_blank&#34;&gt;消息模板配置&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/ways.md&#34; target=&#34;_blank&#34;&gt;报警发送&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/supress.md&#34; target=&#34;_blank&#34;&gt;报警抑制&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/auth.md&#34; target=&#34;_blank&#34;&gt;用户管理和登录认证&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/note.md&#34; target=&#34;_blank&#34;&gt;注意事项&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/other.md&#34; target=&#34;_blank&#34;&gt;其他&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/ring-compare.md&#34; target=&#34;_blank&#34;&gt;数值环比监控使用指南&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/iotdb.md&#34; target=&#34;_blank&#34;&gt;iotdb数据监控使用指南&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/telnet.md&#34; target=&#34;_blank&#34;&gt;telnet端口连通监控指南&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h1&gt;🛠 开发调试&lt;/h1&gt; &#xA;&lt;p&gt;调试环境要求&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;JDK 8 ~ 14&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Node 16.14.2 (推荐)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Yarn 1.22.10 (推荐) 或 Npm 8.7.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MySQL 5.7.8+&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Elasticsearch 6.3.2+&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;启动&lt;code&gt;frostmourne-monitor&lt;/code&gt;项目, 启动参数增加：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-Dmysql.host=localhost -Dmysql.user=root -Dmysql.password=example -Dlog.console.level=INFO&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;MySQL&lt;/code&gt;相关参数修改为自己环境的，&lt;code&gt;active profile&lt;/code&gt;设置为&lt;code&gt;local&lt;/code&gt;, 测试地址: &lt;a href=&#34;http://localhost:10054&#34;&gt;http://localhost:10054&lt;/a&gt; 使用&lt;code&gt;VS Code&lt;/code&gt;打开&lt;code&gt;frostmourne-vue&lt;/code&gt;目录，进行前端调试。执行如下命令:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# install dependency&#xA;yarn install&#xA;&#xA;# 建议不要直接使用 cnpm 安装以来，会有各种诡异的 bug。可以通过如下操作解决 npm 下载速度慢的问题&#xA;yarn install --registry=https://registry.npm.taobao.org&#xA;&#xA;# develop&#xA;yarn dev&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;会自动打开： &lt;a href=&#34;http://localhost:9528&#34;&gt;http://localhost:9528&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;搭建本地开发调试环境或者需要做二次开发遇到什么困难的都可以加群沟通，欢迎各路英雄多多PR&lt;/p&gt; &#xA;&lt;p&gt;技术说明项目基于&lt;code&gt;Java8&lt;/code&gt;实现，详细请看：&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/technical.md&#34;&gt;技术说明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;⚙后续规划&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;发布1.0-RELEASE&lt;/li&gt; &#xA; &lt;li&gt;增加本项目内程序日志采集至MySQL并提供查询页面，方便排查问题和监控&lt;/li&gt; &#xA; &lt;li&gt;Elasticsearch数据名增加kibana链接配置，在数据查询页面增加kibana地址跳转链接，方便将数据查询切换至kibana&lt;/li&gt; &#xA; &lt;li&gt;短信报警方式实现，默认用阿里云短信实现&lt;/li&gt; &#xA; &lt;li&gt;增加阿里云日志数据监控&lt;/li&gt; &#xA; &lt;li&gt;增加腾讯云日志数据监控&lt;/li&gt; &#xA; &lt;li&gt;增加华为云日志数据监控&lt;/li&gt; &#xA; &lt;li&gt;完成英语国际化&lt;/li&gt; &#xA; &lt;li&gt;增加 &lt;a href=&#34;https://github.com/grafana/loki&#34;&gt;loki&lt;/a&gt; 数据监控报警&lt;/li&gt; &#xA; &lt;li&gt;增加邮箱在线配置页面功能&lt;/li&gt; &#xA; &lt;li&gt;增加企业微信在线配置页面功能&lt;/li&gt; &#xA; &lt;li&gt;将短链接id以16进制格式展示，解决id数字很大的时候较长的问题&lt;/li&gt; &#xA; &lt;li&gt;pom优化&lt;/li&gt; &#xA; &lt;li&gt;员工换组增加是否迁移监控至新组的选项，如果勾选将该员工创建的监控也转移至新组&lt;/li&gt; &#xA; &lt;li&gt;增加报警组支持&lt;/li&gt; &#xA; &lt;li&gt;Elasticsearch数据名增加traceid字段配置，可以配置跳转链接。例如: 配置skywalking的链接将跳转到skywalking对应的调用链&lt;/li&gt; &#xA; &lt;li&gt;增加时序数据历史数据比较规则&lt;/li&gt; &#xA; &lt;li&gt;监控增加报警消息允许发送时间段设置，非允许发送时间段内消息将只记录不发送，发送状态为FORBID&lt;/li&gt; &#xA; &lt;li&gt;增加企业钉钉发消息默认实现(本地没有环境，需要帮助，欢迎PR，或者提供示例代码，先行谢过)&lt;/li&gt; &#xA; &lt;li&gt;更多报警方式补充（欢迎PR）&lt;/li&gt; &#xA; &lt;li&gt;增加 &lt;a href=&#34;https://github.com/apache/skywalking&#34;&gt;skywalking&lt;/a&gt; &lt;code&gt;Database Layer&lt;/code&gt; 数据监控报警支持&lt;/li&gt; &#xA; &lt;li&gt;监控列表增加一个开关选项，只显示我的监控&lt;/li&gt; &#xA; &lt;li&gt;Elasticsearch数据名配置时自动提示索引名称&lt;/li&gt; &#xA; &lt;li&gt;引入对象迭代器，迭代器代表从数据源中得到一个List数据列表，或者自定义输入；用于动态生成监控查询语句，例如: Level: ERROR AND Project: ${ITEM_VALUE}；达到数据遍历监控的效果；&lt;/li&gt; &#xA; &lt;li&gt;发布1.0-RELEASE&lt;/li&gt; &#xA; &lt;li&gt;3-sigma离群点检测报警规则&lt;/li&gt; &#xA; &lt;li&gt;加入时序数据异常检测算法规则(需要实验可行性 &lt;a href=&#34;https://blog.rexking6.top/2018/11/05/%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E7%9A%84%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/&#34;&gt;基于时间序列的异常检测&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;总结项目用到的知识点&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;🗓 &lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/ReleaseNotes.md&#34;&gt;发版历史&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;👍 &lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/thank.md&#34;&gt;致谢&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;👷 Contributors&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/menong-chen&#34;&gt;@menong-chen&lt;/a&gt; &lt;a href=&#34;https://github.com/fox2zz&#34;&gt;@fox2zz&lt;/a&gt; &lt;a href=&#34;https://github.com/xyzj91&#34;&gt;@xyzj91&lt;/a&gt; &lt;a href=&#34;https://github.com/wxmclub&#34;&gt;@wxmclub&lt;/a&gt; &lt;a href=&#34;https://github.com/wuaping&#34;&gt;@Aping&lt;/a&gt; &lt;a href=&#34;https://github.com/limboinf&#34;&gt;@limbo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=AutohomeCorp/frostmourne&#34; alt=&#34;GitHub Contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;💡️ 如何参与贡献&lt;/h1&gt; &#xA;&lt;p&gt;如果你觉得这个项目对你有所帮助想有所回馈，非常欢迎参与贡献。可以通过如下方式：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;从后续规划里选择合适的任务提交&lt;code&gt;PR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;对文档进行必要补充&lt;/li&gt; &#xA; &lt;li&gt;部署本项目使用起来并通过 &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/issues/17&#34;&gt;&lt;code&gt;github&lt;/code&gt;&lt;/a&gt; 或 &lt;a href=&#34;https://gitee.com/tim_guai/frostmourne/issues/I560YJ&#34;&gt;&lt;code&gt;gitee&lt;/code&gt;&lt;/a&gt; 告知&lt;/li&gt; &#xA; &lt;li&gt;帮忙扩散推广&lt;/li&gt; &#xA; &lt;li&gt;在 &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/issues&#34;&gt;&lt;code&gt;issue&lt;/code&gt;&lt;/a&gt; 提出你的宝贵建议&lt;/li&gt; &#xA; &lt;li&gt;加入交流群，解答交流问题。群内会不定时发布项目更新说明&lt;/li&gt; &#xA; &lt;li&gt;开源不易，star鼓励&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/wiki/code_format.md&#34;&gt;代码规范说明&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;💬 联系我们&lt;/h1&gt; &#xA;&lt;p&gt;有问题需要帮助或者交流可以添加下边的微信群或QQ群，请优先选择提 &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/issues&#34;&gt;issue&lt;/a&gt; ，便于问题的讨论和记录追踪，也方便有类似问题的伙伴搜索解决。也欢迎对项目感兴趣的同僚加群交流。 特别提一下：关于文档觉得哪里写的不通畅，不好理解，或者有哪方面缺失，都欢迎提 &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/issues&#34;&gt;issue&lt;/a&gt; 。&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img src=&#34;https://gitee.com/tim_guai/frostmourne/raw/master/doc/img/frostmourne-contact.jpg&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;h1&gt;📌 项目事记&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2019-12-16: 发布&lt;code&gt;github&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;2020-06-14: 发布&lt;code&gt;gitee&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;2020-07-02: 合并第一个&lt;code&gt;PR&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;2020-07-04: 被&lt;code&gt;elastic&lt;/code&gt;中文社区收录 &lt;a href=&#34;https://elasticsearch.cn/article/14018&#34;&gt;Elastic日报988期&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;2020-07-13: github项目设置为私有，丢失82个&lt;code&gt;star&lt;/code&gt;，29个&lt;code&gt;fork&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;2020-07-15: 重新公开&lt;code&gt;github&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;2020-08-23: 上&lt;code&gt;gitee&lt;/code&gt;推荐&lt;/li&gt; &#xA; &lt;li&gt;2020-08-27: &lt;code&gt;gitee star&lt;/code&gt;破百&lt;/li&gt; &#xA; &lt;li&gt;2020-10-12: &lt;code&gt;github star&lt;/code&gt;破百&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;👥 已注册使用者&lt;/h1&gt; &#xA;&lt;p&gt;通过 &lt;a href=&#34;https://github.com/AutohomeCorp/frostmourne/issues/17&#34;&gt;&lt;code&gt;github&lt;/code&gt;&lt;/a&gt; 或 &lt;a href=&#34;https://gitee.com/tim_guai/frostmourne/issues/I560YJ&#34;&gt;&lt;code&gt;gitee&lt;/code&gt;&lt;/a&gt; 登记的使用者&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://gitee.com/tim_guai/frostmourne/raw/master/doc/img/user/autohome.jpg&#34; alt=&#34;汽车之家&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://gitee.com/tim_guai/frostmourne/raw/master/doc/img/user/zuiyou.jpg&#34; alt=&#34;最右APP&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://gitee.com/tim_guai/frostmourne/raw/master/doc/img/user/jiajiayue.jpg&#34; alt=&#34;家家悦&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://gitee.com/tim_guai/frostmourne/raw/master/doc/img/user/sungrow.jpg&#34; alt=&#34;阳光电源&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://gitee.com/tim_guai/frostmourne/raw/master/doc/img/user/etcp.jpg&#34; alt=&#34;ETCP&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AutohomeCorp/frostmourne/master/doc/img/user/lingoace.png&#34; alt=&#34;LingoAce&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.ddky.com/images/logo_0120.png&#34; alt=&#34;叮当快药&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://www.aikucun.com//img/logo-red@2x.f98115f3.png&#34; alt=&#34;爱库存&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h1&gt;⭐️ Stargazers over time&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/AutohomeCorp/frostmourne&#34;&gt;&lt;img src=&#34;https://starchart.cc/AutohomeCorp/frostmourne.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/fineract</title>
    <updated>2023-07-27T01:36:16Z</updated>
    <id>tag:github.com,2023-07-27:/apache/fineract</id>
    <link href="https://github.com/apache/fineract" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Fineract&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Fineract: A Platform for Microfinance&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://validator.swagger.io/validator/debug?url=https://demo.fineract.dev/fineract-provider/swagger-ui/fineract.yaml&#34;&gt;&lt;img src=&#34;https://validator.swagger.io/validator?url=https://demo.fineract.dev/fineract-provider/swagger-ui/fineract.yaml&#34; alt=&#34;Swagger Validation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/fineract/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/fineract/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/apache/fineract&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/apache/fineract.svg?logo=Docker&#34; alt=&#34;Docker Hub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/apache/fineract/builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/cloud/build/apache/fineract.svg?logo=Docker&#34; alt=&#34;Docker Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=apache_fineract&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=apache_fineract&amp;amp;metric=sqale_index&#34; alt=&#34;Technical Debt&#34;&gt;&lt;/a&gt;&lt;/p&gt;  &#xA;&lt;p&gt;Fineract is a mature platform with open APIs that provides a reliable, robust, and affordable core banking solution for financial institutions offering services to the world’s 3 billion underbanked and unbanked.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cwiki.apache.org/confluence/display/FINERACT/FAQ&#34;&gt;Have a look at the FAQ on our Wiki at apache.org&lt;/a&gt; if this README does not answer what you are looking for. &lt;a href=&#34;https://issues.apache.org/jira/secure/Dashboard.jspa?selectPageId=12335824&#34;&gt;Visit our JIRA Dashboard&lt;/a&gt; to find issues to work on, see what others are working on, or open new issues.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/apache/fineract&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Code Now! (Gitpod)&#34;&gt;&lt;/a&gt; to start contributing to this project in the online web-based IDE GitPod.io right away! (You may initially have to press F1 to Find Command and run &#34;Java: Start Language Server&#34;.) It&#39;s of course also possible to contribute with a &#34;traditional&#34; local development environment (see below).&lt;/p&gt; &#xA;&lt;h1&gt;COMMUNITY&lt;/h1&gt; &#xA;&lt;p&gt;If you are interested in contributing to this project, but perhaps don&#39;t quite know how and where to get started, please &lt;a href=&#34;http://fineract.apache.org/#contribute&#34;&gt;join our developer mailing list&lt;/a&gt;, listen into our conversations, chime into threads, and just send us a &#34;Hello!&#34; introduction email; we&#39;re a friendly bunch, and look forward to hearing from you.&lt;/p&gt; &#xA;&lt;h1&gt;REQUIREMENTS&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Java &amp;gt;= 17&lt;/code&gt; (Azul Zulu JVM is tested by our CI on GitHub Actions)&lt;/li&gt; &#xA; &lt;li&gt;MariaDB &lt;code&gt;10.9&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can run the required version of the database server in a container, instead of having to install it, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --name mariadb-10.9 -p 3306:3306 -e MARIADB_ROOT_PASSWORD=mysql -d mariadb:10.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and stop and destroy it like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker rm -f mariadb-10.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;br&gt;Beware that this database container database keeps its state inside the container and not on the host filesystem. It is lost when you destroy (rm) this container. This is typically fine for development. See &lt;a href=&#34;https://hub.docker.com/_/mariadb&#34;&gt;Caveats: Where to Store Data on the database container documentation&lt;/a&gt; re. how to make it persistent instead of ephemeral.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tomcat v9 is only required if you wish to deploy the Fineract WAR to a separate external servlet container. Note that you do not require to install Tomcat to develop Fineract, or to run it in production if you use the self-contained JAR, which transparently embeds a servlet container using Spring Boot. (Until FINERACT-730, Tomcat 7/8 were also supported, but now Tomcat 9 is required.)&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;IMPORTANT: If you use MySQL or MariaDB&lt;/h1&gt; &#xA;&lt;p&gt;Recently (after release &lt;code&gt;1.7.0&lt;/code&gt;), we introduced improved date time handling in Fineract. Date time is from now on stored in UTC and we are enforcing UTC timezone even on the JDBC driver, e. g. for MySQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;serverTimezone=UTC&amp;amp;useLegacyDatetimeCode=false&amp;amp;sessionVariables=time_zone=‘-00:00’&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;DO&lt;/strong&gt;: If you do use MySQL as your Fineract database then the following configuration is highly recommended:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the application in UTC (the default command line in our Docker image has the necessary parameters already set)&lt;/li&gt; &#xA; &lt;li&gt;Run the MySQL database server in UTC (if you use managed services like AWS RDS then this should be the default anyway, but it would be good to double-check)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;DON&#39;T&lt;/strong&gt;: In case the Fineract instance and the MySQL server are &lt;strong&gt;not&lt;/strong&gt; running in UTC then the following could happen:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MySQL is saving date time values differently from PostgreSQL&lt;/li&gt; &#xA; &lt;li&gt;Example scenario: if the Fineract instance runs in timezone: GMT+2, and the local date time is 2022-08-11 17:15 ...&lt;/li&gt; &#xA; &lt;li&gt;... then &lt;strong&gt;PostgreSQL saves&lt;/strong&gt; the LocalDateTime as is: &lt;strong&gt;2022-08-11 17:15&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;... and &lt;strong&gt;MySQL saves&lt;/strong&gt; the LocalDateTime in UTC: &lt;strong&gt;2022-08-11 15:15&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;... but when we &lt;strong&gt;read&lt;/strong&gt; the date time from PostgreSQL &lt;strong&gt;or&lt;/strong&gt; from MySQL, then both systems give us the same values: &lt;strong&gt;2022-08-11 17:15 GMT+2&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If a previously used Fineract instance didn&#39;t run in UTC (backward compatibility), then all prior dates will be read wrongly by MySQL/MariaDB. This can cause issues when you run the database migration scripts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;RECOMMENDATION&lt;/strong&gt;: you need to shift all dates in your database by the timezone offset that your Fineract instance used.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;INSTRUCTIONS: How to run for local development&lt;/h1&gt; &#xA;&lt;p&gt;Run the following commands:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew createDB -PdbName=fineract_tenants&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew createDB -PdbName=fineract_default&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew bootRun&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;&lt;br&gt;INSTRUCTIONS: How to build the JAR file&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository or download and extract the archive file to your local directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./gradlew clean bootJar&lt;/code&gt; to build a modern cloud native fully self contained JAR file which will be created at &lt;code&gt;fineract-provider/build/libs&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;As we are not allowed to include a JDBC driver in the built JAR, download a JDBC driver of your choice. For example: &lt;code&gt;wget https://downloads.mariadb.com/Connectors/java/connector-java-2.7.5/mariadb-java-client-2.7.5.jar&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start the jar and pass the directory where you have downloaded the JDBC driver as loader.path, for example: &lt;code&gt;java -Dloader.path=. -jar fineract-provider/build/libs/fineract-provider.jar&lt;/code&gt; (does not require external Tomcat)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;NOTE: we cannot upgrade to version 3.0.x of the MariaDB driver just yet; have to wait until 3.0.4 is out for a bug fix.&lt;/p&gt; &#xA;&lt;p&gt;The tenants database connection details are configured &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/#instructions-to-run-using-docker-and-docker-compose&#34;&gt;via environment variables (as with Docker container)&lt;/a&gt;, e.g. like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export FINERACT_HIKARI_PASSWORD=verysecret&#xA;...&#xA;java -jar fineract-provider.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;&lt;br&gt;SECURITY&lt;/h1&gt; &#xA;&lt;p&gt;NOTE: The HTTP Basic and OAuth2 authentication schemes are mutually exclusive. You can&#39;t enable them both at the same time. Fineract checks these settings on startup and will fail if more than one authentication scheme is enabled.&lt;/p&gt; &#xA;&lt;h2&gt;HTTP Basic Authentication&lt;/h2&gt; &#xA;&lt;p&gt;By default Fineract is configured with a HTTP Basic Authentication scheme, so you actually don&#39;t have to do anything if you want to use it. But if you would like to explicitly choose this authentication scheme then there are two ways to enable it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use environment variables (best choice if you run with Docker Compose):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;FINERACT_SECURITY_BASICAUTH_ENABLED=true&#xA;FINERACT_SECURITY_OAUTH_ENABLED=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Use JVM parameters (best choice if you run the Spring Boot JAR):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;java -Dfineract.security.basicauth.enabled=true -Dfineract.security.oauth.enabled=false -jar fineract-provider.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;br&gt;OAuth2 AUTHENTICATION&lt;/h2&gt; &#xA;&lt;p&gt;There is also an OAuth2 authentication scheme available. Again, two ways to enable it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use environment variables (best choice if you run with Docker Compose):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;FINERACT_SECURITY_BASICAUTH_ENABLED=false&#xA;FINERACT_SECURITY_OAUTH_ENABLED=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Use JVM parameters (best choice if you run the Spring Boot JAR):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;java -Dfineract.security.basicauth.enabled=false -Dfineract.security.oauth.enabled=true -jar fineract-provider.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TWO FACTOR AUTHENTICATION (2FA)&lt;/h2&gt; &#xA;&lt;p&gt;You can also enable 2FA authentication. Depending on how you start Fineract add the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use environment variable (best choice if you run with Docker Compose):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;FINERACT_SECURITY_2FA_ENABLED=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Use JVM parameter (best choice if you run the Spring Boot JAR):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;-Dfineract.security.2fa.enabled=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;&lt;br&gt;INSTRUCTIONS: How to build a WAR file&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository or download and extract the archive file to your local directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./gradlew :fineract-war:clean :fineract-war:war&lt;/code&gt; to build a traditional WAR file which will be created at &lt;code&gt;fineract-war/build/libs&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Deploy this WAR to your Tomcat v9 Servlet Container.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We recommend using the JAR instead of the WAR file deployment, because it&#39;s much easier.&lt;/p&gt; &#xA;&lt;p&gt;Note that with the 1.4 release the tenants database pool configuration changed from Tomcat DBCP in XML to an embedded Hikari, configured by environment variables, see above.&lt;/p&gt; &#xA;&lt;h1&gt;INSTRUCTIONS: How to execute Integration Tests&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that if this is the first time to access MySQL DB, then you may need to reset your password.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Run the following commands:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew createDB -PdbName=fineract_tenants&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew createDB -PdbName=fineract_default&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew clean test&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;INSTRUCTIONS: How to run and debug in Eclipse IDE&lt;/h1&gt; &#xA;&lt;p&gt;It is possible to run Fineract in Eclipse IDE and also to debug Fineract using Eclipse&#39;s debugging facilities. To do this, you need to create the Eclipse project files and import the project into an Eclipse workspace:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create Eclipse project files into the Fineract project by running &lt;code&gt;./gradlew cleanEclipse eclipse&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Import the fineract-provider project into your Eclipse workspace (File-&amp;gt;Import-&amp;gt;General-&amp;gt;Existing Projects into Workspace, choose root directory fineract/fineract-provider)&lt;/li&gt; &#xA; &lt;li&gt;Do a clean build of the project in Eclipse (Project-&amp;gt;Clean...)&lt;/li&gt; &#xA; &lt;li&gt;Run / debug Fineract by right clicking on org.apache.fineract.ServerApplication class and choosing Run As / Debug As -&amp;gt; Java Application. All normal Eclipse debugging features (breakpoints, watchpoints etc) should work as expected.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you change the project settings (dependencies etc) in Gradle, you should redo step 1 and refresh the project in Eclipse.&lt;/p&gt; &#xA;&lt;p&gt;You can also use Eclipse Junit support to run tests in Eclipse (Run As-&amp;gt;Junit Test)&lt;/p&gt; &#xA;&lt;p&gt;Finally, modifying source code in Eclipse automatically triggers hot code replace to a running instance, allowing you to immediately test your changes&lt;/p&gt; &#xA;&lt;h1&gt;INSTRUCTIONS: How to run using Docker and docker-compose&lt;/h1&gt; &#xA;&lt;p&gt;It is possible to do a &#39;one-touch&#39; installation of Fineract using containers (AKA &#34;Docker&#34;). Fineract now packs the mifos community-app web UI in it&#39;s docker deploy. You can now run and test fineract with a GUI directly from the combined docker builds. This includes the database running in a container.&lt;/p&gt; &#xA;&lt;p&gt;As Prerequisites, you must have &lt;code&gt;docker&lt;/code&gt; and &lt;code&gt;docker-compose&lt;/code&gt; installed on your machine; see &lt;a href=&#34;https://docs.docker.com/install/&#34;&gt;Docker Install&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose Install&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can also use &lt;a href=&#34;https://github.com/containers/libpod&#34;&gt;Podman&lt;/a&gt; (e.g. via &lt;code&gt;dnf install podman-docker&lt;/code&gt;), and &lt;a href=&#34;https://github.com/containers/podman-compose/&#34;&gt;Podman Compose&lt;/a&gt; (e.g. via &lt;code&gt;pip3 install podman-compose&lt;/code&gt;) instead of Docker.&lt;/p&gt; &#xA;&lt;p&gt;Now to run a new Fineract instance you can simply:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/apache/fineract.git ; cd fineract&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;for windows, use &lt;code&gt;git clone https://github.com/apache/fineract.git --config core.autocrlf=input ; cd fineract&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew :fineract-provider:jibDockerBuild -x test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;fineract (back-end) is running at &lt;a href=&#34;https://localhost:8443/fineract-provider/&#34;&gt;https://localhost:8443/fineract-provider/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;wait for &lt;a href=&#34;https://localhost:8443/fineract-provider/actuator/health&#34;&gt;https://localhost:8443/fineract-provider/actuator/health&lt;/a&gt; to return &lt;code&gt;{&#34;status&#34;:&#34;UP&#34;}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;you must go to &lt;a href=&#34;https://localhost:8443&#34;&gt;https://localhost:8443&lt;/a&gt; and remember to accept the self-signed SSL certificate of the API once in your browser, otherwise you get a message that is rather misleading from the UI.&lt;/li&gt; &#xA; &lt;li&gt;community-app (UI) is running at &lt;a href=&#34;http://localhost:9090/?baseApiUrl=https://localhost:8443/fineract-provider&amp;amp;tenantIdentifier=default&#34;&gt;http://localhost:9090/?baseApiUrl=https://localhost:8443/fineract-provider&amp;amp;tenantIdentifier=default&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;login using default &lt;em&gt;username&lt;/em&gt; &lt;code&gt;mifos&lt;/code&gt; and &lt;em&gt;password&lt;/em&gt; &lt;code&gt;password&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/fineract&#34;&gt;https://hub.docker.com/r/apache/fineract&lt;/a&gt; has a pre-built container image of this project, built continuously.&lt;/p&gt; &#xA;&lt;p&gt;You must specify the MySQL tenants database JDBC URL by passing it to the &lt;code&gt;fineract&lt;/code&gt; container via environment variables; please consult the &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/docker-compose.yml&#34;&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt;&lt;/a&gt; for exact details how to specify those. &lt;em&gt;(Note that in previous versions, the &lt;code&gt;mysqlserver&lt;/code&gt; environment variable used at &lt;code&gt;docker build&lt;/code&gt; time instead of at &lt;code&gt;docker run&lt;/code&gt; time did something similar; this has changed in &lt;a href=&#34;https://issues.apache.org/jira/browse/FINERACT-773&#34;&gt;FINERACT-773&lt;/a&gt;), and the &lt;code&gt;mysqlserver&lt;/code&gt; environment variable is now no longer supported.)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Connection pool configuration&lt;/h1&gt; &#xA;&lt;p&gt;Please check &lt;code&gt;application.properties&lt;/code&gt; to see which connection pool settings can be tweaked. The associated environment variables are prefixed with &lt;code&gt;FINERACT_HIKARI_*&lt;/code&gt;. You can find more information about specific connection pool settings (Hikari) at &lt;a href=&#34;https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby&#34;&gt;https://github.com/brettwooldridge/HikariCP#configuration-knobs-baby&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: we&#39;ll keep backwards compatibility until one of the next releases to ensure that things are working as expected. Environment variables prefixed &lt;code&gt;fineract_tenants_*&lt;/code&gt; can still be used to configure the database connection, but we strongly encourage using &lt;code&gt;FINERACT_HIKARI_*&lt;/code&gt; with more options.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;SSL CONFIGURATION&lt;/h1&gt; &#xA;&lt;p&gt;Read also &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/fineract-doc/src/docs/en/deployment.adoc#https&#34;&gt;the HTTPS related doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;By default SSL is enabled, but all SSL related properties are now tunable. SSL can be turned off by setting the environment variable &lt;code&gt;FINERACT_SERVER_SSL_ENABLED&lt;/code&gt; to false. If you do that then please make sure to also change the server port to &lt;code&gt;8080&lt;/code&gt; via the variable &lt;code&gt;FINERACT_SERVER_PORT&lt;/code&gt;, just for the sake of keeping the conventions. You can choose now easily a different SSL keystore by setting &lt;code&gt;FINERACT_SERVER_SSL_KEY_STORE&lt;/code&gt; with a path to a different (not embedded) keystore. The password can be set via &lt;code&gt;FINERACT_SERVER_SSL_KEY_STORE_PASSWORD&lt;/code&gt;. See the &lt;code&gt;application.properties&lt;/code&gt; file and the latest Spring Boot documentation (&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html&#34;&gt;https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html&lt;/a&gt;) for more details.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;TOMCAT CONFIGURATION&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to the &lt;code&gt;application.properties&lt;/code&gt; and the official Spring Boot documentation (&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html&#34;&gt;https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html&lt;/a&gt;) on how to do performance tuning for Tomcat. Note: you can set now the acceptable form POST size (default is 2MB) via environment variable &lt;code&gt;FINERACT_SERVER_TOMCAT_MAX_HTTP_FORM_POST_SIZE&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;INSTRUCTIONS: How to run on Kubernetes&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;br&gt;General Clusters&lt;/h2&gt; &#xA;&lt;p&gt;You can also run Fineract using containers on a Kubernetes cluster. Make sure you set up and connect to your Kubernetes cluster. You can follow &lt;a href=&#34;https://cwiki.apache.org/confluence/display/FINERACT/Install+and+configure+kubectl+and+Google+Cloud+SDK+on+ubuntu+16.04&#34;&gt;this&lt;/a&gt; guide to set up a Kubernetes cluster on GKE. Make sure to replace &lt;code&gt;apache-fineract-cn&lt;/code&gt; with &lt;code&gt;apache-fineract&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Now e.g. from your Google Cloud shell, run the following commands:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/apache/fineract.git ; cd fineract/kubernetes&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./kubectl-startup.sh&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To shutdown and reset your Cluster, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./kubectl-shutdown.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Using Minikube&lt;/h2&gt; &#xA;&lt;p&gt;Alternatively, you can run fineract on a local kubernetes cluster using &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/&#34;&gt;minikube&lt;/a&gt;. As Prerequisites, you must have &lt;code&gt;minikube&lt;/code&gt; and &lt;code&gt;kubectl&lt;/code&gt; installed on your machine; see &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-minikube/&#34;&gt;Minikube &amp;amp; Kubectl install&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now to run a new Fineract instance on Minikube you can simply:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;git clone https://github.com/apache/fineract.git ; cd fineract/kubernetes&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;minikube start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;./kubectl-startup.sh&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;minikube service fineract-server --url --https&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fineract is now running at the printed URL (note HTTP), which you can check e.g. using:&lt;/p&gt; &lt;p&gt;http --verify=no --timeout 240 --check-status get $(minikube service fineract-server --url --https)/fineract-provider/actuator/health&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To check the status of your containers on your local minikube Kubernetes cluster, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;minikube dashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can check Fineract logs using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kubectl logs deployment/fineract-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To shutdown and reset your cluster, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./kubectl-shutdown.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To shutdown and reset your cluster, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;minikube ssh&#xA;&#xA;sudo rm -rf /mnt/data/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have &lt;a href=&#34;https://jira.apache.org/jira/browse/FINERACT-783?jql=labels%20%3D%20kubernetes%20AND%20project%20%3D%20%22Apache%20Fineract%22%20&#34;&gt;some open issues in JIRA with Kubernetes related enhancement ideas&lt;/a&gt; which you are welcome to contribute to.&lt;/p&gt; &#xA;&lt;h1&gt;INSTRUCTIONS: How to download Gradle wrapper&lt;/h1&gt; &#xA;&lt;p&gt;The file gradle/wrapper/gradle-wrapper.jar binary is checked into this projects Git source repository, but won&#39;t exist in your copy of the Fineract codebase if you downloaded a released source archive from apache.org. In that case, you need to download it using the commands below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget --no-check-certificate -P gradle/wrapper https://github.com/apache/fineract/raw/develop/gradle/wrapper/gradle-wrapper.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(or)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl --insecure -L https://github.com/apache/fineract/raw/develop/gradle/wrapper/gradle-wrapper.jar &amp;gt; gradle/wrapper/gradle-wrapper.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;INSTRUCTIONS: How to run Apache RAT (Release Audit Tool)&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Extract the archive file to your local directory.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./gradlew rat&lt;/code&gt;. A report will be generated under build/reports/rat/rat-report.txt&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;INSTRUCTIONS: How to enable External Message Broker (ActiveMQ or Apache Kafka)&lt;/h1&gt; &#xA;&lt;p&gt;There are two use-cases where external message broker is needed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;External Business Events / Reliable Event Framework&lt;/li&gt; &#xA; &lt;li&gt;Executing Partitioned Spring Batch Jobs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;External Events are business events, e.g.: &lt;code&gt;ClientCreated&lt;/code&gt;, which might be important for third party systems. Apache Fineract supports ActiveMQ (or other JMS compliant brokers) and Apache Kafka endpoints for sending out Business Events. By default, they are not emitted.&lt;/p&gt; &#xA;&lt;p&gt;In case of a large deployment with millions of accounts, the Close of Business Day Spring Batch job may run several hours. In order to speed up this task, remote partitioning of the job is supported. The Manager node partitions (breaks up) the COB job into smaller pieces (sub tasks) which then can be executed on multiple Worker nodes in parallel. The worker nodes are notified either by ActiveMQ or Kafka regarding their new sub tasks.&lt;/p&gt; &#xA;&lt;h3&gt;Active MQ&lt;/h3&gt; &#xA;&lt;p&gt;JMS based messaging is disabled by default. In &lt;code&gt;docker-compose-postgresql-activemq.yml&lt;/code&gt; an example is shown where ActiveMQ is enabled. In that configuration one Spring Batch Manager instance and two Spring Batch Worker instances are created. Spring based events should be disabled and jms based event handling should be enabled. Furthermore, proper broker JMS URL should be configured.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;      FINERACT_REMOTE_JOB_MESSAGE_HANDLER_JMS_ENABLED=true&#xA;      FINERACT_REMOTE_JOB_MESSAGE_HANDLER_SPRING_EVENTS_ENABLED=false&#xA;      FINERACT_REMOTE_JOB_MESSAGE_HANDLER_JMS_BROKER_URL=tcp://activemq:61616&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For additional ActiveMQ related configuration please take a look to the &lt;code&gt;application.properties&lt;/code&gt; where the supported configuration parameters are listed with their default values.&lt;/p&gt; &#xA;&lt;h3&gt;Kafka&lt;/h3&gt; &#xA;&lt;p&gt;Kafka support also disabled by default. In &lt;code&gt;docker-compose-postgresql-kafka.yml&lt;/code&gt; an example is shown where self-hosted Kafka is enabled for both External Events and Spring Batch Remote Job execution.&lt;/p&gt; &#xA;&lt;p&gt;During the development Fineract was tested with PLAINTEXT Kafka brokers without authentication and with AWS MSK using IAM authentication. The extra &lt;a href=&#34;https://github.com/aws/aws-msk-iam-auth/releases&#34;&gt;jar file&lt;/a&gt; required for IAM authentication is already added to the classpath. An example MSK setup can be found in &lt;code&gt;docker-compose-postgresql-kafka-msk.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The full list of supported Kafka related properties are documented here: &lt;a href=&#34;https://fineract.apache.org/docs/current/&#34;&gt;https://fineract.apache.org/docs/current/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Checkstyle and Spotless&lt;/h1&gt; &#xA;&lt;p&gt;This project enforces its code conventions using &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/config/checkstyle/checkstyle.xml&#34;&gt;checkstyle.xml&lt;/a&gt; through Checkstyle and &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/config/fineract-formatting-preferences.xml&#34;&gt;fineract-formatting-preferences.xml&lt;/a&gt; through Spotless. They are configured to run automatically during the normal Gradle build, and fail if there are any violations detected. You can run the following command to automatically fix spotless violations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;`./gradlew spotlessApply`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since some checks are present in both Checkstyle and Spotless, the same command can help you fix some of the Checkstyle violations (but not all, other Checkstyle violations need to fixed manually).&lt;/p&gt; &#xA;&lt;p&gt;You can also check for Spotless violations (only; but normally don&#39;t have to, because the regular build full already includes this anyway):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;`./gradlew spotlessCheck`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We recommend that you configure your favourite Java IDE to match those conventions. For Eclipse, you can go to Window &amp;gt; Java &amp;gt; Code Style and import our &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/config/fineractdev-formatter.xml&#34;&gt;config/fineractdev-formatter.xml&lt;/a&gt; under formatter section and &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/config/fineractdev-cleanup.xml&#34;&gt;config/fineractdev-cleanup.xml&lt;/a&gt; under Clean up section. The same fineractdev-formatter.xml configuration file (that can be used in Eclipse IDE) is also used by Spotless to both check for violations and autoformat code on the CLI. You could also use Checkstyle directly in your IDE (but you don&#39;t neccesarily have to, it may just be more convenient for you). For Eclipse, use &lt;a href=&#34;https://checkstyle.org/eclipse-cs/&#34;&gt;https://checkstyle.org/eclipse-cs/&lt;/a&gt; and load our checkstyle.xml into it, for IntelliJ you can use &lt;a href=&#34;https://plugins.jetbrains.com/plugin/1065-checkstyle-idea&#34;&gt;CheckStyle-IDEA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Code Coverage Reports&lt;/h1&gt; &#xA;&lt;p&gt;The project uses Jacoco to measure unit tests code coverage, to generate a report run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;`./gradlew clean build jacocoTestReport`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generated reports can be found in build/code-coverage directory.&lt;/p&gt; &#xA;&lt;h1&gt;Versions&lt;/h1&gt; &#xA;&lt;p&gt;The latest stable release can be viewed on the develop branch: &lt;a href=&#34;https://github.com/apache/fineract/tree/develop&#34; title=&#34;Latest Release&#34;&gt;Latest Release on Develop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The progress of this project can be viewed here: &lt;a href=&#34;https://github.com/apache/fineract/raw/develop/CHANGELOG.md&#34; title=&#34;Latest release change log&#34;&gt;View change log&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under Apache License Version 2.0. See &lt;a href=&#34;https://github.com/apache/incubator-fineract/raw/develop/LICENSE.md&#34;&gt;https://github.com/apache/incubator-fineract/blob/develop/LICENSE.md&lt;/a&gt; for reference.&lt;/p&gt; &#xA;&lt;p&gt;The Connector/J JDBC Driver client library from MariaDB.org, which is licensed under the LGPL, is used in development when running integration tests that use the Liquibase library. That JDBC driver is however not included in and distributed with the Fineract product and is not required to use the product. If you are developer and object to using the LGPL licensed Connector/J JDBC driver, simply do not run the integration tests that use the Liquibase library and/or use another JDBC driver. As discussed in &lt;a href=&#34;https://issues.apache.org/jira/browse/LEGAL-462&#34;&gt;LEGAL-462&lt;/a&gt;, this project therefore complies with the &lt;a href=&#34;https://www.apache.org/legal/resolved.html&#34;&gt;Apache Software Foundation third-party license policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;&lt;br&gt;APACHE FINERACT PLATFORM API&lt;/h1&gt; &#xA;&lt;p&gt;The API for Fineract is documented in &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/fineract-provider/src/main/resources/static/api-docs/apiLive.htm&#34;&gt;apiLive.htm&lt;/a&gt;, and the &lt;a href=&#34;https://fineract.apache.org/legacy-docs/apiLive.htm&#34; title=&#34;API Documentation&#34;&gt;apiLive.htm can be viewed on Fineract.dev&lt;/a&gt;. If you have your own Fineract instance running, you can find this documentation under &lt;a href=&#34;https://localhost:8443/fineract-provider/api-docs/apiLive.htm&#34;&gt;/fineract-provider/api-docs/apiLive.htm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Swagger documentation (work in progress; see &lt;a href=&#34;https://issues.apache.org/jira/browse/FINERACT-733&#34;&gt;FINERACT-733&lt;/a&gt;) can be accessed under &lt;a href=&#34;https://localhost:8443/fineract-provider/swagger-ui/index.html&#34;&gt;/fineract-provider/swagger-ui/index.html&lt;/a&gt; and &lt;a href=&#34;https://demo.fineract.dev/fineract-provider/swagger-ui/index.html&#34;&gt;live Swagger UI here on Fineract.dev&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Apache Fineract supports client code generation using &lt;a href=&#34;https://github.com/swagger-api/swagger-codegen&#34;&gt;Swagger Codegen&lt;/a&gt; based on the &lt;a href=&#34;https://swagger.io/specification/&#34;&gt;OpenAPI Specification&lt;/a&gt;. For more instructions on how to generate the client code, check &lt;a href=&#34;https://raw.githubusercontent.com/apache/fineract/develop/docs/developers/swagger/client.md&#34;&gt;docs/developers/swagger/client.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;API CLIENTS (Web UIs, Mobile, etc.)&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openMF/community-app/&#34;&gt;https://github.com/openMF/community-app/&lt;/a&gt; is the &#34;traditional&#34; Reference Client App Web UI for the API offered by this project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openMF/web-app&#34;&gt;https://github.com/openMF/web-app&lt;/a&gt; is the next generation UI rewrite also using this project&#39;s API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openMF/android-client&#34;&gt;https://github.com/openMF/android-client&lt;/a&gt; is an Android Mobile App client for this project&#39;s API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openMF&#34;&gt;https://github.com/openMF&lt;/a&gt; has more related proejcts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;br&gt;ONLINE DEMOS&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.fineract.dev&#34;&gt;fineract.dev&lt;/a&gt; always runs the latest version of this code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://demo.mifos.io&#34;&gt;demo.mifos.io&lt;/a&gt; A demo account is provided for users to experience the functionality of the Community App. Users can use &#34;mifos&#34; for USERNAME and &#34;password&#34; for PASSWORD (without quotation marks).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=FlVd-0YAo6c&#34;&gt;Swagger-UI Demo video&lt;/a&gt; This is a demo video for Swagger-UI documentation, more information &lt;a href=&#34;https://github.com/apache/fineract#swagger-ui-documentation&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;&lt;br&gt;DEVELOPERS&lt;/h1&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://cwiki.apache.org/confluence/display/FINERACT/Contributor%27s+Zone&#34;&gt;https://cwiki.apache.org/confluence/display/FINERACT/Contributor%27s+Zone&lt;/a&gt; for the developers wiki page.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://cwiki.apache.org/confluence/display/FINERACT/Fineract+101&#34;&gt;https://cwiki.apache.org/confluence/display/FINERACT/Fineract+101&lt;/a&gt; for the first-time contribution to this project.&lt;/p&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://cwiki.apache.org/confluence/display/FINERACT/How-to+articles&#34;&gt;https://cwiki.apache.org/confluence/display/FINERACT/How-to+articles&lt;/a&gt; for technical details to get started.&lt;/p&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://issues.apache.org/jira/secure/Dashboard.jspa?selectPageId=12335824&#34;&gt;our JIRA Dashboard&lt;/a&gt; to find issues to work on, see what others are working on, or open new issues.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;VIDEO DEMONSTRATION&lt;/h1&gt; &#xA;&lt;p&gt;Apache Fineract / Mifos X Demo (November 2016) - &lt;a href=&#34;https://www.youtube.com/watch?v=h61g9TptMBo&#34;&gt;https://www.youtube.com/watch?v=h61g9TptMBo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;SWAGGER UI DEMONSTRATION&lt;/h1&gt; &#xA;&lt;p&gt;We use Swagger-UI to generate and maintain our API documentation, you can see the demo video &lt;a href=&#34;https://www.youtube.com/watch?v=FlVd-0YAo6c&#34;&gt;here&lt;/a&gt; or a live version &lt;a href=&#34;https://demo.fineract.dev/fineract-provider/swagger-ui/index.html&#34;&gt;here&lt;/a&gt;. If you interested to know more about Swagger-UI you can check their &lt;a href=&#34;https://swagger.io/&#34;&gt;website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;br&gt;GORVENANCE AND POLICIES&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cwiki.apache.org/confluence/display/FINERACT/Becoming+a+Committer&#34;&gt;Becoming a Committer&lt;/a&gt; documents the process through which you can become a committer in this project.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;br&gt;ERROR HANDLING GUIDELINES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When catching exceptions, either rethrow them, or log them. Either way, include the root cause by using &lt;code&gt;catch (SomeException e)&lt;/code&gt; and then either &lt;code&gt;throw AnotherException(&#34;..details..&#34;, e)&lt;/code&gt; or &lt;code&gt;LOG.error(&#34;...context...&#34;, e)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Completely empty catch blocks are VERY suspicous! Are you sure that you want to just &#34;swallow&#34; an exception? Really, 100% totally absolutely sure?? ;-) Such &#34;normal exceptions which just happen sometimes but are actually not really errors&#34; are almost always a bad idea, can be a performance issue, and typically are an indication of another problem - e.g. the use of a wrong API which throws an Exception for an expected condition, when really you would want to use another API that instead returns something empty or optional.&lt;/li&gt; &#xA; &lt;li&gt;In tests, you&#39;ll typically never catch exceptions, but just propagate them, with &lt;code&gt;@Test void testXYZ() throws SomeException, AnotherException&lt;/code&gt;..., so that the test fails if the exception happens. Unless you actually really want to test for the occurence of a problem - in that case, use &lt;a href=&#34;https://github.com/junit-team/junit4/wiki/Exception-testing&#34;&gt;JUnit&#39;s Assert.assertThrows()&lt;/a&gt; (but not &lt;code&gt;@Test(expected = SomeException.class)&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Never catch &lt;code&gt;NullPointerException&lt;/code&gt; &amp;amp; Co.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;br&gt;LOGGING GUIDELINES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We use &lt;a href=&#34;http://www.slf4j.org&#34;&gt;SLF4J&lt;/a&gt; as our logging API.&lt;/li&gt; &#xA; &lt;li&gt;Never, ever, use &lt;code&gt;System.out&lt;/code&gt; and &lt;code&gt;System.err&lt;/code&gt; or &lt;code&gt;printStackTrace()&lt;/code&gt; anywhere, but always &lt;code&gt;LOG.info()&lt;/code&gt; or &lt;code&gt;LOG.error()&lt;/code&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;Use placeholder (&lt;code&gt;LOG.error(&#34;Could not... details: {}&#34;, something, exception)&lt;/code&gt;) and never String concatenation (&lt;code&gt;LOG.error(&#34;Could not... details: &#34; + something, exception)&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Which Log Level is appropriate? &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;LOG.error()&lt;/code&gt; should be used to inform an &#34;operator&#34; running Fineract who supervises error logs of an unexpected condition. This includes technical problems with an external &#34;environment&#34; (e.g. can&#39;t reach a database), and situations which are likely bugs which need to be fixed in the code. They do NOT include e.g. validation errors for incoming API requests - that is signaled through the API response - and does (should) not be logged as an error. (Note that there is no &lt;em&gt;FATAL&lt;/em&gt; level in SLF4J; a &#34;FATAL&#34; event should just be logged as an &lt;em&gt;ERROR&lt;/em&gt;.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;LOG.warn()&lt;/code&gt; should be using sparingly. Make up your mind if it&#39;s an error (above) - or not!&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;LOG.info()&lt;/code&gt; can be used notably for one-time actions taken during start-up. It should typically NOT be used to print out &#34;regular&#34; application usage information. The default logging configuration always outputs the application INFO logs, and in production under load, there&#39;s really no point to constantly spew out lots of information from frequently traversed paths in the code about what&#39;s going on. (Metrics are a better way.) &lt;code&gt;LOG.info()&lt;/code&gt; &lt;em&gt;can&lt;/em&gt; be used freely in tests though.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;LOG.debug()&lt;/code&gt; can be used anywhere in the code to log things that may be useful during investigations of specific problems. They are not shown in the default logging configuration, but can be enabled for troubleshooting. Developers should typically &#34;turn down&#34; most &lt;code&gt;LOG.info()&lt;/code&gt; which they used while writing a new feature to &#34;follow along what happens during local testing&#34; to &lt;code&gt;LOG.debug()&lt;/code&gt; for production before we merge their PRs.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;LOG.trace()&lt;/code&gt; is not used in Fineract.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pull Requests&lt;/h2&gt; &#xA;&lt;p&gt;We request that your commit message include a FINERACT JIRA issue, recommended to be put in parentheses at the end of the first line. Start with an upper case imperative verb (not past form), and a short but concise clear description. (E.g. &lt;em&gt;Add enforced HideUtilityClassConstructor checkstyle (FINERACT-821)&lt;/em&gt; or &lt;em&gt;Fix inability to reschedule when interest accrued larger than EMI (FINERACT-1109)&lt;/em&gt; etc.).&lt;/p&gt; &#xA;&lt;p&gt;If your PR is failing to pass our CI build due to a test failure, then:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Understand if the failure is due to your PR or an unrelated unstable test.&lt;/li&gt; &#xA; &lt;li&gt;If you suspect it is because of a &#34;flaky&#34; test, and not due to a change in your PR, then please do not simply wait for an active maintainer to come and help you, but instead be a proactive contributor to the project - see next steps. Do understand that we may not review PRs that are not green - it is the contributor&#39;s (that&#39;s you!) responsability to get a proposed PR to pass the build, not primarily the maintainers.&lt;/li&gt; &#xA; &lt;li&gt;Search for the name of the failed test on &lt;a href=&#34;https://issues.apache.org/jira/&#34;&gt;https://issues.apache.org/jira/&lt;/a&gt;, e.g. for &lt;code&gt;AccountingScenarioIntegrationTest&lt;/code&gt; you would find &lt;a href=&#34;https://issues.apache.org/jira/browse/FINERACT-899&#34;&gt;FINERACT-899&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you happen to read in such bugs that tests were just recently fixed, or ignored, then rebase your PR to pick up that change.&lt;/li&gt; &#xA; &lt;li&gt;If you find previous comments &#34;proving&#34; that the same test has arbitrarily failed in at least 3 past PRs, then please do yourself raise a small separate new PR proposing to add an &lt;code&gt;@Disabled // TODO FINERACT-123&lt;/code&gt; to the respective unstable test (e.g. &lt;a href=&#34;https://github.com/apache/fineract/pull/774&#34;&gt;#774&lt;/a&gt;) with the commit message mentioning said JIRA, as always. (Please do NOT just &lt;code&gt;@Disabled&lt;/code&gt; any existing tests mixed in as part of your larger PR.)&lt;/li&gt; &#xA; &lt;li&gt;If there is no existing JIRA for the test, then first please evaluate whether the failure couldn&#39;t be a (perhaps strange) impact of the change you are proposing after all. If it&#39;s not, then please raise a new JIRA to document the suspected Flaky Test, and link it to &lt;a href=&#34;https://issues.apache.org/jira/browse/FINERACT-850&#34;&gt;FINERACT-850&lt;/a&gt;. This will allow the next person coming along hitting the same test failure to easily find it, and eventually propose to ignore the unstable test.&lt;/li&gt; &#xA; &lt;li&gt;Then (only) Close and Reopen your PR, which will cause a new build, to see if it passes.&lt;/li&gt; &#xA; &lt;li&gt;Of course, we very much appreciate you then jumping onto any such bugs and helping us figure out how to fix all ignored tests!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cwiki.apache.org/confluence/display/FINERACT/Pull+Request+Size+Limit&#34;&gt;Pull Request Size Limit&lt;/a&gt; documents that we cannot accept huge &#34;code dump&#34; Pull Requests, with some related suggestions.&lt;/p&gt; &#xA;&lt;p&gt;Guideline for new Feature commits involving Refactoring: If you are submitting PR for a new Feature, and it involves refactoring, try to differentiate &#34;new Feature code&#34; with &#34;Refactored&#34; by placing them in different commits. This helps review to review your code faster.&lt;/p&gt; &#xA;&lt;p&gt;We have an automated Bot which marks pull requests as &#34;stale&#34; after a while, and ultimately automatically closes them.&lt;/p&gt; &#xA;&lt;h2&gt;Merge Strategy&lt;/h2&gt; &#xA;&lt;p&gt;This project&#39;s committers typically prefer to bring your Pull Requests in through &lt;em&gt;Rebase and Merge&lt;/em&gt; instead of &lt;em&gt;Create a Merge Commit&lt;/em&gt;. (If you are unfamiliar with GitHub&#39;s UI re. this, note the somewhat hidden little triangle drop-down at the bottom of PR, visible only to committers, not contributors.) This avoids the &#34;merge commits&#34; which we consider to be somewhat &#34;polluting&#34; the projects commits log history view. We understand this doesn&#39;t give an easy automatic reference to the original PR (which GitHub automatically adds to the Merge Commit message it generates), but we consider this an only very minor inconvenience; it&#39;s typically relatively easy to find the original PR even just from the commit message, and JIRA.&lt;/p&gt; &#xA;&lt;p&gt;We expect most proposed PRs to typically consist of a single commit. Committers may use &lt;em&gt;Squash and merge&lt;/em&gt; to combine your commits at merge time, and if they do so will rewrite your commit message as they see fit.&lt;/p&gt; &#xA;&lt;p&gt;Neither of these two are hard absolute rules, but mere conventions. Multiple commits in single PR make sense in certain cases (e.g. branch backports).&lt;/p&gt; &#xA;&lt;h2&gt;Dependency Upgrades&lt;/h2&gt; &#xA;&lt;p&gt;This project uses a number of 3rd-party libraries, and this section provides some guidance for their updates. We have set-up &lt;a href=&#34;https://renovate.whitesourcesoftware.com&#34;&gt;Renovate&#39;s bot&lt;/a&gt; to automatically raise Pull Requests for our review when new dependencies are available &lt;a href=&#34;https://issues.apache.org/jira/browse/FINERACT-962&#34;&gt;FINERACT-962&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Upgrades sometimes require package name changes. Changed code should ideally have test coverage.&lt;/p&gt; &#xA;&lt;p&gt;Our &lt;code&gt;ClasspathHellDuplicatesCheckRuleTest&lt;/code&gt; detects classes that appear in more than 1 JAR. If a version bump in &lt;a href=&#34;https://github.com/search?q=repo%3Aapache%2Ffineract+filename%3Abuild.gradle&amp;amp;type=Code&amp;amp;ref=advsearch&amp;amp;l=&amp;amp;l=&#34;&gt;&lt;code&gt;build.gradle&lt;/code&gt;&lt;/a&gt; causes changes in transitives dependencies, then you may have to add related &lt;code&gt;exclude&lt;/code&gt; to our &lt;a href=&#34;https://github.com/apache/fineract/search?q=dependencies.gradle&#34;&gt;&lt;code&gt;dependencies.gradle&lt;/code&gt;&lt;/a&gt;. Running &lt;code&gt;./gradlew dependencies&lt;/code&gt; helps to understand what is required.&lt;/p&gt; &#xA;&lt;h1&gt;More Information&lt;/h1&gt; &#xA;&lt;p&gt;More details of the project can be found at &lt;a href=&#34;https://cwiki.apache.org/confluence/display/FINERACT&#34;&gt;https://cwiki.apache.org/confluence/display/FINERACT&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>