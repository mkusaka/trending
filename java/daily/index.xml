<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-08T01:33:28Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Hakky54/certificate-ripper</title>
    <updated>2023-11-08T01:33:28Z</updated>
    <id>tag:github.com,2023-11-08:/Hakky54/certificate-ripper</id>
    <link href="https://github.com/Hakky54/certificate-ripper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üîê A CLI tool to extract server certificates&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/Hakky54/certificate-ripper/actions&#34;&gt;&lt;img src=&#34;https://github.com/Hakky54/certificate-ripper/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=io.github.hakky54%3Acertificate-ripper&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=io.github.hakky54%3Acertificate-ripper&amp;amp;metric=security_rating&#34; alt=&#34;Security Rating&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=io.github.hakky54%3Acertificate-ripper&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=io.github.hakky54%3Acertificate-ripper&amp;amp;metric=coverage&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Hakky54/sslcontext-kickstart/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Aache2.0-blue.svg?sanitize=true&#34; alt=&#34;Apache2 license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://seladb.github.io/StarTrack-js/#/preload?r=hakky54,certificate-ripper&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/github%20stars-chart-blue.svg?sanitize=true&#34; alt=&#34;GitHub stars chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=io.github.hakky54%3Acertificate-ripper&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/images/project_badges/sonarcloud-white.svg?sanitize=true&#34; alt=&#34;SonarCloud&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Certificate Ripper üîê&lt;/h1&gt; &#xA;&lt;p&gt;A CLI tool to extract server certificates&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Hakky54/certificate-ripper/raw/master/images/demo.gif?raw=true&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Advantages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It is fast&lt;/li&gt; &#xA; &lt;li&gt;Easy to use&lt;/li&gt; &#xA; &lt;li&gt;No openssl required&lt;/li&gt; &#xA; &lt;li&gt;Runs on any Operating System&lt;/li&gt; &#xA; &lt;li&gt;Can be used with or without Java, native executables are present in the releases&lt;/li&gt; &#xA; &lt;li&gt;Extracts all the sub-fields of the certificate&lt;/li&gt; &#xA; &lt;li&gt;Certificates can be formatted to PEM format&lt;/li&gt; &#xA; &lt;li&gt;Bulk extraction of multiple different urls with a single command is possible&lt;/li&gt; &#xA; &lt;li&gt;Extracted certificates can be stored automatically into a p12 truststore&lt;/li&gt; &#xA; &lt;li&gt;Works also behind a proxy&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing &amp;amp; Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Mac OS X - Homebrew üç∫&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew tap hakky54/crip&#xA;brew install crip&#xA;crip print --url=https://stackoverflow.com/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest binary here: &lt;a href=&#34;https://github.com/Hakky54/certificate-ripper/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extract the compressed file&lt;/li&gt; &#xA; &lt;li&gt;Start cmd and &lt;code&gt;cd&lt;/code&gt; to the extracted file&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;start /b &#34;&#34; &#34;crip.exe&#34; print --url=https://stackoverflow.com/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;h4&gt;From Source&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest binary here: &lt;a href=&#34;https://github.com/Hakky54/certificate-ripper/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extract the compressed file&lt;/li&gt; &#xA; &lt;li&gt;Add the reference to your environment variables: &lt;code&gt;export CRIP_HOME=/path/to/crip/binary&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;crip print --url=https://stackoverflow.com/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Contributed/Unofficial Installation Methods&lt;/h4&gt; &#xA;&lt;h5&gt;Arch-Linux (AUR)&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://aur.archlinux.org/packages/certificate-ripper-bin&#34;&gt;certificate-ripper-bin&lt;/a&gt; AUR package&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;crip print --url=https://stackoverflow.com/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Using Executable JAR&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Minimum requirements:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Java 8&lt;/li&gt; &#xA; &lt;li&gt;A terminal&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest JAR here: &lt;a href=&#34;https://github.com/Hakky54/certificate-ripper/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run it with &lt;code&gt;java -jar crip.jar print --url=https://youtube.com/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;CLI Options&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Usage: crip [COMMAND]&#xA;Commands:&#xA;  print             Prints the extracted certificates to the console&#xA;  export p12        Export the extracted certificate to a PKCS12/p12 type truststore&#xA;  export jks        Export the extracted certificate to a JKS (Java KeyStore) type truststore&#xA;  export der        Export the extracted certificate to a binary form also known as DER&#xA;  export pem        Export the extracted certificate to a base64 encoded string also known as PEM&#xA;  &#xA;Usage: crip print&#xA;Prints the extracted certificates to the console&#xA;  -f, --format              To be printed certificate format. This option is not required. Default is human-readable.&#xA;  -u, --url                 Url of the target server to extract the certificates. Can be provided multiple times.&#xA;&#xA;Usage: crip export pkcs12&#xA;Export the extracted certificate to a PKCS12/p12 type truststore&#xA;  -p, --password            TrustStore password. This option is not required. Default is changeit.&#xA;  -u, --url                 Url of the target server to extract the certificates. Can be provided multiple times.&#xA;  -d, --destination         Destination of the to be stored file. Default is current directory if none is provided.&#xA;      &#xA;Usage: crip export der&#xA;Export the extracted certificate to a binary form also known as DER&#xA;  -u, --url                 Url of the target server to extract the certificates. Can be provided multiple times.&#xA;  -c, --combined            Indicator to either combine all of the certificate into one file for a given url or export into individual files.&#xA;  -d, --destination         Destination of the to be stored file. Default is current directory if none is provided.&#xA;&#xA;Usage: crip export pem&#xA;Export the extracted certificate to a base64 encoded string also known as PEM&#xA;  -u, --url                 Url of the target server to extract the certificates. Can be provided multiple times.&#xA;  -c, --combined            Indicator to either combine all of the certificate into one file for a given url or export into individual files.&#xA;  -d, --destination         Destination of the to be stored file. Default is current directory if none is provided.&#xA;      --include-header      Indicator to either omit or include additional information above the BEGIN statement.&#xA;      &#xA;Proxy options applicable for all commands&#xA;      --proxy-host          Proxy host&#xA;      --proxy-port          Proxy port&#xA;      --proxy-password      Password for authenticating the user for the given proxy&#xA;      --proxy-user          User for authenticating the user for the given proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example usages&lt;/h2&gt; &#xA;&lt;h3&gt;Single export&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip export pkcs12 -u=https://github.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bulk export&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip export pkcs12 \&#xA;-u=https://youtube.com \&#xA;-u=https://github.com \&#xA;-u=https://stackoverflow.com \&#xA;-u=https://facebook.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Specify custom truststore destination path&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip export pkcs12 -u=https://github.com -d=/path/to/directory&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Print in human-readable format&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip print -u=https://github.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Print in PEM format&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip print -u=https://github.com -f=pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Batch print in PEM format&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip print -f=pem \&#xA;-u=https://youtube.com \&#xA;-u=https://github.com \&#xA;-u=https://stackoverflow.com \&#xA;-u=https://facebook.com&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Extracting behind a proxy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip print -u=https://stackoverflow.com --proxy-host=my-host.com --proxy-port=1234 --proxy-user=foo --proxy-password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Combining certificates&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip export pem -u=https://github.com --combined=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Defining custom file name&lt;/h3&gt; &#xA;&lt;p&gt;Works only with the combined option while only specifying a single url.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;crip export pem -u=https://github.com --combined=true --destionation=/path/to/export/github-chain.crt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;There are plenty of ways to contribute to this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Give it a star&lt;/li&gt; &#xA; &lt;li&gt;Share it with a &lt;a href=&#34;https://twitter.com/intent/tweet?text=Easily%20extract%20server%20certificates&amp;amp;url=https://github.com/Hakky54/certificate-ripper&amp;amp;via=hakky541&amp;amp;hashtags=certificate,security,https,ssl,tls,developer,java&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Submit a PR&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>