<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-03T02:23:39Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>prometheus/jmx_exporter</title>
    <updated>2023-03-03T02:23:39Z</updated>
    <id>tag:github.com,2023-03-03:/prometheus/jmx_exporter</id>
    <link href="https://github.com/prometheus/jmx_exporter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A process for exposing JMX Beans via HTTP for Prometheus consumption&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JMX Exporter&lt;/h1&gt; &#xA;&lt;p&gt;JMX to Prometheus exporter: a collector that can configurably scrape and expose mBeans of a JMX target.&lt;/p&gt; &#xA;&lt;p&gt;This exporter is intended to be run as a Java Agent, exposing a HTTP server and serving metrics of the local JVM. It can be also run as a standalone HTTP server and scrape remote JMX targets, but this has various disadvantages, such as being harder to configure and being unable to expose process metrics (e.g., memory and CPU usage). Running the exporter as a Java Agent is thus strongly encouraged.&lt;/p&gt; &#xA;&lt;h2&gt;Running the Java Agent&lt;/h2&gt; &#xA;&lt;p&gt;The Java agent is available in two versions with identical functionality:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.17.2/jmx_prometheus_javaagent-0.17.2.jar&#34;&gt;jmx_prometheus_javaagent-0.17.2.jar&lt;/a&gt; requires Java &amp;gt;= 7.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent_java6/0.17.2/jmx_prometheus_javaagent_java6-0.17.2.jar&#34;&gt;jmx_prometheus_javaagent-0.17.2_java6.jar&lt;/a&gt; is compatible with Java 6.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both versions are built from the same code and differ only in the versions of the bundled dependencies.&lt;/p&gt; &#xA;&lt;p&gt;To run as a Java agent, download one of the JARs and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java -javaagent:./jmx_prometheus_javaagent-0.17.2.jar=12345:config.yaml -jar yourJar.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Metrics will now be accessible at &lt;a href=&#34;http://localhost:12345/metrics&#34;&gt;http://localhost:12345/metrics&lt;/a&gt;. To bind the java agent to a specific IP change the port number to &lt;code&gt;host:port&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;A minimal &lt;code&gt;config.yaml&lt;/code&gt; looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;rules:&#xA;- pattern: &#34;.*&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example configurations can be found in the &lt;code&gt;example_configs/&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;Running the Standalone HTTP Server&lt;/h2&gt; &#xA;&lt;p&gt;The HTTP server is available in two versions with identical functionality:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_httpserver/0.17.2/jmx_prometheus_httpserver-0.17.2.jar&#34;&gt;jmx_prometheus_httpserver-0.17.2.jar&lt;/a&gt; requires Java &amp;gt;= 7.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_httpserver_java6/0.17.2/jmx_prometheus_httpserver_java6-0.17.2.jar&#34;&gt;jmx_prometheus_httpserver-0.17.2_java6.jar&lt;/a&gt; is compatible with Java 6.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both versions are built from the same code and differ only in the versions of the bundled dependencies.&lt;/p&gt; &#xA;&lt;p&gt;To run the standalone HTTP server, download one of the JARs and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java -jar jmx_prometheus_httpserver-0.17.2.jar 12345 config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Metrics will now be accessible at &lt;a href=&#34;http://localhost:12345/metrics&#34;&gt;http://localhost:12345/metrics&lt;/a&gt;. To bind the java agent to a specific IP change the port number to &lt;code&gt;host:port&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The standalone HTTP server will read JMX remotely over the network. Therefore, you need to specify either &lt;code&gt;hostPort&lt;/code&gt; or &lt;code&gt;jmxUrl&lt;/code&gt; in &lt;code&gt;config.yaml&lt;/code&gt; to tell the HTTP server where the JMX beans can be accessed.&lt;/p&gt; &#xA;&lt;p&gt;A minimal &lt;code&gt;config.yaml&lt;/code&gt; looks like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;hostPort: localhost:9999&#xA;rules:&#xA;- pattern: &#34;.*&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As stated above, it is recommended to run JMX exporter as a Java agent and not as a standalone HTTP server.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;./mvnw package&lt;/code&gt; to build.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The configuration is in YAML. An example with all possible options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---&#xA;startDelaySeconds: 0&#xA;hostPort: 127.0.0.1:1234&#xA;username: &#xA;password: &#xA;jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:1234/jmxrmi&#xA;ssl: false&#xA;lowercaseOutputName: false&#xA;lowercaseOutputLabelNames: false&#xA;whitelistObjectNames: [&#34;org.apache.cassandra.metrics:*&#34;]&#xA;blacklistObjectNames: [&#34;org.apache.cassandra.metrics:type=ColumnFamily,*&#34;]&#xA;rules:&#xA;  - pattern: &#39;org.apache.cassandra.metrics&amp;lt;type=(\w+), name=(\w+)&amp;gt;&amp;lt;&amp;gt;Value: (\d+)&#39;&#xA;    name: cassandra_$1_$2&#xA;    value: $3&#xA;    valueFactor: 0.001&#xA;    labels: {}&#xA;    help: &#34;Cassandra metric $1 $2&#34;&#xA;    cache: false&#xA;    type: GAUGE&#xA;    attrNameSnakeCase: false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;startDelaySeconds&lt;/td&gt; &#xA;   &lt;td&gt;start delay before serving requests. Any requests within the delay period will result in an empty metrics set.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hostPort&lt;/td&gt; &#xA;   &lt;td&gt;The host and port to connect to via remote JMX. If neither this nor jmxUrl is specified, will talk to the local JVM.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;username&lt;/td&gt; &#xA;   &lt;td&gt;The username to be used in remote JMX password authentication.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;password&lt;/td&gt; &#xA;   &lt;td&gt;The password to be used in remote JMX password authentication.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;jmxUrl&lt;/td&gt; &#xA;   &lt;td&gt;A full JMX URL to connect to. Should not be specified if hostPort is.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ssl&lt;/td&gt; &#xA;   &lt;td&gt;Whether JMX connection should be done over SSL. To configure certificates you have to set following system properties:&lt;br&gt;&lt;code&gt;-Djavax.net.ssl.keyStore=/home/user/.keystore&lt;/code&gt;&lt;br&gt;&lt;code&gt;-Djavax.net.ssl.keyStorePassword=changeit&lt;/code&gt;&lt;br&gt;&lt;code&gt;-Djavax.net.ssl.trustStore=/home/user/.truststore&lt;/code&gt;&lt;br&gt;&lt;code&gt;-Djavax.net.ssl.trustStorePassword=changeit&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lowercaseOutputName&lt;/td&gt; &#xA;   &lt;td&gt;Lowercase the output metric name. Applies to default format and &lt;code&gt;name&lt;/code&gt;. Defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;lowercaseOutputLabelNames&lt;/td&gt; &#xA;   &lt;td&gt;Lowercase the output metric label names. Applies to default format and &lt;code&gt;labels&lt;/code&gt;. Defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;whitelistObjectNames&lt;/td&gt; &#xA;   &lt;td&gt;A list of &lt;a href=&#34;http://docs.oracle.com/javase/6/docs/api/javax/management/ObjectName.html&#34;&gt;ObjectNames&lt;/a&gt; to query. Defaults to all mBeans.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;blacklistObjectNames&lt;/td&gt; &#xA;   &lt;td&gt;A list of &lt;a href=&#34;http://docs.oracle.com/javase/6/docs/api/javax/management/ObjectName.html&#34;&gt;ObjectNames&lt;/a&gt; to not query. Takes precedence over &lt;code&gt;whitelistObjectNames&lt;/code&gt;. Defaults to none.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rules&lt;/td&gt; &#xA;   &lt;td&gt;A list of rules to apply in order, processing stops at the first matching rule. Attributes that aren&#39;t matched aren&#39;t collected. If not specified, defaults to collecting everything in the default format.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pattern&lt;/td&gt; &#xA;   &lt;td&gt;Regex pattern to match against each bean attribute. The pattern is not anchored. Capture groups can be used in other options. Defaults to matching everything.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;attrNameSnakeCase&lt;/td&gt; &#xA;   &lt;td&gt;Converts the attribute name to snake case. This is seen in the names matched by the pattern and the default format. For example, anAttrName to an_attr_name. Defaults to false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;name&lt;/td&gt; &#xA;   &lt;td&gt;The metric name to set. Capture groups from the &lt;code&gt;pattern&lt;/code&gt; can be used. If not specified, the default format will be used. If it evaluates to empty, processing of this attribute stops with no output.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;value&lt;/td&gt; &#xA;   &lt;td&gt;Value for the metric. Static values and capture groups from the &lt;code&gt;pattern&lt;/code&gt; can be used. If not specified the scraped mBean value will be used.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;valueFactor&lt;/td&gt; &#xA;   &lt;td&gt;Optional number that &lt;code&gt;value&lt;/code&gt; (or the scraped mBean value if &lt;code&gt;value&lt;/code&gt; is not specified) is multiplied by, mainly used to convert mBean values from milliseconds to seconds.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;labels&lt;/td&gt; &#xA;   &lt;td&gt;A map of label name to label value pairs. Capture groups from &lt;code&gt;pattern&lt;/code&gt; can be used in each. &lt;code&gt;name&lt;/code&gt; must be set to use this. Empty names and values are ignored. If not specified and the default format is not being used, no labels are set.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;help&lt;/td&gt; &#xA;   &lt;td&gt;Help text for the metric. Capture groups from &lt;code&gt;pattern&lt;/code&gt; can be used. &lt;code&gt;name&lt;/code&gt; must be set to use this. Defaults to the mBean attribute description, domain, and name of the attribute.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cache&lt;/td&gt; &#xA;   &lt;td&gt;Whether to cache bean name expressions to rule computation (match and mismatch). Not recommended for rules matching on bean value, as only the value from the first scrape will be cached and re-used. This can increase performance when collecting a lot of mbeans. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;type&lt;/td&gt; &#xA;   &lt;td&gt;The type of the metric, can be &lt;code&gt;GAUGE&lt;/code&gt;, &lt;code&gt;COUNTER&lt;/code&gt; or &lt;code&gt;UNTYPED&lt;/code&gt;. &lt;code&gt;name&lt;/code&gt; must be set to use this. Defaults to &lt;code&gt;UNTYPED&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Metric names and label names are sanitized. All characters other than &lt;code&gt;[a-zA-Z0-9:_]&lt;/code&gt; are replaced with underscores, and adjacent underscores are collapsed. There&#39;s no limitations on label values or the help text.&lt;/p&gt; &#xA;&lt;p&gt;A minimal config is &lt;code&gt;{}&lt;/code&gt;, which will connect to the local JVM and collect everything in the default format. Note that the scraper always processes all mBeans, even if they&#39;re not exported.&lt;/p&gt; &#xA;&lt;p&gt;Example configurations for javaagents can be found at &lt;a href=&#34;https://github.com/prometheus/jmx_exporter/tree/master/example_configs&#34;&gt;https://github.com/prometheus/jmx_exporter/tree/master/example_configs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Pattern input&lt;/h3&gt; &#xA;&lt;p&gt;The format of the input matches against the pattern is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;domain&amp;lt;beanpropertyName1=beanPropertyValue1, beanpropertyName2=beanPropertyValue2, ...&amp;gt;&amp;lt;key1, key2, ...&amp;gt;attrName: value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Part&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;domain&lt;/td&gt; &#xA;   &lt;td&gt;Bean name. This is the part before the colon in the JMX object name.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;beanPropertyName/Value&lt;/td&gt; &#xA;   &lt;td&gt;Bean properties. These are the key/values after the colon in the JMX object name.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;keyN&lt;/td&gt; &#xA;   &lt;td&gt;If composite or tabular data is encountered, the name of the attribute is added to this list.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;attrName&lt;/td&gt; &#xA;   &lt;td&gt;The name of the attribute. For tabular data, this will be the name of the column. If &lt;code&gt;attrNameSnakeCase&lt;/code&gt; is set, this will be converted to snake case.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;value&lt;/td&gt; &#xA;   &lt;td&gt;The value of the attribute.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;No escaping or other changes are made to these values, with the exception of if &lt;code&gt;attrNameSnakeCase&lt;/code&gt; is set. The default help includes this string, except for the value.&lt;/p&gt; &#xA;&lt;h3&gt;Default format&lt;/h3&gt; &#xA;&lt;p&gt;The default format will transform beans in a way that should produce sane metrics in most cases. It is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;domain_beanPropertyValue1_key1_key2_...keyN_attrName{beanpropertyName2=&#34;beanPropertyValue2&#34;, ...}: value&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a given part isn&#39;t set, it&#39;ll be excluded.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;The JMX exporter uses &lt;a href=&#34;https://www.testcontainers.org/&#34;&gt;Testcontainers&lt;/a&gt; to run tests with different Java versions. You need to have Docker installed to run these tests.&lt;/p&gt; &#xA;&lt;p&gt;You can run the tests with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./mvnw verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;p&gt;You can start the jmx&#39;s scraper in standalone mode in order to debug what is called&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/prometheus/jmx_exporter.git&#xA;cd jmx_exporter&#xA;./mvnw package&#xA;java -cp collector/target/collector*.jar  io.prometheus.jmx.JmxScraper  service:jmx:rmi:your_url&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get finer logs (including the duration of each jmx call), create a file called logging.properties with this content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;handlers=java.util.logging.ConsoleHandler&#xA;java.util.logging.ConsoleHandler.level=ALL&#xA;io.prometheus.jmx.level=ALL&#xA;io.prometheus.jmx.shaded.io.prometheus.jmx.level=ALL&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the following flag to your Java invocation:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-Djava.util.logging.config.file=/path/to/logging.properties&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;A Debian binary package is created as part of the build process and it can be used to install an executable into &lt;code&gt;/usr/bin/jmx_exporter&lt;/code&gt; with configuration in &lt;code&gt;/etc/jmx_exporter/jmx_exporter.yaml&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SPLWare/esProc</title>
    <updated>2023-03-03T02:23:39Z</updated>
    <id>tag:github.com,2023-03-03:/SPLWare/esProc</id>
    <link href="https://github.com/SPLWare/esProc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;esProc SPL is a scripting language for data processing, with well-designed rich library functions and powerful syntax, which can be executed in a Java program through JDBC interface and computing independently.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;esProc&lt;/h2&gt; &#xA;&lt;p&gt;esProc is the unique name for esProc SPL package. &lt;b&gt;esProc SPL&lt;/b&gt; is an &lt;b&gt;open-source programming language for data processing&lt;/b&gt;, which can perform computing independently. For latest package and release notes, see &lt;a href=&#34;http://c.raqsoft.com/article/1595817756260&#34;&gt;Download esProc Community Edition Package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;SPL focuses on the mainstream embedded and Java application architecture. SPL script is the counterpart of the stored procedure in RDB. A SPL script will be passed to a Java program through JDBC interface to be executed or to achieve the structured computation.&lt;/p&gt; &#xA;&lt;img src=&#34;http://www.raqsoft.com/wp-content/themes/raqsoft2017-en/images/java-computing/3.png&#34; width=&#34;800&#34; height=&#34;300&#34;&gt; &#xA;&lt;h2&gt;SPL - Structured Programming Language&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Combined the advantages of Java, Beyond SQL&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1622598686173&#34;&gt;Comparison of SQL &amp;amp; SPL: Set-oriented Operations&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1625729370376&#34;&gt;Comparison of SQL &amp;amp; SPL: Select Operation&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1621587675540&#34;&gt;Comparison of SQL &amp;amp; SPL: Order-based Computations&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1620289765361&#34;&gt;Comparison of SQL &amp;amp; SPL: Equi-grouping&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1621233528244&#34;&gt;Comparison of SQL &amp;amp; SPL: Non-equi-grouping&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1621232555689&#34;&gt;Comparison of SQL &amp;amp; SPL: Order-based Computations&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1622615623417&#34;&gt;Comparison of SQL &amp;amp; SPL: Join Operations (Ⅰ)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1623046924829&#34;&gt;Comparison of SQL &amp;amp; SPL: Join Operations (Ⅱ)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1625738996195&#34;&gt;Comparison of SQL &amp;amp; SPL: Join Operations (Ⅲ)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1621588427124&#34;&gt;Comparison of SQL &amp;amp; SPL: Static Transposition&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1621588222144&#34;&gt;Comparison of SQL &amp;amp; SPL: Complicated Static Transposition&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1625729514671&#34;&gt;Comparison of SQL &amp;amp; SPL: Dynamic Transposition&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://c.raqsoft.com/article/1621234716519&#34;&gt;Comparison of SQL &amp;amp; SPL: Recursion Operation&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Well designed rich library functions and consistency syntax,Easier to master and better performance than Python.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Example: Find out the sales clerks whose sales are within top 8 for every moth in 1995.&lt;/p&gt; &lt;p&gt;Python:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd&#xA;sale_file = ‘E:\\txt\\SalesRecord.txt’&#xA;sale_info = pd.read_csv(sale_file,sep = ‘\t’)&#xA;sale_info[‘month’]=pd.to_datetime(sale_info[‘sale_date’]).dt.month&#xA;sale_group = sale_info.groupby(by=[‘clerk_name’,‘month’],as_index=False).sum()&#xA;sale_group_month = sale_group.groupby(by=‘month’)&#xA;set_name = set(sale_info[‘clerk_name’])&#xA;for index,sale_g_m in sale_group_month:&#xA;    sale_g_m = sale_g_m.sort_values(by=‘sale_amt’,ascending = False)&#xA;    sale_g_max_8 = sale_g_m.iloc[:8]&#xA;    sale_g_max_8_name = sale_g_max_8[‘clerk_name’]&#xA;    set_name = set_name.intersection(set(sale_g_max_8_name))&#xA;print(set_name)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;SPL:&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th align=&#34;left&#34;&gt;+&lt;/th&gt; &#xA;     &lt;th align=&#34;left&#34;&gt;A&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;E:\txt\SalesRecord.txt&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;2&lt;/td&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;=file(A1).import@t()&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;3&lt;/td&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;=A2.groups(clerk_name:name,month(sale_date):month;sum(sale_amt):amount)&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;=A3.group(month)&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;5&lt;/td&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;=A4.(~.sort(-amount).to(8))&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;6&lt;/td&gt; &#xA;     &lt;td align=&#34;left&#34;&gt;=A5.isect(~.(name))&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Seamless integration into Java applications&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;For more details, see &lt;a href=&#34;http://c.raqsoft.com/article/1544066331124&#34;&gt;Call SPL Script in Java&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For other integrations, see &lt;a href=&#34;http://c.raqsoft.com/article/1638429720790&#34;&gt;Call SPL in applications&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SPL application scenarios&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Got SQL&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SQL has certain computing power, but it is not available in many scenarios, so you will have to hard code in Java. SPL provides lightweight computing power independent of database and can process data in any scenario:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Structured text (txt/csv) calculation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1616139619037&#34; title=&#34;SPL general table operations&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1600309450633&#34; title=&#34;Samples of Merging and Splitting Files&#34;&gt;[2]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1600309188122&#34; title=&#34;Samples of Comparing Files&#34;&gt;[3]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1600308846480&#34; title=&#34;Sample Programs of Performing Distinct on a File&#34;&gt;[4]&lt;/a&gt; &lt;a href=&#34;Samples of Processing Big Text File&#34; title=&#34;Samples of Processing Big Text File&#34;&gt;[5]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Excel calculation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1599103426577&#34; title=&#34;Sample Programs of Structuralizing Excel Files&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1600312426331&#34; title=&#34;Samples of Generating Various Excel Files&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Perform SQL on files &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1636624789262&#34; title=&#34;Can We Execute SQL on TXT/CSV Files in Java?&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1603680860113&#34; title=&#34;SQL Query over File Examples&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Multi-layer json calculation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1637121581613&#34; title=&#34;How to Parse and Compute JSON in Java?&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1634550595176&#34; title=&#34;SPL: Reading and Writing JSON Data&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Multi-layer xml calculation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1637121972080&#34; title=&#34;How to Parse and Compute XML in Java?&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1634615560629&#34; title=&#34;SPL: Reading and Writing XML Data&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Java computing class library, surpass Stream/Kotlin/Scala &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1625618421728&#34; title=&#34;Are You Trying to Replace SQL with Java 8 Stream?&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1626426250010&#34; title=&#34;Are You Trying to Replace SQL with Kotlin?&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Replace ORM to implement business logic &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1631184524246&#34; title=&#34;Is ORM a Convenient Option for Data Migration between Databases?&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1636957186884&#34; title=&#34;How to Write Universal SQL That Can Be Executed in All Databases?&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;SQL-like calculation on Mongodb, association calculation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1637915238984&#34; title=&#34;How Java Executes SQL on MongoDB&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1637831059095&#34; title=&#34;How Java Queries or Analyzes MongoDB Data&#34;&gt;[2]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1637914459491&#34; title=&#34;How Java Performs JOINs on MongoDB&#34;&gt;[3]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Post calculation of WebService/Restful &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1637830939009&#34; title=&#34;How Java Handles Data Returned from WebService/RESTful&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1636534963649&#34; title=&#34;SPL: Access to HTTP/WebService/Restful service&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Post calculation of Salesforce, Post calculation of SAP &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1638173742332&#34; title=&#34;How to Achieve More Queries and Analyses on Salesforce Data&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1638173973358&#34; title=&#34;How to Achieve Complex Logic Queries and Analyses on Data from SAP BW&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Post calculation of various data sources: HBase,Cassandra,Redis,ElasticSearch,Kafka,… &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://doc.raqsoft.com/esproc/ext/&#34; title=&#34; esProc External Library Guide&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Beyond SQL&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SQL is difficult to deal with complex sets and ordered operations, and it is often read out and calculated in Java. SPL has complete set capability, especially supports ordered and step-by-step calculation, which can simplify these operations:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Ordered set &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1622598686173&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Set-oriented Operations&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1621587675540&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Order-based Computations&#34;&gt;[2]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1635932635595&#34; title=&#34;SPL: order-related grouping&#34;&gt;[3]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Position reference &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1635933200916&#34; title=&#34;SPL: adjacent record reference&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1637565000649&#34; title=&#34;SPL: Recursively Search Referenced Records&#34;&gt;[2]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1607498662414&#34; title=&#34;Locate Operation on Ordered Sets&#34;&gt;[3]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Grouping subsets &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1583482802281&#34; title=&#34;Grouped subsets&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Non-equivalence grouping &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1621233528244&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Non-equi-grouping&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Multi-level association operation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1558938121942&#34; title=&#34;SPL Simplified SQL - Multilevel Join&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1622615623417&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Join Operations (Ⅰ)&#34;&gt;[2]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1623046924829&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Join Operations (Ⅱ)&#34;&gt;[3]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1625738996195&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Join Operations (Ⅲ)&#34;&gt;[4]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Static and dynamic pivot &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1621588427124&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Static Transposition&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1621588222144&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Complicated Static Transposition&#34;&gt;[2]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1625729514671&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Dynamic Transposition&#34;&gt;[3]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Recursion and iteration &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1621234716519&#34; title=&#34;Comparison of SQL &amp;amp; SPL: Recursion Operation&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Step-by-step and loop operation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1619769733786&#34; title=&#34;Loop Computations&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Text and date time operation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1636542243583&#34; title=&#34;SPL: Text Handling&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1636538168186&#34; title=&#34;SPL: Date, Time and Datetime Handling&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cooperate DB&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The computing power of the database is closed and cannot process data outside the database. It is often necessary to perform ETL to import data into the same database before processing.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SPL provides open and simple computing power, which can directly read multiple databases, realize mixed data calculation, and assist the database to do better calculation.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Fetch data in parallel to accelerate JDBC &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1630377767343&#34; title=&#34;Just How Slow is Data Retrieval via JDBC&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;SQL migration among different types of databases &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1631184524246&#34; title=&#34;Is ORM a Convenient Option for Data Migration between Databases?&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Cross database operations &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1619171409712&#34; title=&#34;Cross-database Computing Methods&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;T+0 statistics and query &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1637566914909&#34; title=&#34;How to Achieve T+0 Query and Analysis?&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Replace stored procedure operation, improve code portability and reduce coupling &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1619664923686&#34; title=&#34;Drawbacks of Using Stored Procedures to Compute Data&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Avoid making ETL into ELT or even LET&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Mixed calculation of multiple data sources &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1581303780848&#34; title=&#34;How to Perform Table Joins between MongoDB and MySQL&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1586252047161&#34; title=&#34;Perform Join Queries over Different Databases&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Reduce intermediate tables in the database&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Report data source development, support hot switching, multiple data sources and improve development efficiency &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1630640358062&#34; title=&#34;Looking for the Best Tool for Using Non-RDB Data Sources in Reporting Tools&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1631529039471&#34; title=&#34;Looking for the Best Tool for Handling Diverse/Multiple Data Sources for Report Building&#34;&gt;[2]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1632301657455&#34; title=&#34;Looking for the Best Method of Handling Multistep Data Preparation for Reporting Tools&#34;&gt;[3]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Implement microservices, occupy less resources and support hot switching &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1634549618946&#34; title=&#34;Looking for the Best Technique of Processing Retrieved WebService/RESTful Data&#34;&gt;[1]&lt;/a&gt; &lt;a href=&#34;http://c.raqsoft.com/article/1637567561373&#34; title=&#34;How to Achieve Hot-swappable Reports?&#34;&gt;[2]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Surpass DB&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SQL is difficult to implement high-performance algorithms. The performance of big data operations can only rely on the optimization engine of the database, but it is often unreliable in complex situations.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SPL provides a large number of basic high-performance algorithms (many of which are pioneered in the industry) and efficient storage formats. Under the same hardware environment, it can obtain much better computing performance than the database, and can comprehensively replace the big data platform and data warehouse.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;In-memory search：binary search, sequence number positioning, position index, hash index, multi-layer sequence number positioning &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1568871695709&#34; title=&#34;Performance optimization - Search&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Dataset in external storage：parallel computing of text file, binary storage, double increment segmentation, columnar storage composite table, ordered storage and update&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Search in external storage：binary search, hash index, sorting index, row-based storage and valued index, index preloading, batch search and set search, multi index merging, full-text searching &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1568871695709&#34; title=&#34;Performance optimization - Search&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Traversing technique：post filter of cursor, multi-purpose traversal, parallel traversing and multi cursors, aggregation extension, ordered traversing, program cursor, partially ordered grouping and sorting, sequence number grouping and controllable segmentation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1568870773966&#34; title=&#34;Performance optimization - Traversal&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Association technique： foreign key addressing, foreign key serialization, index reuse, alignment sequence, large dimension table search, unilateral splitting, orderly merging, association positioning, schedule &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1568950208760&#34; title=&#34;Performance optimization - Join&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Multidimensional analysis：pre summary and time period pre summary, alignment sequence, tag bit dimension &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1567994414051&#34; title=&#34;Performance optimization - Multidimensional analysis&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Distributed：free computing and data distribution, cluster multi-zone composite table, cluster dimension table, redundant fault tolerance, spare tire fault tolerance, Fork-Reduce, multi job load balancing&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Excel&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The combination of SPL and Excel can enhance the calculation ability of Excel and reduce the difficulty of calculation implementation.&lt;/strong&gt; &amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1603680361405&#34; title=&#34;Enhance Excel Calculations by Clipboard&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Through SPL&#39;s Excel plug-in, you can use SPL functions in Excel, and you can also call SPL scripts in VBA.&lt;/strong&gt; &amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1616138220586&#34; title=&#34;Use esProc add-in in Excel&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SPL provides Excel-oriented set operations:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Cell value and summary value calculation &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1617693922993#toc_h1_4&#34; title=&#34;Calculate cell and Summarize value&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Set operation and subordinate judgment &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1617693922993#toc_h1_5&#34; title=&#34;Set operation and Containing judgment&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Duplication judgment, count and deduplication &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1617693922993#toc_h1_6&#34; title=&#34;Find duplicates, counting and removal&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Sorting and ranking &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1617693922993#toc_h1_7&#34; title=&#34;Sorting and ranking&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Special grouping and aggregate methods &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1617693922993#toc_h1_8&#34; title=&#34;Special grouping and aggregation methods&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Association and comparison &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1617693922993#toc_h1_9&#34; title=&#34;Association and comparison&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Row-column transpose &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1617693922993#toc_h1_10&#34; title=&#34;Convert rows and columns&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Expansion and supplement &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;sub&gt;&lt;sup&gt;&lt;em&gt;Ref. &lt;a href=&#34;http://c.raqsoft.com/article/1617693922993#toc_h1_11&#34; title=&#34;Expansion and Complement&#34;&gt;[1]&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Industry&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;There are a large number of time series data in industrial scenarios, and databases often only provide SQL. The ordered calculation capability of SQL is very weak, resulting in that it can only be used for data retrieval and cannot assist in calculation.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Many basic mathematical operations are often involved in industrial scenarios. SQL lacks these functions and the data can only be read out to process.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;SPL can well support ordered calculation, and provides rich mathematical functions, such as matrix and fitting, and can more conveniently meet the calculation requirements of industrial scenes.&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Time series cursor: aggregation by granularity, translation, adjacence reference, association and merging&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Historical data compression and solidification, transparent reference&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Vector and matrix operations&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Various linear fitting: least squares, partial least squares, Lasso, ridge …&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;…&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Industrial algorithms often need repeated experiments. SPL development efficiency is very high, and you can try more within the same time period:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Instrument anomaly discovery algorithm&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Abnormal measurement sample locating&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Curve lifting and oscillation pattern recognition&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Constrained linear fitting&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Pipeline transmission scheduling algorithm&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;…&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://doc.raqsoft.com.cn/esproc/tutorial/&#34;&gt;Tutorial&lt;/a&gt; esProc download, installation, as well as principles and applications&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://doc.raqsoft.com.cn/esproc/func/&#34;&gt;Function Reference&lt;/a&gt; esProc syntax, applications and examples&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://doc.raqsoft.com.cn/esproc/spd/&#34;&gt;Sample Program&lt;/a&gt; Guide to all functions under menus in esProc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://doc.raqsoft.com.cn/esproc/coderefer/&#34;&gt;Code Reference&lt;/a&gt; esProc grid-style code examples&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://doc.raqsoft.com.cn/esproc/manual/&#34;&gt;User Reference&lt;/a&gt; esProc programming by examples&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://doc.raqsoft.com.cn/esproc/ext/&#34;&gt;External Library Guide&lt;/a&gt; Deployment of and connection to esProc external libraries&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;esProc Official WebSite: &lt;a href=&#34;http://www.scudata.com&#34;&gt;http://www.scudata.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Please head to &lt;a href=&#34;http://c.raqsoft.com/article/1595817756260&#34;&gt;http://c.raqsoft.com/article/1595817756260&lt;/a&gt; to download esProc executable files&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;More detail materials can be found at &lt;a href=&#34;http://c.raqsoft.com&#34;&gt;http://c.raqsoft.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;esProc is under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/SPLWare/esProc/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>