<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-06T01:34:10Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tr7zw/ItemSwapper</title>
    <updated>2022-12-06T01:34:10Z</updated>
    <id>tag:github.com,2022-12-06:/tr7zw/ItemSwapper</id>
    <link href="https://github.com/tr7zw/ItemSwapper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tweeks to the inventory system based on Xisumavoid&#39;s video.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ItemSwapper&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This mod is still in development and may change over time. Feel free to open an issue/discussion on Github with any suggestions or bugs you find.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/2wKH8yeThf&#34;&gt;&lt;img src=&#34;https://tr7zw.dev/curse/Discord-long.png&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tweaks to the inventory system based on &lt;a href=&#34;https://www.youtube.com/watch?v=A6DvnFCW5FY&#34;&gt;Xisumavoid&#39;s video&lt;/a&gt;. Adds an item switch interface triggered by pressing a hotkey(Default: &lt;code&gt;R&lt;/code&gt;). Depending on the item in the main hand, the interface will show different options(or not show up at all for unmapped items). Switch between the options by moving the mouse(or using the scroll wheel for the list). Releasing the hotkey will swap the item in the main hand with the selected item. In the item wheel, pressing the middle mouse button while having an item selected switches to related items(if available).&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Switch between items from the inventory&lt;/li&gt; &#xA; &lt;li&gt;Show the inventory from an empty hand&lt;/li&gt; &#xA; &lt;li&gt;Switch between items from shulker boxes in the inventory(requires the mod/plugin on the server)&lt;/li&gt; &#xA; &lt;li&gt;Item wheel for block pallets&lt;/li&gt; &#xA; &lt;li&gt;Item list for dynamic items like tools, food, potions, etc.&lt;/li&gt; &#xA; &lt;li&gt;Fully customizable via resource packs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;FabricAPI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/xisumavoid&#34;&gt;Xisumavoid&lt;/a&gt; for the idea/video of the concept&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/LizardOfOz&#34;&gt;LizardOfOz&lt;/a&gt; Designer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Images&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tr7zw/ItemSwapper/1.19/img/planktypes.png&#34; alt=&#34;Plank Types&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tr7zw/ItemSwapper/1.19/img/woodoptions.png&#34; alt=&#34;Wood Options&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tr7zw/ItemSwapper/1.19/img/dyes.png&#34; alt=&#34;Dyes&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tr7zw/ItemSwapper/1.19/img/tools.png&#34; alt=&#34;Tools&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tr7zw/ItemSwapper/1.19/img/potions.png&#34; alt=&#34;Potions&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/tr7zw/ItemSwapper/1.19/img/redstone.png&#34; alt=&#34;Redstone&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>amitshekhariitbhu/android-developer-roadmap</title>
    <updated>2022-12-06T01:34:10Z</updated>
    <id>tag:github.com,2022-12-06:/amitshekhariitbhu/android-developer-roadmap</id>
    <link href="https://github.com/amitshekhariitbhu/android-developer-roadmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android Developer Roadmap - A complete roadmap to learn Android App Development&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Android Developer Roadmap&#34; src=&#34;https://raw.githubusercontent.com/amitshekhariitbhu/android-developer-roadmap/master/assets/android-developer-roadmap.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Android Developer Roadmap&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A complete roadmap to learn Android App Development. This roadmap will help you in becoming a complete Android Developer.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Note: All the resources to learn all of the concepts in the roadmap will be provided on &lt;a href=&#34;https://amitshekhar.me/blog&#34;&gt;Blog by Amit Shekhar&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Get Mentorship: &lt;a href=&#34;https://amitshekhar.me&#34;&gt;amitshekhar.me&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Roadmap to learn Android App Development&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Programming &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Java&lt;/li&gt; &#xA;   &lt;li&gt;Kotlin&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android Studio &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Android Studio IDE Overview&lt;/li&gt; &#xA;   &lt;li&gt;Project Structure &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Java/Kotlin&lt;/li&gt; &#xA;     &lt;li&gt;XML&lt;/li&gt; &#xA;     &lt;li&gt;.gradle files&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android Component &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Activity &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Activity Lifecycle&lt;/li&gt; &#xA;     &lt;li&gt;Tasks &amp;amp; Back Stack&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Service&lt;/li&gt; &#xA;   &lt;li&gt;Broadcast Receiver&lt;/li&gt; &#xA;   &lt;li&gt;Content Provider&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Intents &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Types of Intent &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Implicit&lt;/li&gt; &#xA;     &lt;li&gt;Explicit&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Intent Filter&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Static User Interface &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;View &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Button, ImageView, TextView, EditText etc&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;ViewGroup &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;LinearLayout, RelativeLayout, FrameLayout, ConstraintLayout&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Dynamic User Interface &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RecyclerView&lt;/li&gt; &#xA;   &lt;li&gt;ViewPager&lt;/li&gt; &#xA;   &lt;li&gt;Spinner&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;CustomView &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Canvas&lt;/li&gt; &#xA;   &lt;li&gt;Bitmap&lt;/li&gt; &#xA;   &lt;li&gt;Paint&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UI Resources &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Drawables&lt;/li&gt; &#xA;   &lt;li&gt;String&lt;/li&gt; &#xA;   &lt;li&gt;Styles&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Fragments &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Fragment Lifecycle&lt;/li&gt; &#xA;   &lt;li&gt;Fragment Manager&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support User Interface &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;ProgressBar&lt;/li&gt; &#xA;   &lt;li&gt;Dialogs&lt;/li&gt; &#xA;   &lt;li&gt;Toast &amp;amp; Snackbar&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Storage &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Shared Preferences&lt;/li&gt; &#xA;   &lt;li&gt;File Systems&lt;/li&gt; &#xA;   &lt;li&gt;Database &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;RoomDB&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Build &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Gradle&lt;/li&gt; &#xA;   &lt;li&gt;Debug / Release Configuration&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Threading &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Thread&lt;/li&gt; &#xA;   &lt;li&gt;Handler/Looper&lt;/li&gt; &#xA;   &lt;li&gt;ThreadPoolExecutor&lt;/li&gt; &#xA;   &lt;li&gt;RxJava&lt;/li&gt; &#xA;   &lt;li&gt;Coroutines/Flow&lt;/li&gt; &#xA;   &lt;li&gt;WorkManager&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Debugging &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Memory profiling&lt;/li&gt; &#xA;   &lt;li&gt;Logging&lt;/li&gt; &#xA;   &lt;li&gt;Systrace&lt;/li&gt; &#xA;   &lt;li&gt;Exceptions&lt;/li&gt; &#xA;   &lt;li&gt;Error Handling&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Memory Leak &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Detecting and Fixing Memory Leaks&lt;/li&gt; &#xA;   &lt;li&gt;Context&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;3rd Party Library &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Image Loading &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Glide&lt;/li&gt; &#xA;     &lt;li&gt;Picasso&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Dependency Injection &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Dagger&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Networking &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Fast Android Networking Library&lt;/li&gt; &#xA;     &lt;li&gt;Retrofit&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;MultiThreading &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;RxJava&lt;/li&gt; &#xA;     &lt;li&gt;Coroutines&lt;/li&gt; &#xA;     &lt;li&gt;Kotlin Flow API&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Coroutines - You can learn these topics here: &lt;a href=&#34;https://amitshekhar.me/blog/kotlin-coroutines&#34;&gt;Master Kotlin Coroutines&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;coroutines&lt;/li&gt; &#xA;   &lt;li&gt;suspend&lt;/li&gt; &#xA;   &lt;li&gt;launch, async-await, withContext&lt;/li&gt; &#xA;   &lt;li&gt;dispatchers&lt;/li&gt; &#xA;   &lt;li&gt;scope, context, job&lt;/li&gt; &#xA;   &lt;li&gt;lifecycleScope, viewModelScope, GlobalScope&lt;/li&gt; &#xA;   &lt;li&gt;suspendCoroutine, suspendCancellableCoroutine&lt;/li&gt; &#xA;   &lt;li&gt;coroutineScope, supervisorScope&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Kotlin Flow API - You can learn these topics here: &lt;a href=&#34;https://amitshekhar.me/blog/flow-api-in-kotlin&#34;&gt;Kotlin Flow API&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Flow Builder, Operator, Collector&lt;/li&gt; &#xA;   &lt;li&gt;flowOn, dispatchers&lt;/li&gt; &#xA;   &lt;li&gt;Operators such as filter, map, zip, flatMapConcat, retry, debounce, distinctUntilChanged, flatMapLatest&lt;/li&gt; &#xA;   &lt;li&gt;Terminal operators&lt;/li&gt; &#xA;   &lt;li&gt;StateFlow, SharedFlow, callbackFlow, channelFlow&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data Format &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;JSON &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;GSON&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Flat Buffer&lt;/li&gt; &#xA;   &lt;li&gt;Protocol Buffer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Networking &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GET/POST/DELETE/PUT/PATCH&lt;/li&gt; &#xA;   &lt;li&gt;OkHttp, Interceptor&lt;/li&gt; &#xA;   &lt;li&gt;Caching&lt;/li&gt; &#xA;   &lt;li&gt;Retrofit with Coroutines/Flow&lt;/li&gt; &#xA;   &lt;li&gt;Multipart request&lt;/li&gt; &#xA;   &lt;li&gt;Read, Write Timeout&lt;/li&gt; &#xA;   &lt;li&gt;OAuth 2.0 - Refresh and Access Token&lt;/li&gt; &#xA;   &lt;li&gt;HTTP Status Codes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android Jetpack &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Foundation Components &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;AppCompat&lt;/li&gt; &#xA;     &lt;li&gt;Android KTX&lt;/li&gt; &#xA;     &lt;li&gt;Multidex&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Architecture Components &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;LiveData&lt;/li&gt; &#xA;     &lt;li&gt;ViewModel&lt;/li&gt; &#xA;     &lt;li&gt;DataBinding&lt;/li&gt; &#xA;     &lt;li&gt;Paging&lt;/li&gt; &#xA;     &lt;li&gt;Work Manager&lt;/li&gt; &#xA;     &lt;li&gt;Navigation&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Behaviour Components &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Download Manager&lt;/li&gt; &#xA;     &lt;li&gt;Media Playback&lt;/li&gt; &#xA;     &lt;li&gt;Notification&lt;/li&gt; &#xA;     &lt;li&gt;Permissions&lt;/li&gt; &#xA;     &lt;li&gt;Preference&lt;/li&gt; &#xA;     &lt;li&gt;Sharing&lt;/li&gt; &#xA;     &lt;li&gt;Slice&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;UI Component &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Animation &amp;amp; Transition&lt;/li&gt; &#xA;     &lt;li&gt;Android Auto&lt;/li&gt; &#xA;     &lt;li&gt;Emoji&lt;/li&gt; &#xA;     &lt;li&gt;Palette&lt;/li&gt; &#xA;     &lt;li&gt;Android TV&lt;/li&gt; &#xA;     &lt;li&gt;Android Wear&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Compose &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;State: remember, rememberSaveable, MutableState&lt;/li&gt; &#xA;   &lt;li&gt;Recomposition&lt;/li&gt; &#xA;   &lt;li&gt;State hoisting&lt;/li&gt; &#xA;   &lt;li&gt;Side-effects&lt;/li&gt; &#xA;   &lt;li&gt;Modifier&lt;/li&gt; &#xA;   &lt;li&gt;Theme&lt;/li&gt; &#xA;   &lt;li&gt;Layout, List&lt;/li&gt; &#xA;   &lt;li&gt;Gestures, Animation&lt;/li&gt; &#xA;   &lt;li&gt;CompositionLocal&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Common Design Patterns and Architecture &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Builder Pattern&lt;/li&gt; &#xA;   &lt;li&gt;Singleton&lt;/li&gt; &#xA;   &lt;li&gt;Dependency Injection&lt;/li&gt; &#xA;   &lt;li&gt;Factory&lt;/li&gt; &#xA;   &lt;li&gt;Observer&lt;/li&gt; &#xA;   &lt;li&gt;Repository&lt;/li&gt; &#xA;   &lt;li&gt;MVVM&lt;/li&gt; &#xA;   &lt;li&gt;MVP&lt;/li&gt; &#xA;   &lt;li&gt;MVI&lt;/li&gt; &#xA;   &lt;li&gt;Clean architecture&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Unit Testing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Local Unit Testing&lt;/li&gt; &#xA;   &lt;li&gt;Instrumentation Testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Firebase &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;FCM&lt;/li&gt; &#xA;   &lt;li&gt;Crashlytics&lt;/li&gt; &#xA;   &lt;li&gt;Analytics&lt;/li&gt; &#xA;   &lt;li&gt;Remote Config&lt;/li&gt; &#xA;   &lt;li&gt;App Indexing&lt;/li&gt; &#xA;   &lt;li&gt;Dynamic Link&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Security &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Encrypt / Decrypt&lt;/li&gt; &#xA;   &lt;li&gt;Proguard&lt;/li&gt; &#xA;   &lt;li&gt;R8&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;App Release &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;.keystore file&lt;/li&gt; &#xA;   &lt;li&gt;App Bundle&lt;/li&gt; &#xA;   &lt;li&gt;Playstore&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Keep Learning and Improving&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Get Mentorship: &lt;a href=&#34;https://amitshekhar.me&#34;&gt;amitshekhar.me&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;Found this project useful &lt;span&gt;❤️&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support by clicking the &lt;span&gt;⭐&lt;/span&gt; button on the upper right of this page. &lt;span&gt;✌&lt;/span&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;   Copyright (C) 2022 Amit Shekhar&#xA;&#xA;   Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;   you may not use this file except in compliance with the License.&#xA;   You may obtain a copy of the License at&#xA;&#xA;       http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;   Unless required by applicable law or agreed to in writing, software&#xA;   distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;   See the License for the specific language governing permissions and&#xA;   limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Contributing to Android Developer Roadmap&lt;/h3&gt; &#xA;&lt;p&gt;Just make a pull request. You are in!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>twoyi/twoyi</title>
    <updated>2022-12-06T01:34:10Z</updated>
    <id>tag:github.com,2022-12-06:/twoyi/twoyi</id>
    <link href="https://github.com/twoyi/twoyi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lightweight Android container on Android&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;h3&gt; &lt;b&gt; Twoyi Platform &lt;/b&gt; &lt;/h3&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;b&gt; A lightweight Android container &lt;/b&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twoyi/twoyi/main/CODE_OF_CONDUCT.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Contributions-welcome-brightgreen?logo=github&#34; alt=&#34;contributions welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twoyi.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Website-available-brightgreen?logo=e&#34; alt=&#34;Website&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt; &lt;sub&gt; Made with ❤︎ by &lt;a href=&#34;https://github.com/tiann&#34;&gt; weishu &lt;/a&gt; &lt;/sub&gt; &lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://twoyi.io&#34;&gt; &lt;img src=&#34;https://github.com/twoyi/twoyi/raw/main/assets/twoyi_screen.jpg?raw=true&#34; alt=&#34;Screenshot&#34; width=&#34;25%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/twoyi/twoyi/main/README_CN.md&#34;&gt;README 中文版&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Twoyi is a lightweight Android container. It runs a nearly complete Android system as a normal app (no root required) on Android. Additionally, it supports Android 8.1 ~ 12.&lt;/p&gt; &#xA;&lt;h2&gt;Capability&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use Taichi·Yang without unlocking the bootloader. Xposed, EdXposed and LSPosed will be supported.&lt;/li&gt; &#xA; &lt;li&gt;Use root on non-rooted devices.&lt;/li&gt; &#xA; &lt;li&gt;Use a few Magisk modules.&lt;/li&gt; &#xA; &lt;li&gt;Implement additional system components such as virtual camera by virtualizing the HAL layer.&lt;/li&gt; &#xA; &lt;li&gt;Do security research such as shelling.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Twoyi is a rootless Android system-level container, which runs a nearly complete Android system as a normal app and is mostly isolated from the main system.&lt;/li&gt; &#xA; &lt;li&gt;The internal Android version is Android 8.1 and Android 10 will be supported.&lt;/li&gt; &#xA; &lt;li&gt;Booting up twoyi is very fast (within three seconds) except for the initialization process.&lt;/li&gt; &#xA; &lt;li&gt;Twoyi is an open source project.&lt;/li&gt; &#xA; &lt;li&gt;The internal system of twoyi will be fully customizable. Because its system is open source, you can fork the project to compile your own system. You can also customize the system components, such as the HAL layer to implement virtual cameras, virtual sensors and other special features.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Twoyi contains two parts:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The twoyi app, which is actually a UI rendering engine.&lt;/li&gt; &#xA; &lt;li&gt;The internal ROM of twoyi.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This repository contains the twoyi app, and the twoyi ROM is currently being turned into open-source. Therefore, at this moment, the ROM cannot be compiled from source yet.&lt;/p&gt; &#xA;&lt;h3&gt;Build the App manually&lt;/h3&gt; &#xA;&lt;h4&gt;Install Rust&lt;/h4&gt; &#xA;&lt;p&gt;Twoyi is partially written in Rust, so it&#39;s nessesary to &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;install Rust and Cargo&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;h4&gt;Install cargo-xdk&lt;/h4&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/tiann/cargo-xdk&#34;&gt;cargo-xdk&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can check if it is installed by running &lt;code&gt;./gradlew cargoBuild&lt;/code&gt;. If it succeeded, you will see libtwoyi.so in &lt;code&gt;app/src/main/jniLibs/arm64-v8a&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;PS. Please use ndk v22 or lower, otherwise it may fail.&lt;/p&gt; &#xA;&lt;h4&gt;Integrating rootfs&lt;/h4&gt; &#xA;&lt;p&gt;Currently you cannot build the ROM yourself, instead you can use the prebuilt ROM. To do that, extract rootfs.7z from the official release apk and copy it to &lt;code&gt;app/src/main/assets&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Build the app with Android Studio&lt;/h3&gt; &#xA;&lt;p&gt;Build it with Android Studio normally.&lt;/p&gt; &#xA;&lt;h3&gt;Build the ROM&lt;/h3&gt; &#xA;&lt;p&gt;WIP&lt;/p&gt; &#xA;&lt;h2&gt;Discussion&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/twoyi&#34;&gt;Telegram Group&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contact Me&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:twsxtd@gmail.com&#34;&gt;twsxtd@gmail.com&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>