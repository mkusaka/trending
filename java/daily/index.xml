<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-19T01:31:44Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>adorsys/keycloak-config-cli</title>
    <updated>2024-10-19T01:31:44Z</updated>
    <id>tag:github.com,2024-10-19:/adorsys/keycloak-config-cli</id>
    <link href="https://github.com/adorsys/keycloak-config-cli" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Import YAML/JSON-formatted configuration files into Keycloak - Configuration as Code for Keycloak.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/adorsys/keycloak-config-cli/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/adorsys/keycloak-config-cli/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adorsys/keycloak-config-cli/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/adorsys/keycloak-config-cli?logo=github&amp;amp;sort=semver&#34; alt=&#34;GitHub release (latest SemVer)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adorsys/keycloak-config-cli/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/adorsys/keycloak-config-cli/total?logo=github&#34; alt=&#34;GitHub All Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/adorsys/keycloak-config-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/adorsys/keycloak-config-cli?logo=docker&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/adorsys/keycloak-config-cli&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/adorsys/keycloak-config-cli/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/adorsys/keycloak-config-cli/raw/main/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/adorsys/keycloak-config-cli&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;keycloak-config-cli&lt;/h1&gt; &#xA;&lt;p&gt;keycloak-config-cli is a Keycloak utility to ensure the desired configuration state for a realm based on a JSON/YAML file. The format of the JSON/YAML file based on the export realm format. Store and handle the configuration files inside git just like normal code. A Keycloak restart isn&#39;t required to apply the configuration.&lt;/p&gt; &#xA;&lt;h1&gt;Config files&lt;/h1&gt; &#xA;&lt;p&gt;The config files are based on the keycloak export files. You can use them to re-import your settings. But keep your files as small as possible. Remove all UUIDs and all stuff which is default set by keycloak.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adorsys/keycloak-config-cli/main/contrib/example-config/moped.json&#34;&gt;moped.json&lt;/a&gt; is a full working example file you can consider. Other examples are located in the &lt;a href=&#34;https://raw.githubusercontent.com/adorsys/keycloak-config-cli/main/src/test/resources/import-files&#34;&gt;test resources&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Variable Substitution&lt;/h2&gt; &#xA;&lt;p&gt;keycloak-config-cli supports variable substitution of config files. This could be enabled by &lt;code&gt;import.var-substitution.enabled=true&lt;/code&gt; (&lt;strong&gt;disabled by default&lt;/strong&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Variables exposed by spring boot (through configtree or &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/2.5.0/reference/htmlsingle/#features.external-config.typesafe-configuration-properties.relaxed-binding.environment-variables&#34;&gt;external configuration&lt;/a&gt;) can be accessed by &lt;code&gt;$(property.name)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In additional, the string substitution support multiple prefixes for different approaches&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Base64 Decoder:        $(base64Decoder:SGVsbG9Xb3JsZCE=)&#xA;Base64 Encoder:        $(base64Encoder:HelloWorld!)&#xA;Java Constant:         $(const:java.awt.event.KeyEvent.VK_ESCAPE)&#xA;Date:                  $(date:yyyy-MM-dd)&#xA;DNS:                   $(dns:address|apache.org)&#xA;Environment Variable:  $(env:USERNAME)&#xA;File Content:          $(file:UTF-8:src/test/resources/document.properties)&#xA;Java:                  $(java:version)&#xA;Localhost:             $(localhost:canonical-name)&#xA;Properties File:       $(properties:src/test/resources/document.properties::mykey)&#xA;Resource Bundle:       $(resourceBundle:org.example.testResourceBundleLookup:mykey)&#xA;Script:                $(script:javascript:3 + 4)&#xA;System Property:       $(sys:user.dir)&#xA;URL Decoder:           $(urlDecoder:Hello%20World%21)&#xA;URL Encoder:           $(urlEncoder:Hello World!)&#xA;URL Content (HTTP):    $(url:UTF-8:http://www.apache.org)&#xA;URL Content (HTTPS):   $(url:UTF-8:https://www.apache.org)&#xA;URL Content (File):    $(url:UTF-8:file:///$(sys:user.dir)/src/test/resources/document.properties)&#xA;XML XPath:             $(xml:src/test/resources/document.xml:/root/path/to/node)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to replace the values with java system properties or environment variables. Recursive variable replacement like &lt;code&gt;$(file:UTF-8:$(env:KEYCLOAK_PASSWORD_FILE))&lt;/code&gt; is enabled by default if &lt;code&gt;import.var-substitution.enabled&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The variable substitution is running before the json parser gets executed. This allows json structures or complex values.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/StringSubstitutor.html&#34;&gt;Apache Common &lt;code&gt;StringSubstitutor&lt;/code&gt; documentation&lt;/a&gt; for more information and advanced usage.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Since variable substitution is a part of the keycloak-config-cli, it&#39;s done locally. This means, the environment variables need to be available where keycloak-config-cli is executed.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;import.var-substitution.prefix=${&lt;/code&gt; and &lt;code&gt;import.var-substitution.suffix=}&lt;/code&gt; (default in keycloak-config-cli 3.x) is set, then keycloak builtin variables like &lt;code&gt;${role_uma_authorization}&lt;/code&gt; needs to be escaped by &lt;code&gt;$${role_uma_authorization}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Logging&lt;/h1&gt; &#xA;&lt;h2&gt;JSON logging support&lt;/h2&gt; &#xA;&lt;p&gt;keycloak-config-cli supports logging in JSON format. To enable, set &lt;code&gt;SPRING_PROFILES_ACTIVE=json-log&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Log level&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CLI Option&lt;/th&gt; &#xA;   &lt;th&gt;ENV Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--logging.level.root&lt;/td&gt; &#xA;   &lt;td&gt;LOGGING_LEVEL_ROOT&lt;/td&gt; &#xA;   &lt;td&gt;define the root log level&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--logging.level.keycloak-config-cli&lt;/td&gt; &#xA;   &lt;td&gt;LOGGING_LEVEL_KEYCLOAKCONFIGCLI&lt;/td&gt; &#xA;   &lt;td&gt;log level of keycloak-config-cli components&lt;/td&gt; &#xA;   &lt;td&gt;value of &lt;code&gt;logging.level.root&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--logging.level.http&lt;/td&gt; &#xA;   &lt;td&gt;LOGGING_LEVEL_HTTP&lt;/td&gt; &#xA;   &lt;td&gt;log level http requests between keycloak-config-cli and Keycloak&lt;/td&gt; &#xA;   &lt;td&gt;value of &lt;code&gt;logging.level.root&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--logging.level.realm-config&lt;/td&gt; &#xA;   &lt;td&gt;LOGGING_LEVEL_REALMCONFIG&lt;/td&gt; &#xA;   &lt;td&gt;if set to trace, the realm config including &lt;strong&gt;sensitive information&lt;/strong&gt; will be logged&lt;/td&gt; &#xA;   &lt;td&gt;value of &lt;code&gt;logging.level.root&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Supported features&lt;/h1&gt; &#xA;&lt;p&gt;See: &lt;a href=&#34;https://raw.githubusercontent.com/adorsys/keycloak-config-cli/main/docs/FEATURES.md&#34;&gt;docs/FEATURES.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Compatibility with keycloak&lt;/h1&gt; &#xA;&lt;p&gt;Since keycloak-config-cli 4.0 will support the latest 4 releases of keycloak, if possible. There are some exceptions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;keycloak-config-cli will try the keep an extended support for &lt;a href=&#34;https://access.redhat.com/articles/2342881&#34;&gt;RH-SSO&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;keycloak-config-cli will cut the support if keycloak introduces some breaking changes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Build this project&lt;/h1&gt; &#xA;&lt;p&gt;keycloak-config-cli using &lt;a href=&#34;https://maven.apache.org/index.html&#34;&gt;maven&lt;/a&gt; to build and test keycloak-config-cli. In case maven is not installed on your system, the &lt;a href=&#34;https://github.com/takari/maven-wrapper&#34;&gt;&lt;code&gt;mvnw&lt;/code&gt;&lt;/a&gt; command will download maven for you.&lt;/p&gt; &#xA;&lt;p&gt;Further development requirements&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java Development Kit (JDK)&lt;/li&gt; &#xA; &lt;li&gt;Docker Desktop or an alternative replacement (e.g Rancher Desktop)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./mvnw verify&#xA;&#xA;# Windows only&#xA;mvnw.cmd verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your are working with a Docker Desktop replacement, some of the Integrationtests can fail due to internal DNS Lookups (host.docker.internal is not reachable). In this case the host can be replaced by a property.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn verify -DJUNIT_LDAP_HOST=an.alternate.host.or.ip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Run integration tests against real keycloak&lt;/h1&gt; &#xA;&lt;p&gt;We are using &lt;a href=&#34;https://www.testcontainers.org/&#34;&gt;TestContainers&lt;/a&gt; in our integration tests. To run the integration tests a configured docker environment is required.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./mvnw verify&#xA;&#xA;# Windows only&#xA;mvnw.cmd verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Run this project&lt;/h1&gt; &#xA;&lt;p&gt;Start a local keycloak on port 8080:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose down --remove-orphans &amp;amp;&amp;amp; docker-compose up keycloak&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;before performing following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;java -jar ./target/keycloak-config-cli.jar \&#xA;    --keycloak.url=http://localhost:8080 \&#xA;    --keycloak.ssl-verify=true \&#xA;    --keycloak.user=admin \&#xA;    --keycloak.password=admin123 \&#xA;    --import.files.locations=./contrib/example-config/moped.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker&lt;/h2&gt; &#xA;&lt;p&gt;A docker images is available at &lt;a href=&#34;https://hub.docker.com/r/adorsys/keycloak-config-cli&#34;&gt;DockerHub&lt;/a&gt; (docker.io/adorsys/keycloak-config-cli) and &lt;a href=&#34;https://quay.io/repository/adorsys/keycloak-config-cli&#34;&gt;quay.io&lt;/a&gt; (quay.io/adorsys/keycloak-config-cli)&lt;/p&gt; &#xA;&lt;p&gt;Available docker tags&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Tag&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest available release of keycloak-config-cli which is built against the latest supported Keycloak release.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;latest-x.y.z&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest available release of keycloak-config-cli which is built against the Keycloak version &lt;code&gt;x.y.z&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;edge&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest commit on the main branch and which is built against the latest supported Keycloak release.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;a.b.c&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;keycloak-config-cli version &lt;code&gt;a.b.c&lt;/code&gt; which is built against the latest supported Keycloak release.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;a.b.c-x.y.z&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;keycloak-config-cli version &lt;code&gt;a.b.c&lt;/code&gt; which is built against the Keycloak version &lt;code&gt;x.y.z&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;maven&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See below&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Additionally, the tag &lt;code&gt;maven&lt;/code&gt; contains the source code and compile keycloak-config-cli at runtime. This has the advantage to keycloak-config-cli with Keycloak versions, that not official supported., e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --rm -ti -v $PWD:/config/ -eKEYCLOAK_VERSION=23.0.1 -eMAVEN_CLI_OPTS=&#34;-B -ntp -q&#34; adorsys/keycloak-config-cli:edge-build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker run&lt;/h3&gt; &#xA;&lt;p&gt;For docker &lt;code&gt;-e&lt;/code&gt; you have to replace dots with underscores.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run \&#xA;    -e KEYCLOAK_URL=&#34;http://&amp;lt;your keycloak host&amp;gt;:8080/&#34; \&#xA;    -e KEYCLOAK_USER=&#34;&amp;lt;keycloak admin username&amp;gt;&#34; \&#xA;    -e KEYCLOAK_PASSWORD=&#34;&amp;lt;keycloak admin password&amp;gt;&#34; \&#xA;    -e KEYCLOAK_AVAILABILITYCHECK_ENABLED=true \&#xA;    -e KEYCLOAK_AVAILABILITYCHECK_TIMEOUT=120s \&#xA;    -e IMPORT_FILES_LOCATIONS=&#39;/config/*&#39; \&#xA;    -v &amp;lt;your config path&amp;gt;:/config \&#xA;    adorsys/keycloak-config-cli:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker build&lt;/h3&gt; &#xA;&lt;p&gt;You can build an own docker image by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t keycloak-config-cli .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Helm&lt;/h2&gt; &#xA;&lt;p&gt;We provide a helm chart &lt;a href=&#34;https://raw.githubusercontent.com/adorsys/keycloak-config-cli/main/contrib/charts/keycloak-config-cli&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since it makes no sense to deploy keycloak-config-cli as standalone application, you could add it as dependency to your chart deployment.&lt;/p&gt; &#xA;&lt;p&gt;Checkout helm docs about &lt;a href=&#34;https://helm.sh/docs/topics/charts/#chart-dependencies&#34;&gt;chart dependencies&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;h2&gt;CLI option / Environment Variables&lt;/h2&gt; &#xA;&lt;h3&gt;Keycloak options&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CLI Option&lt;/th&gt; &#xA;   &lt;th&gt;ENV Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Docs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.url&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_URL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Keycloak URL including web context. Format: &lt;code&gt;scheme://hostname:port/web-context&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.user&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_USER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;login user name&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;admin&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.password&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;login user password&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.client-id&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_CLIENTID&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;login clientId&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;admin-cli&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.client-secret&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_CLIENTSECRET&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;login client secret&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.grant-type&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_GRANTTYPE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;login grant_type&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;password&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.login-realm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_LOGINREALM&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;login realm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;master&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.ssl-verify&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_SSLVERIFY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Verify ssl connection to keycloak&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.http-proxy&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_HTTPPROXY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Connect to Keycloak via HTTP Proxy. Format: &lt;code&gt;scheme://hostname:port&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.connect-timeout&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_CONNECTTIMEOUT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Connection timeout&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.read-timeout&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_READTIMEOUT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Read timeout&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;10s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;configured as &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&#34;&gt;Java Duration&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.availability-check.enabled&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_AVAILABILITYCHECK_ENABLED&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Wait until Keycloak is available&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;configured as &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html&#34;&gt;Java Duration&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--keycloak.availability-check.timeout&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;KEYCLOAK_AVAILABILITYCHECK_TIMEOUT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Wait timeout for keycloak availability check&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;120s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Import options&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CLI Option&lt;/th&gt; &#xA;   &lt;th&gt;ENV Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Docs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.validate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_VALIDATE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Validate configuration settings&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.parallel&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_PARALLEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable parallel import of certain resources&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.files.locations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_FILES_LOCATIONS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Location of config files (URL, file path, or Ant-style pattern)&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adorsys/keycloak-config-cli/main/docs/IMPORT.md&#34;&gt;IMPORT.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.files.include-hidden-files&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_FILES_INCLUDE_HIDDEN_FILES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Includes files that marked as hidden&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.files.excludes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_FILES_EXCLUDES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exclude files with Ant-style pattern&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.cache.enabled&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_CACHE_ENABLED&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable caching of import file locations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.cache.key&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_CACHE_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cache key for importing config.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.remote-state.enabled&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_REMOTESTATE_ENABLED&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable remote state management. Purge only resources managed by keycloak-config-cli.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adorsys/keycloak-config-cli/main/docs/MANAGED.md&#34;&gt;MANAGED.md&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.remote-state.encryption-key&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_REMOTESTATE_ENCRYPTIONKEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enables remote state in encrypted format. If unset, state will be stored in plain&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.var-substitution.enabled&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_VARSUBSTITUTION_ENABLED&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable variable substitution config files&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.var-substitution.nested&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_VARSUBSTITUTION_NESTED&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Expand variables in variables.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.var-substitution.undefined-is-error&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_VARSUBSTITUTION_UNDEFINEDISTERROR&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Raise exceptions, if variables are not defined.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.var-substitution.prefix&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_VARSUBSTITUTION_PREFIX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configure the variable prefix, if &lt;code&gt;import.var-substitution.enabled&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;$(&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.var-substitution.suffix&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_VARSUBSTITUTION_SUFFIX&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Configure the variable suffix, if &lt;code&gt;import.var-substitution.enabled&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.behaviors.sync-user-federation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_BEHAVIORS_SYNC_USER_FEDERATION&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable the synchronization of user federation.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.behaviors.remove-default-role-from-user&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_BEHAVIORS_REMOVEDEFAULTROLEFROMUSER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The default setting of this flag prevents keycloak-config-cli from removing &lt;code&gt;default-roles-$REALM&lt;/code&gt;, even if its not defined in the import json. To make keycloak-config-cli able to remove the &lt;code&gt;default-role-$REALM&lt;/code&gt;, &lt;code&gt;import.remove-default-role-from-user&lt;/code&gt; must be set to true. In conclusion, you have to add the &lt;code&gt;default-role-$REALM&lt;/code&gt; to the realm import on certain users, if you want not remove the &lt;code&gt;default-role-$REALM&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.behaviors.skip-attributes-for-federated-user&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_BEHAVIORS_SKIP_ATTRIBUTESFORFEDERATEDUSER&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Set attributes to null for federated users to avoid read only conflicts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.behaviors.checksum-with-cache-key&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_BEHAVIORS_CHECKSUM_WITH_CACHE_KEY&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use cache key to store the checksum, if set to &lt;code&gt;false&lt;/code&gt; a checksum for each import file is stored&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--import.behaviors.checksum-changed&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IMPORT_BEHAVIORS_CHECKSUM_CHANGED&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Defines the behavior if the checksum of an imported file has changed. Set to &lt;code&gt;fail&lt;/code&gt; when import should be aborted, &lt;code&gt;continue&lt;/code&gt; reimport and update the checksum.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Spring boot options&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;CLI Option&lt;/th&gt; &#xA;   &lt;th&gt;ENV Variable&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Docs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--spring.profiles.active&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SPRING_PROFILES_ACTIVE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;enable spring profiles. comma separated&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.properties-and-configuration.set-active-spring-profiles&#34;&gt;Set the Active Spring Profiles&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--spring.config.import&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;SPRING_CONFIG_IMPORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;See below&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/adorsys/keycloak-config-cli/main/#configure-properties-values-through-files&#34;&gt;Configure properties values through files&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--logging.level.root&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;LOGGING_LEVEL_ROOT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;define the root log level&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;info&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.logging&#34;&gt;Logging&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;--debug&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;enables debug mode of spring boot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/adorsys/keycloak-config-cli/main/src/main/resources/application.properties&#34;&gt;application.properties&lt;/a&gt; for all available settings.&lt;/p&gt; &#xA;&lt;p&gt;For docker &lt;code&gt;-e&lt;/code&gt; you have to remove hyphens and replace dots with underscores.&lt;/p&gt; &#xA;&lt;p&gt;Take a look at &lt;a href=&#34;https://github.com/spring-projects/spring-boot/wiki/Relaxed-Binding-2.0&#34;&gt;spring relax binding&lt;/a&gt; or &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/2.6.0/reference/htmlsingle/#features.external-config.typesafe-configuration-properties.relaxed-binding.environment-variables&#34;&gt;binding from Environment Variables&lt;/a&gt; if you need alternative spellings.&lt;/p&gt; &#xA;&lt;h2&gt;Configure properties values through files&lt;/h2&gt; &#xA;&lt;p&gt;By define an environment variable &lt;code&gt;SPRING_CONFIG_IMPORT=configtree:/run/secrets/&lt;/code&gt;, the values of properties can be provided via files instead of plain environment variable values.&lt;/p&gt; &#xA;&lt;p&gt;Example: To configure the property &lt;code&gt;keycloak.password&lt;/code&gt; in this case, the file should be in &lt;code&gt;/run/secrets/keycloak.password&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The configuration and secret support in Docker Swarm is a perfect match for this use case.&lt;/p&gt; &#xA;&lt;p&gt;Checkout the &lt;a href=&#34;https://docs.spring.io/spring-boot/docs/2.6.0/reference/htmlsingle/#features.external-config.files.configtree&#34;&gt;spring docs&lt;/a&gt; to get more information about the configuration trees feature in spring boot.&lt;/p&gt; &#xA;&lt;h1&gt;Perform release&lt;/h1&gt; &#xA;&lt;p&gt;Building releases requires gpg signing.&lt;/p&gt; &#xA;&lt;p&gt;Example to create and add a key to yout git config on MacOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;brew install gnupg&#xA;gpg --version&#xA;gpg --full-generate-key&#xA;# follow instructions&#xA;gpg --list-keys&#xA;gpg --list-secret-keys --keyid-format=short&#xA;# check the 8 digit code eg &#34;ssb   xxxxxxx/E51442F5 2022-01-01 [X]&#34;&#xA;git config --global user.signingkey E51442F5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally add the key to your Github account under Settings -&amp;gt; SSH and GPG keys -&amp;gt; New GPG key&lt;/p&gt; &#xA;&lt;p&gt;Create release via &lt;a href=&#34;https://maven.apache.org/maven-release/maven-release-plugin/examples/prepare-release.html&#34;&gt;maven release plugin&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./mvnw -Dresume=false release:prepare release:clean&#xA;git push --follow-tags&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Commercial support&lt;/h1&gt; &#xA;&lt;p&gt;Checkout &lt;a href=&#34;https://adorsys.com/en/products/keycloak-config-cli/&#34;&gt;https://adorsys.com/en/products/keycloak-config-cli/&lt;/a&gt; for commercial support.&lt;/p&gt;</summary>
  </entry>
</feed>