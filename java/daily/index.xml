<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-05T01:30:14Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kevin-wayne/algs4</title>
    <updated>2023-09-05T01:30:14Z</updated>
    <id>tag:github.com,2023-09-05:/kevin-wayne/algs4</id>
    <link href="https://github.com/kevin-wayne/algs4" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Algorithms, 4th edition textbook code and libraries&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;img SRC=&#34;http://algs4.cs.princeton.edu/cover.png&#34; align=&#34;right&#34; hspace=&#34;25&#34; width=&#34;100&#34; alt=&#34;Algorithms 4/e textbook&#34;&gt; This &#xA;&lt;a href=&#34;https://github.com/kevin-wayne/algs4&#34;&gt;public repository&lt;/a&gt; contains the Java &#xA;&lt;a href=&#34;http://algs4.cs.princeton.edu/code/&#34;&gt;source code&lt;/a&gt; for the algorithms and clients in the textbook &#xA;&lt;a href=&#34;http://amzn.to/13VNJi7&#34;&gt;Algorithms, 4th Edition&lt;/a&gt; by Robert Sedgewick and Kevin Wayne. The official version at &#xA;&lt;a href=&#34;https://github.com/kevin-wayne/algs4&#34;&gt;https://github.com/kevin-wayne/algs4&lt;/a&gt; is actively maintained and updated by the authors. The programs are organized in the package &#xA;&lt;code&gt;edu.princeton.cs.algs4&lt;/code&gt;. If you need only the class files (and not the source code), you can use &#xA;&lt;a href=&#34;http://algs4.cs.princeton.edu/code/algs4.jar&#34;&gt;algs4.jar&lt;/a&gt; instead. &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Design goals&lt;/h2&gt; &#xA;&lt;p&gt;Our original goal was to cover the &lt;em&gt;50 algorithms that every programmer should know&lt;/em&gt;. We use the word &lt;em&gt;programmer&lt;/em&gt; to refer to anyone engaged in trying to accomplish something with the help of a computer, including scientists, engineers, and applications developers, not to mention college students in science, engineering, and computer science. The code is optimized for clarity, portability, and efficiency. While some of our implementations are as fast as (or faster than) their counterparts in &lt;tt&gt;java.util&lt;/tt&gt;, our main goal is to express the core algorithmic ideas in an elegant and simple manner. While we embrace some advanced Java features (such as generics and iterators), we avoid those that interfere with the exposition (such as inheritance and concurrency).&lt;/p&gt; &#xA;&lt;h2&gt;Build managers&lt;/h2&gt; &#xA;&lt;p&gt;This repository is intended for use with either the &lt;a href=&#34;https://maven.apache.org&#34;&gt;Maven&lt;/a&gt; or &lt;a href=&#34;https://gradle.org&#34;&gt;Gradle&lt;/a&gt; build managers. It can be run from either the command line or integrated into Eclipse, NetBeans, and IntelliJ. You can also access it via &lt;a href=&#34;https://bintray.com/algs4/maven/algs4&#34;&gt;Bintray&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Coursera Algorithms, Part I and II students&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to use this public repository to develop solutions to the programming assignments. However, please do not store solutions to programming assignments in public repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2000–2023 by Robert Sedgewick and Kevin Wayne.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is released under GPLv3.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to this repository&lt;/h2&gt; &#xA;&lt;p&gt;This &lt;a href=&#34;http://algs4.cs.princeton.edu/code/wishlist.txt&#34;&gt;wishlist.txt&lt;/a&gt; contains a list of algorithms and data structures that we would like to add to the repository. Indeed, several of the algorithms and data structures in this repository were contributed by others. If interested, please follow the same style as the code in the repository and thoroughly test your code before contacting us.&lt;/p&gt; &#xA;&lt;h2&gt;Support for other programming languages&lt;/h2&gt; &#xA;&lt;p&gt;Some of the code in this repository has been translated to other languages:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/garyaiki/Scala-Algorithms&#34;&gt;Scala&lt;/a&gt; by Gary Struthers &lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nguyenqthai/Algs4Net&#34;&gt;.NET&lt;/a&gt; by Quoc Thai &lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/itu-algorithms/itu.algs4&#34;&gt;Python&lt;/a&gt; by ITU Copenhagen &lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shellfly/algs4-py&#34;&gt;Python&lt;/a&gt; by Li Hao &lt;/li&gt;&#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shellfly/algo&#34;&gt;Go&lt;/a&gt; by Li Hao &lt;/li&gt;&#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to Peter Korgan for Maven and Gradle support.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FRANKSTEIN11/socket_kafka</title>
    <updated>2023-09-05T01:30:14Z</updated>
    <id>tag:github.com,2023-09-05:/FRANKSTEIN11/socket_kafka</id>
    <link href="https://github.com/FRANKSTEIN11/socket_kafka" rel="alternate"></link>
    <summary type="html">&lt;p&gt;websocket + kafka , websocket to chat , kafka to do something you define&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Websocket + Kafka Chat Application&lt;/h1&gt; &#xA;&lt;p&gt;This project integrates WebSockets for real-time chat functionality and Kafka for message processing and other backend operations. It&#39;s designed to be platform-agnostic, allowing WebSocket clients from any platform to connect seamlessly.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture diagram&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FRANKSTEIN11/socket_kafka/master/resource/d-tbtJbQkQ.svg?sanitize=true&#34; alt=&#34;d-tbtJbQkQ&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;WebSocket-Kafka Architecture Diagram&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FRANKSTEIN11/socket_kafka/master/resource/Architecture-Diagram.png&#34; alt=&#34;WebSocket-Kafka Architecture Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;WebSocket-Kafka Class Interaction Diagram (Styled)&lt;/strong&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/FRANKSTEIN11/socket_kafka/master/resource/Class-Interaction-Diagram.png&#34; alt=&#34;WebSocket-Kafka Class Interaction Diagram (Styled)&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Real-time Chat&lt;/strong&gt;: Using WebSockets, users can send and receive messages in real-time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Kafka Integration&lt;/strong&gt;: All chat messages are processed through Kafka, allowing for scalable and reliable message processing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Custom Kafka Operations&lt;/strong&gt;: Apart from handling chat messages, Kafka is also used for [define your custom operation, e.g., &#34;analyzing chat sentiment&#34;, &#34;archiving old chats&#34;, etc.].&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sliding Windows&lt;/strong&gt;: To prevent double-spending in Kafka, we&#39;ve implemented a sliding window mechanism.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Platform Agnostic&lt;/strong&gt;: Whether you&#39;re using a web, mobile, or desktop client, our WebSocket integration ensures you can connect to our chat system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: Ensure you have Kafka and a WebSocket server installed and running.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/FRANKSTEIN11/socket_kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Navigate to the Project Directory&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd socket_kafka&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the Server&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;run com/yenanren/socket_kafka/SocketKafkaApplication&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Start the Client (or Start Your Own Client)&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;run com.yenanren.socket_kafka.client.WebSocketClient1&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect your WebSocket client to WebSocketConst.CHAT_URL &lt;code&gt;ws://[your-server-address]:[port]&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Send a message through the WebSocket client.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Kafka will process the message and perform the defined operations.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Receive real-time messages and updates on your WebSocket client.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to fork this repository, make changes, and submit pull requests. Any contributions, whether big or small, are greatly appreciated.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License.&lt;/p&gt;</summary>
  </entry>
</feed>