<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-20T01:33:09Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>grishka/poke.dex</title>
    <updated>2024-04-20T01:33:09Z</updated>
    <id>tag:github.com,2024-04-20:/grishka/poke.dex</id>
    <link href="https://github.com/grishka/poke.dex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Poke.dex&lt;/h1&gt; &#xA;&lt;p&gt;So one day, I saw someone post their &lt;a href=&#34;https://github.com/skydoves/pokedex-compose&#34;&gt;Jetpack Compose pokedex app&lt;/a&gt; on /r/androiddev on Reddit as supposedly following the current &#34;best practices&#34; around Android app development. I took it as a challenge to build the same thing, but &lt;strong&gt;ignoring&lt;/strong&gt; all the things that Google recommends on this particular season and/or that I might be required to like if I cared about the labor market.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/grishka/poke.dex/master/images/screenshots.jpg&#34;&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://github.com/grishka/poke.dex/releases/latest&#34;&gt;releases&lt;/a&gt; to download the latest apk.&lt;/p&gt; &#xA;&lt;h2&gt;Tech stack &amp;amp; open-source libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimum SDK level is 21 (Android 5.0).&lt;/li&gt; &#xA; &lt;li&gt;Java 17 based, utilizing &lt;a href=&#34;https://developer.android.com/reference/java/lang/Runnable&#34;&gt;Runnable&lt;/a&gt;s posted to &lt;a href=&#34;https://developer.android.com/reference/android/os/HandlerThread&#34;&gt;HandlerThread&lt;/a&gt;s and back to the main thread for asynchronous operations.&lt;/li&gt; &#xA; &lt;li&gt;Jetpack libraries: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;None really.&lt;/li&gt; &#xA;   &lt;li&gt;There are RecyclerView and SwipeRefreshLayout from &lt;a href=&#34;https://github.com/grishka/LiteX&#34;&gt;LiteX&lt;/a&gt;, my de-appcompat-ified fork of several AndroidX libraries.&lt;/li&gt; &#xA;   &lt;li&gt;AndroidX and Jetpack aren&#39;t the same thing, are they? Or is AndroidX part of Jetpack?&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Architecture: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Something MVC-ish I guess? I don&#39;t really like following patterns for the sake of following patterns.&lt;/li&gt; &#xA;   &lt;li&gt;I do sometimes end up with a pattern in my code by pure coincidence because that ends up being the most optimal way of solving the task at hand.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/okhttp/tree/okhttp_3.14.x&#34;&gt;OkHttp3&lt;/a&gt; for networking.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/grishka/appkit&#34;&gt;Appkit&lt;/a&gt; for some boilerplate and an image loader.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/gson&#34;&gt;Gson&lt;/a&gt; for JSON parsing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/johncarl81/parceler&#34;&gt;Parceler&lt;/a&gt; for one (1) class that I needed to be parcelable. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Yes it&#39;s overkill in this particular case. But then I used Parceler in another project and I liked it (I used an Android Studio plugin to generate parcelables before that). And I want to show off my Android stack to contrast it with the &#34;best practice&#34; one anyway.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Android&#39;s built-in SQLite for caching. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;No fancy abstraction libraries on top of it. It&#39;s &lt;code&gt;Cursor&lt;/code&gt;s all the way down!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open API&lt;/h2&gt; &#xA;&lt;p&gt;Poke.dex uses the &lt;a href=&#34;https://pokeapi.co/&#34;&gt;PokeAPI&lt;/a&gt; to retrieve the Pok√©mon data.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h4&gt;Is this project serious?&lt;/h4&gt; &#xA;&lt;p&gt;Absolutely. This is more-or-less how I&#39;ve been doing Android apps for around 10 years, including ones used by millions of people.&lt;/p&gt; &#xA;&lt;h4&gt;Have you tried { technology.name }?&lt;/h4&gt; &#xA;&lt;p&gt;Probably not. I&#39;m not very open to innovation in programming because most of the current &#34;innovations&#34; involve piling ever more abstraction layers on top of each other for no other benefit than to say &#34;my code looks beautiful&#34; or &#34;this project can be worked on even by most junior of developers who need not understand the abstraction layers beneath the topmost one&#34;.&lt;/p&gt; &#xA;&lt;p&gt;I do like where Java is going though, hence Java 17.&lt;/p&gt;</summary>
  </entry>
</feed>