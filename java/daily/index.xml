<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-15T01:35:40Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>spring-projects/spring-data-examples</title>
    <updated>2023-12-15T01:35:40Z</updated>
    <id>tag:github.com,2023-12-15:/spring-projects/spring-data-examples</id>
    <link href="https://github.com/spring-projects/spring-data-examples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spring Data Example Projects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spring Data Examples &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://ge.spring.io/scans?search.rootProjectNames=Spring Data - Examples&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Revved%20up%20by-Gradle%20Enterprise-06A0CE?logo=Gradle&amp;amp;labelColor=02303A&#34; alt=&#34;Revved up by Gradle Enterprise&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://travis-ci.org/spring-projects/spring-data-examples&#34;&gt;&lt;img src=&#34;https://travis-ci.org/spring-projects/spring-data-examples.svg?branch=main&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This repository contains example projects for the different Spring Data modules to showcase the API and how to use the features provided by the modules.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;We have separate folders for the samples of individual modules:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_for_apache_cassandra&#34;&gt;Spring Data for Apache Cassandra&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;example&lt;/code&gt; - Shows core Spring Data support for Apache Cassandra.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;kotlin&lt;/code&gt; - Example for using Cassandra with Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;reactive&lt;/code&gt; - Example project to show reactive template and repository support.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_elasticsearch&#34;&gt;Spring Data Elasticsearch&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;example&lt;/code&gt; - Example how to use basic text search, geo-spatial search and facets. It uses the High Level REST Client backing template and repository.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;reactive&lt;/code&gt; - Example how to use reactive client, template and repository features.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Local Elasticsearch instance must be running to run the tests.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_jdbc&#34;&gt;Spring Data JDBC&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;basic&lt;/code&gt; - Basic usage of Spring Data JDBC.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;graalvm-native&lt;/code&gt; - This example compiles a basic Spring Data JDBC application into a GraalVM native image.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;howto&lt;/code&gt; - A collection of projects to go with the &lt;a href=&#34;https://spring.io/blog/2021/09/09/spring-data-jdbc-how-to-use-custom-id-generation&#34;&gt;Spring Data JDBC - How to blog posts&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;immutables&lt;/code&gt; - Showing Spring Data JDBC usage with &lt;a href=&#34;https://immutables.github.io/&#34;&gt;Immutables&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;jmolecules&lt;/code&gt; - Demonstrates the interaction of jMolecules with Spring Data JDBC.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;jooq&lt;/code&gt; - Demonstrates how to use jOOQ and Spring Data JDBC together.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mybatis&lt;/code&gt; - Demonstrate how to use MyBatis to generate SQL for Spring Data JDBC.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;singlequeryloading&lt;/code&gt; - Demonstrates how to enable Single Query Loading.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_jpa&#34;&gt;Spring Data JPA&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;eclipselink&lt;/code&gt; - Sample project to show how to use Spring Data JPA with Spring Boot and &lt;a href=&#34;https://www.eclipse.org/eclipselink/&#34;&gt;Eclipselink&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;example&lt;/code&gt; - Probably the project you want to have a look at first. Contains a variety of sample packages, showcasing the different levels at which you can use Spring Data JPA. Have a look at the &lt;code&gt;simple&lt;/code&gt; package for the most basic setup. Contains also examples running on Virtual Threads.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;interceptors&lt;/code&gt; - Example of how to enrich the repositories with AOP.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;jpa21&lt;/code&gt; - Shows support for JPA 2.1 specific features (stored procedures support).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;multiple-datasources&lt;/code&gt; - Examples of how to use Spring Data JPA with multiple `DataSource`s.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;query-by-example&lt;/code&gt; - Example project showing usage of Query by Example with Spring Data JPA.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;security&lt;/code&gt; - Example of how to integrate Spring Data JPA Repositories with Spring Security.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;showcase&lt;/code&gt; - Refactoring show case of how to improve a plain-JPA-based persistence layer by using Spring Data JPA (read: removing close to all of the implementation code).Follow the &lt;code&gt;demo.txt&lt;/code&gt; file for detailed instructions.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;vavr&lt;/code&gt; - Shows the support of &lt;a href=&#34;https://www.vavr.io&#34;&gt;Vavr&lt;/a&gt; collection types as return types for query methods.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_ldap&#34;&gt;Spring Data LDAP&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;example&lt;/code&gt; - Sample for Spring Data repositories to access an LDAP store.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_mongodb&#34;&gt;Spring Data MongoDB&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;aggregation&lt;/code&gt; - Example project to showcase the MongoDB aggregation framework support.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;example&lt;/code&gt; - Example project for general repository functionality (including geo-spatial functionality), Querydsl integration and advanced topics.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;fluent-api&lt;/code&gt; - Example project to show the new fluent API (&lt;code&gt;MongoTemplate&lt;/code&gt;-alternative) to interact with MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;geo-json&lt;/code&gt; - Example project showing usage of &lt;a href=&#34;http://geojson.org&#34;&gt;GeoJSON&lt;/a&gt; with MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;gridfs&lt;/code&gt; - Example project showing usage of gridFS with MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;jmolecules&lt;/code&gt; - Example of Spring Data MongoDB working with a jMolecules based domain model.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;kotlin&lt;/code&gt; - Example for using &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt; with MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;linking&lt;/code&gt; - Example demonstrating possibilities for linking documents.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;query-by-example&lt;/code&gt; - Example project showing usage of Query by Example with MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;querydsl&lt;/code&gt; - Example project showing imperative and reactive &lt;a href=&#34;https://github.com/querydsl/querydsl&#34;&gt;Querydsl&lt;/a&gt; support for MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;reactive&lt;/code&gt; - Example project to show reactive template and repository support.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;repository-metrics&lt;/code&gt; - Example project to show how to collect repository method invocation metrics.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;security&lt;/code&gt; - Example project showing usage of Spring Security with MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;text-search&lt;/code&gt; - Example project showing usage of MongoDB text search feature.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;transactions&lt;/code&gt; - Example project for imperative and reactive MongoDB 4.0 transaction support.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_neo4j&#34;&gt;Spring Data Neo4j&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;example&lt;/code&gt; - Example to show basic node and relationship entities and repository usage.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_r2dbc&#34;&gt;Spring Data R2DBC&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;example&lt;/code&gt; - Basic usage of Spring Data R2DBC.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_redis&#34;&gt;Spring Data Redis&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;cluster&lt;/code&gt; - Example for Redis Cluster support.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;example&lt;/code&gt; - Example for basic Spring Data Redis setup.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;pubsub&lt;/code&gt; - Example project to show Pub/Sub usage using Platform and Virtual Threads.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;reactive&lt;/code&gt; - Example project to show reactive template support.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;repositories&lt;/code&gt; - Example demonstrating Spring Data repository abstraction on top of Redis.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;sentinel&lt;/code&gt; - Example for Redis Sentinel support.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;streams&lt;/code&gt; - Example for &lt;a href=&#34;https://redis.io/topics/streams-intro&#34;&gt;Redis Streams&lt;/a&gt; support.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Local Redis instances must be running to run the tests. One option is to use Docker in a separate terminal:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;$ docker run -p 6379:6379 redis:5.0&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;admonitionblock warning&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Warning&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; If you’re done using it, don’t forget to shut it down! &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_rest&#34;&gt;Spring Data REST&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;headers&lt;/code&gt; - A sample showing the population of HTTP headers and the usage of them to perform conditional &lt;code&gt;GET&lt;/code&gt; requests.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;multi-store&lt;/code&gt; - A sample REST web-service based on both Spring Data JPA and Spring Data MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;projections&lt;/code&gt; - A sample REST web-service showing how to use projections.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;security&lt;/code&gt; - A sample REST web-service secured using Spring Security.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;starbucks&lt;/code&gt; - A sample REST web-service built with Spring Data REST and MongoDB.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;uri-customizations&lt;/code&gt; - Example project to show URI customization capabilities.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_spring_data_web_support&#34;&gt;Spring Data web support&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;projections&lt;/code&gt; - Example for Spring Data web support for JSONPath and XPath expressions on projection interfaces.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;querydsl&lt;/code&gt; - Example for Spring Data Querydsl web integration (creating a &lt;code&gt;Predicate&lt;/code&gt; from web requests).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;web&lt;/code&gt; - Example for Spring Data web integration (binding &lt;code&gt;Pageable&lt;/code&gt; instances to Spring MVC controller methods, using interfaces to bind Spring MVC request payloads).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_miscellaneous&#34;&gt;Miscellaneous&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;bom&lt;/code&gt; - Example project how to use the Spring Data release train bom in non-Spring-Boot scenarios.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;map&lt;/code&gt; - Example project to show how to use &lt;code&gt;Map&lt;/code&gt;-backed repositories.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;multi-store&lt;/code&gt; - Example project to use both Spring Data MongoDB and Spring Data JPA in one project.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_note&#34;&gt;Note&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;The example projects make use of the &lt;a href=&#34;https://projectlombok.org/&#34;&gt;Lombok&lt;/a&gt; plugin. To get proper code navigation in your IDE, you must install it separately. Lombok is available in the IntelliJ plugins repository and as a &lt;a href=&#34;https://projectlombok.org/download&#34;&gt;download&lt;/a&gt; for Eclipse-based IDEs.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;The code makes use of Java 16 language features therefore you need Java 16 or newer to run and compile the examples.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Most store modules examples start their database via Testcontainers or as embedded/in-memory server unless stated otherwise.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>