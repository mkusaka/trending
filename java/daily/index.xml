<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-09T01:29:04Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>microsoft/ApplicationInsights-Java</title>
    <updated>2023-09-09T01:29:04Z</updated>
    <id>tag:github.com,2023-09-09:/microsoft/ApplicationInsights-Java</id>
    <link href="https://github.com/microsoft/ApplicationInsights-Java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Application Insights for Java&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github-private.visualstudio.com/microsoft/_build/latest?definitionId=224&amp;amp;branchName=refs%2Fpull%2F1583%2Fmerge&#34;&gt;&lt;img src=&#34;https://github-private.visualstudio.com/microsoft/_apis/build/status/CDPX/applicationinsights-java/applicationinsights-java-Windows-Buddy-master?branchName=refs%2Fpull%2F1583%2Fmerge&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Application Insights for Java&lt;/h1&gt; &#xA;&lt;p&gt;See documentation at &lt;a href=&#34;https://docs.microsoft.com/en-us/azure/azure-monitor/app/java-in-process-agent&#34;&gt;https://docs.microsoft.com/en-us/azure/azure-monitor/app/java-in-process-agent&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;If you need to build locally or want to contribute&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/ApplicationInsights-Java/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Microsoft Open Source Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>eclipse/jetty.project</title>
    <updated>2023-09-09T01:29:04Z</updated>
    <id>tag:github.com,2023-09-09:/eclipse/jetty.project</id>
    <link href="https://github.com/eclipse/jetty.project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Eclipse JettyÂ® - Web Container &amp; Clients - supports HTTP/2, HTTP/1.1, HTTP/1.0, websocket, servlets, and more&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eclipse Jetty Canonical Repository&lt;/h1&gt; &#xA;&lt;p&gt;This is the canonical repository for the Jetty project, feel free to fork and contribute now!&lt;/p&gt; &#xA;&lt;p&gt;Submitting a patch or pull request?&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have an Eclipse Contributor Agreement (ECA) on file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.eclipse.org/legal/ecafaq.php&#34;&gt;eclipse.org/legal/ecafaq&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project description&lt;/h2&gt; &#xA;&lt;p&gt;Jetty is a lightweight highly scalable java based web server and servlet engine. Our goal is to support web protocols like HTTP, HTTP/2 and WebSocket in a high volume low latency way that provides maximum performance while retaining the ease of use and compatibility with years of servlet development. Jetty is a modern fully async web server that has a long history as a component oriented technology easily embedded into applications while still offering a solid traditional distribution for webapp deployment.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://projects.eclipse.org/projects/rt.jetty&#34;&gt;https://projects.eclipse.org/projects/rt.jetty&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Webapp Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ mkdir base &amp;amp;&amp;amp; cd base&#xA;$ java -jar $JETTY_HOME/start.jar --add-modules=http,deploy&#xA;$ cp ~/src/myproj/target/mywebapp.war webapps&#xA;$ java -jar $JETTY_HOME/start.jar &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Embedded Example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Server server = new Server(port);&#xA;ServletContextHandler context = new ServletContextHandler(server, &#34;/&#34;);&#xA;context.addServlet(MyServlet.class, &#34;/*&#34;);&#xA;server.start();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Project documentation is available on the Jetty Eclipse website.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://eclipse.dev/jetty/documentation/&#34;&gt;https://eclipse.dev/jetty/documentation/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://maven.apache.org/&#34;&gt;Apache Maven 3.8.0&lt;/a&gt; and &lt;a href=&#34;https://adoptium.net/&#34;&gt;OpenJDK&lt;/a&gt; requirements:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Maven Version&lt;/th&gt; &#xA;   &lt;th&gt;Minimum JDK&lt;/th&gt; &#xA;   &lt;th&gt;Recommended JDK&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-10.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maven 3.8.6+&lt;/td&gt; &#xA;   &lt;td&gt;OpenJDK 11&lt;/td&gt; &#xA;   &lt;td&gt;OpenJDK 17 (for optional loom and http/3 support)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-11.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maven 3.8.6+&lt;/td&gt; &#xA;   &lt;td&gt;OpenJDK 11&lt;/td&gt; &#xA;   &lt;td&gt;OpenJDK 17 (for optional loom and http/3 support)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-12.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maven 3.8.6+&lt;/td&gt; &#xA;   &lt;td&gt;OpenJDK 17&lt;/td&gt; &#xA;   &lt;td&gt;OpenJDK 17&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Full Build with All Tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fast Build if you need jars and distribution (not running tests, checkstyle, enforcer, license check):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn -Pfast clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional build tools:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphviz.org/&#34;&gt;&lt;code&gt;graphviz&lt;/code&gt;&lt;/a&gt; - used by asciidoctor in the jetty-documentation build to produce various graphs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;&lt;code&gt;Docker&lt;/code&gt;&lt;/a&gt; - used to run some integration tests for testing third party integrations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once the build is complete, you can find the built Jetty Maven artifacts in your Maven local repository. Along with the following locations of note:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branches&lt;/th&gt; &#xA;   &lt;th&gt;Location&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;all&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-home/target/jetty-home-&amp;lt;ver&amp;gt;.tar.gz&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Jetty Home standalone tarball&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-10.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-runner/target/jetty-runner-&amp;lt;ver&amp;gt;.jar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Jetty Runner uber jar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-11.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-runner/target/jetty-runner-&amp;lt;ver&amp;gt;.jar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Jetty Runner uber jar&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-12.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-ee10/jetty-ee10-runner/target/jetty-ee10-runner-&amp;lt;ver&amp;gt;.jar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Jetty Runner uber jar for ee10/Servlet 6 (jakarta.servlet) webapps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-12.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-ee9/jetty-ee9-runner/target/jetty-ee9-runner-&amp;lt;ver&amp;gt;.jar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Jetty Runner uber jar for ee9/Servlet 5 (jakarta.servlet) webapps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-12.0.x&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jetty-ee8/jetty-ee8-runner/target/jetty-ee8-runner-&amp;lt;ver&amp;gt;.jar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Jetty Runner uber jar for ee8/Servlet 4 (javax.servlet) webapps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note: The build tests do a lot of stress testing, and on some machines it is necessary to set the file descriptor limit to greater than 2048 for the tests to all pass successfully (check your &lt;code&gt;ulimit -n&lt;/code&gt; value).&lt;/p&gt; &#xA;&lt;h2&gt;Professional Services&lt;/h2&gt; &#xA;&lt;p&gt;Expert advice and production support are available through &lt;a href=&#34;https://webtide.com&#34;&gt;Webtide.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>