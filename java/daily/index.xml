<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-02T01:35:25Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>FabricMC/fabric</title>
    <updated>2023-01-02T01:35:25Z</updated>
    <id>tag:github.com,2023-01-02:/FabricMC/fabric</id>
    <link href="https://github.com/FabricMC/fabric" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Essential hooks for modding with Fabric.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Fabric API&lt;/h1&gt; &#xA;&lt;p&gt;Essential hooks for modding with Fabric.&lt;/p&gt; &#xA;&lt;p&gt;Fabric API is the library for essential hooks and interoperability mechanisms for Fabric mods. Examples include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Exposing functionality that is useful but difficult to access for many mods such as particles, biomes and dimensions&lt;/li&gt; &#xA; &lt;li&gt;Adding events, hooks and APIs to improve interopability between mods.&lt;/li&gt; &#xA; &lt;li&gt;Essential features such as registry synchronization and adding information to crash reports.&lt;/li&gt; &#xA; &lt;li&gt;An advanced rendering API designed for compatibility with optimization mods and graphics overhaul mods.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also check out &lt;a href=&#34;https://github.com/FabricMC/fabric-loader&#34;&gt;Fabric Loader&lt;/a&gt;, the (mostly) version-independent mod loader that powers Fabric. Fabric API is a mod like any other Fabric mod which requires Fabric Loader to be installed.&lt;/p&gt; &#xA;&lt;p&gt;For support and discussion for both developers and users, visit &lt;a href=&#34;https://discord.gg/v6v4pMv&#34;&gt;the Fabric Discord server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using Fabric API to play with mods&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you have install fabric loader first. More information about installing Fabric Loader can be found &lt;a href=&#34;https://fabricmc.net/use/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use Fabric API, download it from &lt;a href=&#34;https://www.curseforge.com/minecraft/mc-mods/fabric-api&#34;&gt;CurseForge&lt;/a&gt;, &lt;a href=&#34;https://github.com/FabricMC/fabric/releases&#34;&gt;GitHub Releases&lt;/a&gt; or &lt;a href=&#34;https://modrinth.com/mod/fabric-api&#34;&gt;Modrinth&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The downloaded jar file should be placed in your &lt;code&gt;mods&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Using Fabric API to develop mods&lt;/h2&gt; &#xA;&lt;p&gt;To setup a Fabric development environment, check out the &lt;a href=&#34;https://github.com/FabricMC/fabric-example-mod&#34;&gt;Fabric example mod&lt;/a&gt; and follow the instructions there. The example mod already depends on Fabric API.&lt;/p&gt; &#xA;&lt;p&gt;To include the full Fabric API with all modules in the development environment, add the following to your &lt;code&gt;dependencies&lt;/code&gt; block in the gradle buildscript:&lt;/p&gt; &#xA;&lt;h3&gt;Groovy DSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;modImplementation &#34;net.fabricmc.fabric-api:fabric-api:FABRIC_API_VERSION&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kotlin DSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;modImplementation(&#34;net.fabricmc.fabric-api:fabric-api:FABRIC_API_VERSION&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, modules from Fabric API can be specified individually as shown below (including module jar to your mod jar):&lt;/p&gt; &#xA;&lt;h3&gt;Groovy DSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;// Make a collection of all api modules we wish to use&#xA;Set&amp;lt;String&amp;gt; apiModules = [&#xA;    &#34;fabric-api-base&#34;,&#xA;    &#34;fabric-command-api-v1&#34;,&#xA;    &#34;fabric-lifecycle-events-v1&#34;,&#xA;    &#34;fabric-networking-api-v1&#34;&#xA;]&#xA;&#xA;// Add each module as a dependency&#xA;apiModules.forEach {&#xA;    include(modImplementation(fabricApi.module(it, FABRIC_API_VERSION)))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kotlin DSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Make a set of all api modules we wish to use&#xA;setOf(&#xA;    &#34;fabric-api-base&#34;,&#xA;    &#34;fabric-command-api-v1&#34;,&#xA;    &#34;fabric-lifecycle-events-v1&#34;,&#xA;    &#34;fabric-networking-api-v1&#34;&#xA;).forEach {&#xA;    // Add each module as a dependency&#xA;    modImplementation(fabricApi.module(it, FABRIC_API_VERSION))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--Linked to gradle documentation on properties--&gt; &#xA;&lt;p&gt;Instead of hardcoding version constants all over the build script, Gradle properties may be used to replace these constants. Properties are defined in the &lt;code&gt;gradle.properties&lt;/code&gt; file at the root of a project. More information is available &lt;a href=&#34;https://docs.gradle.org/current/userguide/organizing_gradle_projects.html#declare_properties_in_gradle_properties_file&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See something Fabric API doesn&#39;t support, a bug or something that may be useful? We welcome contributions to improve Fabric API. Make sure to read &lt;a href=&#34;https://raw.githubusercontent.com/FabricMC/fabric/1.19.3/CONTRIBUTING.md&#34;&gt;the development guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;Fabric API is designed to be modular for ease of updating. This also has the advantage of splitting up the codebase into smaller chunks.&lt;/p&gt; &#xA;&lt;p&gt;Each module contains its own &lt;code&gt;README.md&lt;/code&gt;* explaining the module&#39;s purpose and additional info on using the module.&lt;/p&gt; &#xA;&lt;p&gt;* The README for each module is being worked on; not every module has a README at the moment&lt;/p&gt;</summary>
  </entry>
</feed>