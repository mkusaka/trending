<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-24T01:33:55Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jinho-yoo-jack/wanted-preonboarding-challenge-backend-13</title>
    <updated>2023-08-24T01:33:55Z</updated>
    <id>tag:github.com,2023-08-24:/jinho-yoo-jack/wanted-preonboarding-challenge-backend-13</id>
    <link href="https://github.com/jinho-yoo-jack/wanted-preonboarding-challenge-backend-13" rel="alternate"></link>
    <summary type="html">&lt;p&gt;원티드 프리온보딩 백엔드 챌린지 사전과제&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;wanted-preonboarding-challenge-backend-13&lt;/h1&gt; &#xA;&lt;p&gt;원티드 프리온보딩 백엔드 챌린지 사전과제&lt;/p&gt; &#xA;&lt;h2&gt;과제1&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;비즈니스 요구사항: 소극장에 입장하는 관객의 티켓을 확인하고, 만약 티켓이 없다면 구매 후, 입장을 시키고 티켓이 있다면 티켓 확인 후, 입장 시킨다.&lt;/li&gt; &#xA; &lt;li&gt;문제: 위 &#34;비즈니스 요구사항&#34;에 맞게 개발된 Theater 패키지가 있다. 하지만, 실행은 잘 되지만 패키지에는 2가지 문제점을 가지고 있다. &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;코드를 읽는 사람이 코드(ex. 관람객의 상태나 행동)를 예측할 수 없다.&lt;/li&gt; &#xA;   &lt;li&gt;변경의 유연함을 토대로 확장성을 가지고 있지 않다.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;과제 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Theater 패키지의 코드를 읽는 사람이 쉽게 이해할 수 있고 예측할 수 있도록 수정 해보자.&lt;/li&gt; &#xA;   &lt;li&gt;매일 변화하는 비즈니스 요구사항의 변경에 유연하고 기능 확장성을 가지는 코드로 수정 해보자.&lt;/li&gt; &#xA;   &lt;li&gt;TheaterService의 enter() 비즈니스 로직이 정상 실행되는지 확인해보자. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;관람객의 정보는 RequestMessage로 받아서 처리하자.&lt;/li&gt; &#xA;     &lt;li&gt;관람객은 초대권 티켓을 가지고 있을 수도 있고 없을 수도 있다.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;과제2&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;비즈니스 요구사항: WantedCafe에서 아메리카노만 주문 및 결제가 가능한데, 다른 음료도 주문 및 결제가 가능하게 수정해주세요.&lt;/li&gt; &#xA; &lt;li&gt;문제: 위 &#34;비즈니스 요구사항&#34;에 맞게 개발 완료 및 정상 실행은 되지만 확장성과 유지보수성이 낮다.&lt;/li&gt; &#xA; &lt;li&gt;과제 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;현재 주문 가능한 음료는 오직 아메리카노뿐인데, 주문 가능한 음료의 수를 최대 3개까지 확장해보자.&lt;/li&gt; &#xA;   &lt;li&gt;각각의 객체들이 적절한 책임과 책임의 범위를 가지고 있는지 확인해보고, 너무 많은 책임과 넓은 범위의 책임을 가지고 있다면 적절하게 수정해보자.&lt;/li&gt; &#xA;   &lt;li&gt;CafeService의 order() 비즈니스 로직이 정상 실행되는지 확인해보자. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;주문할 음료와 수량은 RequestBody로 받아서 처리하자.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;과제 제출 방법&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;master 브랜치로 프로젝트를 clone 해주세요.&lt;/li&gt; &#xA; &lt;li&gt;로컬 레파지토리에 &lt;code&gt;feature/이름or닉네임&lt;/code&gt;으로 피쳐 브랜치를 생성해주세요.&lt;/li&gt; &#xA; &lt;li&gt;이제부터 사전과제를 풀어봅니다.&lt;/li&gt; &#xA; &lt;li&gt;모든 사전과제를 풀었다면 이제 원격 레파지토리에 commit 및 push 후 PR을 올려 해주세요.&lt;/li&gt; &#xA; &lt;li&gt;Example &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; 1. git checkout -b feature/migration2TcAsMasterSlaveStructure&#xA; # 브랜치를 생성하고 해당 브랜치로 checkout.&#xA; # feature의 브랜치명은 내부적으로 관리하는 issues번호나 프로젝트 관리도구에의 ID 값을 이용&#xA; 2. git add .&#xA; # 모든 변경사항을 tracking 되는 상태로 변경할거에요.&#xA; 3. git commit -m “Commit Messsage for Modify Information”&#xA; # git commit를 수행하고 작업내용을 팀 내부 규약대로 작성&#xA; 3-1. git push --set-upstream origin feature/migration2TcAsMasterSlaveStructure&#xA; # 해당 내용을 remote repository로 push&#xA; 4. push하면 gitlab/github에 Pull Request나 Merge Request 생성하는 버튼이 활성화&#xA; 5. Merge Request 버튼을 클릭 후, 숙제에 관한 내용 작성 후 PR 요청을 보내면 끝&#xA; 6. Merge 승인이되면 WEB UI화면에서 merge 버튼이 활성화 됨.&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>bonigarcia/webdrivermanager</title>
    <updated>2023-08-24T01:33:55Z</updated>
    <id>tag:github.com,2023-08-24:/bonigarcia/webdrivermanager</id>
    <link href="https://github.com/bonigarcia/webdrivermanager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated driver management and other helper features for Selenium WebDriver in Java&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/search?q=g:io.github.bonigarcia%20a:webdrivermanager&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.github.bonigarcia/webdrivermanager.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bonigarcia/webdrivermanager/actions&#34;&gt;&lt;img src=&#34;https://github.com/bonigarcia/webdrivermanager/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/summary/new_code?id=io.github.bonigarcia%3Awebdrivermanager&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=io.github.bonigarcia:webdrivermanager&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/bonigarcia/webdrivermanager&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/bonigarcia/webdrivermanager/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.oracle.com/java/technologies/javase-downloads.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/jdk-8-green.svg?sanitize=true&#34; alt=&#34;badge-jdk&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache2-green.svg?sanitize=true&#34; alt=&#34;License badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bonigarcia/webdrivermanager/master/#backers&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/backers/badge.svg?sanitize=true&#34; alt=&#34;Backers on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/bonigarcia/webdrivermanager/master/#sponsors&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsors/badge.svg?sanitize=true&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/tagged/webdrivermanager-java&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stackoverflow-webdrivermanager_java-green.svg?logo=stackoverflow&#34; alt=&#34;Support badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/boni_gg&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/boni_gg.svg?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://bonigarcia.dev/webdrivermanager/&#34;&gt;&lt;img src=&#34;https://bonigarcia.github.io/img/wdm.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bonigarcia.dev/webdrivermanager/&#34;&gt;WebDriverManager&lt;/a&gt; is an open-source Java library that carries out the management (i.e., download, setup, and maintenance) of the drivers required by &lt;a href=&#34;https://www.selenium.dev/documentation/webdriver/&#34;&gt;Selenium WebDriver&lt;/a&gt; (e.g., chromedriver, geckodriver, msedgedriver, etc.) in a fully automated manner. In addition, WebDriverManager provides other relevant features, such as the capability to discover browsers installed in the local system, building WebDriver objects (such as &lt;code&gt;ChromeDriver&lt;/code&gt;, &lt;code&gt;FirefoxDriver&lt;/code&gt;, &lt;code&gt;EdgeDriver&lt;/code&gt;, etc.), and running browsers in Docker containers seamlessly.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;As of version 5, the documentation of WebDriverManager has moved &lt;a href=&#34;https://bonigarcia.dev/webdrivermanager/&#34;&gt;here&lt;/a&gt;. This site contains all the features, examples, configuration, and advanced capabilities of WebDriverManager.&lt;/p&gt; &#xA;&lt;h2&gt;Driver Management&lt;/h2&gt; &#xA;&lt;p&gt;The primary use of WebDriverManager is the automation of driver management. For using this feature, you need to select a given manager in the WebDriverManager API (e.g., &lt;code&gt;chromedriver()&lt;/code&gt; for Chrome) and invoke the method &lt;code&gt;setup()&lt;/code&gt;. The following example shows the skeleton of a test case using &lt;a href=&#34;https://junit.org/junit5/&#34;&gt;JUnit 5&lt;/a&gt;, &lt;a href=&#34;https://www.selenium.dev/documentation/webdriver/&#34;&gt;Selenium WebDriver&lt;/a&gt;, and &lt;a href=&#34;https://bonigarcia.dev/webdrivermanager/&#34;&gt;WebDriverManager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import org.junit.jupiter.api.AfterEach;&#xA;import org.junit.jupiter.api.BeforeAll;&#xA;import org.junit.jupiter.api.BeforeEach;&#xA;import org.junit.jupiter.api.Test;&#xA;import org.openqa.selenium.WebDriver;&#xA;import org.openqa.selenium.chrome.ChromeDriver;&#xA;&#xA;import io.github.bonigarcia.wdm.WebDriverManager;&#xA;&#xA;class ChromeTest {&#xA;&#xA;    WebDriver driver;&#xA;&#xA;    @BeforeAll&#xA;    static void setupAll() {&#xA;        WebDriverManager.chromedriver().setup();&#xA;    }&#xA;&#xA;    @BeforeEach&#xA;    void setup() {&#xA;        driver = new ChromeDriver();&#xA;    }&#xA;&#xA;    @AfterEach&#xA;    void teardown() {&#xA;        driver.quit();&#xA;    }&#xA;&#xA;    @Test&#xA;    void test() {&#xA;        // Your test logic here&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use the method &lt;code&gt;create()&lt;/code&gt; to manage automatically the driver and instantiate the &lt;code&gt;WebDriver&lt;/code&gt; object in a single line. For instance, as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import org.junit.jupiter.api.AfterEach;&#xA;import org.junit.jupiter.api.BeforeEach;&#xA;import org.junit.jupiter.api.Test;&#xA;import org.openqa.selenium.WebDriver;&#xA;import org.openqa.selenium.chrome.ChromeDriver;&#xA;&#xA;import io.github.bonigarcia.wdm.WebDriverManager;&#xA;&#xA;class ChromeCreateTest {&#xA;&#xA;    WebDriver driver;&#xA;&#xA;    @BeforeEach&#xA;    void setup() {&#xA;        driver = WebDriverManager.chromedriver().create();&#xA;    }&#xA;&#xA;    @AfterEach&#xA;    void teardown() {&#xA;        driver.quit();&#xA;    }&#xA;&#xA;    @Test&#xA;    void test() {&#xA;        // Your test logic here&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For further information about the driver resolution algorithm implemented by WebDriverManager and configuration capabilities, read the &lt;a href=&#34;https://bonigarcia.dev/webdrivermanager/&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Browsers in Docker&lt;/h2&gt; &#xA;&lt;p&gt;Another relevant new feature available in WebDriverManager 5 is the ability to create browsers in &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; containers out of the box. The requirement to use this feature is to have installed a &lt;a href=&#34;https://docs.docker.com/engine/&#34;&gt;Docker Engine&lt;/a&gt; in the machine running the tests. To use it, we need to invoke the method &lt;code&gt;browserInDocker()&lt;/code&gt; in conjunction with &lt;code&gt;create()&lt;/code&gt; of a given manager. This way, WebDriverManager pulls the image from &lt;a href=&#34;https://hub.docker.com/&#34;&gt;Docker Hub&lt;/a&gt;, starts the container, and instantiates the WebDriver object to use it. The following test shows a simple example using Chrome in Docker. This example also enables the recording of the browser session and remote access using &lt;a href=&#34;https://novnc.com/&#34;&gt;noVNC&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import org.junit.jupiter.api.AfterEach;&#xA;import org.junit.jupiter.api.BeforeEach;&#xA;import org.junit.jupiter.api.Test;&#xA;import org.openqa.selenium.WebDriver;&#xA;&#xA;import io.github.bonigarcia.wdm.WebDriverManager;&#xA;&#xA;class DockerChromeVncTest {&#xA;&#xA;    WebDriver driver;&#xA;&#xA;    WebDriverManager wdm = WebDriverManager.chromedriver().browserInDocker()&#xA;            .enableVnc().enableRecording();&#xA;&#xA;    @BeforeEach&#xA;    void setup() {&#xA;        driver = wdm.create();&#xA;    }&#xA;&#xA;    @AfterEach&#xA;    void teardown() {&#xA;        wdm.quit();&#xA;    }&#xA;&#xA;    @Test&#xA;    void test() {&#xA;        // Your test logic here&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;WebDriverManager is part of &lt;a href=&#34;https://opencollective.com/webdrivermanager&#34;&gt;OpenCollective&lt;/a&gt;, an online funding platform for open and transparent communities. You can support the project by contributing as a backer (i.e., a personal &lt;a href=&#34;https://opencollective.com/webdrivermanager/donate&#34;&gt;donation&lt;/a&gt; or &lt;a href=&#34;https://opencollective.com/webdrivermanager/contribute/backer-8132/checkout&#34;&gt;recurring contribution&lt;/a&gt;) or as a &lt;a href=&#34;https://opencollective.com/webdrivermanager/contribute/sponsor-8133/checkout&#34;&gt;sponsor&lt;/a&gt; (i.e., a recurring contribution by a company).&lt;/p&gt; &#xA;&lt;h3&gt;Backers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/webdrivermanager&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sponsors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/webdrivermanager/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/webdrivermanager/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can acknowledge my work by buying me a coffee:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/bonigarcia&#34;&gt; &lt;img align=&#34;left&#34; src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; height=&#34;50&#34; width=&#34;210&#34;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;WebDriverManager (Copyright © 2015-2023) is a project created and maintained by &lt;a href=&#34;https://bonigarcia.dev/&#34;&gt;Boni Garcia&lt;/a&gt; and licensed under the terms of the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you like my work, please consider nominating me for the &lt;a href=&#34;https://stars.github.com/nominate/&#34;&gt;GitHub Stars&lt;/a&gt; program.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://stars.github.com/nominate/&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/61242156?s=200&amp;amp;v=4&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>