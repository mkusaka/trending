<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-05T01:36:34Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>getActivity/XXPermissions</title>
    <updated>2023-03-05T01:36:34Z</updated>
    <id>tag:github.com,2023-03-05:/getActivity/XXPermissions</id>
    <link href="https://github.com/getActivity/XXPermissions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android 权限请求框架，已适配 Android 13&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/README-en.md&#34;&gt;English Doc&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;权限请求框架&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/getActivity/XXPermissions&#34;&gt;Github&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;博文地址：&lt;a href=&#34;https://www.jianshu.com/p/c69ff8a445ed&#34;&gt;一句代码搞定权限请求，从未如此简单&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;可以扫码下载 Demo 进行演示或者测试，如果扫码下载不了的，&lt;a href=&#34;https://github.com/getActivity/XXPermissions/releases/download/16.8/XXPermissions.apk&#34;&gt;点击此处可直接下载&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/download_demo_apk_qr_code.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;另外想对 Android 6.0 权限需要深入了解的，可以看这篇文章&lt;a href=&#34;https://www.jianshu.com/p/6a4dff744031&#34;&gt;Android 6.0 运行权限解析&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_permission_activity.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_single_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_group_permission.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_system_alert_window_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_notification_service_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_write_settings_permission.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_manage_storage_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_usage_stats_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_schedule_exact_alarm_permission.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_bind_notification_listener_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_access_notification_policy_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_ignore_battery_optimizations_permission.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_bind_vpn_service_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_picture_in_picture_permission.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/picture/zh/demo_request_get_installed_apps_permission.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;集成步骤&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果你的项目 Gradle 配置是在 &lt;code&gt;7.0&lt;/code&gt; 以下，需要在 &lt;code&gt;build.gradle&lt;/code&gt; 文件中加入&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;allprojects {&#xA;    repositories {&#xA;        // JitPack 远程仓库：https://jitpack.io&#xA;        maven { url &#39;https://jitpack.io&#39; }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果你的 Gradle 配置是 &lt;code&gt;7.0&lt;/code&gt; 及以上，则需要在 &lt;code&gt;settings.gradle&lt;/code&gt; 文件中加入&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencyResolutionManagement {&#xA;    repositories {&#xA;        // JitPack 远程仓库：https://jitpack.io&#xA;        maven { url &#39;https://jitpack.io&#39; }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;配置完远程仓库后，在项目 app 模块下的 &lt;code&gt;build.gradle&lt;/code&gt; 文件中加入远程依赖&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;android {&#xA;    // 支持 JDK 1.8&#xA;    compileOptions {&#xA;        targetCompatibility JavaVersion.VERSION_1_8&#xA;        sourceCompatibility JavaVersion.VERSION_1_8&#xA;    }&#xA;}&#xA;&#xA;dependencies {&#xA;    // 权限请求框架：https://github.com/getActivity/XXPermissions&#xA;    implementation &#39;com.github.getActivity:XXPermissions:16.8&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;AndroidX 兼容&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果项目是基于 &lt;strong&gt;AndroidX&lt;/strong&gt; 包，请在项目 &lt;code&gt;gradle.properties&lt;/code&gt; 文件中加入&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;# 表示将第三方库迁移到 AndroidX&#xA;android.enableJetifier = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果项目是基于 &lt;strong&gt;Support&lt;/strong&gt; 包则不需要加入此配置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;分区存储&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果项目已经适配了 Android 10 分区存储特性，请在 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 中加入&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;manifest&amp;gt;&#xA;&#xA;    &amp;lt;application&amp;gt;&#xA;&#xA;        &amp;lt;!-- 告知 XXPermissions 当前项目已经适配了分区存储特性 --&amp;gt;&#xA;        &amp;lt;meta-data&#xA;            android:name=&#34;ScopedStorage&#34;&#xA;            android:value=&#34;true&#34; /&amp;gt;&#xA;&#xA;    &amp;lt;/application&amp;gt;&#xA;&#xA;&amp;lt;/manifest&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;如果当前项目没有适配这特性，那么这一步骤可以忽略&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;需要注意的是：这个选项是框架用于判断当前项目是否适配了分区存储，需要注意的是，如果你的项目已经适配了分区存储特性，可以使用 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt;、&lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 来申请权限，如果你的项目还没有适配分区特性，就算申请了 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt;、&lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 权限也会导致无法正常读取外部存储上面的文件，如果你的项目没有适配分区存储，请使用 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 来申请权限，这样才能正常读取外部存储上面的文件，你如果想了解更多关于 Android 10 分区存储的特性，可以&lt;a href=&#34;https://github.com/getActivity/AndroidVersionAdapter#android-100&#34;&gt;点击此处查看和学习&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;一句代码搞定权限请求，从未如此简单&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 用法示例&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;XXPermissions.with(this)&#xA;        // 申请单个权限&#xA;        .permission(Permission.RECORD_AUDIO)&#xA;        // 申请多个权限&#xA;        .permission(Permission.Group.CALENDAR)&#xA;        // 设置权限请求拦截器（局部设置）&#xA;        //.interceptor(new PermissionInterceptor())&#xA;        // 设置不触发错误检测机制（局部设置）&#xA;        //.unchecked()&#xA;        .request(new OnPermissionCallback() {&#xA;&#xA;            @Override&#xA;            public void onGranted(@NonNull List&amp;lt;String&amp;gt; permissions, boolean allGranted) {&#xA;                if (!allGranted) {&#xA;                    toast(&#34;获取部分权限成功，但部分权限未正常授予&#34;);&#xA;                    return;&#xA;                }&#xA;                toast(&#34;获取录音和日历权限成功&#34;);&#xA;            }&#xA;&#xA;            @Override&#xA;            public void onDenied(@NonNull List&amp;lt;String&amp;gt; permissions, boolean doNotAskAgain) {&#xA;                if (doNotAskAgain) {&#xA;                    toast(&#34;被永久拒绝授权，请手动授予录音和日历权限&#34;);&#xA;                    // 如果是被永久拒绝就跳转到应用权限系统设置页面&#xA;                    XXPermissions.startPermissionActivity(context, permissions);&#xA;                } else {&#xA;                    toast(&#34;获取录音和日历权限失败&#34;);&#xA;                }&#xA;            }&#xA;        });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kotlin 用法示例&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;XXPermissions.with(this)&#xA;    // 申请单个权限&#xA;    .permission(Permission.RECORD_AUDIO)&#xA;    // 申请多个权限&#xA;    .permission(Permission.Group.CALENDAR)&#xA;    // 设置权限请求拦截器（局部设置）&#xA;    //.interceptor(new PermissionInterceptor())&#xA;    // 设置不触发错误检测机制（局部设置）&#xA;    //.unchecked()&#xA;    .request(object : OnPermissionCallback {&#xA;&#xA;        override fun onGranted(permissions: MutableList&amp;lt;String&amp;gt;, allGranted: Boolean) {&#xA;            if (!allGranted) {&#xA;                toast(&#34;获取部分权限成功，但部分权限未正常授予&#34;)&#xA;                return&#xA;            }&#xA;            toast(&#34;获取录音和日历权限成功&#34;)&#xA;        }&#xA;&#xA;        override fun onDenied(permissions: MutableList&amp;lt;String&amp;gt;, doNotAskAgain: Boolean) {&#xA;            if (doNotAskAgain) {&#xA;                toast(&#34;被永久拒绝授权，请手动授予录音和日历权限&#34;)&#xA;                // 如果是被永久拒绝就跳转到应用权限系统设置页面&#xA;                XXPermissions.startPermissionActivity(context, permissions)&#xA;            } else {&#xA;                toast(&#34;获取录音和日历权限失败&#34;)&#xA;            }&#xA;        }&#xA;    })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;框架其他 API 介绍&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// 判断一个或多个权限是否全部授予了&#xA;XXPermissions.isGranted(Context context, String... permissions);&#xA;&#xA;// 获取没有授予的权限&#xA;XXPermissions.getDenied(Context context, String... permissions);&#xA;&#xA;// 判断某个权限是否为特殊权限&#xA;XXPermissions.isSpecial(String permission);&#xA;&#xA;// 判断一个或多个权限是否被永久拒绝了（一定要在权限申请的回调方法中调用才有效果）&#xA;XXPermissions.isPermanentDenied(Activity activity, String... permissions);&#xA;&#xA;// 跳转到应用权限设置页&#xA;XXPermissions.startPermissionActivity(Context context, String... permissions);&#xA;XXPermissions.startPermissionActivity(Activity activity, String... permissions);&#xA;XXPermissions.startPermissionActivity(Activity activity, String... permission, OnPermissionPageCallback callback);&#xA;XXPermissions.startPermissionActivity(Fragment fragment, String... permissions);&#xA;XXPermissions.startPermissionActivity(Fragment fragment, String... permissions, OnPermissionPageCallback callback);&#xA;&#xA;// 设置不触发错误检测机制（全局设置）&#xA;XXPermissions.setCheckMode(false);&#xA;// 设置权限申请拦截器（全局设置）&#xA;XXPermissions.setInterceptor(new IPermissionInterceptor() {});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;关于权限监听回调参数说明&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;我们都知道，如果用户全部授予只会调用 &lt;code&gt;onGranted&lt;/code&gt; 方法，如果用户全部拒绝只会调用 &lt;code&gt;onDenied&lt;/code&gt; 方法。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;但是还有一种情况，如果在请求多个权限的情况下，这些权限不是被全部授予或者全部拒绝了，而是部分授权部分拒绝这种情况，框架会如何处理回调呢？&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;框架会先调用 &lt;code&gt;onDenied&lt;/code&gt; 方法，再调用 &lt;code&gt;onGranted&lt;/code&gt; 方法。其中我们可以通过 &lt;code&gt;onGranted&lt;/code&gt; 方法中的 &lt;code&gt;allGranted&lt;/code&gt; 参数来判断权限是否全部授予了。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果想知道回调中的某个权限是否被授权或者拒绝，可以调用 &lt;code&gt;List&lt;/code&gt; 类中的 &lt;code&gt;contains(Permission.XXX)&lt;/code&gt; 方法来判断这个集合中是否包含了这个权限。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getActivity/XXPermissions/master/HelpDoc-zh.md&#34;&gt;其他常见疑问请点击此处查看&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h4&gt;同类权限请求框架之间的对比&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;适配细节&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/getActivity/XXPermissions&#34;&gt;XXPermissions&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/yanzhenjie/AndPermission&#34;&gt;AndPermission&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/guolindev/PermissionX&#34;&gt;PermissionX&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode&#34;&gt;AndroidUtilCode-PermissionUtils&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/permissions-dispatcher/PermissionsDispatcher&#34;&gt;PermissionsDispatcher&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/tbruyelle/RxPermissions&#34;&gt;RxPermissions&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/googlesamples/easypermissions&#34;&gt;EasyPermissions&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;对应版本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;16.8&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.0.3&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.7.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.31.0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.9.2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;0.12&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;issues 数&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/getActivity/XXPermissions/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/getActivity/XXPermissions.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/yanzhenjie/AndPermission/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/yanzhenjie/AndPermission.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/guolindev/PermissionX/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/guolindev/PermissionX.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/Blankj/AndroidUtilCode.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/permissions-dispatcher/PermissionsDispatcher/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/permissions-dispatcher/PermissionsDispatcher.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/tbruyelle/RxPermissions/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/tbruyelle/RxPermissions.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/googlesamples/easypermissions/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/googlesamples/easypermissions.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;框架体积&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;60 KB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;127 KB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;97 KB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;500 KB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;99 KB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;28 KB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;48 KB&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;框架维护状态&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;维护中&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;停止维护&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;停止维护&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;停止维护&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;停止维护&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;停止维护&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;停止维护&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;闹钟提醒权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;所有文件管理权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;安装包权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;画中画权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;悬浮窗权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;系统设置权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;通知栏权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;通知栏监听权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;勿扰权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;忽略电池优化权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;查看应用使用情况权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;VPN 权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;读取应用列表权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android 13 危险权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android 12 危险权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android 11 危险权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android 10 危险权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android 9.0 危险权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android 8.0 危险权限&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;新权限自动兼容旧设备&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;屏幕方向旋转场景适配&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;后台申请权限场景适配&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Android 12 内存泄漏问题修复&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;错误检测机制&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;读取应用列表权限介绍&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;这个权限非常特殊，它不属于 Android 原生的权限，而是由&lt;a href=&#34;http://www.taf.org.cn/StdDetail.aspx?uid=3A7D6656-43B8-4C46-8871-E379A3EA1D48&amp;amp;stdType=TAF&#34;&gt;工信部&lt;/a&gt;牵头，联合各大中国手机厂商搞的一个权限，目前支持手机厂商有：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;品牌&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;版本要求&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;是否默认授予&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;华为&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Harmony 3.0.0 及以上版本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;荣耀&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Magic UI 6.0 及以上版本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;小米&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Miui 13 及以上版本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;红米&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;和小米雷同&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;和小米雷同&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OPPO&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;(ColorOs 12 及以上版本 &amp;amp;&amp;amp; Android 11+) 或者 &lt;br&gt; (ColorOs 11.1 及以上版本 &amp;amp;&amp;amp; Android 12+)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;一加&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;和 OPPO 雷同&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;和 OPPO 雷同&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;真我&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;realme UI 3.0 及以上版本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;目前不支持的手机厂商有：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;品牌&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;测试的手机机型&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;测试的版本&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;是否有申请该权限的入口&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;三星&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;三星 galaxy s22&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;One UI 5.0 &amp;amp;&amp;amp; Android 13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;VIVO&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;iQOO Neo7 SE&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;OriginOS 3 &amp;amp;&amp;amp; Android 13&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;魅族&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;魅族 18x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Flyme 9.2.3.1A &amp;amp;&amp;amp; Android 11&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;是&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;锤子&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;坚果手机 Pro 2S&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Smartisan OS 7.2.0.2 &amp;amp;&amp;amp; Android 8.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;奇虎&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;360 手机 N7 Lite&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;360 Os 3.0 &amp;amp;&amp;amp; Android 8.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;小辣椒&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;小辣椒S6&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;小辣椒 Os 3.0 &amp;amp;&amp;amp; Android 7.1.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;否&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;另外还有一些厂商没有列出来，不是我没有做测试，而是他们的系统本身就是直接用 Android 的，Android 原生目前不支持申请该权限&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;新权限自动兼容旧设备介绍&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;随着 Android 版本的不断更新，危险权限和特殊权限也在增加，那么这个时候会有一个版本兼容问题，高版本的安卓设备是支持申请低版本的权限，但是低版本的安卓设备是不支持申请高版本的权限，那么这个时候会出现一个兼容性的问题。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;经过核查，其他权限框架选择了一种最简单粗暴的方式，就是不去做兼容，而是交给外层的调用者做兼容，需要调用者在外层先判断安卓版本，在高版本上面传入新权限给框架，而在低版本上面传入旧权限给框架，这种方式看似简单粗暴，但是开发体验差，同时也暗藏了一个坑，外层的调用者他们知道这个新权限对应着的旧权限是哪个吗？我觉得不是每个人都知道，而一旦认知出现错误，必然会导致结果出现错误。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;我觉得最好的做法是交给框架来做，&lt;strong&gt;XXPermissions&lt;/strong&gt; 正是那么做的，外层调用者申请高版本权限的时候，那么在低版本设备上面，会自动添加低版本的权限进行申请，举个最简单的例子，Android 11 出现的 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 新权限，如果是在 Android 10 及以下的设备申请这个权限时，框架会自动添加 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt; 和 &lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 进行申请，在 Android 10 及以下的设备上面，我们可以直接把 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 当做 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt; 和 &lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 来用，因为 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 能干的事情，在 Android 10 及以下的设备上面，要用 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt; 和 &lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 才能做得了。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;所以大家在使用 &lt;strong&gt;XXPermissions&lt;/strong&gt; 的时候，直接拿新的权限去申请就可以了，完全不需要关心新旧权限的兼容问题，框架会自动帮你做处理的，与其他框架不同的是，我更想做的是让大家一句代码搞定权限请求，框架能做到的，统统交给框架做处理。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;屏幕旋转场景适配介绍&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;当系统权限申请对话框弹出后对 Activity 进行屏幕旋转，会导致权限申请回调失效，因为屏幕旋转会导致框架中的 Fragment 销毁重建，这样会导致里面的回调对象直接被回收，最终导致回调不正常。解决方案有几种，一是在清单文件中添加 &lt;code&gt;android:configChanges=&#34;orientation&#34;&lt;/code&gt; 属性，这样屏幕旋转时不会导致 Activity 和 Fragment 销毁重建，二是直接在清单文件中固定 Activity 显示的方向，但是以上两种方案都要使用框架的人处理，这样显然是不够灵活的，解铃还须系铃人，框架的问题应当由框架来解决，而 &lt;strong&gt;RxPermissions&lt;/strong&gt; 的解决方式是给 PermissionFragment 对象设置 &lt;code&gt;fragment.setRetainInstance(true)&lt;/code&gt;，这样就算屏幕旋转了，Activity 对象会销毁重建，而 Fragment 也不会跟着销毁重建，还是复用着之前那个对象，但是存在一个问题，如果 Activity 重写了 &lt;code&gt;onSaveInstanceState&lt;/code&gt; 方法会直接导致这种方式失效，这样做显然只是治标不治本，而 &lt;strong&gt;XXPermissions&lt;/strong&gt; 的方式会更直接点，在 &lt;strong&gt;PermissionFragment&lt;/strong&gt; 绑定到 Activity 上面时，把当前 Activity 的&lt;strong&gt;屏幕方向固定住&lt;/strong&gt;，在权限申请结束后再把&lt;strong&gt;屏幕方向还原回去&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在所有的权限请求框架中，只要使用了 Fragment 申请权限都会出现这个问题，而 AndPermission 其实是通过创建新的 Activity 来申请权限，所以不会出现这个问题，PermissionsDispatcher 则是采用了 APT 生成代码的形式来申请权限，所以也没有这个问题，而 PermissionX 则是直接借鉴了 XXPermissions 的解决方案，详情请见 &lt;a href=&#34;https://github.com/getActivity/XXPermissions/issues/49&#34;&gt;XXPermissions/issues/49&lt;/a&gt; 、&lt;a href=&#34;https://github.com/guolindev/PermissionX/issues/51&#34;&gt;PermissionX/issues/51&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;后台申请权限场景介绍&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;当我们做耗时操作之后申请权限（例如在闪屏页获取隐私协议再申请权限），在网络请求的过程中将 Activity 返回桌面去（退到后台），然后会导致权限请求是在后台状态中进行，在这个时机上就可能会导致权限申请不正常，表现为不会显示授权对话框，处理不当的还会导致崩溃，例如 &lt;a href=&#34;https://github.com/tbruyelle/RxPermissions/issues/249&#34;&gt;RxPeremission/issues/249&lt;/a&gt;。原因在于框架中的 PermissionFragment 在 &lt;code&gt;commit&lt;/code&gt; / &lt;code&gt;commitNow&lt;/code&gt; 到 Activity 的时候会做一个检测，如果 Activity 的状态是不可见时则会抛出异常，而 &lt;strong&gt;RxPeremission&lt;/strong&gt; 正是使用了 &lt;code&gt;commitNow&lt;/code&gt; 才会导致崩溃 ，使用 &lt;code&gt;commitAllowingStateLoss&lt;/code&gt; / &lt;code&gt;commitNowAllowingStateLoss&lt;/code&gt; 则可以避开这个检测，虽然这样可以避免崩溃，但是会出现另外一个问题，系统提供的 &lt;code&gt;requestPermissions&lt;/code&gt; API 在 Activity 不可见时调用也不会弹出授权对话框，&lt;strong&gt;XXPermissions&lt;/strong&gt; 的解决方式是将 &lt;code&gt;requestPermissions&lt;/code&gt; 时机从 &lt;code&gt;onCreate&lt;/code&gt; 转移到了 &lt;code&gt;onResume&lt;/code&gt;，这是因为 &lt;code&gt;Activity&lt;/code&gt; 和 &lt;code&gt;Fragment&lt;/code&gt; 的生命周期方法是捆绑在一起的，如果 &lt;code&gt;Activity&lt;/code&gt; 是不可见的，那么就算创建了 &lt;code&gt;Fragment&lt;/code&gt; 也只会调用 &lt;code&gt;onCreate&lt;/code&gt; 方法，而不会去调用它的 &lt;code&gt;onResume&lt;/code&gt; 方法，最后当 Activity 从后台返回到前台时，不仅会触发 &lt;code&gt;Activity&lt;/code&gt; 的 &lt;code&gt;onResume&lt;/code&gt; 方法，也会触发 &lt;code&gt;PermissionFragment&lt;/code&gt; 的 &lt;code&gt;onResume&lt;/code&gt; 方法，在这个方法申请权限就可以保证最终 &lt;code&gt;requestPermissions&lt;/code&gt; 调用的时机是在 &lt;code&gt;Activity&lt;/code&gt; 处于可见状态的情况下。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Android 12 内存泄漏问题修复介绍&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;最近有人跟我提了一个内存泄漏的问题 &lt;a href=&#34;https://github.com/getActivity/XXPermissions/issues/133&#34;&gt;XXPermissions/issues/133&lt;/a&gt; ，我经过实践后确认这个问题真实存在，但是通过查看代码堆栈，发现这个问题是系统的代码引起的，引发这个问题需要以下几个条件：&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;在 Android 12 的设备上使用&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;调用了 &lt;code&gt;Activity.shouldShowRequestPermissionRationale&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;在这之后又主动在代码调用了 activity.finish 方法&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;排查的过程：经过对代码的追踪，发现代码调用栈是这样的&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Activity.shouldShowRequestPermissionRationale&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;PackageManager.shouldShowRequestPermissionRationale（实现对象为 ApplicationPackageManager）&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;PermissionManager.shouldShowRequestPermissionRationale&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;new PermissionManager(Context context)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;new PermissionUsageHelper(Context context)&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;AppOpsManager.startWatchingStarted&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;罪魁祸首其实是 &lt;code&gt;PermissionUsageHelper&lt;/code&gt; 将 &lt;code&gt;Context&lt;/code&gt; 对象作为字段持有着，并在构造函数中调用 &lt;code&gt;AppOpsManager.startWatchingStarted&lt;/code&gt; 开启监听，这样 PermissionUsageHelper 对象就会被添加进 &lt;code&gt;AppOpsManager#mStartedWatchers&lt;/code&gt; 集合中，这样导致在 Activity 主动调用 finish 的时候，并没有使用 &lt;code&gt;stopWatchingStarted&lt;/code&gt; 来移除监听，导致 &lt;code&gt;Activity&lt;/code&gt; 对象一直被 &lt;code&gt;AppOpsManager#mStartedWatchers&lt;/code&gt; 集合中持有着，所以间接导致了 Activity 对象无法被系统回收。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;针对这个问题处理也很简单粗暴，就是将在外层传入的 &lt;code&gt;Context&lt;/code&gt; 参数从 &lt;code&gt;Activity&lt;/code&gt; 对象给替换成 &lt;code&gt;Application&lt;/code&gt; 对象即可，有人可能会说了，&lt;code&gt;Activity&lt;/code&gt; 里面才有 &lt;code&gt;shouldShowRequestPermissionRationale&lt;/code&gt; 方法，而 Application 里面没有这个方法怎么办？看了一下这个方法的实现，其实那个方法最终会调用 &lt;code&gt;PackageManager.shouldShowRequestPermissionRationale&lt;/code&gt; 方法（&lt;strong&gt;隐藏 API，但是并不在黑名单中&lt;/strong&gt;）里面去，所以只要能获取到 &lt;code&gt;PackageManager&lt;/code&gt; 对象即可，最后再使用反射去执行这个方法，这样就能避免出现内存泄漏。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;幸好 Google 没有将 &lt;code&gt;PackageManager.shouldShowRequestPermissionRationale&lt;/code&gt; 列入到反射黑名单中，否则这次想给 Google 擦屁股都没有办法了，要不然只能用修改系统源码实现的方式，但这种方式只能等谷歌在后续的 Android 版本上面修复了，不过庆幸的是，在 &lt;code&gt;Android 12 L&lt;/code&gt; 的版本之后，这个问题被修复了，&lt;a href=&#34;https://cs.android.com/android/_/android/platform/frameworks/base/+/0d47a03bfa8f4ca54b883ff3c664cd4ea4a624d9:core/java/android/permission/PermissionUsageHelper.java;dlc=cec069482f80019c12f3c06c817d33fc5ad6151f&#34;&gt;具体的提交记录可以点击此处查看&lt;/a&gt;，但是对于 &lt;code&gt;Android 12&lt;/code&gt; 而言，这仍是一个历史遗留问题。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;值得注意的是：XXPermissions 是目前同类框架第一款也是唯一一款修复这个问题的框架，另外针对这个问题，我还给谷歌的 &lt;a href=&#34;https://github.com/androidx/androidx/pull/435&#34;&gt;AndroidX&lt;/a&gt; 项目无偿提供了解决方案，目前 Merge Request 已被合入主分支，我相信通过这一举措，将解决全球近 10 亿台 Android 12 设备出现的内存泄露问题。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;错误检测机制介绍&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;在框架的日常维护中，有很多人跟我反馈过框架有 Bug，但是经过排查和定位发现，这其中有 95% 的问题来自于调用者一些不规范操作导致的，这不仅对我造成很大的困扰，同时也极大浪费了很多小伙伴的时间和精力，于是我在框架中加入了很多审查元素，在 &lt;strong&gt;debug 模式&lt;/strong&gt;、&lt;strong&gt;debug 模式&lt;/strong&gt;、&lt;strong&gt;debug 模式&lt;/strong&gt; 下，一旦有某些操作不符合规范，那么框架会直接抛出异常给调用者，并在异常信息中正确指引调用者纠正错误，例如：&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;传入的 Context 实例不是 Activity 对象，框架会抛出异常，又或者传入的 Activity 的状态异常（已经 &lt;strong&gt;Finishing&lt;/strong&gt; 或者 &lt;strong&gt;Destroyed&lt;/strong&gt;），这种情况一般是在异步申请权限导致的，框架也会抛出异常，请在合适的时机申请权限，如果申请的时机无法预估，请在外层做好 Activity 状态判断再进行权限申请。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;如果调用者没有传入任何权限就申请权限的话，框架会抛出异常，又或者如果调用者传入的权限不是危险权限或者特殊权限，框架也会抛出异常，因为有的人会把普通权限当做危险权限传给框架，系统会直接拒绝。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;如果当前项目在没有适配分区存储的情况下，申请 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt; 和 &lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 权限&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;当项目的 &lt;code&gt;targetSdkVersion &amp;gt;= 29&lt;/code&gt; 时，需要在清单文件中注册 &lt;code&gt;android:requestLegacyExternalStorage=&#34;true&#34;&lt;/code&gt; 属性，否则框架会抛出异常，如果不加会导致一个问题，明明已经获取到存储权限，但是无法在 Android 10 的设备上面正常读写外部存储上的文件。&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;当项目的 &lt;code&gt;targetSdkVersion &amp;gt;= 30&lt;/code&gt; 时，则不能申请 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt; 和 &lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 权限，而是应该申请 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 权限&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;如果当前项目已经适配了分区存储，那么只需要在清单文件中注册一个 meta-data 属性即可： &lt;code&gt;&amp;lt;meta-data android:name=&#34;ScopedStorage&#34; android:value=&#34;true&#34; /&amp;gt;&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;如果申请的权限中包含后台定位权限， 那么这里面则不能包含和定位无关的权限，否则框架会抛出异常，因为 &lt;code&gt;ACCESS_BACKGROUND_LOCATION&lt;/code&gt; 和其他非定位权限定位掺杂在一起申请，在 Android 11 上会出现不申请直接被拒绝的情况。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;如果申请的权限和项目中的 &lt;strong&gt;targetSdkVersion&lt;/strong&gt; 对不上，框架会抛出异常，是因为 &lt;strong&gt;targetSdkVersion&lt;/strong&gt; 代表着项目适配到哪个 Android 版本，系统会自动做向下兼容，假设申请的权限是 Android 11 才出现的，但是 &lt;strong&gt;targetSdkVersion&lt;/strong&gt; 还停留在 29，那么在某些机型上的申请，会出现授权异常的情况，也就是用户明明授权了，但是系统返回的始终是 false。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;如果动态申请的权限没有在 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 中进行注册，框架会抛出异常，因为如果不这么做，是可以进行申请权限，但是不会出现授权弹窗，直接被系统拒绝，并且系统不会给出任何弹窗和提示，并且这个问题在每个机型上面都是&lt;strong&gt;必现的&lt;/strong&gt;。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;如果动态申请的权限有在 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 中进行注册，但是设定了不恰当的 &lt;code&gt;android:maxSdkVersion&lt;/code&gt; 属性值，框架会抛出异常，举个例子：&lt;code&gt;&amp;lt;uses-permission android:name=&#34;xxxx&#34; android:maxSdkVersion=&#34;29&#34; /&amp;gt;&lt;/code&gt;，这样的设定会导致在 Android 11 （&lt;code&gt;Build.VERSION.SDK_INT &amp;gt;= 30&lt;/code&gt;）及以上的设备申请权限，系统会认为这个权限没有在清单文件中注册，直接拒绝本次的权限申请，并且也是不会给出任何弹窗和提示，这个问题也是必现的。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;如果你同时申请了 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt;、&lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt;、&lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 这三个权限，框架会抛出异常，告诉你不要同时申请这三个权限，这是因为在 Android 11 及以上设备上面，申请了 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 权限，则没有申请 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt;、&lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 权限的必要，这是因为申请了 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 权限，就等于拥有了比 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt;、&lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 更加强大的能力，如果硬要那么做反而适得其反，假设框架允许的情况下，会同时出现两种授权方式，一种是弹窗授权，另一种是跳页面授权，用户要进行两次授权，但是实际上面有了 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 权限就满足使用了，这个时候大家可能心中有一个疑问了，你不申请 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt;、&lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 权限，Android 11 以下又没有 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 这个权限，那不是会有问题？关于这个问题大家可以放心，框架会做判断，如果你申请了 &lt;code&gt;MANAGE_EXTERNAL_STORAGE&lt;/code&gt; 权限，在 Android 11 以下框架会自动添加 &lt;code&gt;READ_EXTERNAL_STORAGE&lt;/code&gt;、&lt;code&gt;WRITE_EXTERNAL_STORAGE&lt;/code&gt; 来申请，所以在低版本下也不会因为没有权限导致的无法使用。&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;如果你不需要上面这些检测，可通过调用 &lt;code&gt;unchecked&lt;/code&gt; 方法来关闭，但是需要注意的是，我并不建议你去关闭这个检测，因为在 &lt;strong&gt;release 模式&lt;/strong&gt; 时它是关闭状态，不需要你手动关闭，而它只在 &lt;strong&gt;debug 模式&lt;/strong&gt; 下才会触发这些检测。&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;出现这些问题的原因是，我们对这些机制不太熟悉，而如果框架不加以限制，那么引发各种奇奇怪怪的问题出现，作为框架的作者，表示不仅你们很痛苦，作为框架作者表示也很受伤。因为这些问题不是框架导致的，而是调用者的某些操作不规范导致的。我觉得这个问题最好的解决方式是，由框架做统一的检查，因为我是框架的作者，对权限申请这块知识点有&lt;strong&gt;较强的专业能力和足够的经验&lt;/strong&gt;，知道什么该做，什么不该做，这样就可以对这些骚操作进行一一拦截。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;当权限申请出现问题时，你希不希望能有个人过来提醒你，告诉你哪里错了？该怎么去纠正？然而这些 XXPermissions 都做到了，在所有的权限请求框架中，我算是第一个做这件事的人，我认为&lt;strong&gt;做好一个框架&lt;/strong&gt;不仅仅是要把功能做好，把复杂的场景处理好，更重要的是要&lt;strong&gt;以人为本&lt;/strong&gt;，因为框架本身就是为人服务的，要做的不仅仅是解决大家的需求，还要帮助大家在这个过程中少走弯路。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;框架亮点&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;一马当先：首款适配 Android 13 的权限请求框架&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;简洁易用：采用链式调用的方式，使用只需一句代码&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;体积感人：功能在同类框架中是最全的，但是框架体积是垫底的&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持全面：首款也是唯一一款适配所有 Android 版本的权限请求框架&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;技术难题攻坚：首款解决权限申请在 Android 12 出现系统内存泄漏的框架&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;适配极端情况：无论在多么极端恶劣的环境下申请权限，框架依然坚挺&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;向下兼容属性：新权限在旧系统可以正常申请，框架会做自动适配，无需调用者适配&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;自动检测错误：如果出现错误框架会主动抛出异常给调用者（仅在 Debug 下判断，把 Bug 扼杀在摇篮中）&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;作者的其他开源项目&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;安卓技术中台：&lt;a href=&#34;https://github.com/getActivity/AndroidProject&#34;&gt;AndroidProject&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/AndroidProject.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/AndroidProject.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安卓技术中台 Kt 版：&lt;a href=&#34;https://github.com/getActivity/AndroidProject-Kotlin&#34;&gt;AndroidProject-Kotlin&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/AndroidProject-Kotlin.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/AndroidProject-Kotlin.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;吐司框架：&lt;a href=&#34;https://github.com/getActivity/Toaster&#34;&gt;Toaster&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/Toaster.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/Toaster.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;网络框架：&lt;a href=&#34;https://github.com/getActivity/EasyHttp&#34;&gt;EasyHttp&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/EasyHttp.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/EasyHttp.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;标题栏框架：&lt;a href=&#34;https://github.com/getActivity/TitleBar&#34;&gt;TitleBar&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/TitleBar.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/TitleBar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;悬浮窗框架：&lt;a href=&#34;https://github.com/getActivity/XToast&#34;&gt;XToast&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/XToast.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/XToast.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shape 框架：&lt;a href=&#34;https://github.com/getActivity/ShapeView&#34;&gt;ShapeView&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/ShapeView.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/ShapeView.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;语种切换框架：&lt;a href=&#34;https://github.com/getActivity/MultiLanguages&#34;&gt;MultiLanguages&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/MultiLanguages.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/MultiLanguages.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Gson 解析容错：&lt;a href=&#34;https://github.com/getActivity/GsonFactory&#34;&gt;GsonFactory&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/GsonFactory.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/GsonFactory.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;日志查看框架：&lt;a href=&#34;https://github.com/getActivity/Logcat&#34;&gt;Logcat&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/Logcat.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/Logcat.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Android 版本适配：&lt;a href=&#34;https://github.com/getActivity/AndroidVersionAdapter&#34;&gt;AndroidVersionAdapter&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/AndroidVersionAdapter.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/AndroidVersionAdapter.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Android 代码规范：&lt;a href=&#34;https://github.com/getActivity/AndroidCodeStandard&#34;&gt;AndroidCodeStandard&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/AndroidCodeStandard.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/AndroidCodeStandard.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Android 资源大汇总：&lt;a href=&#34;https://github.com/getActivity/AndroidIndex&#34;&gt;AndroidIndex&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/AndroidIndex.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/AndroidIndex.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Android 开源排行榜：&lt;a href=&#34;https://github.com/getActivity/AndroidGithubBoss&#34;&gt;AndroidGithubBoss&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/AndroidGithubBoss.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/AndroidGithubBoss.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Studio 精品插件：&lt;a href=&#34;https://github.com/getActivity/StudioPlugins&#34;&gt;StudioPlugins&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/StudioPlugins.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/StudioPlugins.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;表情包大集合：&lt;a href=&#34;https://github.com/getActivity/EmojiPackage&#34;&gt;EmojiPackage&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/EmojiPackage.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/EmojiPackage.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;省市区 Json 数据：&lt;a href=&#34;https://github.com/getActivity/ProvinceJson&#34;&gt;ProvinceJson&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/ProvinceJson.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/ProvinceJson.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Markdown 语法文档：&lt;a href=&#34;https://github.com/getActivity/MarkdownDoc&#34;&gt;MarkdownDoc&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/MarkdownDoc.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/MarkdownDoc.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;微信公众号：Android轮子哥&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/Donate/master/picture/official_ccount.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Android 技术 Q 群：10047167&lt;/h4&gt; &#xA;&lt;h4&gt;如果您觉得我的开源库帮你节省了大量的开发时间，请扫描下方的二维码随意打赏，要是能打赏个 10.24 &lt;span&gt;🐵&lt;/span&gt;就太&lt;span&gt;👍&lt;/span&gt;了。您的支持将鼓励我继续创作&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/Donate/master/picture/pay_ali.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/Donate/master/picture/pay_wechat.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/getActivity/Donate&#34;&gt;点击查看捐赠列表&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Copyright 2018 Huang JinQun&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>