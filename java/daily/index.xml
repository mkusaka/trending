<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-25T01:37:24Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>thombergs/buckpal</title>
    <updated>2023-07-25T01:37:24Z</updated>
    <id>tag:github.com,2023-07-25:/thombergs/buckpal</id>
    <link href="https://github.com/thombergs/buckpal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An example approach for implementing a Clean/Hexagonal Architecture&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Get Your Hands Dirty on Clean Architecture&lt;/h1&gt; &#xA;&lt;p&gt;This repository implements a small web app in the Hexagonal Architecture style, as discussed in the book &#34;Get Your Hands Dirty on Clean Architecture&#34;.&lt;/p&gt; &#xA;&lt;p&gt;The code has been updated to the 2nd edition of the book.&lt;/p&gt; &#xA;&lt;h2&gt;Get the print book&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.amazon.com/Your-Hands-Dirty-Clean-Architecture/dp/180512837X?keywords=get+your+hands+dirty+on+clean+architecture&amp;amp;qid=1689324075&amp;amp;sprefix=Get+Your+Hands+Dirty+on+Clean+,aps,424&amp;amp;sr=8-2&amp;amp;_encoding=UTF8&amp;amp;tag=reflectorin0c-20&amp;amp;linkCode=ur2&amp;amp;linkId=c04a12e6dd6d399747b0cdce328650a5&amp;amp;camp=1789&amp;amp;creative=9325&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thombergs/buckpal/master/img/cover-packt-450.png&#34; alt=&#34;Get Your Hands Dirty on Clean Architecture cover&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get the e-book&lt;/h2&gt; &#xA;&lt;p&gt;This is the self-published version, which is only available electronically.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://thombergs.gumroad.com/l/gyhdoca&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thombergs/buckpal/master/img/cover-430.png&#34; alt=&#34;Get Your Hands Dirty on Clean Architecture cover&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Companion Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reflectoring.io/spring-hexagonal/&#34;&gt;Hexagonal Architecture with Java and Spring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reflectoring.io/spring-boot-gradle-multi-module/&#34;&gt;Building a Multi-Module Spring Boot Application with Gradle&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 17&lt;/li&gt; &#xA; &lt;li&gt;this project uses Lombok, so enable annotation processing in your IDE&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About the book&lt;/h2&gt; &#xA;&lt;h3&gt;All About Hexagonal Architecture&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn the concepts behind &#34;Clean Architecture&#34; and &#34;Hexagonal Architecture&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Explore a hands-on approach of implementing a Hexagonal architecture with example code &lt;a href=&#34;https://github.com/thombergs/buckpal&#34;&gt;on GitHub&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Develop your domain code independent of database or web concerns.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thombergs/buckpal/master/img/hexagonal-architecture.png&#34; alt=&#34;Hexagonal Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Get a Grip on Your Layers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Learn about potential problems of the common layered architecture style.&lt;/li&gt; &#xA; &lt;li&gt;Free your domain layer of oppressive dependencies using dependency inversion.&lt;/li&gt; &#xA; &lt;li&gt;Structure your code in an architecturally expressive way.&lt;/li&gt; &#xA; &lt;li&gt;Use different methods to enforce architectural boundaries.&lt;/li&gt; &#xA; &lt;li&gt;Learn the consequences of shortcuts and when to accept them.&lt;/li&gt; &#xA; &lt;li&gt;... and &lt;a href=&#34;https://raw.githubusercontent.com/thombergs/buckpal/master/#table-of-contents&#34;&gt;more&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/thombergs/buckpal/master/img/dependencies.png&#34; alt=&#34;Dependencies&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;What Readers Say&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Tom Hombergs has done a terrific job in explaining clean architecture - from concepts to code. Really wish more technical books would be as clear as that one!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Gernot Starke - Fellow at &lt;a href=&#34;https://www.innoq.com/en/staff/gernot-starke/&#34;&gt;INNOQ&lt;/a&gt;, Founder of &lt;a href=&#34;https://arc42.org/&#34;&gt;arc42&lt;/a&gt;, Author of Software Architecture Books, Coach, and Consultant&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Love your book. One of the most practical books on hexagonal architecture I have seen/read so far.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Marten Deinum - Spring Framework Contributor and Author of &lt;a href=&#34;https://www.amazon.com/Spring-5-Recipes-Problem-Solution-Approach/dp/1484227891&amp;amp;tag=reflectorin0c-20&#34;&gt;&#34;Spring 5 Recipes&#34;&lt;/a&gt; and &lt;a href=&#34;https://www.amazon.com/Spring-Boot-Recipes-Problem-Solution-Approach/dp/1484239628&amp;amp;tag=reflectorin0c-20&#34;&gt;&#34;Spring Boot 2 Recipes&#34;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A book taken right out of the machine room of software development. Tom talks straight from his experience and guides you through the day-to-day trade-offs necessary to deliver clean architecture.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Sebastian Kempken - Software Architect at Adcubum&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Thank you for the great book, it helped me gain significant insight into how one would go about implementing hexagonal and DDD in a modern Spring project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Spyros Vallianos - Java Developer at Konnekt-able&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;After reading it I had one of these &#39;aha&#39; moments when things finally click in your brain.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Manos Tzagkarakis - Java Developer at Datawise&lt;/p&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Maintainability&lt;/li&gt; &#xA; &lt;li&gt;What&#39;s Wrong with Layers?&lt;/li&gt; &#xA; &lt;li&gt;Inverting Dependencies&lt;/li&gt; &#xA; &lt;li&gt;Organizing Code&lt;/li&gt; &#xA; &lt;li&gt;Implementing a Use Case&lt;/li&gt; &#xA; &lt;li&gt;Implementing a Web Adapter&lt;/li&gt; &#xA; &lt;li&gt;Implementing a Persistence Adapter&lt;/li&gt; &#xA; &lt;li&gt;Testing Architecture Elements&lt;/li&gt; &#xA; &lt;li&gt;Mapping Between Boundaries&lt;/li&gt; &#xA; &lt;li&gt;Assembling the Application&lt;/li&gt; &#xA; &lt;li&gt;Taking Shortcuts Consciously&lt;/li&gt; &#xA; &lt;li&gt;Enforcing Architecture Boundaries&lt;/li&gt; &#xA; &lt;li&gt;Managing Multiple Bounded Contexts&lt;/li&gt; &#xA; &lt;li&gt;A Component-Based Approach to Software Architecture&lt;/li&gt; &#xA; &lt;li&gt;Deciding on an Architecture Style&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>casdoor/casdoor-java-sdk</title>
    <updated>2023-07-25T01:37:24Z</updated>
    <id>tag:github.com,2023-07-25:/casdoor/casdoor-java-sdk</id>
    <link href="https://github.com/casdoor/casdoor-java-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Java client SDK for Casdoor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;casdoor-java-sdk&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/casdoor/casdoor-java-sdk/actions/workflows/maven-ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/casdoor/casdoor-java-sdk/actions/workflows/maven-ci.yml/badge.svg?sanitize=true&#34; alt=&#34;GitHub Actions&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codebeat.co/projects/github-com-casdoor-casdoor-java-sdk-master&#34;&gt;&lt;img src=&#34;https://codebeat.co/badges/e3e92eff-8b71-4903-9764-5126e855b3b6&#34; alt=&#34;codebeat badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/casdoor/casdoor-java-sdk&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/casdoor/casdoor-java-sdk/branch/master/graph/badge.svg?token=1C2FSTN4J8&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.javadoc.io/doc/org.casbin/casdoor-java-sdk&#34;&gt;&lt;img src=&#34;https://www.javadoc.io/badge/org.casbin/casdoor-java-sdk.svg?sanitize=true&#34; alt=&#34;Javadocs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mvnrepository.com/artifact/org.casbin/casdoor-java-sdk/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.casbin/casdoor-java-sdk.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/casdoor/casdoor-java-sdk/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/casdoor/casdoor-java-sdk.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/5rPsrAzK7S&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1022748306096537660?logo=discord&amp;amp;label=discord&amp;amp;color=5865F2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is Casdoor&#39;s SDK for java, which will allow you to easily connect your application to the Casdoor authentication system without having to implement it from scratch.&lt;/p&gt; &#xA;&lt;p&gt;Casdoor SDK is very simple to use. We will show you the steps below.&lt;/p&gt; &#xA;&lt;h2&gt;Step1. Init Config&lt;/h2&gt; &#xA;&lt;p&gt;Initialization requires 5 parameters, which are all string type:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name (in order)&lt;/th&gt; &#xA;   &lt;th&gt;Must&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;endpoint&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Casdoor Server Url, such as &lt;code&gt;http://localhost:8000&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clientId&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Client ID for the Casdoor application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;clientSecret&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Client secret for the Casdoor application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;certificate&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;The public key for the Casdoor application&#39;s cert&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;organizationName&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;The name for the Casdoor organization&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;applicationName&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;The name for the Casdoor application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;CasdoorConfig casdoorConfig = new CasdoorConfig(endpoint, clientId, clientSecret, certificate, organizationName, applicationName);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Step2. Get Service and use&lt;/h2&gt; &#xA;&lt;p&gt;Now provide two services: &lt;code&gt;CasdoorUserService&lt;/code&gt;, &lt;code&gt;CasdoorAuthService&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can create them like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;CasdoorUserService casdoorUserService = new CasdoorUserService(casdoorConfig);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;UserService&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;CasdoorUserService&lt;/code&gt; support basic user operations, like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GetUser(name string)&lt;/code&gt;, get one user by user name.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GetUsers()&lt;/code&gt;, get all users.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UpdateUser(auth.User)/AddUser(auth.User)/DeleteUser(auth.User)&lt;/code&gt;, write user to database.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;AuthService&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Get token and parse&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;After casdoor verification passed, it will be redirected to your application with code and state, like &lt;code&gt;http://forum.casbin.org?code=xxx&amp;amp;state=yyyy&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Your web application can get the &lt;code&gt;code&lt;/code&gt;,&lt;code&gt;state&lt;/code&gt; and call &lt;code&gt;GetOAuthToken(code, state)&lt;/code&gt;, then parse out jwt token.&lt;/p&gt; &#xA;&lt;p&gt;The general process is as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String token = casdoorAuthService.getOAuthToken(code, state);&#xA;&#xA;CasdoorUser casdoorUser = casdoorAuthService.parseJwtToken(token);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Set Session in your app&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;casdoorUser&lt;/code&gt; contains the basic information about the user provided by casdoor, you can use it as a keyword to set the session in your application, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;HttpSession session = request.getSession();&#xA;session.setAttribute(&#34;user&#34;, user);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SpringBoot Support&lt;/h2&gt; &#xA;&lt;p&gt;If you use SpingBoot for your application, you can use &lt;a href=&#34;https://github.com/casdoor/casdoor-spring-boot-starter&#34;&gt;casdoor-spring-boot-starter&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wayn111/waynboot-mall</title>
    <updated>2023-07-25T01:37:24Z</updated>
    <id>tag:github.com,2023-07-25:/wayn111/waynboot-mall</id>
    <link href="https://github.com/wayn111/waynboot-mall" rel="alternate"></link>
    <summary type="html">&lt;p&gt;这是一套全部开源的微商城项目，包含一个运营后台、H5商城前台和服务端接口。 实现了商城所需的首页展示、商品分类、商品详情、sku详情、商品搜索、购物车、结算下单、商品评论等一系列功能。 技术上基于最新得Springboot3.0、jdk17，整合了MySql、Redis、RabbitMQ、ElasticSearch等常用中间件，代码简单易维护，避免过度封装，欢迎大家点个star、关注博主。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;waynboot-mall&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;分支名称&lt;/th&gt; &#xA;   &lt;th&gt;Spring Boot 版本&lt;/th&gt; &#xA;   &lt;th&gt;JDK 版本&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wayn111/waynboot-mall&#34;&gt;master&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3.0.6&lt;/td&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wayn111/waynboot-mall/tree/springboot-2.7&#34;&gt;springboot-2.7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2.7&lt;/td&gt; &#xA;   &lt;td&gt;1.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E7%AE%80%E4%BB%8B&#34;&gt;简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1&#34;&gt;功能设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1&#34;&gt;系统设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B&#34;&gt;技术选型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95&#34;&gt;文件目录&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#todo&#34;&gt;todo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E5%BC%80%E5%8F%91%E9%83%A8%E7%BD%B2&#34;&gt;开发部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E5%9C%A8%E7%BA%BF%E4%BD%93%E9%AA%8C&#34;&gt;在线体验&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E6%BC%94%E7%A4%BA%E6%88%AA%E5%9B%BE&#34;&gt;演示截图&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95&#34;&gt;文件目录&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/#%E6%84%9F%E8%B0%A2&#34;&gt;感谢&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;简介&lt;/h1&gt; &#xA;&lt;p&gt;waynboot-mall 是一套全部开源的微商城项目，包含三个项目：运营后台、H5 商城和后端接口。实现了一套完整的商城业务，有首页展示、商品分类、商品详情、sku 详情、商品搜索、加入购物车、结算下单、商品评论等一系列功能。商城前后台项目源码全部开源，绝无套路。技术上基于最新得 Springboot3.1，整合了 Redis、RabbitMQ、ElasticSearch 等常用中间件，根据博主多年线上项目实战经验总结开发而来不断优化、完善。&lt;/p&gt; &#xA;&lt;p&gt;对于初学者而言 waynboot-mall 项目是非常易于部署的，根据readme中的开发部署指南就能成功启动项目。对于非技术人员，本项目也提供了一键安装脚本，能在五分钟内启动商城前后台所有服务。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wayn111/waynboot-mobile&#34;&gt;H5商城项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wayn111/waynboot-admin&#34;&gt;运营后台项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wayn111/waynboot-mall&#34;&gt;后台接口项目&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果有任何使用问题，欢迎提交Issue或加wx告知，方便互相交流反馈～ 💘。最后，喜欢的话麻烦给我个star&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;功能设计&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/images/%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1.png&#34; alt=&#34;功能设计&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;系统设计&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/images/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1.png&#34; alt=&#34;系统设计&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;关注公众号：waynblog，每周更新最新技术文章。回复关键字：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;学习&lt;/strong&gt;：加群交流，群内问题都会一一解答。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;演示账号&lt;/strong&gt;：获得线上项目管理后台演示账号。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;开源项目&lt;/strong&gt;：获取博主自己写的三个开源项目，包含PC、H5商城、后台权限管理系统等。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/wayn111/waynboot-mall/master/images/wx-mp-code.png&#34; width=&#34;100&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;技术选型&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;系统组件&lt;/th&gt; &#xA;   &lt;th&gt;采用技术&lt;/th&gt; &#xA;   &lt;th&gt;官网&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;基础框架&lt;/td&gt; &#xA;   &lt;td&gt;Spring Boot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://spring.io/projects/spring-boot&#34;&gt;https://spring.io/projects/spring-boot&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;ORM 框架&lt;/td&gt; &#xA;   &lt;td&gt;MyBatis-Plus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://baomidou.com&#34;&gt;https://baomidou.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;工具类库&lt;/td&gt; &#xA;   &lt;td&gt;hutool&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://hutool.cn&#34;&gt;https://hutool.cn&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;流量网关&lt;/td&gt; &#xA;   &lt;td&gt;Nginx&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://nginx.org/en/index.html&#34;&gt;http://nginx.org/en/index.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;访问控制&lt;/td&gt; &#xA;   &lt;td&gt;Spring Security&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://spring.io/projects/spring-security&#34;&gt;https://spring.io/projects/spring-security&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;日志记录&lt;/td&gt; &#xA;   &lt;td&gt;Nginx&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://logback.qos.ch/&#34;&gt;https://logback.qos.ch/&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;验证码&lt;/td&gt; &#xA;   &lt;td&gt;easy-captcha&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ele-admin/EasyCaptcha&#34;&gt;https://github.com/ele-admin/EasyCaptcha&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;数据库连接池&lt;/td&gt; &#xA;   &lt;td&gt;HikariCP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/brettwooldridge/HikariCP&#34;&gt;https://github.com/brettwooldridge/HikariCP&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;Redis 客户端&lt;/td&gt; &#xA;   &lt;td&gt;Lettuce&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://lettuce.io&#34;&gt;https://lettuce.io&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;Elasticsearch 客户端&lt;/td&gt; &#xA;   &lt;td&gt;Java High Level REST Client&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high.html&#34;&gt;https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/java-rest-high.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;消息队列&lt;/td&gt; &#xA;   &lt;td&gt;RabbitMQ&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.rabbitmq.com&#34;&gt;https://www.rabbitmq.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;定时任务&lt;/td&gt; &#xA;   &lt;td&gt;xxl-job&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xuxueli.com/xxl-job&#34;&gt;https://www.xuxueli.com/xxl-job&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;服务监控&lt;/td&gt; &#xA;   &lt;td&gt;spring-boot-admin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.spring-boot-admin.com/current/getting-started.html&#34;&gt;https://docs.spring-boot-admin.com/current/getting-started.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;todo&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 订单详情页面&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 商城资讯流&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 联系客服&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 团购下单&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;开发部署&lt;/h1&gt; &#xA;&lt;p&gt;由于本项目图片压缩包超过100m不能在github上传， 提供百度网盘地址链接：&lt;a href=&#34;https://pan.baidu.com/s/16_d0_f6RhVnN_dDobYm9Bw&#34;&gt;https://pan.baidu.com/s/16_d0_f6RhVnN_dDobYm9Bw&lt;/a&gt; 提取码：rvlk&lt;/p&gt; &#xA;&lt;p&gt;ps: 也可以加我 wx: waynaqua 获取商城图片&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 1. 克隆项目&#xA;git clone git@github.com:wayn111/waynboot-mall.git&#xA;&#xA;# 2. 导入项目依赖&#xA;将waynboot-mall目录用idea打开，导入maven依赖&#xA;&#xA;# 3. 安装Mysql8.0+、Redis3.0+、RabbitMQ3.0+、ElasticSearch7.0+到本地&#xA;&#xA;# 4. 导入sql文件&#xA;在项目根目录下，找到`wayn_shop_*.sql`文件，新建mysql数据库wayn_shop，导入其中&#xA;&#xA;# 5. 项目图片部署(注意由于本项目图片压缩包超过100m不能在github上传，请加我的wx:waynaqua ，获取图片压缩包)&#xA;在项目根目录下，找到webp.zip文件，将zip中所有图片解压缩部署到D:\waynshop\webp目录下&#xA;&#xA;# 6. 修改Mysql、Redis、RabbitMQ、Elasticsearch连接配置&#xA;修改`application-dev.yml`以及`application.yml`文件中数据连接配置相关信息&#xA;&#xA;# 7. 启动项目&#xA;后台api：&#xA;    进入waynboot-admin-api子项目，找到AdminApplication文件，右键`run AdminApplication`，启动后台项目&#xA;h5商城api:&#xA;    进入waynboot-mobile-api子项目，找到MobileApplication文件，右键`run MobileApplication`，启动h5商城项目&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;在线体验&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;注册一个账号&lt;/li&gt; &#xA; &lt;li&gt;然后登陆&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;前台演示地址：&lt;a href=&#34;http://121.4.124.33/mall&#34;&gt;http://121.4.124.33/mall&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;后台演示地址：&lt;a href=&#34;http://121.4.124.33/admin&#34;&gt;http://121.4.124.33/admin&lt;/a&gt; ， 后台演示账号：关注博主公众号【waynblog】，发送 演示账号&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;演示截图&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;商城首页&lt;img src=&#34;https://files.mdnice.com/user/40549/914d6ec3-7456-49fc-bda5-24256bdec9ee.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;更多商品&lt;img src=&#34;https://files.mdnice.com/user/40549/dc5160be-77ed-4082-99d0-94dc529f4093.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;商城搜索&lt;img src=&#34;https://files.mdnice.com/user/40549/f9a80d94-3e99-477d-a7e5-deb7269092ec.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;金刚位跳转&lt;img src=&#34;https://files.mdnice.com/user/40549/a7f61d46-24e2-4197-8684-f741cb584bf9.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;商品详情&lt;img src=&#34;https://files.mdnice.com/user/40549/d6da447b-cc18-4175-a879-482a14ba7892.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;商品分类&lt;img src=&#34;https://files.mdnice.com/user/40549/b0b57fee-87c8-49e1-b870-afcf98408bde.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;商品sku选择&lt;img src=&#34;https://files.mdnice.com/user/40549/2ea549b3-842c-4949-ba97-56c954206b0e.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;购物车查看&lt;img src=&#34;https://files.mdnice.com/user/40549/0e5e0317-5caf-41d9-9171-831bc13decda.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;确认下单&lt;img src=&#34;https://files.mdnice.com/user/40549/aa089cc8-301f-4b39-9caa-9eff9d5bb407.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;选择支付方式&lt;img src=&#34;https://files.mdnice.com/user/40549/38aed1a1-7bfc-422c-a080-a919af91c306.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;下单成功&lt;img src=&#34;https://files.mdnice.com/user/40549/f1e6bd71-8f70-442d-852d-803937b9d703.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;订单列表&lt;img src=&#34;https://files.mdnice.com/user/40549/6c171780-2c94-48cf-bfe8-b4369745a567.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;商品评论&lt;img src=&#34;https://files.mdnice.com/user/40549/590615c0-1167-44e9-9b8f-0fc7e11db654.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;我的页面&lt;img src=&#34;https://files.mdnice.com/user/40549/fc26c2d0-6e71-4e76-aeff-8886f15be092.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;登录&lt;img src=&#34;https://files.mdnice.com/user/40549/57bb81a0-92af-4db4-93c8-e83d87cc1a73.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;注册&lt;img src=&#34;https://files.mdnice.com/user/40549/09c7c705-5839-4364-b908-e4231d31a8cc.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h1&gt;文件目录&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;|-- db-init                        // 数据库初始化脚本&#xA;|-- waynboot-monitor               // 监控模块&#xA;|-- waynboot-admin-api             // 运营后台api模块，提供后台项目api接口&#xA;|   |-- controller                 // 后台接口&#xA;|   |-- framework                  // 后台配置相关&#xA;|-- waynboot-common                // 通用模块，包含项目核心基础类&#xA;|   |-- annotation                &#xA;|   |-- base      &#xA;|   |-- config&#xA;|   |-- constant&#xA;|   |-- core&#xA;|   |-- enums&#xA;|   |-- exception&#xA;|   |-- task&#xA;|   |-- util&#xA;|-- waynboot-data                  // 数据模块，通用中间件数据访问&#xA;|   |-- waynboot-data-redis        // redis访问配置模块&#xA;|   |-- waynboot-data-elastic      // elastic访问配置模块&#xA;|-- waynboot-message-consumer      // 消费者模块，处理订单消息和邮件消息&#xA;|-- waynboot-message-core          // 消费者核心模块，队列、交换机配置&#xA;|-- waynboot-mobile-api            // H5商城api模块，提供H5商城api接口&#xA;|   |-- controller                 // 前台接口&#xA;|   |-- framework                  // 前台配置相关&#xA;|-- pom.xml                        // maven父项目依赖，定义子项目依赖版本&#xA;|-- ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;感谢&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ewall1106/vue-h5-template&#34;&gt;panda-mall&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/linlinjava/litemall&#34;&gt;litemall&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/youzan/vant&#34;&gt;vant-ui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>