<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T01:33:22Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>NetEase/arctic</title>
    <updated>2022-08-14T01:33:22Z</updated>
    <id>tag:github.com,2022-08-14:/NetEase/arctic</id>
    <link href="https://github.com/NetEase/arctic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Arctic is a streaming lake warehouse service open sourced by NetEase&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/NetEase/arctic/master/site/docs/ch/images/arctic_logo_for_git.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to arctic, arctic is a streaming lake warehouse system open sourced by NetEase. Arctic adds more real-time capabilities on top of iceberg and hive, and provides stream-batch unified, out-of-the-box metadata services for dataops, allowing Data lakes much more usable and practical.&lt;/p&gt; &#xA;&lt;h2&gt;What is arctic&lt;/h2&gt; &#xA;&lt;p&gt;Arctic is a streaming lakehouse service built on top of apache iceberg table format. Through arctic, users could benefit optimized CDC、streaming update、fresh olap etc. on engines like flink, spark, and trino. Combined with efficient offline processing capabilities of data lakes, arctic can serve more scenarios where streaming and batch are fused. At the same time, the function of self-optimization、concurrent conflict resolution and standard management tools could effectively reduce the burden on users in data lake management and optimization. &lt;img src=&#34;https://raw.githubusercontent.com/NetEase/arctic/master/site/docs/ch/images/arctic_introduce.png&#34; alt=&#34;Introduce&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Arctic services are presented by deploying AMS, which can be considered as a replacement for HMS (Hive Metastore), or HMS for iceberg. Arctic uses iceberg as the base table format, but instead of hacking the iceberg implementation, it uses iceberg as a lib. Arctic&#39;s open overlay architecture can help large-scale offline data lakes quickly upgraded to real-time data lakes, without worrying about compatibility issues with the original data lakes, allowing data lakes to meet more real-time analysis, real-time risk control, Real-time training, feature engineering and other scenarios.&lt;/p&gt; &#xA;&lt;h2&gt;Arctic features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Efficient streaming updates based on primary keys&lt;/li&gt; &#xA; &lt;li&gt;Data auto bucketing and self-optimized for performance and efficiency&lt;/li&gt; &#xA; &lt;li&gt;Encapsulating data lake and message queue into a unified table to achieve lower-latency computing&lt;/li&gt; &#xA; &lt;li&gt;Provide standardized metrics, dashboard and related management tools for streaming lakehouse&lt;/li&gt; &#xA; &lt;li&gt;Support spark and flink to read and write data, support trino to query data&lt;/li&gt; &#xA; &lt;li&gt;100% compatible with iceberg / hive table format and syntax&lt;/li&gt; &#xA; &lt;li&gt;Provide transactional guarantee for streaming and batch concurrent writing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;p&gt;Arctic contains modules as below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;arctic-core&lt;/code&gt; contains core abstractions and common implementions for other modules&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arctic-flink&lt;/code&gt; is the module for integrating with Apache Flink (use arctic-flink-runtime for a shaded version)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arctic-spark&lt;/code&gt; is the module for integrating with Apache Spark (use arctic-spark-runtime for a shaded version)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arctic-trino&lt;/code&gt; now provides query integrating with apache trino, built on JDK11&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arctic-optimizing&lt;/code&gt; exposes optimizing container/group api and provides default implemetion&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;arctic-ams&lt;/code&gt; is arctic meta service module &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ams-api&lt;/code&gt; contains ams thrift api&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ams-dashboard&lt;/code&gt; is the dashboard frontend for ams&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ams-server&lt;/code&gt; is the backend server for ams&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Arctic is built using Maven with Java 1.8 and Java 11(only for &lt;code&gt;trino&lt;/code&gt; module).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To build Trino module need config &lt;code&gt;toolchains.xml&lt;/code&gt; in &lt;code&gt;${user.home}/.m2/&lt;/code&gt; dir, the content is&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;&#xA;&amp;lt;toolchains&amp;gt;&#xA;    &amp;lt;toolchain&amp;gt;&#xA;        &amp;lt;type&amp;gt;jdk&amp;lt;/type&amp;gt;&#xA;        &amp;lt;provides&amp;gt;&#xA;            &amp;lt;version&amp;gt;11&amp;lt;/version&amp;gt;&#xA;            &amp;lt;vendor&amp;gt;sun&amp;lt;/vendor&amp;gt;&#xA;        &amp;lt;/provides&amp;gt;&#xA;        &amp;lt;configuration&amp;gt;&#xA;            &amp;lt;jdkHome&amp;gt;${yourJdk11Home}&amp;lt;/jdkHome&amp;gt;&#xA;        &amp;lt;/configuration&amp;gt;&#xA;    &amp;lt;/toolchain&amp;gt;&#xA;&amp;lt;/toolchains&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To invoke a build and run tests: &lt;code&gt;mvn package -P toolchain&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To skip tests: &lt;code&gt;mvn -DskipTests package -P toolchain&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Engines supported&lt;/h2&gt; &#xA;&lt;p&gt;Arctic support multiple processing engines as below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Processing Engine&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flink&lt;/td&gt; &#xA;   &lt;td&gt;1.12.x and 1.14.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spark&lt;/td&gt; &#xA;   &lt;td&gt;3.1+&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Trino&lt;/td&gt; &#xA;   &lt;td&gt;380&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://arctic.netease.com/ch/docker-quickstart/&#34;&gt;https://arctic.netease.com/ch/docker-quickstart/&lt;/a&gt; to quickly explore what arctic can do.&lt;/p&gt; &#xA;&lt;h2&gt;Join Community&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in Lakehouse, Data Lake Format, welcome to join our community, we welcome any organizations, teams and individuals to grow together, and sincerely hope to help users better use Data Lake Format through open source.&lt;/p&gt; &#xA;&lt;p&gt;Join the Arctic WeChat Group: Add &#34; &lt;code&gt;kllnn999&lt;/code&gt; &#34; as a friend on WeChat and specify &#34;Arctic lover&#34;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Netflix/Hystrix</title>
    <updated>2022-08-14T01:33:22Z</updated>
    <id>tag:github.com,2022-08-14:/Netflix/Hystrix</id>
    <link href="https://github.com/Netflix/Hystrix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Hystrix is a latency and fault tolerance library designed to isolate points of access to remote systems, services and 3rd party libraries, stop cascading failure and enable resilience in complex distributed systems where failure is inevitable.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://netflix.github.com/Hystrix/images/hystrix-logo-tagline-850.png&#34;&gt; &#xA;&lt;h1&gt;Hystrix: Latency and Fault Tolerance for Distributed Systems&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/osslifecycle/Netflix/hystrix.svg?sanitize=true&#34; alt=&#34;NetflixOSS Lifecycle&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/Netflix/Hystrix&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Netflix/Hystrix.svg?branch=master&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://search.maven.org/#search%7Cgav%7C1%7Cg:%22com.netflix.hystrix%22%20AND%20a:%22hystrix-core%22&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/com.netflix.hystrix/hystrix-core/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Netflix/Hystrix/master/LICENSE-2.0.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Hystrix Status&lt;/h1&gt; &#xA;&lt;p&gt;Hystrix is no longer in active development, and is currently in maintenance mode.&lt;/p&gt; &#xA;&lt;p&gt;Hystrix (at version 1.5.18) is stable enough to meet the needs of Netflix for our existing applications. Meanwhile, our focus has shifted towards more adaptive implementations that react to an application’s real time performance rather than pre-configured settings (for example, through &lt;a href=&#34;https://medium.com/@NetflixTechBlog/performance-under-load-3e6fa9a60581&#34;&gt;adaptive concurrency limits&lt;/a&gt;). For the cases where something like Hystrix makes sense, we intend to continue using Hystrix for existing applications, and to leverage open and active projects like &lt;a href=&#34;https://github.com/resilience4j/resilience4j&#34;&gt;resilience4j&lt;/a&gt; for new internal projects. We are beginning to recommend others do the same.&lt;/p&gt; &#xA;&lt;p&gt;Netflix Hystrix is now officially in maintenance mode, with the following expectations to the greater community: Netflix will no longer actively review issues, merge pull-requests, and release new versions of Hystrix. We have made a final release of Hystrix (1.5.18) per &lt;a href=&#34;https://github.com/Netflix/Hystrix/issues/1891&#34;&gt;issue 1891&lt;/a&gt; so that the latest version in Maven Central is aligned with the last known stable version used internally at Netflix (1.5.11). If members of the community are interested in taking ownership of Hystrix and moving it back into active mode, please reach out to &lt;a href=&#34;mailto:hystrixoss@googlegroups.com&#34;&gt;hystrixoss@googlegroups.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Hystrix has served Netflix and the community well over the years, and the transition to maintenance mode is in no way an indication that the concepts and ideas from Hystrix are no longer valuable. On the contrary, Hystrix has inspired many great ideas and projects. We thank everyone at Netflix, and in the greater community, for all the contributions made to Hystrix over the years.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Hystrix is a latency and fault tolerance library designed to isolate points of access to remote systems, services and 3rd party libraries, stop cascading failure and enable resilience in complex distributed systems where failure is inevitable.&lt;/p&gt; &#xA;&lt;h2&gt;Full Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/Netflix/Hystrix/wiki/&#34;&gt;Wiki&lt;/a&gt; for full documentation, examples, operational details and other information.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;http://netflix.github.com/Hystrix/javadoc&#34;&gt;Javadoc&lt;/a&gt; for the API.&lt;/p&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Google Group: &lt;a href=&#34;http://groups.google.com/d/forum/hystrixoss&#34;&gt;HystrixOSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;http://twitter.com/HystrixOSS&#34;&gt;@HystrixOSS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Netflix/Hystrix/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What does it do?&lt;/h2&gt; &#xA;&lt;h4&gt;1) Latency and Fault Tolerance&lt;/h4&gt; &#xA;&lt;p&gt;Stop cascading failures. Fallbacks and graceful degradation. Fail fast and rapid recovery.&lt;/p&gt; &#xA;&lt;p&gt;Thread and semaphore isolation with circuit breakers.&lt;/p&gt; &#xA;&lt;h4&gt;2) Realtime Operations&lt;/h4&gt; &#xA;&lt;p&gt;Realtime monitoring and configuration changes. Watch service and property changes take effect immediately as they spread across a fleet.&lt;/p&gt; &#xA;&lt;p&gt;Be alerted, make decisions, affect change and see results in seconds.&lt;/p&gt; &#xA;&lt;h4&gt;3) Concurrency&lt;/h4&gt; &#xA;&lt;p&gt;Parallel execution. Concurrency aware request caching. Automated batching through request collapsing.&lt;/p&gt; &#xA;&lt;h2&gt;Hello World!&lt;/h2&gt; &#xA;&lt;p&gt;Code to be isolated is wrapped inside the run() method of a HystrixCommand similar to the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class CommandHelloWorld extends HystrixCommand&amp;lt;String&amp;gt; {&#xA;&#xA;    private final String name;&#xA;&#xA;    public CommandHelloWorld(String name) {&#xA;        super(HystrixCommandGroupKey.Factory.asKey(&#34;ExampleGroup&#34;));&#xA;        this.name = name;&#xA;    }&#xA;&#xA;    @Override&#xA;    protected String run() {&#xA;        return &#34;Hello &#34; + name + &#34;!&#34;;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command could be used like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String s = new CommandHelloWorld(&#34;Bob&#34;).execute();&#xA;Future&amp;lt;String&amp;gt; s = new CommandHelloWorld(&#34;Bob&#34;).queue();&#xA;Observable&amp;lt;String&amp;gt; s = new CommandHelloWorld(&#34;Bob&#34;).observe();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;More examples and information can be found in the &lt;a href=&#34;https://github.com/Netflix/Hystrix/wiki/How-To-Use&#34;&gt;How To Use&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;Example source code can be found in the &lt;a href=&#34;https://github.com/Netflix/Hystrix/tree/master/hystrix-examples/src/main/java/com/netflix/hystrix/examples&#34;&gt;hystrix-examples&lt;/a&gt; module.&lt;/p&gt; &#xA;&lt;h2&gt;Binaries&lt;/h2&gt; &#xA;&lt;p&gt;Binaries and dependency information for Maven, Ivy, Gradle and others can be found at &lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.netflix.hystrix%22%20AND%20a%3A%22hystrix-core%22&#34;&gt;http://search.maven.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Change history and version numbers =&amp;gt; &lt;a href=&#34;https://github.com/Netflix/Hystrix/raw/master/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example for Maven:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.netflix.hystrix&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;hystrix-core&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;x.y.z&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and for Ivy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency org=&#34;com.netflix.hystrix&#34; name=&#34;hystrix-core&#34; rev=&#34;x.y.z&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to download the jars instead of using a build system, create a Maven pom file like this with the desired version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34;?&amp;gt;&#xA;&amp;lt;project xmlns=&#34;http://maven.apache.org/POM/4.0.0&#34; xmlns:xsi=&#34;http://www.w3.org/2001/XMLSchema-instance&#34; xsi:schemaLocation=&#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&#34;&amp;gt;&#xA;&#x9;&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&#xA;&#x9;&amp;lt;groupId&amp;gt;com.netflix.hystrix.download&amp;lt;/groupId&amp;gt;&#xA;&#x9;&amp;lt;artifactId&amp;gt;hystrix-download&amp;lt;/artifactId&amp;gt;&#xA;&#x9;&amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;&#xA;&#x9;&amp;lt;name&amp;gt;Simple POM to download hystrix-core and dependencies&amp;lt;/name&amp;gt;&#xA;&#x9;&amp;lt;url&amp;gt;http://github.com/Netflix/Hystrix&amp;lt;/url&amp;gt;&#xA;&#x9;&amp;lt;dependencies&amp;gt;&#xA;&#x9;&#x9;&amp;lt;dependency&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;groupId&amp;gt;com.netflix.hystrix&amp;lt;/groupId&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;artifactId&amp;gt;hystrix-core&amp;lt;/artifactId&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;version&amp;gt;x.y.z&amp;lt;/version&amp;gt;&#xA;&#x9;&#x9;&#x9;&amp;lt;scope/&amp;gt;&#xA;&#x9;&#x9;&amp;lt;/dependency&amp;gt;&#xA;&#x9;&amp;lt;/dependencies&amp;gt;&#xA;&amp;lt;/project&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then execute:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn -f download-hystrix-pom.xml dependency:copy-dependencies&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will download hystrix-core-*.jar and its dependencies into ./target/dependency/.&lt;/p&gt; &#xA;&lt;p&gt;You need Java 6 or later.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;To build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:Netflix/Hystrix.git&#xA;$ cd Hystrix/&#xA;$ ./gradlew build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Futher details on building can be found on the &lt;a href=&#34;https://github.com/Netflix/Hystrix/wiki/Getting-Started&#34;&gt;Getting Started&lt;/a&gt; page of the wiki.&lt;/p&gt; &#xA;&lt;h2&gt;Run Demo&lt;/h2&gt; &#xA;&lt;p&gt;To run a &lt;a href=&#34;https://github.com/Netflix/Hystrix/tree/master/hystrix-examples/src/main/java/com/netflix/hystrix/examples/demo/HystrixCommandDemo.java&#34;&gt;demo app&lt;/a&gt; do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ git clone git@github.com:Netflix/Hystrix.git&#xA;$ cd Hystrix/&#xA;./gradlew runDemo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will see output similar to the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Request =&amp;gt; GetUserAccountCommand[SUCCESS][8ms], GetPaymentInformationCommand[SUCCESS][20ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][101ms], CreditCardCommand[SUCCESS][1075ms]&#xA;Request =&amp;gt; GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][2ms], GetPaymentInformationCommand[SUCCESS][22ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][130ms], CreditCardCommand[SUCCESS][1050ms]&#xA;Request =&amp;gt; GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][4ms], GetPaymentInformationCommand[SUCCESS][19ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][145ms], CreditCardCommand[SUCCESS][1301ms]&#xA;Request =&amp;gt; GetUserAccountCommand[SUCCESS][4ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][93ms], CreditCardCommand[SUCCESS][1409ms]&#xA;&#xA;#####################################################################################&#xA;# CreditCardCommand: Requests: 17 Errors: 0 (0%)   Mean: 1171 75th: 1391 90th: 1470 99th: 1486 &#xA;# GetOrderCommand: Requests: 21 Errors: 0 (0%)   Mean: 100 75th: 144 90th: 207 99th: 230 &#xA;# GetUserAccountCommand: Requests: 21 Errors: 4 (19%)   Mean: 8 75th: 11 90th: 46 99th: 51 &#xA;# GetPaymentInformationCommand: Requests: 21 Errors: 0 (0%)   Mean: 18 75th: 21 90th: 24 99th: 25 &#xA;#####################################################################################&#xA;&#xA;Request =&amp;gt; GetUserAccountCommand[SUCCESS][10ms], GetPaymentInformationCommand[SUCCESS][16ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][51ms], CreditCardCommand[SUCCESS][922ms]&#xA;Request =&amp;gt; GetUserAccountCommand[SUCCESS][12ms], GetPaymentInformationCommand[SUCCESS][12ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][68ms], CreditCardCommand[SUCCESS][1257ms]&#xA;Request =&amp;gt; GetUserAccountCommand[SUCCESS][10ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][78ms], CreditCardCommand[SUCCESS][1295ms]&#xA;Request =&amp;gt; GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS][6ms], GetPaymentInformationCommand[SUCCESS][11ms], GetUserAccountCommand[FAILURE, FALLBACK_SUCCESS, RESPONSE_FROM_CACHE][0ms]x2, GetOrderCommand[SUCCESS][153ms], CreditCardCommand[SUCCESS][1321ms]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This demo simulates 4 different &lt;a href=&#34;https://github.com/Netflix/Hystrix/tree/master/hystrix-core/src/main/java/com/netflix/hystrix/HystrixCommand.java&#34;&gt;HystrixCommand&lt;/a&gt; implementations with failures, latency, timeouts and duplicate calls in a multi-threaded environment.&lt;/p&gt; &#xA;&lt;p&gt;It logs the results of &lt;a href=&#34;https://github.com/Netflix/Hystrix/tree/master/hystrix-core/src/main/java/com/netflix/hystrix/HystrixRequestLog.java&#34;&gt;HystrixRequestLog&lt;/a&gt; and metrics from &lt;a href=&#34;https://github.com/Netflix/Hystrix/tree/master/hystrix-core/src/main/java/com/netflix/hystrix/HystrixCommandMetrics.java&#34;&gt;HystrixCommandMetrics&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Dashboard&lt;/h2&gt; &#xA;&lt;p&gt;The hystrix-dashboard component of this project has been deprecated and moved to &lt;a href=&#34;https://github.com/Netflix-Skunkworks/hystrix-dashboard&#34;&gt;Netflix-Skunkworks/hystrix-dashboard&lt;/a&gt;. Please see the README there for more details including important security considerations.&lt;/p&gt; &#xA;&lt;h2&gt;Bugs and Feedback&lt;/h2&gt; &#xA;&lt;p&gt;For bugs, questions and discussions please use the &lt;a href=&#34;https://github.com/Netflix/Hystrix/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2013 Netflix, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jeecgboot/JimuReport</title>
    <updated>2022-08-14T01:33:22Z</updated>
    <id>tag:github.com,2022-08-14:/jeecgboot/JimuReport</id>
    <link href="https://github.com/jeecgboot/JimuReport" rel="alternate"></link>
    <summary type="html">&lt;p&gt;「低代码可视化报表」类似excel操作风格，在线拖拽完成设计！功能涵盖: 报表设计、图形报表、打印设计、大屏设计等，完全免费！秉承“简单、易用、专业”的产品理念，极大的降低报表开发难度、缩短开发周期、解决各类报表难题。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JimuReport - 积木报表（一款免费Web报表工具）&lt;/h1&gt; &#xA;&lt;p&gt;v1.5.2 | 2022-07-12&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://jimureport.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Author-%E5%8C%97%E4%BA%AC%E5%9B%BD%E7%82%AC%E8%BD%AF%E4%BB%B6-orange.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhangdaiscott/JimuReport&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/version-1.5.2-brightgreen.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhangdaiscott/JimuReport&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/zhangdaiscott/JimuReport.svg?style=social&amp;amp;label=Stars&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhangdaiscott/JimuReport&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/zhangdaiscott/JimuReport.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;一款免费的数据可视化报表，含报表和大屏设计，像搭建积木一样在线设计报表！功能涵盖，数据报表、打印设计、图表报表、大屏设计等！&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web 版报表设计器，类似于excel操作风格，通过拖拽完成报表设计。&lt;/li&gt; &#xA; &lt;li&gt;秉承“简单、易用、专业”的产品理念，极大的降低报表开发难度、缩短开发周期、节省成本、解决各类报表难题。&lt;/li&gt; &#xA; &lt;li&gt;领先的企业级Web报表软件，采用纯Web在线技术，专注于解决企业报表快速制作难题。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;专注于开源，打造“专业 易用 智能 低代码”的数据可视化工具&#xA;开源协议：`功能永久免费、可以商用、代码不开放（大屏设计暂时不提供离线版本）`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;快速体验： &lt;a href=&#34;http://www.jimureport.com&#34; title=&#34;www.jimureport.com&#34;&gt;www.jimureport.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;快速集成&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;快速集成文档&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;http://report.jeecg.com/2078875&#34;&gt;http://report.jeecg.com/2078875&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;引入JimuReport依赖&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.jeecgframework.jimureport&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;jimureport-spring-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;1.5.2&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如果出现jsqlparser不兼容问题，请这么引用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.jeecgframework.jimureport&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;jimureport-spring-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.5.2&amp;lt;/version&amp;gt;&#xA;    &amp;lt;exclusions&amp;gt;&#xA;        &amp;lt;exclusion&amp;gt;&#xA;            &amp;lt;artifactId&amp;gt;minidao-spring-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;            &amp;lt;groupId&amp;gt;org.jeecgframework&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;/exclusion&amp;gt;&#xA;    &amp;lt;/exclusions&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.jeecgframework&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;minidao-spring-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.8.8&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;通过 &lt;a href=&#34;http://jimureport.com/doc/log&#34;&gt;http://jimureport.com/doc/log&lt;/a&gt; 查询最新版本号&lt;/p&gt; &#xA;&lt;h2&gt;免安装版和docker版本&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://jimureport.com/download&#34;&gt;http://jimureport.com/download&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开发文档&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;官方网站： &lt;a href=&#34;http://www.jimureport.com&#34;&gt;http://www.jimureport.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;官方文档： &lt;a href=&#34;http://report.jeecg.com&#34;&gt;http://report.jeecg.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;视频教程： &lt;a href=&#34;http://jimureport.com/doc/video&#34;&gt;http://jimureport.com/doc/video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://jeecgos.oss-cn-beijing.aliyuncs.com/files/jimureport_qq_qun1.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;产生背景&lt;/h2&gt; &#xA;&lt;p&gt;报表是企业IT服务必备的一项需求，但是行业内并没有一个免费好用的报表，大部分免费的报表功能较弱也不够智能，商业报表又很贵，所以有了研发一套免费报表的初衷。 做一个什么样的报表呢？随着低代码概念的兴起，原先通过报表工具设计模板，再与系统集成的模式已经落伍，现在追求的是完全在线设计，傻瓜式的操作，实现简单易用又智能的报表！&lt;/p&gt; &#xA;&lt;h2&gt;为什么选择 JimuReport?&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;永久免费，支持各种复杂报表，并且傻瓜式在线设计，非常的智能，低代码时代，这个是你的首选！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;采用SpringBoot的脚手架项目，都可以快速集成&lt;/li&gt; &#xA; &lt;li&gt;Web 版设计器，类似于excel操作风格，通过拖拽完成报表设计&lt;/li&gt; &#xA; &lt;li&gt;通过SQL、API等方式，将数据源与模板绑定。同时支持表达式，自动计算合计等功能，使计算工作量大大降低&lt;/li&gt; &#xA; &lt;li&gt;开发效率很高，傻瓜式在线报表设计，一分钟设计一个报表，又简单又强大&lt;/li&gt; &#xA; &lt;li&gt;支持 ECharts，目前支持28种图表，在线拖拽设计，支持SQL和API两种数据源&lt;/li&gt; &#xA; &lt;li&gt;支持分组、交叉，合计、表达式等复杂报表&lt;/li&gt; &#xA; &lt;li&gt;支持打印设计（支持套打、背景打印等）可设置打印边距、方向、页眉页脚等参数 一键快速打印 同时可实现发票套打，不动产证等精准、无缝打印&lt;/li&gt; &#xA; &lt;li&gt;大屏设计器支持几十种图表样式，可自由拼接、组合，设计炫酷大屏&lt;/li&gt; &#xA; &lt;li&gt;可设计各种类型的单据、大屏，如出入库单、销售单、财务报表、合同、监控大屏、旅游数据大屏等&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;数据库兼容&lt;/h2&gt; &#xA;&lt;p&gt;支持含常规、国产、大数据等28种数据库&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;数据库&lt;/th&gt; &#xA;   &lt;th&gt;支持&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Oracle、Oracle9i&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SqlServer、SqlServer2012&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DB2、Informix&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MariaDB&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQLite、Hsqldb、Derby、H2&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;达梦、人大金仓、神通&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;华为高斯、虚谷、瀚高数据库&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;阿里云PolarDB、PPAS、HerdDB&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hive、HBase、CouchBase&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;未提供脚本的数据库，可以参考 &lt;a href=&#34;https://my.oschina.net/jeecg/blog/4905722&#34;&gt;文档&lt;/a&gt; 自己转。&lt;/p&gt; &#xA;&lt;h2&gt;报表截图&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;数据可视化（专业一流，数据可视化,解决各类报表难题）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-a2a8557722593e6c5a5e8f015a0df2b70e9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;报表设计器（完全在线设计，简单易用）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-752b454f64ed87c798b3e8a083fbd6622d4.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;打印设计（支持套打、背景打印）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-9b6cd73719de68e0e45e1cf95cd6104a103.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-8863ea4e67c02dbd844bb8022652f1be651.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;数据报表（支持分组、交叉，合计等复杂报表）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-fe2ac0dfc3933734961924de0538b3049d2.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-be956cbc19287e4df9cc46c9d15e96da99d.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;图形报表（目前支持28种图表） &lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-3eda428ef182cb64a1a8e132e4bfeb87718.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-22096123c5b6a10a801967c33cc33a7af11.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能清单&lt;/h2&gt; &#xA;&lt;p&gt;更多功能清单: &lt;a href=&#34;http://jimureport.com/plan&#34;&gt;http://jimureport.com/plan&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;├─报表设计器&#xA;│  ├─数据源&#xA;│  │  ├─支持多种数据源，如Oracle,MySQL,SQLServer,PostgreSQL等主流的数据库&#xA;│  │  ├─支持SQL编写页面智能化，可以看到数据源下面的表清单和字段清单&#xA;│  │  ├─支持参数&#xA;│  │  ├─支持但数据源和多数数据源设置&#xA;│  ├─单元格格式&#xA;│  │  ├─边框&#xA;│  │  ├─字体大小&#xA;│  │  ├─字体颜色&#xA;│  │  ├─背景色&#xA;│  │  ├─字体加粗&#xA;│  │  ├─支持水平和垂直的分散对齐&#xA;│  │  ├─支持文字自动换行设置&#xA;│  │  ├─图片设置为图片背景&#xA;│  │  ├─支持无线行和无限列&#xA;│  │  ├─支持设计器内冻结窗口&#xA;│  │  ├─支持对单元格内容或格式的复制、粘贴和删除等功能&#xA;│  │  ├─等等&#xA;│  ├─报表元素&#xA;│  │  ├─文本类型：直接写文本；支持数值类型的文本设置小数位数&#xA;│  │  ├─图片类型：支持上传一张图表&#xA;│  │  ├─图表类型&#xA;│  │  ├─函数类型&#xA;│  │  └─支持求和&#xA;│  │  └─平均值&#xA;│  │  └─最大值&#xA;│  │  └─最小值&#xA;│  ├─背景&#xA;│  │  ├─背景颜色设置&#xA;│  │  ├─背景图片设置&#xA;│  │  ├─背景透明度设置&#xA;│  │  ├─背景大小设置&#xA;│  ├─数据字典&#xA;│  ├─报表打印&#xA;│  │  ├─自定义打印&#xA;│  │  └─医药笺、逮捕令、介绍信等自定义样式设计打印&#xA;│  │  ├─简单数据打印&#xA;│  │  └─出入库单、销售表打印&#xA;│  │  └─带参数打印&#xA;│  │  └─分页打印&#xA;│  │  ├─套打&#xA;│  │  └─不动产证书打印&#xA;│  │  └─发票打印&#xA;│  ├─数据报表&#xA;│  │  ├─分组数据报表&#xA;│  │  └─横向数据分组&#xA;│  │  └─纵向数据分组&#xA;│  │  └─多级循环表头分组&#xA;│  │  └─横向分组小计&#xA;│  │  └─纵向分组小计&#xA;│  │  └─合计&#xA;│  │  ├─交叉报表&#xA;│  │  ├─明细表&#xA;│  │  ├─带条件查询报表&#xA;│  │  ├─表达式报表&#xA;│  │  ├─带二维码/条形码报表&#xA;│  │  ├─多表头复杂报表&#xA;│  │  ├─主子报表&#xA;│  │  ├─预警报表&#xA;│  │  ├─数据钻取报表&#xA;│  ├─图形报表&#xA;│  │  ├─柱形图&#xA;│  │  ├─折线图&#xA;│  │  ├─饼图&#xA;│  │  ├─折柱图&#xA;│  │  ├─散点图&#xA;│  │  ├─漏斗图&#xA;│  │  ├─雷达图&#xA;│  │  ├─象形图&#xA;│  │  ├─地图&#xA;│  │  ├─仪盘表&#xA;│  │  ├─关系图&#xA;│  │  ├─图表背景&#xA;│  │  ├─图表动态刷新&#xA;│  │  ├─图表数据字典&#xA;│  ├─参数&#xA;│  │  ├─参数配置&#xA;│  │  ├─参数管理&#xA;│  ├─导入导出&#xA;│  │  ├─导入Excel&#xA;│  │  ├─导出Excel、pdf&#xA;│  ├─打印设置&#xA;│  │  ├─打印区域设置&#xA;│  │  ├─打印机设置&#xA;│  │  ├─预览&#xA;│  │  ├─打印页码设置&#xA;├─大屏设计器&#xA;│  ├─系统功能&#xA;│  │  ├─静态数据源和动态数据源设置&#xA;│  │  ├─基础功能&#xA;│  │  └─支持拖拽设计&#xA;│  │  └─支持增、删、改、查大屏&#xA;│  │  └─支持复制大屏数据和样式&#xA;│  │  └─支持大屏预览、分享&#xA;│  │  └─支持系统自动保存数据，同时支持手动恢复数据&#xA;│  │  └─支持设置大屏密码&#xA;│  │  └─支持对组件图层的删除、组合、上移、下移、置顶、置底等&#xA;│  │  ├─背景设置&#xA;│  │  └─大屏的宽度和高度设置&#xA;│  │  └─大屏简介设置&#xA;│  │  └─背景颜色、背景图片设置&#xA;│  │  └─封面图设置&#xA;│  │  └─缩放比例设置&#xA;│  │  └─环境地址设置&#xA;│  │  └─水印设置&#xA;│  │  ├─地图设置&#xA;│  │  └─添加地图&#xA;│  │  └─地图数据隔离&#xA;│  ├─图表&#xA;│  │  ├─柱形图&#xA;│  │  ├─折线图&#xA;│  │  ├─折柱图&#xA;│  │  ├─饼图&#xA;│  │  ├─象形图&#xA;│  │  ├─雷达图&#xA;│  │  ├─散点图&#xA;│  │  ├─漏斗图&#xA;│  │  ├─文本框&#xA;│  │  ├─跑马灯&#xA;│  │  ├─超链接&#xA;│  │  ├─实时时间&#xA;│  │  ├─地图&#xA;│  │  ├─全国物流地图&#xA;│  │  ├─地理坐标地图&#xA;│  │  ├─城市派件地图&#xA;│  │  ├─图片&#xA;│  │  ├─图片框&#xA;│  │  ├─轮播图&#xA;│  │  ├─滑动组件&#xA;│  │  ├─iframe&#xA;│  │  ├─video&#xA;│  │  ├─翻牌器&#xA;│  │  ├─环形图&#xA;│  │  ├─进度条&#xA;│  │  ├─仪盘表&#xA;│  │  ├─字浮云&#xA;│  │  ├─表格&#xA;│  │  ├─选项卡&#xA;│  │  ├─万能组件&#xA;└─其他模块&#xA;   └─更多功能开发中。。&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>