<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-18T01:38:36Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ZHENFENG13/My-Blog</title>
    <updated>2023-04-18T01:38:36Z</updated>
    <id>tag:github.com,2023-04-18:/ZHENFENG13/My-Blog</id>
    <link href="https://github.com/ZHENFENG13/My-Blog" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌴A simple &amp; beautiful blogging system implemented with spring-boot &amp; thymeleaf &amp; mybatis My Blog 是由 SpringBoot + Mybatis + Thymeleaf 等技术实现的 Java 博客系统，页面美观、功能齐全、部署简单及完善的代码，一定会给使用者无与伦比的体验&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;My Blog&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/personal-blog.png&#34; alt=&#34;personal-blog&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;坚持不易，各位朋友如果觉得项目还不错的话可以给项目一个 star 吧，也是对我一直更新代码的一种鼓励啦，谢谢各位的支持。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/my-blog-info.png&#34; alt=&#34;my-blog-info&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;当前分支的 Spring Boot 版本为 2.7.5，想要学习和使用其它版本可以直接点击下方的分支名称跳转至对应的仓库分支中。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;分支名称&lt;/th&gt; &#xA;   &lt;th&gt;Spring Boot Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ZHENFENG13/My-Blog/tree/spring-boot-2.3.7&#34;&gt;spring-boot-2.3.7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2.3.7-RELEASE&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ZHENFENG13/My-Blog&#34;&gt;main&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2.7.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ZHENFENG13/My-Blog/tree/spring-boot-3.x&#34;&gt;spring-boot-3.x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;你可以拿它作为博客模板，因为 My Blog 界面十分美观简洁，满足私人博客的一切要求；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;你也可以把它作为 SpringBoot 技术栈的学习项目，My Blog也足够符合要求，且代码和功能完备；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;内置三套博客主题模板，主题风格各有千秋，满足大家的选择空间，后续会继续增加，以供大家打造自己的博客；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;技术栈新颖且知识点丰富，学习后可以提升大家对于知识的理解和掌握，对于提升你的市场竞争力有一定的帮助。&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;更多 Spring Boot 实战项目可以关注十三的另一个代码仓库 &lt;a href=&#34;https://github.com/ZHENFENG13/spring-boot-projects&#34;&gt;spring-boot-projects&lt;/a&gt;，该仓库中主要是 Spring Boot 的入门学习教程以及一些常用的 Spring Boot 实战项目教程，包括 Spring Boot 使用的各种示例代码，同时也包括一些实战项目的项目源码和效果展示，实战项目包括基本的 web 开发以及目前大家普遍使用的前后端分离实践项目等，后续会根据大家的反馈继续增加一些实战项目源码，摆脱各种 hello world 入门案例的束缚，真正的掌握 Spring Boot 开发。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;关注公众号：&lt;strong&gt;程序员十三&lt;/strong&gt;，回复&#34;勾搭&#34;进群交流。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://newbee-mall.oss-cn-beijing.aliyuncs.com/wx-gzh/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%8D%81%E4%B8%89-%E5%85%AC%E4%BC%97%E5%8F%B7.png&#34; alt=&#34;wx-gzh&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;数据库文件目录为&lt;code&gt;static-files/my_blog_db.sql&lt;/code&gt;；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;部署后你可以根据自己需求修改版权文案、logo 图片、备案记录等网站基础信息；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;My Blog 后台管理系统的默认登陆账号为 admin 默认登陆密码为 123456；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;layui 版本的 My-Blog，仓库地址 &lt;a href=&#34;https://github.com/ZHENFENG13/My-Blog-layui&#34;&gt;My-Blog-layui&lt;/a&gt; ，感兴趣的朋友也可以学习一下；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;My Blog 还有一些不完善的地方，鄙人才疏学浅，望见谅；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;有任何问题都可以反馈给我，我会尽量完善该项目。&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/ZHENFENG13/My-Blog&#34;&gt;&lt;img src=&#34;https://travis-ci.org/ZHENFENG13/My-Blog.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/version-4.0.0-yellow.svg?sanitize=true&#34; alt=&#34;Version 4.0.0&#34;&gt; &lt;a href=&#34;https://github.com/ZHENFENG13/My-Blog/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-apache-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目演示&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://edu.csdn.net/course/play/29029/406882&#34;&gt;视频1：My-Blog博客项目简介&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://edu.csdn.net/course/play/29029/405864&#34;&gt;视频2：My-Blog博客项目系统演示-1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://edu.csdn.net/course/play/29029/405865&#34;&gt;视频3：My-Blog博客项目系统演示-2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/av52551095&#34;&gt;视频4：博客项目预览&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开发文档&lt;/h2&gt; &#xA;&lt;h3&gt;《SpringBoot + Mybatis + Thymeleaf 搭建美观实用的个人博客》(支付减免优惠券码 LSJdK3KT )&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;&lt;img src=&#34;https://newbee-mall.oss-cn-beijing.aliyuncs.com/poster/store/lesson-03.png&#34; alt=&#34;lesson-03&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;&lt;strong&gt;第01课：Spring Boot 搭建简洁实用的个人博客系统导读&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第02课：快速构建 Spring Boot 应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第03课：Spring Boot 项目开发之web项目开发讲解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第04课：Spring Boot 整合 Thymeleaf 模板引擎&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses&#34;&gt;第05课：Spring Boot 处理文件上传及路径回显&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第06课：Spring Boot 自动配置数据源及操作数据库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第07课：Spring Boot 整合 MyBatis 操作数据库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第08课：Mybatis-Generator 自动生成代码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第09课：Spring Boot 中的事务处理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第10课：Spring Boot 项目实践之 Ajax 技术使用教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第11课：Spring Boot 项目实践之 RESTful API 设计与实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第12课：Spring Boot 博客系统项目开发之分页功能实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第13课：Spring Boot 博客系统项目开发之验证码功能&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第14课：Spring Boot 博客系统项目开发之登录模块实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第15课：Spring Boot 博客系统项目开发之登陆拦截器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第16课：Spring Boot 博客系统项目开发之分类功能实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第17课：Spring Boot 博客系统项目开发之标签功能实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第18课：Spring Boot 博客系统项目开发之文章编辑功能&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第19课：Spring Boot 博客系统项目开发之文章编辑完善&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第20课：Spring Boot 博客系统项目开发之文章模块实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第21课：Spring Boot 博客系统项目开发之友链模块实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第22课：Spring Boot 博客系统项目开发之网站首页制作&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第23课：Spring Boot 博客系统项目开发之分页及侧边栏制作&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第24课：Spring Boot 博客系统项目开发之搜索页面制作&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第25课：Spring Boot 博客系统项目开发之文章详情页制作&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第26课：Spring Boot 博客系统项目开发之错误页面制作&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第27课：Spring Boot 博客系统项目开发之评论功能实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.shiyanlou.com/courses/1367&#34;&gt;第28课：Spring Boot 博客系统项目开发之项目打包部署&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;联系作者&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;大家有任何问题或者建议都可以在 &lt;a href=&#34;https://github.com/ZHENFENG13/My-Blog/issues&#34;&gt;issues&lt;/a&gt; 中反馈给我，我会慢慢完善这个项目。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;我的邮箱：&lt;a href=&#34;mailto:2449207463@qq.com&#34;&gt;2449207463@qq.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;QQ技术交流群：719099151 796794009 881582471&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;My-Blog 在 GitHub 和国内的码云都创建了代码仓库，如果有人访问 GitHub 比较慢的话，建议在 Gitee 上查看该项目，两个仓库会保持同步更新。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ZHENFENG13/My-Blog&#34;&gt;My-Blog in GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/zhenfeng13/My-Blog&#34;&gt;My-Blog in Gitee&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;效果预览&lt;/h2&gt; &#xA;&lt;h3&gt;后台管理页面&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;登录页&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/login.png&#34; alt=&#34;login&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;后台首页&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/dashboard.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;文章管理&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/blog-list.png&#34; alt=&#34;blog-list&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;文章编辑&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/edit.png&#34; alt=&#34;edit&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;评论管理&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/comment-list.png&#34; alt=&#34;comment-list&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;系统配置&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/config.png&#34; alt=&#34;config&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;博客展示页面&lt;/h3&gt; &#xA;&lt;p&gt;开发时，在项目中&lt;strong&gt;内置了三套博客主题模板，主题风格各有千秋&lt;/strong&gt;，效果如下：&lt;/p&gt; &#xA;&lt;h4&gt;模板一&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;首页&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/index01.png&#34; alt=&#34;index01&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;文章浏览&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/detail01.png&#34; alt=&#34;detail01&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;友情链接&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/link01.png&#34; alt=&#34;link01&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;模板二&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;首页&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/index02.png&#34; alt=&#34;index02&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;文章浏览&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/detail02.png&#34; alt=&#34;detail02&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;友情链接&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/link02.png&#34; alt=&#34;link02&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;模板三&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;首页&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/index03.png&#34; alt=&#34;index03&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;文章浏览&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/detail03.png&#34; alt=&#34;detail03&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;友情链接&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ZHENFENG13/My-Blog/master/static-files/link03.png&#34; alt=&#34;link03&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;感谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spring-projects/spring-boot&#34;&gt;spring-projects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ColorlibHQ/AdminLTE&#34;&gt;ColorlibHQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tonytomov/jqGrid&#34;&gt;tonytomov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pandao/editor.md&#34;&gt;pandao&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DONGChuan/Yummy-Jekyll&#34;&gt;DONGChuan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zjhch123/solo-skin-amaze&#34;&gt;zjhch123&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/t4t5/sweetalert&#34;&gt;t4t5&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>emanuele-f/PCAPdroid</title>
    <updated>2023-04-18T01:38:36Z</updated>
    <id>tag:github.com,2023-04-18:/emanuele-f/PCAPdroid</id>
    <link href="https://github.com/emanuele-f/PCAPdroid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;No-root network monitor, firewall and PCAP dumper for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PCAPdroid&lt;/h1&gt; &#xA;&lt;p&gt;PCAPdroid is a privacy-friendly open source app which lets you track, analyze and block the connections made by the other apps in your device. It also allows you to export a PCAP dump of the traffic, inspect HTTP, decrypt TLS traffic and much more!&lt;/p&gt; &#xA;&lt;p&gt;PCAPdroid simulates a VPN in order to capture the network traffic without root. It does not use a remote VPN server, instead data is processed locally on the device.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/emanuele-f/PCAPdroid/master/fastlane/metadata/android/en-US/images/phoneScreenshots/1.jpg&#34; width=&#34;190&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/emanuele-f/PCAPdroid/master/fastlane/metadata/android/en-US/images/phoneScreenshots/2.jpg&#34; width=&#34;190&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Log and examine the connections made by user and system apps&lt;/li&gt; &#xA; &lt;li&gt;Extract the SNI, DNS query, HTTP URL and the remote IP address&lt;/li&gt; &#xA; &lt;li&gt;Inspect HTTP requests and replies thanks to the built-in decoders&lt;/li&gt; &#xA; &lt;li&gt;Inspect the full connections payload as hexdump/text&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emanuele-f.github.io/PCAPdroid/tls_decryption&#34;&gt;Decrypt the HTTPS/TLS traffic&lt;/a&gt; and export the SSLKEYLOGFILE&lt;/li&gt; &#xA; &lt;li&gt;Dump the traffic to a PCAP file, download it from a browser, or stream it to a remote receiver for real-time analysis (e.g. Wireshark)&lt;/li&gt; &#xA; &lt;li&gt;Create rules to filter out the good traffic and easily spot anomalies&lt;/li&gt; &#xA; &lt;li&gt;Identify the country and ASN of remote server via offline DB lookups&lt;/li&gt; &#xA; &lt;li&gt;On rooted devices, capture the traffic while other VPN apps are running&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Paid features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emanuele-f.github.io/PCAPdroid/paid_features#51-firewall&#34;&gt;Firewall&lt;/a&gt;: create rules to block individual apps, domains and IP addresses&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emanuele-f.github.io/PCAPdroid/paid_features#52-malware-detection&#34;&gt;Malware detection&lt;/a&gt;: detect malicious connections by using third-party blacklists&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you plan to use PCAPdroid to perform packet analysis, please check out &lt;a href=&#34;https://emanuele-f.github.io/PCAPdroid/quick_start#14-packet-analysis&#34;&gt;the specific section&lt;/a&gt; of the manual.&lt;/p&gt; &#xA;&lt;a href=&#34;https://f-droid.org/packages/com.emanuelef.remote_capture&#34;&gt; &lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.emanuelef.remote_capture&#34;&gt;&lt;img height=&#34;80&#34; alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34;&gt;&lt;/a&gt; &#xA;&lt;p&gt;You can test the latest features before the official release by adding the &lt;a href=&#34;https://pcapdroid.org/fdroid/repo/&#34;&gt;Beta repository&lt;/a&gt; to the F-Droid app.&lt;/p&gt; &#xA;&lt;h2&gt;User Guide&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://emanuele-f.github.io/PCAPdroid/quick_start&#34;&gt;quick start instructions&lt;/a&gt; or the full &lt;a href=&#34;https://emanuele-f.github.io/PCAPdroid&#34;&gt;User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;The PCAPdroid project is sponsored by &lt;a href=&#34;https://aveq.info&#34;&gt;AVEQ GmbH&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to sponsor this project &lt;a href=&#34;mailto:black.silver@hotmail.it?subject=PCAPdroid%20sponsorship&#34;&gt;drop me an email&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;You can help the PCAPdroid project in many ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emanuele-f.github.io/PCAPdroid/donate&#34;&gt;Make a donation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Translate the app on &lt;a href=&#34;https://hosted.weblate.org/engage/pcapdroid/&#34;&gt;Weblate&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/engage/pcapdroid/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/pcapdroid/-/app/multi-auto.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Improve the app theme and layout&lt;/li&gt; &#xA; &lt;li&gt;Star the project on Github and on &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.emanuelef.remote_capture&#34;&gt;Google Play&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Of course provide code pull requests!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Join the international PCAPdroid community &lt;a href=&#34;https://t.me/PCAPdroid&#34;&gt;on Telegram&lt;/a&gt; or &lt;a href=&#34;https://matrix.to/#/#pcapdroid:matrix.org&#34;&gt;on Matrix&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Integrating into your APP&lt;/h2&gt; &#xA;&lt;p&gt;Some features of PCAPdroid can be integrated into a third-party app to provide packet capture capabilities.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For rooted devices, the &lt;a href=&#34;https://github.com/emanuele-f/PCAPdroid/tree/master/app/src/main/jni/pcapd&#34;&gt;pcapd daemon&lt;/a&gt; can be directly integrated into your APK to capture network packets.&lt;/li&gt; &#xA; &lt;li&gt;For all the devices, PCAPdroid &lt;a href=&#34;https://github.com/emanuele-f/PCAPdroid/raw/master/docs/app_api.md&#34;&gt;exposes an API&lt;/a&gt; to control the packet capture and send the captured packets via UDP to your app. This requires to install PCAPdroid along with your app.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Third Party&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/emanuele-f/zdtun&#34;&gt;zdtun&lt;/a&gt;: TCP/UDP/ICMP connections proxy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ntop/nDPI&#34;&gt;nDPI&lt;/a&gt;: deep packet inspection library, used to extract the connections metadata&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mitmproxy/mitmproxy&#34;&gt;mitmproxy&lt;/a&gt;: a local proxy used to perform TLS decryption&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For the complete list of third party libraries and the corresponding licenses check out the &#34;About&#34; page in the app.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;On Windows, install &lt;a href=&#34;https://gitforwindows.org&#34;&gt;gitforwindows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Clone this repo&lt;/li&gt; &#xA; &lt;li&gt;Inside the repo dir, run &lt;code&gt;git submodule update --init&lt;/code&gt;. The &lt;code&gt;submodules&lt;/code&gt; directory should get populated.&lt;/li&gt; &#xA; &lt;li&gt;Open the project in Android Studio, install the appropriate SDK and the NDK&lt;/li&gt; &#xA; &lt;li&gt;Build the app&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: If you get &#34;No valid CMake executable was found&#34;, be sure to install the CMake version used by PCAPdroid (currently &lt;a href=&#34;https://github.com/emanuele-f/PCAPdroid/raw/master/app/build.gradle&#34;&gt;3.22.1&lt;/a&gt;) from the SDK manager&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>creekrouter/creekrouter_for_android</title>
    <updated>2023-04-18T01:38:36Z</updated>
    <id>tag:github.com,2023-04-18:/creekrouter/creekrouter_for_android</id>
    <link href="https://github.com/creekrouter/creekrouter_for_android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;creekrouter_for_android&lt;/h1&gt; &#xA;&lt;h1&gt;一、简介&lt;/h1&gt; &#xA;&lt;p&gt;用于解决Android组件化、插件化问题。一套方案应对组件化、插件化两种场景。&lt;br&gt; 该代码仓库中，SourceCode分支为框架源码。&lt;br&gt; 组件化代码示例：切换本仓库分支为Demo分支。&lt;br&gt; 插件化代码示例：&lt;a href=&#34;https://github.com/creekrouter/demo_for_creek_router&#34;&gt;CreekRouter插件化代码&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;二、基本配置&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;配置文件。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;项目根目录下添加一个配置文件，文件名为：CreekRouter.xml&#xA;内容如下：&#xA;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&amp;gt;&#xA;&amp;lt;!--    根节点至少包含一个AppModule属性,属性值为项目的Application Module名称--&amp;gt;&#xA;&amp;lt;!--    group为分组，可以不写。--&amp;gt;&#xA;&amp;lt;!--    Log标签、Module标签 选填--&amp;gt;&#xA;&amp;lt;Router AppModule=&#34;app&#34; group=&#34;main&#34;&amp;gt;&#xA;    &amp;lt;Log dir=&#34;./app/build&#34; /&amp;gt;&#xA;    &amp;lt;Module name=&#34;app&#34; aliasName=&#34;app_module&#34; /&amp;gt;&#xA;&amp;lt;/Router&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;gradle配置。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;maven地址配置：&#xA;   maven {&#xA;       url &#39;https://creekrouter.com/maven&#39;&#xA;   }&#xA;&#xA;gradle依赖配置：&#xA;   implementation &#39;com.creek.router:creekrouter:1.3.0&#39;&#xA;   annotationProcessor &#39;com.creek.router:creekrouter:1.3.0&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;三、组件化基本使用&lt;/h1&gt; &#xA;&lt;p&gt;假设A.class和B.class位于不同的Module当中。&lt;br&gt; 其中，A.class&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import android.content.Context;&#xA;import android.content.Intent;&#xA;import com.creek.router.annotation.CreekMethod;&#xA;&#xA;public class A {&#xA;    @CreekMethod(path = &#34;start_activity&#34;)&#xA;    public boolean startActivity(Context context, String param) {&#xA;        if (context == null || param == null || param.length() == 0) {&#xA;            return false;&#xA;        }&#xA;        Intent intent = new Intent(context, MainActivity.class);&#xA;        intent.putExtra(&#34;param&#34;, param);&#xA;        context.startActivity(intent);&#xA;        return true;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;B.class中test()方法调用A.class的startActivity方法：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import android.content.Context;&#xA;import com.creek.router.CreekRouter;&#xA;&#xA;public class B {&#xA;    public boolean test(Context context, String param) {&#xA;        boolean result = CreekRouter.methodRun(&#34;start_activity&#34;, &#34;hello world!&#34;);&#xA;        return result;&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;也可以这样调用：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;&#xA;public interface TestInterface {&#xA;    @CreekMethod(path = &#34;start_activity&#34;)&#xA;    boolean launch(Context context, String param);&#xA;}&#xA;&#xA;public class B {&#xA;    public boolean test(Context context, String param) {&#xA;        TestInterface test = CreekRouter.create(TestInterface.class);&#xA;        return test.launch(context, param);&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;四、插件化&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://creekrouter.com/files/plugin.mp4&#34;&gt;插件化演示视频:2MB Apk加载20MB插件apk，插件apk也可独立运行&lt;/a&gt;&lt;br&gt; 插件化代码示例：&lt;a href=&#34;https://github.com/creekrouter/demo_for_creek_router&#34;&gt;插件化基础包代码&lt;/a&gt;、&lt;a href=&#34;https://github.com/creekrouter/CreekEmail&#34;&gt;插件化包代码&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>