<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-03T01:36:10Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>twitter/GraphJet</title>
    <updated>2023-04-03T01:36:10Z</updated>
    <id>tag:github.com,2023-04-03:/twitter/GraphJet</id>
    <link href="https://github.com/twitter/GraphJet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GraphJet is a real-time graph processing library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GraphJet&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/twitter/GraphJet&#34;&gt;&lt;img src=&#34;https://travis-ci.org/twitter/GraphJet.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GraphJet is a real-time graph processing library written in Java that maintains a full graph index over a sliding time window in memory on a single server. This index supports a variety of graph algorithms including personalized recommendation algorithms based on collaborative filtering. These algorithms power a variety of real-time recommendation services within Twitter, notably content (tweets/URLs) recommendations that require collaborative filtering over a heterogeneous, rapidly evolving graph.&lt;/p&gt; &#xA;&lt;p&gt;GraphJet is able to support rapid ingestion of edges in an evolving graph while concurrently serving lookup queries through a combination of compact edge encoding and a dynamic memory allocation scheme. Each GraphJet server can ingest up to one million graph edges per second, and in steady state, computes up to 500 recommendations per second, which translates into several million edge read operations per second. More information about the internals of GraphJet can be found in the &lt;a href=&#34;http://www.vldb.org/pvldb/vol9/p1281-sharma.pdf&#34;&gt;VLDB&#39;16 paper&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Quick Start and Example&lt;/h1&gt; &#xA;&lt;p&gt;After cloning the repo, build as follows (for the impatient, use option &lt;code&gt;-DskipTests&lt;/code&gt; to skip tests):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn package install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;GraphJet includes a demo that reads from the Twitter public sample stream using the &lt;a href=&#34;http://twitter4j.org/en/&#34;&gt;Twitter4j library&lt;/a&gt; and maintains two separate in-memory bipartite graphs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A bipartite graph of user-tweet interactions. The left-hand side vertices represent users, the right-hand side vertices represent tweets, and the edges represent tweet posts and retweets.&lt;/li&gt; &#xA; &lt;li&gt;A bipartite graph of tweet-hashtag contents. The left-hand side vertices represent tweets, the right-hand side vertices represent hashtags, and the edges represent content association (e.g., a tweet contains a hashtag).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run the demo, create a file called &lt;code&gt;twitter4j.properties&lt;/code&gt; in the GraphJet base directory with your Twitter credentials (replace &lt;code&gt;xxxx&lt;/code&gt; with actual credentials):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;oauth.consumerKey=xxxx&#xA;oauth.consumerSecret=xxxx&#xA;oauth.accessToken=xxxx&#xA;oauth.accessTokenSecret=xxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For obtaining the credentials, see &lt;a href=&#34;https://dev.twitter.com/oauth/overview/application-owner-access-tokens&#34;&gt;documentation on obtaining Twitter OAuth tokens&lt;/a&gt;. The public sample stream is available to registered users, see &lt;a href=&#34;https://dev.twitter.com/streaming/overview&#34;&gt;documentation about Twitter streaming APIs&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve built GraphJet, start the demo as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn exec:java -pl graphjet-demo -Dexec.mainClass=com.twitter.graphjet.demo.TwitterStreamReader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the demo starts up, it begins ingesting the Twitter public sample stream. The program will print out a sequence of status messages indicating the internal state of the user-tweet graph and the tweet-hashtag graph.&lt;/p&gt; &#xA;&lt;p&gt;You can interact with the graph via a REST API, running on port 8888 by default; use &lt;code&gt; -Dexec.args=&#34;-port xxxx&#34;&lt;/code&gt; to specify a different port.&lt;/p&gt; &#xA;&lt;p&gt;The following calls are available to query the state of the in-memory bipartite graph of user-tweet interactions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;userTweetGraph/topTweets&lt;/code&gt;: queries for the top tweets in terms of interactions (retweets). Use parameter &lt;code&gt;k&lt;/code&gt; to specify number of results to return (default ten). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/userTweetGraph/topTweets?k=5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;userTweetGraph/topUsers&lt;/code&gt;: queries for the top users in terms of interactions (retweets). Use parameter &lt;code&gt;k&lt;/code&gt; to specify number of results to return (default ten). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/userTweetGraph/topUsers?k=5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;userTweetGraphEdges/tweets&lt;/code&gt;: queries for the edges incident to a particular tweet in the user-tweet graph, i.e., users who have interacted with the tweet. Use parameter &lt;code&gt;id&lt;/code&gt; to specify tweetId (e.g., from &lt;code&gt;userTweetGraph/topTweets&lt;/code&gt; above). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/userTweetGraphEdges/tweets?id=xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;userTweetGraphEdges/users&lt;/code&gt;: queries for the edges incident to a particular user in the user-tweet graph, i.e., tweets the user interacted with. Use parameter &lt;code&gt;id&lt;/code&gt; to specify userId (e.g., from &lt;code&gt;userTweetGraph/topUsers&lt;/code&gt; above). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/userTweetGraphEdges/users?id=xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following calls are available to query the state of the in-memory bipartite graph of tweet-hashtag contents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tweetHashtagGraph/topTweets&lt;/code&gt;: queries for the top tweets in terms of hashtags. Use parameter &lt;code&gt;k&lt;/code&gt; to specify number of results to return (default ten). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/tweetHashtagGraph/topTweets?k=5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tweetHashtagGraph/topHashtags&lt;/code&gt;: queries for the top hashtags in terms of tweets. Use parameter &lt;code&gt;k&lt;/code&gt; to specify number of results to return (default ten). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/tweetHashtagGraph/topHashtags?k=5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tweetHashtagGraphEdges/tweets&lt;/code&gt;: queries for the edges incident to a particular tweet in the tweet-hashtag graph, i.e., hashtags contained in the tweet. Use parameter &lt;code&gt;id&lt;/code&gt; to specify tweetId (e.g., from &lt;code&gt;tweetHashtagGraph/topTweets&lt;/code&gt; above). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/tweetHashtagGraphEdges/tweets?id=xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;tweetHashtagGraphEdges/hashtags&lt;/code&gt;: queries for the edges incident to a particular hashtag in the tweet-hashtag graph, i.e., tweets the given hashtag is contained in. Use parameter &lt;code&gt;id&lt;/code&gt; to specify hashtagId (e.g., from &lt;code&gt;tweetHashtagGraph/topHashtags&lt;/code&gt; above). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/tweetHashtagGraphEdges/hashtags?id=xxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The demo program illustrates collaborative filtering via similarity queries on the tweet-hashtag graph. Note that the demo does not offer personalized recommendation algorithms on the user-tweet graph (as is deployed inside Twitter) because the public sample stream API is too sparse in terms of interactions to give good results. The following endpoint for similarity queries offers related hashtags given an input hashtag:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;similarHashtags&lt;/code&gt;: computes similar hashtag to the input hashtag based on real time data. Use parameter &lt;code&gt;hashtag&lt;/code&gt; to specify hashtag (e.g., from &lt;code&gt;tweetHashtagGraph/topHashtags&lt;/code&gt; above). Sample invocation:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl http://localhost:8888/similarHashtags?hashtag=trump&amp;amp;k=10&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2016 Twitter, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Moulberry/NotEnoughUpdates</title>
    <updated>2023-04-03T01:36:10Z</updated>
    <id>tag:github.com,2023-04-03:/Moulberry/NotEnoughUpdates</id>
    <link href="https://github.com/Moulberry/NotEnoughUpdates" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;NotEnoughUpdates&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;!-- release --&gt; &#xA; &lt;a href=&#34;https://github.com/Moulberry/NotEnoughUpdates/releases/latest&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/Moulberry/NotEnoughUpdates-REPO?color=informational&amp;amp;include_prereleases&amp;amp;label=release&amp;amp;logo=github&amp;amp;logoColor=white&#34; alt=&#34;release&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- lines --&gt; &#xA; &lt;a href=&#34;https://github.com/NotEnoughUpdates/NotEnoughUpdates/graphs/code-frequency&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/tokei/lines/github/NotEnoughUpdates/NotEnoughUpdates?label=lines&amp;amp;color=informational&amp;amp;logo=GitHub&#34; alt=&#34;lines&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- license --&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/Moulberry/NotEnoughUpdates/master/COPYING.LESSER&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/NotEnoughUpdates/NotEnoughUpdates?color=informational&#34; alt=&#34;license&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- contributors --&gt; &#xA; &lt;a href=&#34;https://github.com/NotEnoughUpdates/NotEnoughUpdates/graphs/contributors&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/NotEnoughUpdates/NotEnoughUpdates?color=informational&amp;amp;logo=GitHub&#34; alt=&#34;contributors&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- discord --&gt; &#xA; &lt;a href=&#34;https://discord.gg/moulberry&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/discord/516977525906341928?label=discord&amp;amp;color=informational&amp;amp;logo=Discord&amp;amp;logoColor=FFFFFF&#34; alt=&#34;discord&#34;&gt; &lt;/a&gt; &#xA; &lt;!-- downloads --&gt; &#xA; &lt;a href=&#34;https://github.com/Moulberry/NotEnoughUpdates/releases&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Moulberry/NotEnoughUpdates/total?label=downloads&amp;amp;color=informational&amp;amp;logo=GitHub&#34; alt=&#34;downloads&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;NotEnoughUpdates (NEU) is a feature rich 1.8.9 Minecraft forge mod for Hypixel Skyblock.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h4&gt;Installing Forge&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run normal Minecraft 1.8.9 and once it reaches the title screen wait about 5 seconds and close it.&lt;/li&gt; &#xA; &lt;li&gt;Install Minecraft &lt;strong&gt;1.8.9&lt;/strong&gt; forge from the &lt;a href=&#34;http://files.minecraftforge.net/maven/net/minecraftforge/forge/index_1.8.9.html&#34;&gt;forge website&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Once you click on the installer you&#39;d like to download, a window will pop up. &lt;strong&gt;Do not click on anything in the middle of your screen&lt;/strong&gt;; instead, click on the &lt;code&gt;skip ad&lt;/code&gt; button towards the top right&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the installer, select install client, and click install&lt;/li&gt; &#xA; &lt;li&gt;When forge is installed, open the Minecraft launcher, go under the &lt;code&gt;installations tab&lt;/code&gt;, click &lt;code&gt;new installation&lt;/code&gt;, select the version release &lt;code&gt;1.8.9-forge1.8.9-11.15.1.xxxx&lt;/code&gt; (it will usually be all the way towards the bottom).&lt;/li&gt; &#xA; &lt;li&gt;Once you are done, run this new installation that you just created. Once it reaches the title screen, wait about 5 seconds and close it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Installing the NotEnoughUpdates mod&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest mod &lt;a href=&#34;https://github.com/NotEnoughUpdates/NotEnoughUpdates-REPO/releases&#34;&gt;release&lt;/a&gt;. If it says &lt;code&gt;this file may harm your computer&lt;/code&gt;, click &lt;code&gt;allow anyways&lt;/code&gt; as all java files will be flagged by Chrome.&lt;/li&gt; &#xA; &lt;li&gt;Add the NEU mod: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you have java installed, double click the file, click &lt;code&gt;install&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;If not, press the windows key + R; type &lt;code&gt;%appdata%&lt;/code&gt;; click on the folder called &lt;code&gt;.minecraft&lt;/code&gt;; click on the folder called &lt;code&gt;mods&lt;/code&gt; and drag the mods file in here.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the Minecraft launcher and run your forge installation you set up earlier.&lt;/li&gt; &#xA; &lt;li&gt;Then, hop onto Skyblock and run the command &lt;code&gt;/api new&lt;/code&gt;. Your api key is automatically filled out and all features should work.&lt;/li&gt; &#xA; &lt;li&gt;Type &lt;code&gt;/neu&lt;/code&gt;. If you see the NotEnoughUpdates menu, you have done this correctly!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An &lt;a href=&#34;https://github.com/NotEnoughUpdates/NotEnoughUpdates-REPO&#34;&gt;item list&lt;/a&gt; containing information and recipes about every item in skyblock.&lt;/li&gt; &#xA; &lt;li&gt;A dungeons minimap.&lt;/li&gt; &#xA; &lt;li&gt;Dungeon loot profit checker.&lt;/li&gt; &#xA; &lt;li&gt;Item overlays for Treecapitator, Builder&#39;s Wand, Block Zapper, and Bonemerang.&lt;/li&gt; &#xA; &lt;li&gt;An in-game skyblock profile viewer accessed with &lt;code&gt;/pv [player]&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Fully customizable enchant colors accessed with &lt;code&gt;/neuec [player]&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Fairy soul waypoints accessed with &lt;code&gt;/neusouls&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Customizable inventory command buttons accessed with &lt;code&gt;/neubuttons&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The ability to change the line color of fishing rods.&lt;/li&gt; &#xA; &lt;li&gt;Onscreen overlays for: Farming, Dwarven Mines, Pets, and the Accessory bag.&lt;/li&gt; &#xA; &lt;li&gt;A custom auction house accessed with &lt;code&gt;/neuah&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Solvers for: Enchanting and The Puzzler.&lt;/li&gt; &#xA; &lt;li&gt;A custom Action House Search GUI.&lt;/li&gt; &#xA; &lt;li&gt;A custom storage GUI.&lt;/li&gt; &#xA; &lt;li&gt;A custom enchanting table GUI.&lt;/li&gt; &#xA; &lt;li&gt;Slot Locking&lt;/li&gt; &#xA; &lt;li&gt;Fishing Particle customization &amp;amp; alerts.&lt;/li&gt; &#xA; &lt;li&gt;And &lt;a href=&#34;https://gist.github.com/jani270/d33e249d40b0333b87ba5c5e70fca398&#34;&gt;much, much, more.&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you need assistance installing or using the mod, feel free to join the &lt;a href=&#34;https://discord.gg/moulberry&#34;&gt;discord&lt;/a&gt; and ask for help in &lt;a href=&#34;discord://discord.com/channels/516977525906341928/714332750156660756&#34;&gt;#neu-support&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to contribute to the project, look at our &lt;a href=&#34;https://raw.githubusercontent.com/Moulberry/NotEnoughUpdates/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt; for more information how to install NEU for development purposes.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you have found a vulnerability, please follow our &lt;a href=&#34;https://raw.githubusercontent.com/Moulberry/NotEnoughUpdates/master/.github/SECURITY.md&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under LGPL-3.0-or-later, see &lt;a href=&#34;https://raw.githubusercontent.com/Moulberry/NotEnoughUpdates/master/COPYING&#34;&gt;COPYING&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/Moulberry/NotEnoughUpdates/master/COPYING.LESSER&#34;&gt;COPYING.LESSER&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>twitter/sbf</title>
    <updated>2023-04-03T01:36:10Z</updated>
    <id>tag:github.com,2023-04-03:/twitter/sbf</id>
    <link href="https://github.com/twitter/sbf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SBF (Sparse Binary Factorization)&lt;/h1&gt; &#xA;&lt;p&gt;SBF is a solution to the community discovery problem from undirected graphs that uses Metropolis-Hastings sampling (you don&#39;t need to know anything about that in order to use this package). The discovered communities can be overlapping or disjoint. The implementation runs faster than and scales to bigger graphs than any other community discovery packages we have tried - for example, it has been used to discover 500,000 communities from a graph with 100 Million nodes and 5 Billion edges in less than 2 hours using 16 threads.&lt;/p&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;After cloning the repo, build as follows (for the impatient, use option &lt;code&gt;-DskipTests&lt;/code&gt; to skip tests):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn package &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t have maven on your computer, you&#39;ll need to first install that.&lt;/p&gt; &#xA;&lt;p&gt;You can see two examples in the &lt;code&gt;examples&lt;/code&gt; folder. For example, unweighted8node.config has the config needed to run on the simple 8-node (unweighted) graph specified in unweighted8node.txt. You can run it as follows, assuming &lt;code&gt;mvn package&lt;/code&gt; succeeded.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd examples&#xA;$ java -jar ../target/sbf-1.0.0.jar unweighted8node.config&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the application finishes, you can see the output in unweighted8node.assignments.&lt;/p&gt; &#xA;&lt;p&gt;Similarly, you can also run it using &lt;code&gt;weighted8node.config&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;examples/runExamples.sh&lt;/code&gt; does all of this.&lt;/p&gt;</summary>
  </entry>
</feed>