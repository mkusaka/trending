<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-13T01:33:23Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>baomidou/mybatis-plus</title>
    <updated>2022-08-13T01:33:23Z</updated>
    <id>tag:github.com,2022-08-13:/baomidou/mybatis-plus</id>
    <link href="https://github.com/baomidou/mybatis-plus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An powerful enhanced toolkit of MyBatis for simplify development&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/baomidou/mybatis-plus&#34;&gt; &lt;img alt=&#34;Mybatis-Plus-Logo&#34; src=&#34;https://raw.githubusercontent.com/baomidou/logo/master/mybatis-plus-logo-new-mini.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Born To Simplify Development &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.baomidou%22%20AND%20a%3A%22mybatis-plus%22&#34;&gt; &lt;img alt=&#34;maven&#34; src=&#34;https://img.shields.io/maven-central/v/com.baomidou/mybatis-plus.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt; &lt;img alt=&#34;code style&#34; src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://gitter.im/baomidou/mybatis-plus?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt; &lt;img alt=&#34;Join the chat at https://gitter.im/baomidou/mybatis-plus&#34; src=&#34;https://badges.gitter.im/baomidou/mybatis-plus.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/baomidou/mybatis-mate-examples&#34;&gt;企业版 Mybatis-Mate 高级特性&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;添加 &lt;code&gt;微信 wx153666&lt;/code&gt; 备注进 mp 群&lt;/p&gt; &#xA;&lt;h1&gt;Special user&lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;https://www.diboot.com/?from=mp&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Mybatis-Plus-Logo&#34; src=&#34;https://www.diboot.com/diboot_slogon.png&#34; width=&#34;210px&#34; height=&#34;75px&#34;&gt; &lt;/a&gt; &lt;a href=&#34;http://aizuda.com/?from=mp&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;Mybatis-Plus-Logo&#34; src=&#34;https://baomidou.com/img/aizuda.png&#34; width=&#34;210px&#34; height=&#34;75px&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;What is MyBatis-Plus?&lt;/h2&gt; &#xA;&lt;p&gt;MyBatis-Plus is an powerful enhanced toolkit of MyBatis for simplify development. This toolkit provides some efficient, useful, out-of-the-box features for MyBatis, use it can effectively save your development time.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://baomidou.com&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/baomidou/generator&#34;&gt;Code Generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/baomidou/mybatis-plus-samples&#34;&gt;Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/baomidou/awesome-mybatis-plus&#34;&gt;Showcase&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/baomidou/mybatis-mate-examples&#34;&gt;企业版 Mybatis-Mate 高级特性&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully compatible with MyBatis&lt;/li&gt; &#xA; &lt;li&gt;Auto configuration on startup&lt;/li&gt; &#xA; &lt;li&gt;Out-of-the-box interfaces for operate database&lt;/li&gt; &#xA; &lt;li&gt;Powerful and flexible where condition wrapper&lt;/li&gt; &#xA; &lt;li&gt;Multiple strategy to generate primary key&lt;/li&gt; &#xA; &lt;li&gt;Lambda-style API&lt;/li&gt; &#xA; &lt;li&gt;Almighty and highly customizable code generator&lt;/li&gt; &#xA; &lt;li&gt;Automatic paging operation&lt;/li&gt; &#xA; &lt;li&gt;SQL Inject defense&lt;/li&gt; &#xA; &lt;li&gt;Support active record&lt;/li&gt; &#xA; &lt;li&gt;Support pluggable custom interface&lt;/li&gt; &#xA; &lt;li&gt;Build-in many useful extensions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Add MyBatis-Plus dependency&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Latest Version: &lt;a href=&#34;https://search.maven.org/search?q=g:com.baomidou%20a:mybatis-*&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.baomidou/mybatis-plus.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Maven: &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.baomidou&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;mybatis-plus-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;Latest Version&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Gradle &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;compile group: &#39;com.baomidou&#39;, name: &#39;mybatis-plus-boot-starter&#39;, version: &#39;Latest Version&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify mapper file extends BaseMapper interface&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public interface UserMapper extends BaseMapper&amp;lt;User&amp;gt; {&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use it&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;List&amp;lt;User&amp;gt; userList = userMapper.selectList(&#xA;        new QueryWrapper&amp;lt;User&amp;gt;()&#xA;                .lambda()&#xA;                .ge(User::getAge, 18)&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;MyBatis-Plus will execute the following SQL&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM user WHERE age &amp;gt;= 18&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This showcase is just a small part of MyBatis-Plus features. If you want to learn more, please refer to the &lt;a href=&#34;https://baomidou.com&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MyBatis-Plus is under the Apache 2.0 license. See the &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License 2.0&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>crossoverJie/JCSprout</title>
    <updated>2022-08-13T01:33:23Z</updated>
    <id>tag:github.com,2022-08-13:/crossoverJie/JCSprout</id>
    <link href="https://github.com/crossoverJie/JCSprout" rel="alternate"></link>
    <summary type="html">&lt;p&gt;👨‍🎓 Java Core Sprout : basic, concurrent, algorithm&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://ws1.sinaimg.cn/large/0069RVTdly1fubocn5pxaj30go082dg1.jpg&#34; width=&#34;&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://travis-ci.org/crossoverJie/JCSprout&#34;&gt;&lt;img src=&#34;https://travis-ci.org/crossoverJie/JCSprout.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5HPYvQk&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QQ%E7%BE%A4-787381170-yellowgreen.svg?sanitize=true&#34; alt=&#34;QQ群&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt;&#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;Java Core Sprout&lt;/code&gt;：处于萌芽阶段的 Java 核心知识库。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;访问这里获取更好的阅读体验&lt;/strong&gt;：&lt;a href=&#34;https://crossoverjie.top/JCSprout/&#34;&gt;https://crossoverjie.top/JCSprout/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;📊&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;⚔️&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;🖥&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;🚏&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;🏖&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;🌁&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;📮&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;🔍&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;🚀&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;🌈&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;💡&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#%E5%B8%B8%E7%94%A8%E9%9B%86%E5%90%88&#34;&gt;集合&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#java-%E5%A4%9A%E7%BA%BF%E7%A8%8B&#34;&gt;多线程&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#jvm&#34;&gt;JVM&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#%E5%88%86%E5%B8%83%E5%BC%8F%E7%9B%B8%E5%85%B3&#34;&gt;分布式&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#%E5%B8%B8%E7%94%A8%E6%A1%86%E6%9E%B6%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BB%84%E4%BB%B6&#34;&gt;框架&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1&#34;&gt;架构设计&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#db-%E7%9B%B8%E5%85%B3&#34;&gt;数据库&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95&#34;&gt;算法&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#netty-%E7%9B%B8%E5%85%B3&#34;&gt;Netty&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#%E9%99%84%E5%8A%A0%E6%8A%80%E8%83%BD&#34;&gt;附加技能&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/#%E8%81%94%E7%B3%BB%E4%BD%9C%E8%80%85&#34;&gt;联系作者&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;常用集合&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/ArrayList.md&#34;&gt;ArrayList/Vector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/LinkedList.md&#34;&gt;LinkedList&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/HashMap.md&#34;&gt;HashMap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/collection/HashSet.md&#34;&gt;HashSet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/collection/LinkedHashMap.md&#34;&gt;LinkedHashMap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Java 多线程&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/Thread-common-problem.md&#34;&gt;多线程中的常见问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/Synchronize.md&#34;&gt;synchronized 关键字原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/Threadcore.md&#34;&gt;多线程的三大核心&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/Java-lock.md&#34;&gt;对锁的一些认知&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/ReentrantLock.md&#34;&gt;ReentrantLock 实现原理 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/ConcurrentHashMap.md&#34;&gt;ConcurrentHashMap 的实现原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/ThreadPoolExecutor.md&#34;&gt;如何优雅的使用和理解线程池&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/concurrent/thread-communication.md&#34;&gt;深入理解线程通信&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/docs/thread/thread-gone.md&#34;&gt;一个线程罢工的诡异事件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/docs/thread/thread-gone2.md&#34;&gt;线程池中你不容错过的一些细节&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/docs/thread/ArrayBlockingQueue.md&#34;&gt;『并发包入坑指北』之阻塞队列&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;JVM&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/MemoryAllocation.md&#34;&gt;Java 运行时内存划分&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/ClassLoad.md&#34;&gt;类加载机制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/OOM-analysis.md&#34;&gt;OOM 分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/GarbageCollection.md&#34;&gt;垃圾回收&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/newObject.md&#34;&gt;对象的创建与内存分配&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/concurrent/volatile.md&#34;&gt;你应该知道的 volatile 关键字&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crossoverjie.top/2018/08/29/java-senior/OOM-Disruptor/&#34;&gt;一次内存溢出排查优化实战&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/docs/jvm/JVM-concurrent-HashSet-problem.md&#34;&gt;一次 HashSet 所引起的并发问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/docs/jvm/cpu-percent-100.md&#34;&gt;一次生产 CPU 100% 排查优化实践&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式相关&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://crossoverjie.top/2018/04/28/sbc/sbc7-Distributed-Limit/&#34;&gt;分布式限流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://crossoverjie.top/2018/03/29/distributed-lock/distributed-lock-redis/&#34;&gt;基于 Redis 的分布式锁&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/Cache-design.md&#34;&gt;分布式缓存设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/ID-generator.md&#34;&gt;分布式 ID 生成器&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;常用框架\第三方组件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/spring/spring-bean-lifecycle.md&#34;&gt;Spring Bean 生命周期&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/SpringAOP.md&#34;&gt;Spring AOP 的实现原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crossoverjie.top/2018/06/13/guava/guava-cache/&#34;&gt;Guava 源码分析（Cache 原理）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/cicada&#34;&gt;轻量级 HTTP 框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/kafka/kafka-product.md&#34;&gt;Kafka produce 源码分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/docs/frame/kafka-consumer.md&#34;&gt;Kafka 消费实践&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;架构设计&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/Spike.md&#34;&gt;秒杀系统设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://crossoverjie.top/2018/05/07/ssm/SSM18-seconds-kill/&#34;&gt;秒杀架构实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/architecture-design/million-sms-push.md&#34;&gt;设计一个百万级的消息推送系统&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;DB 相关&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/MySQL-Index.md&#34;&gt;MySQL 索引原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/SQL-optimization.md&#34;&gt;SQL 优化&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/DB-split.md&#34;&gt;数据库水平垂直拆分&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/docs/db/sharding-db.md&#34;&gt;一次分表踩坑实践的探讨&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;数据结构与算法&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/red/RedPacket.java&#34;&gt;红包算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/algorithm/BinaryNode.java#L76-L101&#34;&gt;二叉树层序遍历&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/algorithm/HappyNum.java#L38-L55&#34;&gt;是否为快乐数字&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/algorithm/LinkLoop.java#L32-L59&#34;&gt;链表是否有环&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/algorithm/TwoSum.java#L38-L59&#34;&gt;从一个数组中返回两个值相加等于目标值的下标&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/Consistent-Hash.md&#34;&gt;一致性 Hash 算法原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/docs/algorithm/consistent-hash-implement.md&#34;&gt;一致性 Hash 算法实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/Limiting.md&#34;&gt;限流算法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/algorithm/ReverseNode.java&#34;&gt;三种方式反向打印单向链表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/algorithm/MergeTwoSortedLists.java&#34;&gt;合并两个排好序的链表&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/algorithm/TwoStackQueue.java&#34;&gt;两个栈实现队列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://crossoverjie.top/2018/04/07/algorithm/LRU-cache/&#34;&gt;动手实现一个 LRU cache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/src/main/java/com/crossoverjie/algorithm/LinkedListMergeSort.java&#34;&gt;链表排序&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/crossoverJie/JCSprout/master/src/main/java/com/crossoverjie/algorithm/ArrayKShift.java&#34;&gt;数组右移 k 次&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/src/main/java/com/crossoverjie/actual/TwoThread.java&#34;&gt;交替打印奇偶数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/docs/algorithm/guava-bloom-filter.md&#34;&gt;亿级数据中判断数据是否不存在&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Netty 相关&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crossoverjie.top/2018/05/24/netty/Netty(1)TCP-Heartbeat/&#34;&gt;SpringBoot 整合长连接心跳机制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crossoverjie.top/2018/07/04/netty/Netty(2)Thread-model/&#34;&gt;从线程模型的角度看 Netty 为什么是高性能的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/cim&#34;&gt;为自己搭建一个分布式 IM(即时通讯) 系统&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;附加技能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/TCP-IP.md&#34;&gt;TCP/IP 协议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crossoverjie.top/2018/06/21/personal/Interview-experience/&#34;&gt;一个学渣的阿里之路&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://crossoverjie.top/2018/08/12/personal/how-to-be-developer/&#34;&gt;如何成为一位「不那么差」的程序员&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crossoverJie/JCSprout/raw/master/MD/additional-skills/how-to-use-git-efficiently.md&#34;&gt;如何高效的使用 Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;联系作者&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;crossoverJie#gmail.com&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2021/10/12/ckQW9LYXSxFogJZ.jpg&#34; alt=&#34;index.jpg&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LuckSiege/PictureSelector</title>
    <updated>2022-08-13T01:33:23Z</updated>
    <id>tag:github.com,2022-08-13:/LuckSiege/PictureSelector</id>
    <link href="https://github.com/LuckSiege/PictureSelector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Picture Selector Library for Android or 图片选择器&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PictureSelector 3.0&lt;/h1&gt; &#xA;&lt;p&gt;A PictureSelector for Android platform, which supports obtaining pictures, videos, audio &amp;amp; photos from photo albums, cutting (single picture or multi picture cutting), compression, theme custom configuration and other functions, and supports dynamic access &amp;amp; an open source picture selection framework suitable for Android 5.0 + system&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/README_CN.md&#34;&gt;简体中文🇨🇳&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/raw/version_component/app/demo/demo_2022-07-04_093704_v3.10.5.apk&#34;&gt;Download Demo Apk&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LuckSiege&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maven%20central-v3.10.5-yellow&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LuckSiege&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-Welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/LuckSiege/PictureSelector.svg?sanitize=true&#34; alt=&#34;Star&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;-&lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/releases/tag/v3.10.5&#34;&gt;Last version&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/#Download&#34;&gt;Download&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/#Usage&#34;&gt;Usage&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/#Permission&#34;&gt;Permission&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-LocalMedia%E8%AF%B4%E6%98%8E&#34;&gt;Result description&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/#Effect&#34;&gt;Effect&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/#ProGuard&#34;&gt;ProGuard&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF&#34;&gt;Common errors&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/%E5%A6%82%E4%BD%95%E6%8F%90Issues%3F&#34;&gt;Issues&lt;/a&gt;&lt;br&gt; -&lt;a href=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/#License&#34;&gt;License&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Use Gradle&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;repositories {&#xA;  google()&#xA;  mavenCentral()&#xA;}&#xA;&#xA;dependencies {&#xA;  // PictureSelector basic (Necessary)&#xA;  implementation &#39;io.github.lucksiege:pictureselector:v3.10.5&#39;&#xA;&#xA;  // image compress library (Not necessary)&#xA;  implementation &#39;io.github.lucksiege:compress:v3.10.4&#39;&#xA;&#xA;  // uCrop library (Not necessary)&#xA;  implementation &#39;io.github.lucksiege:ucrop:v3.10.4&#39;&#xA;&#xA;  // simple camerax library (Not necessary)&#xA;  implementation &#39;io.github.lucksiege:camerax:v3.10.4&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or Maven:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;io.github.lucksiege&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;pictureselector&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;v3.10.5&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&#xA;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;io.github.lucksiege&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;compress&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;v3.10.4&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&#xA;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;io.github.lucksiege&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;ucrop&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;v3.10.4&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&#xA;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;io.github.lucksiege&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;camerax&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;v3.10.4&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Permission&lt;/h2&gt; &#xA;&lt;p&gt;Permission describe，see &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E6%9D%83%E9%99%90%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;lt;uses-permission android:name=&#34;android.permission.READ_EXTERNAL_STORAGE&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.WRITE_EXTERNAL_STORAGE&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.WRITE_MEDIA_STORAGE&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.WRITE_SETTINGS&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.MODIFY_AUDIO_SETTINGS&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.MANAGE_EXTERNAL_STORAGE&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.FOREGROUND_SERVICE&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.RECORD_AUDIO&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.CAMERA&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.VIBRATE&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.BLUETOOTH&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Android 11 use camera，AndroidManifest.xm add the code：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&amp;lt;queries package=&#34;${applicationId}&#34;&amp;gt;&#xA;    &amp;lt;intent&amp;gt;&#xA;        &amp;lt;action android:name=&#34;android.media.action.IMAGE_CAPTURE&#34;&amp;gt;&#xA;&#xA;        &amp;lt;/action&amp;gt;&#xA;    &amp;lt;/intent&amp;gt;&#xA;    &amp;lt;intent&amp;gt;&#xA;        &amp;lt;action android:name=&#34;android.media.action.ACTION_VIDEO_CAPTURE&#34;&amp;gt;&#xA;&#xA;        &amp;lt;/action&amp;gt;&#xA;    &amp;lt;/intent&amp;gt;&#xA;&amp;lt;/queries&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ImageEngine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/raw/version_component/app/src/main/java/com/luck/pictureselector/GlideEngine.java&#34;&gt;GlideEngine&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/raw/version_component/app/src/main/java/com/luck/pictureselector/PicassoEngine.java&#34;&gt;PicassoEngine&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/raw/version_component/app/src/main/java/com/luck/pictureselector/CoilEngine.java&#34;&gt;CoilEngine&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For more features, see &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%8A%9F%E8%83%BDapi%E8%AF%B4%E6%98%8E&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A simple use case is shown below:&lt;/p&gt; &#xA;&lt;p&gt;1、Get picture&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;PictureSelector.create(this)&#xA;   .openGallery(SelectMimeType.ofImage())&#xA;   .setImageEngine(GlideEngine.createGlideEngine())&#xA;   .forResult(new OnResultCallbackListener&amp;lt;LocalMedia&amp;gt;() {&#xA;      @Override&#xA;      public void onResult(ArrayList&amp;lt;LocalMedia&amp;gt; result) {&#xA;&#xA;      }&#xA;&#xA;      @Override&#xA;      public void onCancel() {&#xA;&#xA;     }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using system albums&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;PictureSelector.create(this)&#xA;     .openSystemGallery(SelectMimeType.ofImage())&#xA;     .forResult(new OnResultCallbackListener&amp;lt;LocalMedia&amp;gt;() {&#xA;        @Override&#xA;        public void onResult(ArrayList&amp;lt;LocalMedia&amp;gt; result) {&#xA;&#xA;        }&#xA;&#xA;        @Override&#xA;        public void onCancel() {&#xA;&#xA;        }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2、Only use camera&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;PictureSelector.create(this)&#xA;     .openCamera(SelectMimeType.ofImage())&#xA;     .forResult(new OnResultCallbackListener&amp;lt;LocalMedia&amp;gt;() {&#xA;        @Override&#xA;        public void onResult(ArrayList&amp;lt;LocalMedia&amp;gt; result) {&#xA;&#xA;        }&#xA;&#xA;        @Override&#xA;        public void onCancel() {&#xA;&#xA;        }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To take photos separately in the Navigation Fragment scene, please use the following methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;PictureSelector.create(this)&#xA;     .openCamera(SelectMimeType.ofImage())&#xA;     .forResultActivity(new OnResultCallbackListener&amp;lt;LocalMedia&amp;gt;() {&#xA;        @Override&#xA;        public void onResult(ArrayList&amp;lt;LocalMedia&amp;gt; result) {&#xA;&#xA;        }&#xA;&#xA;        @Override&#xA;        public void onCancel() {&#xA;&#xA;        }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3、You can also use the following example：&lt;/p&gt; &#xA;&lt;p&gt;(1)、Inject into any view fragment&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;PictureSelector.create(this)&#xA;   .openGallery(SelectMimeType.ofAll())&#xA;   .setImageEngine(GlideEngine.createGlideEngine())&#xA;   .buildLaunch(R.id.fragment_container, new OnResultCallbackListener&amp;lt;LocalMedia&amp;gt;() {&#xA;      @Override&#xA;      public void onResult(ArrayList&amp;lt;LocalMedia&amp;gt; result) {&#xA;      &#xA;      }&#xA;&#xA;      @Override&#xA;      public void onCancel() {&#xA;      &#xA;      }&#xA;});&#xA;&#x9;&#x9;&#x9;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(2)、Custom Inject into any view fragment&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;PictureSelectorFragment selectorFragment = PictureSelector.create(this)&#xA;     .openGallery(SelectMimeType.ofAll())&#xA;     .setImageEngine(GlideEngine.createGlideEngine())&#xA;     .build();&#xA;     &#xA;getSupportFragmentManager().beginTransaction()&#xA;     .add(R.id.fragment_container, selectorFragment, selectorFragment.getFragmentTag())&#xA;     .addToBackStack(selectorFragment.getFragmentTag())&#xA;     .commitAllowingStateLoss();&#xA;&#x9;&#x9;&#x9;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4、Only query data source&lt;/p&gt; &#xA;&lt;p&gt;(1)、get album data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;PictureSelector.create(this)&#xA;    .dataSource(SelectMimeType.ofAll())&#xA;    .obtainAlbumData(new OnQueryDataSourceListener&amp;lt;LocalMediaFolder&amp;gt;() {&#xA;        @Override&#xA;        public void onComplete(List&amp;lt;LocalMediaFolder&amp;gt; result) {&#xA;&#xA;        }&#xA;   );&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(2)、get media data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;PictureSelector.create(this)&#xA;    .dataSource(SelectMimeType.ofAll())&#xA;    .obtainMediaData(new OnQueryDataSourceListener&amp;lt;LocalMedia&amp;gt;() {&#xA;        @Override&#xA;        public void onComplete(List&amp;lt;LocalMedia&amp;gt; result) {&#xA;&#xA;        }&#xA;   );&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(3)、IBridgeMediaLoader get data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;IBridgeMediaLoader loader = PictureSelector.create(this)&#xA;    .dataSource(SelectMimeType.ofImage()).buildMediaLoader();&#xA;    loader.loadAllAlbum(new OnQueryAllAlbumListener&amp;lt;LocalMediaFolder&amp;gt;() {&#xA;        @Override&#xA;        public void onComplete(List&amp;lt;LocalMediaFolder&amp;gt; result) {&#xA;&#xA;        }&#xA;  });&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;5、Preview image、video、audio&lt;/p&gt; &#xA;&lt;p&gt;If you preview the online video AndroidManifest XML add the following code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;android:usesCleartextTraffic=&#34;true&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;PictureSelector.create(this)&#xA;    .openPreview()&#xA;    .setImageEngine(GlideEngine.createGlideEngine())&#xA;    .setExternalPreviewEventListener(new OnExternalPreviewEventListener() {&#xA;       @Override&#xA;       public void onPreviewDelete(int position) {&#xA;&#xA;       }&#xA;&#xA;        @Override&#xA;       public boolean onLongPressDownload(LocalMedia media) {&#xA;           return false;&#xA;       }&#xA;    }).startActivityPreview(position, true, &#34;data&#34;);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set theme，see &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E4%B8%BB%E9%A2%98api%E8%AF%B4%E6%98%8E&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.setSelectorUIStyle();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or Overload layout，see &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E9%87%8D%E8%BD%BD%E5%B8%83%E5%B1%80%EF%BC%9F&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.setInjectLayoutResourceListener(new OnInjectLayoutResourceListener() {&#xA;   @Override&#xA;   public int getLayoutResourceId(Context context, int resourceSource) {&#xA;&#x9;return 0;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The advanced use cases are as follow：&lt;/p&gt; &#xA;&lt;p&gt;1、Use the custom camera,See &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%B8%E6%9C%BA%EF%BC%9F&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.setCameraInterceptListener(new OnCameraInterceptListener() {&#xA;    @Override&#xA;    public void openCamera(Fragment fragment, int cameraMode, int requestCode){&#xA;&#xA;    }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2、Use the image compress,See &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E5%8E%8B%E7%BC%A9%EF%BC%9F&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.setCompressEngine(new CompressFileEngine() {&#xA;   @Override&#xA;   public void onStartCompress(Context context, ArrayList&amp;lt;Uri&amp;gt; source, OnKeyValueResultCallbackListener call){&#xA;&#xA;   }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3、Use the image uCrop,See &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E8%A3%81%E5%89%AA%EF%BC%9F&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;&#xA;.setCropEngine(new CropFileEngine() {&#xA;   @Override&#xA;   public void onStartCrop(Fragment fragment, Uri srcUri, Uri destinationUri, ArrayList&amp;lt;String&amp;gt; dataSource, int requestCode) {&#xA;&#xA;   }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;4、Use the image edit,See &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E7%BC%96%E8%BE%91%E5%9B%BE%E7%89%87%EF%BC%9F&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.setEditMediaInterceptListener(new OnMediaEditInterceptListener() {&#xA;    @Override&#xA;    public void onStartMediaEdit(Fragment fragment, LocalMedia currentLocalMedia, int requestCode) {&#xA;&#xA;    }&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;5、Use the custom load data,See &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E5%8A%A0%E8%BD%BD%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E6%BA%90%EF%BC%9F&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.setExtendLoaderEngine(new ExtendLoaderEngine() {&#xA;    @Override&#xA;    public void loadAllAlbumData(Context context, OnQueryAllAlbumListener&amp;lt;LocalMediaFolder&amp;gt; query) {&#xA;                                    &#xA;    }&#xA;&#xA;    @Override&#xA;    public void loadOnlyInAppDirAllMediaData(Context context, OnQueryAlbumListener&amp;lt;LocalMediaFolder&amp;gt; query) {&#xA;&#xA;    }&#xA;&#xA;    @Override&#xA;    public void loadFirstPageMediaData(Context context, long bucketId, int page, int pageSize, OnQueryDataResultListener&amp;lt;LocalMedia&amp;gt; query) {&#xA;&#xA;    }&#xA;&#xA;    @Override&#xA;    public void loadMoreMediaData(Context context, long bucketId, int page, int limit, int pageSize, OnQueryDataResultListener&amp;lt;LocalMedia&amp;gt; query) {&#xA;&#xA;    }&#xA; });&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;6、Use the custom apply Permissions,See &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9D%83%E9%99%90%E7%94%B3%E8%AF%B7-%EF%BC%9F&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.setPermissionsInterceptListener(new OnPermissionsInterceptListener() {&#xA;      @Override&#xA;      public void requestPermission(Fragment fragment, String[] permissionArray, OnRequestPermissionListener call) {&#xA;&#xA;      }&#xA;&#xA;      @Override&#xA;      public boolean hasPermissions(Fragment fragment, String[] permissionArray) {&#xA;      return false;&#xA;  }&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;7、Android 10 and above, Sandbox mechanism, file processing，Permissions,See &lt;a href=&#34;https://github.com/LuckSiege/PictureSelector/wiki/PictureSelector-3.0-%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E6%B2%99%E7%9B%92%E5%A4%96%E8%B5%84%E6%BA%90%EF%BC%9F&#34;&gt;documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;.setSandboxFileEngine(new UriToFileTransformEngine() {&#xA;    @Override&#xA;    public void onUriToFileAsyncTransform(Context context, String srcPath, String mineType, OnKeyValueResultCallbackListener call) {&#xA;                                        &#xA;    }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ProGuard&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;-keep class com.luck.picture.lib.** { *; }&#xA;&#xA;// use Camerax&#xA;-keep class com.luck.lib.camerax.** { *; }&#xA;&#xA;// use uCrop&#xA;-dontwarn com.yalantis.ucrop**&#xA;-keep class com.yalantis.ucrop** { *; }&#xA;-keep interface com.yalantis.ucrop** { *; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;Copyright 2016 Luck&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Effect&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Function list&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/home.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Default Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Preview&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Multiple Crop&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_default_style_1.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_default_style_2.jpg&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_default_style_new_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Digital Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Preview&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Multiple Crop&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_num_style_new_1.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_num_style_new_2.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_num_style_new_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;White Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Preview&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Single Crop&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_sina_style_1.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_sina_style_new_2.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_sina_style_new_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;New Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Preview&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Multiple Crop&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_wechat_style_1.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_wechat_style_2.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_wechat_style_new_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Photo Album Directory&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Single Mode&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Circular Crop&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_wechat_album_style.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_wechat_single_style_3.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_circular_crop_new_style.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;White Style&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Video&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Audio&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_white_style.jpeg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_video.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LuckSiege/PictureSelector/version_component/image/picture_audio.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>