<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-13T01:33:56Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>obiscr/ChatGPT</title>
    <updated>2022-12-13T01:33:56Z</updated>
    <id>tag:github.com,2022-12-13:/obiscr/ChatGPT</id>
    <link href="https://github.com/obiscr/ChatGPT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This project is a plugin that supports ChatGPT running on JetBrains series IDE.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChatGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt; is a language model trained by OpenAI and can be used for a variety of tasks, including dialogue and text generation. ChatGPT is a neural network-based model that is trained on large amounts of human language data and is able to generate natural language text that is meaningful in a given context. The model can be used for many applications, such as natural language processing (NLP) and dialogue systems.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/obiscr/ChatGPT/raw/main/README_CN.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://github.com/obiscr/ChatGPT/raw/main/README.md&#34;&gt;English&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;About this project&lt;/h1&gt; &#xA;&lt;p&gt;This project is a plugin that supports ChatGPT running on JetBrains series IDE.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/28687074/206612065-230b936e-d32a-40c7-8c6c-0d6a4d9e8cd0.gif&#34; alt=&#34;Hello&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/28687074/206612043-52f6106d-8cdb-4944-a055-30e74a480eaf.gif&#34; alt=&#34;asm&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/28687074/206475742-124708fb-1cea-47cc-a299-08630ca4fe95.gif&#34; alt=&#34;img1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/28687074/206475807-45b82b9d-f879-40ed-a8fb-27e8abfd7667.png&#34; alt=&#34;img2&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/28687074/206475842-d2a6c9ea-76b5-4650-ae5a-39fc5e160205.png&#34; alt=&#34;img3&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Install using the IDE&#39;s built-in plugin system:&lt;/p&gt; &lt;p&gt;&lt;kbd&gt;Settings/Preferences&lt;/kbd&gt; &amp;gt; &lt;kbd&gt;Plugins&lt;/kbd&gt; &amp;gt; &lt;kbd&gt;Marketplace&lt;/kbd&gt; &amp;gt; &lt;kbd&gt;Search for &#34;ChatGPT&#34;&lt;/kbd&gt; &amp;gt; &lt;kbd&gt;Install Plugin&lt;/kbd&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;First, you need to register a &lt;a href=&#34;https://auth0.openai.com/u/signup/identifier?state=hKFo2SBOVnZMbDF4T1hLeFZIcTluZ1hKbmZOZENvVDgydHduRaFur3VuaXZlcnNhbC1sb2dpbqN0aWTZIER2ZVJvUzdhN2Q4MVBpUTdZelg0cGlBcnNyQm5oUG5zo2NpZNkgRFJpdnNubTJNdTQyVDNLT3BxZHR3QjNOWXZpSFl6d0Q&#34;&gt;OpenAI&lt;/a&gt; account, and then open this website: &lt;a href=&#34;https://chat.openai.com/api/auth/session&#34;&gt;https://chat.openai.com/api/auth/session&lt;/a&gt; and records the response accessToken.&lt;/p&gt; &#xA;&lt;p&gt;Then open the IDE, and then, open in turn &lt;kbd&gt;Settings/Preferences&lt;/kbd&gt; &amp;gt; &lt;kbd&gt;Tools&lt;/kbd&gt; &amp;gt; &lt;kbd&gt;ChatGPT,&lt;/kbd&gt; then fill in the accessToken recorded above into the text box. You can use it later.&lt;/p&gt; &#xA;&lt;h1&gt;Contribution&lt;/h1&gt; &#xA;&lt;p&gt;This is a newly established project with many areas that can be optimized. We look forward to your joining us.&lt;/p&gt; &#xA;&lt;h1&gt;功能&lt;/h1&gt;</summary>
  </entry>
  <entry>
    <title>FokersBoolean/AliceBot</title>
    <updated>2022-12-13T01:33:56Z</updated>
    <id>tag:github.com,2022-12-13:/FokersBoolean/AliceBot</id>
    <link href="https://github.com/FokersBoolean/AliceBot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AliceBot&lt;/h1&gt; &#xA;&lt;h6&gt;环境依赖&lt;/h6&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ubuntu 18.04&lt;/li&gt; &#xA; &lt;li&gt;jdk8&lt;/li&gt; &#xA; &lt;li&gt;go-cqhttp_linux_arm64&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h6&gt;部署步骤&lt;/h6&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;安装jdk1.8&lt;br&gt; sudo apt-get install openjdk-8-jdk&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;下载运行go-cq 下载地址：&lt;a href=&#34;https://docs.go-cqhttp.org/guide/quick_start.html#%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B&#34;&gt;https://docs.go-cqhttp.org/guide/quick_start.html#%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B&lt;/a&gt;&lt;br&gt; 下载到服务器后使用tar -zxvf进行解压&lt;br&gt; 运行其中的的在解压目录下运行screen -S gocq&lt;br&gt; 再运行./go-cqhttp，第一次运行会先让你选连接方式，我们选择2：正向Websocket,gocq在解压目录下生成config.yml，这时我们先Ctrl+C&lt;br&gt; 运行nano config.yml，拉到最下面找到address: 0.0.0.0:8080，把8080替换成9099,然后Ctrl+X,然后按Y，再回车一下保存&lt;br&gt; 然后再次运行./go-cqhttp，完成登录后按Ctrl+A+D放到后台运行&lt;br&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;执行jar包 先输入screen -S Alice 创建个会话&lt;br&gt; 然后使用java -jar -Xmx512m --clientBaseConfig.admin=管理员QQ --clientBaseConfig.robot=机器人QQ --clientBaseConfig.wakeUpWord=唤醒词 --clientBaseConfig.standbyWord=待机词 --clientBaseConfig.promptUpWord=提示词 --clientBaseConfig.robotName=机器人名称 --chatGPT.email=gpt邮箱 --chatGPT.password=gpt密码 --chatGPT.sessionToken=token --server.port=8080&lt;br&gt; 运行后再使用Ctrl+A+D放到后台运行即可&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h6&gt;机器人的所有操作指令（以下指令皆需唤醒机器人后再进行发送才能生效）&lt;br&gt;&lt;/h6&gt; &#xA;&lt;p&gt;#private 将机器人设为私有的，需要权限(默认就是私有)&lt;br&gt; #public 将机器人设为所有人可用&lt;br&gt; add @某人 添加一个拥有权限的使用者&lt;br&gt; del @某人 将某人从使用者列表移除&lt;br&gt; #reset 在多线程模式下清除所有会话，单线程模式下清除会话&lt;br&gt; #reset me 用于多线程时清除管理员自己的会话&lt;br&gt; #more 开启多线程模式&lt;br&gt; #less 关闭多线程模式&lt;br&gt; #alone 开启一问到底(既无需唤醒机器人)&lt;br&gt; #add this 将当前的群聊加入权限列表&lt;br&gt; #del this 将当前的群聊从权限列表中移除&lt;br&gt; #help 查看指令列表&lt;br&gt;&lt;/p&gt; &#xA;&lt;h6&gt;V3.0.0 版本内容更新&lt;/h6&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;新功能 多线程&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;新功能 一问到底&lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;新功能 群聊权限&lt;br&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>smarques84/MockLocationDetector</title>
    <updated>2022-12-13T01:33:56Z</updated>
    <id>tag:github.com,2022-12-13:/smarques84/MockLocationDetector</id>
    <link href="https://github.com/smarques84/MockLocationDetector" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An android library to help detect mock locations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MockLocationDetector&lt;/h1&gt; &#xA;&lt;p&gt;An android library to help detect mock locations&lt;/p&gt; &#xA;&lt;h1&gt;Gradle&lt;/h1&gt; &#xA;&lt;p&gt;Add the next dependency to your &lt;em&gt;gradle.build&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;compile &#39;com.inforoeste.mocklocationdetector:mock-location-detector:1.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;From anywhere on your code just call the class MockLocationDetector to access the following available static methods&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;isLocationFromMockProvider&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;checkForAllowMockLocationsApps&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;isAllowMockLocationsOn&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To detect if the location object you received is a mock just call the method &lt;code&gt;isLocationFromMockProvider&lt;/code&gt; and pass the context and the location object. This method only works on API 18+ if this method is called on lower apis it then it will check if Allow Mock Locations is ON or not and return the result. This is the recomended method for most cases.&lt;/p&gt; &#xA;&lt;p&gt;If you want to check if there are apps on the users phone that have &#34;ALLOW_MOCK_LOCATIONS&#34; permission on their manifest just call &lt;code&gt;checkForAllowMockLocationsApps&lt;/code&gt;. This method is usefull for apps that use root access to enable/disable allow mock locations at runtime to try to fool other apps on lower apis (API 17 or lower). Also starting on Marshmallow its no longer possible to enable/disable allow mock locations at runtime with root permissions.&lt;/p&gt; &#xA;&lt;p&gt;Finally you can call &lt;code&gt;isAllowMockLocationsOn&lt;/code&gt; to check if the system setting Allow Mock Locations is enabled or not. Be aware that this method is deprecated and doesnt work on Marshmallow or up. If you call this method on API 23+ it will always return false.&lt;/p&gt; &#xA;&lt;h1&gt;Sample&lt;/h1&gt; &#xA;&lt;p&gt;You can run the sample to test the library&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2016 Stéphane Marques&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>