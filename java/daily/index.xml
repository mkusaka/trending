<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-15T01:37:37Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shopizer-ecommerce/shopizer</title>
    <updated>2023-01-15T01:37:37Z</updated>
    <id>tag:github.com,2023-01-15:/shopizer-ecommerce/shopizer</id>
    <link href="https://github.com/shopizer-ecommerce/shopizer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Shopizer java e-commerce software&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shopizer 3.X (for java 1.8 +) (tested with Java 11)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shopizer-ecommerce/shopizer/tree/3.2.5&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/last_version-v3.2.5-blue.svg?style=flat&#34; alt=&#34;last_version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.shopizer.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website-up-down-green-red/https/shields.io.svg?label=official%20site&#34; alt=&#34;Official site&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/shopizerecomm/shopizer&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/shopizerecomm/shopizer.svg?sanitize=true&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stackoverflow.com/questions/tagged/shopizer&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/shopizer-stackoverflow-orange.svg?style=flat&#34; alt=&#34;stackoverflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/shopizer-ecommerce/shopizer&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/shopizer-ecommerce/shopizer.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Java open source e-commerce software&lt;/p&gt; &#xA;&lt;p&gt;Headless commerce and Rest api for ecommerce&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Catalog&lt;/li&gt; &#xA; &lt;li&gt;Shopping cart&lt;/li&gt; &#xA; &lt;li&gt;Checkout&lt;/li&gt; &#xA; &lt;li&gt;Merchant&lt;/li&gt; &#xA; &lt;li&gt;Order&lt;/li&gt; &#xA; &lt;li&gt;Customer&lt;/li&gt; &#xA; &lt;li&gt;User&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Shopizer Headless commerce consists of the following components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spring boot Java / Spring boot backend&lt;/li&gt; &#xA; &lt;li&gt;Angular administration web application&lt;/li&gt; &#xA; &lt;li&gt;React JS front end application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;See the demo:&lt;/h2&gt; &#xA;&lt;p&gt;Headless demo Available soon&lt;/p&gt; &#xA;&lt;p&gt;Demo site for Shopizer 2.X is still available &lt;a href=&#34;http://demo.shopizer.com&#34;&gt;Legacy Shopizer demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run from Docker images:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;From the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 8080:8080 shopizerecomm/shopizer:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Run the administration tool&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;⋅⋅⋅ Requires the java backend to be running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run \&#xA; -e &#34;APP_BASE_URL=http://localhost:8080/api&#34; \&#xA; -p 82:80 shopizerecomm/shopizer-admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Run react shop sample site&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;⋅⋅⋅ Requires the java backend to be running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run \&#xA; -e &#34;APP_MERCHANT=DEFAULT&#34;&#xA; -e &#34;APP_BASE_URL=http://localhost:8080&#34;&#xA; -p 80:80 shopizerecomm/shopizer-shop-reactjs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API documentation:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.swaggerhub.com/apis-docs/shopizer/shopizer-rest-api/3.0.1#/&#34;&gt;https://app.swaggerhub.com/apis-docs/shopizer/shopizer-rest-api/3.0.1#/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get the source code:&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; $ git clone git://github.com/shopizer-ecommerce/shopizer.git&#xA; &#xA; $ git clone git://github.com/shopizer-ecommerce/shopizer-admin.git&#xA; &#xA; $ git clone git://github.com/shopizer-ecommerce/shopizer-shop-reactjs.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this is your first time using Github, review &lt;a href=&#34;http://help.github.com&#34;&gt;http://help.github.com&lt;/a&gt; to learn the basics.&lt;/p&gt; &#xA;&lt;p&gt;You can also download the zip file containing the code from &lt;a href=&#34;https://github.com/shopizer-ecommerce&#34;&gt;https://github.com/shopizer-ecommerce&lt;/a&gt; for each of the the projects above&lt;/p&gt; &#xA;&lt;h2&gt;To build the application:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Shopizer backend&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;From the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd shopizer&#xA;$ mvnw clean install&#xA;$ cd sm-shop&#xA;$ mvnw spring-boot:run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Shopizer admin&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Form compiling and running Shopizer admin consult the repo README file&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Shop sample site&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Form compiling and running Shopizer admin consult the repo README file&lt;/p&gt; &#xA;&lt;h3&gt;Access the application:&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Access the headless web application at: &lt;a href=&#34;http://localhost:8080/swagger-ui.html&#34;&gt;http://localhost:8080/swagger-ui.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The instructions above will let you run the application with default settings and configurations. Please read the instructions on how to connect to MySQL, configure an email server and configure other subsystems&lt;/p&gt; &#xA;&lt;h3&gt;Documentation:&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Documentation available &lt;a href=&#34;http://documentation.shopizer.com&#34;&gt;http://documentation.shopizer.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Api documentation &lt;a href=&#34;https://app.swaggerhub.com/apis-docs/shopizer/shopizer-rest-api/3.0.1#/&#34;&gt;https://app.swaggerhub.com/apis-docs/shopizer/shopizer-rest-api/3.0.1#/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ChatOps &lt;a href=&#34;https://shopizer.slack.com&#34;&gt;https://shopizer.slack.com&lt;/a&gt; - Join our Slack channel &lt;a href=&#34;https://join.slack.com/t/shopizer/signup&#34;&gt;https://join.slack.com/t/shopizer/signup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;More information is available on shopizer web site here &lt;a href=&#34;http://www.shopizer.com&#34;&gt;http://www.shopizer.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Participation:&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you have interest in giving feedback or for participating to Shopizer project in any way Feel to use the contact form &lt;a href=&#34;http://www.shopizer.com/contact.html&#34;&gt;http://www.shopizer.com/contact.html&lt;/a&gt; and share your email address so we can send an invite to our Slack channel&lt;/p&gt; &#xA;&lt;h3&gt;How to Contribute:&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Fork the repository to your GitHub account&lt;/p&gt; &#xA;&lt;h2&gt;Clone from fork repository&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;   $ git clone https://github.com/yourusername/shopizer.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build application according to steps provided above&lt;/p&gt; &#xA;&lt;h2&gt;Synchronize lastest version with the upstream&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;   $ git remote add upstream https://github.com/yourusername/shopizer.git&#xA;  $ git pull upstream 3.2.5&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Create new branch in your repository&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;   $ git checkout -b branch-name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Push your changes to Shopizer&lt;/h2&gt; &#xA;&lt;p&gt;Please open a PR (pull request) in order to have your changes merged to the upstream&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Team364/BaseFalconSwerve</title>
    <updated>2023-01-15T01:37:37Z</updated>
    <id>tag:github.com,2023-01-15:/Team364/BaseFalconSwerve</id>
    <link href="https://github.com/Team364/BaseFalconSwerve" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WARNING: There is currently an issue causing this code to not work with MK4i&#39;s, we are working on finding the issue, as soon as it is fixed this warning will be removed. If you would like to follow the progress/help test please see this &lt;a href=&#34;https://github.com/Team364/BaseFalconSwerve/issues/8&#34;&gt;issue&lt;/a&gt;.&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Once ths code is tested on an actual robot sometime in the next week or so, this warning shall be removed.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BaseFalconSwerve &lt;br&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Basic Swerve Code for a Swerve Module using Falcon Motors, a CTRE CANCoder, and a CTRE Pigeon Gyro&lt;/strong&gt; &lt;br&gt; This code was designed with Swerve Drive Specialties MK3, MK4, and MK4i style modules in mind, but should be easily adaptable to other styles of modules.&lt;br&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Setting Constants&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;The following things must be adjusted to your robot and module&#39;s specific constants in the Constants.java file (all distance units must be in meters, and rotation units in radians):&lt;br&gt; These instructions are mostly followable from Step&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Gyro Settings: &lt;code&gt;pigeonID&lt;/code&gt; and &lt;code&gt;invertGyro&lt;/code&gt; (ensure that the gyro rotation is CCW+ (Counter Clockwise Positive)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;chosenModule&lt;/code&gt;: &lt;br&gt;If you are using a COTS SDS Module (more modules will be added in the future), set the module and drive ratio you are using here. &lt;br&gt;This will automatically set certain constants for the specific module required to function properly. &lt;br&gt;&lt;b&gt;&lt;u&gt;If you are not using a COTS supported module, you should delete this variable, and fix all the errors that pop up with correct values for the module you are using&lt;/u&gt;&lt;/b&gt; &lt;br&gt; Here is a list of the constants that will automatically be set if you are using a supported module:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Wheel Circumference&lt;/li&gt; &#xA;   &lt;li&gt;Angle Motor Invert&lt;/li&gt; &#xA;   &lt;li&gt;Drive Motor Invert&lt;/li&gt; &#xA;   &lt;li&gt;CANCoder Sensor Invert&lt;/li&gt; &#xA;   &lt;li&gt;Angle Motor Gear Ratio&lt;/li&gt; &#xA;   &lt;li&gt;Drive Motor Gear Ratio&lt;/li&gt; &#xA;   &lt;li&gt;Angle Falcon Motor PID Values&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;trackWidth&lt;/code&gt;: Center to Center distance of left and right modules in meters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;wheelBase&lt;/code&gt;: Center to Center distance of front and rear module wheels in meters.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;wheelCircumference&lt;/code&gt;: Cirumference of the wheel (including tread) in meters. &lt;br&gt;&lt;b&gt;If you are using a supported module, this value will be automatically set.&lt;/b&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;driveGearRatio&lt;/code&gt;: Total gear ratio for the drive motor. &lt;br&gt;&lt;b&gt;If you are using a supported module, this value will be automatically set.&lt;/b&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;angleGearRatio&lt;/code&gt;: Total gear ratio for the angle motor. &lt;br&gt;&lt;b&gt;If you are using a supported module, this value will be automatically set.&lt;/b&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;canCoderInvert&lt;/code&gt; and &lt;code&gt;angleMotorInvert&lt;/code&gt;: Both must be set such that they are CCW+. &lt;br&gt;&lt;b&gt;If you are using a supported module, this value will be automatically set.&lt;/b&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;driveMotorInvert&lt;/code&gt;: &lt;b&gt;If you are using a supported module, this value will be automatically set.&lt;/b&gt; &lt;br&gt;This can always remain false, since you set your offsets in step 11 such that a positive input to the drive motor will cause the robot to drive forwards. &lt;br&gt;However this can be set to true if for some reason you prefer the bevel gears on the wheel to face one direction or another when setting offsets. See Step 11 for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Module Specific Constants&lt;/code&gt;: set the Can Id&#39;s of the motors and CANCoders for the respective modules, see the next step for setting offsets.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Setting Offsets&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For finding the offsets, use a piece of 1x1 metal that is straight against the forks of the front and back modules (on the left and right side) to ensure that the modules are straight.&lt;/li&gt; &#xA;   &lt;li&gt;Point the bevel gears of all the wheels in the same direction (either facing left or right), where a postive input to the drive motor drives the robot forward (you can use phoenix tuner to test this). If for some reason you set the offsets with the wheels backwards, you can change the &lt;code&gt;driveMotorInvert&lt;/code&gt; value to fix.&lt;/li&gt; &#xA;   &lt;li&gt;Open smartdashboard (or shuffleboard and go to the smartdashboard tab), you will see 4 printouts called &#34;Mod 0 Cancoder&#34;, &#34;Mod 1 Cancoder&#34;, etc. &lt;br&gt;If you have already straightened the modules, copy those 4 numbers exactly (to 2 decimal places) to their respective &lt;code&gt;angleOffset&lt;/code&gt; variable in constants. &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; The CANcoder values printed to smartdashboard are in degrees, when copying the values to &lt;code&gt;angleOffset&lt;/code&gt; you must use &lt;code&gt;Rotation2d.fromDegrees(&#34;copied value&#34;)&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Angle Motor PID Values: &lt;br&gt;&lt;b&gt;If you are using a supported module, this value will be automatically set. If you are not, or prefer a more or less aggressive response, you can use the below instructions to tune.&lt;/b&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To tune start with a low P value (0.01).&lt;/li&gt; &#xA;   &lt;li&gt;Multiply by 10 until the module starts oscilating around the set point&lt;/li&gt; &#xA;   &lt;li&gt;Scale back by searching for the value (for example, if it starts oscillating at a P of 10, then try (10 -&amp;gt; 5 -&amp;gt; 7.5 -&amp;gt; etc)) until the module doesn&#39;t oscillate around the setpoint.&lt;/li&gt; &#xA;   &lt;li&gt;If there is any overshoot you can add in some D by repeating the same process, leave at 0 if not. Always leave I at 0.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;maxSpeed&lt;/code&gt;: In Meters Per Second. &lt;code&gt;maxAngularVelocity&lt;/code&gt;: In Radians Per Second. For these you can use the theoretical values, but it is better to physically drive the robot and find the actual max values.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get the drive characterization values (KS, KV, KA) by using the WPILib characterization tool, found &lt;a href=&#34;https://docs.wpilib.org/en/stable/docs/software/wpilib-tools/robot-characterization/introduction.html&#34;&gt;here&lt;/a&gt;. You will need to lock your modules straight forward, and complete the characterization as if it was a standard tank drive.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;driveKP&lt;/code&gt;: &lt;br&gt;After completeing characterization and inserting the KS, KV, and KA values into the code, tune the drive motor kP until it doesn&#39;t overshoot and doesnt oscilate around a target velocity. &lt;br&gt;Leave &lt;code&gt;driveKI&lt;/code&gt;, &lt;code&gt;driveKD&lt;/code&gt;, and &lt;code&gt;driveKF&lt;/code&gt; at 0.0.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;strong&gt;Controller Mappings&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This code is natively setup to use a xbox controller to control the swerve drive. &lt;br&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Left Stick: Translation Control (forwards and sideways movement)&lt;/li&gt; &#xA; &lt;li&gt;Right Stick: Rotation Control &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;Y button: Zero Gyro (useful if the gyro drifts mid match, just rotate the robot forwards, and press Y to rezero)&lt;/li&gt; &#xA; &lt;li&gt;Left Bumper: Switches To Robot Centric Control while held&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>