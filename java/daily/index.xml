<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-20T01:31:54Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iterate-ch/cyberduck</title>
    <updated>2024-11-20T01:31:54Z</updated>
    <id>tag:github.com,2024-11-20:/iterate-ch/cyberduck</id>
    <link href="https://github.com/iterate-ch/cyberduck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cyberduck is a libre FTP, SFTP, WebDAV, Amazon S3, Backblaze B2, Microsoft Azure &amp; OneDrive and OpenStack Swift file transfer client for Mac and Windows.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cyberduck&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iterate-ch/cyberduck/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/iterate-ch/cyberduck&#34; alt=&#34;GitHub commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iterate-ch/cyberduck/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iterate-ch/cyberduck/actions&#34;&gt;&lt;img src=&#34;https://github.com/iterate-ch/cyberduck/actions/workflows/build.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fosstodon.org/@cyberduck&#34;&gt;&lt;img src=&#34;https://img.shields.io/mastodon/follow/109698908353278292?domain=https%3A%2F%2Ffosstodon.org%2F&amp;amp;style=flat&#34; alt=&#34;Mastodon&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gurubase.io/g/cyberduck&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gurubase-Ask%20Cyberduck%20Guru-006BFF&#34; alt=&#34;Gurubase&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the development home for Cyberduck, a libre file transfer client for macOS and Windows. Command line interface (CLI) for Linux, macOS and Windows. The core libraries are used in &lt;a href=&#34;https://mountainduck.io/&#34;&gt;Mountain Duck&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://cdn.cyberduck.io/img/cyberduck-icon-rect-512.png&#34; alt=&#34;Cyberduck Icon&#34; width=&#34;400px&#34;&gt; &#xA;&lt;h2&gt;Mailing Lists&lt;/h2&gt; &#xA;&lt;p&gt;There is a &lt;a href=&#34;http://groups.google.com/group/cyberduck/&#34;&gt;Google Groups Cyberduck&lt;/a&gt; discussion mailing list.&lt;/p&gt; &#xA;&lt;p&gt;The following additional &lt;a href=&#34;http://lists.cyberduck.io/&#34;&gt;mailing lists&lt;/a&gt; are hosted:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lists.cyberduck.io/mailman/listinfo/cyberduck-news&#34;&gt;News&lt;/a&gt; Announcements of new releases&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://lists.cyberduck.io/mailman/listinfo/cyberduck-localization&#34;&gt;Localization&lt;/a&gt; Notifications about changes to the translations needed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Source&lt;/h2&gt; &#xA;&lt;p&gt;Source code is available licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;GNU General Public License Version 3&lt;/a&gt;. Pull requests welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Localizations&lt;/h2&gt; &#xA;&lt;p&gt;Translations to new languages are welcome. We use &lt;a href=&#34;https://www.transifex.com/cyberduck/cyberduck/dashboard/&#34;&gt;Transifex&lt;/a&gt; to localize resources. Current available localizations are &lt;em&gt;English&lt;/em&gt;, &lt;em&gt;Czech&lt;/em&gt;, &lt;em&gt;Dutch&lt;/em&gt;, &lt;em&gt;Finnish&lt;/em&gt;, &lt;em&gt;French&lt;/em&gt;, &lt;em&gt;German&lt;/em&gt;, &lt;em&gt;Italian&lt;/em&gt;, &lt;em&gt;Japanese&lt;/em&gt;, &lt;em&gt;Korean&lt;/em&gt;, &lt;em&gt;Norwegian&lt;/em&gt;, &lt;em&gt;Portuguese&lt;/em&gt;, &lt;em&gt;Slovak&lt;/em&gt;, &lt;em&gt;Spanish&lt;/em&gt;, &lt;em&gt;Chinese (Traditional &amp;amp; Simplified Han)&lt;/em&gt;, &lt;em&gt;Russian&lt;/em&gt;, &lt;em&gt;Swedish&lt;/em&gt;, &lt;em&gt;Hungarian&lt;/em&gt;, &lt;em&gt;Danish&lt;/em&gt;, &lt;em&gt;Polish&lt;/em&gt;, &lt;em&gt;Indonesian&lt;/em&gt;, &lt;em&gt;Catalan&lt;/em&gt;, &lt;em&gt;Welsh&lt;/em&gt;, &lt;em&gt;Thai&lt;/em&gt;, &lt;em&gt;Turkish&lt;/em&gt;, &lt;em&gt;Hebrew&lt;/em&gt;, &lt;em&gt;Latvian&lt;/em&gt;, &lt;em&gt;Greek&lt;/em&gt;, &lt;em&gt;Serbian&lt;/em&gt;, &lt;em&gt;Georgian&lt;/em&gt; and &lt;em&gt;Slovenian&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Make sure to subscribe to the &lt;a href=&#34;http://lists.cyberduck.ch/mailman/listinfo/cyberduck-localization&#34;&gt;localization mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;For general help about using Cyberduck, please refer to the &lt;a href=&#34;https://docs.cyberduck.io&#34;&gt;documentation&lt;/a&gt;. The documentation is maintained in its own &lt;a href=&#34;https://github.com/iterate-ch/docs&#34;&gt;repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Additional Connection Profiles&lt;/h2&gt; &#xA;&lt;p&gt;Additional connection profiles not bundled by default but available in &lt;em&gt;Preferences → Profiles&lt;/em&gt; are maintained in its own &lt;a href=&#34;https://github.com/iterate-ch/profiles&#34;&gt;repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Snapshot and Beta builds&lt;/h2&gt; &#xA;&lt;p&gt;These are nightly snapshot builds from the current development trunk featuring the latest bug fixes and enhancements. Be warned, though, these builds are potentially unstable and experimental. You can also switch to beta or snapshot builds in &lt;em&gt;Preferences → Update&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 11 SDK or later&lt;/li&gt; &#xA; &lt;li&gt;Apache Ant 1.10.1 or later&lt;/li&gt; &#xA; &lt;li&gt;Apache Maven 3.5 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/xcode/download/&#34;&gt;Xcode 12&lt;/a&gt; or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;h4&gt;Installation&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Manually&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio 2022, following workloads are required: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;.NET desktop development&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Universal Windows Platform development&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Desktop development with C++&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://support.apple.com/kb/dl999&#34;&gt;Bonjour SDK for Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wixtoolset.org/docs/wix3/&#34;&gt;Wix v3&lt;/a&gt; (Optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Chocolatey&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Without Visual Studio (IDE)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install visualstudio2022buildtools -y&#xA;choco install visualstudio2022-workload-manageddesktopbuildtools -y&#xA;choco install visualstudio2022-workload-vctools -y&#xA;choco install visualstudio2022-workload-universalbuildtools -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;With Visual Studio IDE&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install visualstudio2022(edition) -y&#xA;choco install visualstudio2022-workload-manageddesktop -y&#xA;choco install visualstudio2022-workload-nativedesktop -y&#xA;choco install visualstudio2022-workload-universal -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;(edition)&lt;/code&gt; with your licensed IDE SKU: community, professional, enterprise&lt;/p&gt; &#xA;&lt;p&gt;Install required dependencies, after installing Visual Studio IDE or build tools:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install microsoft-openjdk17 ant maven -y&#xA;choco install bonjour -y; choco install bonjour -y --force&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optional, see Remarks:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;choco install wixtoolset -y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;Remarks&lt;/em&gt;: Installing with Chocolatey may or may not fail spectacularly.&lt;br&gt; Following issues have been observed on a clean installation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Bonjour package fails with &lt;code&gt;file not found&lt;/code&gt; - though the Bonjour64.msi is extracted from BonjourPSSetup.exe.&lt;/li&gt; &#xA; &lt;li&gt;wixtoolset depends on .NET 3.5-package, which never completes&lt;br&gt; On Windows 11 installation doesn&#39;t work&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;visualstudio*-workload-*&lt;/code&gt; may halt with &#34;Operation canceled&#34;,&lt;br&gt; Abort Chocolatey-command (Ctrl-C), then open up Visual Studio Installer and Resume installation there&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Restart your machine after installing these components.&lt;/p&gt; &#xA;&lt;h4&gt;System Configuration&lt;/h4&gt; &#xA;&lt;p&gt;Make sure that &lt;code&gt;MSBuild&lt;/code&gt;, &lt;code&gt;mvn&lt;/code&gt;, &lt;code&gt;ant&lt;/code&gt; and &lt;code&gt;java&lt;/code&gt; are on your &lt;code&gt;PATH&lt;/code&gt;-environment variable.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Developer Command Prompt for VS2022&lt;/code&gt;, then run &lt;code&gt;where msbuild.exe&lt;/code&gt;, add first directory name to path &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;e.g. &lt;code&gt;C:\Program Files\Microsoft Visual Studio\Community\Msbuild\Current\Bin\amd64&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Chocolatey may have added mvn and ant to your &lt;code&gt;PATH&lt;/code&gt;-variable&lt;/li&gt; &#xA; &lt;li&gt;The Microsoft OpenJDK 17 installer automatically adds itself to the system &lt;code&gt;PATH&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally include the latest Windows Sdk-binary folder in your &lt;code&gt;PATH&lt;/code&gt;-environment variable:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;%ProgramFiles(x86)%\Windows Kits\10\bin\10.0.&amp;lt;Latest&amp;gt;.0\x64&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;mvn verify -DskipTests -DskipSign&lt;/code&gt; to build without running any tests and skip codesign. Find build artifacts in&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;osx/target/Cyberduck.app&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;windows/target/Cyberduck.exe&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run with &lt;code&gt;-Pinstaller&lt;/code&gt; to build installer packages with build artifacts&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;osx/target/release/*.(zip|pkg)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;windows/target/release/*.(exe|msi)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cli/osx/target/release/*.(pkg|tar.gz)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cli/windows/target/release/*.(exe|msi)&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cli/linux/target/release/*.(deb|rpm)&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;You will run into warnings from &lt;code&gt;MSBuild&lt;/code&gt;/&lt;code&gt;WiX&lt;/code&gt; that are unrelated to how Cyberduck is built. You may safely ignore them.&lt;/p&gt; &#xA;&lt;h2&gt;Debugging&lt;/h2&gt; &#xA;&lt;h3&gt;macOS&lt;/h3&gt; &#xA;&lt;p&gt;Edit &lt;code&gt;setup/app/Info.plist&lt;/code&gt; if you want to debug &lt;em&gt;Cyberduck.app&lt;/em&gt; or &lt;code&gt;setup/pkg/Info.plist&lt;/code&gt; if you want to debug&lt;code&gt;duck&lt;/code&gt; respectively. Add &lt;code&gt;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005&lt;/code&gt; in &lt;code&gt;VMOptions&lt;/code&gt; to allow to connect to the running application in your IDE by attaching to the remote JVM.&lt;/p&gt; &#xA;&lt;h3&gt;Windows&lt;/h3&gt; &#xA;&lt;p&gt;Due to Visual Studio not being able to handle Java projects it is required to follow these steps for debugging:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Run &lt;code&gt;mvn verify -Dconfiguration=debug&lt;/code&gt; which ensures that debugging symbols are generated This prevents Visual Studio (or &lt;code&gt;MSBuild invoked from Maven&lt;/code&gt;) from generating optimized assemblies which in turn may prevent debugging.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the solution in Visual Studio&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open a &lt;code&gt;.java&lt;/code&gt; file and set a breakpoint. Visual Studio breaks either on or near the line selected.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Debugging capabilities include&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Step Over&lt;/li&gt; &#xA;   &lt;li&gt;Step Into&lt;/li&gt; &#xA;   &lt;li&gt;Step Out&lt;/li&gt; &#xA;   &lt;li&gt;Continue&lt;/li&gt; &#xA;   &lt;li&gt;Local/Auto variables&lt;/li&gt; &#xA;   &lt;li&gt;Immediate Window&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Go To Symbol is not working due to missing Java support.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running Tests&lt;/h2&gt; &#xA;&lt;p&gt;After packaging, run &lt;code&gt;mvn test -DskipITs&lt;/code&gt; to run unit tests but skip integration tests.&lt;/p&gt; &#xA;&lt;h3&gt;Maven Artifacts (GPL)&lt;/h3&gt; &#xA;&lt;h4&gt;Repository Configuration&lt;/h4&gt; &#xA;&lt;p&gt;Maven artifacts are available in a repository hosted on Amazon S3.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the following Maven configuration in your project POM to reference artifacts from Cyberduck&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;repositories&amp;gt;&#xA;   &amp;lt;repository&amp;gt;&#xA;       &amp;lt;id&amp;gt;maven.cyberduck.io-release&amp;lt;/id&amp;gt;&#xA;       &amp;lt;url&amp;gt;https://s3-eu-west-1.amazonaws.com/repo.maven.cyberduck.io/releases&amp;lt;/url&amp;gt;&#xA;       &amp;lt;layout&amp;gt;default&amp;lt;/layout&amp;gt;&#xA;       &amp;lt;releases&amp;gt;&#xA;           &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;&#xA;       &amp;lt;/releases&amp;gt;&#xA;       &amp;lt;snapshots&amp;gt;&#xA;           &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&#xA;       &amp;lt;/snapshots&amp;gt;&#xA;   &amp;lt;/repository&amp;gt;&#xA;&amp;lt;/repositories&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You will need to add the AWS Maven Wagon to your build using&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;build&amp;gt;&#xA;    &amp;lt;extensions&amp;gt;&#xA;        &amp;lt;extension&amp;gt;&#xA;            &amp;lt;groupId&amp;gt;org.springframework.build&amp;lt;/groupId&amp;gt;&#xA;            &amp;lt;artifactId&amp;gt;aws-maven&amp;lt;/artifactId&amp;gt;&#xA;            &amp;lt;version&amp;gt;5.0.0.RELEASE&amp;lt;/version&amp;gt;&#xA;        &amp;lt;/extension&amp;gt;&#xA;    &amp;lt;/extensions&amp;gt;&#xA;&amp;lt;/build&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Artifacts&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Protocol implementations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;ch.cyberduck&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;protocols&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xA;    &amp;lt;version&amp;gt;7.1.0&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Cocoa Java Bindings (macOS)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;ch.cyberduck&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;binding&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;7.1.0&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implementations (macOS) using Launch Services, SystemConfiguration, Foundation, Keychain and other API&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;ch.cyberduck&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;libcore&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.yourkit.com&#34;&gt;&lt;img src=&#34;https://www.yourkit.com/images/yk_logo.svg?sanitize=true&#34; alt=&#34;YourKit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;YourKit supports open source projects with its full-featured Java Profiler. YourKit, LLC is the creator of &lt;a href=&#34;https://www.yourkit.com/java/profiler/&#34;&gt;YourKit Java Profiler&lt;/a&gt; and &lt;a href=&#34;https://www.yourkit.com/.net/profiler/&#34;&gt;YourKit .NET Profiler&lt;/a&gt;, innovative and intelligent tools for profiling Java and .NET applications.&lt;/p&gt;</summary>
  </entry>
</feed>