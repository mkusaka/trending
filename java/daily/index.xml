<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-03T01:35:30Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>weibocom/rill-flow</title>
    <updated>2023-12-03T01:35:30Z</updated>
    <id>tag:github.com,2023-12-03:/weibocom/rill-flow</id>
    <link href="https://github.com/weibocom/rill-flow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rill Flow&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/weibocom/rill-flow/main/README_zh_CN.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/document-%E4%B8%AD%E6%96%87-red.svg?sanitize=true&#34; alt=&#34;EN doc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Rill Flow is a high-performance, scalable distributed workflow orchestration service with the following core features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;High performance: Supports the execution of tens of millions of tasks per day, with task execution latency less than 100ms&lt;/li&gt; &#xA; &lt;li&gt;Distributed: Supports the orchestration and scheduling of heterogeneous distributed systems&lt;/li&gt; &#xA; &lt;li&gt;Ease to use: supports visual process orchestration and plug-in access&lt;/li&gt; &#xA; &lt;li&gt;Cloud native: Supports cloud native container deployment and cloud native function orchestration&lt;/li&gt; &#xA; &lt;li&gt;AIGC: supports rapid integration of LLM model services&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;QuickStart&lt;/h2&gt; &#xA;&lt;h3&gt;Environment Preparation&lt;/h3&gt; &#xA;&lt;p&gt;Before you begin, ensure that the following tools are installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Environment suitable for OSX/Linux&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker-Compose&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Service Deployment&lt;/h3&gt; &#xA;&lt;p&gt;Install Rill Flow services on your local environment using Docker-Compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; docker-compose.yaml&#xA;version: &#39;3&#39;&#xA;services:&#xA;  rill-flow:&#xA;    image: weibocom/rill-flow&#xA;    depends_on:&#xA;      - cache&#xA;      - jaeger&#xA;    ports:&#xA;      - &#34;8080:8080&#34;&#xA;    environment:&#xA;      - RILL_FLOW_DESCRIPTOR_REDIS_HOST=cache&#xA;      - RILL_FLOW_DEFAULT_REDIS_HOST=cache&#xA;      - RILL_FLOW_TRACE_ENDPOINT=http://jaeger:4317&#xA;      - RILL_FLOW_CALLBACK_URL=http://rill-flow:8080/flow/finish.json&#xA;  cache:&#xA;    image: redis:6.2-alpine&#xA;    restart: always&#xA;    command: redis-server --save 20 1 --loglevel warning&#xA;  jaeger:&#xA;    image: jaegertracing/all-in-one:1.39&#xA;    restart: always&#xA;    environment:&#xA;      - COLLECTOR_OTLP_ENABLED=true&#xA;  ui:&#xA;    image: weibocom/rill-flow-ui&#xA;    ports:&#xA;      - &#34;8088:80&#34;&#xA;      - &#34;8089:8089&#34;&#xA;    depends_on:&#xA;      - rill-flow&#xA;      - jaeger&#xA;    environment:&#xA;      - BACKEND_SERVER=http://rill-flow:8080&#xA;      - TRACE_SERVER=http://jaeger:16686&#xA;  sample-executor:&#xA;    image: weibocom/rill-flow-sample:sample-executor &#xA;EOF&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Execution Example&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 1: Submit a YAML file defining a workflow&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-curl&#34;&gt;curl --location  --request POST &#39;http://127.0.0.1:8080/flow/bg/manage/descriptor/add_descriptor.json?business_id=rillFlowSimple&amp;amp;feature_name=greet&amp;amp;alias=release&#39; \&#xA;--header &#39;Content-Type: text/plain&#39; \&#xA;--data-raw &#39;---&#xA;version: 1.0.0&#xA;workspace: rillFlowSimple&#xA;dagName: greet&#xA;type: flow&#xA;tasks:&#xA;  - category: function&#xA;    name: Bob &#xA;    resourceName: http://sample-executor:8000/greet.json?user=Bob&#xA;    pattern: task_sync&#xA;    tolerance: false&#xA;    next: Alice&#xA;    inputMappings:&#xA;      - source: &#34;$.context.Bob&#34;&#xA;        target: &#34;$.input.Bob&#34;&#xA;  - category: function&#xA;    name: Alice &#xA;    resourceName: http://sample-executor:8000/greet.json?user=Alice&#xA;    pattern: task_sync&#xA;    tolerance: false&#xA;    inputMappings:&#xA;      - source: &#34;$.context.Alice&#34;&#xA;        target: &#34;$.input.Alice&#34;&#xA;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Step 2: Submit a task to execute the workflow&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-curl&#34;&gt;curl -XPOST &#39;http://127.0.0.1:8080/flow/submit.json?descriptor_id=rillFlowSimple:greet&#39;  -d &#39;{&#34;Bob&#34;:&#34;Hello, I am Bob!&#34;, &#34;Alice&#34;: &#34;Hi, I am Alice&#34;}&#39; -H &#39;Content-Type:application/json&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Step 3ï¼šQuery the task execution results&lt;/p&gt; &lt;p&gt;Query the execution details via the Rill Flow UI.(admin/admin)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-curl&#34;&gt;http://127.0.0.1:8088/#/flow-instance/list&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Document&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://rill-flow.github.io/en/docs/intro&#34;&gt;https://rill-flow.github.io/en/docs/intro&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;The following are contributors to the project along with their GitHub links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;axb (&lt;a href=&#34;https://github.com/qdaxb&#34;&gt;@qdaxb&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Ocean (&lt;a href=&#34;https://github.com/hhh041&#34;&gt;@hhh041&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;xilong-t (&lt;a href=&#34;https://github.com/xilong-t&#34;&gt;@xilong-t&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;techlog (&lt;a href=&#34;https://github.com/techloghub&#34;&gt;@techloghub&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;ch15084 (&lt;a href=&#34;https://github.com/ch15084&#34;&gt;@ch15084&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;qfl (&lt;a href=&#34;https://github.com/qiaofenlin&#34;&gt;@qiaofenlin&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Kylen (&lt;a href=&#34;https://github.com/Kylen0714&#34;&gt;@Kylen&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;zzfzzf (&lt;a href=&#34;https://github.com/zzfzzf&#34;&gt;@zzfzzf&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;feifei (&lt;a href=&#34;https://github.com/feifei325&#34;&gt;@feifei325&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;moqimoqidea (&lt;a href=&#34;https://github.com/moqimoqidea&#34;&gt;@moqimoqidea&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Guo, Jiansheng (&lt;a href=&#34;https://github.com/guojiansheng0925&#34;&gt;@guojiansheng0925&lt;/a&gt;))&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Rill Flow is an open-source project under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>FongMi/CatVodSpider</title>
    <updated>2023-12-03T01:35:30Z</updated>
    <id>tag:github.com,2023-12-03:/FongMi/CatVodSpider</id>
    <link href="https://github.com/FongMi/CatVodSpider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CatVodSpider&lt;/h1&gt; &#xA;&lt;h3&gt;Based on CatVod&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CatVodTVOfficial/CatVodTVSpider&#34;&gt;https://github.com/CatVodTVOfficial/CatVodTVSpider&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>