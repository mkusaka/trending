<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-17T01:34:23Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kyxiaxiang/CrackSleeve4.7</title>
    <updated>2022-09-17T01:34:23Z</updated>
    <id>tag:github.com,2022-09-17:/kyxiaxiang/CrackSleeve4.7</id>
    <link href="https://github.com/kyxiaxiang/CrackSleeve4.7" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CrackSleeve4.7&lt;/h1&gt; &#xA;&lt;p&gt;CobaltStrike4.7 Sleeve解密文件, 仅作备份使用.&lt;/p&gt; &#xA;&lt;p&gt;还需要修改TeamserverImage文件，暂不外放。&lt;/p&gt; &#xA;&lt;p&gt;将cobaltstrike.jar（原名cobaltstrike-client.jar）和CrackSleeve.java放一起&lt;/p&gt; &#xA;&lt;p&gt;编译( javac -encoding UTF-8 -classpath cobaltstrike.jar CrackSleeve.java)&lt;/p&gt; &#xA;&lt;p&gt;解密文件( java -classpath cobaltstrike.jar;./ CrackSleeve decode)&lt;/p&gt; &#xA;&lt;p&gt;无需输入Key,加密文件( java -classpath cobaltstrike.jar;./ CrackSleeve encode)&lt;/p&gt; &#xA;&lt;p&gt;将解密后的sleeve文件夹替换jar包中的文件夹&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rest-assured/rest-assured</title>
    <updated>2022-09-17T01:34:23Z</updated>
    <id>tag:github.com,2022-09-17:/rest-assured/rest-assured</id>
    <link href="https://github.com/rest-assured/rest-assured" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Java DSL for easy testing of REST services&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rest-assured/rest-assured/master/rest-assured-logo-green.png&#34; alt=&#34;REST Assured&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rest-assured/rest-assured/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/rest-assured/rest-assured/actions/workflows/ci.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/io.rest-assured/rest-assured&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/io.rest-assured/rest-assured/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- [![Javadoc](https://javadoc-badge.appspot.com/io.rest-assured/rest-assured.svg)](http://www.javadoc.io/doc/io.rest-assured/rest-assured) --&gt; &#xA;&lt;p&gt;Testing and validation of REST services in Java is harder than in dynamic languages such as Ruby and Groovy. REST Assured brings the simplicity of using these languages into the Java domain.&lt;/p&gt; &#xA;&lt;h2&gt;News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2022-09-09: REST Assured 5.2.0 is released with, among other things, much improved &lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/Usage#csrf&#34;&gt;CRSF&lt;/a&gt; support. See &lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/ReleaseNotes52&#34;&gt;release notes&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/rest-assured/rest-assured/master/changelog.txt&#34;&gt;change log&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;2022-06-10: REST Assured 5.1.1 is released. The &lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/Spring#spring-web-test-client-module&#34;&gt;Spring WebTestClient Module&lt;/a&gt; now supports Spring Framework 6. There are also several fixes and various improvements. See &lt;a href=&#34;https://raw.githubusercontent.com/rest-assured/rest-assured/master/changelog.txt&#34;&gt;changelog&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;2022-05-24: REST Assured 5.1.0 is released. The biggest change is that the &lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/Spring#spring-mock-mvc-module&#34;&gt;Spring MockMvc Module&lt;/a&gt; now supports Spring Framework 6 and Jakarta API&#39;s. See &lt;a href=&#34;https://raw.githubusercontent.com/rest-assured/rest-assured/master/changelog.txt&#34;&gt;changelog&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/OldNews&#34;&gt;Older News&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s an example of how to make a GET request and validate the JSON or XML response:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;get(&#34;/lotto&#34;).then().assertThat().body(&#34;lotto.lottoId&#34;, equalTo(5));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Get and verify all winner ids:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;get(&#34;/lotto&#34;).then().assertThat().body(&#34;lotto.winners.winnerId&#34;, hasItems(23, 54));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using parameters:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;given().&#xA;    param(&#34;key1&#34;, &#34;value1&#34;).&#xA;    param(&#34;key2&#34;, &#34;value2&#34;).&#xA;when().&#xA;    post(&#34;/somewhere&#34;).&#xA;then().&#xA;    body(containsString(&#34;OK&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using X-Path (XML only):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;given().&#xA;    params(&#34;firstName&#34;, &#34;John&#34;, &#34;lastName&#34;, &#34;Doe&#34;).&#xA;when().&#xA;    post(&#34;/greetMe&#34;).&#xA;then().&#xA;    body(hasXPath(&#34;/greeting/firstName[text()=&#39;John&#39;]&#34;)).&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Need authentication? REST Assured provides several authentication mechanisms:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;given().auth().basic(username, password).when().get(&#34;/secured&#34;).then().statusCode(200);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Getting and parsing a response body:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// Example with JsonPath&#xA;String json = get(&#34;/lotto&#34;).asString();&#xA;List&amp;lt;String&amp;gt; winnerIds = from(json).get(&#34;lotto.winners.winnerId&#34;);&#xA;    &#xA;// Example with XmlPath&#xA;String xml = post(&#34;/shopping&#34;).andReturn().body().asString();&#xA;Node category = from(xml).get(&#34;shopping.category[0]&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;REST Assured supports any HTTP method but has explicit support for &lt;em&gt;POST&lt;/em&gt;, &lt;em&gt;GET&lt;/em&gt;, &lt;em&gt;PUT&lt;/em&gt;, &lt;em&gt;DELETE&lt;/em&gt;, &lt;em&gt;OPTIONS&lt;/em&gt;, &lt;em&gt;PATCH&lt;/em&gt; and &lt;em&gt;HEAD&lt;/em&gt; and includes specifying and validating e.g. parameters, headers, cookies and body easily.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/GettingStarted&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/Usage&#34;&gt;Usage Guide&lt;/a&gt; (click &lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/Usage_Legacy&#34;&gt;here&lt;/a&gt; for legacy documentation)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.javadoc.io/doc/io.rest-assured/rest-assured/5.2.0&#34;&gt;Javadoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://static.javadoc.io/io.rest-assured/rest-assured/5.2.0/io/restassured/RestAssured.html&#34;&gt;Rest Assured Javadoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://static.javadoc.io/io.rest-assured/spring-mock-mvc/5.2.0/io/restassured/module/mockmvc/RestAssuredMockMvc.html&#34;&gt;Rest AssuredMockMvc Javadoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://static.javadoc.io/io.rest-assured/xml-path/5.2.0/io/restassured/path/xml/XmlPath.html&#34;&gt;XmlPath Javadoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://static.javadoc.io/io.rest-assured/json-path/5.2.0/io/restassured/path/json/JsonPath.html&#34;&gt;JsonPath Javadoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/ReleaseNotes&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rest-assured/rest-assured/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support and discussion&lt;/h2&gt; &#xA;&lt;p&gt;Join the mailing list at our &lt;a href=&#34;http://groups.google.com/group/rest-assured&#34;&gt;Google group&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rest-assured/rest-assured/raw/master/changelog.txt&#34;&gt;Change log&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;REST Assured on &lt;a href=&#34;https://www.openhub.net/p/rest-assured&#34;&gt;openhub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://groups.google.com/group/rest-assured&#34;&gt;Mailing list&lt;/a&gt; for questions and support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/johanhaleby&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/arial-blue.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 42px !important;width: 180px !important;&#34; height=&#34;42px&#34; width=&#34;180px&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>