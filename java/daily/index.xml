<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-28T01:38:47Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>liyupi/yu-auto-reply</title>
    <updated>2023-03-28T01:38:47Z</updated>
    <id>tag:github.com,2023-03-28:/liyupi/yu-auto-reply</id>
    <link href="https://github.com/liyupi/yu-auto-reply" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI 自动回复工具，支持灵活配置多个平台的监控和回答。目前已支持知识星球自动回复、OpenAI（ChatGPT）自动回答&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;yu-auto-reply 自动回复&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;作者：&lt;a href=&#34;https://github.com/liyupi&#34;&gt;程序员鱼皮&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;编程学习圈：&lt;a href=&#34;https://yupi.icu&#34;&gt;编程导航知识星球&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;[toc]&lt;/p&gt; &#xA;&lt;p&gt;基于 Java Spring Boot 的平台监控及自动回复工具，支持灵活地配置多个监控任务，支持一键部署！&lt;/p&gt; &#xA;&lt;p&gt;演示视频：&lt;a href=&#34;https://www.bilibili.com/video/BV1WX4y1o7aL&#34;&gt;https://www.bilibili.com/video/BV1WX4y1o7aL&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yu-auto-reply/master/doc/%E6%BC%94%E7%A4%BA.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目采用多种设计模式，解耦监控者及回答者，可以灵活配置多个不同平台的监控，并绑定不同类型的自动回复。&lt;/p&gt; &#xA;&lt;p&gt;🙏🏻 大家喜欢这个项目的话，感谢动手点点 star，后面作者可能会官方提供更多的平台监控支持。&lt;/p&gt; &#xA;&lt;h2&gt;功能特性&lt;/h2&gt; &#xA;&lt;h3&gt;监控能力&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;知识星球提问监控&lt;/li&gt; &#xA; &lt;li&gt;默认监控（模拟数据）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;回复能力&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenAI 回答（支持自选模型，比如 gpt-4）&lt;/li&gt; &#xA; &lt;li&gt;默认监控（模拟数据）&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;配置能力&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持配置多个任务&lt;/li&gt; &#xA; &lt;li&gt;每个任务可以灵活指定监控和回答方式&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;部署能力&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持 Docker 容器化部署&lt;/li&gt; &#xA; &lt;li&gt;支持 Railway 一键部署&lt;/li&gt; &#xA; &lt;li&gt;支持动态指定环境变量来改变配置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;快速启动&lt;/h2&gt; &#xA;&lt;p&gt;1）修改 &lt;code&gt;application.yml&lt;/code&gt; 配置，主要包含 3 部分：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;openAI 配置（需要有一个 API Key）&lt;/li&gt; &#xA; &lt;li&gt;知识星球配置（需要自行获取 cookie）&lt;/li&gt; &#xA; &lt;li&gt;任务配置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;详细配置如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;# openAI 配置&#xA;# https://platform.openai.com/docs/api-reference&#xA;openai:&#xA;  model: ${OPENAI_MODEL:text-davinci-003}&#xA;  apiKey: ${OPENAI_API_KEY:你的apiKey}&#xA;# 知识星球配置&#xA;# https://zsxq.com/&#xA;zsxq:&#xA;  cookie: ${ZSXQ_COOKIE:你的星球cookie}&#xA;  groupId: ${ZSXQ_GROUP_ID:你的星球id}&#xA;  # 是否提醒提问者&#xA;  silenced: ${ZSXQ_SILENCED:true}&#xA;# 任务配置&#xA;task:&#xA;  # 任务列表，支持配置多个&#xA;  list:&#xA;    - name: task1 #任务名&#xA;      monitor: zsxq #监控者&#xA;      answerer: openai #回答者&#xA;      cron: &#39;0/30 * * * * ?&#39; #执行周期&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2）直接运行主类 &lt;code&gt;MainApplication&lt;/code&gt; 即可&lt;/p&gt; &#xA;&lt;h2&gt;一键部署&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://railway.app/template/BMJMMm?referralCode=tKgj86&#34;&gt;&lt;img src=&#34;https://railway.app/button.svg?sanitize=true&#34; alt=&#34;Deploy on Railway&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;点击上述部署按钮后，会自动识别环境变量，改成自己的就可以了：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yu-auto-reply/master/doc/env.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;架构设计&lt;/h2&gt; &#xA;&lt;p&gt;一图胜千言：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yu-auto-reply/master/doc/%E6%9E%B6%E6%9E%84.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目最关键的设计就是在于 &lt;strong&gt;解耦监控者与回答者&lt;/strong&gt; ，你可以监控任何平台，并且给每个平台绑定不同的自动回答（比如 OpenAI）。&lt;/p&gt; &#xA;&lt;p&gt;实现关键：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;定义 Answerer 回答者接口，统一回答的方法&lt;/li&gt; &#xA; &lt;li&gt;定义 Monitor 监控者接口，统一监控的方法，通过 Answerer 回调参数实现对监控到的消息进行自动回复&lt;/li&gt; &#xA; &lt;li&gt;使用中介者模式，用 JobMediator 类组合 Monitor 和 Answerer，而不是把回答者和监控者强绑定&lt;/li&gt; &#xA; &lt;li&gt;使用工厂模式，根据配置生成监控者和回答者&lt;/li&gt; &#xA; &lt;li&gt;使用 Spring Scheduler，读取 yml 配置来自动创建多任务&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;开发&lt;/h2&gt; &#xA;&lt;h3&gt;自定义监控&lt;/h3&gt; &#xA;&lt;p&gt;1）编写一个类，实现 &lt;code&gt;monitor/Monitor&lt;/code&gt; 抽象类&lt;/p&gt; &#xA;&lt;p&gt;2）修改 &lt;code&gt;factory/MonitorFactory&lt;/code&gt; 的 &lt;code&gt;createMonitor&lt;/code&gt; 方法，补充创建你自己的监控者&lt;/p&gt; &#xA;&lt;h3&gt;自定义回答&lt;/h3&gt; &#xA;&lt;p&gt;1）编写一个类，实现 &lt;code&gt;answerer/Answerer&lt;/code&gt; 接口&lt;/p&gt; &#xA;&lt;p&gt;2）修改 &lt;code&gt;factory/AnswererFactory&lt;/code&gt; 的 &lt;code&gt;createAnswerer&lt;/code&gt; 方法，补充创建你自己的回答者&lt;/p&gt; &#xA;&lt;h2&gt;免费 ChatGPT 交流群&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/liyupi/yu-auto-reply/master/doc/ChatGPT%E4%BA%A4%E6%B5%81.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;欢迎贡献&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;作者平时非常忙&lt;/strong&gt; ，本项目也是仅用了几个小时抽空做的，开源出来给大家参考，但是 PR 和 Issues 响应不会很及时，感谢理解！&lt;/p&gt; &#xA;&lt;p&gt;如有项目本身的问题，欢迎提 issues 和 PR；&lt;/p&gt; &#xA;&lt;p&gt;如有编程方面的问题、或者需要项目教学，请看 &lt;a href=&#34;https://yupi.icu&#34;&gt;编程导航知识星球&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;问答&lt;/h2&gt; &#xA;&lt;p&gt;1）问：为什么先支持知识星球？&lt;/p&gt; &#xA;&lt;p&gt;答：因为 OpenAI 的 API 不是免费的，星球可以限制提问次数，防止刷接口&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gurinmd/ylab-lesson4-template</title>
    <updated>2023-03-28T01:38:47Z</updated>
    <id>tag:github.com,2023-03-28:/gurinmd/ylab-lesson4-template</id>
    <link href="https://github.com/gurinmd/ylab-lesson4-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>hncboy/chatgpt-web-java</title>
    <updated>2023-03-28T01:38:47Z</updated>
    <id>tag:github.com,2023-03-28:/hncboy/chatgpt-web-java</id>
    <link href="https://github.com/hncboy/chatgpt-web-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;chatgpt-web 项目的 java 后台&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;chatgpt-web-java&lt;/h1&gt; &#xA;&lt;h1&gt;分支 main&lt;/h1&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Chanzhaoyu/chatgpt-web&#34;&gt;Chanzhaoyu/chatgpt-web&lt;/a&gt; 项目的 java 后台&lt;/li&gt; &#xA; &lt;li&gt;该分支关联项目的 2.8.5 版本&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;框架&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spring Boot 2.7.10&lt;/li&gt; &#xA; &lt;li&gt;JDK 17&lt;/li&gt; &#xA; &lt;li&gt;SpringDoc 接口文档&lt;/li&gt; &#xA; &lt;li&gt;MyBatis Plus&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PlexPt/chatgpt-java&#34;&gt;PlexPt ChatGPT java sdk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Grt1228/chatgpt-java&#34;&gt;Grt1228 ChatGPT java sdk&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;h3&gt;已实现&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;通过 h2 数据库实现聊天数据存储来实现 apiKey 方式的上下文聊天。&lt;/li&gt; &#xA; &lt;li&gt;聊天记录通过 h2 进行内存存储或持久化&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;待实现&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;配置 dockfile 打包&lt;/li&gt; &#xA; &lt;li&gt;ip 限流&lt;/li&gt; &#xA; &lt;li&gt;异常信息特定封装返回&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;接口&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;路径&lt;/th&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;   &lt;th&gt;完成情况&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/config&lt;/td&gt; &#xA;   &lt;td&gt;获取聊天配置&lt;/td&gt; &#xA;   &lt;td&gt;已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/chat-process&lt;/td&gt; &#xA;   &lt;td&gt;消息处理&lt;/td&gt; &#xA;   &lt;td&gt;已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/verify&lt;/td&gt; &#xA;   &lt;td&gt;校验密码&lt;/td&gt; &#xA;   &lt;td&gt;已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;/session&lt;/td&gt; &#xA;   &lt;td&gt;获取模型信息&lt;/td&gt; &#xA;   &lt;td&gt;已完成&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;地址&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;接口文档：&lt;a href=&#34;http://localhost:3002/swagger-ui.html&#34;&gt;http://localhost:3002/swagger-ui.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;运行&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;根据 application.properties 里的配置，优先 ApiKey 方式&lt;/li&gt; &#xA; &lt;li&gt;项目启动时会自动运行 h2 的建库建表 SQL，默认 file 持久化&lt;/li&gt; &#xA; &lt;li&gt;目前是通过 IDEA 运行，后面配置下 Dockfile&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;表结构&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;聊天室表&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;列名&lt;/th&gt; &#xA;   &lt;th&gt;数据类型&lt;/th&gt; &#xA;   &lt;th&gt;约束&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;id&lt;/td&gt; &#xA;   &lt;td&gt;BIGINT&lt;/td&gt; &#xA;   &lt;td&gt;PRIMARY KEY, AUTO_INCREMENT&lt;/td&gt; &#xA;   &lt;td&gt;主键&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;conversation_id&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;UNIQUE, NULL&lt;/td&gt; &#xA;   &lt;td&gt;对话 id，唯一&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;first_message_id&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;UNIQUE, NULL&lt;/td&gt; &#xA;   &lt;td&gt;第一条消息 id，唯一&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;title&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;对话标题，从第一条消息截取&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;api_type&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(20)&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;API 类型&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;create_time&lt;/td&gt; &#xA;   &lt;td&gt;TIMESTAMP WITH TIME ZONE&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;创建时间&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;update_time&lt;/td&gt; &#xA;   &lt;td&gt;TIMESTAMP WITH TIME ZONE&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;更新时间&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;聊天记录表&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;列名&lt;/th&gt; &#xA;   &lt;th&gt;数据类型&lt;/th&gt; &#xA;   &lt;th&gt;约束&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;message_id&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;PRIMARY KEY&lt;/td&gt; &#xA;   &lt;td&gt;消息 id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;parent_message_id&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;父级消息 id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;parent_answer_message_id&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;父级回答消息 id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;parent_question_message_id&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;父级问题消息 id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;context_count&lt;/td&gt; &#xA;   &lt;td&gt;BIGINT&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;上下文数量&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;question_context_count&lt;/td&gt; &#xA;   &lt;td&gt;BIGINT&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;问题上下文数量&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;message_type&lt;/td&gt; &#xA;   &lt;td&gt;INTEGER&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;消息类型枚举&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chat_room_id&lt;/td&gt; &#xA;   &lt;td&gt;BIGINT&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;聊天室 id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;conversation_id&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;NULL&lt;/td&gt; &#xA;   &lt;td&gt;对话 id&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;api_type&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(20)&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;API 类型&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;api_key&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(255)&lt;/td&gt; &#xA;   &lt;td&gt;NULL&lt;/td&gt; &#xA;   &lt;td&gt;ApiKey&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;content&lt;/td&gt; &#xA;   &lt;td&gt;VARCHAR(5000)&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;消息内容&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;original_data&lt;/td&gt; &#xA;   &lt;td&gt;TEXT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;消息的原始请求或响应数据&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;response_error_data&lt;/td&gt; &#xA;   &lt;td&gt;TEXT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;错误的响应数据&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;prompt_tokens&lt;/td&gt; &#xA;   &lt;td&gt;BIGINT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;输入消息的 tokens&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;completion_tokens&lt;/td&gt; &#xA;   &lt;td&gt;BIGINT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;输出消息的 tokens&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;total_tokens&lt;/td&gt; &#xA;   &lt;td&gt;BIGINT&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;累计 Tokens&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;status&lt;/td&gt; &#xA;   &lt;td&gt;INTEGER&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;聊天记录状态&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;create_time&lt;/td&gt; &#xA;   &lt;td&gt;TIMESTAMP WITH TIME ZONE&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;创建时间&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;update_time&lt;/td&gt; &#xA;   &lt;td&gt;TIMESTAMP WITH TIME ZONE&lt;/td&gt; &#xA;   &lt;td&gt;NOT NULL&lt;/td&gt; &#xA;   &lt;td&gt;更新时间&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>