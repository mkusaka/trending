<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-31T01:35:11Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Stirling-Tools/Stirling-PDF</title>
    <updated>2024-12-31T01:35:11Z</updated>
    <id>tag:github.com,2024-12-31:/Stirling-Tools/Stirling-PDF</id>
    <link href="https://github.com/Stirling-Tools/Stirling-PDF" rel="alternate"></link>
    <summary type="html">&lt;p&gt;locally hosted web application that allows you to perform various operations on PDF files&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Frooodle/Stirling-PDF/main/docs/stirling.png&#34; width=&#34;80&#34;&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h1 align=&#34;center&#34;&gt;Stirling-PDF&lt;/h1&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/frooodle/s-pdf&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/frooodle/s-pdf&#34; alt=&#34;Docker Pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/Cn8pWhQRxZ&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1068636748814483718?label=Discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/v/frooodle/s-pdf/latest&#34; alt=&#34;Docker Image Version (tag latest semver)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Frooodle/stirling-pdf&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/frooodle/stirling-pdf?style=social&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/paypalme/froodleplex&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Paypal%20Donate-yellow?style=flat&amp;amp;logo=paypal&#34; alt=&#34;Paypal Donate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/Frooodle&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Github%20Sponsor-yellow?style=flat&amp;amp;logo=github&#34; alt=&#34;Github Sponser&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cloud.digitalocean.com/apps/new?repo=https://github.com/Frooodle/Stirling-PDF/tree/digitalOcean&amp;amp;refcode=c3210994b1af&#34;&gt;&lt;img src=&#34;https://www.deploytodo.com/do-btn-blue.svg?sanitize=true&#34; alt=&#34;Deploy to DO&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a powerful locally hosted web based PDF manipulation tool using docker that allows you to perform various operations on PDF files, such as splitting merging, converting, reorganizing, adding images, rotating, compressing, and more. This locally hosted web application started as a 100% ChatGPT-made application and has evolved to include a wide range of features to handle all your PDF needs.&lt;/p&gt; &#xA;&lt;p&gt;Stirling PDF makes no outbound calls for any record keeping or tracking.&lt;/p&gt; &#xA;&lt;p&gt;All files and PDFs exist either exclusively on the client side, reside in server memory only during task execution, or temporarily reside in a file solely for the execution of the task. Any file downloaded by the user will have been deleted from the server by that point.&lt;/p&gt; &#xA;&lt;p&gt;Please feel free to submit feature requests or report bugs either through GitHub issues or on our &lt;a href=&#34;https://discord.gg/Cn8pWhQRxZ&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Stirling-Tools/Stirling-PDF/main/images/stirling-home.png&#34; alt=&#34;stirling-home&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dark mode support.&lt;/li&gt; &#xA; &lt;li&gt;Custom download options (see &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/raw/main/images/settings.png&#34;&gt;here&lt;/a&gt; for example)&lt;/li&gt; &#xA; &lt;li&gt;Parallel file processing and downloads&lt;/li&gt; &#xA; &lt;li&gt;API for integration with external scripts&lt;/li&gt; &#xA; &lt;li&gt;Optional Login and Authentication support (see &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/tree/main#login-authentication&#34;&gt;here&lt;/a&gt; for documentation)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;strong&gt;PDF Features&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Page Operations&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;View and modify PDFs - View multi page PDFs with custom viewing sorting and searching. Plus on page edit features like annotate, draw and adding text and images. (Using PDF.js with Joxit and Liberation.Liberation fonts)&lt;/li&gt; &#xA; &lt;li&gt;Full interactive GUI for merging/splitting/rotating/moving PDFs and their pages.&lt;/li&gt; &#xA; &lt;li&gt;Merge multiple PDFs together into a single resultant file.&lt;/li&gt; &#xA; &lt;li&gt;Split PDFs into multiple files at specified page numbers or extract all pages as individual files.&lt;/li&gt; &#xA; &lt;li&gt;Reorganize PDF pages into different orders.&lt;/li&gt; &#xA; &lt;li&gt;Rotate PDFs in 90-degree increments.&lt;/li&gt; &#xA; &lt;li&gt;Remove pages.&lt;/li&gt; &#xA; &lt;li&gt;Multi-page layout (Format PDFs into a multi-paged page).&lt;/li&gt; &#xA; &lt;li&gt;Scale page contents size by set %.&lt;/li&gt; &#xA; &lt;li&gt;Adjust Contrast.&lt;/li&gt; &#xA; &lt;li&gt;Crop PDF.&lt;/li&gt; &#xA; &lt;li&gt;Auto Split PDF (With physically scanned page dividers).&lt;/li&gt; &#xA; &lt;li&gt;Extract page(s).&lt;/li&gt; &#xA; &lt;li&gt;Convert PDF to a single page.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Conversion Operations&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Convert PDFs to and from images.&lt;/li&gt; &#xA; &lt;li&gt;Convert any common file to PDF (using LibreOffice).&lt;/li&gt; &#xA; &lt;li&gt;Convert PDF to Word/Powerpoint/Others (using LibreOffice).&lt;/li&gt; &#xA; &lt;li&gt;Convert HTML to PDF.&lt;/li&gt; &#xA; &lt;li&gt;URL to PDF.&lt;/li&gt; &#xA; &lt;li&gt;Markdown to PDF.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Security &amp;amp; Permissions&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add and remove passwords.&lt;/li&gt; &#xA; &lt;li&gt;Change/set PDF Permissions.&lt;/li&gt; &#xA; &lt;li&gt;Add watermark(s).&lt;/li&gt; &#xA; &lt;li&gt;Certify/sign PDFs.&lt;/li&gt; &#xA; &lt;li&gt;Sanitize PDFs.&lt;/li&gt; &#xA; &lt;li&gt;Auto-redact text.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;Other Operations&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add/Generate/Write signatures.&lt;/li&gt; &#xA; &lt;li&gt;Repair PDFs.&lt;/li&gt; &#xA; &lt;li&gt;Detect and remove blank pages.&lt;/li&gt; &#xA; &lt;li&gt;Compare 2 PDFs and show differences in text.&lt;/li&gt; &#xA; &lt;li&gt;Add images to PDFs.&lt;/li&gt; &#xA; &lt;li&gt;Compress PDFs to decrease their filesize (Using OCRMyPDF).&lt;/li&gt; &#xA; &lt;li&gt;Extract images from PDF.&lt;/li&gt; &#xA; &lt;li&gt;Extract images from Scans.&lt;/li&gt; &#xA; &lt;li&gt;Add page numbers.&lt;/li&gt; &#xA; &lt;li&gt;Auto rename file by detecting PDF header text.&lt;/li&gt; &#xA; &lt;li&gt;OCR on PDF (Using OCRMyPDF).&lt;/li&gt; &#xA; &lt;li&gt;PDF/A conversion (Using OCRMyPDF).&lt;/li&gt; &#xA; &lt;li&gt;Edit metadata.&lt;/li&gt; &#xA; &lt;li&gt;Flatten PDFs.&lt;/li&gt; &#xA; &lt;li&gt;Get all information on a PDF to view or export as JSON.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a overview of the tasks and the technology each uses please view &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/raw/main/Endpoint-groups.md&#34;&gt;Endpoint-groups.md&lt;/a&gt; Hosted instance/demo of the app can be seen &lt;a href=&#34;https://pdf.adminforge.de/&#34;&gt;here&lt;/a&gt; hosted by the team at adminforge.de&lt;/p&gt; &#xA;&lt;h2&gt;Technologies used&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spring Boot + Thymeleaf&lt;/li&gt; &#xA; &lt;li&gt;PDFBox&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.libreoffice.org/discover/libreoffice/&#34;&gt;LibreOffice&lt;/a&gt; for advanced conversions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF&#34;&gt;OcrMyPdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;HTML, CSS, JavaScript&lt;/li&gt; &#xA; &lt;li&gt;Docker&lt;/li&gt; &#xA; &lt;li&gt;PDF.js&lt;/li&gt; &#xA; &lt;li&gt;PDF-LIB.js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;Locally&lt;/h3&gt; &#xA;&lt;p&gt;Please view &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/raw/main/LocalRunGuide.md&#34;&gt;https://github.com/Frooodle/Stirling-PDF/blob/main/LocalRunGuide.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker / Podman&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/frooodle/s-pdf&#34;&gt;https://hub.docker.com/r/frooodle/s-pdf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stirling PDF has 3 different versions, a Full version, Lite, and ultra-Lite. Depending on the types of features you use you may want a smaller image to save on space. To see what the different versions offer please look at our &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/raw/main/Version-groups.md&#34;&gt;version mapping&lt;/a&gt; For people that don&#39;t mind about space optimization just use the latest tag. &lt;img src=&#34;https://img.shields.io/docker/image-size/frooodle/s-pdf/latest?label=Stirling-PDF%20Full&#34; alt=&#34;Docker Image Size (tag)&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/image-size/frooodle/s-pdf/latest-lite?label=Stirling-PDF%20Lite&#34; alt=&#34;Docker Image Size (tag)&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/image-size/frooodle/s-pdf/latest-ultra-lite?label=Stirling-PDF%20Ultra-Lite&#34; alt=&#34;Docker Image Size (tag)&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Docker Run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d \&#xA;  -p 8080:8080 \&#xA;  -v /location/of/trainingData:/usr/share/tesseract-ocr/5/tessdata \&#xA;  -v /location/of/extraConfigs:/configs \&#xA;  -v /location/of/logs:/logs \&#xA;  -e DOCKER_ENABLE_SECURITY=false \&#xA;  --name stirling-pdf \&#xA;  frooodle/s-pdf:latest&#xA;  &#xA;  &#xA;  Can also add these for customisation but are not required&#xA;  &#xA;  -v /location/of/customFiles:/customFiles \&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker Compose&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;version: &#39;3.3&#39;&#xA;services:&#xA;  stirling-pdf:&#xA;    image: frooodle/s-pdf:latest&#xA;    ports:&#xA;      - &#39;8080:8080&#39;&#xA;    volumes:&#xA;      - /location/of/trainingData:/usr/share/tesseract-ocr/5/tessdata #Required for extra OCR languages&#xA;      - /location/of/extraConfigs:/configs&#xA;#      - /location/of/customFiles:/customFiles/&#xA;#      - /location/of/logs:/logs/&#xA;    environment:&#xA;      - DOCKER_ENABLE_SECURITY=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Podman is CLI-compatible with Docker, so simply replace &#34;docker&#34; with &#34;podman&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Enable OCR/Compression feature&lt;/h2&gt; &#xA;&lt;p&gt;Please view &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/raw/main/HowToUseOCR.md&#34;&gt;https://github.com/Frooodle/Stirling-PDF/blob/main/HowToUseOCR.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Want to add your own language?&lt;/h2&gt; &#xA;&lt;p&gt;Stirling PDF currently supports 21!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;English (English) (en_GB)&lt;/li&gt; &#xA; &lt;li&gt;English (US) (en_US)&lt;/li&gt; &#xA; &lt;li&gt;Arabic (العربية) (ar_AR)&lt;/li&gt; &#xA; &lt;li&gt;German (Deutsch) (de_DE)&lt;/li&gt; &#xA; &lt;li&gt;French (Français) (fr_FR)&lt;/li&gt; &#xA; &lt;li&gt;Spanish (Español) (es_ES)&lt;/li&gt; &#xA; &lt;li&gt;Chinese (简体中文) (zh_CN)&lt;/li&gt; &#xA; &lt;li&gt;Catalan (Català) (ca_CA)&lt;/li&gt; &#xA; &lt;li&gt;Italian (Italiano) (it_IT)&lt;/li&gt; &#xA; &lt;li&gt;Swedish (Svenska) (sv_SE)&lt;/li&gt; &#xA; &lt;li&gt;Polish (Polski) (pl_PL)&lt;/li&gt; &#xA; &lt;li&gt;Romanian (Română) (ro_RO)&lt;/li&gt; &#xA; &lt;li&gt;Korean (한국어) (ko_KR)&lt;/li&gt; &#xA; &lt;li&gt;Portuguese Brazilian (Português) (pt_BR)&lt;/li&gt; &#xA; &lt;li&gt;Russian (Русский) (ru_RU)&lt;/li&gt; &#xA; &lt;li&gt;Basque (Euskara) (eu_ES)&lt;/li&gt; &#xA; &lt;li&gt;Japanese (日本語) (ja_JP)&lt;/li&gt; &#xA; &lt;li&gt;Dutch (Nederlands) (nl_NL)&lt;/li&gt; &#xA; &lt;li&gt;Greek (el_GR)&lt;/li&gt; &#xA; &lt;li&gt;Turkish (Türkçe) (tr_TR)&lt;/li&gt; &#xA; &lt;li&gt;Indonesia (Bahasa Indonesia) (id_ID)&lt;/li&gt; &#xA; &lt;li&gt;Hindi (हिंदी) (hi_IN)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to add your own language to Stirling-PDF please refer &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/raw/main/HowToAddNewLanguage.md&#34;&gt;https://github.com/Frooodle/Stirling-PDF/blob/main/HowToAddNewLanguage.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;And please create a PR to merge it back in so others can use it!&lt;/p&gt; &#xA;&lt;h2&gt;How to View&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open a web browser and navigate to &lt;code&gt;http://localhost:8080/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use the application by following the instructions on the website.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Customisation&lt;/h2&gt; &#xA;&lt;p&gt;Stirling PDF allows easy customization of the app. Includes things like&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Custom application name&lt;/li&gt; &#xA; &lt;li&gt;Custom slogans, icons, images, and even custom HTML (via file overrides)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are two options for this, either using the generated settings file &lt;code&gt;settings.yml&lt;/code&gt; This file is located in the &lt;code&gt;/configs&lt;/code&gt; directory and follows standard YAML formatting&lt;/p&gt; &#xA;&lt;p&gt;Environment variables are also supported and would override the settings file For example in the settings.yml you have&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;system:&#xA;  defaultLocale: &#39;en-US&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To have this via an environment variable you would have &lt;code&gt;SYSTEM_DEFAULTLOCALE&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Current list of settings is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;security:&#xA;  enableLogin: false # set to &#39;true&#39; to enable login&#xA;  csrfDisabled: true&#xA;&#xA;system:&#xA;  defaultLocale: &#39;en-US&#39; # Set the default language (e.g. &#39;de-DE&#39;, &#39;fr-FR&#39;, etc)&#xA;  googlevisibility: false # &#39;true&#39; to allow Google visibility (via robots.txt), &#39;false&#39; to disallow&#xA;  customStaticFilePath: &#39;/customFiles/static/&#39; # Directory path for custom static files&#xA;&#xA;#ui:&#xA;#  appName: exampleAppName # Application&#39;s visible name&#xA;#  homeDescription: I am a description # Short description or tagline shown on homepage.&#xA;#  appNameNavbar: navbarName # Name displayed on the navigation bar&#xA;&#xA;endpoints:&#xA;  toRemove: [] # List endpoints to disable (e.g. [&#39;img-to-pdf&#39;, &#39;remove-pages&#39;])&#xA;  groupsToRemove: [] # List groups to disable (e.g. [&#39;LibreOffice&#39;])&#xA;&#xA;metrics:&#xA;  enabled: true # &#39;true&#39; to enable Info APIs endpoints (view http://localhost:8080/swagger-ui/index.html#/API to learn more), &#39;false&#39; to disable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Extra notes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Endpoints. Currently, the endpoints ENDPOINTS_TO_REMOVE and GROUPS_TO_REMOVE can include comma separate lists of endpoints and groups to disable as example ENDPOINTS_TO_REMOVE=img-to-pdf,remove-pages would disable both image-to-pdf and remove pages, GROUPS_TO_REMOVE=LibreOffice Would disable all things that use LibreOffice. You can see a list of all endpoints and groups &lt;a href=&#34;https://github.com/Frooodle/Stirling-PDF/raw/main/Endpoint-groups.md&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;customStaticFilePath. Customise static files such as the app logo by placing files in the /customFiles/static/ directory. An example of customising app logo is placing a /customFiles/static/favicon.svg to override current SVG. This can be used to change any images/icons/css/fonts/js etc in Stirling-PDF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Environment only parameters&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSTEM_ROOTURIPATH&lt;/code&gt; ie set to &lt;code&gt;/pdf-app&lt;/code&gt; to Set the application&#39;s root URI to &lt;code&gt;localhost:8080/pdf-app&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SYSTEM_CONNECTIONTIMEOUTMINUTES&lt;/code&gt; to set custom connection timeout values&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DOCKER_ENABLE_SECURITY&lt;/code&gt; to tell docker to download security jar (required as true for auth login)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;For those wanting to use Stirling-PDFs backend API to link with their own custom scripting to edit PDFs you can view all existing API documentation &lt;a href=&#34;https://app.swaggerhub.com/apis-docs/Frooodle/Stirling-PDF/&#34;&gt;here&lt;/a&gt; or navigate to /swagger-ui/index.html of your stirling-pdf instance for your versions documentation (Or by following the API button in your settings of Stirling-PDF)&lt;/p&gt; &#xA;&lt;h2&gt;Login authentication&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Stirling-Tools/Stirling-PDF/main/images/login-light.png&#34; alt=&#34;stirling-login&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User must have the folder ./configs volumed within docker so that it is retained during updates.&lt;/li&gt; &#xA; &lt;li&gt;Docker uses must download the security jar version by setting &lt;code&gt;DOCKER_ENABLE_SECURITY&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in environment variables.&lt;/li&gt; &#xA; &lt;li&gt;Then either enable login via the settings.yml file or via setting &lt;code&gt;SECURITY_ENABLE_LOGIN&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Now the initial user will be generated with username &lt;code&gt;admin&lt;/code&gt; and password &lt;code&gt;stirling&lt;/code&gt;. On login you will be forced to change the password to a new one. You can also use the environment variables &lt;code&gt;SECURITY_INITIALLOGIN_USERNAME&lt;/code&gt; and &lt;code&gt;SECURITY_INITIALLOGIN_PASSWORD&lt;/code&gt; to set your own straight away (Recommended to remove them after user creation).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once the above has been done, on restart, a new stirling-pdf-DB.mv.db will show if everything worked.&lt;/p&gt; &#xA;&lt;p&gt;When you login to Stirling PDF you will be redirected to /login page to login with those default credentials. After login everything should function as normal&lt;/p&gt; &#xA;&lt;p&gt;To access your account settings go to Account settings in the settings cog menu (top right in navbar) This Account settings menu is also where you find your API key.&lt;/p&gt; &#xA;&lt;p&gt;To add new users go to the bottom of Account settings and hit &#39;Admin Settings&#39;, here you can add new users. The different roles mentioned within this are for rate limiting. This is a Work in progress which will be expanding on more in future&lt;/p&gt; &#xA;&lt;p&gt;For API usage you must provide a header with &#39;X-API-Key&#39; and the associated API key for that user.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Q1: What are your planned features?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Progress bar/Tracking&lt;/li&gt; &#xA; &lt;li&gt;Full custom logic pipelines to combine multiple operations together.&lt;/li&gt; &#xA; &lt;li&gt;Folder support with auto scanning to perform operations on&lt;/li&gt; &#xA; &lt;li&gt;Redact text (Via UI not just automated way)&lt;/li&gt; &#xA; &lt;li&gt;Add Forms&lt;/li&gt; &#xA; &lt;li&gt;Multi page layout (Stich PDF pages together) support x rows y columns and custom page sizing&lt;/li&gt; &#xA; &lt;li&gt;Fill forms mannual and automatic&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Q2: Why is my application downloading .htm files?&lt;/h3&gt; &#xA;&lt;p&gt;This is an issue caused commonly by your NGINX configuration. The default file upload size for NGINX is 1MB, you need to add the following in your Nginx sites-available file. &lt;code&gt;client_max_body_size SIZE;&lt;/code&gt; Where &#34;SIZE&#34; is 50M for example for 50MB files.&lt;/p&gt; &#xA;&lt;h3&gt;Q3: Why is my download timing out&lt;/h3&gt; &#xA;&lt;p&gt;NGINX has timeout values by default so if you are running Stirling-PDF behind NGINX you may need to set a timeout value such as adding the config &lt;code&gt;proxy_read_timeout 3600;&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/incubator-fury</title>
    <updated>2024-12-31T01:35:11Z</updated>
    <id>tag:github.com,2024-12-31:/apache/incubator-fury</id>
    <link href="https://github.com/apache/incubator-fury" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A blazing fast multi-language serialization framework powered by JIT and zero-copy.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;65%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/images/logo/fury_github_banner.png&#34;&gt;&#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/incubator-fury/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/apache/incubator-fury/ci.yml?branch=main&amp;amp;style=for-the-badge&amp;amp;label=GITHUB%20ACTIONS&amp;amp;logo=github&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/fury-project/shared_invite/zt-1u8soj4qc-ieYEu7ciHOqA2mo47llS8A&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-3f0e40?logo=slack&amp;amp;style=for-the-badge&#34; alt=&#34;Slack Channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ApacheFury&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/@ApacheFury-follow-blue?logo=twitter&amp;amp;style=for-the-badge&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/#search%7Cgav%7C1%7Cg:%22org.furyio%22%20AND%20a:%22fury-core%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.furyio/fury-core?style=for-the-badge&#34; alt=&#34;Maven Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Apache Fury (incubating)&lt;/strong&gt; is a blazing-fast multi-language serialization framework powered by &lt;strong&gt;JIT&lt;/strong&gt; (just-in-time compilation) and &lt;strong&gt;zero-copy&lt;/strong&gt;, providing up to 170x performance and ultimate ease of use.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://fury.apache.org&#34;&gt;https://fury.apache.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple languages&lt;/strong&gt;: Java/Python/C++/Golang/JavaScript/Rust/Scala/TypeScript.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zero-copy&lt;/strong&gt;: Cross-language out-of-band serialization inspired by &lt;a href=&#34;https://peps.python.org/pep-0574/&#34;&gt;pickle5&lt;/a&gt; and off-heap read/write.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High performance&lt;/strong&gt;: A highly-extensible JIT framework to generate serializer code at runtime in an async multi-thread way to speed serialization, providing 20-170x speed up by: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;reduce memory access by inlining variables in generated code.&lt;/li&gt; &#xA;   &lt;li&gt;reduce virtual method invocation by inline call in generated code.&lt;/li&gt; &#xA;   &lt;li&gt;reduce conditional branching.&lt;/li&gt; &#xA;   &lt;li&gt;reduce hash lookup.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multiple binary protocols&lt;/strong&gt;: Object graph, row format, and so on.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition to cross-language serialization, Fury also features at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Drop-in replace Java serialization frameworks such as JDK/Kryo/Hessian without modifying any code, but 100x faster. It can greatly improve the efficiency of high-performance RPC calls, data transfer, and object persistence.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;100% compatible&lt;/strong&gt; with JDK serialization API with much faster implementation: supporting JDK &lt;code&gt;writeObject/readObject/writeReplace/readResolve/readObjectNoData/Externalizable&lt;/code&gt; API.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;strong&gt;Java 8~21&lt;/strong&gt;, Java 17+ &lt;code&gt;record&lt;/code&gt; is supported too.&lt;/li&gt; &#xA; &lt;li&gt;Support &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/guide/graalvm_guide.md&#34;&gt;AOT compilation serialization&lt;/a&gt; for &lt;strong&gt;GraalVM native image&lt;/strong&gt;, and no reflection/serialization json config are needed.&lt;/li&gt; &#xA; &lt;li&gt;Supports shared and circular reference object serialization for golang.&lt;/li&gt; &#xA; &lt;li&gt;Supports &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/guide/scala_guide.md&#34;&gt;scala serialization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Supports automatic object serialization for golang.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Protocols&lt;/h2&gt; &#xA;&lt;p&gt;Different scenarios have different serialization requirements. Fury designed and implemented multiple binary protocols for those requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-language object graph protocol&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Cross-language serialize any object automatically, no need for IDL definition, schema compilation and object to/from protocol conversion.&lt;/li&gt; &#xA;   &lt;li&gt;Support shared reference and circular reference, no duplicate data or recursion error.&lt;/li&gt; &#xA;   &lt;li&gt;Support object polymorphism.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Native java/python object graph protocol&lt;/strong&gt;: Highly-optimized based on type system of the language.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Row format protocol&lt;/strong&gt;: A cache-friendly binary random access format, supports skipping serialization and partial serialization, and can convert to column-format automatically.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;New protocols can be easily added based on fury existing buffer, encoding, meta, codegen and other capabilities. All of those share the same codebase, and the optimization for one protocol can be reused by another protocol.&lt;/p&gt; &#xA;&lt;h2&gt;Benchmarks&lt;/h2&gt; &#xA;&lt;p&gt;Different serialization frameworks are suitable for different scenarios, and benchmark results here are for reference only.&lt;/p&gt; &#xA;&lt;p&gt;If you need to benchmark for your specific scenario, make sure all serialization frameworks are appropriately configured for that scenario.&lt;/p&gt; &#xA;&lt;p&gt;Dynamic serialization frameworks support polymorphism and references, but they often come with a higher cost compared to static serialization frameworks, unless they utilize JIT techniques like Fury does. Because Fury generates code at runtime, it is recommended to &lt;strong&gt;warm up&lt;/strong&gt; the system before collecting benchmark statistics.&lt;/p&gt; &#xA;&lt;h3&gt;Java Serialization&lt;/h3&gt; &#xA;&lt;p&gt;Title containing &#34;compatible&#34; represent schema compatible mode: support type forward/backward compatibility.&lt;/p&gt; &#xA;&lt;p&gt;Title without &#34;compatible&#34; represent schema consistent mode: class schema must be the same between serialization and deserialization.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Struct&lt;/code&gt; is a class with &lt;a href=&#34;https://github.com/apache/incubator-fury/tree/main/docs/benchmarks#Struct&#34;&gt;100 primitive fields&lt;/a&gt;, &lt;code&gt;MediaContent&lt;/code&gt; is a class from &lt;a href=&#34;https://github.com/eishay/jvm-serializers/raw/master/tpc/src/data/media/MediaContent.java&#34;&gt;jvm-serializers&lt;/a&gt;, &lt;code&gt;Sample&lt;/code&gt; is a class from &lt;a href=&#34;https://github.com/EsotericSoftware/kryo/raw/master/benchmarks/src/main/java/com/esotericsoftware/kryo/benchmarks/data/Sample.java&#34;&gt;kryo benchmark&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;24%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/benchmarks/compatible/bench_serialize_compatible_STRUCT_to_directBuffer_tps.png&#34;&gt; &lt;img width=&#34;24%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/benchmarks/compatible/bench_serialize_compatible_MEDIA_CONTENT_to_array_tps.png&#34;&gt; &lt;img width=&#34;24%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/benchmarks/serialization/bench_serialize_MEDIA_CONTENT_to_array_tps.png&#34;&gt; &lt;img width=&#34;24%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/benchmarks/serialization/bench_serialize_SAMPLE_to_array_tps.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;24%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/benchmarks/compatible/bench_deserialize_compatible_STRUCT_from_directBuffer_tps.png&#34;&gt; &lt;img width=&#34;24%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/benchmarks/compatible/bench_deserialize_compatible_MEDIA_CONTENT_from_array_tps.png&#34;&gt; &lt;img width=&#34;24%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/benchmarks/deserialization/bench_deserialize_MEDIA_CONTENT_from_array_tps.png&#34;&gt; &lt;img width=&#34;24%&#34; alt=&#34;&#34; src=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/benchmarks/deserialization/bench_deserialize_SAMPLE_from_array_tps.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/apache/incubator-fury/tree/main/docs/benchmarks&#34;&gt;benchmarks&lt;/a&gt; for more benchmarks about type forward/backward compatibility, off-heap support, zero-copy serialization.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Java&lt;/h3&gt; &#xA;&lt;p&gt;Nightly snapshot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;repositories&amp;gt;&#xA;  &amp;lt;repository&amp;gt;&#xA;    &amp;lt;id&amp;gt;apache&amp;lt;/id&amp;gt;&#xA;    &amp;lt;url&amp;gt;https://repository.apache.org/snapshots/&amp;lt;/url&amp;gt;&#xA;    &amp;lt;releases&amp;gt;&#xA;      &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&#xA;    &amp;lt;/releases&amp;gt;&#xA;    &amp;lt;snapshots&amp;gt;&#xA;      &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;&#xA;    &amp;lt;/snapshots&amp;gt;&#xA;  &amp;lt;/repository&amp;gt;&#xA;&amp;lt;/repositories&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.apache.fury&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;fury-core&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;0.5.0-SNAPSHOT&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;!-- row/arrow format support --&amp;gt;&#xA;&amp;lt;!-- &amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.apache.fury&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;fury-format&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;0.5.0-SNAPSHOT&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt; --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Release version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.furyio&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;fury-core&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;0.4.1&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;!-- row/arrow format support --&amp;gt;&#xA;&amp;lt;!-- &amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.furyio&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;fury-format&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;0.4.1&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt; --&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Maven groupId will be changed to &lt;code&gt;org.apache.fury&lt;/code&gt; when next version is released.&lt;/p&gt; &#xA;&lt;h3&gt;Scala&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sbt&#34;&gt;libraryDependencies += &#34;org.furyio&#34; % &#34;fury-core&#34; % &#34;0.4.1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install pyfury&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JavaScript&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install @furyjs/fury&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Golang&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get github.com/apache/incubator-fury/go/fury&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Here we give a quick start about how to use fury, see &lt;a href=&#34;https://github.com/apache/incubator-fury/raw/main/docs/README.md&#34;&gt;user guide&lt;/a&gt; for more details about &lt;a href=&#34;https://github.com/apache/incubator-fury/raw/main/docs/guide/java_object_graph_guide.md&#34;&gt;java&lt;/a&gt;, &lt;a href=&#34;https://github.com/apache/incubator-fury/raw/main/docs/guide/xlang_object_graph_guide.md&#34;&gt;cross language&lt;/a&gt;, and &lt;a href=&#34;https://github.com/apache/incubator-fury/raw/main/docs/guide/row_format_guide.md&#34;&gt;row format&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Fury java object graph serialization&lt;/h3&gt; &#xA;&lt;p&gt;If you don&#39;t have cross-language requirements, using this mode will have better performance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import org.apache.fury.*;&#xA;import org.apache.fury.config.*;&#xA;import java.util.*;&#xA;&#xA;public class Example {&#xA;  public static void main(String[] args) {&#xA;    SomeClass object = new SomeClass();&#xA;    // Note that Fury instances should be reused between &#xA;    // multiple serializations of different objects.&#xA;    {&#xA;      Fury fury = Fury.builder().withLanguage(Language.JAVA)&#xA;        // Allow to deserialize objects unknown types, more flexible &#xA;        // but may be insecure if the classes contains malicious code.&#xA;        .requireClassRegistration(true)&#xA;        .build();&#xA;      // Registering types can reduce class name serialization overhead, but not mandatory.&#xA;      // If class registration enabled, all custom types must be registered.&#xA;      fury.register(SomeClass.class);&#xA;      byte[] bytes = fury.serialize(object);&#xA;      System.out.println(fury.deserialize(bytes));&#xA;    }&#xA;    {&#xA;      ThreadSafeFury fury = Fury.builder().withLanguage(Language.JAVA)&#xA;        // Allow to deserialize objects unknown types, more flexible &#xA;        // but may be insecure if the classes contains malicious code.&#xA;        .requireClassRegistration(true)&#xA;        .buildThreadSafeFury();&#xA;      byte[] bytes = fury.serialize(object);&#xA;      System.out.println(fury.deserialize(bytes));&#xA;    }&#xA;    {&#xA;      ThreadSafeFury fury = new ThreadLocalFury(classLoader -&amp;gt; {&#xA;        Fury f = Fury.builder().withLanguage(Language.JAVA)&#xA;          .withClassLoader(classLoader).build();&#xA;        f.register(SomeClass.class);&#xA;        return f;&#xA;      });&#xA;      byte[] bytes = fury.serialize(object);&#xA;      System.out.println(fury.deserialize(bytes));&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cross-language object graph serialization&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import org.apache.fury.*;&#xA;import org.apache.fury.config.*;&#xA;import java.util.*;&#xA;&#xA;public class ReferenceExample {&#xA;  public static class SomeClass {&#xA;    SomeClass f1;&#xA;    Map&amp;lt;String, String&amp;gt; f2;&#xA;    Map&amp;lt;String, String&amp;gt; f3;&#xA;  }&#xA;&#xA;  public static Object createObject() {&#xA;    SomeClass obj = new SomeClass();&#xA;    obj.f1 = obj;&#xA;    obj.f2 = ofHashMap(&#34;k1&#34;, &#34;v1&#34;, &#34;k2&#34;, &#34;v2&#34;);&#xA;    obj.f3 = obj.f2;&#xA;    return obj;&#xA;  }&#xA;&#xA;  // mvn exec:java -Dexec.mainClass=&#34;org.apache.fury.examples.ReferenceExample&#34;&#xA;  public static void main(String[] args) {&#xA;    Fury fury = Fury.builder().withLanguage(Language.XLANG)&#xA;      .withRefTracking(true).build();&#xA;    fury.register(SomeClass.class, &#34;example.SomeClass&#34;);&#xA;    byte[] bytes = fury.serialize(createObject());&#xA;    // bytes can be data serialized by other languages.&#xA;    System.out.println(fury.deserialize(bytes));&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from typing import Dict&#xA;import pyfury&#xA;&#xA;class SomeClass:&#xA;    f1: &#34;SomeClass&#34;&#xA;    f2: Dict[str, str]&#xA;    f3: Dict[str, str]&#xA;&#xA;fury = pyfury.Fury(ref_tracking=True)&#xA;fury.register_class(SomeClass, type_tag=&#34;example.SomeClass&#34;)&#xA;obj = SomeClass()&#xA;obj.f2 = {&#34;k1&#34;: &#34;v1&#34;, &#34;k2&#34;: &#34;v2&#34;}&#xA;obj.f1, obj.f3 = obj, obj.f2&#xA;data = fury.serialize(obj)&#xA;# bytes can be data serialized by other languages.&#xA;print(fury.deserialize(data))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Golang&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main&#xA;&#xA;import furygo &#34;github.com/apache/incubator-fury/go/fury&#34;&#xA;import &#34;fmt&#34;&#xA;&#xA;func main() {&#xA;&#x9;type SomeClass struct {&#xA;&#x9;&#x9;F1 *SomeClass&#xA;&#x9;&#x9;F2 map[string]string&#xA;&#x9;&#x9;F3 map[string]string&#xA;&#x9;}&#xA;&#x9;fury := furygo.NewFury(true)&#xA;&#x9;if err := fury.RegisterTagType(&#34;example.SomeClass&#34;, SomeClass{}); err != nil {&#xA;&#x9;&#x9;panic(err)&#xA;&#x9;}&#xA;&#x9;value := &amp;amp;SomeClass{F2: map[string]string{&#34;k1&#34;: &#34;v1&#34;, &#34;k2&#34;: &#34;v2&#34;}}&#xA;&#x9;value.F3 = value.F2&#xA;&#x9;value.F1 = value&#xA;&#x9;bytes, err := fury.Marshal(value)&#xA;&#x9;if err != nil {&#xA;&#x9;}&#xA;&#x9;var newValue interface{}&#xA;&#x9;// bytes can be data serialized by other languages.&#xA;&#x9;if err := fury.Unmarshal(bytes, &amp;amp;newValue); err != nil {&#xA;&#x9;&#x9;panic(err)&#xA;&#x9;}&#xA;&#x9;fmt.Println(newValue)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Row format&lt;/h3&gt; &#xA;&lt;h4&gt;Java&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Bar {&#xA;  String f1;&#xA;  List&amp;lt;Long&amp;gt; f2;&#xA;}&#xA;&#xA;public class Foo {&#xA;  int f1;&#xA;  List&amp;lt;Integer&amp;gt; f2;&#xA;  Map&amp;lt;String, Integer&amp;gt; f3;&#xA;  List&amp;lt;Bar&amp;gt; f4;&#xA;}&#xA;&#xA;RowEncoder&amp;lt;Foo&amp;gt; encoder = Encoders.bean(Foo.class);&#xA;Foo foo = new Foo();&#xA;foo.f1 = 10;&#xA;foo.f2 = IntStream.range(0, 1000000).boxed().collect(Collectors.toList());&#xA;foo.f3 = IntStream.range(0, 1000000).boxed().collect(Collectors.toMap(i -&amp;gt; &#34;k&#34;+i, i-&amp;gt;i));&#xA;List&amp;lt;Bar&amp;gt; bars = new ArrayList&amp;lt;&amp;gt;(1000000);&#xA;for (int i = 0; i &amp;lt; 1000000; i++) {&#xA;  Bar bar = new Bar();&#xA;  bar.f1 = &#34;s&#34;+i;&#xA;  bar.f2 = LongStream.range(0, 10).boxed().collect(Collectors.toList());&#xA;  bars.add(bar);&#xA;}&#xA;foo.f4 = bars;&#xA;// Can be zero-copy read by python&#xA;BinaryRow binaryRow = encoder.toRow(foo);&#xA;// can be data from python&#xA;Foo newFoo = encoder.fromRow(binaryRow);&#xA;// zero-copy read List&amp;lt;Integer&amp;gt; f2&#xA;BinaryArray binaryArray2 = binaryRow.getArray(1);&#xA;// zero-copy read List&amp;lt;Bar&amp;gt; f4&#xA;BinaryArray binaryArray4 = binaryRow.getArray(3);&#xA;// zero-copy read 11th element of `readList&amp;lt;Bar&amp;gt; f4`&#xA;BinaryRow barStruct = binaryArray4.getStruct(10);&#xA;&#xA;// zero-copy read 6th of f2 of 11th element of `readList&amp;lt;Bar&amp;gt; f4`&#xA;barStruct.getArray(1).getLong(5);&#xA;RowEncoder&amp;lt;Bar&amp;gt; barEncoder = Encoders.bean(Bar.class);&#xA;// deserialize part of data.&#xA;Bar newBar = barEncoder.fromRow(barStruct);&#xA;Bar newBar2 = barEncoder.fromRow(binaryArray4.getStruct(20));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Python&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;@dataclass&#xA;class Bar:&#xA;    f1: str&#xA;    f2: List[pa.int64]&#xA;@dataclass&#xA;class Foo:&#xA;    f1: pa.int32&#xA;    f2: List[pa.int32]&#xA;    f3: Dict[str, pa.int32]&#xA;    f4: List[Bar]&#xA;&#xA;encoder = pyfury.encoder(Foo)&#xA;foo = Foo(f1=10, f2=list(range(1000_000)),&#xA;         f3={f&#34;k{i}&#34;: i for i in range(1000_000)},&#xA;         f4=[Bar(f1=f&#34;s{i}&#34;, f2=list(range(10))) for i in range(1000_000)])&#xA;binary: bytes = encoder.to_row(foo).to_bytes()&#xA;foo_row = pyfury.RowData(encoder.schema, binary)&#xA;print(foo_row.f2[100000], foo_row.f4[100000].f1, foo_row.f4[200000].f2[5])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;h3&gt;Schema Compatibility&lt;/h3&gt; &#xA;&lt;p&gt;Fury java object graph serialization support class schema forward/backward compatibility. The serialization peer and deserialization peer can add/delete fields independently.&lt;/p&gt; &#xA;&lt;p&gt;We plan to add support cross-language serialization after &lt;a href=&#34;https://github.com/apache/incubator-fury/issues/203&#34;&gt;meta compression&lt;/a&gt; is finished.&lt;/p&gt; &#xA;&lt;h3&gt;Binary Compatibility&lt;/h3&gt; &#xA;&lt;p&gt;We are still improving our protocols, binary compatibility is not ensured between fury major releases for now. it&#39;s ensured between minor versions only. Please &lt;code&gt;versioning&lt;/code&gt; your data by fury major version if you will upgrade fury in the future, see &lt;a href=&#34;https://github.com/apache/incubator-fury/raw/main/docs/guide/java_object_graph_guide.md#upgrade-fury&#34;&gt;how to upgrade fury&lt;/a&gt; for further details.&lt;/p&gt; &#xA;&lt;p&gt;Binary compatibility will be ensured when fury 1.0 is released.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Static serialization is secure. But dynamic serialization such as fury java/python native serialization supports deserializing unregistered types, which provides more dynamics and flexibility, but also introduce security risks.&lt;/p&gt; &#xA;&lt;p&gt;For example, the deserialization may invoke &lt;code&gt;init&lt;/code&gt; constructor or &lt;code&gt;equals&lt;/code&gt;/&lt;code&gt;hashCode&lt;/code&gt; method, if the method body contains malicious code, the system will be at risk.&lt;/p&gt; &#xA;&lt;p&gt;Fury provides a class registration option that is enabled by default for such protocols, allowing only deserialization of trusted registered types or built-in types. &lt;strong&gt;Do not disable class registration unless you can ensure your environment is secure&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If this option is disabled, you are responsible for serialization security. You can configure &lt;code&gt;org.apache.fury.resolver.ClassChecker&lt;/code&gt; by &lt;code&gt;ClassResolver#setClassChecker&lt;/code&gt; to control which classes are allowed for serialization.&lt;/p&gt; &#xA;&lt;h2&gt;How to Build&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/docs/guide/DEVELOPMENT.md&#34;&gt;BUILD&lt;/a&gt; guide for instructions on how to build.&lt;/p&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; guide for instructions on how to contribute.&lt;/p&gt; &#xA;&lt;p&gt;For ecosystem projects, please see &lt;a href=&#34;https://github.com/fury-project&#34;&gt;https://github.com/fury-project&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-fury/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>