<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-22T01:33:54Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>open-pdf-sign/open-pdf-sign</title>
    <updated>2022-12-22T01:33:54Z</updated>
    <id>tag:github.com,2022-12-22:/open-pdf-sign/open-pdf-sign</id>
    <link href="https://github.com/open-pdf-sign/open-pdf-sign" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Digitally sign PDF files from your commandline&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;open-pdf-sign&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;open-pdf-sign&lt;/code&gt; CLI application allows to easily sign PDF files from the commandline. Signatures can be invisible or visible, and visible signatures can be customized.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visible PDF signature in PDF (multi language support)&lt;/li&gt; &#xA; &lt;li&gt;Invoke via CLI or via starting a server&lt;/li&gt; &#xA; &lt;li&gt;Supported Signature type: PAdES&lt;/li&gt; &#xA; &lt;li&gt;Supported Signature profiles: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;BASELINE-B&lt;/li&gt; &#xA;   &lt;li&gt;BASELINE-T&lt;/li&gt; &#xA;   &lt;li&gt;To be evaluated: BASELINE-LT, BASELINE-LTA&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Started&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest jar archive from the &lt;a href=&#34;https://github.com/open-pdf-sign/open-pdf-sign/releases&#34;&gt;GitHub releases page&lt;/a&gt; or in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -L https://github.com/open-pdf-sign/open-pdf-sign/releases/latest/download/open-pdf-sign.jar -o open-pdf-sign.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure that Java is installed in at least version 8.&lt;/p&gt; &#xA;&lt;h3&gt;Run&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;java -jar open-pdf-sign.jar -i input.pdf -o output.pdf -c certificate.crt -k keyfile.pem -p key_passphrase --page -1 --locale de-AT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  Options:&#xA;    -b, --binary&#xA;      binary output of PDF&#xA;      Default: false&#xA;    -c, --certificate&#xA;      certificate (chain) to be used&#xA;    --config&#xA;      use a configuration file&#xA;    --hint&#xA;      text to be displayed in signature field&#xA;    --host&#xA;      run as server with the given hostname&#xA;    --image&#xA;      Image to be placed in signature block&#xA;    -i, --input&#xA;      input pdf file&#xA;    -k, --key&#xA;      signature key file or keystore&#xA;    --left&#xA;      X coordinate of the signature block in cm&#xA;      Default: 1.0&#xA;    -l, --locale&#xA;      Locale, e.g. de-AT&#xA;    -o, --output&#xA;      output pdf file&#xA;    --page&#xA;      Page where the signature block should be placed. [-1] for last page&#xA;    -p, --passphrase&#xA;      passphrase for the signature key or keystore&#xA;    --port&#xA;      run as server with the given port&#xA;      Default: 8090&#xA;    --timestamp&#xA;      include signed timestamp&#xA;      Default: false&#xA;    --timezone&#xA;      use specific timezone for time info, e.g. Europe/Vienna&#xA;    --top&#xA;      Y coordinate of the signature block in cm&#xA;      Default: 1.0&#xA;    --tsa&#xA;      use specific time stamping authority as source (if multiple given, will &#xA;      be used in given order as fallback)&#xA;      Default: []&#xA;    --width&#xA;      width of the signature block in cm&#xA;      Default: 10.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage with Let&#39;s Encrypt certificates&lt;/h3&gt; &#xA;&lt;p&gt;PDFs can also be signed using your existing Let&#39;s Encrypt certificate.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -jar open-pdf-sign.jar -i input.pdf -o output.pdf \&#xA;  -c /etc/letsencrypt/live/openpdfsign.org/fullchain.pem \&#xA;  -k /etc/letsencrypt/live/openpdfsign.org/privkey.pem&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Visible signatures&lt;/h3&gt; &#xA;&lt;p&gt;If the &lt;code&gt;page&lt;/code&gt; parameter is specified, a visible signature will be placed on the specified page. For example, running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -jar open-pdf-sign.jar -i input.pdf -o output.pdf \&#xA;     -c certificate.crt \&#xA;     -k key.pem \&#xA;     --page -1 --image mylogo.png \&#xA;     --hint &#34;You can check the validity at signaturpruefung.gv.at&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;will place a visible signature looking similar to the image below on the last page (&lt;code&gt;-1&lt;/code&gt;) of the PDF document.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.openpdfsign.org/images/signature.png&#34; alt=&#34;signature image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage in server mode&lt;/h3&gt; &#xA;&lt;p&gt;You can also run open-pdf-sign as a server application in order to only load certificates once and easily integrate it in applications where CLI invocations are not possible. Simply add the &lt;code&gt;--port&lt;/code&gt; or &lt;code&gt;--hostname&lt;/code&gt; parameters, e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -jar open-pdf-sign.jar -i input.pdf -o output.pdf \&#xA;  -c /etc/letsencrypt/live/openpdfsign.org/fullchain.pem \&#xA;  -k /etc/letsencrypt/live/openpdfsign.org/privkey.pem&#xA;  --port 8090 --hostname 127.0.0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, PDFs can be signed via the &lt;a href=&#34;https://raw.githubusercontent.com/open-pdf-sign/open-pdf-sign/master/src/main/resources/openapi.yml&#34;&gt;specified&lt;/a&gt; &lt;code&gt;/pdf&lt;/code&gt; endpoint:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --location --request POST &#39;http://localhost:8090/&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--data-raw &#39;{&#xA;  &#34;input&#34;: &#34;/path/to/pdf.pdf&#34;&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using a config file&lt;/h3&gt; &#xA;&lt;p&gt;Instead of CLI parameters, you can also submit a configuration file with the same parameters and the possibility to lead multiple keys, as shown in &lt;a href=&#34;https://raw.githubusercontent.com/open-pdf-sign/open-pdf-sign/master/src/test/resources/test-config.yml&#34;&gt;this example&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -jar open-pdf-sign.jar --config /path/to/config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Maven (&lt;a href=&#34;https://maven.apache.org/&#34;&gt;https://maven.apache.org/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;JDK 8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/open-pdf-sign/open-pdf-sign/master/LICENSE&#34;&gt;Apache 2.0-License&lt;/a&gt;.&lt;br&gt; The code contained in the &lt;a href=&#34;https://github.com/open-pdf-sign/open-pdf-sign/tree/master/src/main/java/org/openpdfsign/dss&#34;&gt;org/openpdfsign/dss subfolder&lt;/a&gt; extends and modifies code from the &lt;a href=&#34;https://github.com/esig/dss/&#34;&gt;dss project&lt;/a&gt; which is licensed under the &lt;a href=&#34;https://github.com/esig/dss/raw/master/LICENSE&#34;&gt;LGPL-2.1 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/maven-mvnd</title>
    <updated>2022-12-22T01:33:54Z</updated>
    <id>tag:github.com,2022-12-22:/apache/maven-mvnd</id>
    <link href="https://github.com/apache/maven-mvnd" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Maven Daemon&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;mvnd&lt;/code&gt; - the Maven Daemon&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;imageblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;a class=&#34;image&#34; href=&#34;https://twitter.com/mvndaemon&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/twitter.com/mvndaemon.svg?style=social&amp;amp;label=Follow%20%40mvndaemon&#34; alt=&#34;mvndaemon&#34;&gt;&lt;/a&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt; &#xA;   &lt;div id=&#34;toctitle&#34; class=&#34;title&#34;&gt;&#xA;    Table of Contents&#xA;   &lt;/div&gt; &#xA;   &lt;ul class=&#34;sectlevel1&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_additional_features&#34;&gt;Additional features&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_how_to_install_mvnd&#34;&gt;How to install &lt;code&gt;mvnd&lt;/code&gt;&lt;/a&gt; &#xA;     &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_install_using_sdkman&#34;&gt;Install using SDKMAN!&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_install_using_homebrew&#34;&gt;Install using Homebrew&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_install_using_macports&#34;&gt;Install using MacPorts&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_install_using_chocolatey&#34;&gt;Install using Chocolatey&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_install_using_scoop&#34;&gt;Install using Scoop&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_install_using_asdf&#34;&gt;Install using asdf&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_set_up_completion&#34;&gt;Set up completion&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_note_for_oh_my_zsh_users&#34;&gt;Note for oh-my-zsh users&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_install_manually&#34;&gt;Install manually&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_mvnd_specific_options&#34;&gt;&lt;code&gt;mvnd&lt;/code&gt; specific options&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_build_mvnd_from_source&#34;&gt;Build &lt;code&gt;mvnd&lt;/code&gt; from source&lt;/a&gt; &#xA;     &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_prerequisites&#34;&gt;Prerequisites:&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_build_mvnd&#34;&gt;Build &lt;code&gt;mvnd&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/maven-mvnd/master/#_install_mvnd&#34;&gt;Install &lt;code&gt;mvnd&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_introduction&#34;&gt;Introduction&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This project aims at providing faster &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; builds using techniques known from Gradle and Takari.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Architecture overview:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mvnd&lt;/code&gt; embeds Maven (so there is no need to install Maven separately).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;The actual builds happen inside a long living background process, a.k.a. daemon.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;One daemon instance can serve multiple consecutive requests from the &lt;code&gt;mvnd&lt;/code&gt; client.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;The &lt;code&gt;mvnd&lt;/code&gt; client is a native executable built using &lt;a href=&#34;https://www.graalvm.org/reference-manual/native-image/&#34;&gt;GraalVM&lt;/a&gt;. It starts faster and uses less memory compared to starting a traditional JVM.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Multiple daemons can be spawned in parallel if there is no idle daemon to serve a build request.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This architecture brings the following advantages:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;The JVM for running the actual builds does not need to get started anew for each build.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;The classloaders holding classes of Maven plugins are cached over multiple builds. The plugin jars are thus read and parsed just once. SNAPSHOT versions of Maven plugins are not cached.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;The native code produced by the Just-In-Time (JIT) compiler inside the JVM is kept too. Compared to stock Maven, less time is spent by the JIT compilation. During the repeated builds the JIT-optimized code is available immediately. This applies not only to the code coming from Maven plugins and Maven Core, but also to all code coming from the JDK itself.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_additional_features&#34;&gt;Additional features&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;code&gt;mvnd&lt;/code&gt; brings the following features on top of the stock Maven:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;By default, &lt;code&gt;mvnd&lt;/code&gt; is building your modules in parallel using multiple CPU cores. The number of utilized cores is given by the formula &lt;code&gt;Math.max(Runtime.getRuntime().availableProcessors() - 1, 1)&lt;/code&gt;. If your source tree does not support parallel builds, pass &lt;code&gt;-T1&lt;/code&gt; on the command line to make your build serial.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Improved console output: we believe that the output of a parallel build on a stock Maven is hard to follow. Therefore, we implemented a simplified non-rolling view showing the status of each build thread on a separate line. This is what it looks like on a machine with 24 cores:&lt;/p&gt; &#xA;     &lt;div class=&#34;imageblock&#34;&gt; &#xA;      &lt;div class=&#34;content&#34;&gt; &#xA;       &lt;img src=&#34;https://user-images.githubusercontent.com/1826249/103917178-94ee4500-510d-11eb-9abb-f52dae58a544.gif&#34; alt=&#34;103917178 94ee4500 510d 11eb 9abb f52dae58a544&#34;&gt; &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &#xA;     &lt;div class=&#34;paragraph&#34;&gt; &#xA;      &lt;p&gt;Once the build is finished, the complete Maven output is forwarded to the console.&lt;/p&gt; &#xA;     &lt;/div&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_how_to_install_mvnd&#34;&gt;How to install &lt;code&gt;mvnd&lt;/code&gt;&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_install_using_sdkman&#34;&gt;Install using &lt;a href=&#34;https://sdkman.io/&#34;&gt;SDKMAN!&lt;/a&gt;&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;If SDKMAN! supports your operating system, it is as easy as&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sdk install mvnd&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;If you used the manual install in the past, please make sure that the settings in &lt;code&gt;~/.m2/mvnd.properties&lt;/code&gt; still make sense. With SDKMAN!, the &lt;code&gt;~/.m2/mvnd.properties&lt;/code&gt; file is typically not needed at all, because both &lt;code&gt;JAVA_HOME&lt;/code&gt; and &lt;code&gt;MVND_HOME&lt;/code&gt; are managed by SDKMAN!.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_install_using_homebrew&#34;&gt;Install using &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;&lt;/h3&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ brew install mvndaemon/homebrew-mvnd/mvnd&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_install_using_macports&#34;&gt;Install using &lt;a href=&#34;https://www.macports.org&#34;&gt;MacPorts&lt;/a&gt;&lt;/h3&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sudo port install mvnd&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_install_using_chocolatey&#34;&gt;Install using &lt;a href=&#34;https://community.chocolatey.org/packages/mvndaemon/&#34;&gt;Chocolatey&lt;/a&gt;&lt;/h3&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ choco install mvndaemon&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_install_using_scoop&#34;&gt;Install using &lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt;&lt;/h3&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ scoop install mvndaemon&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_install_using_asdf&#34;&gt;Install using &lt;a href=&#34;https://github.com/joschi/asdf-mvnd#install&#34;&gt;asdf&lt;/a&gt;&lt;/h3&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ asdf plugin-add mvnd&#xA;$ asdf install mvnd latest&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_set_up_completion&#34;&gt;Set up completion&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Optionally, you can set up completion as follows:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;# ensure to set MVND_HOME to point to your mvnd distribution, note that sdkman does it for you&#xA;$ echo &#39;source $MVND_HOME/bin/mvnd-bash-completion.bash&#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;code&gt;bash&lt;/code&gt; is the only shell supported at this time.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_note_for_oh_my_zsh_users&#34;&gt;Note for oh-my-zsh users&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Users that use &lt;code&gt;oh-my-zsh&lt;/code&gt; often use completion for maven. The default maven completion plugin defines &lt;code&gt;mvnd&lt;/code&gt; as an alias to &lt;code&gt;mvn deploy&lt;/code&gt;. So before being able to use &lt;code&gt;mvnd&lt;/code&gt;, you need to unalias using the following command:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ unalias mvnd&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_install_manually&#34;&gt;Install manually&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Download the latest ZIP suitable for your platform from &lt;a href=&#34;https://downloads.apache.org/maven/mvnd/&#34; class=&#34;bare&#34;&gt;https://downloads.apache.org/maven/mvnd/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Unzip to a directory of your choice&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Add the &lt;code&gt;bin&lt;/code&gt; directory to &lt;code&gt;PATH&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Optionally, you can create &lt;code&gt;~/.m2/mvnd.properties&lt;/code&gt; and set the &lt;code&gt;java.home&lt;/code&gt; property in case you do not want to bother with setting &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable.&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Test whether &lt;code&gt;mvnd&lt;/code&gt; works:&lt;/p&gt; &#xA;      &lt;div class=&#34;listingblock&#34;&gt; &#xA;       &lt;div class=&#34;content&#34;&gt; &#xA;        &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mvnd --version&#xA;Maven Daemon 0.0.11-linux-amd64 (native)&#xA;Terminal: org.jline.terminal.impl.PosixSysTerminal with pty org.jline.terminal.impl.jansi.osx.OsXNativePty&#xA;Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)&#xA;Maven home: /home/ppalaga/orgs/mvnd/mvnd/daemon/target/maven-distro&#xA;Java version: 11.0.1, vendor: AdoptOpenJDK, runtime: /home/data/jvm/adopt-openjdk/jdk-11.0.1+13&#xA;Default locale: en_IE, platform encoding: UTF-8&#xA;OS name: &#34;linux&#34;, version: &#34;5.6.13-200.fc31.x86_64&#34;, arch: &#34;amd64&#34;, family: &#34;unix&#34;&lt;/code&gt;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;div class=&#34;paragraph&#34;&gt; &#xA;       &lt;p&gt;If you are on Windows and see a message that &lt;code&gt;VCRUNTIME140.dll was not found&lt;/code&gt;, you need to install &lt;code&gt;vc_redist.x64.exe&lt;/code&gt; from &lt;a href=&#34;https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads&#34; class=&#34;bare&#34;&gt;https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads&lt;/a&gt;. See &lt;a href=&#34;https://github.com/oracle/graal/issues/1762&#34; class=&#34;bare&#34;&gt;https://github.com/oracle/graal/issues/1762&lt;/a&gt; for more information.&lt;/p&gt; &#xA;      &lt;/div&gt; &#xA;      &lt;div class=&#34;paragraph&#34;&gt; &#xA;       &lt;p&gt;If you are on macOS, you’ll need to remove the quarantine flags from all the files after unpacking the archive:&lt;/p&gt; &#xA;      &lt;/div&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;$ xattr -r -d com.apple.quarantine mvnd-x.y.z-darwin-amd64&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_usage&#34;&gt;Usage&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;code&gt;mvnd&lt;/code&gt; is designed to accept the same command line options like stock &lt;code&gt;mvn&lt;/code&gt; (plus some extras - see below), e.g.:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mvnd verify&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_mvnd_specific_options&#34;&gt;&lt;code&gt;mvnd&lt;/code&gt; specific options&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;code&gt;--status&lt;/code&gt; lists running daemons&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;code&gt;--stop&lt;/code&gt; kills all running daemons&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The complete list of options is printed when executing &lt;code&gt;mvnd --help&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_configuration&#34;&gt;Configuration&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Configuration can be provided through properties file. Mvnd read properties file from the following locations:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;the properties path supplied using &lt;code&gt;MVND_PROPERTIES_PATH&lt;/code&gt; environment variable or &lt;code&gt;mvnd.propertiesPath&lt;/code&gt; system variable&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;the local properties path located at &lt;code&gt;[PROJECT_HOME]/.mvn/mvnd.properties&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;the user properties path located at: &lt;code&gt;[USER_HOME]/.m2/mvnd.properties&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;the system properties path located at: &lt;code&gt;[MVND_HOME]/conf/mvnd.properties&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Properties defined in the first files will take precedence over properties specified in a lower ranked file.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;A few special properties do not follow the above mechanism:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mvnd.daemonStorage&lt;/code&gt;: this property defines the location where mvnd stores its files (registry and daemon logs). This property can only be defined as a system property on the command line&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mvnd.id&lt;/code&gt;: this property is used internally to identify the daemon being created&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mvnd.extClasspath&lt;/code&gt;: internal option to specify the maven extension classpath&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;code&gt;mvnd.coreExtensions&lt;/code&gt;: internal option to specify the list of maven extension to register&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;For a full list of available properties please see &lt;a href=&#34;https://github.com/apache/maven-mvnd/raw/master/dist/src/main/distro/conf/mvnd.properties&#34;&gt;/dist/src/main/distro/conf/mvnd.properties&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_build_mvnd_from_source&#34;&gt;Build &lt;code&gt;mvnd&lt;/code&gt; from source&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_prerequisites&#34;&gt;Prerequisites:&lt;/h3&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;git&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Maven&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Download and unpack GraalVM CE from &lt;a href=&#34;https://github.com/graalvm/graalvm-ce-builds/releases&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Set &lt;code&gt;JAVA_HOME&lt;/code&gt; to where you unpacked GraalVM in the previous step. Check that &lt;code&gt;java -version&lt;/code&gt; output is as expected:&lt;/p&gt; &#xA;      &lt;div class=&#34;listingblock&#34;&gt; &#xA;       &lt;div class=&#34;content&#34;&gt; &#xA;        &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ $JAVA_HOME/bin/java -version&#xA;openjdk version &#34;11.0.9&#34; 2020-10-20&#xA;OpenJDK Runtime Environment GraalVM CE 20.3.0 (build 11.0.9+10-jvmci-20.3-b06)&#xA;OpenJDK 64-Bit Server VM GraalVM CE 20.3.0 (build 11.0.9+10-jvmci-20.3-b06, mixed mode, sharing)&lt;/code&gt;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Install the &lt;code&gt;native-image&lt;/code&gt; tool:&lt;/p&gt; &#xA;      &lt;div class=&#34;listingblock&#34;&gt; &#xA;       &lt;div class=&#34;content&#34;&gt; &#xA;        &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ $JAVA_HOME/bin/gu install native-image&lt;/code&gt;&lt;/pre&gt; &#xA;       &lt;/div&gt; &#xA;      &lt;/div&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;code&gt;native-image&lt;/code&gt; may require additional software to be installed depending on your platform - see the &lt;a href=&#34;https://www.graalvm.org/reference-manual/native-image/#prerequisites&#34;&gt;&lt;code&gt;native-image&lt;/code&gt; documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_build_mvnd&#34;&gt;Build &lt;code&gt;mvnd&lt;/code&gt;&lt;/h3&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git clone https://github.com/apache/maven-mvnd.git&#xA;$ cd maven-mvnd&#xA;$ mvn clean verify -Pnative&#xA;...&#xA;$ cd client&#xA;$ file target/mvnd&#xA;target/mvnd: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=93a554f3807550a13c986d2af9a311ef299bdc5a, for GNU/Linux 3.2.0, with debug_info, not stripped&#xA;$ ls -lh target/mvnd&#xA;-rwxrwxr-x. 1 ppalaga ppalaga 25M Jun  2 13:23 target/mvnd&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_install_mvnd&#34;&gt;Install &lt;code&gt;mvnd&lt;/code&gt;&lt;/h3&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ cp -R dist/target/mvnd-[version] [target-dir]&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Then you can simply add &lt;code&gt;[target-dir]/bin&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; and run &lt;code&gt;mvnd&lt;/code&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;We’re happy to improve &lt;code&gt;mvnd&lt;/code&gt;, so &lt;a href=&#34;https://github.com/apache/maven-mvnd/issues&#34;&gt;feedback&lt;/a&gt; is most welcome!&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>springfox/springfox</title>
    <updated>2022-12-22T01:33:54Z</updated>
    <id>tag:github.com,2022-12-22:/springfox/springfox</id>
    <link href="https://github.com/springfox/springfox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automated JSON API documentation for API&#39;s built with Spring&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Springfox&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/springfox/springfox?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/springfox/springfox&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fspringfox%2Fspringfox?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fspringfox%2Fspringfox.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bintray.com/springfox/maven-repo/springfox/_latestVersion&#34;&gt; &lt;img src=&#34;https://api.bintray.com/packages/springfox/maven-repo/springfox/images/download.svg?sanitize=true&#34; alt=&#34;Download&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.openhub.net/p/springfox&#34;&gt;&lt;img src=&#34;https://www.openhub.net/p/springfox/widgets/project_thin_badge.gif&#34; alt=&#34;Project Stats&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Build Status&lt;/th&gt; &#xA;   &lt;th&gt;Coverage&lt;/th&gt; &#xA;   &lt;th&gt;Code Analysis&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://circleci.com/gh/springfox/springfox/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/springfox/springfox/tree/master.svg?style=svg&#34; alt=&#34;Circle CI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codecov.io/gh/springfox/springfox&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/springfox/springfox/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=springfox_springfox&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=springfox_springfox&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate Status&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sonar Cloud&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=springfox_springfox&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=springfox_springfox&amp;amp;metric=security_rating&#34; alt=&#34;Security Rating&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=springfox_springfox&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=springfox_springfox&amp;amp;metric=vulnerabilities&#34; alt=&#34;Vulnerabilities&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=springfox_springfox&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=springfox_springfox&amp;amp;metric=sqale_rating&#34; alt=&#34;Maintainability Rating&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=springfox_springfox&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=springfox_springfox&amp;amp;metric=reliability_rating&#34; alt=&#34;Reliability Rating&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=springfox_springfox&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=springfox_springfox&amp;amp;metric=sqale_index&#34; alt=&#34;Technical Debt&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://sonarcloud.io/dashboard?id=springfox_springfox&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=springfox_springfox&amp;amp;metric=coverage&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;About&lt;/h3&gt; &#xA;&lt;p&gt;For more information on this project visit the &lt;a href=&#34;http://springfox.io&#34;&gt;Springfox Website&lt;/a&gt; or &lt;a href=&#34;http://springfox.github.io/springfox/&#34;&gt;http://springfox.github.io/springfox/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Useful links&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://springfox.io&#34;&gt;Reference Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/springfox/springfox-demos&#34;&gt;Examples repository&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/springfox/springfox/wiki/Contribution-guidelines&#34;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://springfox.github.io/springfox/contributors.html&#34;&gt;Core contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/martypitt/swagger-springmvc/wiki/Development&#34;&gt;Development and contribution guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/springfox/springfox/master/docs/release-notes.md&#34;&gt;Change log&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://springfox.github.io/springfox/docs/current/#development-environment&#34;&gt;Development Environment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://springfox.github.io/springfox/docs/current/#releasing&#34;&gt;Release Instructions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;h4&gt;For new projects&lt;/h4&gt; &#xA;&lt;p&gt;For Maven&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;io.springfox&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;springfox-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Gradle&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;  implementation &#34;io.springfox:springfox-boot-starter:&amp;lt;version&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Migrating from earlier snapshot&lt;/h4&gt; &#xA;&lt;h4&gt;Spring Boot Applications&lt;/h4&gt; &#xA;&lt;p&gt;NOTE: Would love feedback to make this better&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Remove explicit dependencies on &lt;code&gt;springfox-swagger2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Remove any &lt;code&gt;@EnableSwagger2...&lt;/code&gt; annotations&lt;/li&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;springfox-boot-starter&lt;/code&gt; dependency&lt;/li&gt; &#xA; &lt;li&gt;Springfox 3.x removes dependencies on guava and other 3rd party libraries (not zero dep yet! depends on spring plugin and open api libraries for annotations and models) so if you used guava predicates/functions those will need to transition to java 8 function interfaces.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Migrating from existing 2.x version&lt;/h4&gt; &#xA;&lt;h4&gt;Spring Boot Applications&lt;/h4&gt; &#xA;&lt;p&gt;NOTE: Would love feedback to make this better&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Remove explicit dependencies on &lt;code&gt;springfox-swagger2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Remove the &lt;code&gt;@EnableSwagger2&lt;/code&gt; annotations&lt;/li&gt; &#xA; &lt;li&gt;Add the &lt;code&gt;springfox-boot-starter&lt;/code&gt; dependency&lt;/li&gt; &#xA; &lt;li&gt;Springfox 3.x removes dependencies on guava and other 3rd party libraries (not zero dep yet! depends on spring plugin and open api libraries for annotations and models) so if you used guava predicates/functions those will need to transition to java 8 function interfaces&lt;/li&gt; &#xA; &lt;li&gt;If you are using WebMvc but you don&#39;t use the &lt;a href=&#34;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/config/annotation/EnableWebMvc.html&#34;&gt;&lt;code&gt;@EnableWebMvc&lt;/code&gt;&lt;/a&gt; annotation yet, add this annotation.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Regular spring mvc&lt;/h4&gt; &#xA;&lt;p&gt;NOTE: Would love feedback to make this experience better&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Remove explicit dependencies on &lt;code&gt;springfox-swagger2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;@EnableOpenApi&lt;/code&gt; for open API (and &lt;code&gt;@EnableSwagger2WebMvc&lt;/code&gt; or &lt;code&gt;@EnableSwagger2WebFlux&lt;/code&gt; for older versions)&lt;/li&gt; &#xA; &lt;li&gt;Added the &lt;code&gt;springfox-oas&lt;/code&gt; library&lt;/li&gt; &#xA; &lt;li&gt;Springfox 3.x removes dependencies on guava and other 3rd party libraries (not zero dep yet! depends on spring plugin and open api libraries for annotations and models) so if you used guava predicates/functions those will need to transition to java 8 function interfaces&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2015 Marty Pitt - &lt;a href=&#34;https://github.com/martypitt&#34;&gt;@martypitt&lt;/a&gt;, Dilip Krishnan - &lt;a href=&#34;https://github.com/dilipkrish&#34;&gt;@dilipkrish&lt;/a&gt;, Adrian Kelly - &lt;a href=&#34;https://github.com/adrianbk&#34;&gt;@adrianbk&lt;/a&gt;,&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bgithub.com%2Fspringfox%2Fspringfox?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bgithub.com%2Fspringfox%2Fspringfox.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>