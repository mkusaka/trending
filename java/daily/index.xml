<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-08T01:33:47Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>exadel-inc/CompreFace</title>
    <updated>2022-07-08T01:33:47Z</updated>
    <id>tag:github.com,2022-07-08:/exadel-inc/CompreFace</id>
    <link href="https://github.com/exadel-inc/CompreFace" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Leading free and open-source face recognition system&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Exadel CompreFace is a leading free and open-source face recognition system&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://exadel.com/solutions/compreface/&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/3736126/147130206-17234c47-8d40-490f-8d93-57014fa6d87e.png&#34; alt=&#34;angular-logo&#34; height=&#34;250px&#34;&gt; &lt;/a&gt; &lt;br&gt; &lt;i&gt;Exadel CompreFace is a free and open-source face recognition service that can be easily integrated into any system without prior machine learning skills. CompreFace provides REST API for face recognition, face verification, face detection, landmark detection, age, and gender recognition and is easily deployed with docker. &lt;/i&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://exadel.com/solutions/compreface/&#34;&gt;&lt;strong&gt;Official website&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#contributing&#34;&gt;Contributing&lt;/a&gt; · &lt;a href=&#34;https://github.com/exadel-inc/CompreFace/issues&#34;&gt;Submit an Issue&lt;/a&gt; · &lt;a href=&#34;https://exadel.com/news/tag/compreface/&#34;&gt;Blog&lt;/a&gt; · &lt;a href=&#34;https://gitter.im/CompreFace/community&#34;&gt;Community chat&lt;/a&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/exadel-inc/CompreFace&#34; alt=&#34;GitHub license&#34;&gt; &lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://github.com/exadel-inc/CompreFace/graphs/contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/exadel-inc/CompreFace&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;/a&gt;&amp;nbsp; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Table Of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#news-and-updates&#34;&gt;News and updates&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#functionalities&#34;&gt;Functionalities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#getting-started-with-compreface&#34;&gt;Getting Started with CompreFace&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#compreface-sdks&#34;&gt;CompreFace SDKs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs&#34;&gt;Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/How-to-Use-CompreFace.md&#34;&gt;How to Use CompreFace&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md&#34;&gt;Face Services and Plugins&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Rest-API-description.md&#34;&gt;Rest API Description&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://documenter.getpostman.com/view/17578263/UUxzAnde&#34;&gt;Postman documentation and collection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-Recognition-Similarity-Threshold.md&#34;&gt;Face Recognition Similarity Threshold&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Configuration.md&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Architecture-and-scalability.md&#34;&gt;Architecture and Scalability&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Custom-builds.md&#34;&gt;Custom Builds&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-data-migration.md&#34;&gt;Face data migration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/User-Roles-System.md&#34;&gt;User Roles System&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Mask-detection-plugin.md&#34;&gt;Face Mask Detection Plugin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/exadel-inc/compreface-kubernetes&#34;&gt;Kubernetes configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Gathering-anonymous-statistics.md&#34;&gt;Gathering Anonymous Statistics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Installation-options.md&#34;&gt;Installation Options&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/#license-info&#34;&gt;License info&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;Exadel CompreFace is a free and open-source face recognition GitHub project. Essentially, it is a docker-based application that can be used as a standalone server or deployed in the cloud. You don’t need prior machine learning skills to set up and use CompreFace.&lt;/p&gt; &#xA;&lt;p&gt;The system provides REST API for face recognition, face verification, face detection, landmark detection, age, and gender recognition. The solution also features a role management system that allows you to easily control who has access to your Face Recognition Services.&lt;/p&gt; &#xA;&lt;p&gt;CompreFace is delivered as a docker-compose config and supports different models that work on CPU and GPU. Our solution is based on state-of-the-art methods and libraries like FaceNet and InsightFace.&lt;/p&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/3736126/130649323-b52d787c-8ba4-4064-97a6-6ffa70ef5f46.png&#34; alt=&#34;compreface-recognition-page&#34; width=&#34;390px&#34; style=&#34;padding: 0px 10px 0px 0px;&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/3736126/130649405-72d5324f-8ba6-4fa6-9e37-cac6f0b80c92.png&#34; alt=&#34;compreface-main-page&#34; width=&#34;390px&#34; style=&#34;padding: 0px 0px 0px 10px;&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/3736126/130649939-15f40c5b-5cda-4627-a6d1-c243a8095411.png&#34; alt=&#34;compreface-recognition-page&#34; width=&#34;390px&#34; style=&#34;padding: 0px 10px 0px 0px;&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/3736126/130650028-c82dc1c7-0c8d-43a5-9e50-5c52125cbf1a.png&#34; alt=&#34;compreface-main-page&#34; width=&#34;390px&#34; style=&#34;padding: 0px 0px 0px 10px;&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;News and updates&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://info.exadel.com/en/compreface-news-and-updates&#34;&gt;Subscribe&lt;/a&gt; to CompreFace News and Updates to never miss new features and product improvements.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;The system can accurately identify people even when it has only “seen” their photo once. Technology-wise, CompreFace has several advantages over similar free face recognition solutions. CompreFace:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports both CPU and GPU and is easy to scale up&lt;/li&gt; &#xA; &lt;li&gt;Is open source and self-hosted, which gives you additional guarantees for data security&lt;/li&gt; &#xA; &lt;li&gt;Can be deployed either in the cloud or on premises&lt;/li&gt; &#xA; &lt;li&gt;Can be set up and used without machine learning expertise&lt;/li&gt; &#xA; &lt;li&gt;Uses FaceNet and InsightFace libraries, which use state-of-the-art face recognition methods&lt;/li&gt; &#xA; &lt;li&gt;Starts quickly with just one docker command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Functionalities&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports many face recognition services: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md#face-detection&#34;&gt;face detection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md#face-recognition&#34;&gt;face recognition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md#face-verification&#34;&gt;face verification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md#face-plugins&#34;&gt;landmark detection plugin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md#face-plugins&#34;&gt;age recognition plugin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md#face-plugins&#34;&gt;gender recognition plugin&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md#face-plugins&#34;&gt;face mask detection plugin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Use the CompreFace UI panel for convenient user roles and access management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting Started with CompreFace&lt;/h1&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Docker and Docker compose (or Docker Desktop)&lt;/li&gt; &#xA; &lt;li&gt;CompreFace could be run on most modern computers with &lt;a href=&#34;https://en.wikipedia.org/wiki/X86&#34;&gt;x86 processor&lt;/a&gt; and &lt;a href=&#34;https://en.wikipedia.org/wiki/Advanced_Vector_Extensions&#34;&gt;AVX support&lt;/a&gt;. To check AVX support on Linux run &lt;code&gt;lscpu | grep avx&lt;/code&gt; command&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;To get started (Linux, MacOS):&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Docker and Docker Compose&lt;/li&gt; &#xA; &lt;li&gt;Download the archive from our latest release: &lt;a href=&#34;https://github.com/exadel-inc/CompreFace/releases&#34;&gt;https://github.com/exadel-inc/CompreFace/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unzip the archive&lt;/li&gt; &#xA; &lt;li&gt;Open the terminal in this folder and run this command: &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open the service in your browser: &lt;a href=&#34;http://localhost:8000/login&#34;&gt;http://localhost:8000/login&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;To get started (Windows):&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Docker Desktop&lt;/li&gt; &#xA; &lt;li&gt;Download the archive from our latest release: &lt;a href=&#34;https://github.com/exadel-inc/CompreFace/releases&#34;&gt;https://github.com/exadel-inc/CompreFace/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Unzip the archive&lt;/li&gt; &#xA; &lt;li&gt;Run Docker&lt;/li&gt; &#xA; &lt;li&gt;Open Command prompt (write &lt;code&gt;cmd&lt;/code&gt; in windows search bar)&lt;/li&gt; &#xA; &lt;li&gt;Open folder where you extracted zip archive (Write &lt;code&gt;cd path_of_the_folder&lt;/code&gt;, press enter).&lt;/li&gt; &#xA; &lt;li&gt;Run command: &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;http://localhost:8000/login&#34;&gt;http://localhost:8000/login&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Getting started for contributors&lt;/h3&gt; &#xA;&lt;p&gt;Follow this &lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/dev&#34;&gt;link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CompreFace SDKs&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;SDK&lt;/th&gt; &#xA;   &lt;th&gt;Repository&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/exadel-inc/compreface-javascript-sdk&#34;&gt;https://github.com/exadel-inc/compreface-javascript-sdk&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/exadel-inc/compreface-python-sdk&#34;&gt;https://github.com/exadel-inc/compreface-python-sdk&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;More documentation is available &lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;We want to improve our open-source face recognition solution, so your contributions are welcome and greatly appreciated.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Just use CompreFace and &lt;a href=&#34;https://github.com/exadel-inc/CompreFace/issues&#34;&gt;report&lt;/a&gt; ideas and bugs on GitHub&lt;/li&gt; &#xA; &lt;li&gt;Share knowledge and experience via posting guides and articles, or just improve our &lt;a href=&#34;https://github.com/exadel-inc/CompreFace/tree/master/docs&#34;&gt;documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Create &lt;a href=&#34;https://github.com/topics/compreface-sdk&#34;&gt;SDKs&lt;/a&gt; for favorite programming language, we will add it to our documentation&lt;/li&gt; &#xA; &lt;li&gt;Integrate CompreFace support to other platforms like &lt;a href=&#34;https://www.home-assistant.io/&#34;&gt;Home Assistant&lt;/a&gt; or &lt;a href=&#34;https://www.dreamfactory.com/&#34;&gt;DreamFactory&lt;/a&gt;, we will add it to our documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/CONTRIBUTING.md&#34;&gt;Contribute&lt;/a&gt; code&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/docs/Face-services-and-plugins.md#face-plugins&#34;&gt;plugin&lt;/a&gt; to face services&lt;/li&gt; &#xA; &lt;li&gt;And last, but not least, you can just give a star to our free facial recognition system on GitHub&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, visit our &lt;a href=&#34;https://raw.githubusercontent.com/exadel-inc/CompreFace/master/CONTRIBUTING.md&#34;&gt;contributing&lt;/a&gt; guide, or create a &lt;a href=&#34;https://github.com/exadel-inc/CompreFace/discussions&#34;&gt;discussion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License info&lt;/h1&gt; &#xA;&lt;p&gt;CompreFace is open-source real-time facial recognition software released under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pytorch/serve</title>
    <updated>2022-07-08T01:33:47Z</updated>
    <id>tag:github.com,2022-07-08:/pytorch/serve</id>
    <link href="https://github.com/pytorch/serve" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Serve, optimize and scale PyTorch models in production&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TorchServe&lt;/h1&gt; &#xA;&lt;p&gt;TorchServe is a flexible and easy to use tool for serving and scaling PyTorch models in production.&lt;/p&gt; &#xA;&lt;p&gt;Requires python &amp;gt;= 3.8&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl http://127.0.0.1:8080/predictions/bert -T input.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🚀 Quick start with TorchServe&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Install dependencies&#xA;# cuda is optional&#xA;python ./ts_scripts/install_dependencies.py --cuda=cu111&#xA;&#xA;# Latest release&#xA;pip install torchserve torch-model-archiver torch-workflow-archiver&#xA;&#xA;# Nightly build&#xA;pip install torchserve-nightly torch-model-archiver-nightly torch-workflow-archiver-nightly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/docs/getting_started.md&#34;&gt;Getting started guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🐳 Quick Start with Docker&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Latest release&#xA;docker pull pytorch/torchserve&#xA;&#xA;# Nightly build&#xA;docker pull pytorch/torchserve-nightly&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to &lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/docker/README.md&#34;&gt;torchserve docker&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;⚡ Why TorchServe&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/docs/management_api.md&#34;&gt;Model Management API&lt;/a&gt;: multi model management with optimized worker to model allocation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/docs/inference_api.md&#34;&gt;Inference API&lt;/a&gt;: REST and gRPC support for batched inference&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/examples/Workflows/README.md&#34;&gt;TorchServe Workflows&lt;/a&gt;: deploy complex DAGs with multiple interdependent models&lt;/li&gt; &#xA; &lt;li&gt;Default way to serve PyTorch models in &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://v0-5.kubeflow.org/docs/components/pytorchserving/&#34;&gt;Kubeflow&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/mlflow/mlflow-torchserve&#34;&gt;MLflow&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/machine-learning/serving-pytorch-models-in-production-with-the-amazon-sagemaker-native-torchserve-integration/&#34;&gt;Sagemaker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kserve.github.io/website/0.8/modelserving/v1beta1/torchserve/&#34;&gt;Kserve&lt;/a&gt;: Supports both v1 and v2 API&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/topics/developers-practitioners/pytorch-google-cloud-how-deploy-pytorch-models-vertex-ai&#34;&gt;Vertex AI&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Export your model for optimized inference. Torchscript out of the box, &lt;a href=&#34;https://discuss.pytorch.org/t/deploying-onnx-model-with-torchserve/97725/2&#34;&gt;ORT&lt;/a&gt;, &lt;a href=&#34;https://github.com/pytorch/serve/tree/master/examples/intel_extension_for_pytorch&#34;&gt;IPEX&lt;/a&gt;, &lt;a href=&#34;https://github.com/pytorch/serve/issues/1243&#34;&gt;TensorRT&lt;/a&gt;, &lt;a href=&#34;https://github.com/pytorch/serve/tree/master/examples/FasterTransformer_HuggingFace_Bert&#34;&gt;FasterTransformer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/docs/performance_guide.md&#34;&gt;Performance Guide&lt;/a&gt;: builtin support to optimize, benchmark and profile PyTorch and TorchServe performance&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/CONTRIBUTING.md&#34;&gt;Expressive handlers&lt;/a&gt;: An expressive handler architecture that makes it trivial to support inferencing for your usecase with &lt;a href=&#34;https://github.com/pytorch/serve/tree/master/ts/torch_handler&#34;&gt;many supported out of the box&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/docs/metrics.md&#34;&gt;Metrics API&lt;/a&gt;: out of box support for system level metrics with &lt;a href=&#34;https://github.com/pytorch/serve/tree/master/examples/custom_metrics&#34;&gt;Prometheus exports&lt;/a&gt;, custom metrics and PyTorch profiler support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🤔 How does TorchServe work&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/docs/README.md&#34;&gt;Model Server for PyTorch Documentation&lt;/a&gt;: Full documentation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/docs/internals.md&#34;&gt;TorchServe internals&lt;/a&gt;: How TorchServe was built&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/CONTRIBUTING.md&#34;&gt;Contributing guide&lt;/a&gt;: How to contribute to TorchServe&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🏆 Highlighted Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/examples/Huggingface_Transformers&#34;&gt;🤗 HuggingFace Transformers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/examples/Huggingface_Transformers#model-paralellism&#34;&gt;Model parallel inference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pytorch/serve/tree/master/examples/MMF-activity-recognition&#34;&gt;MultiModal models with MMF&lt;/a&gt; combining text, audio and video&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/examples/Workflows/nmt_transformers_pipeline&#34;&gt;Dual Neural Machine Translation&lt;/a&gt; for a complex workflow DAG&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For &lt;a href=&#34;https://raw.githubusercontent.com/pytorch/serve/master/examples/README.md&#34;&gt;more examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤓 Learn More&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pytorch.org/serve&#34;&gt;https://pytorch.org/serve&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🫂 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome all contributions!&lt;/p&gt; &#xA;&lt;p&gt;To learn more about how to contribute, see the contributor guide &lt;a href=&#34;https://github.com/pytorch/serve/raw/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📰 News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/tutorials/intermediate/torchserve_with_ipex.html&#34;&gt;Grokking Intel CPU PyTorch performance from first principles: a TorchServe case study&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pytorch.org/blog/amazon-ads-case-study/&#34;&gt;Case Study: Amazon Ads Uses PyTorch and AWS Inferentia to Scale Models for Ads Processing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/machine-learning/optimize-your-inference-jobs-using-dynamic-batch-inference-with-torchserve-on-amazon-sagemaker/&#34;&gt;Optimize your inference jobs using dynamic batch inference with TorchServe on Amazon SageMaker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.facebook.com/blog/using-ai-to-bring-childrens-drawings-to-life/&#34;&gt;Using AI to bring children&#39;s drawings to life&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=2A17ZtycsPw&#34;&gt;🎥 Model Serving in PyTorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/machine-learning/evolution-of-crestas-machine-learning-architecture-migration-to-aws-and-pytorch/&#34;&gt;Evolution of Cresta’s machine learning architecture: Migration to AWS and PyTorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=NEdZbkfHQCk&#34;&gt;🎥 Explain Like I’m 5: TorchServe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=XlO7iQMV3Ik&#34;&gt;🎥 How to Serve PyTorch Models with TorchServe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cloud.google.com/blog/topics/developers-practitioners/pytorch-google-cloud-how-deploy-pytorch-models-vertex-ai&#34;&gt;How to deploy PyTorch models on Vertex AI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://biano-ai.github.io/research/2021/08/16/quantitative-comparison-of-serving-platforms-for-neural-networks.html&#34;&gt;Quantitative Comparison of Serving Platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/pytorch/efficient-serverless-deployment-of-pytorch-models-on-azure-dc9c2b6bfee7&#34;&gt;Efficient Serverless deployment of PyTorch models on Azure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://techcommunity.microsoft.com/t5/ai-machine-learning-blog/deploy-pytorch-models-with-torchserve-in-azure-machine-learning/ba-p/2466459&#34;&gt;Deploy PyTorch models with TorchServe in Azure Machine Learning online endpoints&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ai.facebook.com/blog/dynaboard-moving-beyond-accuracy-to-holistic-model-evaluation-in-nlp/&#34;&gt;Dynaboard moving beyond accuracy to holistic model evaluation in NLP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/mlops-community/engineering-lab-1-team-1-a-mlops-tale-about-operationalising-mlflow-and-pytorch-62193b55dc19&#34;&gt;A MLOps Tale about operationalising MLFlow and PyTorch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.kubeflow.org/release/official/2021/03/08/kfserving-0.5.html&#34;&gt;Operationalize, Scale and Infuse Trust in AI Models using KFServing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/pytorch/how-wadhwani-ai-uses-pytorch-to-empower-cotton-farmers-14397f4c9f2b&#34;&gt;How Wadhwani AI Uses PyTorch To Empower Cotton Farmers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cceyda.github.io/blog/huggingface/torchserve/streamlit/ner/2020/10/09/huggingface_streamlit_serve.html&#34;&gt;TorchServe Streamlit Integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://venturebeat.com/2020/09/24/facebooks-dynabench-aims-to-make-ai-models-more-robust-through-distributed-human-workers/&#34;&gt;Dynabench aims to make AI models more robust through distributed human workers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/blogs/aws/announcing-torchserve-an-open-source-model-server-for-pytorch/&#34;&gt;Announcing TorchServe&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💖 All Contributors&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/pytorch/serve/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=pytorch/serve&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contrib.rocks&#34;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;⚖️ Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This repository is jointly operated and maintained by Amazon, Meta and a number of individual contributors listed in the &lt;a href=&#34;https://github.com/pytorch/serve/graphs/contributors&#34;&gt;CONTRIBUTORS&lt;/a&gt; file. For questions directed at Meta, please send an email to &lt;a href=&#34;mailto:opensource@fb.com&#34;&gt;opensource@fb.com&lt;/a&gt;. For questions directed at Amazon, please send an email to &lt;a href=&#34;mailto:torchserve@amazon.com&#34;&gt;torchserve@amazon.com&lt;/a&gt;. For all other questions, please open up an issue in this repository &lt;a href=&#34;https://github.com/pytorch/serve/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;TorchServe acknowledges the &lt;a href=&#34;https://github.com/awslabs/multi-model-server&#34;&gt;Multi Model Server (MMS)&lt;/a&gt; project from which it was derived&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>reactor/reactor-core</title>
    <updated>2022-07-08T01:33:47Z</updated>
    <id>tag:github.com,2022-07-08:/reactor/reactor-core</id>
    <link href="https://github.com/reactor/reactor-core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Non-Blocking Reactive Foundation for the JVM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Reactor Core&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/reactor/reactor?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/reactor/reactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mvnrepository.com/artifact/io.projectreactor/reactor-core&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/io.projectreactor/reactor-core/badge.svg?style=plastic&#34; alt=&#34;Reactor Core&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/reactor/reactor-core/all.svg?sanitize=true&#34; alt=&#34;Latest&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/reactor/reactor-core/actions/workflows/publish.yml&#34;&gt;&lt;img src=&#34;https://github.com/reactor/reactor-core/actions/workflows/publish.yml/badge.svg?sanitize=true&#34; alt=&#34;CI on GHA&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/github/reactor/reactor-core.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/reactor/reactor-core/context:java&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/java/g/reactor/reactor-core.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Code Quality: Java&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/reactor/reactor-core/alerts&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/reactor/reactor-core.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total Alerts&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Non-Blocking &lt;a href=&#34;https://www.reactive-streams.org/&#34;&gt;Reactive Streams&lt;/a&gt; Foundation for the JVM both implementing a &lt;a href=&#34;https://reactivex.io&#34;&gt;Reactive Extensions&lt;/a&gt; inspired API and efficient event streaming support.&lt;/p&gt; &#xA;&lt;p&gt;Since &lt;code&gt;3.3.x&lt;/code&gt;, this repository also contains &lt;code&gt;reactor-tools&lt;/code&gt;, a java agent aimed at helping with debugging of Reactor code.&lt;/p&gt; &#xA;&lt;h2&gt;Getting it&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Reactor 3 requires Java 8 or + to run&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;With Gradle from repo.spring.io or Maven Central repositories (stable releases only):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;    mavenCentral()&#xA;&#xA;    // Uncomment to get access to Milestones&#xA;    // maven { url &#34;https://repo.spring.io/milestone&#34; }&#xA;&#xA;    // Uncomment to get access to Snapshots&#xA;    // maven { url &#34;https://repo.spring.io/snapshot&#34; }&#xA;}&#xA;&#xA;dependencies {&#xA;    compile &#34;io.projectreactor:reactor-core:3.5.0-M3&#34;&#xA;    testCompile &#34;io.projectreactor:reactor-test:3.5.0-M3&#34;&#xA;&#xA;    // Alternatively, use the following for latest snapshot artifacts in this line&#xA;    // compile &#34;io.projectreactor:reactor-core:3.5.0-SNAPSHOT&#34;&#xA;    // testCompile &#34;io.projectreactor:reactor-test:3.5.0-SNAPSHOT&#34;&#xA;&#xA;    // Optionally, use `reactor-tools` to help debugging reactor code&#xA;    // implementation &#34;io.projectreactor:reactor-tools:3.5.0-M3&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://projectreactor.io/docs/core/release/reference/docs/index.html#getting&#34;&gt;reference documentation&lt;/a&gt; for more information on getting it (eg. using Maven, or on how to get milestones and snapshots).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note about Android support&lt;/strong&gt;: Reactor 3 doesn&#39;t officially support nor target Android. However it should work fine with Android SDK 21 (Android 5.0) and above. See the &lt;a href=&#34;https://projectreactor.io/docs/core/release/reference/docs/index.html#prerequisites&#34;&gt;complete note&lt;/a&gt; in the reference guide.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Trouble importing the project in IDE?&lt;/h2&gt; &#xA;&lt;p&gt;Since the introduction of Java 9 stubs in order to optimize the performance of debug tracebacks, one can sometimes encounter cryptic messages from the build system when importing or re-importing the project in their IDE.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;package StackWalker does not exist&lt;/code&gt;: probably building under JDK8 but &lt;code&gt;java9stubs&lt;/code&gt; was not added to sources&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cannot find symbol @CallerSensitive&lt;/code&gt;: probably building with JDK11+ and importing using JDK8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When encountering these issues, one need to ensure that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gradle JVM matches the JDK used by the IDE for the modules (in IntelliJ, &lt;code&gt;Modules Settings&lt;/code&gt; JDK). Preferably, 1.8.&lt;/li&gt; &#xA; &lt;li&gt;The IDE is configured to delegate build to Gradle (in IntelliJ: &lt;code&gt;Build Tools &amp;gt; Gradle &amp;gt; Runner&lt;/code&gt; and project setting uses that default)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then rebuild the project and the errors should disappear.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;New to Reactive Programming or bored of reading already ? Try the &lt;a href=&#34;https://github.com/reactor/lite-rx-api-hands-on&#34;&gt;Introduction to Reactor Core hands-on&lt;/a&gt; !&lt;/p&gt; &#xA;&lt;p&gt;If you are familiar with RxJava or if you want to check more detailed introduction, be sure to check &lt;a href=&#34;https://www.infoq.com/articles/reactor-by-example&#34;&gt;https://www.infoq.com/articles/reactor-by-example&lt;/a&gt; !&lt;/p&gt; &#xA;&lt;h2&gt;Flux&lt;/h2&gt; &#xA;&lt;p&gt;A Reactive Streams Publisher with basic flow operators.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Static factories on Flux allow for source generation from arbitrary callbacks types.&lt;/li&gt; &#xA; &lt;li&gt;Instance methods allows operational building, materialized on each subscription (&lt;em&gt;Flux#subscribe()&lt;/em&gt;, ...) or multicasting operations (such as &lt;em&gt;Flux#publish&lt;/em&gt; and &lt;em&gt;Flux#publishNext&lt;/em&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Flux.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/reactor/reactor-core/v3.1.3.RELEASE/src/docs/marble/flux.png&#34; width=&#34;500&#34; style=&#34;background-color: white&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Flux in action :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Flux.fromIterable(getSomeLongList())&#xA;    .mergeWith(Flux.interval(100))&#xA;    .doOnNext(serviceA::someObserver)&#xA;    .map(d -&amp;gt; d * 2)&#xA;    .take(3)&#xA;    .onErrorResume(errorHandler::fallback)&#xA;    .doAfterTerminate(serviceM::incrementTerminate)&#xA;    .subscribe(System.out::println);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Mono&lt;/h2&gt; &#xA;&lt;p&gt;A Reactive Streams Publisher constrained to &lt;em&gt;ZERO&lt;/em&gt; or &lt;em&gt;ONE&lt;/em&gt; element with appropriate operators.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Static factories on Mono allow for deterministic &lt;em&gt;zero or one&lt;/em&gt; sequence generation from arbitrary callbacks types.&lt;/li&gt; &#xA; &lt;li&gt;Instance methods allows operational building, materialized on each &lt;em&gt;Mono#subscribe()&lt;/em&gt; or &lt;em&gt;Mono#get()&lt;/em&gt; eventually called.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://projectreactor.io/docs/core/release/api/reactor/core/publisher/Mono.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/reactor/reactor-core/v3.4.1/reactor-core/src/main/java/reactor/core/publisher/doc-files/marbles/mono.svg?sanitize=true&#34; width=&#34;500&#34; style=&#34;background-color: white&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Mono in action :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Mono.fromCallable(System::currentTimeMillis)&#xA;    .flatMap(time -&amp;gt; Mono.first(serviceA.findRecent(time), serviceB.findRecent(time)))&#xA;    .timeout(Duration.ofSeconds(3), errorHandler::fallback)&#xA;    .doOnSuccess(r -&amp;gt; serviceM.incrementSuccess())&#xA;    .subscribe(System.out::println);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Blocking Mono result :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Tuple2&amp;lt;Long, Long&amp;gt; nowAndLater = &#xA;        Mono.zip(&#xA;                Mono.just(System.currentTimeMillis()),&#xA;                Flux.just(1).delay(1).map(i -&amp;gt; System.currentTimeMillis()))&#xA;            .block();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Schedulers&lt;/h2&gt; &#xA;&lt;p&gt;Reactor uses a &lt;a href=&#34;https://projectreactor.io/docs/core/release/api/reactor/core/scheduler/Scheduler.html&#34;&gt;Scheduler&lt;/a&gt; as a contract for arbitrary task execution. It provides some guarantees required by Reactive Streams flows like FIFO execution.&lt;/p&gt; &#xA;&lt;p&gt;You can use or create efficient &lt;a href=&#34;https://projectreactor.io/docs/core/release/api/reactor/core/scheduler/Schedulers.html&#34;&gt;schedulers&lt;/a&gt; to jump thread on the producing flows (subscribeOn) or receiving flows (publishOn):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;&#xA;Mono.fromCallable( () -&amp;gt; System.currentTimeMillis() )&#xA;&#x9;.repeat()&#xA;    .publishOn(Schedulers.single())&#xA;    .log(&#34;foo.bar&#34;)&#xA;    .flatMap(time -&amp;gt;&#xA;        Mono.fromCallable(() -&amp;gt; { Thread.sleep(1000); return time; })&#xA;            .subscribeOn(Schedulers.parallel())&#xA;    , 8) //maxConcurrency 8&#xA;    .subscribe();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ParallelFlux&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://projectreactor.io/docs/core/release/api/reactor/core/publisher/ParallelFlux.html&#34;&gt;ParallelFlux&lt;/a&gt; can starve your CPU&#39;s from any sequence whose work can be subdivided in concurrent tasks. Turn back into a &lt;code&gt;Flux&lt;/code&gt; with &lt;code&gt;ParallelFlux#sequential()&lt;/code&gt;, an unordered join or use arbitrary merge strategies via &#39;groups()&#39;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Mono.fromCallable( () -&amp;gt; System.currentTimeMillis() )&#xA;&#x9;.repeat()&#xA;    .parallel(8) //parallelism&#xA;    .runOn(Schedulers.parallel())&#xA;    .doOnNext( d -&amp;gt; System.out.println(&#34;I&#39;m on thread &#34;+Thread.currentThread()) )&#xA;    .subscribe()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Custom sources : Flux.create and FluxSink, Mono.create and MonoSink&lt;/h2&gt; &#xA;&lt;p&gt;To bridge a Subscriber or Processor into an outside context that is taking care of producing non concurrently, use &lt;code&gt;Flux#create&lt;/code&gt;, &lt;code&gt;Mono#create&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Flux.create(sink -&amp;gt; {&#xA;         ActionListener al = e -&amp;gt; {&#xA;            sink.next(textField.getText());&#xA;         };&#xA;&#xA;         // without cancellation support:&#xA;         button.addActionListener(al);&#xA;&#xA;         // with cancellation support:&#xA;         sink.onCancel(() -&amp;gt; {&#xA;         &#x9;button.removeListener(al);&#xA;         });&#xA;    },&#xA;    // Overflow (backpressure) handling, default is BUFFER&#xA;    FluxSink.OverflowStrategy.LATEST)&#xA;    .timeout(3)&#xA;    .doOnComplete(() -&amp;gt; System.out.println(&#34;completed!&#34;))&#xA;    .subscribe(System.out::println)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;The Backpressure Thing&lt;/h2&gt; &#xA;&lt;p&gt;Most of this cool stuff uses bounded ring buffer implementation under the hood to mitigate signal processing difference between producers and consumers. Now, the operators and processors or any standard reactive stream component working on the sequence will be instructed to flow in when these buffers have free room AND only then. This means that we make sure we both have a deterministic capacity model (bounded buffer) and we never block (request more data on write capacity). Yup, it&#39;s not rocket science after all, the boring part is already being worked by us in collaboration with &lt;a href=&#34;https://github.com/reactor/reactive-streams-commons&#34;&gt;Reactive Streams Commons&lt;/a&gt; on going research effort.&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s more in it ?&lt;/h2&gt; &#xA;&lt;p&gt;&#34;Operator Fusion&#34; (flow optimizers), health state observers, helpers to build custom reactive components, bounded queue generator, converters from/to Java 9 Flow, Publisher and Java 8 CompletableFuture. The repository contains a &lt;code&gt;reactor-test&lt;/code&gt; project with test features like the &lt;a href=&#34;https://projectreactor.io/docs/test/release/api/index.html?reactor/test/StepVerifier.html&#34;&gt;&lt;code&gt;StepVerifier&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Reference Guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://projectreactor.io/docs/core/release/reference/docs/index.html&#34;&gt;https://projectreactor.io/docs/core/release/reference/docs/index.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Javadoc&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://projectreactor.io/docs/core/release/api/&#34;&gt;https://projectreactor.io/docs/core/release/api/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting started with Flux and Mono&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/reactor/lite-rx-api-hands-on&#34;&gt;https://github.com/reactor/lite-rx-api-hands-on&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reactor By Example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.infoq.com/articles/reactor-by-example&#34;&gt;https://www.infoq.com/articles/reactor-by-example&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Head-First Spring &amp;amp; Reactor&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/reactor/head-first-reactive-with-spring-and-reactor/&#34;&gt;https://github.com/reactor/head-first-reactive-with-spring-and-reactor/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Beyond Reactor Core&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Everything to jump outside the JVM with the non-blocking drivers from &lt;a href=&#34;https://github.com/reactor/reactor-netty&#34;&gt;Reactor Netty&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/reactor/reactor-addons&#34;&gt;Reactor Addons&lt;/a&gt; provide for adapters and extra operators for Reactor 3.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;em&gt;Powered by &lt;a href=&#34;https://github.com/reactor/reactive-streams-commons&#34;&gt;Reactive Streams Commons&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Licensed under &lt;a href=&#34;https://raw.githubusercontent.com/reactor/reactor-core/main/www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache Software License 2.0&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Sponsored by &lt;a href=&#34;https://tanzu.vmware.com/&#34;&gt;VMware&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>