<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-17T01:32:12Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Tencent/spring-cloud-tencent</title>
    <updated>2022-06-17T01:32:12Z</updated>
    <id>tag:github.com,2022-06-17:/Tencent/spring-cloud-tencent</id>
    <link href="https://github.com/Tencent/spring-cloud-tencent" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Spring Cloud Tencent is a Spring Boot based Service Governance Framework provided by Tencent, including service discovery, traffic control, circuitbreak, ratelimit, config and so on.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spring Cloud Tencent&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/icon/wiki?icon=wiki&amp;amp;label&#34; alt=&#34;Wiki&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/actions/workflows/junit_test.yml&#34;&gt;&lt;img src=&#34;https://github.com/Tencent/spring-cloud-tencent/actions/workflows/junit_test.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=g:com.tencent.cloud%20AND%20a:spring-cloud-tencent&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.tencent.cloud/spring-cloud-tencent?label=Maven%20Central&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/Tencent/spring-cloud-tencent?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/Tencent/spring-cloud-tencent/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/Tencent/spring-cloud-tencent&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/BSD-3-Clause&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-BSD%203--Clause-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/Tencent/spring-cloud-tencent/main/README-zh.md&#34;&gt;简体中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Spring Cloud Tencent is a open source one-stop microservice solution from Tencent.&lt;/p&gt; &#xA;&lt;p&gt;Spring Cloud Tencent implements the Spring Cloud standard microservice SPI, so developers can quickly develop Spring Cloud cloud-native distributed applications based on Spring Cloud Tencent.&lt;/p&gt; &#xA;&lt;p&gt;The core of Spring Cloud Tencent relies on Tencent&#39;s open-source one-stop service discovery and governance platform &lt;a href=&#34;https://github.com/polarismesh/polaris&#34;&gt;Polaris&lt;/a&gt; to realize various distributed microservice scenarios.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/polarismesh/polaris&#34;&gt;Polaris Github home page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://polarismesh.cn/&#34;&gt;Polaris official website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The capabilities provided by Spring Cloud Tencent include but are not limited to:&lt;/p&gt; &#xA;&lt;img width=&#34;1031&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/4991116/170412596-692f8dae-42f7-495f-a451-01396e381eb0.png&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Service registration and discovery&lt;/li&gt; &#xA; &lt;li&gt;Dynamic configuration management&lt;/li&gt; &#xA; &lt;li&gt;Service Governance &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Service rate limit&lt;/li&gt; &#xA;   &lt;li&gt;Service circuit breaker&lt;/li&gt; &#xA;   &lt;li&gt;Service routing&lt;/li&gt; &#xA;   &lt;li&gt;...&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Label transparent transmission&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo Environment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Console Address : &lt;a href=&#34;http://14.116.241.63:8080/&#34;&gt;http://14.116.241.63:8080/&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Username: polaris&lt;/li&gt; &#xA;   &lt;li&gt;Password: polaris&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Server Address: &lt;code&gt;grpc://183.47.111.80:8091&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The example addresses under &lt;code&gt;spring-cloud-tencent-example&lt;/code&gt; all point to the experience service address (&lt;code&gt;grpc://183.47.111.80:8091&lt;/code&gt;) by default. If you only experience Spring Cloud Tencent, you can run any example directly with one click.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;img width=&#34;1792&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/4991116/163402268-48493802-4555-4b93-8e31-011410f2166b.png&#34;&gt; &#xA;&lt;h2&gt;Use Guide&lt;/h2&gt; &#xA;&lt;p&gt;All the components of Spring Cloud Tencent have been uploaded to the Maven central repository, just need to introduce dependencies.&lt;/p&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;!-- add spring-cloud-tencent bom  --&amp;gt;&#xA;&amp;lt;dependencyManagement&amp;gt;&#xA;    &amp;lt;dependencies&amp;gt;&#xA;        &amp;lt;dependency&amp;gt;&#xA;            &amp;lt;groupId&amp;gt;com.tencent.cloud&amp;lt;/groupId&amp;gt;&#xA;            &amp;lt;artifactId&amp;gt;spring-cloud-tencent-dependencies&amp;lt;/artifactId&amp;gt;&#xA;            &amp;lt;!--version number--&amp;gt;&#xA;            &amp;lt;version&amp;gt;${version}&amp;lt;/version&amp;gt;&#xA;            &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xA;            &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xA;        &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;/dependencies&amp;gt;&#xA;&amp;lt;/dependencyManagement&amp;gt;    &#xA;                 &#xA;&amp;lt;!-- add spring-cloud-starter-tencent-polaris-discovery dependency  --&amp;gt;&#xA;&amp;lt;dependencies&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;        &amp;lt;groupId&amp;gt;com.tencent.cloud&amp;lt;/groupId&amp;gt;&#xA;        &amp;lt;artifactId&amp;gt;spring-cloud-starter-tencent-polaris-discovery&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;&amp;lt;/dependencies&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86&#34;&gt;Spring Cloud Tencent Version Management&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-Discovery-%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3&#34;&gt;Spring Cloud Tencent Discovery&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-Config-%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3&#34;&gt;Spring Cloud Tencent Config&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-Rate-Limit-%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3&#34;&gt;Spring Cloud Tencent Rate Limit&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-Circuitbreaker-%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3&#34;&gt;Spring Cloud Tencent CircuitBreaker&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-Router-%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3&#34;&gt;Spring Cloud Tencent Router&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-Metadata-Transfer-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97&#34;&gt;Spring Cloud Tencent Metadata Transfer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Development Documentation&lt;/h3&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/%E9%A1%B9%E7%9B%AE%E6%A6%82%E8%A7%88&#34;&gt;Project Structure Overview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Tencent/spring-cloud-tencent/wiki/%E5%8F%82%E4%B8%8E%E5%85%B1%E5%BB%BA&#34;&gt;Participate in co-construction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Chat Group&lt;/h2&gt; &#xA;&lt;p&gt;Please scan the QR code to join the chat group.&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/24446200/169198148-d4cc3494-3485-4515-9897-c8cb5504f706.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The spring-cloud-tencent is licensed under the BSD 3-Clause License. Copyright and license information can be found in the file &lt;a href=&#34;https://raw.githubusercontent.com/Tencent/spring-cloud-tencent/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in Spring Cloud Tencent, please follow our project, thank you very much.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Tencent/spring-cloud-tencent&#34;&gt;&lt;img src=&#34;https://starchart.cc/Tencent/spring-cloud-tencent.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alibaba/COLA</title>
    <updated>2022-06-17T01:32:12Z</updated>
    <id>tag:github.com,2022-06-17:/alibaba/COLA</id>
    <link href="https://github.com/alibaba/COLA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🥤 COLA: Clean Object-oriented &amp; Layered Architecture&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🥤 COLA 4.0&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ci.appveyor.com/project/oldratlee/cola&#34;&gt;&lt;img src=&#34;https://img.shields.io/appveyor/ci/oldratlee/cola/master?logo=appveyor&amp;amp;logoColor=white&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=g:com.alibaba.cola&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.alibaba.cola/cola-component-dto.svg?logo=apache-maven&amp;amp;color=2d545e&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alibaba/COLA/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/alibaba/COLA.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Java-8+-green?logo=java&amp;amp;logoColor=white&#34; alt=&#34;Java support&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/COLA/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-LGPL%202.1-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alibaba/COLA/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/alibaba/COLA&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alibaba/COLA/fork&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/alibaba/COLA&#34; alt=&#34;GitHub Forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/alibaba/COLA/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/alibaba/COLA.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;COLA 是 Clean Object-Oriented and Layered Architecture的缩写，代表“整洁面向对象分层架构”。 目前COLA已经发展到&lt;a href=&#34;https://blog.csdn.net/significantfrank/article/details/110934799&#34;&gt;COLA 4.0&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;想了解更多COLA信息，请关注微信公众号：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/2020110314110321.png#pic_center&#34; alt=&#34;qrcode_60.jpg&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;想了解更多COLA背后的故事，请支持我的新书&lt;a href=&#34;https://item.jd.com/13652002.html&#34;&gt;《程序员的底层思维》&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;COLA分为两个部分，COLA架构和COLA组件。&lt;/p&gt; &#xA;&lt;h1&gt;一、COLA架构&lt;/h1&gt; &#xA;&lt;h2&gt;COLA 概述&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;架构&lt;/strong&gt;的&lt;strong&gt;意义&lt;/strong&gt; 就是 要素结构：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;要素 是 组成架构的重要元素；&lt;/li&gt; &#xA; &lt;li&gt;结构 是 要素之间的关系。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;而 &lt;strong&gt;应用架构&lt;/strong&gt;的&lt;strong&gt;意义&lt;/strong&gt; 就在于&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;定义一套良好的结构；&lt;/li&gt; &#xA; &lt;li&gt;治理应用复杂度，降低系统熵值；&lt;/li&gt; &#xA; &lt;li&gt;从随心所欲的混乱状态，走向井井有条的有序状态。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/e27c22d706084ead900c8838326135f3.png&#34; alt=&#34;archWhy&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;COLA架构就是为此而生，其核心职责就是定义良好的应用结构，提供最佳应用架构的最佳实践。通过不断探索，我们发现良好的分层结构，良好的包结构定义，可以帮助我们治理混乱不堪的业务应用系统。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/2020120918285068.png&#34; alt=&#34;cure&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;经过多次迭代，我们定义出了相对稳定、可靠的应用架构：COLA 4.0&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/6549230c6723448fb3ab51ca74829e80.png&#34; alt=&#34;cola&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;COLA Archetype&lt;/h2&gt; &#xA;&lt;p&gt;好的应用架构，都遵循一些共同模式，不管是六边形架构、洋葱圈架构、整洁架构、还是COLA架构，&lt;strong&gt;都提倡以业务为核心，解耦外部依赖，分离业务复杂度和技术复杂度等&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;COLA架构区别于这些架构的地方，在于除了思想之外，我们还提供了可落地的工具和实践指导。&lt;/p&gt; &#xA;&lt;p&gt;为了能够快速创建满足COLA架构的应用，我们提供了两个&lt;code&gt;archetype&lt;/code&gt;，位于&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/COLA/master/cola-archetypes&#34;&gt;&lt;code&gt;cola-archetypes&lt;/code&gt;目录&lt;/a&gt;下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;cola-archetype-service&lt;/code&gt;：用来创建纯后端服务的&lt;code&gt;archetype&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cola-archetype-web&lt;/code&gt;：用来创建&lt;code&gt;adapter&lt;/code&gt;和后端服务一体的&lt;code&gt;web&lt;/code&gt;应用&lt;code&gt;archetype&lt;/code&gt;。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;二、COLA组件&lt;/h1&gt; &#xA;&lt;p&gt;此外，我们还提供了一些非常有用的通用组件，这些组件可以帮助我们提升研发效率。&lt;/p&gt; &#xA;&lt;p&gt;这些功能组件被收拢在&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/COLA/master/cola-components&#34;&gt;&lt;code&gt;cola-components&lt;/code&gt;目录&lt;/a&gt;下面。到目前为止，我们已经沉淀了以下组件：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;组件名称&lt;/th&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;   &lt;th&gt;版本&lt;/th&gt; &#xA;   &lt;th&gt;依赖&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cola-component-dto&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;定义了&lt;code&gt;DTO&lt;/code&gt;格式，包括分页&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cola-component-exception&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;定义了异常格式，&lt;br&gt;主要有&lt;code&gt;BizException&lt;/code&gt;和&lt;code&gt;SysException&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cola-component-statemachine&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;状态机组件&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cola-component-domain-starter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Spring&lt;/code&gt;托管的领域实体组件&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cola-component-catchlog-starter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;异常处理和日志组件&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;exception&lt;/code&gt;&lt;br&gt;、&lt;code&gt;dto&lt;/code&gt;组件&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cola-component-extension-starter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;扩展点组件&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;cola-component-test-container&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;测试容器组件&lt;/td&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;无&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;三、如何使用COLA&lt;/h1&gt; &#xA;&lt;h2&gt;1. 创建应用&lt;/h2&gt; &#xA;&lt;p&gt;执行以下命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn archetype:generate  \&#xA;    -DgroupId=com.alibaba.cola.demo.web \&#xA;    -DartifactId=demo-web \&#xA;    -Dversion=1.0.0-SNAPSHOT \&#xA;    -Dpackage=com.alibaba.demo \&#xA;    -DarchetypeArtifactId=cola-framework-archetype-web \&#xA;    -DarchetypeGroupId=com.alibaba.cola \&#xA;    -DarchetypeVersion=4.0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;命令执行成功的话，会看到如下的应用代码结构：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/20201209192258840.png&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;注：也可以使用阿里云的应用生成器：&lt;a href=&#34;https://start.aliyun.com/bootstrap.html&#34;&gt;https://start.aliyun.com/bootstrap.html&lt;/a&gt; 生成cola应用。&lt;/p&gt; &#xA;&lt;h2&gt;2. 运行应用&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在&lt;code&gt;项目&lt;/code&gt;目录下运行&lt;code&gt;mvn install&lt;/code&gt;（如果不想运行测试，可以加上&lt;code&gt;-DskipTests&lt;/code&gt;参数）。&lt;/li&gt; &#xA; &lt;li&gt;进入&lt;code&gt;start&lt;/code&gt;目录，执行&lt;code&gt;mvn spring-boot:run&lt;/code&gt;。&lt;br&gt; 运行成功的话，可以看到&lt;code&gt;SpringBoot&lt;/code&gt;启动成功的界面。&lt;/li&gt; &#xA; &lt;li&gt;生成的应用中，已经实现了一个简单的&lt;code&gt;Rest&lt;/code&gt;请求，可以在浏览器中输入 &lt;a href=&#34;http://localhost:8080/helloworld&#34;&gt;http://localhost:8080/helloworld&lt;/a&gt; 进行测试。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;如果要生成不是&lt;code&gt;web&lt;/code&gt;工程而是&lt;code&gt;service&lt;/code&gt;工程也类似，执行的是下面的命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn archetype:generate  \&#xA;    -DgroupId=com.alibaba.cola.demo.service \&#xA;    -DartifactId=demo-service \&#xA;    -Dversion=1.0.0-SNAPSHOT \&#xA;    -Dpackage=com.alibaba.demo \&#xA;    -DarchetypeArtifactId=cola-framework-archetype-service \&#xA;    -DarchetypeGroupId=com.alibaba.cola \&#xA;    -DarchetypeVersion=4.0.1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;版本迭代&lt;/h1&gt; &#xA;&lt;h2&gt;4.0.0 版本&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/significantfrank/article/details/110934799&#34;&gt;https://blog.csdn.net/significantfrank/article/details/110934799&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;3.1.0 版本&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/significantfrank/article/details/109529311&#34;&gt;https://blog.csdn.net/significantfrank/article/details/109529311&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;进一步简化了&lt;code&gt;cola-core&lt;/code&gt;，只保留了扩展能力。&lt;/li&gt; &#xA; &lt;li&gt;将&lt;code&gt;exception&lt;/code&gt;从&lt;code&gt;cola-core&lt;/code&gt;移入到&lt;code&gt;cola-common&lt;/code&gt;。&lt;/li&gt; &#xA; &lt;li&gt;对&lt;code&gt;archetype&lt;/code&gt;中的分包逻辑进行重构，改成按照&lt;code&gt;domain&lt;/code&gt;做划分。&lt;/li&gt; &#xA; &lt;li&gt;将&lt;code&gt;cola-archetype-web&lt;/code&gt;中的&lt;code&gt;controller&lt;/code&gt;改名为&lt;code&gt;adapter&lt;/code&gt;，为了呼应六边形架构的命名。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;3.0.0 版本&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/significantfrank/article/details/106976804&#34;&gt;https://blog.csdn.net/significantfrank/article/details/106976804&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;2.0.0 版本&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/significantfrank/article/details/100074716&#34;&gt;https://blog.csdn.net/significantfrank/article/details/100074716&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1.0.0 版本&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/significantfrank/article/details/85785565&#34;&gt;https://blog.csdn.net/significantfrank/article/details/85785565&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>F6JO/RouteVulScan</title>
    <updated>2022-06-17T01:32:12Z</updated>
    <id>tag:github.com,2022-06-17:/F6JO/RouteVulScan</id>
    <link href="https://github.com/F6JO/RouteVulScan" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Burpsuite - Route Vulnerable Scanning 递归式被动检测脆弱路径的burp插件&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RouteVulScan&lt;/h1&gt; &#xA;&lt;p&gt;Burpsuite - Route Vulnerable scanning 递归式被动检测脆弱路径的burp插件&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;合作者&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/deep0&#34;&gt;@deep0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;RouteVulScan是使用java语言基于burpsuite api开发的可以递归检测脆弱路径的burp插件。&lt;/p&gt; &#xA;&lt;p&gt;插件可以通过被动扫描的方式，递归对每一层路径进行路径探测，并通过设定好的正则表达式匹配关键字，展示在VulDisplay界面。可以自定义相关路径、匹配信息与漏洞名称等。&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/F6JO/RouteVulScan/main/img/config.jpg&#34;&gt; &#xA;&lt;p&gt;访问 &lt;a href=&#34;http://10.44.3.234/FD2aD90Mcg/login.html&#34;&gt;http://10.44.3.234/FD2aD90Mcg/login.html&lt;/a&gt; 探测的路径如下，可以看到RouteVulScan会对根路径，及第二层路径 /FD2aD90Mcg 探测，同理，如果有三层四层路径，都会进行探测。&lt;/p&gt; &#xA;&lt;p&gt;探测过的url会打印在Output，如果是重复的url则不会请求，并打印在Errors。如果访问的url符合Config的规则，则会储存在VulDisplay面板进行展示。&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/F6JO/RouteVulScan/main/img/out.jpg&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/F6JO/RouteVulScan/main/img/VulDisplay.jpg&#34;&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;装载插件：&lt;code&gt;Extender - Extensions - Add - Select File - Next&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;初次装载插件会在burpsuite当前目录下生成Config_yaml.yaml配置文件，内置11条初始规则，也可在config标签页自行加载其他yaml规则文件。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用Burpsuite IScannerCheck接口，在流量初次流经burp时进行扫描，重复流量不会进行扫描。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用线程池增加扫描速度，默认线程10，可自行调节。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;最后&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;如有正则、BUG、需求等欢迎提Issues&lt;/h3&gt; &#xA;&lt;p&gt;​&lt;/p&gt;</summary>
  </entry>
</feed>