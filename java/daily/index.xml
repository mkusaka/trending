<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-13T01:31:25Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>somta/Juggle</title>
    <updated>2024-07-13T01:31:25Z</updated>
    <id>tag:github.com,2024-07-13:/somta/Juggle</id>
    <link href="https://github.com/somta/Juggle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款适用于微服务编排，第三方api集成，私有化定制开发，编写BFF聚合层等场景的强大低码编排工具！&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Jdk-1.8%2B-orange&#34; alt=&#34;Static Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Maven-3.5.x-blue&#34; alt=&#34;Static Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/SpringBoot-2.7.14-green&#34; alt=&#34;Static Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Vue-3.x-purple&#34; alt=&#34;Static Badge&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Juggle&lt;/h1&gt; &#xA;&lt;h2&gt;项目介绍&lt;/h2&gt; &#xA;&lt;p&gt;Juggle是一个接口编排的低代码工具，通过它可以快速将简单的API编排成一个复杂的接口，编排的接口可以直接给前端使用，极大的提高开发效率，减轻开发成本。&lt;/p&gt; &#xA;&lt;h2&gt;什么时候需要Juggle&lt;/h2&gt; &#xA;&lt;p&gt;1.适合已有基础服务能力，通过Juggle进行编排编排快速搭建一个新产品。&lt;/p&gt; &#xA;&lt;p&gt;2.系统需要与第三方系统进行对接，通过Juggle直接进行编排，无需任何开发就可以完成对接。&lt;/p&gt; &#xA;&lt;p&gt;3.适合做前端的适配层（即BFF），可以用Juggle替代常见的通过Nodejs来实现BFF层的能力。&lt;/p&gt; &#xA;&lt;p&gt;4.适合需要面向私有化或大量定制开发的产品，通过Juggle编排定制化接口，避免对标准代码的污染。&lt;/p&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;h3&gt;1.环境准备&lt;/h3&gt; &#xA;&lt;p&gt;Juggle依赖Java环境来运行，因此您先要在设备上安装jdk，请保证是在以下版本环境中安装使用：&lt;/p&gt; &#xA;&lt;p&gt;a. 64 bit OS，支持 Linux/Unix/Mac/Windows，推荐选用 Linux/Unix/Mac。&lt;/p&gt; &#xA;&lt;p&gt;b. 64 bit JDK 1.8+；&lt;a href=&#34;https://maven.apache.org/download.cgi&#34;&gt;下载地址&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://docs.oracle.com/cd/E19182-01/820-7851/inst_cli_jdk_javahome_t/&#34;&gt;配置&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;2.下载安装包&lt;/h3&gt; &#xA;&lt;p&gt;您可以从 &lt;a href=&#34;https://github.com/somta/Juggle/releases&#34;&gt;最新稳定版本&lt;/a&gt; 下载 &lt;code&gt;juggle-server-$version.zip&lt;/code&gt; 包，window下直接通过解压工具解压&lt;code&gt;juggle-server-$version.zip&lt;/code&gt;，Linux/Unix/Mac通过如下命令解压&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;tar -xvf juggle-server-$version.tar.gz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3.启动服务器&lt;/h3&gt; &#xA;&lt;p&gt;启动脚本在juggle/bin目录&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;a.window启动&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;双击startup.cmd运行文件&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;b.Linux/Unix/Mac启动&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;sh startup.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4.访问Juggle&lt;/h3&gt; &#xA;&lt;p&gt;启动成功后，浏览器输入&lt;a href=&#34;http://127.0.0.1:9127%E8%AE%BF%E9%97%AEJuggle%EF%BC%8C%E9%BB%98%E8%AE%A4%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF&#34;&gt;http://127.0.0.1:9127访问Juggle，默认登录信息&lt;/a&gt; 账号：juggle 密码：juggle&lt;/p&gt; &#xA;&lt;h3&gt;5.示例流程&lt;/h3&gt; &#xA;&lt;p&gt;为了让用户更好的上手Juggle，系统自带了示例接口和示例流程，通过示例流程能快速了解Juggle的基础能力，示例流程核心逻辑请移步&lt;a href=&#34;https://www.juggle.plus/docs/guide/user/example-flow&#34;&gt;示例流程核心逻辑&lt;/a&gt; ，示例流程图如下： &lt;img src=&#34;https://raw.githubusercontent.com/somta/Juggle/develop/docs/static/juggle/images/guide/user/flow_example.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;示例接口地址：&lt;a href=&#34;https://www.juggle.plus/docs/guide/user/example-api&#34;&gt;https://www.juggle.plus/docs/guide/user/example-api&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;示例流程地址：&lt;a href=&#34;https://www.juggle.plus/docs/guide/user/example-flow&#34;&gt;https://www.juggle.plus/docs/guide/user/example-flow&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;交流与学习&lt;/h2&gt; &#xA;&lt;p&gt;通过如下方式加入，学习更多关于Juggle的知识，添加微信时，请备注&lt;strong&gt;Juggle&lt;/strong&gt;，谢谢！ &lt;img src=&#34;https://raw.githubusercontent.com/somta/Juggle/develop/docs/static/juggle/images/guide/wxqq.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;感恩与支持&lt;/h2&gt; &#xA;&lt;p&gt;感谢为Juggle功能持续更新日夜奋战的小伙伴们，感谢为项目提出宝贵优化意见的大佬们！&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; 动动您发财的手，点个Star，是对我们更新最大的支持！&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>TeamNewPipe/NewPipeExtractor</title>
    <updated>2024-07-13T01:31:25Z</updated>
    <id>tag:github.com,2024-07-13:/TeamNewPipe/NewPipeExtractor</id>
    <link href="https://github.com/TeamNewPipe/NewPipeExtractor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NewPipe&#39;s core library for extracting data from streaming sites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NewPipe Extractor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TeamNewPipe/NewPipeExtractor/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/TeamNewPipe/NewPipeExtractor/actions/workflows/ci.yml/badge.svg?branch=dev&amp;amp;event=schedule&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jitpack.io/#TeamNewPipe/NewPipeExtractor&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/TeamNewPipe/NewPipeExtractor.svg?sanitize=true&#34; alt=&#34;JIT Pack Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://teamnewpipe.github.io/NewPipeExtractor/javadoc/&#34;&gt;JDoc&lt;/a&gt; • &lt;a href=&#34;https://teamnewpipe.github.io/documentation/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NewPipe Extractor is a library for extracting things from streaming sites. It is a core component of &lt;a href=&#34;https://github.com/TeamNewPipe/NewPipe&#34;&gt;NewPipe&lt;/a&gt;, but could be used independently.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;NewPipe Extractor is available at JitPack&#39;s Maven repo.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using Gradle, you could add NewPipe Extractor as a dependency with the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;maven { url &#39;https://jitpack.io&#39; }&lt;/code&gt; to the &lt;code&gt;repositories&lt;/code&gt; in your &lt;code&gt;build.gradle&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;implementation &#39;com.github.TeamNewPipe:NewPipeExtractor:INSERT_VERSION_HERE&#39;&lt;/code&gt; to the &lt;code&gt;dependencies&lt;/code&gt; in your &lt;code&gt;build.gradle&lt;/code&gt;. Replace &lt;code&gt;INSERT_VERSION_HERE&lt;/code&gt; with the &lt;a href=&#34;https://github.com/TeamNewPipe/NewPipeExtractor/releases/latest&#34;&gt;latest release&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you are using tools to minimize your project, make sure to keep the files below, by e.g. adding the following lines to your proguard file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Rules for NewPipeExtractor&#xA;-keep class org.schabi.newpipe.extractor.timeago.patterns.** { *; }&#xA;-keep class org.mozilla.javascript.** { *; }&#xA;-keep class org.mozilla.classfile.ClassFileWriter&#xA;-dontwarn org.mozilla.javascript.tools.**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To use NewPipe Extractor in Android projects with a &lt;code&gt;minSdk&lt;/code&gt; below 26, &lt;a href=&#34;https://developer.android.com/studio/write/java8-support#library-desugaring&#34;&gt;API desugaring&lt;/a&gt; is required. If the &lt;code&gt;minSdk&lt;/code&gt; is below 19, the &lt;code&gt;desugar_jdk_libs_nio&lt;/code&gt; artifact is required, which requires Android Gradle Plugin (AGP) version 7.4.0.&lt;/p&gt; &#xA;&lt;h3&gt;Testing changes&lt;/h3&gt; &#xA;&lt;p&gt;To test changes quickly you can build the library locally. A good approach would be to add something like the following to your &lt;code&gt;settings.gradle&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;includeBuild(&#39;../NewPipeExtractor&#39;) {&#xA;    dependencySubstitution {&#xA;        substitute module(&#39;com.github.TeamNewPipe:NewPipeExtractor&#39;) with project(&#39;:extractor&#39;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another approach would be to use the local Maven repository, here&#39;s a gist of how to use it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;mavenLocal()&lt;/code&gt; in your project &lt;code&gt;repositories&lt;/code&gt; list (usually as the first entry to give priority above the others).&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s &lt;em&gt;recommended&lt;/em&gt; that you change the &lt;code&gt;version&lt;/code&gt; of this library (e.g. &lt;code&gt;LOCAL_SNAPSHOT&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Run gradle&#39;s &lt;code&gt;ìnstall&lt;/code&gt; task to deploy this library to your local repository (using the wrapper, present in the root of this project: &lt;code&gt;./gradlew install&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Change the dependency version used in your project to match the one you chose in step 2 (&lt;code&gt;implementation &#39;com.github.TeamNewPipe:NewPipeExtractor:LOCAL_SNAPSHOT&#39;&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Tip for Android Studio users: After you make changes and run the &lt;code&gt;install&lt;/code&gt; task, use the menu option &lt;code&gt;File → &#34;Sync with File System&#34;&lt;/code&gt; to refresh the library in your project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Supported sites&lt;/h2&gt; &#xA;&lt;p&gt;The following sites are currently supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;YouTube&lt;/li&gt; &#xA; &lt;li&gt;SoundCloud&lt;/li&gt; &#xA; &lt;li&gt;media.ccc.de&lt;/li&gt; &#xA; &lt;li&gt;PeerTube (no P2P)&lt;/li&gt; &#xA; &lt;li&gt;Bandcamp&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://www.gnu.org/graphics/gplv3-127x51.png&#34; alt=&#34;GNU GPLv3 Image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NewPipe Extractor is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href=&#34;https://www.gnu.org/licenses/gpl.html&#34;&gt;GNU General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</summary>
  </entry>
</feed>