<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-25T01:39:33Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JabRef/jabref</title>
    <updated>2023-06-25T01:39:33Z</updated>
    <id>tag:github.com,2023-06-25:/JabRef/jabref</id>
    <link href="https://github.com/JabRef/jabref" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Graphical Java application for managing BibTeX and biblatex (.bib) databases&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JabRef Bibliography Management&lt;/h1&gt; &#xA;&lt;p&gt;JabRef is an open-source, cross-platform citation and reference management tool.&lt;/p&gt; &#xA;&lt;p&gt;Stay on top of your literature: JabRef helps you to collect and organize sources, find the paper you need and discover the latest research.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JabRef/jabref/main/docs/images/jabref-mainscreen.png&#34; alt=&#34;main table&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;JabRef is available free of charge and is actively developed. It supports you in every step of your research work.&lt;/p&gt; &#xA;&lt;h3&gt;Collect&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Search across many online scientific catalogues like CiteSeer, CrossRef, Google Scholar, IEEEXplore, INSPIRE-HEP, Medline PubMed, MathSciNet, Springer, arXiv, and zbMATH&lt;/li&gt; &#xA; &lt;li&gt;Import options for over 15 reference formats&lt;/li&gt; &#xA; &lt;li&gt;Easily retrieve and link full-text articles&lt;/li&gt; &#xA; &lt;li&gt;Fetch complete bibliographic information based on ISBN, DOI, PubMed-ID and arXiv-ID&lt;/li&gt; &#xA; &lt;li&gt;Extract metadata from PDFs&lt;/li&gt; &#xA; &lt;li&gt;Import new references directly from the browser with one click using the &lt;a href=&#34;https://github.com/JabRef/JabRef-Browser-Extension&#34;&gt;official browser extension&lt;/a&gt; for &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/jabref/?src=external-github&#34;&gt;Firefox&lt;/a&gt;, &lt;a href=&#34;https://chrome.google.com/webstore/detail/jabref-browser-extension/bifehkofibaamoeaopjglfkddgkijdlh&#34;&gt;Chrome&lt;/a&gt;, &lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/pgkajmkfgbehiomipedjhoddkejohfna&#34;&gt;Edge&lt;/a&gt; and &lt;a href=&#34;https://chrome.google.com/webstore/detail/jabref-browser-extension/bifehkofibaamoeaopjglfkddgkijdlh&#34;&gt;Vivaldi&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Organize&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Group your research into hierarchical collections and organize research items based on keywords/tags, search terms or your manual assignments&lt;/li&gt; &#xA; &lt;li&gt;Advanced search and filter features&lt;/li&gt; &#xA; &lt;li&gt;Complete and fix bibliographic data by comparing with curated online catalogs such as Google Scholar, Springer or MathSciNet&lt;/li&gt; &#xA; &lt;li&gt;Customizable citation key generator&lt;/li&gt; &#xA; &lt;li&gt;Customize and add new metadata fields or reference types&lt;/li&gt; &#xA; &lt;li&gt;Find and merge duplicates&lt;/li&gt; &#xA; &lt;li&gt;Attach related documents: 20 different kinds of documents supported out of the box, completely customizable and extendable&lt;/li&gt; &#xA; &lt;li&gt;Automatically rename and move associated documents according to customizable rules&lt;/li&gt; &#xA; &lt;li&gt;Keep track of what you read: ranking, priority, printed, quality-assured&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Cite&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Native BibTeX and Biblatex support&lt;/li&gt; &#xA; &lt;li&gt;Cite-as-you-write functionality for external applications such as Emacs, Kile, LyX, Texmaker, TeXstudio, Vim and WinEdt.&lt;/li&gt; &#xA; &lt;li&gt;Format references using one of thousands of built-in citation styles or create your own style&lt;/li&gt; &#xA; &lt;li&gt;Support for Word and LibreOffice/OpenOffice for inserting and formatting citations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Share&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many built-in export options or create your export format&lt;/li&gt; &#xA; &lt;li&gt;Library is saved as a simple text file, and thus it is easy to share with others via Dropbox and is version-control friendly&lt;/li&gt; &#xA; &lt;li&gt;Work in a team: sync the contents of your library via a SQL database&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Fresh development builds are available at &lt;a href=&#34;https://builds.jabref.org/main/&#34;&gt;builds.jabref.org&lt;/a&gt;. The &lt;a href=&#34;https://downloads.jabref.org/&#34;&gt;latest stable release is available at FossHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please see our &lt;a href=&#34;https://docs.jabref.org/installation&#34;&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Bug Reports, Suggestions, Other Feedback&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://donations.jabref.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate%20to-jabref-orange.svg?sanitize=true&#34; alt=&#34;Donation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://paypal.me/JabRef&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-paypal-00457c.svg?logo=paypal&amp;amp;style=flat-square&#34; alt=&#34;PayPal Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;We are thankful for any bug reports or other feedback. If you have ideas for new features you want to be included in JabRef, tell us in &lt;a href=&#34;http://discourse.jabref.org/c/features&#34;&gt;the feature section&lt;/a&gt; of our forum! If you need support in using JabRef, please read &lt;a href=&#34;https://docs.jabref.org/&#34;&gt;the documentation&lt;/a&gt; first, the &lt;a href=&#34;https://docs.jabref.org/faq&#34;&gt;frequently asked questions (FAQ)&lt;/a&gt; and also have a look at our &lt;a href=&#34;https://discourse.jabref.org/c/help/7&#34;&gt;community forum&lt;/a&gt;. You can use our &lt;a href=&#34;https://github.com/JabRef/jabref/issues&#34;&gt;GitHub issue tracker&lt;/a&gt; to file bug reports.&lt;/p&gt; &#xA;&lt;p&gt;An explanation of donation possibilities and usage of donations is available at our &lt;a href=&#34;https://donations.jabref.org&#34;&gt;donations page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://devdocs.jabref.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dev-docs-blue&#34; alt=&#34;dev-docs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codetriage.com/jabref/jabref&#34;&gt;&lt;img src=&#34;https://www.codetriage.com/jabref/jabref/badges/users.svg?sanitize=true&#34; alt=&#34;Help Contribute to Open Source&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/JabRef/jabref?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Join%20Chat.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/JabRef/jabref&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.openhub.net/p/jabref&#34;&gt;&lt;img src=&#34;https://www.openhub.net/p/jabref/widgets/project_thin_badge.gif&#34; alt=&#34;OpenHub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JabRef/jabref/actions?query=workflow%3ADeployment&#34;&gt;&lt;img src=&#34;https://github.com/JabRef/jabref/workflows/Deployment/badge.svg?sanitize=true&#34; alt=&#34;Deployment Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JabRef/jabref/actions?query=workflow%3ATests&#34;&gt;&lt;img src=&#34;https://github.com/JabRef/jabref/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Test Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/github/JabRef/jabref?branch=main&#34;&gt;&lt;img src=&#34;https://codecov.io/github/JabRef/jabref/coverage.svg?branch=master&#34; alt=&#34;codecov.io&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Want to be part of a free and open-source project that tens of thousands of scientists use every day? Check out the ways you can contribute, below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not a programmer? Help translating JabRef at &lt;a href=&#34;https://crowdin.com/project/jabref&#34;&gt;Crowdin&lt;/a&gt; or learn how to help at &lt;a href=&#34;https://contribute.jabref.org&#34;&gt;contribute.jabref.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Quick overview on the architecture needed? Look at our &lt;a href=&#34;https://devdocs.jabref.org/getting-into-the-code/high-level-documentation&#34;&gt;high-level documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For details on how to contribute, have a look at our &lt;a href=&#34;https://raw.githubusercontent.com/JabRef/jabref/main/CONTRIBUTING.md&#34;&gt;guidelines for contributing&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You are welcome to contribute new features. To get your code included into JabRef, just &lt;a href=&#34;https://help.github.com/en/articles/fork-a-repo&#34;&gt;fork&lt;/a&gt; the JabRef repository, make your changes, and create a &lt;a href=&#34;https://help.github.com/en/articles/about-pull-requests&#34;&gt;pull request&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To work on existing JabRef issues, check out our &lt;a href=&#34;https://github.com/JabRef/jabref/issues&#34;&gt;issue tracker&lt;/a&gt;. New to open source contributing? Look for issues with the &lt;a href=&#34;https://github.com/JabRef/jabref/labels/good%20first%20issue&#34;&gt;&#34;good first issue&#34;&lt;/a&gt; label to get started.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We view pull requests as a collaborative process. Submit a pull request early to get feedback from the team on work in progress. We will discuss improvements with you and agree to merge them once the &lt;a href=&#34;https://github.com/JabRef/jabref/raw/main/MAINTAINERS&#34;&gt;developers&lt;/a&gt; approve. Please also remember to discuss bigger changes early with the core developers to avoid a waste of time and work. Some fundamental design decisions can be found within our list of &lt;a href=&#34;https://devdocs.jabref.org/decisions/&#34;&gt;Architectural Decision Records&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want a step-by-step walk-through on how to set-up your workspace, please check &lt;a href=&#34;https://devdocs.jabref.org/getting-into-the-code/guidelines-for-setting-up-a-local-workspace&#34;&gt;this guideline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To compile JabRef from source, you need a Java Development Kit 20 and &lt;code&gt;JAVA_HOME&lt;/code&gt; pointing to this JDK. To run it, just execute &lt;code&gt;gradlew run&lt;/code&gt;. When you want to develop, it is necessary to generate additional sources using &lt;code&gt;gradlew generateSource&lt;/code&gt; and then generate the Eclipse &lt;code&gt;gradlew eclipse&lt;/code&gt;. For IntelliJ IDEA, just import the project via a Gradle Import by pointing at the &lt;code&gt;build.gradle&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gradlew test&lt;/code&gt; executes all tests. We use &lt;a href=&#34;https://github.com/JabRef/jabref/actions&#34;&gt;GitHub Actions&lt;/a&gt; for executing the tests after each commit. For developing, it is sufficient to locally only run the associated test for the classes you changed. Github will report any other failure.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsoring&lt;/h2&gt; &#xA;&lt;p&gt;JabRef development is powered by YourKit Java Profiler &lt;a href=&#34;https://www.yourkit.com/java/profiler/&#34;&gt;&lt;img src=&#34;https://www.yourkit.com/images/yk_logo.svg?sanitize=true&#34; alt=&#34;YourKit Java Profiler&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>confluentinc/schema-registry</title>
    <updated>2023-06-25T01:39:33Z</updated>
    <id>tag:github.com,2023-06-25:/confluentinc/schema-registry</id>
    <link href="https://github.com/confluentinc/schema-registry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Confluent Schema Registry for Kafka&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Schema Registry&lt;/h1&gt; &#xA;&lt;p&gt;Confluent Schema Registry provides a serving layer for your metadata. It provides a RESTful interface for storing and retrieving your Avro®, JSON Schema, and Protobuf schemas. It stores a versioned history of all schemas based on a specified subject name strategy, provides multiple compatibility settings and allows evolution of schemas according to the configured compatibility settings and expanded support for these schema types. It provides serializers that plug into Apache Kafka® clients that handle schema storage and retrieval for Kafka messages that are sent in any of the supported formats.&lt;/p&gt; &#xA;&lt;p&gt;This README includes the following sections:&lt;/p&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;!-- generated with [DocToc](https://github.com/thlorenz/doctoc), see the link for install and instructions for use --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/#quickstart-api-usage-examples&#34;&gt;Quickstart API Usage examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/#deployment&#34;&gt;Deployment&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/#development&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/#openapi-spec&#34;&gt;OpenAPI Spec&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/#contribute&#34;&gt;Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Here are a few links to Schema Registry pages in the Confluent Documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.confluent.io/current/schema-registry/installation/index.html&#34;&gt;Installing and Configuring Schema Registry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.confluent.io/current/schema-registry/index.html&#34;&gt;Schema Management overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.confluent.io/current/schema-registry/schema_registry_tutorial.html&#34;&gt;Schema Registry Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.confluent.io/current/schema-registry/develop/api.html&#34;&gt;Schema Registry API reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.confluent.io/current/schema-registry/serializer-formatter.html&#34;&gt;Serializers, Deserializers for supported schema types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.confluent.io/current/clients/index.html#kafka-clients&#34;&gt;Kafka Clients&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.confluent.io/current/quickstart/cloud-quickstart/schema-registry.html&#34;&gt;Schema Registry on Confluent Cloud&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart API Usage examples&lt;/h2&gt; &#xA;&lt;p&gt;The following assumes you have Kafka and an &lt;a href=&#34;https://docs.confluent.io/current/schema-registry/installation/index.html&#34;&gt;instance of the Schema Registry&lt;/a&gt; running using the default settings. These examples, and more, are also available at &lt;a href=&#34;https://docs.confluent.io/current/schema-registry/using.html&#34;&gt;API Usage examples&lt;/a&gt; on &lt;a href=&#34;https://docs.confluent.io/current/&#34;&gt;docs.confluent.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Register a new version of a schema under the subject &#34;Kafka-key&#34;&#xA;$ curl -X POST -H &#34;Content-Type: application/vnd.schemaregistry.v1+json&#34; \&#xA;    --data &#39;{&#34;schema&#34;: &#34;{\&#34;type\&#34;: \&#34;string\&#34;}&#34;}&#39; \&#xA;    http://localhost:8081/subjects/Kafka-key/versions&#xA;  {&#34;id&#34;:1}&#xA;&#xA;# Register a new version of a schema under the subject &#34;Kafka-value&#34;&#xA;$ curl -X POST -H &#34;Content-Type: application/vnd.schemaregistry.v1+json&#34; \&#xA;    --data &#39;{&#34;schema&#34;: &#34;{\&#34;type\&#34;: \&#34;string\&#34;}&#34;}&#39; \&#xA;     http://localhost:8081/subjects/Kafka-value/versions&#xA;  {&#34;id&#34;:1}&#xA;&#xA;# List all subjects&#xA;$ curl -X GET http://localhost:8081/subjects&#xA;  [&#34;Kafka-value&#34;,&#34;Kafka-key&#34;]&#xA;&#xA;# List all schema versions registered under the subject &#34;Kafka-value&#34;&#xA;$ curl -X GET http://localhost:8081/subjects/Kafka-value/versions&#xA;  [1]&#xA;&#xA;# Fetch a schema by globally unique id 1&#xA;$ curl -X GET http://localhost:8081/schemas/ids/1&#xA;  {&#34;schema&#34;:&#34;\&#34;string\&#34;&#34;}&#xA;&#xA;# Fetch version 1 of the schema registered under subject &#34;Kafka-value&#34;&#xA;$ curl -X GET http://localhost:8081/subjects/Kafka-value/versions/1&#xA;  {&#34;subject&#34;:&#34;Kafka-value&#34;,&#34;version&#34;:1,&#34;id&#34;:1,&#34;schema&#34;:&#34;\&#34;string\&#34;&#34;}&#xA;&#xA;# Fetch the most recently registered schema under subject &#34;Kafka-value&#34;&#xA;$ curl -X GET http://localhost:8081/subjects/Kafka-value/versions/latest&#xA;  {&#34;subject&#34;:&#34;Kafka-value&#34;,&#34;version&#34;:1,&#34;id&#34;:1,&#34;schema&#34;:&#34;\&#34;string\&#34;&#34;}&#xA;&#xA;# Delete version 3 of the schema registered under subject &#34;Kafka-value&#34;&#xA;$ curl -X DELETE http://localhost:8081/subjects/Kafka-value/versions/3&#xA;  3&#xA;&#xA;# Delete all versions of the schema registered under subject &#34;Kafka-value&#34;&#xA;$ curl -X DELETE http://localhost:8081/subjects/Kafka-value&#xA;  [1, 2, 3, 4, 5]&#xA;&#xA;# Check whether a schema has been registered under subject &#34;Kafka-key&#34;&#xA;$ curl -X POST -H &#34;Content-Type: application/vnd.schemaregistry.v1+json&#34; \&#xA;    --data &#39;{&#34;schema&#34;: &#34;{\&#34;type\&#34;: \&#34;string\&#34;}&#34;}&#39; \&#xA;    http://localhost:8081/subjects/Kafka-key&#xA;  {&#34;subject&#34;:&#34;Kafka-key&#34;,&#34;version&#34;:1,&#34;id&#34;:1,&#34;schema&#34;:&#34;\&#34;string\&#34;&#34;}&#xA;&#xA;# Test compatibility of a schema with the latest schema under subject &#34;Kafka-value&#34;&#xA;$ curl -X POST -H &#34;Content-Type: application/vnd.schemaregistry.v1+json&#34; \&#xA;    --data &#39;{&#34;schema&#34;: &#34;{\&#34;type\&#34;: \&#34;string\&#34;}&#34;}&#39; \&#xA;    http://localhost:8081/compatibility/subjects/Kafka-value/versions/latest&#xA;  {&#34;is_compatible&#34;:true}&#xA;&#xA;# Get top level config&#xA;$ curl -X GET http://localhost:8081/config&#xA;  {&#34;compatibilityLevel&#34;:&#34;BACKWARD&#34;}&#xA;&#xA;# Update compatibility requirements globally&#xA;$ curl -X PUT -H &#34;Content-Type: application/vnd.schemaregistry.v1+json&#34; \&#xA;    --data &#39;{&#34;compatibility&#34;: &#34;NONE&#34;}&#39; \&#xA;    http://localhost:8081/config&#xA;  {&#34;compatibility&#34;:&#34;NONE&#34;}&#xA;&#xA;# Update compatibility requirements under the subject &#34;Kafka-value&#34;&#xA;$ curl -X PUT -H &#34;Content-Type: application/vnd.schemaregistry.v1+json&#34; \&#xA;    --data &#39;{&#34;compatibility&#34;: &#34;BACKWARD&#34;}&#39; \&#xA;    http://localhost:8081/config/Kafka-value&#xA;  {&#34;compatibility&#34;:&#34;BACKWARD&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can download prebuilt versions of the schema registry as part of the &lt;a href=&#34;http://confluent.io/downloads/&#34;&gt;Confluent Platform&lt;/a&gt;. To install from source, follow the instructions in the Development section.&lt;/p&gt; &#xA;&lt;h2&gt;Deployment&lt;/h2&gt; &#xA;&lt;p&gt;The REST interface to schema registry includes a built-in Jetty server. The wrapper scripts &lt;code&gt;bin/schema-registry-start&lt;/code&gt; and &lt;code&gt;bin/schema-registry-stop&lt;/code&gt; are the recommended method of starting and stopping the service.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To build a development version, you may need a development versions of &lt;a href=&#34;https://github.com/confluentinc/common&#34;&gt;common&lt;/a&gt; and &lt;a href=&#34;https://github.com/confluentinc/rest-utils&#34;&gt;rest-utils&lt;/a&gt;. After installing these, you can build the Schema Registry with Maven.&lt;/p&gt; &#xA;&lt;p&gt;This project uses the &lt;a href=&#34;https://google.github.io/styleguide/javaguide.html&#34;&gt;Google Java code style&lt;/a&gt; to keep code clean and consistent.&lt;/p&gt; &#xA;&lt;p&gt;To build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the unit and integration tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run an instance of Schema Registry against a local Kafka cluster (using the default configuration included with Kafka):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn exec:java -pl :kafka-schema-registry -Dexec.args=&#34;config/schema-registry.properties&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To create a packaged version, optionally skipping the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn package [-DskipTests]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It produces:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Schema registry in &lt;code&gt;package-schema-registry/target/kafka-schema-registry-package-$VERSION-package&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Serde tools for avro/json/protobuf in &lt;code&gt;package-kafka-serde-tools/target/kafka-serde-tools-package-$VERSION-package&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each of the produced contains a directory layout similar to the packaged binary versions.&lt;/p&gt; &#xA;&lt;p&gt;You can also produce a standalone fat JAR of schema registry using the &lt;code&gt;standalone&lt;/code&gt; profile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mvn package -P standalone [-DskipTests]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This generates &lt;code&gt;package-schema-registry/target/kafka-schema-registry-package-$VERSION-standalone.jar&lt;/code&gt;, which includes all the dependencies as well.&lt;/p&gt; &#xA;&lt;h2&gt;OpenAPI Spec&lt;/h2&gt; &#xA;&lt;p&gt;OpenAPI (formerly known as Swagger) specifications are built automatically using &lt;code&gt;swagger-maven-plugin&lt;/code&gt; on &lt;code&gt;compile&lt;/code&gt; phase.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Thanks for helping us to make Schema Registry even better!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source Code: &lt;a href=&#34;https://github.com/confluentinc/schema-registry&#34;&gt;https://github.com/confluentinc/schema-registry&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issue Tracker: &lt;a href=&#34;https://github.com/confluentinc/schema-registry/issues&#34;&gt;https://github.com/confluentinc/schema-registry/issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/LICENSE-ConfluentCommunity&#34;&gt;Confluent Community License&lt;/a&gt;, except for the &lt;code&gt;client-*&lt;/code&gt; and &lt;code&gt;avro-*&lt;/code&gt; libs, which are under the &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/schema-registry/master/LICENSE-Apache&#34;&gt;Apache 2.0 license&lt;/a&gt;. See LICENSE file in each subfolder for detailed license agreement.&lt;/p&gt;</summary>
  </entry>
</feed>