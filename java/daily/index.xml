<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-18T01:37:53Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JessYanCoding/AndroidAutoSize</title>
    <updated>2022-09-18T01:37:53Z</updated>
    <id>tag:github.com,2022-09-18:/JessYanCoding/AndroidAutoSize</id>
    <link href="https://github.com/JessYanCoding/AndroidAutoSize" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üî• A low-cost Android screen adaptation solution (‰ªäÊó•Â§¥Êù°Â±èÂπïÈÄÇÈÖçÊñπÊ°àÁªàÊûÅÁâàÔºå‰∏Ä‰∏™ÊûÅ‰ΩéÊàêÊú¨ÁöÑ Android Â±èÂπïÈÄÇÈÖçÊñπÊ°à).&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/autosize_banner.jpg&#34; alt=&#34;Logo&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/MVPArms/master/image/official.jpeg&#34; alt=&#34;Official&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://bintray.com/jessyancoding/maven/autosize/_latestVersion&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Jcenter-v1.2.1-brightgreen.svg?style=flat-square&#34; alt=&#34;Latest Stable Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/JessYanCoding/AndroidAutoSize&#34;&gt; &lt;img src=&#34;https://travis-ci.org/JessYanCoding/AndroidAutoSize.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://developer.android.com/about/versions/android-4.0.html&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/API-14%2B-blue.svg?style=flat-square&#34; alt=&#34;Min Sdk Version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/License-Apache%202.0-blue.svg?style=flat-square&#34; alt=&#34;License&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.jianshu.com/u/1d0c0bc634db&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Author-JessYan-orange.svg?style=flat-square&#34; alt=&#34;Author&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://shang.qq.com/wpa/qunwpa?idkey=7e59e59145e6c7c68932ace10f52790636451f01d1ecadb6a652b1df234df753&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/QQ%E7%BE%A4-455850365%20%7C%20301733278-orange.svg?style=flat-square&#34; alt=&#34;QQ Group&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/README-zh.md&#34;&gt; &lt;b&gt;‰∏≠ÊñáËØ¥Êòé&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;A low-cost Android screen adaptation solution (‰ªäÊó•Â§¥Êù°Â±èÂπïÈÄÇÈÖçÊñπÊ°àÁªàÊûÅÁâàÔºå‰∏Ä‰∏™ÊûÅ‰ΩéÊàêÊú¨ÁöÑ Android Â±èÂπïÈÄÇÈÖçÊñπÊ°à).&lt;/h2&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;h3&gt;Pixel 2 XL | 1440 x 2880 | 560dpi:&lt;/h3&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1440x2880_width.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1440x2880_height.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1440x2880_external.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Pixel XL | 1440 x 2560 | 560dpi:&lt;/h3&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1440x2560_width.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1440x2560_height.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1440x2560_external.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Nexus 5X | 1080 x 1920 | 420dpi:&lt;/h3&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1080x1920_width.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1080x1920_height.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/1080x1920_external.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Nexus 4 | 768 x 1280 | 320dpi:&lt;/h3&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/768x1280_width.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/768x1280_height.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/768x1280_external.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Nexus S | 480 x 800 | 240dpi:&lt;/h3&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/480x800_width.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/480x800_height.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/480x800_external.png&#34; width=&#34;30%&#34; height=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://material.io/tools/devices/&#34;&gt;Devices Info&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://juejin.im/post/5bce688e6fb9a05cf715d1c2&#34;&gt;Introduction Of Function&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://juejin.im/post/5b7a29736fb9a019d53e7ee2&#34;&gt;Framework Analysis&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JessYanCoding/AndroidAutoSize/issues/13&#34;&gt;Common Issues&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JessYanCoding/AndroidAutoSize/issues/90&#34;&gt;AndroidAutoLayout Migration Guide&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JessYanCoding/MVPArms&#34;&gt;Android Advanced Framework&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;h3&gt;Jcenter (&lt;a href=&#34;https://jfrog.com/blog/into-the-sunset-bintray-jcenter-gocenter-and-chartcenter&#34;&gt; ‚ö†Ô∏è DEPRECATION WARNING: the JCenter repository will keep serving packages until February 1st, 2022&lt;/a&gt;):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt; implementation &#39;me.jessyan:autosize:1.2.1&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JitPack:&lt;/h3&gt; &#xA;&lt;p&gt;Step 1. Add the JitPack repository in your root &lt;a href=&#34;https://github.com/JessYanCoding/AndroidAutoSize/raw/master/build.gradle#L20&#34;&gt;build.gradle&lt;/a&gt; at the end of repositories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;allprojects {&#xA;    repositories {&#xA;        ...&#xA;        maven { url &#34;https://jitpack.io&#34; }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Step 2. Add the dependency&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    implementation &#39;com.github.JessYanCoding:AndroidAutoSize:v1.2.1&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Step 1 (just one steps)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Initialize in AndroidManifest, if you use a subunits, you can write the pixel size, no need to convert the pixel to dp, please see &lt;a href=&#34;https://github.com/JessYanCoding/AndroidAutoSize/tree/master/demo-subunits&#34;&gt;demo-subunits&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;manifest&amp;gt;&#xA;    &amp;lt;application&amp;gt;            &#xA;        &amp;lt;meta-data&#xA;            android:name=&#34;design_width_in_dp&#34;&#xA;            android:value=&#34;360&#34;/&amp;gt;&#xA;        &amp;lt;meta-data&#xA;            android:name=&#34;design_height_in_dp&#34;&#xA;            android:value=&#34;640&#34;/&amp;gt;           &#xA;     &amp;lt;/application&amp;gt;           &#xA;&amp;lt;/manifest&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;preview&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Real-time preview during layout is an important part of the development phase, in many cases, the default preview device provided by &lt;strong&gt;Android Studio&lt;/strong&gt; does not fully display our design, so we need to create the virtual device ourselves, under the &lt;strong&gt;dp, pt, in, mm&lt;/strong&gt; four units of virtual device creation method&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you don&#39;t want the status bar and navigation bar to appear in &lt;strong&gt;Preview&lt;/strong&gt; during preview, you can select the &lt;strong&gt;panel&lt;/strong&gt; theme according to the following image, after using this theme, the vertical resolution just fills the entire preview page &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/theme_panel.png&#34; alt=&#34;theme&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Virtual device creation method &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/create_step.png&#34; alt=&#34;create step&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;DP&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you use &lt;strong&gt;dp&lt;/strong&gt; as a unit in the &lt;strong&gt;layout&lt;/strong&gt; file for layout (&lt;strong&gt;AndroidAutoSize&lt;/strong&gt; supports &lt;strong&gt;dp, sp&lt;/strong&gt; for layout by default), you can find the screen size according to the formula &lt;strong&gt;(sqrt(vertical resolution^2 + horizontal resolution^2))/dpi&lt;/strong&gt; and create an virtual device (&lt;strong&gt;write screen size and resolution only&lt;/strong&gt;) &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/unit_dp.png&#34; alt=&#34;dp&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;PT&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you use &lt;strong&gt;pt&lt;/strong&gt; as a unit in the &lt;strong&gt;layout&lt;/strong&gt; file for layout (requires &lt;strong&gt;AutoSizeConfig.getInstance().getUnitsManager().setSupportSubunits(Subunits.PT);&lt;/strong&gt; to open &lt;strong&gt;pt&lt;/strong&gt; support), you can find the screen size according to the formula &lt;strong&gt;(sqrt(vertical resolution^2 + horizontal resolution^2))/72&lt;/strong&gt; and create an virtual device (&lt;strong&gt;write screen size and resolution only&lt;/strong&gt;) &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/unit_pt.png&#34; alt=&#34;pt&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IN&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you use &lt;strong&gt;in&lt;/strong&gt; as a unit in the &lt;strong&gt;layout&lt;/strong&gt; file for layout (requires &lt;strong&gt;AutoSizeConfig.getInstance().getUnitsManager().setSupportSubunits(Subunits.IN);&lt;/strong&gt; to open &lt;strong&gt;in&lt;/strong&gt; support), you can find the screen size according to the formula &lt;strong&gt;sqrt(vertical resolution^2 + horizontal resolution^2)&lt;/strong&gt; and create an virtual device (&lt;strong&gt;write screen size and resolution only&lt;/strong&gt;) &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/unit_in.png&#34; alt=&#34;in&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MM&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you use &lt;strong&gt;mm&lt;/strong&gt; as a unit in the &lt;strong&gt;layout&lt;/strong&gt; file for layout (requires &lt;strong&gt;AutoSizeConfig.getInstance().getUnitsManager().setSupportSubunits(Subunits.MM);&lt;/strong&gt; to open &lt;strong&gt;mm&lt;/strong&gt; support), you can find the screen size according to the formula &lt;strong&gt;(sqrt(vertical resolution^2 + horizontal resolution^2))/25.4&lt;/strong&gt; and create an virtual device (&lt;strong&gt;write screen size and resolution only&lt;/strong&gt;) &lt;img src=&#34;https://raw.githubusercontent.com/JessYanCoding/AndroidAutoSize/master/art/unit_mm.png&#34; alt=&#34;mm&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advance (see demo)&lt;/h2&gt; &#xA;&lt;h3&gt;Activity&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize the adaptation parameters of the Activity:&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class CustomAdaptActivity extends AppCompatActivity implements CustomAdapt {&#xA;&#xA;    @Override&#xA;    public boolean isBaseOnWidth() {&#xA;        return false;&#xA;    }&#xA;&#xA;    @Override&#xA;    public float getSizeInDp() {&#xA;        return 667;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cancel the adaptation of the Activity:&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class CancelAdaptActivity extends AppCompatActivity implements CancelAdapt {&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Fragment&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;First enable the ability to support Fragment custom parameters&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;AutoSizeConfig.getInstance().setCustomFragment(true);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customize the adaptation parameters of the Fragment:&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class CustomAdaptFragment extends Fragment implements CustomAdapt {&#xA;&#xA;    @Override&#xA;    public boolean isBaseOnWidth() {&#xA;        return false;&#xA;    }&#xA;&#xA;    @Override&#xA;    public float getSizeInDp() {&#xA;        return 667;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cancel the adaptation of the Fragment:&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class CancelAdaptFragment extends Fragment implements CancelAdapt {&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Subunits (see demo-subunits)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can choose one of the three unpopular units of &lt;strong&gt;pt, in, mm&lt;/strong&gt; as the subunits, the subunits is used to avoid the adverse effects caused by modifying &lt;strong&gt;DisplayMetrics#density&lt;/strong&gt;, after using the subunits, you can write the pixel size on the design, you don&#39;t need to convert it to &lt;strong&gt;dp&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;AutoSizeConfig.getInstance().getUnitsManager()&#xA;        .setSupportDP(false)&#xA;        .setSupportSP(false)&#xA;        .setSupportSubunits(Subunits.MM);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;About Me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;: &lt;a href=&#34;mailto:jess.yan.effort@gmail.com&#34;&gt;jess.yan.effort@gmail.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Home&lt;/strong&gt;: &lt;a href=&#34;http://jessyan.me&#34;&gt;http://jessyan.me&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÊéòÈáë&lt;/strong&gt;: &lt;a href=&#34;https://juejin.im/user/57a9dbd9165abd0061714613&#34;&gt;https://juejin.im/user/57a9dbd9165abd0061714613&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ÁÆÄ‰π¶&lt;/strong&gt;: &lt;a href=&#34;https://www.jianshu.com/u/1d0c0bc634db&#34;&gt;https://www.jianshu.com/u/1d0c0bc634db&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt; Copyright 2018, jessyan&#xA;&#xA;   Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;   you may not use this file except in compliance with the License.&#xA;   You may obtain a copy of the License at&#xA;&#xA;       http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;   Unless required by applicable law or agreed to in writing, software&#xA;   distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;   See the License for the specific language governing permissions and&#xA;   limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>apache/iotdb</title>
    <updated>2022-09-18T01:37:53Z</updated>
    <id>tag:github.com,2022-09-18:/apache/iotdb</id>
    <link href="https://github.com/apache/iotdb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache IoTDB&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/README.md&#34;&gt;English&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/README_ZH.md&#34;&gt;‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;IoTDB&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/iotdb/actions/workflows/main-unix.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/iotdb/actions/workflows/main-unix.yml/badge.svg?sanitize=true&#34; alt=&#34;Main Mac and Linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/iotdb/actions/workflows/main-win.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/iotdb/actions/workflows/main-win.yml/badge.svg?sanitize=true&#34; alt=&#34;Main Win&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/repos/github/apache/iotdb/badge.svg?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/apache/iotdb/badge.svg?branch=master&#34; alt=&#34;coveralls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/iotdb/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/apache/iotdb.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github-size-badge.herokuapp.com/apache/iotdb.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/apache/iotdb/total.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/platform-win%20%7C%20macos%20%7C%20linux-yellow.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/java--language-1.8%20%7C%2011%20%7C%2017-blue.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://lgtm.com/projects/g/apache/iotdb/context:java&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/java/g/apache/iotdb.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: Java&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://iotdb.apache.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/website-up-down-green-red/https/shields.io.svg?label=iotdb-website&#34; alt=&#34;IoTDB Website&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://search.maven.org/#search%7Cgav%7C1%7Cg:%22org.apache.iotdb%22&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/org.apache.iotdb/iotdb-parent/badge.svg?sanitize=true&#34; alt=&#34;Maven Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/apache/iotdb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/apacheiotdb/shared_invite/zt-qvso1nj8-7715TpySZtZqmyG5qXQwpg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;IoTDB (Internet of Things Database) is a data management system for time series data, which provides users with specific services including data collection, storage and analysis. Due to its light weight structure, high performance and usable features, together with its seamless integration with the Hadoop and Spark ecology, IoTDB meets the requirements of massive dataset storage, high throughput data input, and complex data analysis in the industrial IoT field.&lt;/p&gt; &#xA;&lt;h1&gt;Main Features&lt;/h1&gt; &#xA;&lt;p&gt;Main features of IoTDB are as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Flexible deployment strategy. IoTDB provides users a one-click installation tool on either the cloud platform or the terminal devices, and a data synchronization tool bridging the data on cloud platform and terminals.&lt;/li&gt; &#xA; &lt;li&gt;Low cost on hardware. IoTDB can reach a high compression ratio of disk storage.&lt;/li&gt; &#xA; &lt;li&gt;Efficient directory structure. IoTDB supports efficient organization for complex time series data structures from intelligent networking devices, organization for time series data from devices of the same type, and fuzzy searching strategy for massive and complex directory of time series data.&lt;/li&gt; &#xA; &lt;li&gt;High-throughput read and write. IoTDB supports millions of low-power devices&#39; strong connection data access, high-speed data read and write for intelligent networking devices and mixed devices mentioned above.&lt;/li&gt; &#xA; &lt;li&gt;Rich query semantics. IoTDB supports time alignment for time series data across devices and measurements, computation in time series field (frequency domain transformation) and rich aggregation function support in time dimension.&lt;/li&gt; &#xA; &lt;li&gt;Easy to get started. IoTDB supports SQL-Like language, JDBC standard API and import/export tools which is easy to use.&lt;/li&gt; &#xA; &lt;li&gt;Seamless integration with state-of-the-practice Open Source Ecosystem. IoTDB supports analysis ecosystems such as, Hadoop, Spark, and visualization tool, such as, Grafana.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For the latest information about IoTDB, please visit &lt;a href=&#34;https://iotdb.apache.org/&#34;&gt;IoTDB official website&lt;/a&gt;. If you encounter any problems or identify any bugs while using IoTDB, please report an issue in &lt;a href=&#34;https://issues.apache.org/jira/projects/IOTDB/issues&#34;&gt;jira&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- TOC --&gt; &#xA;&lt;h2&gt;Outline&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#iotdb&#34;&gt;IoTDB&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#overview&#34;&gt;Overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#main-features&#34;&gt;Main Features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#outline&#34;&gt;Outline&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#quick-start&#34;&gt;Quick Start&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#build-from-source&#34;&gt;Build from source&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#configurations&#34;&gt;Configurations&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#start&#34;&gt;Start&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#start-iotdb&#34;&gt;Start IoTDB&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#use-iotdb&#34;&gt;Use IoTDB&lt;/a&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#use-cli&#34;&gt;Use Cli&lt;/a&gt;&lt;/li&gt; &#xA;       &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#basic-commands-for-iotdb&#34;&gt;Basic commands for IoTDB&lt;/a&gt;&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#stop-iotdb&#34;&gt;Stop IoTDB&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#only-build-server&#34;&gt;Only build server&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#only-build-cli&#34;&gt;Only build cli&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/iotdb/master/#usage-of-csv-import-and-export-tool&#34;&gt;Usage of CSV Import and Export Tool&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /TOC --&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;p&gt;This short guide will walk you through the basic process of using IoTDB. For a more detailed introduction, please visit our website&#39;s &lt;a href=&#34;https://iotdb.apache.org/UserGuide/Master/QuickStart/QuickStart.html&#34;&gt;User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;To use IoTDB, you need to have:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Java &amp;gt;= 1.8 (1.8, 11 to 17 are verified. Please make sure the environment path has been set accordingly).&lt;/li&gt; &#xA; &lt;li&gt;Maven &amp;gt;= 3.6 (If you want to compile and install IoTDB from source code).&lt;/li&gt; &#xA; &lt;li&gt;Set the max open files num as 65535 to avoid &#34;too many open files&#34; error.&lt;/li&gt; &#xA; &lt;li&gt;(Optional) Set the somaxconn as 65535 to avoid &#34;connection reset&#34; error when the system is under high load. &lt;pre&gt;&lt;code&gt;# Linux&#xA;&amp;gt; sudo sysctl -w net.core.somaxconn=65535&#xA;&#xA;# FreeBSD or Darwin&#xA;&amp;gt; sudo sysctl -w kern.ipc.somaxconn=65535&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;IoTDB provides three installation methods, you can refer to the following suggestions, choose the one fits you best:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Installation from source code. If you need to modify the code yourself, you can use this method.&lt;/li&gt; &#xA; &lt;li&gt;Installation from binary files. Download the binary files from the official website. This is the recommended method, in which you will get a binary released package which is out-of-the-box.&lt;/li&gt; &#xA; &lt;li&gt;Using DockerÔºöThe path to the dockerfile is &lt;a href=&#34;https://github.com/apache/iotdb/tree/master/docker/src/main&#34;&gt;https://github.com/apache/iotdb/tree/master/docker/src/main&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here in the Quick Start, we give a brief introduction of using source code to install IoTDB. For further information, please refer to &lt;a href=&#34;https://iotdb.apache.org/UserGuide/Master/QuickStart/QuickStart.html&#34;&gt;User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build from source&lt;/h2&gt; &#xA;&lt;h3&gt;Prepare Thrift compiler&lt;/h3&gt; &#xA;&lt;p&gt;Skip this chapter if you are using Windows.&lt;/p&gt; &#xA;&lt;p&gt;As we use Thrift for our RPC module (communication and protocol definition), we involve Thrift during the compilation, so Thrift compiler 0.13.0 (or higher) is required to generate Thrift Java code. Thrift officially provides binary compiler for Windows, but unfortunately, they do not provide that for Unix OSs.&lt;/p&gt; &#xA;&lt;p&gt;If you have permission to install new softwares, use &lt;code&gt;apt install&lt;/code&gt; or &lt;code&gt;yum install&lt;/code&gt; or &lt;code&gt;brew install&lt;/code&gt; to install the Thrift compiler (If you already have installed the thrift compiler, skip this step). Then, you may add the following parameter when running Maven: &lt;code&gt;-Dthrift.download-url=http://apache.org/licenses/LICENSE-2.0.txt -Dthrift.exec.absolute.path=&amp;lt;YOUR LOCAL THRIFT BINARY FILE&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If not, then you have to compile the thrift compiler, and it requires you install a boost library first. Therefore, we compiled a Unix compiler ourselves and put it onto GitHub, and with the help of a maven plugin, it will be downloaded automatically during compilation. This compiler works fine with gcc8 or later, Ubuntu MacOS, and CentOS, but previous versions and other OSs are not guaranteed.&lt;/p&gt; &#xA;&lt;p&gt;If you can not download the thrift compiler automatically because of network problem, you can download it yourself, and then either: rename your thrift file to &lt;code&gt;{project_root}\thrift\target\tools\thrift_0.12.0_0.13.0_linux.exe&lt;/code&gt;; or, add Maven commands: &lt;code&gt;-Dthrift.download-url=http://apache.org/licenses/LICENSE-2.0.txt -Dthrift.exec.absolute.path=&amp;lt;YOUR LOCAL THRIFT BINARY FILE&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Compile IoTDB&lt;/h3&gt; &#xA;&lt;p&gt;You can download the source code from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/apache/iotdb.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default dev branch is the master branch, If you want to use a released version x.x.x:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout release/x.x.x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;From v0.11.3 on, the tag name format is change to: vx.x.x:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout vx.x.x&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Under the root path of iotdb:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; mvn clean package -DskipTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using &lt;code&gt;-P compile-cpp&lt;/code&gt; for compiling cpp client (For more details, read client-cpp&#39;s Readme file.)&lt;/p&gt; &#xA;&lt;p&gt;Then the binary version (including both server and cli) can be found at &lt;strong&gt;distribution/target/apache-iotdb-{project.version}-all-bin.zip&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE: Directories &#34;&lt;code&gt;thrift/target/generated-sources/thrift&lt;/code&gt;&#34;, &#34;&lt;code&gt;thrift-sync/target/generated-sources/thrift&lt;/code&gt;&#34;, &#34;&lt;code&gt;thrift-cluster/target/generated-sources/thrift&lt;/code&gt;&#34;, &#34;&lt;code&gt;thrift-influxdb/target/generated-sources/thrift&lt;/code&gt;&#34; and &#34;&lt;code&gt;antlr/target/generated-sources/antlr4&lt;/code&gt;&#34; need to be added to sources roots to avoid compilation errors in the IDE.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;In IDEA, you just need to right click on the root project name and choose &#34;&lt;code&gt;Maven-&amp;gt;Reload Project&lt;/code&gt;&#34; after you run &lt;code&gt;mvn package&lt;/code&gt; successfully.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configurations&lt;/h3&gt; &#xA;&lt;p&gt;configuration files are under &#34;conf&#34; folder&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;environment config module (&lt;code&gt;datanode-env.bat&lt;/code&gt;, &lt;code&gt;datanode-env.sh&lt;/code&gt;),&lt;/li&gt; &#xA; &lt;li&gt;system config module (&lt;code&gt;iotdb-datanode.properties&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;log config module (&lt;code&gt;logback.xml&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more information, please see &lt;a href=&#34;https://iotdb.apache.org/UserGuide/Master/Reference/Config-Manual.html&#34;&gt;Config Manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Start&lt;/h2&gt; &#xA;&lt;p&gt;You can go through the following steps to test the installation. If there is no error returned after execution, the installation is completed.&lt;/p&gt; &#xA;&lt;h3&gt;Start IoTDB&lt;/h3&gt; &#xA;&lt;p&gt;Users can start IoTDB by the start-server script under the sbin folder.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Unix/OS X&#xA;&amp;gt; nohup sbin/start-server.sh &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;or&#xA;&amp;gt; nohup sbin/start-server.sh -c &amp;lt;conf_path&amp;gt; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#xA;&#xA;# Windows&#xA;&amp;gt; sbin\start-server.bat -c &amp;lt;conf_path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;-c&#34; is optional.&lt;/li&gt; &#xA; &lt;li&gt;option &#34;-c&#34; specifies the system configuration file directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Use IoTDB&lt;/h3&gt; &#xA;&lt;h4&gt;Use Cli&lt;/h4&gt; &#xA;&lt;p&gt;IoTDB offers different ways to interact with server, here we introduce the basic steps of using Cli tool to insert and query data.&lt;/p&gt; &#xA;&lt;p&gt;After installing IoTDB, there is a default user &#39;root&#39;, its default password is also &#39;root&#39;. Users can use this default user to login Cli to use IoTDB. The startup script of Cli is the start-cli script in the folder sbin. When executing the script, user should assign IP, PORT, USER_NAME and PASSWORD. The default parameters are &#34;-h 127.0.0.1 -p 6667 -u root -pw -root&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Here is the command for starting the Cli:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Unix/OS X&#xA;&amp;gt; sbin/start-cli.sh -h 127.0.0.1 -p 6667 -u root -pw root&#xA;&#xA;# Windows&#xA;&amp;gt; sbin\start-cli.bat -h 127.0.0.1 -p 6667 -u root -pw root&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command line cli is interactive, so you should see the welcome logo and statements if everything is ready:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; _____       _________  ______   ______&#xA;|_   _|     |  _   _  ||_   _ `.|_   _ \&#xA;  | |   .--.|_/ | | \_|  | | `. \ | |_) |&#xA;  | | / .&#39;`\ \  | |      | |  | | |  __&#39;.&#xA; _| |_| \__. | _| |_    _| |_.&#39; /_| |__) |&#xA;|_____|&#39;.__.&#39; |_____|  |______.&#39;|_______/  version x.x.x&#xA;&#xA;&#xA;IoTDB&amp;gt; login successfully&#xA;IoTDB&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Basic commands for IoTDB&lt;/h4&gt; &#xA;&lt;p&gt;Now, let us introduce the way of creating timeseries, inserting data and querying data.&lt;/p&gt; &#xA;&lt;p&gt;The data in IoTDB is organized as timeseries. Each timeseries includes multiple data-time pairs, and is owned by a storage group. Before defining a timeseries, we should define a storage group using SET STORAGE GROUP first, and here is an example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; SET STORAGE GROUP TO root.ln&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can also use SHOW STORAGE GROUP to check the storage group being created:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; SHOW STORAGE GROUP&#xA;+-------------+&#xA;|storage group|&#xA;+-------------+&#xA;|      root.ln|&#xA;+-------------+&#xA;Total line number = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the storage group is set, we can use CREATE TIMESERIES to create a new timeseries. When creating a timeseries, we should define its data type and the encoding scheme. Here We create two timeseries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN&#xA;IoTDB&amp;gt; CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=RLE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to query the specific timeseries, we can use SHOW TIMESERIES &#xA; &lt;path&gt;&#xA;  . &#xA;  &lt;path&gt;&#xA;    represent the location of the timeseries. The default value is &#34;null&#34;, which queries all the timeseries in the system(the same as using &#34;SHOW TIMESERIES root&#34;). Here are some examples:&#xA;  &lt;/path&gt;&#xA; &lt;/path&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Querying all timeseries in the system:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; SHOW TIMESERIES&#xA;+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+&#xA;|                   timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|&#xA;+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+&#xA;|root.ln.wf01.wt01.temperature| null|      root.ln|   FLOAT|     RLE|     SNAPPY|null|      null|&#xA;|     root.ln.wf01.wt01.status| null|      root.ln| BOOLEAN|   PLAIN|     SNAPPY|null|      null|&#xA;+-----------------------------+-----+-------------+--------+--------+-----------+----+----------+&#xA;Total line number = 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Querying a specific timeseries(root.ln.wf01.wt01.status):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; SHOW TIMESERIES root.ln.wf01.wt01.status&#xA;+------------------------+-----+-------------+--------+--------+-----------+----+----------+&#xA;|              timeseries|alias|storage group|dataType|encoding|compression|tags|attributes|&#xA;+------------------------+-----+-------------+--------+--------+-----------+----+----------+&#xA;|root.ln.wf01.wt01.status| null|      root.ln| BOOLEAN|   PLAIN|     SNAPPY|null|      null|&#xA;+------------------------+-----+-------------+--------+--------+-----------+----+----------+&#xA;Total line number = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Insert timeseries data is a basic operation of IoTDB, you can use ‚ÄòINSERT‚Äô command to finish this. Before insertion, you should assign the timestamp and the suffix path name:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; INSERT INTO root.ln.wf01.wt01(timestamp,status) values(100,true);&#xA;IoTDB&amp;gt; INSERT INTO root.ln.wf01.wt01(timestamp,status,temperature) values(200,false,20.71)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The data that you have just inserted will display as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; SELECT status FROM root.ln.wf01.wt01&#xA;+------------------------+------------------------+&#xA;|                    Time|root.ln.wf01.wt01.status|&#xA;+------------------------+------------------------+&#xA;|1970-01-01T00:00:00.100Z|                    true|&#xA;|1970-01-01T00:00:00.200Z|                   false|&#xA;+------------------------+------------------------+&#xA;Total line number = 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also query several timeseries data using one SQL statement:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; SELECT * FROM root.ln.wf01.wt01&#xA;+------------------------+-----------------------------+------------------------+&#xA;|                    Time|root.ln.wf01.wt01.temperature|root.ln.wf01.wt01.status|&#xA;+------------------------+-----------------------------+------------------------+&#xA;|1970-01-01T00:00:00.100Z|                         null|                    true|&#xA;|1970-01-01T00:00:00.200Z|                        20.71|                   false|&#xA;+------------------------+-----------------------------+------------------------+&#xA;Total line number = 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change the time zone in Cli, you can use the following SQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; SET time_zone=+08:00&#xA;Time zone has set to +08:00&#xA;IoTDB&amp;gt; SHOW time_zone&#xA;Current time zone: Asia/Shanghai&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add then the query result will show using the new time zone.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; SELECT * FROM root.ln.wf01.wt01&#xA;+-----------------------------+-----------------------------+------------------------+&#xA;|                         Time|root.ln.wf01.wt01.temperature|root.ln.wf01.wt01.status|&#xA;+-----------------------------+-----------------------------+------------------------+&#xA;|1970-01-01T08:00:00.100+08:00|                         null|                    true|&#xA;|1970-01-01T08:00:00.200+08:00|                        20.71|                   false|&#xA;+-----------------------------+-----------------------------+------------------------+&#xA;Total line number = 2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The commands to exit the Cli are:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;IoTDB&amp;gt; quit&#xA;or&#xA;IoTDB&amp;gt; exit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about the commands supported by IoTDB SQL, please see &lt;a href=&#34;https://iotdb.apache.org/UserGuide/Master/QuickStart/QuickStart.html&#34;&gt;User Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Stop IoTDB&lt;/h3&gt; &#xA;&lt;p&gt;The server can be stopped with &#34;ctrl-C&#34; or the following script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Unix/OS X&#xA;&amp;gt; sbin/stop-server.sh&#xA;&#xA;# Windows&#xA;&amp;gt; sbin\stop-server.bat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Only build server&lt;/h2&gt; &#xA;&lt;p&gt;Under the root path of iotdb:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; mvn clean package -pl server -am -DskipTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After being built, the IoTDB server is located at the folder: &#34;server/target/iotdb-server-{project.version}&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Only build cli&lt;/h2&gt; &#xA;&lt;p&gt;Under the root path of iotdb:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; mvn clean package -pl cli -am -DskipTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After being built, the IoTDB cli is located at the folder &#34;cli/target/iotdb-cli-{project.version}&#34;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage of CSV Import and Export Tool&lt;/h1&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://iotdb.apache.org/UserGuide/Master/Write-And-Delete-Data/CSV-Tool.html&#34;&gt;Usage of CSV Import and Export Tool&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Frequent Questions for Compiling&lt;/h1&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://iotdb.apache.org/Development/ContributeGuide.html#_Frequent-Questions-when-Compiling-the-Source-Code&#34;&gt;Frequent Questions when Compiling the Source Code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contact Us&lt;/h1&gt; &#xA;&lt;h3&gt;QQ Group&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apache IoTDB User Group: 659990460&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Wechat Group&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add friend: &lt;code&gt;tietouqiao&lt;/code&gt; or &lt;code&gt;liutaohua001&lt;/code&gt;, and then we&#39;ll invite you to the group.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Slack&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/apacheiotdb/shared_invite/zt-qvso1nj8-7715TpySZtZqmyG5qXQwpg&#34;&gt;https://join.slack.com/t/apacheiotdb/shared_invite/zt-qvso1nj8-7715TpySZtZqmyG5qXQwpg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;see &lt;a href=&#34;https://github.com/apache/iotdb/issues/1995&#34;&gt;Join the community&lt;/a&gt; for more!&lt;/p&gt;</summary>
  </entry>
</feed>