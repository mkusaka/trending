<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-05T01:30:52Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>coderabbit214/bibliothecarius</title>
    <updated>2023-04-05T01:30:52Z</updated>
    <id>tag:github.com,2023-04-05:/coderabbit214/bibliothecarius</id>
    <link href="https://github.com/coderabbit214/bibliothecarius" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quickly build services to integrate your local data and AI models.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bibliothecarius&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coderabbit214/bibliothecarius/main/README.zh.md&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;h3&gt;What is Bibliothecarius&lt;/h3&gt; &#xA;&lt;p&gt;Bibliothecarius is a local data analysis tool that can engage in conversation based on custom prompts. The tool supports multiple models, allowing for horizontal comparison, and supports data isolation and multiple data types.&lt;/p&gt; &#xA;&lt;h3&gt;What can Bibliothecarius do&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Personal or enterprise knowledge base question-and-answer assistant&lt;/li&gt; &#xA; &lt;li&gt;Analyze books or materials&lt;/li&gt; &#xA; &lt;li&gt;AI assistant exclusively for a certain group&lt;/li&gt; &#xA; &lt;li&gt;Can even organize AI to play murder mystery games with you&lt;/li&gt; &#xA; &lt;li&gt;.....&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plans&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi-round dialogue&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Better UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Support for more file types &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; txt&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pdf&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; md&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; docx&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support for more models &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; gpt3.5&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/coderabbit214/bibliothecarius/main/doc%2Fen%2FLocal%20Model%20Integration%20Guide.md&#34;&gt;Localized model&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/coderabbit214/bibliothecarius/main/doc%2Fen%2FChatGLM-6B%20Integration.md&#34;&gt;ChatGLM&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/coderabbit214/bibliothecarius/main/doc%2Fen%2FLocalized%20Vector%20Calculation%20Integration%20Guide.md&#34;&gt;Localized vector computation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://raw.githubusercontent.com/coderabbit214/bibliothecarius/main/doc%2Fen%2FLocalized%20Vector%20Calculation%20Integration%20with%20text2vec-chinese.md&#34;&gt;text2vec&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Environment Setup&lt;/h3&gt; &#xA;&lt;h4&gt;Use our prepared&lt;code&gt;docker-compose.yaml&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;After downloading the code, initialize the environment with docker-compose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build the environment on your own&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;MySQL &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use an existing database: initialization SQL is available in ./mysql/init/init.sql, simply execute it.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Qdrant &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Refer to &lt;a href=&#34;https://qdrant.tech/documentation/quick_start/&#34;&gt;official installation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Run the Service&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify the configuration file &lt;code&gt;./bibliothecarius/config/application.yaml&lt;/code&gt;, including:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MySQL configuration&lt;/li&gt; &#xA;   &lt;li&gt;opanai key&lt;/li&gt; &#xA;   &lt;li&gt;Qdrant service address&lt;/li&gt; &#xA;   &lt;li&gt;Storage configuration&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start the backend service with docker-compose&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd bibliothecarius&#xA;docker-compose up -d&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Verify the backend service by visiting &lt;a href=&#34;http://127.0.0.1:8080/&#34;&gt;http://127.0.0.1:8080/&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to embed in your service, you can leave the front-end service unenabled&lt;/p&gt; &lt;p&gt;Front-end project&lt;code&gt;./web&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apifox.cn/apidoc/shared-0dfab7c9-3d3f-498a-b4c2-88b5e6b99a01&#34;&gt;Interface document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Bibliothecarius interface has two main parts:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;dataset: Your local data-related interface, including the operation of the dataset and the interface to add and delete data to the dataset.&lt;/li&gt; &#xA; &lt;li&gt;scene: Your model requests parameters and prompt and data set association interfaces.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;You can use the following examples to familiarize yourself with Bibliothecarius.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/coderabbit214/bibliothecarius/main/example/analyze_book/README.md&#34;&gt;Analyze books ormaterials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Personal or enterprise knowledge base question-and-answer assistant&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>