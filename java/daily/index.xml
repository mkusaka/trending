<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-20T01:34:20Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SaiUpadhyayula/spring-boot-microservices-new</title>
    <updated>2022-12-20T01:34:20Z</updated>
    <id>tag:github.com,2022-12-20:/SaiUpadhyayula/spring-boot-microservices-new</id>
    <link href="https://github.com/SaiUpadhyayula/spring-boot-microservices-new" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains the latest source code of th spring-boot-microservices tutorial&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;spring-boot-microservices-new&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the latest source code of the spring-boot-microservices tutorial&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openhab/openhab-addons</title>
    <updated>2022-12-20T01:34:20Z</updated>
    <id>tag:github.com,2022-12-20:/openhab/openhab-addons</id>
    <link href="https://github.com/openhab/openhab-addons" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Add-ons for openHAB&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;openHAB Add-ons&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;220&#34; src=&#34;https://raw.githubusercontent.com/openhab/openhab-addons/main/logo.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openhab/openhab-addons/actions/workflows/ci-build.yml&#34;&gt;&lt;img src=&#34;https://github.com/openhab/openhab-addons/actions/workflows/ci-build.yml/badge.svg?branch=main&#34; alt=&#34;GitHub Actions Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.openhab.org/job/openHAB-Addons/&#34;&gt;&lt;img src=&#34;https://ci.openhab.org/job/openHAB-Addons/badge/icon&#34; alt=&#34;Jenkins Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/EPL-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-EPL%202-green.svg?sanitize=true&#34; alt=&#34;EPL-2.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/openhab-addons&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/openhab-addons/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.bountysource.com/teams/openhab/issues?tracker_ids=2164344&#34;&gt;&lt;img src=&#34;https://www.bountysource.com/badge/tracker?tracker_id=2164344&#34; alt=&#34;Bountysource&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the official set of add-ons that are implemented on top of openHAB Core APIs. Add-ons that got accepted in here will be maintained (e.g. adapted to new core APIs) by the &lt;a href=&#34;https://github.com/orgs/openhab/teams/add-ons-maintainers&#34;&gt;openHAB Add-on maintainers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To get started with binding development, follow our guidelines and tutorials over at &lt;a href=&#34;https://www.openhab.org/docs/developer&#34;&gt;https://www.openhab.org/docs/developer&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in openHAB Core development, we invite you to come by on &lt;a href=&#34;https://github.com/openhab/openhab-core&#34;&gt;https://github.com/openhab/openhab-core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Add-ons in other repositories&lt;/h2&gt; &#xA;&lt;p&gt;Some add-ons are not in this repository, but still part of the official &lt;a href=&#34;https://github.com/openhab/openhab-distro&#34;&gt;openHAB distribution&lt;/a&gt;. An incomplete list of other repositories follows below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openhab/org.openhab.binding.zwave&#34;&gt;https://github.com/openhab/org.openhab.binding.zwave&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openhab/org.openhab.binding.zigbee&#34;&gt;https://github.com/openhab/org.openhab.binding.zigbee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openhab/openhab-webui&#34;&gt;https://github.com/openhab/openhab-webui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development / Repository Organization&lt;/h2&gt; &#xA;&lt;p&gt;openHAB add-ons are &lt;a href=&#34;https://en.wikipedia.org/wiki/Java_(programming_language)&#34;&gt;Java&lt;/a&gt; &lt;code&gt;.jar&lt;/code&gt; files.&lt;/p&gt; &#xA;&lt;p&gt;The openHAB build system is based on &lt;a href=&#34;https://maven.apache.org/what-is-maven.html&#34;&gt;Maven&lt;/a&gt;. The official IDE (Integrated development environment) is Eclipse.&lt;/p&gt; &#xA;&lt;p&gt;You find the following repository structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;+-- bom       Maven buildsystem: Bill of materials&#xA;|   +-- openhab-addons  Lists all extensions for other repos to reference them&#xA;|   +-- ...             Other boms&#xA;|&#xA;+-- bundles   Official openHAB extensions&#xA;|   +-- org.openhab.binding.airquality&#xA;|   +-- org.openhab.binding.astro&#xA;|   +-- ...&#xA;|&#xA;+-- features  Part of the runtime dependency resolver (&#34;Karaf features&#34;)&#xA;|&#xA;+-- itests    Integration tests. Those tests require parts of the framework to run.&#xA;|   +-- org.openhab.binding.astro.tests&#xA;|   +-- org.openhab.binding.avmfritz.tests&#xA;|   +-- ...&#xA;|&#xA;+-- src/etc   Auxilary buildsystem files: The license header for automatic checks for example&#xA;+-- tools     Static code analyser instructions&#xA;|&#xA;+-- CODEOWNERS  This file assigns people to directories so that they are informed if a pull-request&#xA;                would modify their add-ons.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Command line build&lt;/h3&gt; &#xA;&lt;p&gt;To build all add-ons from the command-line, type in:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most of the time you do not need to build all bindings, but only the binding you are working on. To simply build only your binding use the &lt;code&gt;-pl&lt;/code&gt; option. For example to build only the astro binding:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn clean install -pl :org.openhab.binding.astro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have a binding that has dependencies that are dynamically as specified in the feature.xml you can create a &lt;code&gt;.kar&lt;/code&gt; instead of a &lt;code&gt;.jar&lt;/code&gt; file. A &lt;code&gt;.kar&lt;/code&gt; file will include the feature.xml and when added to openHAB will load and activate any dependencies specified in the feature.xml file. To create a &lt;code&gt;.kar&lt;/code&gt; file run maven with the goal &lt;code&gt;karaf:kar&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn clean install karaf:kar -pl :org.openhab.binding.astro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To improve build times you can add the following options to the command:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Option&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-DskipChecks&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Skip the static analysis (Checkstyle, FindBugs)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-DskipTests&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Skip the execution of tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Dmaven.test.skip=true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Skip the compilation and execution of tests&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Dfeatures.verify.skip=true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Skip the Karaf feature verification&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-Dspotless.check.skip=true&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Skip the Spotless code style checks&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-o&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Work offline so Maven does not download any updates&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-T 1C&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build in parallel, using 1 thread per core&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;-pl :&amp;lt;add-on directory&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Build a single add-on&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For example you can skip checks and tests during development with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn clean install -DskipChecks -DskipTests -pl :org.openhab.binding.astro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Adding these options improves the build time but could hide problems in your code. Parallel builds are also less easy to debug and the increased load may cause timing sensitive tests to fail.&lt;/p&gt; &#xA;&lt;h4&gt;Translations&lt;/h4&gt; &#xA;&lt;p&gt;Add-on translations are managed via &lt;a href=&#34;https://crowdin.com/project/openhab-addons&#34;&gt;Crowdin&lt;/a&gt;. The English translation is taken from the openHAB-addons GitHub repo and automatically imported in Crowdin when changes are made to the English i18n properties file. When translations are added or updated and approved in Crowdin, a pull request is automatically created by Crowdin. Therefore translations should not be edited in the openHAB-addons repo, but only in Crowdin. Otherwise translation are overridden by the automatic process.&lt;/p&gt; &#xA;&lt;p&gt;To fill the English properties file run the following maven command on an add-on:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn i18n:generate-default-translations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command can also update the file when things or channel are added or updated.&lt;/p&gt; &#xA;&lt;p&gt;In some cases the command does not work, and requires the full plug-in name. In that case use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn org.openhab.core.tools:i18n-maven-plugin:3.3.0:generate-default-translations&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Code Quality&lt;/h4&gt; &#xA;&lt;p&gt;To check if your code is following the &lt;a href=&#34;https://www.openhab.org/docs/developer/guidelines.html#b-code-formatting-rules-style&#34;&gt;code style&lt;/a&gt; run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn spotless:check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To reformat your code so it conforms to the code style you can run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn spotless:apply&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration Tests&lt;/h3&gt; &#xA;&lt;p&gt;When your add-on also has an integration test in the &lt;code&gt;itests&lt;/code&gt; directory, you may need to update the runbundles in the &lt;code&gt;itest.bndrun&lt;/code&gt; file when the Maven dependencies change. Maven can resolve the integration test dependencies automatically by executing:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn clean install -DwithResolver -DskipChecks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The build generates a &lt;code&gt;.jar&lt;/code&gt; file per bundle in the respective bundle &lt;code&gt;/target&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h3&gt;How to develop via an Integrated Development Environment (IDE)&lt;/h3&gt; &#xA;&lt;p&gt;We have assembled some step-by-step guides for different IDEs on our developer documentation website:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.openhab.org/docs/developer/#setup-the-development-environment&#34;&gt;https://www.openhab.org/docs/developer/#setup-the-development-environment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Happy coding!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/gson</title>
    <updated>2022-12-20T01:34:20Z</updated>
    <id>tag:github.com,2022-12-20:/google/gson</id>
    <link href="https://github.com/google/gson" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Java serialization/deserialization library to convert Java Objects into JSON and back&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gson&lt;/h1&gt; &#xA;&lt;p&gt;Gson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object. Gson can work with arbitrary Java objects including pre-existing objects that you do not have source-code of.&lt;/p&gt; &#xA;&lt;p&gt;There are a few open-source projects that can convert Java objects to JSON. However, most of them require that you place Java annotations in your classes; something that you can not do if you do not have access to the source-code. Most also do not fully support the use of Java Generics. Gson considers both of these as very important design goals.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;ℹ&lt;/span&gt; Gson is currently in maintenance mode; existing bugs will be fixed, but large new features will likely not be added. If you want to add a new feature, please first search for existing GitHub issues, or create a new one to discuss the feature and get feedback.&lt;/p&gt; &#xA;&lt;h3&gt;Goals&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide simple &lt;code&gt;toJson()&lt;/code&gt; and &lt;code&gt;fromJson()&lt;/code&gt; methods to convert Java objects to JSON and vice-versa&lt;/li&gt; &#xA; &lt;li&gt;Allow pre-existing unmodifiable objects to be converted to and from JSON&lt;/li&gt; &#xA; &lt;li&gt;Extensive support of Java Generics&lt;/li&gt; &#xA; &lt;li&gt;Allow custom representations for objects&lt;/li&gt; &#xA; &lt;li&gt;Support arbitrarily complex objects (with deep inheritance hierarchies and extensive use of generic types)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;Gradle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;  implementation &#39;com.google.code.gson:gson:2.10&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Maven:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;com.google.code.gson&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;gson&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;2.10&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/com.google.code.gson/gson&#34;&gt;Gson jar downloads&lt;/a&gt; are available from Maven Central.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/google/gson/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;h4&gt;Minimum Java version&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gson 2.9.0 and newer: Java 7&lt;/li&gt; &#xA; &lt;li&gt;Gson 2.8.9 and older: Java 6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Despite supporting older Java versions, Gson also provides a JPMS module descriptor (module name &lt;code&gt;com.google.gson&lt;/code&gt;) for users of Java 9 or newer.&lt;/p&gt; &#xA;&lt;h4&gt;JPMS dependencies (Java 9+)&lt;/h4&gt; &#xA;&lt;p&gt;These are the optional Java Platform Module System (JPMS) JDK modules which Gson depends on. This only applies when running Java 9 or newer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.sql&lt;/code&gt; (optional since Gson 2.8.9)&lt;br&gt; When this module is present, Gson provides default adapters for some SQL date and time classes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;jdk.unsupported&lt;/code&gt;, respectively class &lt;code&gt;sun.misc.Unsafe&lt;/code&gt; (optional)&lt;br&gt; When this module is present, Gson can use the &lt;code&gt;Unsafe&lt;/code&gt; class to create instances of classes without no-args constructor. However, care should be taken when relying on this. &lt;code&gt;Unsafe&lt;/code&gt; is not available in all environments and its usage has some pitfalls, see &lt;a href=&#34;https://javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/GsonBuilder.html#disableJdkUnsafe()&#34;&gt;&lt;code&gt;GsonBuilder.disableJdkUnsafe()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.javadoc.io/doc/com.google.code.gson/gson&#34;&gt;API Javadoc&lt;/a&gt;: Documentation for the current release&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/gson/master/UserGuide.md&#34;&gt;User guide&lt;/a&gt;: This guide contains examples on how to use Gson in your code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/gson/master/Troubleshooting.md&#34;&gt;Troubleshooting guide&lt;/a&gt;: Describes how to solve common issues when using Gson&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/gson/master/CHANGELOG.md&#34;&gt;Change log&lt;/a&gt;: Changes in the recent versions&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/gson/master/GsonDesignDocument.md&#34;&gt;Design document&lt;/a&gt;: This document discusses issues we faced while designing Gson. It also includes a comparison of Gson with other Java libraries that can be used for Json conversion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please use the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/gson&#34;&gt;&#39;gson&#39; tag on StackOverflow&lt;/a&gt; or the &lt;a href=&#34;https://groups.google.com/group/google-gson&#34;&gt;google-gson Google group&lt;/a&gt; to discuss Gson or to post questions.&lt;/p&gt; &#xA;&lt;h3&gt;Related Content Created by Third Parties&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.studytrails.com/java/json/java-google-json-introduction/&#34;&gt;Gson Tutorial&lt;/a&gt; by &lt;code&gt;StudyTrails&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://futurestud.io/tutorials/gson-getting-started-with-java-json-serialization-deserialization&#34;&gt;Gson Tutorial Series&lt;/a&gt; by &lt;code&gt;Future Studio&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://abi-laboratory.pro/java/tracker/timeline/gson/&#34;&gt;Gson API Report&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Gson is released under the &lt;a href=&#34;https://raw.githubusercontent.com/google/gson/master/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2008 Google Inc.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;p&gt;This is not an officially supported Google product.&lt;/p&gt;</summary>
  </entry>
</feed>