<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-05T08:20:52Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tom-mohr/particle-life-app</title>
    <updated>2023-02-05T08:20:52Z</updated>
    <id>tag:github.com,2023-02-05:/tom-mohr/particle-life-app</id>
    <link href="https://github.com/tom-mohr/particle-life-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🦠 A GUI for Particle Life, a particle system showing life-like behaviour&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🦠 Particle Life App&lt;/h1&gt; &#xA;&lt;p&gt;A GUI for the &lt;a href=&#34;https://github.com/tom-mohr/particle-life&#34;&gt;Particle Life Framework&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://particle-life.com&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://particle-life.com/app/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://discord.gg/Fd64AhKzMD&#34;&gt;Discord server&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tom-mohr/particle-life-app/main/readme_assets/app_demo.png&#34; alt=&#34;Screenshot of the App&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to build this app from source&lt;/h2&gt; &#xA;&lt;p&gt;If you just want to try out this application, simply download the executables from &lt;a href=&#34;https://particle-life.com&#34;&gt;particle-life.com&lt;/a&gt;. However, if you want to contribute to this repository or just mess with the code, you need to build the application from source.&lt;/p&gt; &#xA;&lt;p&gt;For this, you need to have &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt; and &lt;a href=&#34;https://jdk.java.net/19/&#34;&gt;Java&lt;/a&gt; with version 16 or higher installed on your computer. Confirm your Java version with &lt;code&gt;java -version&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then, execute these lines in the terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/tom-mohr/particle-life-app.git&#xA;cd particle-life-app&#xA;./gradlew run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should now see many particles on your screen. If you encounter any problems, ask for help in the &lt;a href=&#34;https://discord.gg/EVG8XnCn3U&#34;&gt;&lt;code&gt;#tech-support&lt;/code&gt;&lt;/a&gt; channel on the Discord server.&lt;/p&gt; &#xA;&lt;h2&gt;How to make a release&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Confirm that everything is working correctly and check in with others that the current state of the main branch is ready for release.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./gradlew zipApp&lt;/code&gt; from the project root. This generates the zip file &lt;code&gt;particle-life-app.zip&lt;/code&gt; in &lt;code&gt;./build/zipApp/&lt;/code&gt;. It includes the Windows executable (&lt;code&gt;.exe&lt;/code&gt;) along with other files.&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://github.com/tom-mohr/particle-life-app/releases&#34;&gt;Releases&lt;/a&gt; section of this GitHub repo and click &lt;code&gt;Draft a new release&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Choose a tag&lt;/code&gt; and type the new version name: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Prefix the version name with the letter &lt;code&gt;v&lt;/code&gt;. Some good tag names might be &lt;code&gt;v1.0.0&lt;/code&gt; or &lt;code&gt;v2.3.4&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;The version name should comply with &lt;a href=&#34;https://semver.org/&#34;&gt;semantic versioning&lt;/a&gt;. Talk to others if you are unsure about what to choose here.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Create a new tag&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Set the release title to match the tag name.&lt;/li&gt; &#xA; &lt;li&gt;Use the description to summarize the changes of all commits since the last release.&lt;/li&gt; &#xA; &lt;li&gt;Add the generated &lt;code&gt;particle-life-app.zip&lt;/code&gt; as an asset to the release.&lt;/li&gt; &#xA; &lt;li&gt;Click &lt;code&gt;Publish release&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>quickmsg/smqtt</title>
    <updated>2023-02-05T08:20:52Z</updated>
    <id>tag:github.com,2023-02-05:/quickmsg/smqtt</id>
    <link href="https://github.com/quickmsg/smqtt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一款支持千万级设备接入的开源MQTT broker(基于reactor-netty实现高性能的、可扩展、支持集群）&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;SMQTT重磅升级&lt;/h2&gt; &#xA;&lt;p&gt;感谢大家帮忙给新项目点Star,感谢!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/quickmsg/smqttx&#34;&gt;Gitee&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quickmsg/smqttx&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/icon/logo.png&#34; alt=&#34;image&#34;&gt; SMQTT开源的MQTT消息代理Broker&lt;/h2&gt; &#xA;&lt;p&gt;SMQTT基于reactor-netty(spring-webflux底层依赖) 开发，底层采用Reactor3反应堆模型,支持单机部署，支持容器化部署，具备低延迟，高吞吐量，支持百万TCP连接，同时支持多种协议交互，是一款非常优秀的消息中间件！&lt;/p&gt; &#xA;&lt;h2&gt;smqtt目前拥有的功能如下：&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/icon/component.png&#34; alt=&#34;架构图&#34;&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;消息质量等级实现(支持qos0，qos1，qos2)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;topicFilter支持&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;topic分级（test/test）&lt;/li&gt; &#xA;   &lt;li&gt;+支持（单层匹配）&lt;/li&gt; &#xA;   &lt;li&gt;*支持（多层匹配）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;会话消息&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;默认内存存储&lt;/li&gt; &#xA;   &lt;li&gt;支持持久化（redis/db）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;保留消息&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;默认内存存储&lt;/li&gt; &#xA;   &lt;li&gt;支持持久化（redis/db）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;遗嘱消息&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;设备掉线时候触发&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;客户端认证&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持spi注入外部认证&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;tls加密&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持tls加密（mqtt端口/http端口）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;websocket协议支持x&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;使用mqtt over websocket&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;http协议交互&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持http接口推送消息&lt;/li&gt; &#xA;   &lt;li&gt;支持spi扩展http接口&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SPI接口扩展支持&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;消息管理接口（会话消息/保留消息管理）&lt;/li&gt; &#xA;   &lt;li&gt;通道管理接口 (管理系统的客户端连接)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;认证接口 （用于自定义外部认证）&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;拦截器 （用户自定义拦截消息）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;集群支持（gossip协议实现）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;容器化支持&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;默认镜像最新tag: 1ssqq1lxr/smqtt&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;持久化支持（session 保留消息）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;规则引擎支持&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持springboot starter启动&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;管理后台&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;请参考smqtt文档如何启动管理后台&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;grafana监控集成&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持influxdb&lt;/li&gt; &#xA;   &lt;li&gt;支持prometheus&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;ACL权限管理&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;对设备、资访问授权&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;认证模块&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;支持http&lt;/li&gt; &#xA;   &lt;li&gt;支持匿名&lt;/li&gt; &#xA;   &lt;li&gt;支持固定密码&lt;/li&gt; &#xA;   &lt;li&gt;支持sql&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;尝试一下&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;大家不要恶意链接，谢谢！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;管理&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;其他&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;121.40.92.152:1883&lt;/td&gt; &#xA;   &lt;td&gt;mqtt端口&lt;/td&gt; &#xA;   &lt;td&gt;用户名：smqtt 密码：smqtt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;121.40.92.152:18888&lt;/td&gt; &#xA;   &lt;td&gt;mqtt over websocket&lt;/td&gt; &#xA;   &lt;td&gt;用户名：smqtt 密码：smqtt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://121.40.92.152:60000/smqtt/admin&#34;&gt;http://121.40.92.152:60000/smqtt/admin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;管理后台&lt;/td&gt; &#xA;   &lt;td&gt;用户名：smqtt 密码：smqtt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;启动方式&lt;/h2&gt; &#xA;&lt;h3&gt;main方式启动&lt;/h3&gt; &#xA;&lt;p&gt;引入依赖&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;lt;!--smqtt依赖 --&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;io.github.quickmsg&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;smqtt-core&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;${Latest version}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;!--集群依赖 --&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;   &amp;lt;artifactId&amp;gt;smqtt-registry-scube&amp;lt;/artifactId&amp;gt;&#xA;   &amp;lt;groupId&amp;gt;io.github.quickmsg&amp;lt;/groupId&amp;gt;&#xA;   &amp;lt;version&amp;gt;${Latest version}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;!--管理ui依赖 --&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;   &amp;lt;artifactId&amp;gt;smqtt-ui&amp;lt;/artifactId&amp;gt;&#xA;   &amp;lt;groupId&amp;gt;io.github.quickmsg&amp;lt;/groupId&amp;gt;&#xA;   &amp;lt;version&amp;gt;${Latest version}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;阻塞式启动服务：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;        Bootstrap.builder()&#xA;                .rootLevel(Level.INFO)&#xA;                .websocketConfig(&#xA;                        BootstrapConfig.WebsocketConfig&#xA;                                .builder()&#xA;                                .enable(false)&#xA;                                .path(&#34;/mqtt&#34;)&#xA;                                .port(8888)&#xA;                                .build()&#xA;                )&#xA;                .tcpConfig(&#xA;                        BootstrapConfig&#xA;                                .TcpConfig&#xA;                                .builder()&#xA;                                .port(1883)&#xA;                                .ssl(SslContext.builder().enable(false).build())&#xA;                                .build())&#xA;                .httpConfig(&#xA;                        BootstrapConfig&#xA;                                .HttpConfig&#xA;                                .builder()&#xA;                                .enable(false)&#xA;                                .accessLog(true)&#xA;                                .admin(BootstrapConfig.HttpAdmin.builder().enable(true).username(&#34;smqtt&#34;).password(&#34;smqtt&#34;).build())&#xA;                                .build())&#xA;                .clusterConfig(&#xA;                        BootstrapConfig.&#xA;                                ClusterConfig&#xA;                                .builder()&#xA;                                .enable(false)&#xA;                                .namespace(&#34;smqtt&#34;)&#xA;                                .node(&#34;node-1&#34;)&#xA;                                .port(7773)&#xA;                                .url(&#34;127.0.0.1:7771,127.0.0.1:7772&#34;).&#xA;                                build())&#xA;                .build()&#xA;                .startAwait();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;非阻塞式启动服务：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;    Bootstrap bootstrap = Bootstrap.builder()&#xA;                .rootLevel(Level.INFO)&#xA;                .websocketConfig(&#xA;                        BootstrapConfig.WebsocketConfig&#xA;                                .builder()&#xA;                                .enable(false)&#xA;                                .path(&#34;/mqtt&#34;)&#xA;                                .port(8888)&#xA;                                .build()&#xA;                )&#xA;                .tcpConfig(&#xA;                        BootstrapConfig&#xA;                                .TcpConfig&#xA;                                .builder()&#xA;                                .port(1883)&#xA;                                .ssl(SslContext.builder().enable(false).build())&#xA;                                .build())&#xA;                .httpConfig(&#xA;                        BootstrapConfig&#xA;                                .HttpConfig&#xA;                                .builder()&#xA;                                .enable(false)&#xA;                                .accessLog(true)&#xA;                                .admin(BootstrapConfig.HttpAdmin.builder().enable(true).username(&#34;smqtt&#34;).password(&#34;smqtt&#34;).build())&#xA;                                .build())&#xA;                .clusterConfig(&#xA;                        BootstrapConfig.&#xA;                                ClusterConfig&#xA;                                .builder()&#xA;                                .enable(false)&#xA;                                .namespace(&#34;smqtt&#34;)&#xA;                                .node(&#34;node-1&#34;)&#xA;                                .port(7773)&#xA;                                .url(&#34;127.0.0.1:7771,127.0.0.1:7772&#34;).&#xA;                                build())&#xA;                .build()&#xA;                .start().block();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;jar方式&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载源码 mvn compile package -Dmaven.test.skip=true -P jar,web&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;  在smqtt-bootstrap/target目录下生成jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;准备配置文件 config.yaml&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/config/config.yaml&#34;&gt;config.yaml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动服务&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;  java -jar smqtt-bootstrap-1.0.1-SNAPSHOT.jar &amp;lt;config.yaml路径&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;docker 方式&lt;/h3&gt; &#xA;&lt;p&gt;拉取镜像&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 拉取docker镜像地址&#xA;docker pull 1ssqq1lxr/smqtt:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动镜像默认配置&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 启动服务&#xA;docker run -it  -p 1883:1883 1ssqq1lxr/smqtt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;启动镜像使用自定义配置（同上准备配置文件config.yaml）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 启动服务&#xA;docker run -it  -v &amp;lt;配置文件路径目录&amp;gt;:/conf -p 1883:1883  -p 1999:1999 1ssqq1lxr/smqtt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;springboot方式&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;引入依赖&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;io.github.quickmsg&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;smqtt-spring-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;${Latest version &amp;gt;= 1.0.8}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动类Application上添加注解 &lt;code&gt; @EnableMqttServer&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;配置application.yml文件&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;properties也支持，但是需要自己转换，没有提供demo文件&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/config/config.yaml&#34;&gt;config.yaml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动springboot服务服务即可&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果引入的是spring-boot-starter-parent的管理包，如果启动报错，则需要添加以下依赖&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;io.projectreactor&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;reactor-core&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;3.4.9&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;&amp;lt;groupId&amp;gt;io.projectreactor.netty&amp;lt;/groupId&amp;gt;&#xA;&amp;lt;artifactId&amp;gt;reactor-netty&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;version&amp;gt;1.0.10&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;官网地址&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.smqtt.cc/&#34;&gt;smqtt官网&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;wiki地址&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.smqtt.cc/&#34;&gt;wiki地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;管理后台&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/icon/admin.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;监控页面&lt;/h2&gt; &#xA;&lt;h3&gt;Mqtt监控&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/icon/application.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Jvm监控&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/icon/jvm.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Netty监控&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/icon/netty.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/LICENSE&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;商业版本&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://114.116.14.30&#34;&gt;商业版演示地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;友情链接&lt;/h2&gt; &#xA;&lt;p&gt;一款非常好用的IOT平台 thinglinks：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mqttsnet/thinglinks&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/mqttsnet/thinglinks&#34;&gt;Gitee&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;相关技术文档&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://projectreactor.io/docs/core/release/reference/&#34;&gt;reactor3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://projectreactor.io/docs/netty/1.0.12/reference/index.html&#34;&gt;reactor-netty&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;麻烦关注下公众号！&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/quickmsg/smqtt/main/icon/icon.jpg&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;添加微信号&lt;code&gt;Lemon877164954&lt;/code&gt;，拉入smqtt官方交流群&lt;/li&gt; &#xA; &lt;li&gt;加入qq群 &lt;code&gt;700152283&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>