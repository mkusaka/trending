<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-11T01:34:02Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PlexPt/chatgpt-java</title>
    <updated>2022-12-11T01:34:02Z</updated>
    <id>tag:github.com,2022-12-11:/PlexPt/chatgpt-java</id>
    <link href="https://github.com/PlexPt/chatgpt-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ChatGPT Java SDK. Lightweight package for interacting with ChatGPT&#39;s API by OpenAI. Uses reverse engineered official API. ChatGPT 聊天机器人 Java 版. 开箱即用.&lt;/p&gt;&lt;hr&gt;&lt;h1 style=&#34;text-align: center; color: hotpink; -webkit-animation: rainbow 5s infinite; -moz-animation: rainbow 5s infinite; -o-animation: rainbow 5s infinite; animation: rainbow 5s infinite;&#34;&gt;ChatGPT Java Api&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/stability-stable-brightgreen.svg?sanitize=true&#34; alt=&#34;stable&#34;&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/com.github.plexpt/chatgpt&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.github.plexpt/chatgpt&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/PlexPt/chatgpt-java/raw/main/README_en.md&#34;&gt;English Doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenAI ChatGPT 的逆向工程SDK。可扩展用于聊天机器人等。觉得不错请右上角Star&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/acheong08/ChatGPT&#34;&gt;revChatGPT&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;QQ交流群：627788462&lt;/h2&gt; &#xA;&lt;h1&gt;功能&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/36258159/205534498-acc59484-c4b4-487d-89a7-d7b884af709b.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/15922823/206353660-47d99158-a664-4ade-b2f1-e2cc8ac68b74.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/15922823/206615422-23c5e587-d29a-4f04-8d0d-f8dd7c19da37.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;可以写代码，写小说，写作文、演讲稿、工作报告、读书笔记、合同等&lt;/p&gt; &#xA;&lt;p&gt;自白：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;我是一个训练有素的大型语言模型，可以帮助你回答各种问题，比如关于政治、历史、科学、技术、艺术等方面的问题。我可以帮助你理解一些概念，并为你提供有价值的信息和见解。你可以尝试提出一些问题，看看我能不能帮到你。 除了回答问题，我还可以帮助你写一些文章或小说。你只需要给我一些提示和背景信息，我就可以根据你提供的信息来为你写一篇文章或小说。我会尽力为你写出一篇优秀的文章，帮助你实现你的写作目标。 除了回答问题和写作，我还可以帮助你进行文本生成。如果你想生成一些随机的文本，你可以向我提供一些模板和关键词，我就可以根据你提供的信息生成一些随机的文本。这些文本可能是一些名言、句子、段落或者小故事，它们都可以根据你提供的信息来生成。我会尽力为你生成有趣、有用的文本，帮助你实现你的目标。 还有很多其他的事情，我可以帮助你完成。比如，如果你想知道某个单词的含义，你可以问我，我会告诉你这个单词的含义。如果你想了解一些事情的细节，你也可以问我，我会尽力为你提供有价值的信息。如果你有任何问题，都可以问我，我会尽力为你解答。 甚至这个代码库也是我写的。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;回答问题。我能够通过文字回答问题，为用户提供信息。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;提供建议。我能够根据用户的需求提供专业的建议。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;计算数学问题。我能够快速准确地计算简单的数学问题。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;翻译文本。我能够快速准确地翻译文本，让用户更好地理解内容。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;生成文本。我能够根据提供的信息生成文本，为用户提供更多信息。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;写作。我能够根据用户的需求进行写作，为用户提供高质量的文字内容。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;提供知识。我能够根据用户的需求提供专业的知识，为用户提供更多信息。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;提供解决方案。我能够根据用户提出的问题提供解决方案，帮助用户解决实际问题。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;提供娱乐。我能够根据用户的需求提供娱乐内容，为用户提供欢乐和放松。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;聊天。我能够通过文字和用户进行交流，提供娱乐和放松。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PlexPt/chatgpt-java/main/USEAGE.md&#34;&gt;一些有趣的玩法&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;p&gt;maven&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.github.plexpt&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;chatgpt&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.0.3&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;gradle&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;implementation group: &#39;com.github.plexpt&#39;, name: &#39;chatgpt&#39;, version: &#39;1.0.3&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  Chatbot chatbot = new Chatbot(&#34;sessionToken&#34;);&#xA;  Map&amp;lt;String, Object&amp;gt; chatResponse = chatbot.getChatResponse(&#34;hello&#34;);&#xA;  System.out.println(chatResponse.get(&#34;message&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;注意：一个Chatbot实例为一个Session，会持有对话上下文，可以回复：继续 让机器人接着说。如果需要对话互相隔离，new 多个Chatbot实例即可。&lt;/p&gt; &#xA;&lt;h3&gt;sessionToken获取&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/acheong08/ChatGPT/wiki/Setup#token-authentication&#34;&gt;https://github.com/acheong08/ChatGPT/wiki/Setup#token-authentication&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;通过 &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;https://chat.openai.com/chat&lt;/a&gt; 注册并登录。&lt;/li&gt; &#xA; &lt;li&gt;打开浏览器开发者工具，切换到 Application 标签页。&lt;/li&gt; &#xA; &lt;li&gt;在左侧的 Storage - Cookies 中找到 __Secure-next-auth.session-token 一行并复制其值&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;注册教程&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://juejin.cn/post/7173447848292253704&#34;&gt;https://juejin.cn/post/7173447848292253704&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mirror.xyz/boxchen.eth/9O9CSqyKDj4BKUIil7NC1Sa1LJM-3hsPqaeW_QjfFBc&#34;&gt;https://mirror.xyz/boxchen.eth/9O9CSqyKDj4BKUIil7NC1Sa1LJM-3hsPqaeW_QjfFBc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;也可以控制台直接使用&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载&lt;/li&gt; &#xA; &lt;li&gt;编辑 config.json 里的sessionToken&lt;/li&gt; &#xA; &lt;li&gt;运行 run.bat&lt;/li&gt; &#xA; &lt;li&gt;注意：输入之后需要回车两次&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Awesome ChatGPT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/stars/acheong08/lists/awesome-chatgpt&#34;&gt;My list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have a cool project you want added to the list, open an issue.&lt;/p&gt; &#xA;&lt;h1&gt;Disclaimers&lt;/h1&gt; &#xA;&lt;p&gt;这不是官方的 OpenAI 产品。这是一个个人项目，与 OpenAI 没有任何关联。&lt;/p&gt; &#xA;&lt;h3&gt;This is a library and not intended for direct CLI use&lt;/h3&gt; &#xA;&lt;p&gt;CLI 功能仅用于演示和测试。不支持验证码（对于不干净的 IP 地址）&lt;/p&gt; &#xA;&lt;h3&gt;CLI use&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rawandahmad698&#34;&gt;@rawandahmad698&lt;/a&gt; has a much better CLI tool at&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/rawandahmad698/PyChatGPT&#34;&gt;PyChatGPT&lt;/a&gt;&lt;/strong&gt; supports captcha!&lt;/p&gt; &#xA;&lt;h1&gt;Star History&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#PlexPt/chatgpt-java&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=PlexPt/chatgpt-java&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pentaho/pentaho-kettle</title>
    <updated>2022-12-11T01:34:02Z</updated>
    <id>tag:github.com,2022-12-11:/pentaho/pentaho-kettle</id>
    <link href="https://github.com/pentaho/pentaho-kettle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pentaho Data Integration ( ETL ) a.k.a Kettle&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pentaho Data Integration&lt;/h1&gt; &#xA;&lt;p&gt;Pentaho Data Integration ( ETL ) a.k.a Kettle&lt;/p&gt; &#xA;&lt;h3&gt;Project Structure&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;assemblies:&lt;/strong&gt; Project distribution archive is produced under this module&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;core:&lt;/strong&gt; Core implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;dbdialog:&lt;/strong&gt; Database dialog&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ui:&lt;/strong&gt; User interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;engine:&lt;/strong&gt; PDI engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;engine-ext:&lt;/strong&gt; PDI engine extensions&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pentaho/pentaho-kettle/master/plugins/README.md&#34;&gt;plugins:&lt;/a&gt;&lt;/strong&gt; PDI core plugins&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;integration:&lt;/strong&gt; Integration tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to build&lt;/h2&gt; &#xA;&lt;p&gt;Pentaho Data Integration uses the Maven framework.&lt;/p&gt; &#xA;&lt;h4&gt;Pre-requisites for building the project:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Maven, version 3+&lt;/li&gt; &#xA; &lt;li&gt;Java JDK 11&lt;/li&gt; &#xA; &lt;li&gt;This &lt;a href=&#34;https://raw.githubusercontent.com/pentaho/maven-parent-poms/master/maven-support-files/settings.xml&#34;&gt;settings.xml&lt;/a&gt; in your &#xA;  &lt;user-home&gt;&#xA;   /.m2 directory&#xA;  &lt;/user-home&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Building it&lt;/h4&gt; &#xA;&lt;p&gt;This is a Maven project, and to build it use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally you can specify -Drelease to trigger obfuscation and/or uglification (as needed)&lt;/p&gt; &#xA;&lt;p&gt;Optionally you can specify -Dmaven.test.skip=true to skip the tests (even though you shouldn&#39;t as you know)&lt;/p&gt; &#xA;&lt;p&gt;The build result will be a Pentaho package located in &lt;code&gt;target&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Packaging / Distributing it&lt;/h4&gt; &#xA;&lt;p&gt;Packages can be built by using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn clean package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The packaged results will be in the &lt;code&gt;target/&lt;/code&gt; sub-folders of &lt;code&gt;assemblies/*&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, a distribution of the Desktop Client (CE) can then be found in: &lt;code&gt;assemblies/client/target/pdi-ce-*-SNAPSHOT.zip&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Running the tests&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unit tests&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This will run all unit tests in the project (and sub-modules). To run integration tests as well, see Integration Tests below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to remote debug a single Java unit test (default port is 5005):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd core&#xA;$ mvn test -Dtest=&amp;lt;&amp;lt;YourTest&amp;gt;&amp;gt; -Dmaven.surefire.debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Integration tests&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In addition to the unit tests, there are integration tests that test cross-module operation. This will run the integration tests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn verify -DrunITs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run a single integration test:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn verify -DrunITs -Dit.test=&amp;lt;&amp;lt;YourIT&amp;gt;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run a single integration test in debug mode (for remote debugging in an IDE) on the default port of 5005:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn verify -DrunITs -Dit.test=&amp;lt;&amp;lt;YourIT&amp;gt;&amp;gt; -Dmaven.failsafe.debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To skip test&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn clean install -DskipTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get log as text file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn clean install test &amp;gt;log.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;IntelliJ&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Don&#39;t use IntelliJ&#39;s built-in maven. Make it use the same one you use from the commandline. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Project Preferences -&amp;gt; Build, Execution, Deployment -&amp;gt; Build Tools -&amp;gt; Maven ==&amp;gt; Maven home directory&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Submit a pull request, referencing the relevant &lt;a href=&#34;https://jira.pentaho.com/secure/Dashboard.jspa&#34;&gt;Jira case&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Attach a Git patch file to the relevant &lt;a href=&#34;https://jira.pentaho.com/secure/Dashboard.jspa&#34;&gt;Jira case&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Use of the Pentaho checkstyle format (via &lt;code&gt;mvn checkstyle:check&lt;/code&gt; and reviewing the report) and developing working Unit Tests helps to ensure that pull requests for bugs and improvements are processed quickly.&lt;/p&gt; &#xA;&lt;p&gt;When writing unit tests, you have at your disposal a couple of ClassRules that can be used to maintain a healthy test environment. Use &lt;a href=&#34;https://raw.githubusercontent.com/pentaho/pentaho-kettle/master/core/src/test/java/org/pentaho/di/junit/rules/RestorePDIEnvironment.java&#34;&gt;RestorePDIEnvironment&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/pentaho/pentaho-kettle/master/engine/src/test/java/org/pentaho/di/junit/rules/RestorePDIEngineEnvironment.java&#34;&gt;RestorePDIEngineEnvironment&lt;/a&gt; for core and engine tests respectively.&lt;/p&gt; &#xA;&lt;p&gt;pex.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class MyTest {&#xA;  @ClassRule public static RestorePDIEnvironment env = new RestorePDIEnvironment();&#xA;  #setUp()...&#xA;  @Test public void testSomething() { &#xA;    assertTrue( myMethod() ); &#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Asking for help&lt;/h3&gt; &#xA;&lt;p&gt;Please go to &lt;a href=&#34;https://community.hitachivantara.com/community/products-and-solutions/pentaho/&#34;&gt;https://community.hitachivantara.com/community/products-and-solutions/pentaho/&lt;/a&gt; to ask questions and get help.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rumeysakdogan/AWS_DevOps_Projects</title>
    <updated>2022-12-11T01:34:02Z</updated>
    <id>tag:github.com,2022-12-11:/rumeysakdogan/AWS_DevOps_Projects</id>
    <link href="https://github.com/rumeysakdogan/AWS_DevOps_Projects" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AWS_DevOps_Projects&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains AWS-DevOps projects completed by me during my AWS-DevOps Learning Journey.&lt;/p&gt;</summary>
  </entry>
</feed>