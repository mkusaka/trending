<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-31T01:33:15Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>in28minutes/JavaInterviewQuestionsAndAnswers</title>
    <updated>2024-08-31T01:33:15Z</updated>
    <id>tag:github.com,2024-08-31:/in28minutes/JavaInterviewQuestionsAndAnswers</id>
    <link href="https://github.com/in28minutes/JavaInterviewQuestionsAndAnswers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Java Interview Questions and Answers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Java Interview Questions and Answers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/java-interview-questions-and-answers/&#34;&gt;&lt;img src=&#34;https://www.springboottutorial.com/images/Course-Java-Interview-Guide-200-Interview-Questions-and-Answers.png&#34; alt=&#34;Image&#34; title=&#34;Java Interview Guide : 200+ Interview Questions and Answers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Expectations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Good Java Knowledge&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Complete Course Link&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.udemy.com/course/java-interview-questions-and-answers/?couponCode=NOVEMBER-2019&#34;&gt;https://www.udemy.com/course/java-interview-questions-and-answers/?couponCode=NOVEMBER-2019&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Things You Need to Know&lt;/h2&gt; &#xA;&lt;h3&gt;Github Repository&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/in28minutes/JavaInterviewQuestionsAndAnswers&#34;&gt;https://github.com/in28minutes/JavaInterviewQuestionsAndAnswers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PDF Guide&lt;/h3&gt; &#xA;&lt;p&gt;Available in the resources for the course&lt;/p&gt; &#xA;&lt;h3&gt;Installing Eclipse, Java and Maven&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PDF : &lt;a href=&#34;https://github.com/in28minutes/SpringIn28Minutes/raw/master/InstallationGuide-JavaEclipseAndMaven_v2.pdf&#34;&gt;https://github.com/in28minutes/SpringIn28Minutes/blob/master/InstallationGuide-JavaEclipseAndMaven_v2.pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Video : &lt;a href=&#34;https://www.youtube.com/playlist?list=PLBBog2r6uMCSmMVTW_QmDLyASBvovyAO3&#34;&gt;https://www.youtube.com/playlist?list=PLBBog2r6uMCSmMVTW_QmDLyASBvovyAO3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GIT Repository : &lt;a href=&#34;https://github.com/in28minutes/getting-started-in-5-steps&#34;&gt;https://github.com/in28minutes/getting-started-in-5-steps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Interview Questions&lt;/h2&gt; &#xA;&lt;h3&gt;Java Platform&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1 . Why is Java so popular?&lt;/li&gt; &#xA; &lt;li&gt;2 . What is platform independence?&lt;/li&gt; &#xA; &lt;li&gt;3 . What is bytecode?&lt;/li&gt; &#xA; &lt;li&gt;4 . Compare JDK vs JVM vs JRE&lt;/li&gt; &#xA; &lt;li&gt;5 . What are the important differences between C++ and Java?&lt;/li&gt; &#xA; &lt;li&gt;6 . What is the role for a classloader in Java?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Wrapper Classes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;7 . What are Wrapper classes?&lt;/li&gt; &#xA; &lt;li&gt;8 . Why do we need Wrapper classes in Java?&lt;/li&gt; &#xA; &lt;li&gt;9 . What are the different ways of creating Wrapper class instances?&lt;/li&gt; &#xA; &lt;li&gt;10 . What are differences in the two ways of creating Wrapper classes?&lt;/li&gt; &#xA; &lt;li&gt;11 . What is auto boxing?&lt;/li&gt; &#xA; &lt;li&gt;12 . What are the advantages of auto boxing?&lt;/li&gt; &#xA; &lt;li&gt;13 . What is casting?&lt;/li&gt; &#xA; &lt;li&gt;14 . What is implicit casting?&lt;/li&gt; &#xA; &lt;li&gt;15 . What is explicit casting?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;16 . Are all Stringâ€™s immutable?&lt;/li&gt; &#xA; &lt;li&gt;17 . Where are String values stored in memory?&lt;/li&gt; &#xA; &lt;li&gt;18 . Why should you be careful about String concatenation(+) operator in loops?&lt;/li&gt; &#xA; &lt;li&gt;19 . How do you solve above problem?&lt;/li&gt; &#xA; &lt;li&gt;20 . What are differences between String and StringBuffer?&lt;/li&gt; &#xA; &lt;li&gt;21 . What are differences between StringBuilder and StringBuffer?&lt;/li&gt; &#xA; &lt;li&gt;22 . Can you give examples of different utility methods in String class?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Object oriented programming basics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;23 . What is a class?&lt;/li&gt; &#xA; &lt;li&gt;24 . What is an object?&lt;/li&gt; &#xA; &lt;li&gt;25 . What is state of an object?&lt;/li&gt; &#xA; &lt;li&gt;26 . What is behavior of an object?&lt;/li&gt; &#xA; &lt;li&gt;27 . What is the super class of every class in Java?&lt;/li&gt; &#xA; &lt;li&gt;28 . Explain about toString method ?&lt;/li&gt; &#xA; &lt;li&gt;29 . What is the use of equals method in Java?&lt;/li&gt; &#xA; &lt;li&gt;30 . What are the important things to consider when implementing equals method?&lt;/li&gt; &#xA; &lt;li&gt;31 . What is the Hashcode method used for in Java?&lt;/li&gt; &#xA; &lt;li&gt;32 . Explain inheritance with examples .&lt;/li&gt; &#xA; &lt;li&gt;33 . What is method overloading?&lt;/li&gt; &#xA; &lt;li&gt;34 . What is method overriding?&lt;/li&gt; &#xA; &lt;li&gt;35 . Can super class reference variable can hold an object of sub class?&lt;/li&gt; &#xA; &lt;li&gt;36 . Is multiple inheritance allowed in Java?&lt;/li&gt; &#xA; &lt;li&gt;37 . What is an interface?&lt;/li&gt; &#xA; &lt;li&gt;38 . How do you define an interface?&lt;/li&gt; &#xA; &lt;li&gt;39 . How do you implement an interface?&lt;/li&gt; &#xA; &lt;li&gt;40 . Can you explain a few tricky things about interfaces?&lt;/li&gt; &#xA; &lt;li&gt;41 . Can you extend an interface?&lt;/li&gt; &#xA; &lt;li&gt;42 . Can a class extend multiple interfaces?&lt;/li&gt; &#xA; &lt;li&gt;43 . What is an abstract class?&lt;/li&gt; &#xA; &lt;li&gt;44 . When do you use an abstract class?&lt;/li&gt; &#xA; &lt;li&gt;45 . How do you define an abstract method?&lt;/li&gt; &#xA; &lt;li&gt;46 . Compare abstract class vs interface?&lt;/li&gt; &#xA; &lt;li&gt;47 . What is a constructor?&lt;/li&gt; &#xA; &lt;li&gt;48 . What is a default constructor?&lt;/li&gt; &#xA; &lt;li&gt;49 . Will this code compile?&lt;/li&gt; &#xA; &lt;li&gt;50 . How do you call a super class constructor from a constructor?&lt;/li&gt; &#xA; &lt;li&gt;51 . Will this code compile?&lt;/li&gt; &#xA; &lt;li&gt;52 . What is the use of this()?&lt;/li&gt; &#xA; &lt;li&gt;53 . Can a constructor be called directly from a method?&lt;/li&gt; &#xA; &lt;li&gt;54 . Is a super class constructor called even when there is no explicit call from a sub class constructor?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced object oriented concepts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;55 . What is polymorphism?&lt;/li&gt; &#xA; &lt;li&gt;56 . What is the use of instanceof operator in Java?&lt;/li&gt; &#xA; &lt;li&gt;57 . What is coupling?&lt;/li&gt; &#xA; &lt;li&gt;58 . What is cohesion?&lt;/li&gt; &#xA; &lt;li&gt;59 . What is encapsulation?&lt;/li&gt; &#xA; &lt;li&gt;60 . What is an inner class?&lt;/li&gt; &#xA; &lt;li&gt;61 . What is a static inner class?&lt;/li&gt; &#xA; &lt;li&gt;62 . Can you create an inner class inside a method?&lt;/li&gt; &#xA; &lt;li&gt;63 . What is an anonymous class?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Modifiers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;64 . What is default class modifier?&lt;/li&gt; &#xA; &lt;li&gt;65 . What is private access modifier?&lt;/li&gt; &#xA; &lt;li&gt;66 . What is default or package access modifier?&lt;/li&gt; &#xA; &lt;li&gt;67 . What is protected access modifier?&lt;/li&gt; &#xA; &lt;li&gt;68 . What is public access modifier?&lt;/li&gt; &#xA; &lt;li&gt;69 . What access types of variables can be accessed from a class in same package?&lt;/li&gt; &#xA; &lt;li&gt;70 . What access types of variables can be accessed from a class in different package?&lt;/li&gt; &#xA; &lt;li&gt;71 . What access types of variables can be accessed from a sub class in same package?&lt;/li&gt; &#xA; &lt;li&gt;72 . What access types of variables can be accessed from a sub class in different package?&lt;/li&gt; &#xA; &lt;li&gt;73 . What is the use of a final modifier on a class?&lt;/li&gt; &#xA; &lt;li&gt;74 . What is the use of a final modifier on a method?&lt;/li&gt; &#xA; &lt;li&gt;75 . What is a final variable?&lt;/li&gt; &#xA; &lt;li&gt;76 . What is a final argument?&lt;/li&gt; &#xA; &lt;li&gt;77 . What happens when a variable is marked as volatile?&lt;/li&gt; &#xA; &lt;li&gt;78 . What is a static variable?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;conditions &amp;amp; loops&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;79 . Why should you always use blocks around if statement?&lt;/li&gt; &#xA; &lt;li&gt;80 . Guess the output&lt;/li&gt; &#xA; &lt;li&gt;81 . Guess the output&lt;/li&gt; &#xA; &lt;li&gt;82 . Guess the output of this switch block .&lt;/li&gt; &#xA; &lt;li&gt;83 . Guess the output of this switch block?&lt;/li&gt; &#xA; &lt;li&gt;84 . Should default be the last case in a switch statement?&lt;/li&gt; &#xA; &lt;li&gt;85 . Can a switch statement be used around a String&lt;/li&gt; &#xA; &lt;li&gt;86 . Guess the output of this for loop (P.S. there is an error as the output of given question should be 0-1-2-3-4-5-6-7-8-9. So please ignore that.)&lt;/li&gt; &#xA; &lt;li&gt;87 . What is an enhanced for loop?&lt;/li&gt; &#xA; &lt;li&gt;88 . What is the output of the for loop below?&lt;/li&gt; &#xA; &lt;li&gt;89 . What is the output of the program below?&lt;/li&gt; &#xA; &lt;li&gt;90 . What is the output of the program below?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Exception handling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;91 . Why is exception handling important?&lt;/li&gt; &#xA; &lt;li&gt;92 . What design pattern is used to implement exception handling features in most languages?&lt;/li&gt; &#xA; &lt;li&gt;93 . What is the need for finally block?&lt;/li&gt; &#xA; &lt;li&gt;94 . In what scenarios is code in finally not executed?&lt;/li&gt; &#xA; &lt;li&gt;95 . Will finally be executed in the program below?&lt;/li&gt; &#xA; &lt;li&gt;96 . Is try without a catch is allowed?&lt;/li&gt; &#xA; &lt;li&gt;97 . Is try without catch and finally allowed?&lt;/li&gt; &#xA; &lt;li&gt;98 . Can you explain the hierarchy of exception handling classes?&lt;/li&gt; &#xA; &lt;li&gt;99 . What is the difference between error and exception?&lt;/li&gt; &#xA; &lt;li&gt;100 . What is the difference between checked exceptions and unchecked exceptions?&lt;/li&gt; &#xA; &lt;li&gt;101 . How do you throw an exception from a method?&lt;/li&gt; &#xA; &lt;li&gt;102 . What happens when you throw a checked exception from a method?&lt;/li&gt; &#xA; &lt;li&gt;103 . What are the options you have to eliminate compilation errors when handling checked exceptions?&lt;/li&gt; &#xA; &lt;li&gt;104 . How do you create a custom exception?&lt;/li&gt; &#xA; &lt;li&gt;105 . How do you handle multiple exception types with same exception handling block?&lt;/li&gt; &#xA; &lt;li&gt;106 . Can you explain about try with resources?&lt;/li&gt; &#xA; &lt;li&gt;107 . How does try with resources work?&lt;/li&gt; &#xA; &lt;li&gt;108 . Can you explain a few exception handling best practices?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Miscellaneous topics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;109 . What are the default values in an array?&lt;/li&gt; &#xA; &lt;li&gt;110 . How do you loop around an array using enhanced for loop?&lt;/li&gt; &#xA; &lt;li&gt;111 . How do you print the content of an array?&lt;/li&gt; &#xA; &lt;li&gt;112 . How do you compare two arrays?&lt;/li&gt; &#xA; &lt;li&gt;113 . What is an enum?&lt;/li&gt; &#xA; &lt;li&gt;114 . Can you use a switch statement around an enum?&lt;/li&gt; &#xA; &lt;li&gt;115 . What are variable arguments or varargs?&lt;/li&gt; &#xA; &lt;li&gt;116 . What are asserts used for?&lt;/li&gt; &#xA; &lt;li&gt;117 . When should asserts be used?&lt;/li&gt; &#xA; &lt;li&gt;118 . What is garbage collection?&lt;/li&gt; &#xA; &lt;li&gt;119 . Can you explain garbage collection with an example?&lt;/li&gt; &#xA; &lt;li&gt;120 . When is garbage collection run?&lt;/li&gt; &#xA; &lt;li&gt;121 . What are best practices on garbage collection?&lt;/li&gt; &#xA; &lt;li&gt;122 . What are initialization blocks?&lt;/li&gt; &#xA; &lt;li&gt;123 . What is a static initializer?&lt;/li&gt; &#xA; &lt;li&gt;124 . What is an instance initializer block?&lt;/li&gt; &#xA; &lt;li&gt;125 . What is tokenizing?&lt;/li&gt; &#xA; &lt;li&gt;126 . Can you give an example of tokenizing?&lt;/li&gt; &#xA; &lt;li&gt;127 . What is serialization?&lt;/li&gt; &#xA; &lt;li&gt;128 . How do you serialize an object using serializable interface?&lt;/li&gt; &#xA; &lt;li&gt;129 . How do you de-serialize in Java?&lt;/li&gt; &#xA; &lt;li&gt;130 . What do you do if only parts of the object have to be serialized?&lt;/li&gt; &#xA; &lt;li&gt;131 . How do you serialize a hierarchy of objects?&lt;/li&gt; &#xA; &lt;li&gt;132 . Are the constructors in an object invoked when it is de-serialized?&lt;/li&gt; &#xA; &lt;li&gt;133 . Are the values of static variables stored when an object is serialized?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Collections&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;134 . Why do we need collections in Java?&lt;/li&gt; &#xA; &lt;li&gt;135 . What are the important interfaces in the collection hierarchy?&lt;/li&gt; &#xA; &lt;li&gt;136 . What are the important methods that are declared in the collection interface?&lt;/li&gt; &#xA; &lt;li&gt;137 . Can you explain briefly about the List interface?&lt;/li&gt; &#xA; &lt;li&gt;138 . Explain about ArrayList with an example?&lt;/li&gt; &#xA; &lt;li&gt;139 . Can an ArrayList have duplicate elements?&lt;/li&gt; &#xA; &lt;li&gt;140 . How do you iterate around an ArrayList using iterator?&lt;/li&gt; &#xA; &lt;li&gt;141 . How do you sort an ArrayList?&lt;/li&gt; &#xA; &lt;li&gt;142 . How do you sort elements in an ArrayList using comparable interface?&lt;/li&gt; &#xA; &lt;li&gt;143 . How do you sort elements in an ArrayList using comparator interface?&lt;/li&gt; &#xA; &lt;li&gt;144 . What is vector class? How is it different from an ArrayList?&lt;/li&gt; &#xA; &lt;li&gt;145 . What is linkedList? What interfaces does it implement? How is it different from an ArrayList?&lt;/li&gt; &#xA; &lt;li&gt;146 . Can you briefly explain about the Set interface?&lt;/li&gt; &#xA; &lt;li&gt;147 . What are the important interfaces related to the Set interface?&lt;/li&gt; &#xA; &lt;li&gt;148 . What is the difference between Set and sortedSet interfaces?&lt;/li&gt; &#xA; &lt;li&gt;149 . Can you give examples of classes that implement the Set interface?&lt;/li&gt; &#xA; &lt;li&gt;150 . What is a HashSet?&lt;/li&gt; &#xA; &lt;li&gt;151 . What is a linkedHashSet? How is different from a HashSet?&lt;/li&gt; &#xA; &lt;li&gt;152 . What is a TreeSet? How is different from a HashSet?&lt;/li&gt; &#xA; &lt;li&gt;153 . Can you give examples of implementations of navigableSet?&lt;/li&gt; &#xA; &lt;li&gt;154 . Explain briefly about Queue interface?&lt;/li&gt; &#xA; &lt;li&gt;155 . What are the important interfaces related to the Queue interface?&lt;/li&gt; &#xA; &lt;li&gt;156 . Explain about the Deque interface?&lt;/li&gt; &#xA; &lt;li&gt;157 . Explain the BlockingQueue interface?&lt;/li&gt; &#xA; &lt;li&gt;158 . What is a priorityQueue?&lt;/li&gt; &#xA; &lt;li&gt;159 . Can you give example implementations of the BlockingQueue interface?&lt;/li&gt; &#xA; &lt;li&gt;160 . Can you briefly explain about the Map interface?&lt;/li&gt; &#xA; &lt;li&gt;161 . What is difference between Map and sortedMap?&lt;/li&gt; &#xA; &lt;li&gt;162 . What is a HashMap?&lt;/li&gt; &#xA; &lt;li&gt;163 . What are the different methods in a Hash Map?&lt;/li&gt; &#xA; &lt;li&gt;164 . What is a TreeMap? How is different from a HashMap?&lt;/li&gt; &#xA; &lt;li&gt;165 . Can you give an example of implementation of navigableMap interface?&lt;/li&gt; &#xA; &lt;li&gt;166 . What are the static methods present in the collections class?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced collections&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;167 . What is the difference between synchronized and concurrent collections in Java?&lt;/li&gt; &#xA; &lt;li&gt;168 . Explain about the new concurrent collections in Java?&lt;/li&gt; &#xA; &lt;li&gt;169 . Explain about copyonwrite concurrent collections approach?&lt;/li&gt; &#xA; &lt;li&gt;170 . What is compareandswap approach?&lt;/li&gt; &#xA; &lt;li&gt;171 . What is a lock? How is it different from using synchronized approach?&lt;/li&gt; &#xA; &lt;li&gt;172 . What is initial capacity of a Java collection?&lt;/li&gt; &#xA; &lt;li&gt;173 . What is load factor?&lt;/li&gt; &#xA; &lt;li&gt;174 . When does a Java collection throw UnsupportedOperationException?&lt;/li&gt; &#xA; &lt;li&gt;175 . What is difference between fail-safe and fail-fast iterators?&lt;/li&gt; &#xA; &lt;li&gt;176 . What are atomic operations in Java?&lt;/li&gt; &#xA; &lt;li&gt;177 . What is BlockingQueue in Java?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Generics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;178 . What are Generics?&lt;/li&gt; &#xA; &lt;li&gt;179 . Why do we need Generics? Can you give an example of how Generics make a program more flexible?&lt;/li&gt; &#xA; &lt;li&gt;180 . How do you declare a generic class?&lt;/li&gt; &#xA; &lt;li&gt;181 . What are the restrictions in using generic type that is declared in a class declaration?&lt;/li&gt; &#xA; &lt;li&gt;182 . How can we restrict Generics to a subclass of particular class?&lt;/li&gt; &#xA; &lt;li&gt;183 . How can we restrict Generics to a super class of particular class?&lt;/li&gt; &#xA; &lt;li&gt;184 . Can you give an example of a generic method?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Multi threading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;185 . What is the need for threads in Java?&lt;/li&gt; &#xA; &lt;li&gt;186 . How do you create a thread?&lt;/li&gt; &#xA; &lt;li&gt;187 . How do you create a thread by extending thread class?&lt;/li&gt; &#xA; &lt;li&gt;188 . How do you create a thread by implementing runnable interface?&lt;/li&gt; &#xA; &lt;li&gt;189 . How do you run a thread in Java?&lt;/li&gt; &#xA; &lt;li&gt;190 . What are the different states of a thread?&lt;/li&gt; &#xA; &lt;li&gt;191 . What is priority of a thread? How do you change the priority of a thread?&lt;/li&gt; &#xA; &lt;li&gt;192 . What is executorservice?&lt;/li&gt; &#xA; &lt;li&gt;193 . Can you give an example for executorservice?&lt;/li&gt; &#xA; &lt;li&gt;194 . Explain different ways of creating executor services .&lt;/li&gt; &#xA; &lt;li&gt;195 . How do you check whether an executionservice task executed successfully?&lt;/li&gt; &#xA; &lt;li&gt;196 . What is callable? How do you execute a callable from executionservice?&lt;/li&gt; &#xA; &lt;li&gt;197 . What is synchronization of threads?&lt;/li&gt; &#xA; &lt;li&gt;198 . Can you give an example of a synchronized block?&lt;/li&gt; &#xA; &lt;li&gt;199 . Can a static method be synchronized?&lt;/li&gt; &#xA; &lt;li&gt;200 . What is the use of join method in threads?&lt;/li&gt; &#xA; &lt;li&gt;201 . Describe a few other important methods in threads?&lt;/li&gt; &#xA; &lt;li&gt;202 . What is a deadlock?&lt;/li&gt; &#xA; &lt;li&gt;203 . What are the important methods in Java for inter-thread communication?&lt;/li&gt; &#xA; &lt;li&gt;204 . What is the use of wait method?&lt;/li&gt; &#xA; &lt;li&gt;205 . What is the use of notify method?&lt;/li&gt; &#xA; &lt;li&gt;206 . What is the use of notifyall method?&lt;/li&gt; &#xA; &lt;li&gt;207 . Can you write a synchronized program with wait and notify methods?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Functional Programming - Lamdba expressions and Streams&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;208 . What is functional programming?&lt;/li&gt; &#xA; &lt;li&gt;209 . Can you give an example of functional programming?&lt;/li&gt; &#xA; &lt;li&gt;210 . What is a stream?&lt;/li&gt; &#xA; &lt;li&gt;211 . Explain about streams with an example?&lt;/li&gt; &#xA; &lt;li&gt;what are intermediate operations in streams?&lt;/li&gt; &#xA; &lt;li&gt;212 . What are terminal operations in streams?&lt;/li&gt; &#xA; &lt;li&gt;213 . What are method references?&lt;/li&gt; &#xA; &lt;li&gt;214 . What are lambda expressions?&lt;/li&gt; &#xA; &lt;li&gt;215 . Can you give an example of lambda expression?&lt;/li&gt; &#xA; &lt;li&gt;216 . Can you explain the relationship between lambda expression and functional interfaces?&lt;/li&gt; &#xA; &lt;li&gt;217 . What is a predicate?&lt;/li&gt; &#xA; &lt;li&gt;218 . What is the functional interface - function?&lt;/li&gt; &#xA; &lt;li&gt;219 . What is a consumer?&lt;/li&gt; &#xA; &lt;li&gt;220 . Can you give examples of functional interfaces with multiple arguments?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;New Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;221 . What are the new features in Java 5?&lt;/li&gt; &#xA; &lt;li&gt;222 . What are the new features in Java 6?&lt;/li&gt; &#xA; &lt;li&gt;223 . What are the new features in Java 7?&lt;/li&gt; &#xA; &lt;li&gt;224 . What are the new features in Java 8?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What you can do next?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Design Patterns] (&lt;a href=&#34;https://www.youtube.com/watch?v=f5Rzr5mVNbY&#34;&gt;https://www.youtube.com/watch?v=f5Rzr5mVNbY&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;[Maven] (&lt;a href=&#34;https://courses.in28minutes.com/p/maven-tutorial-for-beginners-in-5-steps&#34;&gt;https://courses.in28minutes.com/p/maven-tutorial-for-beginners-in-5-steps&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;[JSP Servlets] (&lt;a href=&#34;https://www.youtube.com/watch?v=Vvnliarkw48&#34;&gt;https://www.youtube.com/watch?v=Vvnliarkw48&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;[Spring MVC] (&lt;a href=&#34;https://www.youtube.com/watch?v=BjNhGaZDr0Y&#34;&gt;https://www.youtube.com/watch?v=BjNhGaZDr0Y&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refer our TroubleShooting Guide - &lt;a href=&#34;https://github.com/in28minutes/in28minutes-initiatives/tree/master/The-in28Minutes-TroubleshootingGuide-And-FAQ&#34;&gt;https://github.com/in28minutes/in28minutes-initiatives/tree/master/The-in28Minutes-TroubleshootingGuide-And-FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Youtube Playlists - 500+ Videos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/rithustutorials/playlists?view=1&amp;amp;sort=lad&amp;amp;flow=list&#34;&gt;Click here - 30+ Playlists with 500+ Videos on Spring, Spring Boot, REST, Microservices and the Cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Keep Learning in28Minutes&lt;/h2&gt; &#xA;&lt;p&gt;in28Minutes is creating amazing solutions for you to learn Spring Boot, Full Stack and the Cloud - Docker, Kubernetes, AWS, React, Angular etc. - &lt;a href=&#34;https://github.com/in28minutes/learn&#34;&gt;Check out all our courses here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>