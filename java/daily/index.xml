<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-23T01:32:32Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TheOfficialFloW/bd-jb</title>
    <updated>2022-07-23T01:32:32Z</updated>
    <id>tag:github.com,2022-07-23:/TheOfficialFloW/bd-jb</id>
    <link href="https://github.com/TheOfficialFloW/bd-jb" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The first bd-j hack.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bd-jb&lt;/h1&gt; &#xA;&lt;p&gt;The first bd-j hack.&lt;/p&gt; &#xA;&lt;h1&gt;Prerequisites&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bd-j tools from &lt;a href=&#34;https://github.com/zathras/java.net&#34;&gt;https://github.com/zathras/java.net&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>apache/rocketmq</title>
    <updated>2022-07-23T01:32:32Z</updated>
    <id>tag:github.com,2022-07-23:/apache/rocketmq</id>
    <link href="https://github.com/apache/rocketmq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mirror of Apache RocketMQ&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Apache RocketMQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/apache/rocketmq&#34;&gt;&lt;img src=&#34;https://travis-ci.org/apache/rocketmq.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/apache/rocketmq?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/apache/rocketmq/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/apache/rocketmq&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/apache/rocketmq/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;CodeCov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Corg.apache.rocketmq&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/org.apache.rocketmq/rocketmq-all/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://rocketmq.apache.org/dowloading/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-download-orange.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/apache/rocketmq&#34; title=&#34;Average time to resolve an issue&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/resolution/apache/rocketmq.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/apache/rocketmq&#34; title=&#34;Percentage of issues still open&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/open/apache/rocketmq.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=ApacheRocketMQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ApacheRocketMQ?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://rocketmq.apache.org&#34;&gt;Apache RocketMQ&lt;/a&gt; is a distributed messaging and streaming platform with low latency, high performance and reliability, trillion-level capacity and flexible scalability.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;It offers a variety of features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Messaging patterns including publish/subscribe, request/reply and streaming&lt;/li&gt; &#xA; &lt;li&gt;Financial grade transactional message&lt;/li&gt; &#xA; &lt;li&gt;Built-in fault tolerance and high availability configuration options base on &lt;a href=&#34;https://raw.githubusercontent.com/apache/rocketmq/develop/docs/cn/controller/quick_start.md&#34;&gt;DLedger Controller&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Built-in message tracing capability, also support opentracing&lt;/li&gt; &#xA; &lt;li&gt;Versatile big-data and streaming ecosystem integration&lt;/li&gt; &#xA; &lt;li&gt;Message retroactivity by time or offset&lt;/li&gt; &#xA; &lt;li&gt;Reliable FIFO and strict ordered messaging in the same queue&lt;/li&gt; &#xA; &lt;li&gt;Efficient pull and push consumption model&lt;/li&gt; &#xA; &lt;li&gt;Million-level message accumulation capacity in a single queue&lt;/li&gt; &#xA; &lt;li&gt;Multiple messaging protocols like gRPC, MQTT, JMS and OpenMessaging&lt;/li&gt; &#xA; &lt;li&gt;Flexible distributed scale-out deployment architecture&lt;/li&gt; &#xA; &lt;li&gt;Lightning-fast batch message exchange system&lt;/li&gt; &#xA; &lt;li&gt;Various message filter mechanics such as SQL and Tag&lt;/li&gt; &#xA; &lt;li&gt;Docker images for isolated testing and cloud isolated clusters&lt;/li&gt; &#xA; &lt;li&gt;Feature-rich administrative dashboard for configuration, metrics and monitoring&lt;/li&gt; &#xA; &lt;li&gt;Authentication and authorization&lt;/li&gt; &#xA; &lt;li&gt;Free open source connectors, for both sources and sinks&lt;/li&gt; &#xA; &lt;li&gt;Lightweight real-time computing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;This paragraph guides you through steps of installing RocketMQ in different ways. For local development and testing, only one instance will be created for each component.&lt;/p&gt; &#xA;&lt;h3&gt;Run RocketMQ locally&lt;/h3&gt; &#xA;&lt;p&gt;RocketMQ runs on all major operating systems and requires only a Java JDK version 8 or higher to be installed. To check, run &lt;code&gt;java -version&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ java -version&#xA;java version &#34;1.8.0_121&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Windows users, click &lt;a href=&#34;https://archive.apache.org/dist/rocketmq/4.9.3/rocketmq-all-4.9.3-bin-release.zip&#34;&gt;here&lt;/a&gt; to download the 4.9.3 RocketMQ binary release, unpack it to your local disk, such as &lt;code&gt;D:\rocketmq&lt;/code&gt;. For macOS and Linux users, execute following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Download release from the Apache mirror&#xA;$ wget https://archive.apache.org/dist/rocketmq/4.9.3/rocketmq-all-4.9.3-bin-release.zip&#xA;&#xA;# Unpack the release&#xA;$ unzip rocketmq-all-4.9.3-bin-release.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Prepare a terminal and change to the extracted &lt;code&gt;bin&lt;/code&gt; directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ cd rocketmq-4.9.3/bin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;1) Start NameServer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;NameServer will be listening at &lt;code&gt;0.0.0.0:9876&lt;/code&gt;, make sure that the port is not used by others on the local machine, and then do as follows.&lt;/p&gt; &#xA;&lt;p&gt;For macOS and Linux users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;### start Name Server&#xA;$ nohup sh mqnamesrv &amp;amp;&#xA;&#xA;### check whether Name Server is successfully started&#xA;$ tail -f ~/logs/rocketmqlogs/namesrv.log&#xA;The Name Server boot success...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Windows users, you need set environment variables first:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From the desktop, right click the Computer icon.&lt;/li&gt; &#xA; &lt;li&gt;Choose Properties from the context menu.&lt;/li&gt; &#xA; &lt;li&gt;Click the Advanced system settings link.&lt;/li&gt; &#xA; &lt;li&gt;Click Environment Variables.&lt;/li&gt; &#xA; &lt;li&gt;Add Environment &lt;code&gt;ROCKETMQ_HOME=&#34;D:\rocketmq&#34;&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then change directory to rocketmq, type and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ mqnamesrv.cmd&#xA;The Name Server boot success...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2) Start Broker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For macOS and Linux users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;### start Broker&#xA;$ nohup sh bin/mqbroker -n localhost:9876 &amp;amp;&#xA;&#xA;### check whether Broker is successfully started, eg: Broker&#39;s IP is 192.168.1.2, Broker&#39;s name is broker-a&#xA;$ tail -f ~/logs/rocketmqlogs/broker.log&#xA;The broker[broker-a, 192.169.1.2:10911] boot success...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Windows users:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ mqbroker.cmd -n localhost:9876&#xA;The broker[broker-a, 192.169.1.2:10911] boot success...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run RocketMQ in Docker&lt;/h3&gt; &#xA;&lt;p&gt;You can run RocketMQ on your own machine within Docker containers, &lt;code&gt;host&lt;/code&gt; network will be used to expose listening port in the container.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1) Start NameServer&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run -it --net=host apache/rocketmq ./mqnamesrv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2) Start Broker&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ docker run -it --net=host --mount source=/tmp/store,target=/home/rocketmq/store apache/rocketmq ./mqbroker -n localhost:9876&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run RocketMQ in Kubernetes&lt;/h3&gt; &#xA;&lt;p&gt;You can also run a RocketMQ cluster within a Kubernetes cluster using &lt;a href=&#34;https://github.com/apache/rocketmq-operator&#34;&gt;RocketMQ Operator&lt;/a&gt;. Before your operations, make sure that &lt;code&gt;kubectl&lt;/code&gt; and related kubeconfig file installed on your machine.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;1) Install CRDs&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;### install CRDs&#xA;$ git clone https://github.com/apache/rocketmq-operator&#xA;$ cd rocketmq-operator &amp;amp;&amp;amp; make deploy&#xA;&#xA;### check whether CRDs is successfully installed&#xA;$ kubectl get crd | grep rocketmq.apache.org&#xA;brokers.rocketmq.apache.org                 2022-05-12T09:23:18Z&#xA;consoles.rocketmq.apache.org                2022-05-12T09:23:19Z&#xA;nameservices.rocketmq.apache.org            2022-05-12T09:23:18Z&#xA;topictransfers.rocketmq.apache.org          2022-05-12T09:23:19Z&#xA;&#xA;### check whether operator is running&#xA;$ kubectl get pods | grep rocketmq-operator&#xA;rocketmq-operator-6f65c77c49-8hwmj   1/1     Running   0          93s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;2) Create Cluster Instance&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;### create RocketMQ cluster resource&#xA;$ cd example &amp;amp;&amp;amp; kubectl create -f rocketmq_v1alpha1_rocketmq_cluster.yaml&#xA;&#xA;### check whether cluster resources is running&#xA;$ kubectl get sts&#xA;NAME                 READY   AGE&#xA;broker-0-master      1/1     107m&#xA;broker-0-replica-1   1/1     107m&#xA;name-service         1/1     107m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Apache RocketMQ Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-streams&#34;&gt;RocketMQ Streams&lt;/a&gt;: A lightweight stream computing engine based on Apache RocketMQ.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-flink&#34;&gt;RocketMQ Flink&lt;/a&gt;: The Apache RocketMQ connector of Apache Flink that supports source and sink connector in data stream and Table.&lt;/li&gt; &#xA; &lt;li&gt;RocketMQ Muli-Language Clients &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-client-cpp&#34;&gt;RocketMQ Client CPP&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-client-go&#34;&gt;RocketMQ Client Go&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-client-python&#34;&gt;RocketMQ Client Python&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-client-nodejs&#34;&gt;RocketMQ Client Nodejs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-spring&#34;&gt;RocketMQ Spring&lt;/a&gt;: A project which helps developers quickly integrate Apache RocketMQ with Spring Boot.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-exporter&#34;&gt;RocketMQ Exporter&lt;/a&gt;: An Apache RocketMQ exporter for Prometheus.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-operator&#34;&gt;RocketMQ Operator&lt;/a&gt;: Providing a way to run an Apache RocketMQ cluster on Kubernetes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-docker&#34;&gt;RocketMQ Docker&lt;/a&gt;: The Git repo of the Docker Image for Apache RocketMQ.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-dashboard&#34;&gt;RocketMQ Dashboard&lt;/a&gt;: Operation and maintenance console of Apache RocketMQ.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-connect&#34;&gt;RocketMQ Connect&lt;/a&gt;: A tool for scalably and reliably streaming data between Apache RocketMQ and other systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-mqtt&#34;&gt;RocketMQ MQTT&lt;/a&gt;: A new MQTT protocol architecture model, based on which Apache RocketMQ can better support messages from terminals such as IoT devices and Mobile APP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-externals&#34;&gt;RocketMQ Incubating Community Projects&lt;/a&gt;: Icubator community projects of Apache RocketMQ, including &lt;a href=&#34;https://github.com/apache/rocketmq-externals/tree/master/logappender&#34;&gt;logappender&lt;/a&gt;, &lt;a href=&#34;https://github.com/apache/rocketmq-externals/tree/master/rocketmq-ansible&#34;&gt;rocketmq-ansible&lt;/a&gt;, &lt;a href=&#34;https://github.com/apache/rocketmq-externals/tree/master/rocketmq-beats-integration&#34;&gt;rocketmq-beats-integration&lt;/a&gt;, &lt;a href=&#34;https://github.com/apache/rocketmq-externals/tree/master/rocketmq-cloudevents-binding&#34;&gt;rocketmq-cloudevents-binding&lt;/a&gt;, etc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/rocketmq-site&#34;&gt;RocketMQ Site&lt;/a&gt;: The repository for Apache RocketMQ website.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Learn it &amp;amp; Contact us&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mailing Lists: &lt;a href=&#34;https://rocketmq.apache.org/about/contact/&#34;&gt;https://rocketmq.apache.org/about/contact/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Home: &lt;a href=&#34;https://rocketmq.apache.org&#34;&gt;https://rocketmq.apache.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Docs: &lt;a href=&#34;https://rocketmq.apache.org/docs/quick-start/&#34;&gt;https://rocketmq.apache.org/docs/quick-start/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issues: &lt;a href=&#34;https://github.com/apache/rocketmq/issues&#34;&gt;https://github.com/apache/rocketmq/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Rips: &lt;a href=&#34;https://github.com/apache/rocketmq/wiki/RocketMQ-Improvement-Proposal&#34;&gt;https://github.com/apache/rocketmq/wiki/RocketMQ-Improvement-Proposal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Ask: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/rocketmq&#34;&gt;https://stackoverflow.com/questions/tagged/rocketmq&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://rocketmq-invite-automation.herokuapp.com/&#34;&gt;https://rocketmq-invite-automation.herokuapp.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We always welcome new contributions, whether for trivial cleanups, &lt;a href=&#34;https://github.com/apache/rocketmq/wiki/RocketMQ-Improvement-Proposal&#34;&gt;big new features&lt;/a&gt; or other material rewards, more details see &lt;a href=&#34;http://rocketmq.apache.org/docs/how-to-contribute/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;Apache License, Version 2.0&lt;/a&gt; Copyright (C) Apache Software Foundation&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Export Control Notice&lt;/h2&gt; &#xA;&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country&#39;s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&#34;http://www.wassenaar.org/&#34;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this Apache Software Foundation distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; &#xA;&lt;p&gt;The following provides more details on the included cryptographic software:&lt;/p&gt; &#xA;&lt;p&gt;This software uses Apache Commons Crypto (&lt;a href=&#34;https://commons.apache.org/proper/commons-crypto/&#34;&gt;https://commons.apache.org/proper/commons-crypto/&lt;/a&gt;) to support authentication, and encryption and decryption of data sent across the network between services.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alibaba/arthas</title>
    <updated>2022-07-23T01:32:32Z</updated>
    <id>tag:github.com,2022-07-23:/alibaba/arthas</id>
    <link href="https://github.com/alibaba/arthas" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Alibaba Java Diagnostic Tool Arthas/Alibaba Java诊断利器Arthas&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Arthas&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/site/src/site/sphinx/arthas.png&#34; alt=&#34;arthas&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alibaba/arthas/actions&#34;&gt;&lt;img src=&#34;https://github.com/alibaba/arthas/workflows/JavaCI/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/alibaba/arthas&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/alibaba/arthas/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=g:com.taobao.arthas&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.taobao.arthas/arthas-packaging.svg?sanitize=true&#34; alt=&#34;maven&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/alibaba/arthas.svg?sanitize=true&#34; alt=&#34;license&#34;&gt; &lt;a href=&#34;http://isitmaintained.com/project/alibaba/arthas&#34; title=&#34;Average time to resolve an issue&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/resolution/alibaba/arthas.svg?sanitize=true&#34; alt=&#34;Average time to resolve an issue&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://isitmaintained.com/project/alibaba/arthas&#34; title=&#34;Percentage of issues still open&#34;&gt;&lt;img src=&#34;http://isitmaintained.com/badge/open/alibaba/arthas.svg?sanitize=true&#34; alt=&#34;Percentage of issues still open&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Arthas&lt;/code&gt; is a Java Diagnostic tool open sourced by Alibaba.&lt;/p&gt; &#xA;&lt;p&gt;Arthas allows developers to troubleshoot production issues for Java applications without modifying code or restarting servers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/README_CN.md&#34;&gt;中文说明/Chinese Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Background&lt;/h3&gt; &#xA;&lt;p&gt;Often times, the production system network is inaccessible from the local development environment. If issues are encountered in production systems, it is impossible to use IDEs to debug the application remotely. More importantly, debugging in production environment is unacceptable, as it will suspend all the threads, resulting in the suspension of business services.&lt;/p&gt; &#xA;&lt;p&gt;Developers could always try to reproduce the same issue on the test/staging environment. However, this is tricky as some issues cannot be reproduced easily on a different environment, or even disappear once restarted.&lt;/p&gt; &#xA;&lt;p&gt;And if you&#39;re thinking of adding some logs to your code to help troubleshoot the issue, you will have to go through the following lifecycle; test, staging, and then to production. Time is money! This approach is inefficient! Besides, the issue may not be reproducible once the JVM is restarted, as described above.&lt;/p&gt; &#xA;&lt;p&gt;Arthas was built to solve these issues. A developer can troubleshoot your production issues on-the-fly. No JVM restart, no additional code changes. Arthas works as an observer, which will never suspend your existing threads.&lt;/p&gt; &#xA;&lt;h3&gt;Key features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check whether a class is loaded, or where the class is being loaded. (Useful for troubleshooting jar file conflicts)&lt;/li&gt; &#xA; &lt;li&gt;Decompile a class to ensure the code is running as expected.&lt;/li&gt; &#xA; &lt;li&gt;View classloader statistics, e.g. the number of classloaders, the number of classes loaded per classloader, the classloader hierarchy, possible classloader leaks, etc.&lt;/li&gt; &#xA; &lt;li&gt;View the method invocation details, e.g. method parameter, return object, thrown exception, and etc.&lt;/li&gt; &#xA; &lt;li&gt;Check the stack trace of specified method invocation. This is useful when a developers wants to know the caller of the said method.&lt;/li&gt; &#xA; &lt;li&gt;Trace the method invocation to find slow sub-invocations.&lt;/li&gt; &#xA; &lt;li&gt;Monitor method invocation statistics, e.g. qps, rt, success rate and etc.&lt;/li&gt; &#xA; &lt;li&gt;Monitor system metrics, thread states and cpu usage, gc statistics, and etc.&lt;/li&gt; &#xA; &lt;li&gt;Supports command line interactive mode, with auto-complete feature enabled.&lt;/li&gt; &#xA; &lt;li&gt;Supports telnet and websocket, which enables both local and remote diagnostics with command line and browsers.&lt;/li&gt; &#xA; &lt;li&gt;Supports profiler/Flame Graph&lt;/li&gt; &#xA; &lt;li&gt;Support get objects in the heap that are instances of the specified class.&lt;/li&gt; &#xA; &lt;li&gt;Supports JDK 6+.&lt;/li&gt; &#xA; &lt;li&gt;Supports Linux/Mac/Windows.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en&#34;&gt;Online Tutorials(Recommended)&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/tutorials/katacoda/README.md#online-tutorial-usages&#34;&gt;Usages&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick start&lt;/h3&gt; &#xA;&lt;h4&gt;Use &lt;code&gt;arthas-boot&lt;/code&gt;(Recommended)&lt;/h4&gt; &#xA;&lt;p&gt;Download&lt;code&gt;arthas-boot.jar&lt;/code&gt;，Start with &lt;code&gt;java&lt;/code&gt; command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -O https://arthas.aliyun.com/arthas-boot.jar&#xA;java -jar arthas-boot.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Print usage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -jar arthas-boot.jar -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Use &lt;code&gt;as.sh&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;You can install Arthas with one single line command on Linux, Unix, and Mac. Copy the following command and paste it into the command line, then press &lt;em&gt;Enter&lt;/em&gt; to run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -L https://arthas.aliyun.com/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command above will download the bootstrap script &lt;code&gt;as.sh&lt;/code&gt; to the current directory. You can move it any other place you want, or put its location in &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can enter its interactive interface by executing &lt;code&gt;as.sh&lt;/code&gt;, or execute &lt;code&gt;as.sh -h&lt;/code&gt; for more help information.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/arthas-tutorials.html?language=en&#34;&gt;Online Tutorials(Recommended)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en&#34;&gt;User manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/install-detail.html&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/download.html&#34;&gt;Download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/quick-start.html&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/advanced-use.html&#34;&gt;Advanced usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/commands.html&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/web-console.html&#34;&gt;WebConsole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/docker.html&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/spring-boot-starter.html&#34;&gt;Arthas Spring Boot Starter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/arthas/issues?q=label%3Auser-case&#34;&gt;User cases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/arthas/raw/master/CONTRIBUTING.md&#34;&gt;Compile and debug/How to contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/arthas/releases&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Feature Showcase&lt;/h3&gt; &#xA;&lt;h4&gt;Dashboard&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/dashboard&#34;&gt;https://arthas.aliyun.com/doc/en/dashboard&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/site/src/site/sphinx/_static/dashboard.png&#34; alt=&#34;dashboard&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Thread&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/thread&#34;&gt;https://arthas.aliyun.com/doc/en/thread&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See what is eating your CPU (ranked by top CPU usage) and what is going on there in one glance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ thread -n 3&#xA;&#34;as-command-execute-daemon&#34; Id=29 cpuUsage=75% RUNNABLE&#xA;    at sun.management.ThreadImpl.dumpThreads0(Native Method)&#xA;    at sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:440)&#xA;    at com.taobao.arthas.core.command.monitor200.ThreadCommand$1.action(ThreadCommand.java:58)&#xA;    at com.taobao.arthas.core.command.handler.AbstractCommandHandler.execute(AbstractCommandHandler.java:238)&#xA;    at com.taobao.arthas.core.command.handler.DefaultCommandHandler.handleCommand(DefaultCommandHandler.java:67)&#xA;    at com.taobao.arthas.core.server.ArthasServer$4.run(ArthasServer.java:276)&#xA;    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)&#xA;    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)&#xA;    at java.lang.Thread.run(Thread.java:745)&#xA;&#xA;    Number of locked synchronizers = 1&#xA;    - java.util.concurrent.ThreadPoolExecutor$Worker@6cd0b6f8&#xA;&#xA;&#34;as-session-expire-daemon&#34; Id=25 cpuUsage=24% TIMED_WAITING&#xA;    at java.lang.Thread.sleep(Native Method)&#xA;    at com.taobao.arthas.core.server.DefaultSessionManager$2.run(DefaultSessionManager.java:85)&#xA;&#xA;&#34;Reference Handler&#34; Id=2 cpuUsage=0% WAITING on java.lang.ref.Reference$Lock@69ba0f27&#xA;    at java.lang.Object.wait(Native Method)&#xA;    -  waiting on java.lang.ref.Reference$Lock@69ba0f27&#xA;    at java.lang.Object.wait(Object.java:503)&#xA;    at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:133)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;jad&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/jad&#34;&gt;https://arthas.aliyun.com/doc/en/jad&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Decompile your class with one shot:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;$ jad javax.servlet.Servlet&#xA;&#xA;ClassLoader:&#xA;+-java.net.URLClassLoader@6108b2d7&#xA;  +-sun.misc.Launcher$AppClassLoader@18b4aac2&#xA;    +-sun.misc.Launcher$ExtClassLoader@1ddf84b8&#xA;&#xA;Location:&#xA;/Users/xxx/work/test/lib/servlet-api.jar&#xA;&#xA;/*&#xA; * Decompiled with CFR 0_122.&#xA; */&#xA;package javax.servlet;&#xA;&#xA;import java.io.IOException;&#xA;import javax.servlet.ServletConfig;&#xA;import javax.servlet.ServletException;&#xA;import javax.servlet.ServletRequest;&#xA;import javax.servlet.ServletResponse;&#xA;&#xA;public interface Servlet {&#xA;    public void init(ServletConfig var1) throws ServletException;&#xA;&#xA;    public ServletConfig getServletConfig();&#xA;&#xA;    public void service(ServletRequest var1, ServletResponse var2) throws ServletException, IOException;&#xA;&#xA;    public String getServletInfo();&#xA;&#xA;    public void destroy();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;mc&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/mc&#34;&gt;https://arthas.aliyun.com/doc/en/mc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Memory compiler, compiles &lt;code&gt;.java&lt;/code&gt; files into &lt;code&gt;.class&lt;/code&gt; files in memory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mc /tmp/Test.java&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;retransform&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/retransform&#34;&gt;https://arthas.aliyun.com/doc/en/retransform&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Load the external &lt;code&gt;*.class&lt;/code&gt; files to retransform/hotswap the loaded classes in JVM.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;retransform /tmp/Test.class&#xA;retransform -c 327a647b /tmp/Test.class /tmp/Test\$Inner.class&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;sc&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/sc&#34;&gt;https://arthas.aliyun.com/doc/en/sc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Search any loaded class with detailed information.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sc -d org.springframework.web.context.support.XmlWebApplicationContext&#xA; class-info        org.springframework.web.context.support.XmlWebApplicationContext&#xA; code-source       /Users/xxx/work/test/WEB-INF/lib/spring-web-3.2.11.RELEASE.jar&#xA; name              org.springframework.web.context.support.XmlWebApplicationContext&#xA; isInterface       false&#xA; isAnnotation      false&#xA; isEnum            false&#xA; isAnonymousClass  false&#xA; isArray           false&#xA; isLocalClass      false&#xA; isMemberClass     false&#xA; isPrimitive       false&#xA; isSynthetic       false&#xA; simple-name       XmlWebApplicationContext&#xA; modifier          public&#xA; annotation&#xA; interfaces&#xA; super-class       +-org.springframework.web.context.support.AbstractRefreshableWebApplicationContext&#xA;                     +-org.springframework.context.support.AbstractRefreshableConfigApplicationContext&#xA;                       +-org.springframework.context.support.AbstractRefreshableApplicationContext&#xA;                         +-org.springframework.context.support.AbstractApplicationContext&#xA;                           +-org.springframework.core.io.DefaultResourceLoader&#xA;                             +-java.lang.Object&#xA; class-loader      +-org.apache.catalina.loader.ParallelWebappClassLoader&#xA;                     +-java.net.URLClassLoader@6108b2d7&#xA;                       +-sun.misc.Launcher$AppClassLoader@18b4aac2&#xA;                         +-sun.misc.Launcher$ExtClassLoader@1ddf84b8&#xA; classLoaderHash   25131501&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;vmtool&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/vmtool&#34;&gt;https://arthas.aliyun.com/doc/en/vmtool&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Get objects in the heap that are instances of the specified class.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ vmtool --action getInstances --className java.lang.String --limit 10&#xA;@String[][&#xA;    @String[com/taobao/arthas/core/shell/session/Session],&#xA;    @String[com.taobao.arthas.core.shell.session.Session],&#xA;    @String[com/taobao/arthas/core/shell/session/Session],&#xA;    @String[com/taobao/arthas/core/shell/session/Session],&#xA;    @String[com/taobao/arthas/core/shell/session/Session.class],&#xA;    @String[com/taobao/arthas/core/shell/session/Session.class],&#xA;    @String[com/taobao/arthas/core/shell/session/Session.class],&#xA;    @String[com/],&#xA;    @String[java/util/concurrent/ConcurrentHashMap$ValueIterator],&#xA;    @String[java/util/concurrent/locks/LockSupport],&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;stack&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/stack&#34;&gt;https://arthas.aliyun.com/doc/en/stack&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;View the call stack of &lt;code&gt;test.arthas.TestStack#doGet&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ stack test.arthas.TestStack doGet&#xA;Press Ctrl+C to abort.&#xA;Affect(class-cnt:1 , method-cnt:1) cost in 286 ms.&#xA;ts=2018-09-18 10:11:45;thread_name=http-bio-8080-exec-10;id=d9;is_daemon=true;priority=5;TCCL=org.apache.catalina.loader.ParallelWebappClassLoader@25131501&#xA;    @test.arthas.TestStack.doGet()&#xA;        at javax.servlet.http.HttpServlet.service(HttpServlet.java:624)&#xA;        at javax.servlet.http.HttpServlet.service(HttpServlet.java:731)&#xA;        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)&#xA;        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)&#xA;        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)&#xA;        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)&#xA;        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)&#xA;        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)&#xA;        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)&#xA;        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:220)&#xA;        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110)&#xA;        ...&#xA;        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)&#xA;        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)&#xA;        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)&#xA;        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:451)&#xA;        at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1121)&#xA;        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637)&#xA;        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)&#xA;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)&#xA;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)&#xA;        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)&#xA;        at java.lang.Thread.run(Thread.java:745)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Trace&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/trace&#34;&gt;https://arthas.aliyun.com/doc/en/trace&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See what is slowing down your method invocation with trace command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/site/src/site/sphinx/_static/trace.png&#34; alt=&#34;trace&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Watch&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/watch&#34;&gt;https://arthas.aliyun.com/doc/en/watch&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Watch the first parameter and thrown exception of &lt;code&gt;test.arthas.TestWatch#doGet&lt;/code&gt; only if it throws exception.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ watch test.arthas.TestWatch doGet {params[0], throwExp} -e&#xA;Press Ctrl+C to abort.&#xA;Affect(class-cnt:1 , method-cnt:1) cost in 65 ms.&#xA;ts=2018-09-18 10:26:28;result=@ArrayList[&#xA;    @RequestFacade[org.apache.catalina.connector.RequestFacade@79f922b2],&#xA;    @NullPointerException[java.lang.NullPointerException],&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Monitor&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/monitor&#34;&gt;https://arthas.aliyun.com/doc/en/monitor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Monitor a specific method invocation statistics, including the total number of invocations, average response time, success rate, and every 5 seconds:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ monitor -c 5 org.apache.dubbo.demo.provider.DemoServiceImpl sayHello&#xA;Press Ctrl+C to abort.&#xA;Affect(class-cnt:1 , method-cnt:1) cost in 109 ms.&#xA; timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate&#xA;----------------------------------------------------------------------------------------------------------------------------&#xA; 2018-09-20 09:45:32  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.67        0.00%&#xA;&#xA; timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate&#xA;----------------------------------------------------------------------------------------------------------------------------&#xA; 2018-09-20 09:45:37  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     1.00        0.00%&#xA;&#xA; timestamp            class                                           method    total  success  fail  avg-rt(ms)  fail-rate&#xA;----------------------------------------------------------------------------------------------------------------------------&#xA; 2018-09-20 09:45:42  org.apache.dubbo.demo.provider.DemoServiceImpl  sayHello  5      5        0     0.43        0.00%&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Time Tunnel(tt)&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/tt&#34;&gt;https://arthas.aliyun.com/doc/en/tt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Record method invocation data, so that you can check the method invocation parameters, returned value, and thrown exceptions later. It works as if you could come back and replay the past method invocation via time tunnel.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ tt -t org.apache.dubbo.demo.provider.DemoServiceImpl sayHello&#xA;Press Ctrl+C to abort.&#xA;Affect(class-cnt:1 , method-cnt:1) cost in 75 ms.&#xA; INDEX   TIMESTAMP            COST(ms)  IS-RET  IS-EXP   OBJECT         CLASS                          METHOD&#xA;-------------------------------------------------------------------------------------------------------------------------------------&#xA; 1000    2018-09-20 09:54:10  1.971195  true    false    0x55965cca     DemoServiceImpl                sayHello&#xA; 1001    2018-09-20 09:54:11  0.215685  true    false    0x55965cca     DemoServiceImpl                sayHello&#xA; 1002    2018-09-20 09:54:12  0.236303  true    false    0x55965cca     DemoServiceImpl                sayHello&#xA; 1003    2018-09-20 09:54:13  0.159598  true    false    0x55965cca     DemoServiceImpl                sayHello&#xA; 1004    2018-09-20 09:54:14  0.201982  true    false    0x55965cca     DemoServiceImpl                sayHello&#xA; 1005    2018-09-20 09:54:15  0.214205  true    false    0x55965cca     DemoServiceImpl                sayHello&#xA; 1006    2018-09-20 09:54:16  0.241863  true    false    0x55965cca     DemoServiceImpl                sayHello&#xA; 1007    2018-09-20 09:54:17  0.305747  true    false    0x55965cca     DemoServiceImpl                sayHello&#xA; 1008    2018-09-20 09:54:18  0.18468   true    false    0x55965cca     DemoServiceImpl                sayHello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Classloader&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/classloader&#34;&gt;https://arthas.aliyun.com/doc/en/classloader&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ classloader&#xA; name                                                  numberOfInstances  loadedCountTotal&#xA; BootstrapClassLoader                                  1                  3346&#xA; com.taobao.arthas.agent.ArthasClassloader             1                  1262&#xA; java.net.URLClassLoader                               2                  1033&#xA; org.apache.catalina.loader.ParallelWebappClassLoader  1                  628&#xA; sun.reflect.DelegatingClassLoader                     166                166&#xA; sun.misc.Launcher$AppClassLoader                      1                  31&#xA; com.alibaba.fastjson.util.ASMClassLoader              6                  15&#xA; sun.misc.Launcher$ExtClassLoader                      1                  7&#xA; org.jvnet.hk2.internal.DelegatingClassLoader          2                  2&#xA; sun.reflect.misc.MethodUtil                           1                  1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Web Console&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/web-console&#34;&gt;https://arthas.aliyun.com/doc/en/web-console&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/site/src/site/sphinx/_static/web-console-local.png&#34; alt=&#34;web console&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Profiler/FlameGraph&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/en/profiler&#34;&gt;https://arthas.aliyun.com/doc/en/profiler&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ profiler start&#xA;Started [cpu] profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ profiler stop&#xA;profiler output file: /tmp/demo/arthas-output/20211207-111550.html&#xA;OK&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View profiler results under arthas-output via browser:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/site/src/site/sphinx/_static/arthas-output-svg.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Arthas Spring Boot Starter&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arthas.aliyun.com/doc/spring-boot-starter.html&#34;&gt;Arthas Spring Boot Starter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Known Users&lt;/h3&gt; &#xA;&lt;p&gt;Arthas has more than 120 registered users, &lt;a href=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/USERS.md&#34;&gt;View All&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Welcome to register the company name in this issue: &lt;a href=&#34;https://github.com/alibaba/arthas/issues/111&#34;&gt;https://github.com/alibaba/arthas/issues/111&lt;/a&gt; (in order of registration)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/alibaba.png&#34; alt=&#34;Alibaba&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/alipay.png&#34; alt=&#34;Alipay&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/aliyun.png&#34; alt=&#34;Aliyun&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/taobao.png&#34; alt=&#34;Taobao&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/icbc.png&#34; alt=&#34;ICBC&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/xueqiu.png&#34; alt=&#34;雪球财经&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/sf.png&#34; alt=&#34;顺丰科技&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/ke.png&#34; alt=&#34;贝壳找房&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/vipkid.png&#34; alt=&#34;vipkid&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/baidufengchao.png&#34; alt=&#34;百度凤巢&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/youzan.png&#34; alt=&#34;有赞&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/iflytek.png&#34; alt=&#34;科大讯飞&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/alibaba/arthas/master/static/zhaopin.png&#34; alt=&#34;智联招聘&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Derivative Projects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qunarcorp/bistoury&#34;&gt;Bistoury: A project that integrates Arthas&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/XhinLiang/arthas&#34;&gt;A fork of arthas using MVEL&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Credits&lt;/h3&gt; &#xA;&lt;h4&gt;Contributors&lt;/h4&gt; &#xA;&lt;p&gt;This project exists, thanks to all the people who contributed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/alibaba/arthas/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/arthas/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Projects&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/bytekit&#34;&gt;bytekit&lt;/a&gt; Java Bytecode Kit.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/oldmanpushcart/greys-anatomy&#34;&gt;greys-anatomy&lt;/a&gt;: The Arthas code base has derived from Greys, we thank for the excellent work done by Greys.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/termd&#34;&gt;termd&lt;/a&gt;: Arthas&#39;s terminal implementation is based on termd, an open source library for writing terminal applications in Java.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/crashub/crash&#34;&gt;crash&lt;/a&gt;: Arthas&#39;s text based user interface rendering is based on codes extracted from &lt;a href=&#34;https://github.com/crashub/crash/tree/1.3.2/shell&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/cli&#34;&gt;cli&lt;/a&gt;: Arthas&#39;s command line interface implementation is based on cli, open sourced by vert.x&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skalogs/SkaETL/tree/master/compiler&#34;&gt;compiler&lt;/a&gt; Arthas&#39;s memory compiler.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://commons.apache.org/proper/commons-net/&#34;&gt;Apache Commons Net&lt;/a&gt; Arthas&#39;s telnet client.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jvm-profiling-tools/async-profiler&#34;&gt;async-profiler&lt;/a&gt; Arthas&#39;s profiler command.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>