<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-01T01:31:47Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>AutoMQ/automq</title>
    <updated>2024-05-01T01:31:47Z</updated>
    <id>tag:github.com,2024-05-01:/AutoMQ/automq</id>
    <link href="https://github.com/AutoMQ/automq" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AutoMQ is a cloud-native fork of Kafka by separating storage to S3. 10x cost-effective. Autoscale in seconds. Single-digit ms latency.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; AutoMQ: A Cloud-Native fork of Kafka by separating storage to S3 &lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; &lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/AutoMQ/automq-for-kafka&#34; alt=&#34;GitHub release (with filter)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr/AutoMQ/automq-for-kafka&#34; alt=&#34;GitHub pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-pr-closed/AutoMQ/automq-for-kafka&#34; alt=&#34;GitHub closed pull requests&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Java%20-%20JDK17-green&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.automq.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Official%20Website-20B2AA&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/YUzOwI7AgiNIgDk1GJAcu6Uanog&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Document-blue&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/AutoMQ/automq/main/%5Bhttps://www.automq.com%5D(https://www.automq.com/blog/automq-vs-apache-kafka-a-real-aws-cloud-bill-comparison)&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/AutoMQ%20vs.%20Kafka(Cost)-yellow&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/AutoMQ/automq/main/%5Bhttps://www.automq.com%5D(https://docs.automq.com/docs/automq-s3kafka/CYxlwqDBHitThCkxSl2cePxrnBc)&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/AutoMQ%20vs.%20Kafka(Performance)-orange&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://twitter.com/intent/follow?screen_name=AutoMQ_Lab&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/AutoMQ&#34; alt=&#34;Twitter URL&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://raw.githubusercontent.com/AutoMQ/automq/main/docs/images/automq-wechat.png&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/- Wechat -red?style=social&amp;amp;logo=discourse&#34; height=&#34;20&#34;&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/aws%20cloud-%E2%9C%85-lightgray?style=for-the-badge&amp;amp;logo=amazonaws&#34; height=&#34;18&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/google%20cloud-%F0%9F%9A%A7-lightyellow?style=for-the-badge&amp;amp;logo=googlecloud&#34; height=&#34;18&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Azure%20cloud-%F0%9F%9A%A7-lightyellow?style=for-the-badge&amp;amp;logo=microsoftazure&#34; height=&#34;18&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/aliyun%20cloud-%E2%9C%85-lightgray?style=for-the-badge&amp;amp;logo=alibabacloud&#34; height=&#34;18&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/huawei%20cloud-%E2%9C%85-lightgray?style=for-the-badge&amp;amp;logo=huawei&#34; height=&#34;18&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/baidu%20cloud-%E2%9C%85-lightgray?style=for-the-badge&amp;amp;logo=baidu&#34; height=&#34;18&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/tencent%20cloud-%E2%9C%85-lightgray?style=for-the-badge&amp;amp;logo=tencentqq&#34; height=&#34;18&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üçµ AutoMQ vs Other Streaming Platforms&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;AutoMQ&lt;/th&gt; &#xA;   &lt;th&gt;Apache Kafka&lt;/th&gt; &#xA;   &lt;th&gt;Confluent&lt;/th&gt; &#xA;   &lt;th&gt;Apache Pulsar&lt;/th&gt; &#xA;   &lt;th&gt;Redpanda&lt;/th&gt; &#xA;   &lt;th&gt;Warpstream&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Apache Kafka Compatibility[1]&lt;/td&gt; &#xA;   &lt;td&gt;Native Kafka&lt;/td&gt; &#xA;   &lt;td&gt;Native Kafka&lt;/td&gt; &#xA;   &lt;td&gt;Native Kafka&lt;/td&gt; &#xA;   &lt;td&gt;Non-Kafka&lt;/td&gt; &#xA;   &lt;td&gt;Kafka Protocol&lt;/td&gt; &#xA;   &lt;td&gt;Kafka Protocol&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Source Code Availability&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stateless Broker&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;P99 Latency&lt;/td&gt; &#xA;   &lt;td colspan=&#34;5&#34;&gt;Single-digit&lt;br&gt; ms latency&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.warpstream.com/blog/kafka-is-dead-long-live-kafka&#34;&gt;&amp;gt; 400ms&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Continuous Self-Balancing&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scale in/out&lt;/td&gt; &#xA;   &lt;td&gt;In seconds&lt;/td&gt; &#xA;   &lt;td&gt;In hours/days&lt;/td&gt; &#xA;   &lt;td&gt;In hours&lt;/td&gt; &#xA;   &lt;td&gt;In hours&lt;br&gt;(scale-in);&lt;br&gt; In seconds&lt;br&gt;(scale-out)&lt;/td&gt; &#xA;   &lt;td&gt;In hours/In seconds (Enterprise Only)&lt;/td&gt; &#xA;   &lt;td&gt;In seconds&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spot Instance Support&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Partition Reassignment&lt;/td&gt; &#xA;   &lt;td&gt;In seconds&lt;/td&gt; &#xA;   &lt;td&gt;In hours/days&lt;/td&gt; &#xA;   &lt;td&gt;In hours&lt;/td&gt; &#xA;   &lt;td&gt;In seconds&lt;/td&gt; &#xA;   &lt;td&gt;In hours/In seconds (Enterprise Only)&lt;/td&gt; &#xA;   &lt;td&gt;In seconds&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Component&lt;/td&gt; &#xA;   &lt;td&gt;Broker&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;Broker&lt;br&gt;Zookeeper&lt;br&gt;(Non-KRaft)&lt;/td&gt; &#xA;   &lt;td&gt;Broker&lt;br&gt;Zookeeper&lt;br&gt;Bookkeeper&lt;br&gt;Proxy(Optional)&lt;/td&gt; &#xA;   &lt;td&gt;Broker&lt;/td&gt; &#xA;   &lt;td&gt;Agent&lt;br&gt;MetadataServer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Durability&lt;/td&gt; &#xA;   &lt;td&gt;Guaranteed by S3/EBS[2]&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;Guaranteed by ISR &lt;/td&gt; &#xA;   &lt;td&gt;Guaranteed by Bookkeeper&lt;/td&gt; &#xA;   &lt;td&gt;Guaranteed by Raft&lt;/td&gt; &#xA;   &lt;td&gt;Guaranteed by S3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Inter-AZ Networking Fees&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td colspan=&#34;4&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[1] Apache Kafka Compatibility&#39;s definition is coming from this &lt;a href=&#34;https://www.kai-waehner.de/blog/2021/05/09/kafka-api-de-facto-standard-event-streaming-like-amazon-s3-object-storage/&#34;&gt;blog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[2] EBS Durability: On Azure, GCP, and Alibaba Cloud, Regional EBS replicas span multiple AZs. On AWS, ensure durability by double writing to EBS and S3 Express One Zone in different AZs.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üî∂Why AutoMQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud Native&lt;/strong&gt;: Built on cloud service. Every system design decision takes the cloud service&#39;s feature and billing items into consideration to offer the best low-latency, scalable, reliable, and cost-effective Kafka service on the cloud.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High Reliability&lt;/strong&gt;: Leverage the features of cloud service to offer RPO of 0 and RTO in seconds. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;AWS: Use S3 express one zone and S3 to offer AZ-level disaster recovery.&lt;/li&gt; &#xA;   &lt;li&gt;GCP: Use regional SSD and cloud storage to offer AZ-level disaster recovery.&lt;/li&gt; &#xA;   &lt;li&gt;Azure: Use zone-redundant storage and blob storage to offer AZ-level disaster recovery.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Serverless&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Auto Scaling: Watch key metrics of cluster and scale in/out automatically to match your workload and achieve pay-as-you-go.&lt;/li&gt; &#xA;   &lt;li&gt;Scaling in seconds: The computing layer (broker) is stateless and can scale in/out in seconds, which makes AutoMQ truly serverless. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/Eo4Bweg4eiPegykLpAycED1yn7g&#34;&gt;Learn more&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Infinite scalable: Use the cloud&#39;s object storage as the main storage, never worry about storage capacity.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Manage-less&lt;/strong&gt;: Built-in auto-balancer component balance partition and network traffic across brokers automatically. Never worry about partition re-balance. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/GSN2wZjeWiR70YkZiRsc6Hqsneh&#34;&gt;Learn more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cost effective&lt;/strong&gt;: Leveraging object storage as the primary storage solution, incorporating billing considerations into the system design, and maximizing the use of cloud services collectively enable AutoMQ to be 10x more cost-effective than Apache Kafka. Refer to &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/EJBvwM3dNic6uYkZAWwc7nmrnae&#34;&gt;this report&lt;/a&gt; to see how we cut Apache Kafka billing by 90% on the cloud.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;High performance&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Low latency: Use cloud block storage like AWS EBS as the WAL(Write Ahead Log) to accelerate writing.&lt;/li&gt; &#xA;   &lt;li&gt;High throughput: Use pre-fetching, batch processing, and parallel to achieve high throughput.&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Refer to the &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/CYxlwqDBHitThCkxSl2cePxrnBc&#34;&gt;AutoMQ Performance White Paper&lt;/a&gt; to see how we achieve this.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;A superior alternative to Apache Kafka&lt;/strong&gt;: 100% compatible with Apache Kafka greater than 0.9.x and not lose any good features of it, but cheaper and better.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AutoMQ/automq/main/docs/images/automq-kafka-compare.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú®Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AutoMQ/automq/main/docs/images/automq-architecture.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;AutoMQ uses logSegment as a coding aspect of Apache Kafka to weave into our features. The architecture includes the following main components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;S3Stream&lt;/strong&gt;: A streaming library based on object storage offered by AutoMQ. It is the core component of AutoMQ and is responsible for reading and writing data to object storage. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/Q8fNwoCDGiBOV6k8CDSccKKRn9d&#34;&gt;Learn more&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stream&lt;/strong&gt;: Stream is an abstraction for mapping the logSegment of Apache Kafka. LogSegment&#39;s data, index, and other metadata will map to different types of streams. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/GUk7w0ZxniPwN7kUgiicIlHkn9d&#34;&gt;Learn more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;WAL&lt;/strong&gt;: AutoMQ uses a small-size cloud block storage like AWS EBS as the WAL(Write Ahead Log) to accelerate writing. Pay attention that this is not tiered storage and the AutoMQ broker can decoupled from the WAL completely. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/X1DBwDdzWiCMmYkglGHcKdjqn9f&#34;&gt;Learn more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stream set object&lt;/strong&gt;: A Stream Set Object aggregates data from multiple streams into individual segments, significantly cutting down on object storage API usage and metadata size. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/Q8fNwoCDGiBOV6k8CDSccKKRn9d&#34;&gt;Learn more&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stream Object&lt;/strong&gt;: A Stream Object contains data from a single stream, typically separated when compacting Stream Set Objects for streams with larger data volumes. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/Q8fNwoCDGiBOV6k8CDSccKKRn9d&#34;&gt;Learn more&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚õÑGet started with AutoMQ&lt;/h2&gt; &#xA;&lt;h3&gt;Quick Start With A Single Line&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://download.automq.com/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The easiest way to run AutoMQ. You can experience features like &lt;strong&gt;Partition Reassignment in Seconds&lt;/strong&gt; and &lt;strong&gt;Continuous Self-Balancing&lt;/strong&gt; in your local machine. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/SMKbwchB3i0Y0ykFm75c0ftAnCc&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Attention: Local mode mock object storage locally and is not a production-ready deployment. It is only for demo and test purposes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Run AutoMQ on the cloud manually&lt;/h3&gt; &#xA;&lt;p&gt;Deploy AutoMQ manually with released tgz files on the cloud, currently compatible with AWS, Aliyun Cloud, Tencent Cloud, Huawei Cloud, and Baidu Cloud. &lt;a href=&#34;https://docs.automq.com/docs/automq-s3kafka/NBo6wwth3iWUIkkNAbYcPg0mnae&#34;&gt;Learn more&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üí¨Community&lt;/h2&gt; &#xA;&lt;p&gt;You can join the following groups or channels to discuss or ask questions about AutoMQ:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ask questions or report a bug by &lt;a href=&#34;https://github.com/AutoMQ/automq-for-kafka&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discuss about AutoMQ or Kafka by &lt;a href=&#34;https://join.slack.com/t/automq/shared_invite/zt-29h17vye9-thf31ebIVL9oXuRdACnOIA&#34;&gt;Slack&lt;/a&gt; or &lt;a href=&#34;https://www.automq.com/img/----------------------------1.png&#34;&gt;Wechat Group&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üë•How to contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;ve found a problem with AutoMQ, please open a &lt;a href=&#34;https://github.com/AutoMQ/automq-for-kafka&#34;&gt;GitHub Issues&lt;/a&gt;. To contribute to AutoMQ please see &lt;a href=&#34;https://raw.githubusercontent.com/AutoMQ/automq/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/AutoMQ/automq/main/CONTRIBUTING_GUIDE.md&#34;&gt;Contributing Guide&lt;/a&gt;. We have a list of &lt;a href=&#34;https://github.com/AutoMQ/automq-for-kafka/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;good first issues&lt;/a&gt; that help you to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; &#xA;&lt;h2&gt;üåàRoadmap&lt;/h2&gt; &#xA;&lt;p&gt;Coming soon...&lt;/p&gt; &#xA;&lt;h2&gt;‚≠êLicense&lt;/h2&gt; &#xA;&lt;p&gt;AutoMQ is released under &lt;a href=&#34;https://raw.githubusercontent.com/AutoMQ/automq/main/BSL.md&#34;&gt;Business Source License 1.1&lt;/a&gt;. When contributing to AutoMQ, you can find the relevant license header in each file.&lt;/p&gt;</summary>
  </entry>
</feed>