<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-18T01:32:22Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>didi/KnowStreaming</title>
    <updated>2022-08-18T01:32:22Z</updated>
    <id>tag:github.com,2022-08-18:/didi/KnowStreaming</id>
    <link href="https://github.com/didi/KnowStreaming" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一站式Apache Kafka管控平台&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/71620349/183546097-71451983-d00e-4ad4-afb0-43fb597c69a9.png&#34; alt=&#34;KnowStreaing&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;一站式&lt;code&gt;Apache Kafka&lt;/code&gt;管控平台&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;LogiKM开源至今备受关注，考虑到开源项目应该更贴合Apache Kafka未来发展方向，经项目组慎重考虑，我们将其品牌升级成Know Streaming，新的大版本更新马上就绪，感谢大家一如既往的支持！也欢迎Kafka爱好者一起共建社区&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;阅读本README文档，您可以了解到滴滴Know Streaming的用户群体、产品定位等信息，并通过体验地址，快速体验Kafka集群指标监控与运维管控的全流程。&lt;/p&gt; &#xA;&lt;h2&gt;1 产品简介&lt;/h2&gt; &#xA;&lt;p&gt;滴滴Know Streaming脱胎于滴滴内部多年的Kafka运营实践经验，是面向Kafka用户、Kafka运维人员打造的共享多租户Kafka云平台。专注于Kafka运维管控、监控告警、资源治理等核心场景，经历过大规模集群、海量大数据的考验。内部满意度高达90%的同时，还与多家知名企业达成商业化合作。&lt;/p&gt; &#xA;&lt;h3&gt;1.1 快速体验地址&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;体验地址（新的体验地址马上就来） &lt;a href=&#34;http://117.51.150.133:8080&#34;&gt;http://117.51.150.133:8080&lt;/a&gt; 账号密码 admin/admin&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.2 体验地图&lt;/h3&gt; &#xA;&lt;p&gt;相比较于同类产品的用户视角单一（大多为管理员视角），滴滴Logi-KafkaManager建立了基于分角色、多场景视角的体验地图。分别是：&lt;strong&gt;用户体验地图、运维体验地图、运营体验地图&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;1.2.1 用户体验地图&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;平台租户申请&amp;nbsp;&amp;nbsp;：申请应用（App）作为Kafka中的用户名，并用 AppID+password作为身份验证&lt;/li&gt; &#xA; &lt;li&gt;集群资源申请&amp;nbsp;&amp;nbsp;：按需申请、按需使用。可使用平台提供的共享集群，也可为应用申请独立的集群&lt;/li&gt; &#xA; &lt;li&gt;Topic&amp;nbsp;&amp;nbsp;&amp;nbsp;申&amp;nbsp;&amp;nbsp;&amp;nbsp;请&amp;nbsp;&amp;nbsp;：可根据应用（App）创建Topic，或者申请其他topic的读写权限&lt;/li&gt; &#xA; &lt;li&gt;Topic&amp;nbsp;&amp;nbsp;&amp;nbsp;运&amp;nbsp;&amp;nbsp;&amp;nbsp;维&amp;nbsp;&amp;nbsp;：Topic数据采样、调整配额、申请分区等操作&lt;/li&gt; &#xA; &lt;li&gt;指&amp;nbsp;&amp;nbsp;&amp;nbsp;标&amp;nbsp;&amp;nbsp;监&amp;nbsp;&amp;nbsp;&amp;nbsp;控&amp;nbsp;&amp;nbsp;：基于Topic生产消费各环节耗时统计，监控不同分位数性能指标&lt;/li&gt; &#xA; &lt;li&gt;消&amp;nbsp;费&amp;nbsp;组&amp;nbsp;运&amp;nbsp;维&amp;nbsp;：支持将消费偏移重置至指定时间或指定位置&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.2.2 运维体验地图&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多版本集群管控&amp;nbsp;&amp;nbsp;：支持从&lt;code&gt;0.10.2&lt;/code&gt;到&lt;code&gt;2.x&lt;/code&gt;版本&lt;/li&gt; &#xA; &lt;li&gt;集&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;群&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;监&amp;nbsp;&amp;nbsp;&amp;nbsp;控&amp;nbsp;&amp;nbsp;：集群Topic、Broker等多维度历史与实时关键指标查看，建立健康分体系&lt;/li&gt; &#xA; &lt;li&gt;集&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;群&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;运&amp;nbsp;&amp;nbsp;&amp;nbsp;维&amp;nbsp;&amp;nbsp;：划分部分Broker作为Region，使用Region定义资源划分单位，并按照业务、保障能力区分逻辑集群&lt;/li&gt; &#xA; &lt;li&gt;Broker&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;运&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;维&amp;nbsp;&amp;nbsp;：包括优先副本选举等操作&lt;/li&gt; &#xA; &lt;li&gt;Topic&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;运&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;维&amp;nbsp;&amp;nbsp;：包括创建、查询、扩容、修改属性、迁移、下线等&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;1.2.3 运营体验地图&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;资&amp;nbsp;&amp;nbsp;源&amp;nbsp;&amp;nbsp;治&amp;nbsp;&amp;nbsp;理&amp;nbsp;&amp;nbsp;：沉淀资源治理方法。针对Topic分区热点、分区不足等高频常见问题，沉淀资源治理方法，实现资源治理专家化&lt;/li&gt; &#xA; &lt;li&gt;资&amp;nbsp;&amp;nbsp;源&amp;nbsp;&amp;nbsp;审&amp;nbsp;&amp;nbsp;批&amp;nbsp;&amp;nbsp;：工单体系。Topic创建、调整配额、申请分区等操作，由专业运维人员审批，规范资源使用，保障平台平稳运行&lt;/li&gt; &#xA; &lt;li&gt;账&amp;nbsp;&amp;nbsp;单&amp;nbsp;&amp;nbsp;体&amp;nbsp;&amp;nbsp;系&amp;nbsp;&amp;nbsp;：成本控制。Topic资源、集群资源按需申请、按需使用。根据流量核算费用，帮助企业建设大数据成本核算体系&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.3 核心优势&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;高&amp;nbsp;效&amp;nbsp;的&amp;nbsp;问&amp;nbsp;题&amp;nbsp;定&amp;nbsp;位&amp;nbsp;&amp;nbsp;：监控多项核心指标，统计不同分位数据，提供种类丰富的指标监控报表，帮助用户、运维人员快速高效定位问题&lt;/li&gt; &#xA; &lt;li&gt;便&amp;nbsp;捷&amp;nbsp;的&amp;nbsp;集&amp;nbsp;群&amp;nbsp;运&amp;nbsp;维&amp;nbsp;&amp;nbsp;：按照Region定义集群资源划分单位，将逻辑集群根据保障等级划分。在方便资源隔离、提高扩展能力的同时，实现对服务端的强管控&lt;/li&gt; &#xA; &lt;li&gt;专&amp;nbsp;业&amp;nbsp;的&amp;nbsp;资&amp;nbsp;源&amp;nbsp;治&amp;nbsp;理&amp;nbsp;&amp;nbsp;：基于滴滴内部多年运营实践，沉淀资源治理方法，建立健康分体系。针对Topic分区热点、分区不足等高频常见问题，实现资源治理专家化&lt;/li&gt; &#xA; &lt;li&gt;友&amp;nbsp;好&amp;nbsp;的&amp;nbsp;运&amp;nbsp;维&amp;nbsp;生&amp;nbsp;态&amp;nbsp;&amp;nbsp;：与Prometheus、Grafana、滴滴夜莺监控告警系统打通，集成指标分析、监控告警、集群部署、集群升级等能力。形成运维生态，凝练专家服务，使运维更高效&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;1.4 滴滴Logi-KafkaManager架构图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img-ys011.didistatic.com/static/dicloudpub/do1_xgDHNDLj2ChKxctSuf72&#34; alt=&#34;kafka-manager-arch&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;2 相关文档&lt;/h2&gt; &#xA;&lt;h3&gt;2.1 产品文档&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/didi/KnowStreaming/master/docs/install_guide/install_guide_cn.md&#34;&gt;滴滴Know Streaming 安装手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/didi/KnowStreaming/master/docs/user_guide/add_cluster/add_cluster.md&#34;&gt;滴滴Know Streaming 接入集群&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/didi/KnowStreaming/master/docs/user_guide/user_guide_cn.md&#34;&gt;滴滴Know Streaming 用户使用手册&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/didi/KnowStreaming/master/docs/user_guide/faq.md&#34;&gt;滴滴Know Streaming FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2.2 社区文章&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.didiyun.com/production/logi-KafkaManager.html&#34;&gt;滴滴云官网产品介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/-KQp-Qo3WKEOc9wIR2iFnw&#34;&gt;7年沉淀之作--滴滴Logi日志服务套件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/9qSZIkqCnU6u9nLMvOOjIQ&#34;&gt;滴滴Know Streaming 一站式Kafka管控平台&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://xie.infoq.cn/article/0223091a99e697412073c0d64&#34;&gt;滴滴Know Streaming 开源之路&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/442531657/channel/seriesdetail?sid=571649&#34;&gt;滴滴Know Streaming 系列视频教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.szzdzhp.com/kafka/&#34;&gt;kafka最强最全知识图谱&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.szzdzhp.com/categories/LogIKM/&#34;&gt;滴滴Know Streaming新用户入门系列文章专栏 --石臻臻&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/yezonggang/article/details/113106244&#34;&gt;kafka实践（十五）：滴滴开源Kafka管控平台 Know Streaming研究--A叶子叶来&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.rainbond.com/docs/opensource-app/logikm/?channel=logikm&#34;&gt;基于云原生应用管理平台Rainbond安装 滴滴Know Streaming&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;3 Know Streaming开源用户交流群&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5287750/111266722-e531d800-8665-11eb-9242-3484da5a3099.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;想跟各个大佬交流Kafka Es 等中间件/大数据相关技术请 加微信进群。&lt;/p&gt; &#xA;&lt;p&gt;微信加群：添加&lt;font color=&#34;red&#34;&gt;mike_zhangliang&lt;/font&gt;、&lt;font color=&#34;red&#34;&gt;PenceXie&lt;/font&gt;的微信号备注Know Streaming加群或关注公众号 云原生可观测性 回复 &#34;Know Streaming加群&#34;&lt;/p&gt; &#xA;&lt;h2&gt;4 知识星球&lt;/h2&gt; &#xA;&lt;img width=&#34;447&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/71620349/147314042-843a371a-48c0-4d9a-a65e-ca40236f3300.png&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;center&gt;&#xA;  ✅我们正在组建国内最大最权威的 &#xA;&lt;/center&gt; &#xA;&lt;br&gt; &#xA;&lt;center&gt; &#xA; &lt;font color=&#34;red&#34; size=&#34;5&#34;&gt;&lt;b&gt;【Kafka中文社区】&lt;/b&gt;&lt;/font&gt; &#xA;&lt;/center&gt; &#xA;&lt;p&gt;在这里你可以结交各大互联网Kafka大佬以及3000+Kafka爱好者，一起实现知识共享，实时掌控最新行业资讯，期待您的加入中～&lt;a href=&#34;https://z.didi.cn/5gSF9&#34;&gt;https://z.didi.cn/5gSF9&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;font color=&#34;red&#34; size=&#34;5&#34;&gt;有问必答~！ &lt;/font&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;font color=&#34;red&#34; size=&#34;5&#34;&gt;互动有礼~！ &lt;/font&gt;&lt;/p&gt; &#xA;&lt;p&gt;PS:提问请尽量把问题一次性描述清楚，并告知环境信息情况哦～！如使用版本、操作步骤、报错/警告信息等，方便大V们快速解答～&lt;/p&gt; &#xA;&lt;h2&gt;5 项目成员&lt;/h2&gt; &#xA;&lt;h3&gt;5.1 内部核心人员&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;iceyuhui&lt;/code&gt;、&lt;code&gt;liuyaguang&lt;/code&gt;、&lt;code&gt;limengmonty&lt;/code&gt;、&lt;code&gt;zhangliangmike&lt;/code&gt;、&lt;code&gt;zhaoqingrong&lt;/code&gt;、&lt;code&gt;xiepeng&lt;/code&gt;、&lt;code&gt;nullhuangyiming&lt;/code&gt;、&lt;code&gt;zengqiao&lt;/code&gt;、&lt;code&gt;eilenexuzhe&lt;/code&gt;、&lt;code&gt;huangjiaweihjw&lt;/code&gt;、&lt;code&gt;zhaoyinrui&lt;/code&gt;、&lt;code&gt;marzkonglingxu&lt;/code&gt;、&lt;code&gt;joysunchao&lt;/code&gt;、&lt;code&gt;石臻臻&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5.2 外部贡献者&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;fangjunyu&lt;/code&gt;、&lt;code&gt;zhoutaiyang&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;6 协议&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Know Streaming&lt;/code&gt;基于&lt;code&gt;Apache-2.0&lt;/code&gt;协议进行分发和使用，更多信息参见&lt;a href=&#34;https://raw.githubusercontent.com/didi/KnowStreaming/master/LICENSE&#34;&gt;协议文件&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;7 Star History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#didi/KnowStreaming&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=didi/KnowStreaming&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/incubator-seatunnel</title>
    <updated>2022-08-18T01:32:22Z</updated>
    <id>tag:github.com,2022-08-18:/apache/incubator-seatunnel</id>
    <link href="https://github.com/apache/incubator-seatunnel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SeaTunnel is a distributed, high-performance data integration platform for the synchronization and transformation of massive data (offline &amp; real-time).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache SeaTunnel (Incubating)&lt;/h1&gt; &#xA;&lt;img src=&#34;https://seatunnel.apache.org/image/logo.png&#34; alt=&#34;seatunnel logo&#34; height=&#34;200px&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/incubator-seatunnel/actions/workflows/backend.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/incubator-seatunnel/actions/workflows/backend.yml/badge.svg?branch=dev&#34; alt=&#34;Backend Workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/apacheseatunnel/shared_invite/zt-123jmewxe-RjB_DW3M3gV~xL91pZ0oVQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-%23seatunnel-4f8eba?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ASFSeaTunnel&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ASFSeaTunnel.svg?label=Follow&amp;amp;logo=twitter&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel/dev/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/document-English-blue.svg?sanitize=true&#34; alt=&#34;EN doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel/dev/README_zh_CN.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E6%96%87%E6%A1%A3-%E4%B8%AD%E6%96%87%E7%89%88-blue.svg?sanitize=true&#34; alt=&#34;CN doc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SeaTunnel was formerly named Waterdrop , and renamed SeaTunnel since October 12, 2021.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;SeaTunnel is a very easy-to-use ultra-high-performance distributed data integration platform that supports real-time synchronization of massive data. It can synchronize tens of billions of data stably and efficiently every day, and has been used in the production of nearly 100 companies.&lt;/p&gt; &#xA;&lt;h2&gt;Why do we need SeaTunnel&lt;/h2&gt; &#xA;&lt;p&gt;SeaTunnel will do its best to solve the problems that may be encountered in the synchronization of massive data:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data loss and duplication&lt;/li&gt; &#xA; &lt;li&gt;Task accumulation and delay&lt;/li&gt; &#xA; &lt;li&gt;Low throughput&lt;/li&gt; &#xA; &lt;li&gt;Long cycle to be applied in the production environment&lt;/li&gt; &#xA; &lt;li&gt;Lack of application running status monitoring&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SeaTunnel use scenarios&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mass data synchronization&lt;/li&gt; &#xA; &lt;li&gt;Mass data integration&lt;/li&gt; &#xA; &lt;li&gt;ETL with massive data&lt;/li&gt; &#xA; &lt;li&gt;Mass data aggregation&lt;/li&gt; &#xA; &lt;li&gt;Multi-source data processing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features of SeaTunnel&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to use, flexible configuration, low code development&lt;/li&gt; &#xA; &lt;li&gt;Real-time streaming&lt;/li&gt; &#xA; &lt;li&gt;Offline multi-source data analysis&lt;/li&gt; &#xA; &lt;li&gt;High-performance, massive data processing capabilities&lt;/li&gt; &#xA; &lt;li&gt;Modular and plug-in mechanism, easy to extend&lt;/li&gt; &#xA; &lt;li&gt;Support data processing and aggregation by SQL&lt;/li&gt; &#xA; &lt;li&gt;Support Spark structured streaming&lt;/li&gt; &#xA; &lt;li&gt;Support Spark 2.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Workflow of SeaTunnel&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel-website/main/static/image/seatunnel-workflow.svg?sanitize=true&#34; alt=&#34;seatunnel-workflow.svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Source[Data Source Input] -&amp;gt; Transform[Data Processing] -&amp;gt; Sink[Result Output]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The data processing pipeline is constituted by multiple filters to meet a variety of data processing needs. If you are accustomed to SQL, you can also directly construct a data processing pipeline by SQL, which is simple and efficient. Currently, the filter list supported by SeaTunnel is still being expanded. Furthermore, you can develop your own data processing plug-in, because the whole system is easy to expand.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins supported by SeaTunnel&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Connectors supported &lt;a href=&#34;https://seatunnel.apache.org/docs/category/source&#34;&gt;check out&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Transform supported &lt;a href=&#34;https://seatunnel.apache.org/docs/transform/common-options/&#34;&gt;check out&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Environmental dependency&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;java runtime environment, java &amp;gt;= 8&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to run SeaTunnel in a cluster environment, any of the following Spark cluster environments is usable:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spark on Yarn&lt;/li&gt; &#xA; &lt;li&gt;Spark Standalone&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the data volume is small, or the goal is merely for functional verification, you can also start in local mode without a cluster environment, because SeaTunnel supports standalone operation. Note: SeaTunnel 2.0 supports running on Spark and Flink.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling project&lt;/h2&gt; &#xA;&lt;p&gt;Follow this &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel/dev/docs/en/contribution/setup.md&#34;&gt;document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;Download address for run-directly software package : &lt;a href=&#34;https://seatunnel.apache.org/download&#34;&gt;https://seatunnel.apache.org/download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Spark&lt;/strong&gt; &lt;a href=&#34;https://seatunnel.apache.org/docs/deployment&#34;&gt;https://seatunnel.apache.org/docs/deployment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Flink&lt;/strong&gt; &lt;a href=&#34;https://seatunnel.apache.org/docs/deployment&#34;&gt;https://seatunnel.apache.org/docs/deployment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Detailed documentation on SeaTunnel &lt;a href=&#34;https://seatunnel.apache.org/docs/intro/about&#34;&gt;https://seatunnel.apache.org/docs/intro/about&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Application practice cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Weibo, Value-added Business Department Data Platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Weibo business uses an internal customized version of SeaTunnel and its sub-project Guardian for SeaTunnel On Yarn task monitoring for hundreds of real-time streaming computing tasks.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sina, Big Data Operation Analysis Platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sina Data Operation Analysis Platform uses SeaTunnel to perform real-time and offline analysis of data operation and maintenance for Sina News, CDN and other services, and write it into Clickhouse.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sogou, Sogou Qiqian System&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sogou Qiqian System takes SeaTunnel as an ETL tool to help establish a real-time data warehouse system.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Qutoutiao, Qutoutiao Data Center&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Qutoutiao Data Center uses SeaTunnel to support mysql to hive offline ETL tasks, real-time hive to clickhouse backfill technical support, and well covers most offline and real-time tasks needs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Yixia Technology, Yizhibo Data Platform&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Yonghui Superstores Founders&#39; Alliance-Yonghui Yunchuang Technology, Member E-commerce Data Analysis Platform&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SeaTunnel provides real-time streaming and offline SQL computing of e-commerce user behavior data for Yonghui Life, a new retail brand of Yonghui Yunchuang Technology.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shuidichou, Data Platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Shuidichou adopts SeaTunnel to do real-time streaming and regular offline batch processing on Yarn, processing 3~4T data volume average daily, and later writing the data to Clickhouse.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tencent Cloud&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Collecting various logs from business services into Apache Kafka, some of the data in Apache Kafka is consumed and extracted through Seatunnel, and then store into Clickhouse.&lt;/p&gt; &#xA;&lt;p&gt;For more use cases, please refer to: &lt;a href=&#34;https://seatunnel.apache.org/blog&#34;&gt;https://seatunnel.apache.org/blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project adheres to the Contributor Covenant &lt;a href=&#34;https://www.apache.org/foundation/policies/conduct&#34;&gt;code of conduct&lt;/a&gt;. By participating, you are expected to uphold this code. Please follow the &lt;a href=&#34;https://www.apache.org/foundation/policies/conduct#reporting-guidelines&#34;&gt;REPORTING GUIDELINES&lt;/a&gt; to report unacceptable behavior.&lt;/p&gt; &#xA;&lt;h2&gt;Developer&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/apache/incubator-seatunnel/graphs/contributors&#34;&gt;all developers&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/apache/incubator-seatunnel/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=apache/incubator-seatunnel&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mail list: &lt;strong&gt;&lt;a href=&#34;mailto:dev@seatunnel.apache.org&#34;&gt;dev@seatunnel.apache.org&lt;/a&gt;&lt;/strong&gt;. Mail to &lt;code&gt;dev-subscribe@seatunnel.apache.org&lt;/code&gt;, follow the reply to subscribe the mail list.&lt;/li&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://join.slack.com/t/apacheseatunnel/shared_invite/zt-123jmewxe-RjB_DW3M3gV~xL91pZ0oVQ&#34;&gt;https://join.slack.com/t/apacheseatunnel/shared_invite/zt-123jmewxe-RjB_DW3M3gV~xL91pZ0oVQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/ASFSeaTunnel&#34;&gt;https://twitter.com/ASFSeaTunnel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/1542095008&#34;&gt;Bilibili&lt;/a&gt; (for Chinese users)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Landscapes&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://landscape.cncf.io/images/left-logo.svg?sanitize=true&#34; width=&#34;150&#34; alt=&#34;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://landscape.cncf.io/images/right-logo.svg?sanitize=true&#34; width=&#34;200&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;br&gt; SeaTunnel enriches the &lt;a href=&#34;https://landscape.cncf.io/?landscape=observability-and-analysis&amp;amp;license=apache-license-2-0&#34;&gt;CNCF CLOUD NATIVE Landscape.&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Our Users&lt;/h2&gt; &#xA;&lt;p&gt;Various companies and organizations use SeaTunnel for research, production and commercial products. Visit our &lt;a href=&#34;https://seatunnel.apache.org/user&#34;&gt;website&lt;/a&gt; to find the user page.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel/dev/LICENSE&#34;&gt;Apache 2.0 License.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AzureAD/microsoft-authentication-library-for-android</title>
    <updated>2022-08-18T01:32:22Z</updated>
    <id>tag:github.com,2022-08-18:/AzureAD/microsoft-authentication-library-for-android</id>
    <link href="https://github.com/AzureAD/microsoft-authentication-library-for-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Microsoft Authentication Library (MSAL) for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft Authentication Library (MSAL) for Android&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/quickstart-v2-android&#34;&gt;Getting Started&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki/MSAL-Code-Samples&#34;&gt;Sample Code&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;http://javadoc.io/doc/com.microsoft.identity.client/msal&#34;&gt;Library Reference&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AzureAD/microsoft-authentication-library-for-android/dev/README.md#community-help-and-support&#34;&gt;Support&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki&#34;&gt;Overview&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://forms.office.com/r/3J8pAAqAcj&#34;&gt;Feedback&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The MSAL library for Android gives your app the ability to use the &lt;a href=&#34;https://cloud.microsoft.com&#34;&gt;Microsoft Cloud&lt;/a&gt; by supporting &lt;a href=&#34;https://azure.microsoft.com/services/active-directory/&#34;&gt;Microsoft Azure Active Directory&lt;/a&gt; and &lt;a href=&#34;https://account.microsoft.com&#34;&gt;Microsoft accounts&lt;/a&gt; in a converged experience using industry standard OAuth2 and OpenID Connect. The library also supports &lt;a href=&#34;https://azure.microsoft.com/services/active-directory-b2c/&#34;&gt;Azure AD B2C&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repo1.maven.org/maven2/com/microsoft/identity/client/msal/&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.microsoft.identity.client/msal.svg?sanitize=true&#34; alt=&#34;Version Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;h3&gt;What&#39;s new?&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Looking for developers interested in providing early feedback on a x-platform implementation of MSAL written in C++ and Java, callable from Java, Kotlin and C++. If you&#39;re interested please please contact &lt;a href=&#34;mailto:shoatman@microsoft.com&#34;&gt;shoatman@microsoft.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;06/25/2021&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Silent requests were inadvertently serialized in MSAL v2.0.10-v2.0.12, Common v3.2.0-v3.4.3. This will be fixed in an upcoming release, tentatively scheduled for next week.&lt;/li&gt; &#xA; &lt;li&gt;In the meantime, please &lt;em&gt;do not use&lt;/em&gt; the mentioned library versions, and &lt;em&gt;strongly&lt;/em&gt; consider moving to 2.0.8. Details for the issue can be found &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-common-for-android/issues/1438&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;11/09/2020&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android changes for SDK30, see &lt;a href=&#34;https://android-developers.googleblog.com/2020/07/preparing-your-build-for-package-visibility-in-android-11.html&#34;&gt;the android developers notice&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;09/04/2020&lt;/strong&gt;&lt;/em&gt; New updates with &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/releases/tag/v2.0.0&#34;&gt;MSAL 2.0.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add Device Code Flow Support (#1112)&lt;/li&gt; &#xA; &lt;li&gt;Introduces new AadAuthorityAudience enum to support new syntax for specifying cloud + audience&lt;/li&gt; &#xA; &lt;li&gt;Broker Content Provider Changes&lt;/li&gt; &#xA; &lt;li&gt;FOCI support for Local MSAL&lt;/li&gt; &#xA; &lt;li&gt;Added new Single Account Public Client Application API overloads&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;02/12/2020&lt;/strong&gt;&lt;/em&gt; New updates with &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/releases/tag/v1.3.0&#34;&gt;MSAL 1.3.0&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;WebView zoom controls are now configurable&lt;/li&gt; &#xA; &lt;li&gt;Bugs/issues fixed: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Incorrect id_token returned for B2C app with multiple policies&lt;/li&gt; &#xA;   &lt;li&gt;WebView calls loadUrl multiple times over lifecycle&lt;/li&gt; &#xA;   &lt;li&gt;WebView displays error when connectivity lost&lt;/li&gt; &#xA;   &lt;li&gt;AT caching logic change for scope intersection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;09/30/2019&lt;/strong&gt;&lt;/em&gt; MSAL Android is now generally available with &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/releases/tag/v1.0.0&#34;&gt;MSAL 1.0&lt;/a&gt;!:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supported Authorities &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Microsoft &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/&#34;&gt;identity platform&lt;/a&gt; (also known as the Azure Active Directory v2 Endpoint)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/active-directory-b2c/&#34;&gt;Azure Active Directory B2C&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/msal-android-b2c&#34;&gt;Integrate with B2C&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Microsoft &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/brokered-auth&#34;&gt;authentication broker&lt;/a&gt; support &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supports enterprise scenarios including: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Device Registration&lt;/li&gt; &#xA;     &lt;li&gt;Device Management&lt;/li&gt; &#xA;     &lt;li&gt;Intune App Protection&lt;/li&gt; &#xA;     &lt;li&gt;Device Single Sign On&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Introduction of &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/single-multi-account&#34;&gt;Single and Multi Account&lt;/a&gt; Public Client Applications&lt;/li&gt; &#xA; &lt;li&gt;IAccount and access to claims. For more info see &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/accounts-overview&#34;&gt;Accounts and tenant profiles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enable Single Sign-On with different &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/authorization-agents&#34;&gt;authorization agents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Support for synchronous methods from worker threads&lt;/li&gt; &#xA; &lt;li&gt;Improved &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/msal-configuration&#34;&gt;configuration&lt;/a&gt; and control of your PublicClientApplication using configuration file&lt;/li&gt; &#xA; &lt;li&gt;AndroidX Compatible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Migrating from ADAL&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/migrate-android-adal-msal&#34;&gt;ADAL to MSAL migration guide for Android&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sample&lt;/h3&gt; &#xA;&lt;p&gt;Run the &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/quickstart-v2-android&#34;&gt;quickstart&lt;/a&gt; to see how our Java sample works, or checkout this &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki/MSAL-Code-Samples&#34;&gt;list of all MSAL sample repos&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Using MSAL&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Before you can get a token from Azure AD v2.0 or Azure AD B2C, you&#39;ll need to register an application. To register your app, use &lt;a href=&#34;https://aka.ms/AppRegistrations&#34;&gt;the Azure portal&lt;/a&gt;. For Azure AD B2C, checkout &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory-b2c/active-directory-b2c-app-registration&#34;&gt;how to register your app with B2C&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android API Level 16+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Step 1: Declare dependency on MSAL&lt;/h3&gt; &#xA;&lt;p&gt;Add to your app&#39;s build.gradle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    implementation &#39;com.microsoft.identity.client:msal:3.0.+&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please also add the following lines to your repositories section in your gradle script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;maven { &#xA;    url &#39;https://pkgs.dev.azure.com/MicrosoftDeviceSDK/DuoSDK-Public/_packaging/Duo-SDK-Feed/maven/v1&#39; &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Step 2: Create your MSAL configuration file&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/msal-configuration&#34;&gt;Configuration Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s simplest to create your configuration file as a &#34;raw&#34; resource file in your project resources. You&#39;ll be able to refer to this using the generated resource identifier when constructing an instance of PublicClientApplication. If you are registering your app in the portal for the first time, you will also be provided with this config JSON.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{&#xA;  &#34;client_id&#34; : &#34;&amp;lt;YOUR_CLIENT_ID&amp;gt;&#34;,&#xA;  &#34;redirect_uri&#34; : &#34;msauth://&amp;lt;YOUR_PACKAGE_NAME&amp;gt;/&amp;lt;YOUR_BASE64_URL_ENCODED_PACKAGE_SIGNATURE&amp;gt;&#34;,&#xA;  &#34;broker_redirect_uri_registered&#34;: true,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: In the &lt;code&gt;redirect_uri&lt;/code&gt;, the part &lt;code&gt;&amp;lt;YOUR_PACKAGE_NAME&amp;gt;&lt;/code&gt; refers to the package name returned by the &lt;code&gt;context.getPackageName()&lt;/code&gt; method. This package name is the same as the &lt;a href=&#34;https://developer.android.com/studio/build/application-id&#34;&gt;&lt;code&gt;application_id&lt;/code&gt;&lt;/a&gt; defined in your &lt;code&gt;build.gradle&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: This is the minimum required configuration. MSAL relies on the defaults that ship with the library for all other settings. Please refer to the &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/msal-configuration&#34;&gt;configuration file documentation&lt;/a&gt; to understand the library defaults.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 3: Configure the AndroidManifest.xml&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Request the following permissions via the Android Manifest&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-XML&#34;&gt;    &amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34;/&amp;gt;&#xA;    &amp;lt;uses-permission android:name=&#34;android.permission.ACCESS_NETWORK_STATE&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Configure an intent filter in the Android Manifest, using your redirect URI&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Failure to include an intent filter matching the redirect URI you specify via configuration will result in a failed interactive token request. Please double check this!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-XML&#34;&gt;    &amp;lt;!--Intent filter to capture authorization code response from the default browser on the device calling back to our app after interactive sign in --&amp;gt;&#xA;    &amp;lt;activity&#xA;        android:name=&#34;com.microsoft.identity.client.BrowserTabActivity&#34;&amp;gt;&#xA;        &amp;lt;intent-filter&amp;gt;&#xA;            &amp;lt;action android:name=&#34;android.intent.action.VIEW&#34; /&amp;gt;&#xA;            &amp;lt;category android:name=&#34;android.intent.category.DEFAULT&#34; /&amp;gt;&#xA;            &amp;lt;category android:name=&#34;android.intent.category.BROWSABLE&#34; /&amp;gt;&#xA;            &amp;lt;data&#xA;                android:scheme=&#34;msauth&#34;&#xA;                android:host=&#34;&amp;lt;YOUR_PACKAGE_NAME&amp;gt;&#34;&#xA;                android:path=&#34;/&amp;lt;YOUR_BASE64_ENCODED_PACKAGE_SIGNATURE&amp;gt;&#34; /&amp;gt;&#xA;        &amp;lt;/intent-filter&amp;gt;&#xA;    &amp;lt;/activity&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: Please refer to &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki/MSAL-FAQ#redirect-uri-issues&#34;&gt;this FAQ&lt;/a&gt; for more information on common redirect uri issues.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Step 4: Create an MSAL PublicClientApplication&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: In this example we are creating an instance of MultipleAccountPublicClientApplication, which is designed to work with apps that allow multiple accounts to be used within the same application. If you would like to use SingleAccount mode, refer to the &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/single-multi-account&#34;&gt;single vs. multi account documentation&lt;/a&gt;. You can also check out the &lt;a href=&#34;https://docs.microsoft.com/azure/active-directory/develop/quickstart-v2-android&#34;&gt;quickstart&lt;/a&gt; for examples of how this is used.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new MultipleAccountPublicClientApplication instance.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Java&#34;&gt;&#xA;String[] scopes = {&#34;User.Read&#34;};&#xA;IMultipleAccountPublicClientApplication mMultipleAccountApp = null;&#xA;IAccount mFirstAccount = null;&#xA;&#xA;PublicClientApplication.createMultipleAccountPublicClientApplication(getContext(),&#xA;    R.raw.msal_config,&#xA;    new IPublicClientApplication.IMultipleAccountApplicationCreatedListener() {&#xA;        @Override&#xA;        public void onCreated(IMultipleAccountPublicClientApplication application) {&#xA;            mMultipleAccountApp = application;&#xA;        }&#xA;&#xA;        @Override&#xA;        public void onError(MsalException exception) {&#xA;            //Log Exception Here&#xA;        }&#xA;    });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Acquire a token interactively&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;&#xA;mMultipleAccountApp.acquireToken(this, SCOPES, getAuthInteractiveCallback());&#xA;&#xA;private AuthenticationCallback getAuthInteractiveCallback() {&#xA;    return new AuthenticationCallback() {&#xA;        @Override&#xA;        public void onSuccess(IAuthenticationResult authenticationResult) {&#xA;            /* Successfully got a token, use it to call a protected resource */&#xA;            String accessToken = authenticationResult.getAccessToken();&#xA;            // Record account used to acquire token&#xA;            mFirstAccount = authenticationResult.getAccount();&#xA;        }&#xA;        @Override&#xA;        public void onError(MsalException exception) {&#xA;            if (exception instanceof MsalClientException) {&#xA;                //And exception from the client (MSAL)&#xA;            } else if (exception instanceof MsalServiceException) {&#xA;                //An exception from the server&#xA;            }&#xA;        }&#xA;        @Override&#xA;        public void onCancel() {&#xA;            /* User canceled the authentication */&#xA;        }&#xA;    };&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Acquire a token silently&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;&#xA;/*&#xA;    Before getting a token silently for the account used to previously acquire a token interactively, we recommend that you verify that the account is still present in the local cache or on the device in case of brokered auth&#xA;&#xA;    Let&#39;s use the synchronous methods here which can only be invoked from a Worker thread&#xA;*/&#xA;&#xA;//On a worker thread&#xA;IAccount account = mMultipleAccountApp.getAccount(mFirstAccount.getId());&#xA;&#xA;if(account != null){&#xA;    //Now that we know the account is still present in the local cache or not the device (broker authentication)&#xA;&#xA;    //Request token silently&#xA;    String[] newScopes = {&#34;Calendars.Read&#34;};&#xA;    &#xA;    String authority = mMultipleAccountApp.getConfiguration().getDefaultAuthority().getAuthorityURL().toString();&#xA;&#xA;    //Use default authority to request token from pass null&#xA;    IAuthenticationResult result = mMultipleAccountApp.acquireTokenSilent(newScopes, account, authority);&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ProGuard&lt;/h2&gt; &#xA;&lt;p&gt;MSAL uses reflection and generic type information stored in &lt;code&gt;.class&lt;/code&gt; files at runtime to support various persistence and serialization related functionalities. Accordingly, library support for minification and obfuscation is limited. A default configuration is shipped with this library; please &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/issues/new/choose&#34;&gt;file an issue&lt;/a&gt; if you find any issues.&lt;/p&gt; &#xA;&lt;h2&gt;Community Help and Support&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;http://stackoverflow.com/questions/tagged/msal&#34;&gt;StackOverflow&lt;/a&gt; with the community to provide support. You should browse existing issues to see if someone has asked about your issue before. If there are workable solutions to your issue then try out those solutions. If not, ask your question and let the community help you out. We&#39;re part of the community too and watch for new questions. We help with answers when the community cannot give you a solution.&lt;/p&gt; &#xA;&lt;p&gt;If you find and bug or have a feature request, please raise the issue on &lt;a href=&#34;https://raw.githubusercontent.com/AzureAD/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Submit Feedback&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;d like your thoughts on this library. Please complete &lt;a href=&#34;https://forms.office.com/r/3J8pAAqAcj&#34;&gt;this short survey&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;We enthusiastically welcome contributions and feedback. You should &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki/MSAL-Contributing&#34;&gt;clone the repo and start contributing now&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h2&gt;Android Studio Build Requirement&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this project uses &lt;a href=&#34;https://projectlombok.org/&#34;&gt;Lombok&lt;/a&gt; internally and while using Android Studio you will need to install &lt;a href=&#34;https://plugins.jetbrains.com/plugin/6317-lombok&#34;&gt;Lobmok Plugin&lt;/a&gt; to get the project to build successfully within Android Studio.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Date&lt;/th&gt; &#xA;   &lt;th&gt;Release&lt;/th&gt; &#xA;   &lt;th&gt;Blog post&lt;/th&gt; &#xA;   &lt;th&gt;Main features&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;09/30/19&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/releases/tag/v1.0.0&#34;&gt;MSAL 1.0.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://developer.microsoft.com/identity/blogs/microsoft-authentication-libraries-for-android-ios-and-macos-are-now-generally-available/&#34;&gt;https://developer.microsoft.com/identity/blogs/microsoft-authentication-libraries-for-android-ios-and-macos-are-now-generally-available/&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;General Availability of MSAL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12/17/19&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/releases/tag/v1.1.0&#34;&gt;MSAL 1.1.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Expose raw id_token IAccount/ITenantProfile from AuthenticationResult&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;02/04/20&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/releases/tag/v1.2.0&#34;&gt;MSAL 1.2.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds spinner to WebView interactive requests, replaced PublicClientApplication create methods, adds fragment support to WebView flow, bug fixes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;02/12/20&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/releases/tag/v1.3.0&#34;&gt;MSAL 1.3.0&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bug fixes &amp;amp; WebView zoom controls configurable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Projected for end of Q4&lt;/td&gt; &#xA;   &lt;td&gt;Proof of Possession&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Access Token Proof of Possession is currently in preview and is not yet recommended for production environments. &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/raw/dev/docs/access_token-pop.md&#34;&gt;Learn more.&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Security Library&lt;/h2&gt; &#xA;&lt;p&gt;This library controls how users sign-in and access services. We recommend you always take the latest version of our library in your app when you can. We use &lt;a href=&#34;http://semver.org&#34;&gt;semantic versioning&lt;/a&gt; so you can control the risk of updating your app. For example, always downloading the latest minor version number (e.g. x.&lt;em&gt;y&lt;/em&gt;.x) ensures you get the latest security and feature enhanements with the assurance that our API surface area has not changed. You can always see the latest version and release notes under the &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/releases&#34;&gt;Releases&lt;/a&gt; tab of GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Security Reporting&lt;/h2&gt; &#xA;&lt;p&gt;If you find a security issue with our libraries or services, please report the issue to &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt; with as much detail as you can provide. Your submission may be eligible for a bounty through the &lt;a href=&#34;http://aka.ms/bugbounty&#34;&gt;Microsoft Bounty&lt;/a&gt; program. Please do not post security issues to &lt;a href=&#34;https://github.com/AzureAD/microsoft-authentication-library-for-android/issues&#34;&gt;GitHub Issues&lt;/a&gt; or any other public site. We will contact you shortly after receiving your issue report. We encourage you to get new security incident notifications by visiting &lt;a href=&#34;https://technet.microsoft.com/en-us/security/dd252948&#34;&gt;Microsoft technical security notifications&lt;/a&gt; to subscribe to Security Advisory Alerts.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License (the &#34;License&#34;);&lt;/p&gt;</summary>
  </entry>
</feed>