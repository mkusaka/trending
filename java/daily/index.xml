<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-01T01:36:26Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stripe/stripe-java</title>
    <updated>2023-10-01T01:36:26Z</updated>
    <id>tag:github.com,2023-10-01:/stripe/stripe-java</id>
    <link href="https://github.com/stripe/stripe-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Java library for the Stripe API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stripe Java client library&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://mvnrepository.com/artifact/com.stripe/stripe-java&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/maven--central-v23.7.0-blue&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://stripe.dev/stripe-java&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/javadoc-reference-blue.svg?sanitize=true&#34; alt=&#34;JavaDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/stripe/stripe-java/actions?query=branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/stripe/stripe-java/actions/workflows/ci.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/stripe/stripe-java?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/stripe/stripe-java/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The official &lt;a href=&#34;https://stripe.com&#34;&gt;Stripe&lt;/a&gt; Java client library.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 1.8 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Gradle users&lt;/h3&gt; &#xA;&lt;p&gt;Add this dependency to your project&#39;s build file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;implementation &#34;com.stripe:stripe-java:23.7.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Maven users&lt;/h3&gt; &#xA;&lt;p&gt;Add this dependency to your project&#39;s POM:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;com.stripe&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;stripe-java&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;23.7.0&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Others&lt;/h3&gt; &#xA;&lt;p&gt;You&#39;ll need to manually install the following JARs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://search.maven.org/remotecontent?filepath=com/stripe/stripe-java/23.7.0/stripe-java-23.7.0.jar&#34;&gt;The Stripe JAR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/gson&#34;&gt;Google Gson&lt;/a&gt; from &lt;a href=&#34;https://repo1.maven.org/maven2/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar&#34;&gt;https://repo1.maven.org/maven2/com/google/code/gson/gson/2.10.1/gson-2.10.1.jar&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://www.guardsquare.com/en/products/proguard&#34;&gt;ProGuard&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re planning on using ProGuard, make sure that you exclude the Stripe client library. You can do this by adding the following to your &lt;code&gt;proguard.cfg&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-keep class com.stripe.** { *; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://stripe.com/docs/api?lang=java&#34;&gt;Java API docs&lt;/a&gt; for the most up-to-date documentation.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.youtube.com/playlist?list=PLy1nL-pvL2M5TnSGVjEHTTMgdnnHi-KPg&#34;&gt;video demonstrations&lt;/a&gt; covering how to use the library.&lt;/p&gt; &#xA;&lt;p&gt;You can also refer to the &lt;a href=&#34;https://stripe.dev/stripe-java&#34;&gt;online Javadoc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;StripeExample.java&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.HashMap;&#xA;import java.util.Map;&#xA;&#xA;import com.stripe.StripeClient;&#xA;import com.stripe.exception.StripeException;&#xA;import com.stripe.model.Customer;&#xA;import com.stripe.net.RequestOptions;&#xA;import com.stripe.param.CustomerCreateParams;&#xA;&#xA;public class StripeExample {&#xA;&#xA;    public static void main(String[] args) {&#xA;        StripeClient client = new StripeClient(&#34;sk_test_...&#34;);&#xA;        CustomerCreateParams params =&#xA;            CustomerCreateParams&#xA;                .builder()&#xA;                .setDescription(&#34;Example description&#34;)&#xA;                .setEmail(&#34;test@example.com&#34;)&#xA;                .setPaymentMethod(&#34;pm_card_visa&#34;)  // obtained via Stripe.js&#xA;                .build();&#xA;&#xA;        try {&#xA;            Customer customer = client.customers().create(params);&#xA;            System.out.println(customer);&#xA;        } catch (StripeException e) {&#xA;            e.printStackTrace();&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See the project&#39;s &lt;a href=&#34;https://github.com/stripe/stripe-java/raw/master/src/test/java/com/stripe/functional/&#34;&gt;functional tests&lt;/a&gt; for more examples.&lt;/p&gt; &#xA;&lt;h3&gt;Per-request Configuration&lt;/h3&gt; &#xA;&lt;p&gt;All of the request methods accept an optional &lt;code&gt;RequestOptions&lt;/code&gt; object. This is used if you want to set an &lt;a href=&#34;https://stripe.com/docs/api/idempotent_requests?lang=java&#34;&gt;idempotency key&lt;/a&gt;, if you are using &lt;a href=&#34;https://stripe.com/docs/connect/authentication#stripe-account-header&#34;&gt;Stripe Connect&lt;/a&gt;, or if you want to pass the secret API key on each method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;RequestOptions requestOptions = RequestOptions.builder()&#xA;    .setApiKey(&#34;sk_test_...&#34;)&#xA;    .setIdempotencyKey(&#34;a1b2c3...&#34;)&#xA;    .setStripeAccount(&#34;acct_...&#34;)&#xA;    .build();&#xA;&#xA;client.customers().list(requestOptions);&#xA;&#xA;client.customers().retrieve(&#34;cus_123456789&#34;, requestOptions);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring automatic retries&lt;/h3&gt; &#xA;&lt;p&gt;The library can be configured to automatically retry requests that fail due to an intermittent network problem or other knowingly non-deterministic errors. This can be enabled globally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;StripeClient client = StripeClient.builder()&#xA;        .setMaxNetworkRetries(2)&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or on a finer grain level using &lt;code&gt;RequestOptions&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;RequestOptions options = RequestOptions.builder()&#xA;    .setMaxNetworkRetries(2)&#xA;    .build();&#xA;client.customers().create(params, options);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stripe.com/docs/api/idempotent_requests?lang=java&#34;&gt;Idempotency keys&lt;/a&gt; are added to requests to guarantee that retries are safe.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring Timeouts&lt;/h3&gt; &#xA;&lt;p&gt;Connect and read timeouts can be configured globally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;StripeClient client = StripeClient.builder()&#xA;        .setConnectTimeout(30 * 1000); // in milliseconds&#xA;        .setReadTimeout(80 * 1000);&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or on a finer grain level using &lt;code&gt;RequestOptions&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;RequestOptions options = RequestOptions.builder()&#xA;    .setConnectTimeout(30 * 1000) // in milliseconds&#xA;    .setReadTimeout(80 * 1000)&#xA;    .build();&#xA;client.customers().create(params, options);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please take care to set conservative read timeouts. Some API requests can take some time, and a short timeout increases the likelihood of a problem within our servers.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring DNS Cache TTL&lt;/h3&gt; &#xA;&lt;p&gt;We cannot guarantee that the IP address of the Stripe API will be static. Commonly, default JVM configurations can have their DNS cache TTL set to forever. If Stripe&#39;s IP address changes, your application&#39;s requests to Stripe will all fail until the JVM restarts. Therefore we recommend that you modify the JVM&#39;s &lt;a href=&#34;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html&#34;&gt;networkaddress.cache.ttl property&lt;/a&gt; to &lt;code&gt;60&lt;/code&gt; seconds.&lt;/p&gt; &#xA;&lt;h3&gt;How to use undocumented parameters and properties&lt;/h3&gt; &#xA;&lt;p&gt;stripe-java is a typed library and it supports all public properties or parameters.&lt;/p&gt; &#xA;&lt;p&gt;Stripe sometimes has beta which introduces new properties or parameters that are not immediately public. The library does not support these properties or parameters until they are public but there is still an approach that allows you to use them.&lt;/p&gt; &#xA;&lt;h4&gt;Parameters&lt;/h4&gt; &#xA;&lt;p&gt;To pass undocumented parameters to Stripe using stripe-java you need to use the &lt;code&gt;putExtraParam()&lt;/code&gt; method, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;CustomerCreateParams params =&#xA;  CustomerCreateParams.builder()&#xA;    .setEmail(&#34;jenny.rosen@example.com&#34;)&#xA;    .putExtraParam(&#34;secret_feature_enabled&#34;, &#34;true&#34;)&#xA;    .putExtraParam(&#34;secret_parameter[primary]&#34;, &#34;primary value&#34;)&#xA;    .putExtraParam(&#34;secret_parameter[secondary]&#34;, &#34;secondary value&#34;)&#xA;    .build();&#xA;&#xA;client.customers().create(params);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Properties&lt;/h4&gt; &#xA;&lt;p&gt;To retrieve undocumented properties from Stripe using Java you can use an option in the library to return the raw JSON object and return the property as a native type. An example of this is shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;final Customer customer = client.customers().retrieve(&#34;cus_1234&#34;);&#xA;Boolean featureEnabled =&#xA;  customer.getRawJsonObject()&#xA;    .getAsJsonPrimitive(&#34;secret_feature_enabled&#34;)&#xA;    .getAsBoolean();&#xA;String primaryValue =&#xA;  customer.getRawJsonObject()&#xA;    .getAsJsonObject(&#34;secret_parameter&#34;)&#xA;    .getAsJsonPrimitive(&#34;primary&#34;)&#xA;    .getAsString();&#xA;String secondaryValue =&#xA;  customer.getRawJsonObject()&#xA;    .getAsJsonObject(&#34;secret_parameter&#34;)&#xA;    .getAsJsonPrimitive(&#34;secondary&#34;)&#xA;    .getAsString();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Writing a plugin&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re writing a plugin that uses the library, we&#39;d appreciate it if you identified using &lt;code&gt;Stripe.setAppInfo()&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Stripe.setAppInfo(&#34;MyAwesomePlugin&#34;, &#34;1.2.34&#34;, &#34;https://myawesomeplugin.info&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This information is passed along when the library makes calls to the Stripe API.&lt;/p&gt; &#xA;&lt;h3&gt;Request latency telemetry&lt;/h3&gt; &#xA;&lt;p&gt;By default, the library sends request latency telemetry to Stripe. These numbers help Stripe improve the overall latency of its API for all users.&lt;/p&gt; &#xA;&lt;p&gt;You can disable this behavior if you prefer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Stripe.enableTelemetry = false;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Beta SDKs&lt;/h3&gt; &#xA;&lt;p&gt;Stripe has features in the beta phase that can be accessed via the beta version of this package. We would love for you to try these and share feedback with us before these features reach the stable phase. To install a beta version of stripe-java follow steps &lt;a href=&#34;https://raw.githubusercontent.com/stripe/stripe-java/master/#installation&#34;&gt;installation steps above&lt;/a&gt; using the beta library version.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; There can be breaking changes between beta versions. Therefore we recommend pinning the package version to a specific version. This way you can install the same version each time without breaking changes unless you are intentionally looking for the latest beta version.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;We highly recommend keeping an eye on when the beta feature you are interested in goes from beta to stable so that you can move from using a beta version of the SDK to the stable version.&lt;/p&gt; &#xA;&lt;p&gt;If your beta feature requires a &lt;code&gt;Stripe-Version&lt;/code&gt; header to be sent, use the &lt;code&gt;Stripe.stripeVersion&lt;/code&gt; field to set it:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The &lt;code&gt;stripeVersion&lt;/code&gt; can only be set in beta versions of the library.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Stripe.stripeVersion += &#34;; feature_beta=v3&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;New features and bug fixes are released on the latest major version of the Stripe Java client library. If you are on an older major version, we recommend that you upgrade to the latest in order to use the new features and bug fixes including those for security vulnerabilities. Older major versions of the package will continue to be available for use, but will not be receiving any updates.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;JDK 17 is required to build the Stripe Java library. By default, tests use the same Java runtime as the build. To use a custom version of Java runtime for tests set the &lt;code&gt;JAVA_TEST_HOME&lt;/code&gt; environment variable to runtime&#39;s home directory.&lt;/p&gt; &#xA;&lt;p&gt;The test suite depends on &lt;a href=&#34;https://github.com/stripe/stripe-mock&#34;&gt;stripe-mock&lt;/a&gt;, so make sure to fetch and run it from a background terminal (&lt;a href=&#34;https://github.com/stripe/stripe-mock&#34;&gt;stripe-mock&#39;s README&lt;/a&gt; also contains instructions for installing via Homebrew and other methods):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;go get -u github.com/stripe/stripe-mock&#xA;stripe-mock&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run all checks (tests and code formatting):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run the tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can run particular tests by passing &lt;code&gt;--tests Class#method&lt;/code&gt;. Make sure you use the fully qualified class name. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew test --tests com.stripe.model.AccountTest&#xA;./gradlew test --tests com.stripe.functional.CustomerTest&#xA;./gradlew test --tests com.stripe.functional.CustomerTest.testCustomerCreate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The library uses &lt;a href=&#34;https://github.com/diffplug/spotless&#34;&gt;Spotless&lt;/a&gt; along with &lt;a href=&#34;https://github.com/google/google-java-format&#34;&gt;google-java-format&lt;/a&gt; for code formatting. Code must be formatted before PRs are submitted, otherwise CI will fail. Run the formatter with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew spotlessApply&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The library uses &lt;a href=&#34;https://projectlombok.org&#34;&gt;Project Lombok&lt;/a&gt;. While it is not a requirement, you might want to install a &lt;a href=&#34;https://projectlombok.org/setup/overview&#34;&gt;plugin&lt;/a&gt; for your favorite IDE to facilitate development.&lt;/p&gt; &#xA;&lt;!--&#xA;# vim: set tw=79:&#xA;--&gt;</summary>
  </entry>
</feed>