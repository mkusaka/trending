<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-05T01:33:17Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Anuj-Kumar-Sharma/Java-DSA</title>
    <updated>2022-06-05T01:33:17Z</updated>
    <id>tag:github.com,2022-06-05:/Anuj-Kumar-Sharma/Java-DSA</id>
    <link href="https://github.com/Anuj-Kumar-Sharma/Java-DSA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A repository for Java DSA&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>catvod/CatVodTVSpider</title>
    <updated>2022-06-05T01:33:17Z</updated>
    <id>tag:github.com,2022-06-05:/catvod/CatVodTVSpider</id>
    <link href="https://github.com/catvod/CatVodTVSpider" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;猫影视TV客户端爬虫自定义接口工程&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;思维没有边界 一切皆有可能&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;🚀&lt;/span&gt;&lt;a href=&#34;https://t.me/catvodtv_offical&#34;&gt;&lt;strong&gt;TG交流群&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本工程最终食用需配合 猫影视TV新版（一下简称为软件） &lt;strong&gt;v2.0.0&lt;/strong&gt;及以上版本。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/catvod/CatVodTVSpider/master/app/src/main/res/drawable-xhdpi/app_icon.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;欢迎各路大佬踊跃提PR，分享爬虫代码。&lt;/h3&gt; &#xA;&lt;h3&gt;这里是用户分享的爬虫代码打包的共享包，可以配合自定义配置，直接食用 &lt;a href=&#34;https://raw.githubusercontent.com/catvod/CatVodTVSpider/master/jar/&#34;&gt;custom_spider.jar&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;本工程是一个完整的AndroidStudio工程，请你用AS打开编辑。&lt;/p&gt; &#xA;&lt;p&gt;工程调试完毕后要需要导出生成jar文件配合软件使用，执行根目录下的 &lt;code&gt;buildAndGenJar.bat&lt;/code&gt; 会在&lt;code&gt;jar&lt;/code&gt;目录生成一个名为&lt;code&gt;custom_spider.jar&lt;/code&gt;的jar文件，这个文件就是我们最终要是用的代码包。&lt;/p&gt; &#xA;&lt;h3&gt;代码包食用方式&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;本地加载：将&lt;code&gt;custom_spider.jar&lt;/code&gt;放入设备sd卡根目录即可。 &lt;strong&gt;注意，如需本地加载，请手动赋予App存储空间读写权限，App默认不申请存储空间读写权限&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;远程加载：将&lt;code&gt;custom_spider.jar&lt;/code&gt;上传到你的网络空间，获取对应的文件下载地址，在软件自定义配置的json文件中加入下面格式的键值对。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;spider&#34;: &#34;http://xxx.xxx.xxx/custom_spider.jar&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;支持jar文件本地缓存（需v2.0.5及以上版本）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;spider&#34;: &#34;http://xxx.xxx.xxx/custom_spider.jar;md5;jar文件md5&#34;&#xA;// 例如&#xA;&#34;spider&#34;: &#34;https://github.com/catvod/CatVodTVSpider/blob/master/jar/custom_spider.jar?raw=true;md5;c6ed6bc8285f0aca90e7cb3abf7f9caa&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;如何在自定义配置中调用我们代码包中的Spider&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;同样在自定义json中加入相应的播放源即可，&lt;strong&gt;type=3, api对应你代码工程中自定义的爬虫类名（api必须是&lt;code&gt;csp_&lt;/code&gt;开头），例如实例工程中的&lt;code&gt;Aidi&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;key&#34;: &#34;csp_Aidi&#34;,&#xA;    &#34;name&#34;: &#34;爱迪&#34;,&#xA;    &#34;type&#34;: 3,&#xA;    &#34;api&#34;: &#34;csp_Aidi&#34;,&#xA;    &#34;searchable&#34;: 1,&#xA;    &#34;quickSearch&#34;: 0,&#xA;    &#34;filterable&#34;: 1&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Json解析扩展（需v2.0.2及以上版本）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;通过jar包可以实现json解析并发、轮询等相关功能，&lt;strong&gt;参与并发和轮询的json解析地址，默认为解析地址列表中的所有json解析（即type=1）&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;在自定义json中的&lt;code&gt;parse&lt;/code&gt;里加入相应的解析配置（type=2）即可启用。&lt;strong&gt;调用扩展类的名称配置在&lt;code&gt;parse&lt;/code&gt;的&lt;code&gt;url&lt;/code&gt;字段里，例如扩展类&lt;code&gt;JsonParallel&lt;/code&gt;的json配置&lt;code&gt;url&lt;/code&gt;字段值为&lt;code&gt;Parallel&lt;/code&gt;&lt;/strong&gt;。如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;name&#34;: &#34;Json并发&#34;,&#xA;    &#34;type&#34;: 2,&#xA;    &#34;url&#34;: &#34;Parallel&#34;&#xA;},&#xA;{&#xA;    &#34;name&#34;: &#34;Json轮询&#34;,&#xA;    &#34;type&#34;: 2,&#xA;    &#34;url&#34;: &#34;Sequence&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;XPath规则套娃（需v2.0.4及以上版本）&lt;/strong&gt; 套娃规则祥见&lt;a href=&#34;https://raw.githubusercontent.com/catvod/CatVodTVSpider/master/XPath.md&#34;&gt;XPath.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;M浏览器中APP影视规则支持&lt;/strong&gt;（2022.01.17 by 小黄瓜）支持筛选。&lt;/p&gt; &#xA;&lt;p&gt;因&lt;a href=&#34;https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/APP%E5%BD%B1%E8%A7%86%E5%88%97%E8%A1%A8&#34; target=&#34;_blank&#34;&gt;App影视接口收集地址&lt;/a&gt;停止维护，代码里不再读取相关json地址。&lt;/p&gt; &#xA;&lt;p&gt;如果你有对应影视Api地址请在ext字段中直接配置Api地址。&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;配置代码示例 点我展开&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;key&#34;:&#34;csp_appysv2_追剧达人&#34;, &#34;name&#34;:&#34;追剧推荐(M2)&#34;, &#34;type&#34;:3,&#34;api&#34;:&#34;csp_AppYsV2&#34;, &#34;searchable&#34;:1, &#34;quickSearch&#34;:0, &#34;filterable&#34;:1, &#34;ext&#34;:&#34;https://vipmv.co/xgapp.php/v1/&#34;},&#xA;{&#34;key&#34;:&#34;csp_appysv2_天空影视&#34;, &#34;name&#34;:&#34;天空推荐(M2)&#34;, &#34;type&#34;:3,&#34;api&#34;:&#34;csp_AppYsV2&#34;, &#34;searchable&#34;:1, &#34;quickSearch&#34;:0, &#34;filterable&#34;:1, &#34;ext&#34;:&#34;https://tkys.tv/xgapp.php/v1/&#34;},&#xA;{&#34;key&#34;:&#34;csp_appys_HG影视&#34;, &#34;name&#34;:&#34;HG影视(M)&#34;, &#34;type&#34;:3, &#34;api&#34;:&#34;csp_AppYs&#34;, &#34;searchable&#34;:1, &#34;quickSearch&#34;:0, &#34;filterable&#34;:1, &#34;ext&#34;:&#34;http://hgyx.vip/api.php/v1.vod&#34;},&#xA;{&#34;key&#34;:&#34;csp_appys_瑞丰资源&#34;, &#34;name&#34;:&#34;瑞丰资源(M)&#34;, &#34;type&#34;:3, &#34;api&#34;:&#34;csp_AppYs&#34;, &#34;searchable&#34;:1, &#34;quickSearch&#34;:0, &#34;filterable&#34;:1, &#34;ext&#34;:&#34;https://ts.yjhan.com:4433/ruifenglb_api.php/v1.vod&#34;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;部分内置代理接口使用（需v2.0.9及以上版本）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;入口 &lt;a href=&#34;https://raw.githubusercontent.com/catvod/CatVodTVSpider/master/app/src/main/java/com/github/catvod/spider/Proxy.java&#34;&gt;Proxy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;图片代理，示例参考&lt;a href=&#34;https://raw.githubusercontent.com/catvod/CatVodTVSpider/master/app/src/main/java/com/github/catvod/spider/Nekk.java#L449&#34;&gt;Nekk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;直播配置重定向代理，示例参考&lt;a href=&#34;https://raw.githubusercontent.com/catvod/CatVodTVSpider/master/app/src/main/java/com/github/catvod/live/TxtSubscribe.java&#34;&gt;TxtSubscribe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;推送功能扩展（需v2.1.0.Beta6及以上版本）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;入口 &lt;a href=&#34;https://raw.githubusercontent.com/catvod/CatVodTVSpider/master/app/src/main/java/com/github/catvod/spider/PushAgent.java&#34;&gt;PushAgent&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;需要在配置文件中，加入key为&lt;code&gt;push_agent&lt;/code&gt;的站点，数据返回格式和普通爬虫一致&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;key&#34;: &#34;push_agent&#34;,&#xA;  &#34;name&#34;: &#34;推送&#34;,&#xA;  &#34;type&#34;: 3,&#xA;  &#34;api&#34;: &#34;csp_PushAgent&#34;,&#xA;  &#34;searchable&#34;: 0,&#xA;  &#34;quickSearch&#34;: 0,&#xA;  &#34;filterable&#34;: 0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;基础类&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.crawler.Spider 爬虫基类&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.crawler.SpiderReq 用于发起网络请求 获取网络数据，请使用&lt;a href=&#34;https://raw.githubusercontent.com/catvod/CatVodTVSpider/master/app/src/main/java/com/github/catvod/utils/okhttp/OkHttpUtil.java&#34;&gt;OkHttpUtil&lt;/a&gt;类，SpiderReq后续将删除&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.crawler.SpiderReqResult 网络请求结果&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.crawler.SpiderUrl 用于定义一个网络请求&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;示例&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;请查看 仓库中的爱迪影视 相关实现 ，调试可参考 &lt;code&gt;com.github.catvod.demo.MainActivity&lt;/code&gt; ，直接调用对应爬虫相关接口&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.spider.Aidi&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;注意事项!!&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;除了&lt;code&gt;com.github.catvod.spider&lt;/code&gt;包以外的代码，最终都会被软件本身内置的代码代替掉，所以，建议你不要修改除&lt;code&gt;com.github.catvod.spider&lt;/code&gt;包以外的代码。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;不要在&lt;code&gt;Spider&lt;/code&gt;中使用&lt;code&gt;Gson&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;待补充&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;爬虫类返回的相关Json字符串格式说明&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;homeContent&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;class&#34;: [{   // 分类&#xA;&#x9;&#x9;&#34;type_id&#34;: &#34;dianying&#34;, // 分类id &#xA;&#x9;&#x9;&#34;type_name&#34;: &#34;电影&#34; // 分类名&#xA;&#x9;}, {&#xA;&#x9;&#x9;&#34;type_id&#34;: &#34;lianxuju&#34;,&#xA;&#x9;&#x9;&#34;type_name&#34;: &#34;连续剧&#34;&#xA;&#x9;}],&#xA;&#x9;&#34;filters&#34;: { // 筛选&#xA;&#x9;&#x9;&#34;dianying&#34;: [{ // 分类id 就是上面class中的分类id&#xA;&#x9;&#x9;&#x9;&#34;key&#34;: &#34;0&#34;, // 筛选key&#xA;&#x9;&#x9;&#x9;&#34;name&#34;: &#34;分类&#34;, // 筛选名称&#xA;&#x9;&#x9;&#x9;&#34;value&#34;: [{ // 筛选选项 &#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;全部&#34;, // 选项展示的名称&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;dianying&#34; // 选项最终在url中的展现&#xA;&#x9;&#x9;&#x9;}, {&#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;动作片&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;dongzuopian&#34;&#xA;&#x9;&#x9;&#x9;}]&#xA;&#x9;&#x9;}],&#xA;&#x9;&#x9;&#34;lianxuju&#34;: [{&#xA;&#x9;&#x9;&#x9;&#34;key&#34;: 0,&#xA;&#x9;&#x9;&#x9;&#34;name&#34;: &#34;分类&#34;,&#xA;&#x9;&#x9;&#x9;&#34;value&#34;: [{&#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;全部&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;lianxuju&#34;&#xA;&#x9;&#x9;&#x9;}, {&#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;国产剧&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;guochanju&#34;&#xA;&#x9;&#x9;&#x9;}, {&#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;港台剧&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;gangtaiju&#34;&#xA;&#x9;&#x9;&#x9;}]&#xA;&#x9;&#x9;}]&#xA;&#x9;},&#xA;&#x9;&#34;list&#34;: [{ // 首页最近更新视频列表&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1901&#34;, // 视频id&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;判决&#34;, // 视频名&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/614631e62ab3f51d918e9201.jpg&#34;, // 展示图片&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;6.8&#34; // 视频信息 展示在 视频名上方&#xA;&#x9;}, {&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1908&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;移山的父亲&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/6146fab82ab3f51d91c01af1.jpg&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;6.7&#34;&#xA;&#x9;}]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;categoryContent&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;page&#34;: 1, // 当前页&#xA;&#x9;&#34;pagecount&#34;: 2, // 总共几页&#xA;&#x9;&#34;limit&#34;: 60, // 每页几条数据&#xA;&#x9;&#34;total&#34;: 120, // 总共多少调数据&#xA;&#x9;&#34;list&#34;: [{ // 视频列表 下面的视频结构 同上面homeContent中的&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1897&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;北区侦缉队&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/6145d4b22ab3f51d91bd98b6.jpg&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;7.3&#34;&#xA;&#x9;}, {&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1879&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;浪客剑心 最终章 人诛篇&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/60e3f37e5132923bf82ef95e.jpg&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;8.0&#34;&#xA;&#x9;}]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;detailContent&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;list&#34;: [{&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1902&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;海岸村恰恰恰&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/61463fd12ab3f51d91a0f44d.jpg&#34;,&#xA;&#x9;&#x9;&#34;type_name&#34;: &#34;剧情&#34;,&#xA;&#x9;&#x9;&#34;vod_year&#34;: &#34;2021&#34;,&#xA;&#x9;&#x9;&#34;vod_area&#34;: &#34;韩国&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;更新至第8集&#34;,&#xA;&#x9;&#x9;&#34;vod_actor&#34;: &#34;申敏儿,金宣虎,李相二,孔敏晶,徐尚沅,禹美华,朴艺荣,李世亨,边胜泰,金贤佑,金英玉&#34;,&#xA;&#x9;&#x9;&#34;vod_director&#34;: &#34;柳济元&#34;,&#xA;&#x9;&#x9;&#34;vod_content&#34;: &#34;海岸村恰恰恰剧情:　　韩剧海岸村恰恰恰 갯마을 차차차改编自2004年的电影《我的百事通男友洪班长》，海岸村恰恰恰 갯마을 차차차讲述来自大都市的牙医（申敏儿 饰）到充满人情味的海岸村开设牙医诊所，那里住着一位各方面都&#34;,&#xA;        // 播放源 多个用$$$分隔&#xA;&#x9;&#x9;&#34;vod_play_from&#34;: &#34;qiepian$$$yun3edu&#34;, &#xA;        // 播放列表 注意分隔符 分别是 多个源$$$分隔，源中的剧集用#分隔，剧集的名称和地址用$分隔&#xA;&#x9;&#x9;&#34;vod_play_url&#34;: &#34;第1集$1902-1-1#第2集$1902-1-2#第3集$1902-1-3#第4集$1902-1-4#第5集$1902-1-5#第6集$1902-1-6#第7集$1902-1-7#第8集$1902-1-8$$$第1集$1902-2-1#第2集$1902-2-2#第3集$1902-2-3#第4集$1902-2-4#第5集$1902-2-5#第6集$1902-2-6#第7集$1902-2-7#第8集$1902-2-8&#34; &#xA;&#x9;}]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;searchContent&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;list&#34;: [{ // 视频列表 下面的视频结构 同上面homeContent中的&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1606&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;陪你一起长大&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/img.aidi.tv\/img\/upload\/vod\/20210417-1\/e27d4eb86f7cde375171dd324b2c19ae.jpg&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;更新至第37集&#34;&#xA;&#x9;}]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>neo4j/neo4j</title>
    <updated>2022-06-05T01:33:17Z</updated>
    <id>tag:github.com,2022-06-05:/neo4j/neo4j</id>
    <link href="https://github.com/neo4j/neo4j" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Graphs for Everyone&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Neo4j: Graphs for Everyone&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;https://neo4j.com&#34;&gt;Neo4j&lt;/a&gt; is the world’s leading Graph Database. It is a high performance graph store with all the features expected of a mature and robust database, like a friendly query language and ACID transactions. The programmer works with a flexible network structure of nodes and relationships rather than static tables — yet enjoys all the benefits of enterprise-quality database. For many applications, Neo4j offers orders of magnitude performance benefits compared to relational DBs.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Learn more on the &lt;a href=&#34;https://neo4j.com&#34;&gt;Neo4j website&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;https://discord.gg/neo4j&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/787399249741479977?label=Chat&amp;amp;logo=discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;a href=&#34;https://community.neo4j.com&#34;&gt;&lt;span class=&#34;image&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/users?label=Forums&amp;amp;logo=discourse&amp;amp;server=https%3A%2F%2Fcommunity.neo4j.com&amp;amp;style=for-the-badge&#34; alt=&#34;Discourse users&#34;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_using_neo4j&#34;&gt;Using Neo4j&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Neo4j is available both as a standalone server, or an embeddable component. You can &lt;a href=&#34;https://neo4j.com/download/&#34;&gt;download&lt;/a&gt; or &lt;a href=&#34;https://neo4j.com/sandbox/&#34;&gt;try online&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_extending_neo4j&#34;&gt;Extending Neo4j&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;We encourage experimentation with Neo4j. You can build extensions to Neo4j, develop library or drivers atop the product, or make contributions directly to the product core. You’ll need to sign a Contributor License Agreement in order for us to accept your patches.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_dependencies&#34;&gt;Dependencies&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Neo4j is built using &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Apache Maven&lt;/a&gt; version 3.6.3 and a recent version of supported VM. Bash and Make are also required. Note that maven needs more memory than the standard configuration, this can be achieved with &lt;code&gt;export MAVEN_OPTS=&#34;-Xmx512m&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;macOS users need to have &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; installed.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_with_brew_on_macos&#34;&gt;With brew on macOS&lt;/h3&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;brew install maven&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Please note that we do not support building Debian packages on macOS.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_with_apt_get_on_ubuntu&#34;&gt;With apt-get on Ubuntu&lt;/h3&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;sudo apt install maven openjdk-11-jdk&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;On top of that, to build Debian packages and Neo4j Desktop:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;apt install debhelper devscripts dos2unix dpkg make xmlstarlet&#xA;# You will need a license for install4j, which is only needed for Neo4j Desktop&#xA;curl -O https://download-keycdn.ej-technologies.com/install4j/install4j_linux_6_1_4.deb&#xA;dpkg -i install4j_linux_6_1_4.deb&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_building_neo4j&#34;&gt;Building Neo4j&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Before you start running the unit and integration tests in the Neo4j Maven project on a Linux-like system, you should ensure your limit on open files is set to a reasonable value. You can test it with &lt;code&gt;ulimit -n&lt;/code&gt;. We recommend you have a limit of at least 40K.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;A plain &lt;code&gt;mvn clean install&lt;/code&gt; will only build the individual jar files.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Test execution is, of course, part of the build.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;In case you just want the jars, without running tests, this is for you: &lt;code&gt;mvn clean install -DskipTests&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;To build product packages, do &lt;code&gt;export PATH=&#34;bin:$PATH&#34; &amp;amp;&amp;amp; make clean all&lt;/code&gt; in the packaging directory after building artifacts with Maven.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;To build the documentation see the &lt;a href=&#34;https://github.com/neo4j/neo4j-documentation/&#34;&gt;Neo4j documentation&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;If you are running into problems building on Windows you can try building Neo4j in a Ubuntu virtual machine.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;You may need to increase the memory available to Maven: &lt;code&gt;export MAVEN_OPTS=&#34;-Xmx512m&#34;&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_running_neo4j&#34;&gt;Running Neo4j&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;After running a &lt;code&gt;mvn clean install&lt;/code&gt;, &lt;code&gt;cd&lt;/code&gt; into &lt;code&gt;packaging/standalone/target&lt;/code&gt; and extract the version you want, then:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;literalblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;bin/neo4j start&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;in the extracted folder to start Neo4j on &lt;code&gt;localhost:7474&lt;/code&gt;. On Windows you want to run:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;literalblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;  bin&#xA;eo4j start&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;instead.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_neo4j_desktop&#34;&gt;Neo4j Desktop&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Neo4j Desktop is a convenient way for developers to work with local Neo4j databases.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;To install Neo4j Desktop, go to &lt;a href=&#34;https://neo4j.com/download-center/&#34;&gt;Neo4j Download Center&lt;/a&gt; and follow the instructions.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_licensing&#34;&gt;Licensing&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Neo4j Community Edition is an open source product licensed under GPLv3.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Neo4j Enterprise Edition includes additional closed-source components &lt;em&gt;not available in this repository&lt;/em&gt; and requires a commercial license from Neo4j or one of its affiliates.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_trademark&#34;&gt;Trademark&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Neo4j’s trademark policy is available at &lt;a href=&#34;https://neo4j.com/trademark-policy/&#34;&gt;our trademark policy page&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>