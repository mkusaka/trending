<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-23T01:37:51Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>timing1337/Mineplex</title>
    <updated>2023-05-23T01:37:51Z</updated>
    <id>tag:github.com,2023-05-23:/timing1337/Mineplex</id>
    <link href="https://github.com/timing1337/Mineplex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mineplex source code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mineplex&lt;/h1&gt; &#xA;&lt;p&gt;Mineplex source code dated back to 2018&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Java 1.8&lt;/li&gt; &#xA; &lt;li&gt;Maven&lt;/li&gt; &#xA; &lt;li&gt;Mineplex&#39;s custom spigot maven dependency: &lt;code&gt;mvn install:install-file -Dfile=\path\to\Patches\craftbukkit.jar -DgroupId=com.mineplex -DartifactId=spigot -Dversion=1.0 -Dpackaging=jar -DgeneratePom=true&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tporadowski/redis/releases&#34;&gt;Redis&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://anonfiles.com/399650s1ze/RedisManager_zip&#34;&gt;Redis Desktop Manager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Working status&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;✅ Arcade&lt;/li&gt; &#xA; &lt;li&gt;✅ Hub&lt;/li&gt; &#xA; &lt;li&gt;❓ NanoGames&lt;/li&gt; &#xA; &lt;li&gt;❓ Networking/Bungee related&lt;/li&gt; &#xA; &lt;li&gt;❓ Clans&lt;/li&gt; &#xA; &lt;li&gt;❓ StaffServer&lt;/li&gt; &#xA; &lt;li&gt;❓ GemsHunter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn package&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Short guide&lt;/h2&gt; &#xA;&lt;p&gt;After getting your bareboned server with the software in Patches/craftbukkit.jar and compiled Arcade or Hub (i dont know why you are even running this)&lt;/p&gt; &#xA;&lt;p&gt;Proceed to &lt;a href=&#34;https://youtu.be/7pADz6B2z_s&#34;&gt;https://youtu.be/7pADz6B2z_s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Needs any helps? Contact my discord and i&#39;ll try to help you as much as I can &amp;lt;3.&lt;/p&gt; &#xA;&lt;h2&gt;TODO LIST&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[] Fixing current codebase/maven&lt;/li&gt; &#xA; &lt;li&gt;[] Proper guide for setting up&lt;/li&gt; &#xA; &lt;li&gt;[] Backend refactor instead of a broken boilerplate&lt;/li&gt; &#xA; &lt;li&gt;[] Redis scripts for easier setup(?)&lt;/li&gt; &#xA; &lt;li&gt;[] Custom game maps&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dear Mineplex, if you have any issues with this repo, please contact me immediently.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Team-xManager/xManager</title>
    <updated>2023-05-23T01:37:51Z</updated>
    <id>tag:github.com,2023-05-23:/Team-xManager/xManager</id>
    <link href="https://github.com/Team-xManager/xManager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ad-Free, New Features &amp; Freedom&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.xmanagerapp.com/&#34;&gt;&lt;img width=&#34;200&#34; src=&#34;https://i.ibb.co/64bJncy/xmanger.gif&#34;&gt; &lt;/a&gt;&lt;/p&gt;&#xA;&lt;a href=&#34;https://www.xmanagerapp.com/&#34;&gt; &lt;h3&gt;&lt;p align=&#34;center&#34;&gt;AD-FREE | NEW FEATURES | FREEDOM&lt;/p&gt;&lt;/h3&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Status&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/xManager-App/xManager?label=UPDATED%20SINCE&amp;amp;style=for-the-badge&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://img.shields.io/github/v/tag/xManager-App/xManager?label=LATEST%20VERSION&amp;amp;style=for-the-badge&#34;&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Download Milestone&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/xManager-App/xManager/total?label=OMNIBUS%20(ACTIVE)&amp;amp;style=for-the-badge&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://img.shields.io/badge/ORIGINS%20(SHUTDOWN)-1.1M-red.svg?style=for-the-badge&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://img.shields.io/badge/LEGACY%20(SHUTDOWN)-400K-red.svg?style=for-the-badge&#34;&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Miscellaneous&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/xManager-v2/xManager/wiki/xManager-Roadmaps,-Changelogs-and-Milestones&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Roadmaps%20&amp;amp;%20Changelogs-Click%20Here-white.svg?style=for-the-badge&#34;&gt;&lt;br&gt;&lt;/a&gt;&lt;a href=&#34;https://www.virustotal.com/gui/file/994ea1d7b7cea1ab7f9ffb18b24ea8f58cd9d511ac8c5dc967d47207c55fa891/detection&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/VirusTotal%20Analysis-Click%20Here-blue.svg?style=for-the-badge&#34;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Trust Seal&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://monitor2025.sucuri.net/m/verify/?r=ccceaab79b44b4835a6a85d916bf5613b9c98436db&#34;&gt;&lt;img src=&#34;https://i.ibb.co/vLvdNCR/trustseal.gif&#34;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Donation/Sponsor&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://ko-fi.com/I3I0IPJ3W&#34;&gt;&lt;img src=&#34;https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true&#34; alt=&#34;ko-fi&#34;&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Key Features&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Descriptions&lt;/strong&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;All-in-One Place&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Upgrade or Downgrade Anytime &amp;amp; Anywhere&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Manager Tools&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Uninstall, Open Settings, Clean Cached Data &amp;amp; Launch App&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Experimentals&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Some A/B Features are Available to Use&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Friendly Interface&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Neat &amp;amp; Slick Minimalist UI&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Less Storage&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Lightweight Manager&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Easy to Use&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Key Details&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;More Informations&lt;/strong&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;How It Works&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Depending on what variant or version the user wants to install, the manager will directly fetch that selected url data. Once completed, the selected file can be installed. All links are available publicly.&lt;br&gt;&lt;br&gt;IF, you know what it means then you know what it is.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;About The Project&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;The successor from our previous manager app that was released way back in 2020 developed by xC3FFF0E and with the help of Sherlock Holmes.&lt;br&gt;&lt;br&gt;We decided to create an app where people can easily manage and install all versions of the music streaming app from their devices.&lt;br&gt;&lt;br&gt;We aim to make a simple yet useful manager app for everyone&#39;s convenience. On this second version of the manager app, we added a couple of features such as the ability to uninstall, open the app&#39;s settings directly, clear the offline cached data, and launch the app. We hope that all users find these newly added features very useful.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Databases&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;Shutdown Date&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;More Informations&lt;/strong&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Legacy&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;04/01/22&lt;/td&gt; &#xA;     &lt;td&gt;Legacy databases are now officially shut down. Update to the latest version of xManager (v3.2) to continue using the app. These are the databases used by our old manager up until xManager v1-v3.1.&lt;br&gt;&lt;br&gt;These databases are very old and deprecated at the same time. That is why we decided to take them down.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;Origins&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td align=&#34;center&#34;&gt;02/24/23&lt;/td&gt; &#xA;     &lt;td&gt;Origins databases are now officially shut down. Update to the latest version of xManager (v4.5) to continue using the app.&lt;br&gt;&lt;br&gt;These are the databases used by our old manager up until xManager v3.4-v4.4.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;&lt;strong&gt;For Contributors&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;More Informations&lt;/strong&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Code Change&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Pull request should be done on the &lt;strong&gt;&#34;Developer&#34;&lt;/strong&gt; branch.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Translation Change/Update&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Pull request should be done on the &lt;strong&gt;&#34;Developer&#34;&lt;/strong&gt; branch. The translations can be found at &lt;code&gt;resource/values/strings.xml&lt;/code&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Submit Translations&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Pull request should be done on the &lt;strong&gt;&#34;Developer&#34;&lt;/strong&gt; branch. Please follow the &lt;code&gt;&amp;lt;--DEFAULT LANGUAGE--&amp;gt;&lt;/code&gt; format that can be found at &lt;code&gt;resource/values/strings.xml&lt;/code&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Important Notes&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;xManager was created using &lt;a href=&#34;https://github.com/Sketchware-Pro/Sketchware-Pro&#34;&gt;Sketchware Pro&lt;/a&gt; for Android.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;xManager uses &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.sketch2any&#34;&gt;Sketch2Any&lt;/a&gt; to convert the project to Android Studio.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;No trackers, no spyware, no keyloggers, or any other malicious codes&lt;/strong&gt; are added to the source code. What you see in the source code is what&#39;s inside the build app. You can extract the app for yourself.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;The source code that can be seen here is what&#39;s inside the exported zip file for Android Studio.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;There are some instances that the source code is unbuildable. Some parts might be missing and such due to limitations.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Users might experience downtime and maintenance when using the manager app since we are manually changing the hosting links of each file from time to time.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;xManager is completely free and we do not get any commissions from it &lt;strong&gt;(Rewarded Ads are optional and can be disabled in the settings)&lt;/strong&gt;.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;We will support the app as long as we can. Internal improvements may not be guaranteed.&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;&lt;strong&gt;The Team&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Names/Alias&lt;/strong&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Developer&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;xC3FFF0E&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Manager Hosting Links&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;jetfire&lt;br&gt;Wu Tang Clam&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;RishavG&lt;br&gt;meech&lt;br&gt;jetfire&lt;br&gt;Sherlock Holmes&lt;br&gt;Wu Tang Clam&lt;br&gt;Zach&lt;br&gt;aha&lt;br&gt;100RABH&lt;br&gt;juznem&lt;br&gt;Light Yagami&lt;br&gt;Tunelover (Mobilism Team)&lt;br&gt;jar3cki (Manager Tester)&lt;br&gt;cryiotic3 (Manager Icon)&lt;br&gt;farish278 (Manager Icon)&lt;br&gt;zankyr (Notification Fixed)&lt;br&gt;Arian04 (Duplicate Attributes)&lt;br&gt;roosphx (Login Fixed)&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA;  &lt;hr&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Manager Translators&lt;/strong&gt;&lt;/th&gt; &#xA;     &lt;th&gt;&lt;strong&gt;Names/Alias&lt;/strong&gt;&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Arabic Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Yazan Kasem&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Bengali Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;0V3R5!9H7&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Chinese - Simplified Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Gent G | Softland99 | zelixdxin&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;French Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;The Punisher | Luxchar | xerta555 | GlThibault&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Greek Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Walter&#39;s Cousin #CAF&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Indonesian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Mc.J | Deraidos&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Italian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Marco | gdonisi | albertopasqualetto&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Portuguese - Brazil Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Loui&#39;s™ | Zilberto Junior&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Portuguese - Portugal Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Androide323&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Romanian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;NACH | f9branza | StephenTheMoldovan&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Russian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Pegioner | vanja-san&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Slovenian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;MysticX&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Spanish - Spain Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;PetFix | Snapdragon845GMS | Zkyclad&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Turkish Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Berkay&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Ukrainian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;NIKITA🇺🇦[beryllium] #PocoForEver&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Korean Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Apious | Annyeong-One&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Dutch Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Kevin&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Vietnamese Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;minhtamvn&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;German Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;smokedzn&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Persian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;ohshahab&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Hebrew Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;GreenArmy18&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Polish Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;dearminder&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;English Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Dyras&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Slovak Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;KaldonM&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Swedish Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;rexobo&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Finnish Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;AfraidOfTheBigBlack | Lilko1ra | KasperiP&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Czech Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;rex2630&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Chinese (Traditional) Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;cracky5322 | TragicLifeHu&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Bulgarian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;meorro | martinov83&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Serbian (Cyrillic) Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;nexiRS&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Serbian (Latin) Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;nexiRS&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Catalan Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;tomaquet18&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Latvian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;ClientSiderz&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;German Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;4NDROM3DA&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Sinhala Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;Psycho649&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;&lt;strong&gt;Hungarian Translation&lt;/strong&gt;&lt;/td&gt; &#xA;     &lt;td&gt;gurtnyi&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &#xA; &lt;/div&gt;&lt;/a&gt; &#xA;&lt;h3&gt;&lt;p align=&#34;center&#34;&gt;THANKS TO ALL CONTRIBUTORS! ❤️&lt;/p&gt;&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>zalando/logbook</title>
    <updated>2023-05-23T01:37:51Z</updated>
    <id>tag:github.com,2023-05-23:/zalando/logbook</id>
    <link href="https://github.com/zalando/logbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extensible Java library for HTTP request and response logging&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Logbook: HTTP request and response logging&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#attributions&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/zalando/logbook/main/docs/logbook.jpg&#34; alt=&#34;Logbook&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://masterminds.github.io/stability/active.html&#34;&gt;&lt;img src=&#34;https://masterminds.github.io/stability/active.svg?sanitize=true&#34; alt=&#34;Stability: Active&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/zalando/logbook/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://coveralls.io/r/zalando/logbook&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/zalando/logbook/main.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.javadoc.io/doc/org.zalando/logbook-core&#34;&gt;&lt;img src=&#34;http://javadoc.io/badge/org.zalando/logbook-core.svg?sanitize=true&#34; alt=&#34;Javadoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zalando/logbook/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/zalando/logbook.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/org.zalando/logbook-parent&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.zalando/logbook-parent.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Logbook&lt;/strong&gt; noun, /lɑɡ bʊk/: A book in which measurements from the ship&#39;s log are recorded, along with other salient details of the voyage.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Logbook&lt;/strong&gt; is an extensible Java library to enable complete request and response logging for different client- and server-side technologies. It satisfies a special need by a) allowing web application developers to log any HTTP traffic that an application receives or sends b) in a way that makes it easy to persist and analyze it later. This can be useful for traditional log analysis, meeting audit requirements or investigating individual historic traffic issues.&lt;/p&gt; &#xA;&lt;p&gt;Logbook is ready to use out of the box for most common setups. Even for uncommon applications and technologies, it should be simple to implement the necessary interfaces to connect a library/framework/etc. to it.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Logging&lt;/strong&gt;: of HTTP requests and responses, including the body; partial logging (no body) for unauthorized requests&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt;: of logging format, logging destination, and conditions that request to log&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Support&lt;/strong&gt;: for Servlet containers, Apache’s HTTP client, Square&#39;s OkHttp, and (via its elegant API) other frameworks&lt;/li&gt; &#xA; &lt;li&gt;Optional obfuscation of sensitive data&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://projects.spring.io/spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; Auto Configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/docs/scalyr.md&#34;&gt;Scalyr&lt;/a&gt; compatible&lt;/li&gt; &#xA; &lt;li&gt;Sensible defaults&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 8 (for Spring 6 / Spring Boot 3 Java 17 is required)&lt;/li&gt; &#xA; &lt;li&gt;Any build tool using Maven Central, or direct download&lt;/li&gt; &#xA; &lt;li&gt;Servlet Container (optional)&lt;/li&gt; &#xA; &lt;li&gt;Apache HTTP Client 4.x &lt;strong&gt;or 5.x&lt;/strong&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;JAX-RS 2.x Client and Server (optional)&lt;/li&gt; &#xA; &lt;li&gt;Netty 4.x (optional)&lt;/li&gt; &#xA; &lt;li&gt;OkHttp 2.x &lt;strong&gt;or 3.x&lt;/strong&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;Spring &lt;strong&gt;6.x&lt;/strong&gt; or Spring 5.x (optional, see instructions below)&lt;/li&gt; &#xA; &lt;li&gt;Spring Boot &lt;strong&gt;3.x&lt;/strong&gt; or 2.x (optional)&lt;/li&gt; &#xA; &lt;li&gt;Ktor (optional)&lt;/li&gt; &#xA; &lt;li&gt;logstash-logback-encoder 5.x (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Add the following dependency to your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-core&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;${logbook.version}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Spring 5 / Spring Boot 2 Support&lt;/h3&gt; &#xA;&lt;p&gt;For Spring 5 / Spring Boot 2 backwards compatibility please add the following import:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-servlet&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;${logbook.version}&amp;lt;/version&amp;gt;&#xA;    &amp;lt;classifier&amp;gt;javax&amp;lt;/classifier&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional modules/artifacts of Logbook always share the same version number.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can import our &lt;em&gt;bill of materials&lt;/em&gt;...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependencyManagement&amp;gt;&#xA;  &amp;lt;dependencies&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;      &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;      &amp;lt;artifactId&amp;gt;logbook-bom&amp;lt;/artifactId&amp;gt;&#xA;      &amp;lt;version&amp;gt;${logbook.version}&amp;lt;/version&amp;gt;&#xA;      &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xA;      &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;  &amp;lt;/dependencies&amp;gt;&#xA;&amp;lt;/dependencyManagement&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;... which allows you to omit versions:&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-core&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-httpclient&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-jaxrs&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-json&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-netty&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-okhttp&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-okhttp2&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-servlet&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-spring-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-ktor-common&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-ktor-client&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-ktor-server&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-ktor&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-logstash&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;The logbook logger must be configured to trace level in order to log the requests and responses. With Spring Boot 2 (using Logback) this can be accomplished by adding the following line to your &lt;code&gt;application.properties&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;logging.level.org.zalando.logbook: TRACE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;All integrations require an instance of &lt;code&gt;Logbook&lt;/code&gt; which holds all configuration and wires all necessary parts together. You can either create one using all the defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Logbook logbook = Logbook.create();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or create a customized version using the &lt;code&gt;LogbookBuilder&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Logbook logbook = Logbook.builder()&#xA;    .condition(new CustomCondition())&#xA;    .queryFilter(new CustomQueryFilter())&#xA;    .pathFilter(new CustomPathFilter())&#xA;    .headerFilter(new CustomHeaderFilter())&#xA;    .bodyFilter(new CustomBodyFilter())&#xA;    .requestFilter(new CustomRequestFilter())&#xA;    .responseFilter(new CustomResponseFilter())&#xA;    .sink(new DefaultSink(&#xA;            new CustomHttpLogFormatter(),&#xA;            new CustomHttpLogWriter()&#xA;    ))&#xA;    .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Strategy&lt;/h3&gt; &#xA;&lt;p&gt;Logbook used to have a very rigid strategy how to do request/response logging:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requests/responses are logged separately&lt;/li&gt; &#xA; &lt;li&gt;Requests/responses are logged soon as possible&lt;/li&gt; &#xA; &lt;li&gt;Requests/responses are logged as a pair or not logged at all&lt;br&gt; (i.e. no partial logging of traffic)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Some of those restrictions could be mitigated with custom &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#writing&#34;&gt;&lt;code&gt;HttpLogWriter&lt;/code&gt;&lt;/a&gt; implementations, but they were never ideal.&lt;/p&gt; &#xA;&lt;p&gt;Starting with version 2.0 Logbook now comes with a &lt;a href=&#34;https://en.wikipedia.org/wiki/Strategy_pattern&#34;&gt;Strategy pattern&lt;/a&gt; at its core. Make sure you read the documentation of the &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/logbook-api/src/main/java/org/zalando/logbook/Strategy.java&#34;&gt;&lt;code&gt;Strategy&lt;/code&gt;&lt;/a&gt; interface to understand the implications.&lt;/p&gt; &#xA;&lt;p&gt;Logbook comes with some built-in strategies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/logbook-core/src/main/java/org/zalando/logbook/BodyOnlyIfStatusAtLeastStrategy.java&#34;&gt;&lt;code&gt;BodyOnlyIfStatusAtLeastStrategy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/logbook-core/src/main/java/org/zalando/logbook/StatusAtLeastStrategy.java&#34;&gt;&lt;code&gt;StatusAtLeastStrategy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/logbook-core/src/main/java/org/zalando/logbook/WithoutBodyStrategy.java&#34;&gt;&lt;code&gt;WithoutBodyStrategy&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Phases&lt;/h3&gt; &#xA;&lt;p&gt;Logbook works in several different phases:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#conditional&#34;&gt;Conditional&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#filtering&#34;&gt;Filtering&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#formatting&#34;&gt;Formatting&lt;/a&gt; and&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#writing&#34;&gt;Writing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Each phase is represented by one or more interfaces that can be used for customization. Every phase has a sensible default.&lt;/p&gt; &#xA;&lt;h4&gt;Conditional&lt;/h4&gt; &#xA;&lt;p&gt;Logging HTTP messages and including their bodies is a rather expensive task, so it makes a lot of sense to disable logging for certain requests. A common use case would be to ignore &lt;em&gt;health check&lt;/em&gt; requests from a load balancer, or any request to management endpoints typically issued by developers.&lt;/p&gt; &#xA;&lt;p&gt;Defining a condition is as easy as writing a special &lt;code&gt;Predicate&lt;/code&gt; that decides whether a request (and its corresponding response) should be logged or not. Alternatively you can use and combine predefined predicates:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Logbook logbook = Logbook.builder()&#xA;    .condition(exclude(&#xA;        requestTo(&#34;/health&#34;),&#xA;        requestTo(&#34;/admin/**&#34;),&#xA;        contentType(&#34;application/octet-stream&#34;),&#xA;        header(&#34;X-Secret&#34;, newHashSet(&#34;1&#34;, &#34;true&#34;)::contains)))&#xA;    .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Exclusion patterns, e.g. &lt;code&gt;/admin/**&lt;/code&gt;, are loosely following &lt;a href=&#34;https://ant.apache.org/manual/dirtasks.html#patterns&#34;&gt;Ant&#39;s style of path patterns&lt;/a&gt; without taking the the query string of the URL into consideration.&lt;/p&gt; &#xA;&lt;h4&gt;Filtering&lt;/h4&gt; &#xA;&lt;p&gt;The goal of &lt;em&gt;Filtering&lt;/em&gt; is to prevent the logging of certain sensitive parts of HTTP requests and responses. This usually includes the &lt;em&gt;Authorization&lt;/em&gt; header, but could also apply to certain plaintext query or form parameters — e.g. &lt;em&gt;password&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Logbook supports different types of filters:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Operates on&lt;/th&gt; &#xA;   &lt;th&gt;Applies to&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;QueryFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Query string&lt;/td&gt; &#xA;   &lt;td&gt;request&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;access_token&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PathFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path&lt;/td&gt; &#xA;   &lt;td&gt;request&lt;/td&gt; &#xA;   &lt;td&gt;n/a&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HeaderFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Header (single key-value pair)&lt;/td&gt; &#xA;   &lt;td&gt;both&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BodyFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Content-Type and body&lt;/td&gt; &#xA;   &lt;td&gt;both&lt;/td&gt; &#xA;   &lt;td&gt;json: &lt;code&gt;access_token&lt;/code&gt; and &lt;code&gt;refresh_token&lt;/code&gt;&lt;br&gt; form: &lt;code&gt;client_secret&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;RequestFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;request&lt;/td&gt; &#xA;   &lt;td&gt;Replace binary, multipart and stream bodies.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ResponseFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;response&lt;/td&gt; &#xA;   &lt;td&gt;Replace binary, multipart and stream bodies.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;QueryFilter&lt;/code&gt;, &lt;code&gt;PathFilter&lt;/code&gt;, &lt;code&gt;HeaderFilter&lt;/code&gt; and &lt;code&gt;BodyFilter&lt;/code&gt; are relatively high-level and should cover all needs in ~90% of all cases. For more complicated setups one should fallback to the low-level variants, i.e. &lt;code&gt;RequestFilter&lt;/code&gt; and &lt;code&gt;ResponseFilter&lt;/code&gt; respectively (in conjunction with &lt;code&gt;ForwardingHttpRequest&lt;/code&gt;/&lt;code&gt;ForwardingHttpResponse&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;You can configure filters like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import static org.zalando.logbook.core.HeaderFilters.authorization;&#xA;import static org.zalando.logbook.core.HeaderFilters.eachHeader;&#xA;import static org.zalando.logbook.core.QueryFilters.accessToken;&#xA;import static org.zalando.logbook.core.QueryFilters.replaceQuery;&#xA;&#xA;Logbook logbook = Logbook.builder()&#xA;        .requestFilter(RequestFilters.replaceBody(message -&amp;gt; contentType(&#34;audio/*&#34;).test(message) ? &#34;mmh mmh mmh mmh&#34; : null))&#xA;        .responseFilter(ResponseFilters.replaceBody(message -&amp;gt; contentType(&#34;*/*-stream&#34;).test(message) ? &#34;It just keeps going and going...&#34; : null))&#xA;        .queryFilter(accessToken())&#xA;        .queryFilter(replaceQuery(&#34;password&#34;, &#34;&amp;lt;secret&amp;gt;&#34;))&#xA;        .headerFilter(authorization())&#xA;        .headerFilter(eachHeader(&#34;X-Secret&#34;::equalsIgnoreCase, &#34;&amp;lt;secret&amp;gt;&#34;))&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can configure as many filters as you want - they will run consecutively.&lt;/p&gt; &#xA;&lt;h5&gt;JsonPath body filtering (experimental)&lt;/h5&gt; &#xA;&lt;p&gt;You can apply &lt;a href=&#34;https://github.com/json-path/JsonPath&#34;&gt;JSON Path&lt;/a&gt; filtering to JSON bodies. Here are some examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import static org.zalando.logbook.json.JsonPathBodyFilters.jsonPath;&#xA;import static java.util.regex.Pattern.compile;&#xA;&#xA;Logbook logbook = Logbook.builder()&#xA;        .bodyFilter(jsonPath(&#34;$.password&#34;).delete())&#xA;        .bodyFilter(jsonPath(&#34;$.active&#34;).replace(&#34;unknown&#34;))&#xA;        .bodyFilter(jsonPath(&#34;$.address&#34;).replace(&#34;X&#34;))&#xA;        .bodyFilter(jsonPath(&#34;$.name&#34;).replace(compile(&#34;^(\\w).+&#34;), &#34;$1.&#34;))&#xA;        .bodyFilter(jsonPath(&#34;$.friends.*.name&#34;).replace(compile(&#34;^(\\w).+&#34;), &#34;$1.&#34;))&#xA;        .bodyFilter(jsonPath(&#34;$.grades.*&#34;).replace(1.0))&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Take a look at the following example, before and after filtering was applied:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Before&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: 1,&#xA;  &#34;name&#34;: &#34;Alice&#34;,&#xA;  &#34;password&#34;: &#34;s3cr3t&#34;,&#xA;  &#34;active&#34;: true,&#xA;  &#34;address&#34;: &#34;Anhalter Straße 17 13, 67278 Bockenheim an der Weinstraße&#34;,&#xA;  &#34;friends&#34;: [&#xA;    {&#xA;      &#34;id&#34;: 2,&#xA;      &#34;name&#34;: &#34;Bob&#34;&#xA;    },&#xA;    {&#xA;      &#34;id&#34;: 3,&#xA;      &#34;name&#34;: &#34;Charlie&#34;&#xA;    }&#xA;  ],&#xA;  &#34;grades&#34;: {&#xA;    &#34;Math&#34;: 1.0,&#xA;    &#34;English&#34;: 2.2,&#xA;    &#34;Science&#34;: 1.9,&#xA;    &#34;PE&#34;: 4.0&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;After&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: 1,&#xA;  &#34;name&#34;: &#34;Alice&#34;,&#xA;  &#34;active&#34;: &#34;unknown&#34;,&#xA;  &#34;address&#34;: &#34;XXX&#34;,&#xA;  &#34;friends&#34;: [&#xA;    {&#xA;      &#34;id&#34;: 2,&#xA;      &#34;name&#34;: &#34;B.&#34;&#xA;    },&#xA;    {&#xA;      &#34;id&#34;: 3,&#xA;      &#34;name&#34;: &#34;C.&#34;&#xA;    }&#xA;  ],&#xA;  &#34;grades&#34;: {&#xA;    &#34;Math&#34;: 1.0,&#xA;    &#34;English&#34;: 1.0,&#xA;    &#34;Science&#34;: 1.0,&#xA;    &#34;PE&#34;: 1.0&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Correlation&lt;/h4&gt; &#xA;&lt;p&gt;Logbook uses a &lt;em&gt;correlation id&lt;/em&gt; to correlate requests and responses. This allows match-related requests and responses that would usually be located in different places in the log file.&lt;/p&gt; &#xA;&lt;p&gt;If the default implementation of the correlation id is insufficient for your use case, you may provide a custom implementation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Logbook logbook = Logbook.builder()&#xA;    .correlationId(new CustomCorrelationId())&#xA;    .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Formatting&lt;/h4&gt; &#xA;&lt;p&gt;&lt;em&gt;Formatting&lt;/em&gt; defines how requests and responses will be transformed to strings basically. Formatters do &lt;strong&gt;not&lt;/strong&gt; specify where requests and responses are logged to — writers do that work.&lt;/p&gt; &#xA;&lt;p&gt;Logbook comes with two different default formatters: &lt;em&gt;HTTP&lt;/em&gt; and &lt;em&gt;JSON&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;HTTP&lt;/h5&gt; &#xA;&lt;p&gt;&lt;em&gt;HTTP&lt;/em&gt; is the default formatting style, provided by the &lt;code&gt;DefaultHttpLogFormatter&lt;/code&gt;. It is primarily designed to be used for local development and debugging, not for production use. This is because it’s not as readily machine-readable as JSON.&lt;/p&gt; &#xA;&lt;h6&gt;Request&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;Incoming Request: 2d66e4bc-9a0d-11e5-a84c-1f39510f0d6b&#xA;GET http://example.org/test HTTP/1.1&#xA;Accept: application/json&#xA;Host: localhost&#xA;Content-Type: text/plain&#xA;&#xA;Hello world!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Response&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;Outgoing Response: 2d66e4bc-9a0d-11e5-a84c-1f39510f0d6b&#xA;Duration: 25 ms&#xA;HTTP/1.1 200&#xA;Content-Type: application/json&#xA;&#xA;{&#34;value&#34;:&#34;Hello world!&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;JSON&lt;/h5&gt; &#xA;&lt;p&gt;&lt;em&gt;JSON&lt;/em&gt; is an alternative formatting style, provided by the &lt;code&gt;JsonHttpLogFormatter&lt;/code&gt;. Unlike HTTP, it is primarily designed for production use — parsers and log consumers can easily consume it.&lt;/p&gt; &#xA;&lt;p&gt;Requires the following dependency:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;logbook-json&amp;lt;/artifactId&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Request&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;origin&#34;: &#34;remote&#34;,&#xA;  &#34;type&#34;: &#34;request&#34;,&#xA;  &#34;correlation&#34;: &#34;2d66e4bc-9a0d-11e5-a84c-1f39510f0d6b&#34;,&#xA;  &#34;protocol&#34;: &#34;HTTP/1.1&#34;,&#xA;  &#34;sender&#34;: &#34;127.0.0.1&#34;,&#xA;  &#34;method&#34;: &#34;GET&#34;,&#xA;  &#34;uri&#34;: &#34;http://example.org/test&#34;,&#xA;  &#34;host&#34;: &#34;example.org&#34;,&#xA;  &#34;path&#34;: &#34;/test&#34;,&#xA;  &#34;scheme&#34;: &#34;http&#34;,&#xA;  &#34;port&#34;: null,&#xA;  &#34;headers&#34;: {&#xA;    &#34;Accept&#34;: [&#34;application/json&#34;],&#xA;    &#34;Content-Type&#34;: [&#34;text/plain&#34;]&#xA;  },&#xA;  &#34;body&#34;: &#34;Hello world!&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Response&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;origin&#34;: &#34;local&#34;,&#xA;  &#34;type&#34;: &#34;response&#34;,&#xA;  &#34;correlation&#34;: &#34;2d66e4bc-9a0d-11e5-a84c-1f39510f0d6b&#34;,&#xA;  &#34;duration&#34;: 25,&#xA;  &#34;protocol&#34;: &#34;HTTP/1.1&#34;,&#xA;  &#34;status&#34;: 200,&#xA;  &#34;headers&#34;: {&#xA;    &#34;Content-Type&#34;: [&#34;text/plain&#34;]&#xA;  },&#xA;  &#34;body&#34;: &#34;Hello world!&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: Bodies of type &lt;code&gt;application/json&lt;/code&gt; (and &lt;code&gt;application/*+json&lt;/code&gt;) will be &lt;em&gt;inlined&lt;/em&gt; into the resulting JSON tree. I.e., a JSON response body will &lt;strong&gt;not&lt;/strong&gt; be escaped and represented as a string:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;origin&#34;: &#34;local&#34;,&#xA;  &#34;type&#34;: &#34;response&#34;,&#xA;  &#34;correlation&#34;: &#34;2d66e4bc-9a0d-11e5-a84c-1f39510f0d6b&#34;,&#xA;  &#34;duration&#34;: 25,&#xA;  &#34;protocol&#34;: &#34;HTTP/1.1&#34;,&#xA;  &#34;status&#34;: 200,&#xA;  &#34;headers&#34;: {&#xA;    &#34;Content-Type&#34;: [&#34;application/json&#34;]&#xA;  },&#xA;  &#34;body&#34;: {&#xA;    &#34;greeting&#34;: &#34;Hello, world!&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Common Log Format&lt;/h5&gt; &#xA;&lt;p&gt;The Common Log Format (&lt;a href=&#34;https://httpd.apache.org/docs/trunk/logs.html#common&#34;&gt;CLF&lt;/a&gt;) is a standardized text file format used by web servers when generating server log files. The format is supported via the &lt;code&gt;CommonsLogFormatSink&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;185.85.220.253 - - [02/Aug/2019:08:16:41 0000] &#34;GET /search?q=zalando HTTP/1.1&#34; 200 -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Extended Log Format&lt;/h5&gt; &#xA;&lt;p&gt;The Extended Log Format (&lt;a href=&#34;https://en.wikipedia.org/wiki/Extended_Log_Format&#34;&gt;ELF&lt;/a&gt;) is a standardised text file format, like Common Log Format (CLF), that is used by web servers when generating log files, but ELF files provide more information and flexibility. The format is supported via the &lt;code&gt;ExtendedLogFormatSink&lt;/code&gt;. Also see &lt;a href=&#34;https://www.w3.org/TR/WD-logfile.html&#34;&gt;W3C&lt;/a&gt; document.&lt;/p&gt; &#xA;&lt;p&gt;Default fields:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;date time c-ip s-dns cs-method cs-uri-stem cs-uri-query sc-status sc-bytes cs-bytes time-taken cs-protocol cs(User-Agent) cs(Cookie) cs(Referrer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default log output example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;2019-08-02 08:16:41 185.85.220.253 localhost POST /search ?q=zalando 200 21 20 0.125 HTTP/1.1 &#34;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0&#34; &#34;name=value&#34; &#34;https://example.com/page?q=123&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Users may override default fields with their custom fields through the constructor of &lt;code&gt;ExtendedLogFormatSink&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;new ExtendedLogFormatSink(new DefaultHttpLogWriter(),&#34;date time cs(Custom-Request-Header) sc(Custom-Response-Header)&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Http header fields: &lt;code&gt;cs(Any-Header)&lt;/code&gt; and &lt;code&gt;sc(Any-Header)&lt;/code&gt;, users could specify any headers they want to extract from the request.&lt;/p&gt; &#xA;&lt;p&gt;Other supported fields are listed in the value of &lt;code&gt;ExtendedLogFormatSink.Field&lt;/code&gt;, which can be put in the custom field expression.&lt;/p&gt; &#xA;&lt;h5&gt;cURL&lt;/h5&gt; &#xA;&lt;p&gt;&lt;em&gt;cURL&lt;/em&gt; is an alternative formatting style, provided by the &lt;code&gt;CurlHttpLogFormatter&lt;/code&gt; which will render requests as executable &lt;a href=&#34;https://curl.haxx.se/&#34;&gt;&lt;code&gt;cURL&lt;/code&gt;&lt;/a&gt; commands. Unlike JSON, it is primarily designed for humans.&lt;/p&gt; &#xA;&lt;h6&gt;Request&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -v -X GET &#39;http://localhost/test&#39; -H &#39;Accept: application/json&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Response&lt;/h6&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#http&#34;&gt;HTTP&lt;/a&gt; or provide own fallback for responses:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;new CurlHttpLogFormatter(new JsonHttpLogFormatter());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Splunk&lt;/h5&gt; &#xA;&lt;p&gt;&lt;em&gt;Splunk&lt;/em&gt; is an alternative formatting style, provided by the &lt;code&gt;SplunkHttpLogFormatter&lt;/code&gt; which will render requests and response as key-value pairs.&lt;/p&gt; &#xA;&lt;h6&gt;Request&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;origin=remote type=request correlation=2d66e4bc-9a0d-11e5-a84c-1f39510f0d6b protocol=HTTP/1.1 sender=127.0.0.1 method=POST uri=http://example.org/test host=example.org scheme=http port=null path=/test headers={Accept=[application/json], Content-Type=[text/plain]} body=Hello world!&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Response&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;origin=local type=response correlation=2d66e4bc-9a0d-11e5-a84c-1f39510f0d6b duration=25 protocol=HTTP/1.1 status=200 headers={Content-Type=[text/plain]} body=Hello world!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Writing&lt;/h4&gt; &#xA;&lt;p&gt;Writing defines where formatted requests and responses are written to. Logbook comes with three implementations: Logger, Stream and Chunking.&lt;/p&gt; &#xA;&lt;h5&gt;Logger&lt;/h5&gt; &#xA;&lt;p&gt;By default, requests and responses are logged with an &lt;em&gt;slf4j&lt;/em&gt; logger that uses the &lt;code&gt;org.zalando.logbook.Logbook&lt;/code&gt; category and the log level &lt;code&gt;trace&lt;/code&gt;. This can be customized:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Logbook logbook = Logbook.builder()&#xA;    .sink(new DefaultSink(&#xA;            new DefaultHttpLogFormatter(),&#xA;            new DefaultHttpLogWriter()&#xA;    ))&#xA;    .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Stream&lt;/h5&gt; &#xA;&lt;p&gt;An alternative implementation is to log requests and responses to a &lt;code&gt;PrintStream&lt;/code&gt;, e.g. &lt;code&gt;System.out&lt;/code&gt; or &lt;code&gt;System.err&lt;/code&gt;. This is usually a bad choice for running in production, but can sometimes be useful for short-term local development and/or investigation.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Logbook logbook = Logbook.builder()&#xA;    .sink(new DefaultSink(&#xA;            new DefaultHttpLogFormatter(),&#xA;            new StreamHttpLogWriter(System.err)&#xA;    ))&#xA;    .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Chunking&lt;/h5&gt; &#xA;&lt;p&gt;The &lt;code&gt;ChunkingSink&lt;/code&gt; will split long messages into smaller chunks and will write them individually while delegating to another sink:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Logbook logbook = Logbook.builder()&#xA;    .sink(new ChunkingSink(sink, 1000))&#xA;    .build();&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Sink&lt;/h4&gt; &#xA;&lt;p&gt;The combination of &lt;code&gt;HttpLogFormatter&lt;/code&gt; and &lt;code&gt;HttpLogWriter&lt;/code&gt; suits most use cases well, but it has limitations. Implementing the &lt;code&gt;Sink&lt;/code&gt; interface directly allows for more sophisticated use cases, e.g. writing requests/responses to a structured persistent storage like a database.&lt;/p&gt; &#xA;&lt;p&gt;Multiple sinks can be combined into one using the &lt;code&gt;CompositeSink&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Servlet&lt;/h3&gt; &#xA;&lt;p&gt;You’ll have to register the &lt;code&gt;LogbookFilter&lt;/code&gt; as a &lt;code&gt;Filter&lt;/code&gt; in your filter chain — either in your &lt;code&gt;web.xml&lt;/code&gt; file (please note that the xml approach will use all the defaults and is not configurable):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;filter&amp;gt;&#xA;    &amp;lt;filter-name&amp;gt;LogbookFilter&amp;lt;/filter-name&amp;gt;&#xA;    &amp;lt;filter-class&amp;gt;org.zalando.logbook.servlet.LogbookFilter&amp;lt;/filter-class&amp;gt;&#xA;&amp;lt;/filter&amp;gt;&#xA;&amp;lt;filter-mapping&amp;gt;&#xA;    &amp;lt;filter-name&amp;gt;LogbookFilter&amp;lt;/filter-name&amp;gt;&#xA;    &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;&#xA;    &amp;lt;dispatcher&amp;gt;REQUEST&amp;lt;/dispatcher&amp;gt;&#xA;    &amp;lt;dispatcher&amp;gt;ASYNC&amp;lt;/dispatcher&amp;gt;&#xA;&amp;lt;/filter-mapping&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or programmatically, via the &lt;code&gt;ServletContext&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;context.addFilter(&#34;LogbookFilter&#34;, new LogbookFilter(logbook))&#xA;    .addMappingForUrlPatterns(EnumSet.of(REQUEST, ASYNC), true, &#34;/*&#34;); &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Beware&lt;/strong&gt;: The &lt;code&gt;ERROR&lt;/code&gt; dispatch is not supported. You&#39;re strongly advised to produce error responses within the &lt;code&gt;REQUEST&lt;/code&gt; or &lt;code&gt;ASNYC&lt;/code&gt; dispatch.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;LogbookFilter&lt;/code&gt; will, by default, treat requests with a &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; body not different from any other request, i.e you will see the request body in the logs. The downside of this approach is that you won&#39;t be able to use any of the &lt;code&gt;HttpServletRequest.getParameter*(..)&lt;/code&gt; methods. See issue &lt;a href=&#34;https://raw.githubusercontent.com/zalando/issues/94&#34;&gt;#94&lt;/a&gt; for some more details.&lt;/p&gt; &#xA;&lt;h4&gt;Form Requests&lt;/h4&gt; &#xA;&lt;p&gt;As of Logbook 1.5.0, you can now specify one of three strategies that define how Logbook deals with this situation by using the &lt;code&gt;logbook.servlet.form-request&lt;/code&gt; system property:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Value&lt;/th&gt; &#xA;   &lt;th&gt;Pros&lt;/th&gt; &#xA;   &lt;th&gt;Cons&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;body&lt;/code&gt; (default)&lt;/td&gt; &#xA;   &lt;td&gt;Body is logged&lt;/td&gt; &#xA;   &lt;td&gt;Downstream code can &lt;strong&gt;not use &lt;code&gt;getParameter*()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;parameter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Body is logged (but it&#39;s reconstructed from parameters)&lt;/td&gt; &#xA;   &lt;td&gt;Downstream code can &lt;strong&gt;not use &lt;code&gt;getInputStream()&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;off&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Downstream code can decide whether to use &lt;code&gt;getInputStream()&lt;/code&gt; or &lt;code&gt;getParameter*()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Body is &lt;strong&gt;not logged&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Security&lt;/h4&gt; &#xA;&lt;p&gt;Secure applications usually need a slightly different setup. You should generally avoid logging unauthorized requests, especially the body, because it quickly allows attackers to flood your logfile — and, consequently, your precious disk space. Assuming that your application handles authorization inside another filter, you have two choices:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Don&#39;t log unauthorized requests&lt;/li&gt; &#xA; &lt;li&gt;Log unauthorized requests without the request body&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can easily achieve the former setup by placing the &lt;code&gt;LogbookFilter&lt;/code&gt; after your security filter. The latter is a little bit more sophisticated. You’ll need two &lt;code&gt;LogbookFilter&lt;/code&gt; instances — one before your security filter, and one after it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;context.addFilter(&#34;SecureLogbookFilter&#34;, new SecureLogbookFilter(logbook))&#xA;    .addMappingForUrlPatterns(EnumSet.of(REQUEST, ASYNC), true, &#34;/*&#34;);&#xA;context.addFilter(&#34;securityFilter&#34;, new SecurityFilter())&#xA;    .addMappingForUrlPatterns(EnumSet.of(REQUEST), true, &#34;/*&#34;);&#xA;context.addFilter(&#34;LogbookFilter&#34;, new LogbookFilter(logbook))&#xA;    .addMappingForUrlPatterns(EnumSet.of(REQUEST, ASYNC), true, &#34;/*&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The first logbook filter will log unauthorized requests &lt;strong&gt;only&lt;/strong&gt;. The second filter will log authorized requests, as always.&lt;/p&gt; &#xA;&lt;h3&gt;HTTP Client&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-httpclient&lt;/code&gt; module contains both an &lt;code&gt;HttpRequestInterceptor&lt;/code&gt; and an &lt;code&gt;HttpResponseInterceptor&lt;/code&gt; to use with the &lt;code&gt;HttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;CloseableHttpClient client = HttpClientBuilder.create()&#xA;        .addInterceptorFirst(new LogbookHttpRequestInterceptor(logbook))&#xA;        .addInterceptorFirst(new LogbookHttpResponseInterceptor())&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since the &lt;code&gt;LogbookHttpResponseInterceptor&lt;/code&gt; is incompatible with the &lt;code&gt;HttpAsyncClient&lt;/code&gt; there is another way to log responses:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;CloseableHttpAsyncClient client = HttpAsyncClientBuilder.create()&#xA;        .addInterceptorFirst(new LogbookHttpRequestInterceptor(logbook))&#xA;        .build();&#xA;        &#xA;// and then wrap your response consumer&#xA;client.execute(producer, new LogbookHttpAsyncResponseConsumer&amp;lt;&amp;gt;(consumer), callback)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;HTTP Client 5&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-httpclient5&lt;/code&gt; module contains an &lt;code&gt;ExecHandler&lt;/code&gt; to use with the &lt;code&gt;HttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;CloseableHttpClient client = HttpClientBuilder.create()&#xA;        .addExecInterceptorFirst(&#34;Logbook&#34;, new LogbookHttpExecHandler(logbook))&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Handler should be added first, such that a compression is performed after logging and decompression is performed before logging.&lt;/p&gt; &#xA;&lt;p&gt;To avoid a breaking change, there is also an &lt;code&gt;HttpRequestInterceptor&lt;/code&gt; and an &lt;code&gt;HttpResponseInterceptor&lt;/code&gt; to use with the &lt;code&gt;HttpClient&lt;/code&gt;, which works fine as long as compression (or other ExecHandlers) is not used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;CloseableHttpClient client = HttpClientBuilder.create()&#xA;        .addRequestInterceptorFirst(new LogbookHttpRequestInterceptor(logbook))&#xA;        .addResponseInterceptorFirst(new LogbookHttpResponseInterceptor())&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Since the &lt;code&gt;LogbookHttpResponseInterceptor&lt;/code&gt; is incompatible with the &lt;code&gt;HttpAsyncClient&lt;/code&gt; there is another way to log responses:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;CloseableHttpAsyncClient client = HttpAsyncClientBuilder.create()&#xA;        .addRequestInterceptorFirst(new LogbookHttpRequestInterceptor(logbook))&#xA;        .build();&#xA;        &#xA;// and then wrap your response consumer&#xA;client.execute(producer, new LogbookHttpAsyncResponseConsumer&amp;lt;&amp;gt;(consumer), callback)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JAX-RS&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-jaxrs&lt;/code&gt; module contains:&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;LogbookClientFilter&lt;/code&gt; to be used for applications making HTTP requests&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;client.register(new LogbookClientFilter(logbook));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A &lt;code&gt;LogbookServerFilter&lt;/code&gt; for be used with HTTP servers&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;resourceConfig.register(new LogbookServerFilter(logbook));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JDK HTTP Server&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-jdkserver&lt;/code&gt; module provides support for &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/jre/api/net/httpserver/spec/com/sun/net/httpserver/HttpServer.html&#34;&gt;JDK HTTP server&lt;/a&gt; and contains:&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;LogbookFilter&lt;/code&gt; to be used with the builtin server&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;httpServer.createContext(path,handler).getFilters().add(new LogbookFilter(logbook))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Netty&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-netty&lt;/code&gt; module contains:&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;LogbookClientHandler&lt;/code&gt; to be used with an &lt;code&gt;HttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;HttpClient httpClient =&#xA;        HttpClient.create()&#xA;                .doOnConnected(&#xA;                        (connection -&amp;gt; connection.addHandlerLast(new LogbookClientHandler(logbook)))&#xA;                );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A &lt;code&gt;LogbookServerHandler&lt;/code&gt; for use used with an &lt;code&gt;HttpServer&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;HttpServer httpServer =&#xA;        HttpServer.create()&#xA;                .doOnConnection(&#xA;                        connection -&amp;gt; connection.addHandlerLast(new LogbookServerHandler(logbook))&#xA;                );&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Spring WebFlux&lt;/h4&gt; &#xA;&lt;p&gt;Users of Spring WebFlux can pick any of the following options:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Programmatically create a &lt;code&gt;NettyWebServer&lt;/code&gt; (passing an &lt;code&gt;HttpServer&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Register a custom &lt;code&gt;NettyServerCustomizer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Programmatically create a &lt;code&gt;ReactorClientHttpConnector&lt;/code&gt; (passing an &lt;code&gt;HttpClient&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Register a custom &lt;code&gt;WebClientCustomizer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use separate connector-independent module &lt;code&gt;logbook-spring-webflux&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Micronaut&lt;/h4&gt; &#xA;&lt;p&gt;Users of Micronaut can follow the &lt;a href=&#34;https://docs.micronaut.io/snapshot/guide/index.html#nettyPipeline&#34;&gt;official docs&lt;/a&gt; on how to integrate Logbook with Micronaut.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Even though Quarkus and Vert.x use Netty under the hood, unfortunately neither of them allows accessing or customizing it (yet).&lt;/p&gt; &#xA;&lt;h3&gt;OkHttp v2.x&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-okhttp2&lt;/code&gt; module contains an &lt;code&gt;Interceptor&lt;/code&gt; to use with version 2.x of the &lt;code&gt;OkHttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;OkHttpClient client = new OkHttpClient();&#xA;client.networkInterceptors().add(new LogbookInterceptor(logbook));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re expecting gzip-compressed responses you need to register our &lt;code&gt;GzipInterceptor&lt;/code&gt; in addition. The transparent gzip support built into OkHttp will run after any network interceptor which forces logbook to log compressed binary responses.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;OkHttpClient client = new OkHttpClient();&#xA;client.networkInterceptors().add(new LogbookInterceptor(logbook));&#xA;client.networkInterceptors().add(new GzipInterceptor());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;OkHttp v3.x&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-okhttp&lt;/code&gt; module contains an &lt;code&gt;Interceptor&lt;/code&gt; to use with version 3.x of the &lt;code&gt;OkHttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;OkHttpClient client = new OkHttpClient.Builder()&#xA;        .addNetworkInterceptor(new LogbookInterceptor(logbook))&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re expecting gzip-compressed responses you need to register our &lt;code&gt;GzipInterceptor&lt;/code&gt; in addition. The transparent gzip support built into OkHttp will run after any network interceptor which forces logbook to log compressed binary responses.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;OkHttpClient client = new OkHttpClient.Builder()&#xA;        .addNetworkInterceptor(new LogbookInterceptor(logbook))&#xA;        .addNetworkInterceptor(new GzipInterceptor())&#xA;        .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ktor&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-ktor-client&lt;/code&gt; module contains:&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;LogbookClient&lt;/code&gt; to be used with an &lt;code&gt;HttpClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;private val client = HttpClient(CIO) {&#xA;    install(LogbookClient) {&#xA;        logbook = logbook&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-ktor-server&lt;/code&gt; module contains:&lt;/p&gt; &#xA;&lt;p&gt;A &lt;code&gt;LogbookServer&lt;/code&gt; to be used with an &lt;code&gt;Application&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;private val server = embeddedServer(CIO) {&#xA;    install(LogbookServer) {&#xA;        logbook = logbook&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can use &lt;code&gt;logbook-ktor&lt;/code&gt;, which ships both &lt;code&gt;logbook-ktor-client&lt;/code&gt; and &lt;code&gt;logbook-ktor-server&lt;/code&gt; modules.&lt;/p&gt; &#xA;&lt;h3&gt;Spring&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;logbook-spring&lt;/code&gt; module contains a &lt;code&gt;ClientHttpRequestInterceptor&lt;/code&gt; to use with &lt;code&gt;RestTemplate&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    LogbookClientHttpRequestInterceptor interceptor = new LogbookClientHttpRequestInterceptor(logbook);&#xA;    RestTemplate restTemplate = new RestTemplate();&#xA;    restTemplate.getInterceptors().add(interceptor);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Spring Boot Starter&lt;/h3&gt; &#xA;&lt;p&gt;Logbook comes with a convenient auto configuration for Spring Boot users. It sets up all of the following parts automatically with sensible defaults:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Servlet filter&lt;/li&gt; &#xA; &lt;li&gt;Second Servlet filter for unauthorized requests (if Spring Security is detected)&lt;/li&gt; &#xA; &lt;li&gt;Header-/Parameter-/Body-Filters&lt;/li&gt; &#xA; &lt;li&gt;HTTP-/JSON-style formatter&lt;/li&gt; &#xA; &lt;li&gt;Logging writer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Instead of declaring a dependency to &lt;code&gt;logbook-core&lt;/code&gt; declare one to the Spring Boot Starter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.zalando&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;logbook-spring-boot-starter&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;${logbook.version}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Every bean can be overridden and customized if needed, e.g. like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Bean&#xA;public BodyFilter bodyFilter() {&#xA;    return merge(&#xA;            defaultValue(), &#xA;            replaceJsonStringProperty(singleton(&#34;secret&#34;), &#34;XXX&#34;));&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/logbook-spring-boot-autoconfigure/src/main/java/org/zalando/logbook/autoconfigure/LogbookAutoConfiguration.java&#34;&gt;&lt;code&gt;LogbookAutoConfiguration&lt;/code&gt;&lt;/a&gt; or the following table to see a list of possible integration points:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FilterRegistrationBean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;secureLogbookFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Based on &lt;code&gt;LogbookFilter&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FilterRegistrationBean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbookFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Based on &lt;code&gt;LogbookFilter&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Logbook&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Based on condition, filters, formatter and writer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Predicate&amp;lt;HttpRequest&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;requestCondition&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;No filter; is later combined with &lt;code&gt;logbook.exclude&lt;/code&gt; and &lt;code&gt;logbook.exclude&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HeaderFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Based on &lt;code&gt;logbook.obfuscate.headers&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;PathFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Based on &lt;code&gt;logbook.obfuscate.paths&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;QueryFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Based on &lt;code&gt;logbook.obfuscate.parameters&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;BodyFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;BodyFilters.defaultValue()&lt;/code&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#filtering&#34;&gt;filtering&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;RequestFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;RequestFilters.defaultValue()&lt;/code&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#filtering&#34;&gt;filtering&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ResponseFilter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ResponseFilters.defaultValue()&lt;/code&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#filtering&#34;&gt;filtering&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Strategy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;DefaultStrategy&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Sink&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;DefaultSink&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HttpLogFormatter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;JsonHttpLogFormatter&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HttpLogWriter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;DefaultHttpLogWriter&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Multiple filters are merged into one.&lt;/p&gt; &#xA;&lt;h4&gt;Autoconfigured beans from &lt;code&gt;logbook-spring&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Some classes from &lt;code&gt;logbook-spring&lt;/code&gt; are included in the auto configuration.&lt;/p&gt; &#xA;&lt;p&gt;You can autowire &lt;code&gt;LogbookClientHttpRequestInterceptor&lt;/code&gt; with code like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;private final RestTemplate restTemplate;&#xA;MyClient(RestTemplateBuilder builder, LogbookClientHttpRequestInterceptor interceptor){&#xA;  this.restTemplate = builder&#xA;    .additionalInterceptors(interceptor)&#xA;    .build();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Configuration&lt;/h4&gt; &#xA;&lt;p&gt;The following tables show the available configuration:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Configuration&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.include&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Include only certain URLs (if defined)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.exclude&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exclude certain URLs (overrides &lt;code&gt;logbook.include&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.filter.enabled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable the &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#servlet&#34;&gt;&lt;code&gt;LogbookFilter&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.filter.form-request-mode&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Determines how &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#form-requests&#34;&gt;form requests&lt;/a&gt; are handled&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;body&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.secure-filter.enabled&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enable the &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#servlet&#34;&gt;&lt;code&gt;SecureLogbookFilter&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.format.style&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#formatting&#34;&gt;Formatting style&lt;/a&gt; (&lt;code&gt;http&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt; or &lt;code&gt;splunk&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;json&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.strategy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#strategy&#34;&gt;Strategy&lt;/a&gt; (&lt;code&gt;default&lt;/code&gt;, &lt;code&gt;status-at-least&lt;/code&gt;, &lt;code&gt;body-only-if-status-at-least&lt;/code&gt;, &lt;code&gt;without-body&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.minimum-status&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Minimum status to enable logging (&lt;code&gt;status-at-least&lt;/code&gt; and &lt;code&gt;body-only-if-status-at-least&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;400&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.obfuscate.headers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;List of header names that need obfuscation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[Authorization]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.obfuscate.paths&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;List of paths that need obfuscation. Check &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#filtering&#34;&gt;Filtering&lt;/a&gt; for syntax.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.obfuscate.parameters&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;List of parameter names that need obfuscation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;[access_token]&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.write.chunk-size&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Splits log lines into smaller chunks of size up-to &lt;code&gt;chunk-size&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt; (disabled)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;logbook.write.max-body-size&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Truncates the body up to &lt;code&gt;max-body-size&lt;/code&gt; and appends &lt;code&gt;...&lt;/code&gt;.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;-1&lt;/code&gt; (disabled)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;Example configuration&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;logbook:&#xA;  include:&#xA;    - /api/**&#xA;    - /actuator/**&#xA;  exclude:&#xA;    - /actuator/health&#xA;    - /api/admin/**&#xA;  filter.enabled: true&#xA;  secure-filter.enabled: true&#xA;  format.style: http&#xA;  strategy: body-only-if-status-at-least&#xA;  minimum-status: 400&#xA;  obfuscate:&#xA;    headers:&#xA;      - Authorization&#xA;      - X-Secret&#xA;    parameters:&#xA;      - access_token&#xA;      - password&#xA;  write:&#xA;    chunk-size: 1000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;logstash-logback-encoder&lt;/h3&gt; &#xA;&lt;p&gt;For basic Logback configuraton&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;appender name=&#34;STDOUT&#34; class=&#34;ch.qos.logback.core.ConsoleAppender&#34;&amp;gt;&#xA;    &amp;lt;encoder class=&#34;net.logstash.logback.encoder.LogstashEncoder&#34;/&amp;gt;&#xA;&amp;lt;/appender&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;configure Logbook with a &lt;code&gt;LogstashLogbackSink&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;HttpLogFormatter formatter = new JsonHttpLogFormatter();&#xA;LogstashLogbackSink sink = new LogstashLogbackSink(formatter);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;for outputs like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  &#34;@timestamp&#34; : &#34;2019-03-08T09:37:46.239+01:00&#34;,&#xA;  &#34;@version&#34; : &#34;1&#34;,&#xA;  &#34;message&#34; : &#34;GET http://localhost/test?limit=1&#34;,&#xA;  &#34;logger_name&#34; : &#34;org.zalando.logbook.Logbook&#34;,&#xA;  &#34;thread_name&#34; : &#34;main&#34;,&#xA;  &#34;level&#34; : &#34;TRACE&#34;,&#xA;  &#34;level_value&#34; : 5000,&#xA;  &#34;http&#34; : {&#xA;     // logbook request/response contents&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Known Issues&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The Logbook Servlet Filter interferes with downstream code using &lt;code&gt;getWriter&lt;/code&gt; and/or &lt;code&gt;getParameter*()&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/#servlet&#34;&gt;Servlet&lt;/a&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;The Logbook Servlet Filter does &lt;strong&gt;NOT&lt;/strong&gt; support &lt;code&gt;ERROR&lt;/code&gt; dispatch. You&#39;re strongly encouraged to not use it to produce error responses.&lt;/li&gt; &#xA; &lt;li&gt;The Logbook HTTP Client integration is handling gzip-compressed response entities incorrectly if the interceptor runs before a decompressing interceptor. Since logging compressed contents is not really helpful it&#39;s advised to register the logbook interceptor as the last interceptor in the chain.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Help with Logbook&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions, concerns, bug reports, etc., please file an issue in this repository&#39;s &lt;a href=&#34;https://github.com/zalando/logbook/issues&#34;&gt;Issue Tracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Involved/Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To contribute, simply make a pull request and add a brief description (1-2 sentences) of your addition or change. For more details, check the &lt;a href=&#34;https://raw.githubusercontent.com/zalando/logbook/main/.github/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://hc.apache.org/httpcomponents-client-4.5.x/logging.html&#34;&gt;Apache HttpClient Wire Logging&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Client-side only&lt;/li&gt; &#xA;   &lt;li&gt;Apache HttpClient exclusive&lt;/li&gt; &#xA;   &lt;li&gt;Support for HTTP bodies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-configure-accesslogs&#34;&gt;Spring Boot Access Logging&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Spring application only&lt;/li&gt; &#xA;   &lt;li&gt;Server-side only&lt;/li&gt; &#xA;   &lt;li&gt;Tomcat/Undertow/Jetty exclusive&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;No&lt;/strong&gt; support for HTTP bodies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tomcat.apache.org/tomcat-7.0-doc/config/filter.html#Request_Dumper_Filter&#34;&gt;Tomcat Request Dumper Filter&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Server-side only&lt;/li&gt; &#xA;   &lt;li&gt;Tomcat exclusive&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;No&lt;/strong&gt; support for HTTP bodies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://logback.qos.ch/access.html&#34;&gt;logback-access&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Server-side only&lt;/li&gt; &#xA;   &lt;li&gt;Any servlet container&lt;/li&gt; &#xA;   &lt;li&gt;Support for HTTP bodies&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits and References&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://licensebuttons.net/l/by-sa/3.0/80x15.png&#34; alt=&#34;Creative Commons (Attribution-Share Alike 3.0 Unported&#34;&gt; &lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Grand_Turk(34).jpg&#34;&gt;&lt;em&gt;Grand Turk, a replica of a three-masted 6th rate frigate from Nelson&#39;s days - logbook and charts&lt;/em&gt;&lt;/a&gt; by &lt;a href=&#34;https://commons.wikimedia.org/wiki/User:JoJan&#34;&gt;JoJan&lt;/a&gt; is licensed under a &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;Creative Commons (Attribution-Share Alike 3.0 Unported)&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>