<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-20T01:38:50Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apache/parquet-mr</title>
    <updated>2022-08-20T01:38:50Z</updated>
    <id>tag:github.com,2022-08-20:/apache/parquet-mr</id>
    <link href="https://github.com/apache/parquet-mr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Parquet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Parquet MR &lt;a href=&#34;https://github.com/apache/parquet-mr/actions&#34;&gt;&lt;img src=&#34;https://github.com/apache/parquet-mr/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Parquet-MR contains the java implementation of the &lt;a href=&#34;https://github.com/apache/parquet-format&#34;&gt;Parquet format&lt;/a&gt;. Parquet is a columnar storage format for Hadoop; it provides efficient storage and encoding of data. Parquet uses the &lt;a href=&#34;https://github.com/julienledem/redelm/wiki/The-striping-and-assembly-algorithms-from-the-Dremel-paper&#34;&gt;record shredding and assembly algorithm&lt;/a&gt; described in the Dremel paper to represent nested structures.&lt;/p&gt; &#xA;&lt;p&gt;You can find some details about the format and intended use cases in our &lt;a href=&#34;http://www.slideshare.net/julienledem/parquet-hadoop-summit-2013&#34;&gt;Hadoop Summit 2013 presentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Parquet-MR uses Maven to build and depends on the thrift compiler (protoc is now managed by maven plugin).&lt;/p&gt; &#xA;&lt;h3&gt;Install Thrift&lt;/h3&gt; &#xA;&lt;p&gt;To build and install the thrift compiler, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget -nv http://archive.apache.org/dist/thrift/0.16.0/thrift-0.16.0.tar.gz&#xA;tar xzf thrift-0.16.0.tar.gz&#xA;cd thrift-0.16.0&#xA;chmod +x ./configure&#xA;./configure --disable-libs&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you&#39;re on OSX and use homebrew, you can instead install Thrift 0.16.0 with &lt;code&gt;brew&lt;/code&gt; and ensure that it comes first in your &lt;code&gt;PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install thrift&#xA;export PATH=&#34;/usr/local/opt/thrift@0.16.0/bin:$PATH&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build Parquet with Maven&lt;/h3&gt; &#xA;&lt;p&gt;Once protobuf and thrift are available in your path, you can build the project by running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;LC_ALL=C mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Parquet is a very active project, and new features are being added quickly. Here are a few features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Type-specific encoding&lt;/li&gt; &#xA; &lt;li&gt;Hive integration (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;Pig integration&lt;/li&gt; &#xA; &lt;li&gt;Cascading integration (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;Crunch integration&lt;/li&gt; &#xA; &lt;li&gt;Apache Arrow integration&lt;/li&gt; &#xA; &lt;li&gt;Scrooge integration (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;Impala integration (non-nested)&lt;/li&gt; &#xA; &lt;li&gt;Java Map/Reduce API&lt;/li&gt; &#xA; &lt;li&gt;Native Avro support&lt;/li&gt; &#xA; &lt;li&gt;Native Thrift support&lt;/li&gt; &#xA; &lt;li&gt;Native Protocol Buffers support&lt;/li&gt; &#xA; &lt;li&gt;Complex structure support&lt;/li&gt; &#xA; &lt;li&gt;Run-length encoding (RLE)&lt;/li&gt; &#xA; &lt;li&gt;Bit Packing&lt;/li&gt; &#xA; &lt;li&gt;Adaptive dictionary encoding&lt;/li&gt; &#xA; &lt;li&gt;Predicate pushdown&lt;/li&gt; &#xA; &lt;li&gt;Column stats&lt;/li&gt; &#xA; &lt;li&gt;Delta encoding&lt;/li&gt; &#xA; &lt;li&gt;Index pages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Map/Reduce integration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/parquet-mr/raw/master/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetInputFormat.java&#34;&gt;Input&lt;/a&gt; and &lt;a href=&#34;https://github.com/apache/parquet-mr/raw/master/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/ParquetOutputFormat.java&#34;&gt;Output&lt;/a&gt; formats. Note that to use an Input or Output format, you need to implement a WriteSupport or ReadSupport class, which will implement the conversion of your object to and from a Parquet schema.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;ve implemented this for 2 popular data formats to provide a clean migration path as well:&lt;/p&gt; &#xA;&lt;h3&gt;Thrift&lt;/h3&gt; &#xA;&lt;p&gt;Thrift integration is provided by the &lt;a href=&#34;https://github.com/apache/parquet-mr/tree/master/parquet-thrift&#34;&gt;parquet-thrift&lt;/a&gt; sub-project.&lt;/p&gt; &#xA;&lt;h3&gt;Avro&lt;/h3&gt; &#xA;&lt;p&gt;Avro conversion is implemented via the &lt;a href=&#34;https://github.com/apache/parquet-mr/tree/master/parquet-avro&#34;&gt;parquet-avro&lt;/a&gt; sub-project.&lt;/p&gt; &#xA;&lt;h3&gt;Protobuf&lt;/h3&gt; &#xA;&lt;p&gt;Protobuf conversion is implemented via the &lt;a href=&#34;https://github.com/apache/parquet-mr/tree/master/parquet-protobuf&#34;&gt;parquet-protobuf&lt;/a&gt; sub-project.&lt;/p&gt; &#xA;&lt;h3&gt;Create your own objects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The ParquetOutputFormat can be provided a WriteSupport to write your own objects to an event based RecordConsumer.&lt;/li&gt; &#xA; &lt;li&gt;the ParquetInputFormat can be provided a ReadSupport to materialize your own objects by implementing a RecordMaterializer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the APIs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/parquet-mr/tree/master/parquet-column/src/main/java/org/apache/parquet/io/api&#34;&gt;Record conversion API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/parquet-mr/tree/master/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/api&#34;&gt;Hadoop API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Apache Pig integration&lt;/h2&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://github.com/apache/parquet-mr/raw/master/parquet-pig/src/main/java/org/apache/parquet/pig/ParquetLoader.java&#34;&gt;Loader&lt;/a&gt; and a &lt;a href=&#34;https://github.com/apache/parquet-mr/raw/master/parquet-pig/src/main/java/org/apache/parquet/pig/ParquetStorer.java&#34;&gt;Storer&lt;/a&gt; are provided to read and write Parquet files with Apache Pig&lt;/p&gt; &#xA;&lt;p&gt;Storing data into Parquet in Pig is simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-- options you might want to fiddle with&#xA;SET parquet.page.size 1048576 -- default. this is your min read/write unit.&#xA;SET parquet.block.size 134217728 -- default. your memory budget for buffering data&#xA;SET parquet.compression lzo -- or you can use none, gzip, snappy&#xA;STORE mydata into &#39;/some/path&#39; USING parquet.pig.ParquetStorer;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reading in Pig is also simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mydata = LOAD &#39;/some/path&#39; USING parquet.pig.ParquetLoader();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the data was stored using Pig, things will &#34;just work&#34;. If the data was stored using another method, you will need to provide the Pig schema equivalent to the data you stored (you can also write the schema to the file footer while writing it -- but that&#39;s pretty advanced). We will provide a basic automatic schema conversion soon.&lt;/p&gt; &#xA;&lt;h2&gt;Hive integration&lt;/h2&gt; &#xA;&lt;p&gt;Hive integration is provided via the &lt;a href=&#34;https://github.com/apache/parquet-mr/tree/master/parquet-hive&#34;&gt;parquet-hive&lt;/a&gt; sub-project.&lt;/p&gt; &#xA;&lt;p&gt;Hive integration is now deprecated within the Parquet project. It is now maintained by Apache Hive.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;To run the unit tests: &lt;code&gt;mvn test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To build the jars: &lt;code&gt;mvn package&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The build runs in &lt;a href=&#34;https://github.com/apache/parquet-mr/actions&#34;&gt;GitHub Actions&lt;/a&gt;: &lt;a href=&#34;https://github.com/apache/parquet-mr/actions&#34;&gt;&lt;img src=&#34;https://github.com/apache/parquet-mr/workflows/Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Add Parquet as a dependency in Maven&lt;/h2&gt; &#xA;&lt;p&gt;The current release is version &lt;code&gt;1.12.0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;  &amp;lt;dependencies&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;      &amp;lt;groupId&amp;gt;org.apache.parquet&amp;lt;/groupId&amp;gt;&#xA;      &amp;lt;artifactId&amp;gt;parquet-common&amp;lt;/artifactId&amp;gt;&#xA;      &amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;      &amp;lt;groupId&amp;gt;org.apache.parquet&amp;lt;/groupId&amp;gt;&#xA;      &amp;lt;artifactId&amp;gt;parquet-encoding&amp;lt;/artifactId&amp;gt;&#xA;      &amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;      &amp;lt;groupId&amp;gt;org.apache.parquet&amp;lt;/groupId&amp;gt;&#xA;      &amp;lt;artifactId&amp;gt;parquet-column&amp;lt;/artifactId&amp;gt;&#xA;      &amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;      &amp;lt;groupId&amp;gt;org.apache.parquet&amp;lt;/groupId&amp;gt;&#xA;      &amp;lt;artifactId&amp;gt;parquet-hadoop&amp;lt;/artifactId&amp;gt;&#xA;      &amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;  &amp;lt;/dependencies&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;How To Contribute&lt;/h3&gt; &#xA;&lt;p&gt;We prefer to receive contributions in the form of GitHub pull requests. Please send pull requests against the &lt;a href=&#34;https://github.com/apache/parquet-mr&#34;&gt;parquet-mr&lt;/a&gt; Git repository. If you&#39;ve previously forked Parquet from its old location, you will need to add a remote or update your origin remote to &lt;a href=&#34;https://github.com/apache/parquet-mr.git&#34;&gt;https://github.com/apache/parquet-mr.git&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you are looking for some ideas on what to contribute, check out jira issues for this project labeled &lt;a href=&#34;https://issues.apache.org/jira/browse/PARQUET-5?jql=project%20%3D%20PARQUET%20and%20labels%20%3D%20pick-me-up%20and%20status%20%3D%20open&#34;&gt;&#34;pick-me-up&#34;&lt;/a&gt;. Comment on the issue and/or contact &lt;a href=&#34;http://mail-archives.apache.org/mod_mbox/parquet-dev/&#34;&gt;dev@parquet.apache.org&lt;/a&gt; with your questions and ideas.&lt;/p&gt; &#xA;&lt;p&gt;If you’d like to report a bug but don’t have time to fix it, you can still post it to our &lt;a href=&#34;https://issues.apache.org/jira/browse/PARQUET&#34;&gt;issue tracker&lt;/a&gt;, or email the mailing list &lt;a href=&#34;http://mail-archives.apache.org/mod_mbox/parquet-dev/&#34;&gt;dev@parquet.apache.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To contribute a patch:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Break your work into small, single-purpose patches if possible. It’s much harder to merge in a large change with a lot of disjoint features.&lt;/li&gt; &#xA; &lt;li&gt;Create a JIRA for your patch on the &lt;a href=&#34;https://issues.apache.org/jira/browse/PARQUET&#34;&gt;Parquet Project JIRA&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Submit the patch as a GitHub pull request against the master branch. For a tutorial, see the GitHub guides on forking a repo and sending a pull request. Prefix your pull request name with the JIRA name (ex: &lt;a href=&#34;https://github.com/apache/parquet-mr/pull/240&#34;&gt;https://github.com/apache/parquet-mr/pull/240&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Make sure that your code passes the unit tests. You can run the tests with &lt;code&gt;mvn test&lt;/code&gt; in the root directory.&lt;/li&gt; &#xA; &lt;li&gt;Add new unit tests for your code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;We tend to do fairly close readings of pull requests, and you may get a lot of comments. Some common issues that are not code structure related, but still important:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use 2 spaces for whitespace. Not tabs, not 4 spaces. The number of the spacing shall be 2.&lt;/li&gt; &#xA; &lt;li&gt;Give your operators some room. Not &lt;code&gt;a+b&lt;/code&gt; but &lt;code&gt;a + b&lt;/code&gt; and not &lt;code&gt;foo(int a,int b)&lt;/code&gt; but &lt;code&gt;foo(int a, int b)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Generally speaking, stick to the &lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/documentation/codeconvtoc-136057.html&#34;&gt;Sun Java Code Conventions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make sure tests pass!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Thank you for getting involved!&lt;/p&gt; &#xA;&lt;h2&gt;Authors and contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/parquet-mr/graphs/contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/parquet-mr/master/dev/COMMITTERS.md&#34;&gt;Committers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;We hold ourselves and the Parquet developer community to two codes of conduct:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apache.org/foundation/policies/conduct.html&#34;&gt;The Apache Software Foundation Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/code-of-conduct/raw/master/code-of-conduct.md&#34;&gt;The Twitter OSS Code of Conduct&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Discussions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mailing list: &lt;a href=&#34;http://mail-archives.apache.org/mod_mbox/parquet-dev/&#34;&gt;dev@parquet.apache.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Bug trackter: &lt;a href=&#34;https://issues.apache.org/jira/browse/PARQUET&#34;&gt;jira&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discussions also take place in github pull requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt; See also:&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>WeBankFinTech/DataSphereStudio</title>
    <updated>2022-08-20T01:38:50Z</updated>
    <id>tag:github.com,2022-08-20:/WeBankFinTech/DataSphereStudio</id>
    <link href="https://github.com/WeBankFinTech/DataSphereStudio" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DataSphereStudio is a one stop data application development&amp; management portal, covering scenarios including data exchange, desensitization/cleansing, analysis/mining, quality measurement, visualization, and task scheduling.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/images/en_US/readme/DSS_logo.png&#34; alt=&#34;DSS&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/README-ZH.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;DataSphere Studio (DSS for short) is WeDataSphere, a one-stop data application development management portal developed by WeBank.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;With the pluggable integrated framework design and the Linkis, a computing middleware, DSS can easily integrate various upper-layer data application systems, making data development simple and easy to use.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;DataSphere Studio is positioned as a data application development portal, and the closed loop covers the entire process of data application development. With a unified UI, the workflow-like graphical drag-and-drop development experience meets the entire lifecycle of data application development from data import, desensitization cleaning, data analysis, data mining, quality inspection, visualization, scheduling to data output applications, etc.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;With the connection, reusability, and simplification capabilities of Linkis, DSS is born with financial-grade capabilities of high concurrency, high availability, multi-tenant isolation, and resource management.&lt;/p&gt; &#xA;&lt;h2&gt;UI preview&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Please be patient, it will take some time to load gif.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/images/en_US/readme/DSS_gif.gif&#34; alt=&#34;DSS-V1.0 GIF&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Core features&lt;/h2&gt; &#xA;&lt;h3&gt;1. One-stop, full-process application development management UI&lt;/h3&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;DSS is highly integrated. Currently integrated components include(&lt;strong&gt;DSS version compatibility for the above components, please visit: &lt;a href=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/README.md#4-integrated-data-application-components&#34;&gt;Compatibility list of integrated components&lt;/a&gt;&lt;/strong&gt;):&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;1. Data Development IDE Tool - &lt;a href=&#34;https://github.com/WeBankFinTech/Scriptis&#34;&gt;Scriptis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2. Data Visualization Tool - &lt;a href=&#34;https://github.com/WeBankFinTech/Visualis&#34;&gt;Visualis&lt;/a&gt; (Based on the open source project &lt;a href=&#34;https://github.com/edp963/davinci&#34;&gt;Davinci&lt;/a&gt; contributed by CreditEase)&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3. Data Quality Management Tool - &lt;a href=&#34;https://github.com/WeBankFinTech/Qualitis&#34;&gt;Qualitis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4. Workflow scheduling tool - &lt;a href=&#34;https://github.com/WeBankFinTech/Schedulis&#34;&gt;Schedulis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5. Data Exchange Tool - &lt;a href=&#34;https://github.com/WeBankFinTech/Exchangis&#34;&gt;Exchangis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;6. Data Api Service - &lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc/raw/main/en_US/Using_Document/DataApiService_Usage_Documentation.md&#34;&gt;DataApiService&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;7. Streaming Application Development Management Tool - &lt;a href=&#34;https://github.com/WeBankFinTech/Streamis&#34;&gt;Streamis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;8. One-stop machine Learning Platform - &lt;a href=&#34;https://github.com/WeBankFinTech/Prophecis&#34;&gt;Prophecis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;9. Workflow Task Scheduling Tool - DolphinScheduler (&lt;strong&gt;In Code Merging&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;10. Help documentation and beginner&#39;s guide - UserGuide (&lt;strong&gt;In Code Merging&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;11. Data Model Center - DataModelCenter (&lt;strong&gt;In development&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;DSS version compatibility for the above components, please visit: &lt;a href=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/README.md#4-integrated-data-application-components&#34;&gt;Compatibility list of integrated components&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;With a pluggable framework architecture, DSS is designed to allow users to quickly integrate new data application tools, or replace various tools that DSS has integrated. For example, replace Scriptis with Zeppelin, and replace Schedulis with DolphinScheduler...&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/images/en_US/readme/onestop.gif&#34; alt=&#34;DSS one-stop video&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. AppConn, based on Linkis，defines a unique design concept&lt;/h3&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;AppConn is the core concept that enables DSS to easily and quickly integrate various upper-layer web systems.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;AppConn, an application connector, defines a set of unified front-end and back-end three-level integration protocols, allowing external data application systems to easily and quickly becoming a part of DSS data application development.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;The three-level specifications of AppConn are: the first-level SSO specification, the second-level organizational structure specification, and the third-level development process specification.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;DSS arranges multiple AppConns in series to form a workflow that supports real-time execution and scheduled execution. Users can complete the entire process development of data applications with simple drag and drop operations.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Since AppConn is integrated with Linkis, the external data application system shares the capabilities of resource management, concurrent limiting, and high performance. AppConn also allows sharable context across system level and thus makes external data application completely gets away from application silos.&lt;/p&gt; &#xA;&lt;h3&gt;3. Workspace, as the management unit&lt;/h3&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;With Workspace as the management unit, it organizes and manages business applications of various data application systems, defines a set of common standards for collaborative development of workspaces across data application systems, and provides user role management capabilities.&lt;/p&gt; &#xA;&lt;h3&gt;4. Integrated data application components&lt;/h3&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;DSS has integrated a variety of upper-layer data application systems by implementing multiple AppConns, which can basically meet the data development needs of users.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;strong&gt;If desired, new data application systems can also be easily integrated to replace or enrich DSS&#39;s data application development process.&lt;/strong&gt; &lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc/raw/main/en_US/Development_Documentation/Third-party_System_Access_Development_Guide.md&#34;&gt;Click me to learn how to quickly integrate new application systems&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Component&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;DSS0.X compatible version (DSS0.9.1 recommended)&lt;/th&gt; &#xA;   &lt;th&gt;DSS1.0 compatible version (DSS1.1.0 recommended)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/apache/incubator-linkis&#34;&gt;&lt;strong&gt;Linkis&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Computing middleware Apache Linkis, by providing standard interfaces such as REST/WebSocket/JDBC/SDK, upper-layer applications can easily connect and access underlying engines such as MySQL/Spark/Hive/Presto/Flink.&lt;/td&gt; &#xA;   &lt;td&gt;Linkis0.11.0 is recommended (*&lt;em&gt;Released&lt;/em&gt; *)&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= Linkis1.1.1 (&lt;strong&gt;released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc/raw/main/en_US/Using_Document/DataApiService_Usage_Documentation.md&#34;&gt;&lt;strong&gt;DataApiService&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(DSS has built-in third-party application tools) data API service. The SQL script can be quickly published as a Restful interface, providing Rest access capability to the outside world.&lt;/td&gt; &#xA;   &lt;td&gt;Not supported&lt;/td&gt; &#xA;   &lt;td&gt;DSS1.1.0 recommended (&lt;strong&gt;released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio&#34;&gt;&lt;strong&gt;Scriptis&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(DSS has built-in third-party application tools) support online writing of SQL, Pyspark, HiveQL and other scripts, and submit to [Linkis](https ://github.com/WeBankFinTech/Linkis) data analysis web tool.&lt;/td&gt; &#xA;   &lt;td&gt;Recommended DSS0.9.1 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Recommended DSS1.1.0 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Schedulis&#34;&gt;&lt;strong&gt;Schedulis&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Workflow task scheduling system based on Azkaban secondary development, with financial-grade features such as high performance, high availability and multi-tenant resource isolation.&lt;/td&gt; &#xA;   &lt;td&gt;Recommended Schedulis0.6.1 (&lt;strong&gt;released&lt;/strong&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= Schedulis0.7.0 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;EventCheck&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(a third-party application tool built into DSS) provides signal communication capabilities across business, engineering, and workflow.&lt;/td&gt; &#xA;   &lt;td&gt;Recommended DSS0.9.1 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Recommended DSS1.1.0 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;SendEmail&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(DSS has built-in third-party application tools) provides the ability to send data, all the result sets of other workflow nodes can be sent by email&lt;/td&gt; &#xA;   &lt;td&gt;DSS0.9.1 is recommended (&lt;strong&gt;released&lt;/strong&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Recommended DSS1.1.0 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Qualitis&#34;&gt;&lt;strong&gt;Qualitis&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Data quality verification tool, providing data verification capabilities such as data integrity and correctness&lt;/td&gt; &#xA;   &lt;td&gt;Qualitis0.8.0 is recommended (**Released **)&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= Qualitis0.9.2 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Streamis&#34;&gt;&lt;strong&gt;Streamis&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Streaming application development management tool. It supports the release of Flink Jar and Flink SQL, and provides the development, debugging and production management capabilities of streaming applications, such as: start-stop, status monitoring, checkpoint, etc.&lt;/td&gt; &#xA;   &lt;td&gt;Not supported&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= Streamis0.2.0 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Prophecis&#34;&gt;&lt;strong&gt;Prophecis&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A one-stop machine learning platform that integrates multiple open source machine learning frameworks. Prophecis&#39; MLFlow can be connected to DSS workflow through AppConn.&lt;/td&gt; &#xA;   &lt;td&gt;Not supported&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= Prophecis 0.3.2 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Exchangis&#34;&gt;&lt;strong&gt;Exchangis&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A data exchange platform that supports data transmission between structured and unstructured heterogeneous data sources, the upcoming Exchangis1. 0, will work with DSS workflow&lt;/td&gt; &#xA;   &lt;td&gt;not supported&lt;/td&gt; &#xA;   &lt;td&gt;= Exchangis1.0.0 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Visualis&#34;&gt;&lt;strong&gt;Visualis&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A data visualization BI tool based on the secondary development of Davinci, an open source project of CreditEase, provides users with financial-level data visualization capabilities in terms of data security.&lt;/td&gt; &#xA;   &lt;td&gt;Recommended Visualis0.5.0&lt;/td&gt; &#xA;   &lt;td&gt;= Visualis1.0.0 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/apache/dolphinscheduler&#34;&gt;&lt;strong&gt;DolphinScheduler&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Apache DolphinScheduler, a distributed and easily scalable visual workflow task scheduling platform, supports one-click publishing of DSS workflows to DolphinScheduler.&lt;/td&gt; &#xA;   &lt;td&gt;Not supported&lt;/td&gt; &#xA;   &lt;td&gt;DolphinScheduler1.3.X (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;UserGuide&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(DSS will be built-in third-party application tools) contains help documents, beginner&#39;s guide, Dark mode skinning, etc.&lt;/td&gt; &#xA;   &lt;td&gt;Not supported&lt;/td&gt; &#xA;   &lt;td&gt;&amp;gt;= DSS1.1.0 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;DataModelCenter&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(the third-party application tool that DSS will build) mainly provides data warehouse planning, data model development and data asset management capabilities. Data warehouse planning includes subject domains, data warehouse hierarchies, modifiers, etc.; data model development includes indicators, dimensions, metrics, wizard-based table building, etc.; data assets are connected to Apache Atlas to provide data lineage capabilities .&lt;/td&gt; &#xA;   &lt;td&gt;Not supported&lt;/td&gt; &#xA;   &lt;td&gt;Planned in DSS1.2.0 (&lt;strong&gt;under development&lt;/strong&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;UserManager&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;(DSS has built-in third-party application tools) automatically initialize all user environments necessary for a new DSS user, including: creating Linux users, various user paths, directory authorization, etc.&lt;/td&gt; &#xA;   &lt;td&gt;Recommended DSS0.9.1 (&lt;strong&gt;Released&lt;/strong&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;Planning&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;&lt;strong&gt;Airflow&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supports publishing DSS workflows to Apache Airflow for scheduled scheduling.&lt;/td&gt; &#xA;   &lt;td&gt;PR not yet merged&lt;/td&gt; &#xA;   &lt;td&gt;Not supported&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Demo Trial environment&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;The function of DataSphere Studio supporting script execution has high security risks, and the isolation of the WeDataSphere Demo environment has not been completed. Considering that many users are inquiring about the Demo environment, we decided to first issue invitation codes to the community and accept trial applications from enterprises and organizations.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;If you want to try out the Demo environment, please join the DataSphere Studio community user group (&lt;strong&gt;Please refer to the end of the document&lt;/strong&gt;), and contact &lt;strong&gt;WeDataSphere Group Robot&lt;/strong&gt; to get an invitation code.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;DataSphereStudio Demo environment user registration page: &lt;a href=&#34;https://dss-open.wedatasphere.com/#/register&#34;&gt;click me to enter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;DataSphereStudio Demo environment login page: &lt;a href=&#34;https://dss-open.wedatasphere.com/#/login&#34;&gt;click me to enter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Please go to the &lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio/releases&#34;&gt;DSS Releases Page&lt;/a&gt; to download a compiled version or a source code package of DSS.&lt;/p&gt; &#xA;&lt;h2&gt;Compile and deploy&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Please follow &lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc/raw/main/en_US/Development_Documentation/Compilation_Documentation.md&#34;&gt;Compile Guide&lt;/a&gt; to compile DSS from source code.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Please refer to &lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc/raw/main/en_US/Installation_and_Deployment/DSS%26Linkis_one-click_deployment_document_stand-alone_version.md&#34;&gt;Deployment Documents&lt;/a&gt; to do the deployment.&lt;/p&gt; &#xA;&lt;h2&gt;Examples and Guidance&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;You can find examples and guidance for how to use DSS in &lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc/raw/main/en_US/Using_Document/DSS_User_Manual.md&#34;&gt;User Manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;For a complete list of documents for DSS1.0, see &lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc&#34;&gt;DSS-Doc&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;The following is the installation guide for DSS-related AppConn plugins:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Visualis/raw/master/visualis_docs/en_US/Visualis_appconn_install_en.md&#34;&gt;Visualis AppConn Plugin Installation Guide for DSS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc/raw/main/en_US/Installation_and_Deployment/Schedulis_Linkis_JobType_Installation_Documentation.md&#34;&gt;Schedulis AppConn Plugin Installation Guide for DSS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Qualitis/raw/master/docs/zh_CN/ch1/%E6%8E%A5%E5%85%A5%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%8C%87%E5%8D%97.md&#34;&gt;Qualitis AppConn Plugin Installation Guide for DSS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeDataSphere/Exchangis/raw/master/docs/en_US/ch1/exchangis_appconn_deploy_en.md&#34;&gt;Exchangis AppConn Plugin Installation Guide for DSS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Streamis/raw/main/docs/en_US/0.2.0/development/StreamisAppConnInstallationDocument.md&#34;&gt;Streamis AppConn Plugin Installation Guide for DSS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/Prophecis/raw/master/docs/zh_CN/Deployment_Documents/Prophecis%20Appconn%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3.md&#34;&gt;Prophecis AppConn Plugin Installation Guide for DSS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeBankFinTech/DataSphereStudio-Doc/raw/main/en_US/Installation_and_Deployment/DolphinScheduler_Plugin_Installation_Documentation.md&#34;&gt;DolphinScheduler AppConn Plugin Installation Guide for DSS&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/images/en_US/readme/architecture.png&#34; alt=&#34;DSS Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage Scenarios&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;DataSphere Studio is suitable for the following scenarios:&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;1. Scenarios in which big data platform capability is being prepared or initialized but no data application tools are available.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;2. Scenarios in which users already have big data foundation platform capabilities but with only a few data application tools.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;3. Scenarios in which users have the ability of big data foundation platform and comprehensive data application tools, but suffers strong isolation and and high learning costs because those tools have not been integrated together.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;4. Scenarios in which users have the capabilities of big data foundation platform and comprehensive data application tools. but lacks unified and standardized specifications, while a part of these tools have been integrated.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Contributions are always welcomed, we need more contributors to build DSS together. either code, or doc, or other supports that could help the community.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;For code and documentation contributions, please follow the contribution guide.&lt;/p&gt; &#xA;&lt;h2&gt;Communication&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;For any questions or suggestions, please kindly submit an issue.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;You can scan the QR code below to join our WeChat and QQ group to get more immediate response.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/images/en_US/readme/communication.png&#34; alt=&#34;communication&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Who is using DSS&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;We opened an issue for users to feedback and record who is using DSS.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Since the first release of DSS in 2019, it has accumulated more than 700 trial companies and 1000+ sandbox trial users, which involving diverse industries, from finance, banking, tele-communication, to manufactory, internet companies and so on.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;DSS is under the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/WeBankFinTech/DataSphereStudio/master/LICENSE&#34;&gt;License&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>dromara/hutool</title>
    <updated>2022-08-20T01:38:50Z</updated>
    <id>tag:github.com,2022-08-20:/dromara/hutool</id>
    <link href="https://github.com/dromara/hutool" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🍬A set of tools that keep Java sweet.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://hutool.cn/&#34;&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/looly/hutool-site/images/logo.jpg&#34; width=&#34;45%&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;🍬A set of tools that keep Java sweet.&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 👉 &lt;a href=&#34;https://hutool.cn&#34;&gt;https://hutool.cn/&lt;/a&gt; 👈 &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://search.maven.org/artifact/cn.hutool/hutool-all&#34;&gt; &lt;img src=&#34;https://img.shields.io/maven-central/v/cn.hutool/hutool-all.svg?label=Maven%20Central&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;http://license.coscl.org.cn/MulanPSL2/index.html&#34;&gt; &lt;img src=&#34;https://img.shields.io/:license-MulanPSL2-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/JDK-8+-green.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://travis-ci.com/dromara/hutool&#34;&gt; &lt;img src=&#34;https://travis-ci.com/dromara/hutool.svg?branch=v4-master&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/dromara/hutool/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=dromara/hutool&amp;amp;utm_campaign=Badge_Grade&#34;&gt; &lt;img src=&#34;https://app.codacy.com/project/badge/Grade/8a6897d9de7440dd9de8804c28d2871d&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/dromara/hutool&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/dromara/hutool/branch/v5-master/graph/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://gitter.im/hutool/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt; &lt;img src=&#34;https://badges.gitter.im/hutool/Lobby.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://gitee.com/dromara/hutool/stargazers&#34;&gt; &lt;img src=&#34;https://gitee.com/dromara/hutool/badge/star.svg?theme=gvp&#34; alt=&#34;star&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/dromara/hutool&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/dromara/hutool.svg?style=social&#34; alt=&#34;github star&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=jPq9DsjXs7GUWbXRZU3wygSJyMEy4pqr&amp;amp;jump_from=webapi&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/QQ%E7%BE%A4%E2%91%A5-610134978-orange&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dromara/hutool/v5-master/README-EN.md&#34;&gt;&lt;strong&gt;🌎English Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📚简介&lt;/h2&gt; &#xA;&lt;p&gt;Hutool是一个小而全的Java工具类库，通过静态方法封装，降低相关API的学习成本，提高工作效率，使Java拥有函数式语言般的优雅，让Java语言也可以“甜甜的”。&lt;/p&gt; &#xA;&lt;p&gt;Hutool中的工具方法来自每个用户的精雕细琢，它涵盖了Java开发底层代码中的方方面面，它既是大型项目开发中解决小问题的利器，也是小型项目中的效率担当；&lt;/p&gt; &#xA;&lt;p&gt;Hutool是项目中“util”包友好的替代，它节省了开发人员对项目中公用类和公用工具方法的封装时间，使开发专注于业务，同时可以最大限度的避免封装不完善带来的bug。&lt;/p&gt; &#xA;&lt;h3&gt;🎁Hutool名称的由来&lt;/h3&gt; &#xA;&lt;p&gt;Hutool = Hu + tool，是原公司项目底层代码剥离后的开源库，“Hu”是公司名称的表示，tool表示工具。Hutool谐音“糊涂”，一方面简洁易懂，一方面寓意“难得糊涂”。&lt;/p&gt; &#xA;&lt;h3&gt;🍺Hutool如何改变我们的coding方式&lt;/h3&gt; &#xA;&lt;p&gt;Hutool的目标是使用一个工具方法代替一段复杂代码，从而最大限度的避免“复制粘贴”代码的问题，彻底改变我们写代码的方式。&lt;/p&gt; &#xA;&lt;p&gt;以计算MD5为例：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;👴【以前】打开搜索引擎 -&amp;gt; 搜“Java MD5加密” -&amp;gt; 打开某篇博客-&amp;gt; 复制粘贴 -&amp;gt; 改改好用&lt;/li&gt; &#xA; &lt;li&gt;👦【现在】引入Hutool -&amp;gt; SecureUtil.md5()&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Hutool的存在就是为了减少代码搜索成本，避免网络上参差不齐的代码出现导致的bug。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🛠️包含组件&lt;/h2&gt; &#xA;&lt;p&gt;一个Java基础工具类，对文件、流、加密解密、转码、正则、线程、XML等JDK方法进行封装，组成各种Util工具类，同时提供以下组件：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;模块&lt;/th&gt; &#xA;   &lt;th&gt;介绍&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-aop&lt;/td&gt; &#xA;   &lt;td&gt;JDK动态代理封装，提供非IOC下的切面支持&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-bloomFilter&lt;/td&gt; &#xA;   &lt;td&gt;布隆过滤，提供一些Hash算法的布隆过滤&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-cache&lt;/td&gt; &#xA;   &lt;td&gt;简单缓存实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-core&lt;/td&gt; &#xA;   &lt;td&gt;核心，包括Bean操作、日期、各种Util等&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-cron&lt;/td&gt; &#xA;   &lt;td&gt;定时任务模块，提供类Crontab表达式的定时任务&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-crypto&lt;/td&gt; &#xA;   &lt;td&gt;加密解密模块，提供对称、非对称和摘要算法封装&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-db&lt;/td&gt; &#xA;   &lt;td&gt;JDBC封装后的数据操作，基于ActiveRecord思想&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-dfa&lt;/td&gt; &#xA;   &lt;td&gt;基于DFA模型的多关键字查找&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-extra&lt;/td&gt; &#xA;   &lt;td&gt;扩展模块，对第三方封装（模板引擎、邮件、Servlet、二维码、Emoji、FTP、分词等）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-http&lt;/td&gt; &#xA;   &lt;td&gt;基于HttpUrlConnection的Http客户端封装&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-log&lt;/td&gt; &#xA;   &lt;td&gt;自动识别日志实现的日志门面&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-script&lt;/td&gt; &#xA;   &lt;td&gt;脚本执行封装，例如Javascript&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-setting&lt;/td&gt; &#xA;   &lt;td&gt;功能更强大的Setting配置文件和Properties封装&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-system&lt;/td&gt; &#xA;   &lt;td&gt;系统参数调用封装（JVM信息等）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-json&lt;/td&gt; &#xA;   &lt;td&gt;JSON实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-captcha&lt;/td&gt; &#xA;   &lt;td&gt;图片验证码实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-poi&lt;/td&gt; &#xA;   &lt;td&gt;针对POI中Excel和Word的封装&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-socket&lt;/td&gt; &#xA;   &lt;td&gt;基于Java的NIO和AIO的Socket封装&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hutool-jwt&lt;/td&gt; &#xA;   &lt;td&gt;JSON Web Token (JWT)封装实现&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;可以根据需求对每个模块单独引入，也可以通过引入&lt;code&gt;hutool-all&lt;/code&gt;方式引入所有模块。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📝文档&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.hutool.cn/docs/&#34;&gt;📘中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://plus.hutool.cn/docs/#/&#34;&gt;📘中文备用文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apidoc.gitee.com/dromara/hutool/&#34;&gt;📙参考API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1bQ4y1M7d9?p=2&#34;&gt;🎬视频介绍&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🪙支持Hutool&lt;/h2&gt; &#xA;&lt;h3&gt;💳捐赠&lt;/h3&gt; &#xA;&lt;p&gt;如果你觉得Hutool不错，可以捐赠请维护者吃包辣条~，在此表示感谢^_^。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitee.com/dromara/hutool&#34;&gt;Gitee上捐赠&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dromara.gitee.io/donate.html&#34;&gt;捐赠给Dromara组织&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;👕周边商店&lt;/h3&gt; &#xA;&lt;p&gt;你也可以通过购买Hutool的周边商品来支持Hutool维护哦！&lt;/p&gt; &#xA;&lt;p&gt;我们提供了印有Hutool Logo的周边商品，欢迎点击购买支持：&lt;/p&gt; &#xA;&lt;p&gt;👉 &lt;a href=&#34;https://market.m.taobao.com/apps/market/content/index.html?wh_weex=true&amp;amp;contentId=331724720170&#34;&gt;Hutool 周边商店&lt;/a&gt; 👈&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📦安装&lt;/h2&gt; &#xA;&lt;h3&gt;🍊Maven&lt;/h3&gt; &#xA;&lt;p&gt;在项目的pom.xml的dependencies中加入以下内容:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;cn.hutool&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;hutool-all&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;5.8.5&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;🍐Gradle&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;implementation &#39;cn.hutool:hutool-all:5.8.5&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;📥下载jar&lt;/h3&gt; &#xA;&lt;p&gt;点击以下链接，下载&lt;code&gt;hutool-all-X.X.X.jar&lt;/code&gt;即可：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo1.maven.org/maven2/cn/hutool/hutool-all/5.8.5/&#34;&gt;Maven中央库&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🔔️注意 Hutool 5.x支持JDK8+，对Android平台没有测试，不能保证所有工具类或工具方法可用。 如果你的项目使用JDK7，请使用Hutool 4.x版本（不再更新）&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;🚽编译安装&lt;/h3&gt; &#xA;&lt;p&gt;访问Hutool的Gitee主页：&lt;a href=&#34;https://gitee.com/dromara/hutool&#34;&gt;https://gitee.com/dromara/hutool&lt;/a&gt; 下载整个项目源码（v5-master或v5-dev分支都可）然后进入Hutool项目目录执行：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./hutool.sh install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;然后就可以使用Maven引入了。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🏗️添砖加瓦&lt;/h2&gt; &#xA;&lt;h3&gt;🎋分支说明&lt;/h3&gt; &#xA;&lt;p&gt;Hutool的源码分为两个分支，功能如下：&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;分支&lt;/th&gt; &#xA;   &lt;th&gt;作用&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v5-master&lt;/td&gt; &#xA;   &lt;td&gt;主分支，release版本使用的分支，与中央库提交的jar一致，不接收任何pr或修改&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;v5-dev&lt;/td&gt; &#xA;   &lt;td&gt;开发分支，默认为下个版本的SNAPSHOT版本，接受修改或pr&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;🐞提供bug反馈或建议&lt;/h3&gt; &#xA;&lt;p&gt;提交问题反馈请说明正在使用的JDK版本呢、Hutool版本和相关依赖库版本。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/dromara/hutool/issues&#34;&gt;Gitee issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dromara/hutool/issues&#34;&gt;Github issue&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🧬贡献代码的步骤&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;在Gitee或者Github上fork项目到自己的repo&lt;/li&gt; &#xA; &lt;li&gt;把fork过去的项目也就是你的项目clone到你的本地&lt;/li&gt; &#xA; &lt;li&gt;修改代码（记得一定要修改v5-dev分支）&lt;/li&gt; &#xA; &lt;li&gt;commit后push到自己的库（v5-dev分支）&lt;/li&gt; &#xA; &lt;li&gt;登录Gitee或Github在你首页可以看到一个 pull request 按钮，点击它，填写一些说明信息，然后提交即可。&lt;/li&gt; &#xA; &lt;li&gt;等待维护者合并&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;📐PR遵照的原则&lt;/h3&gt; &#xA;&lt;p&gt;Hutool欢迎任何人为Hutool添砖加瓦，贡献代码，不过维护者是一个强迫症患者，为了照顾病人，需要提交的pr（pull request）符合一些规范，规范如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;注释完备，尤其每个新增的方法应按照Java文档规范标明方法说明、参数说明、返回值说明等信息，必要时请添加单元测试，如果愿意，也可以加上你的大名。&lt;/li&gt; &#xA; &lt;li&gt;Hutool的缩进按照Eclipse（&lt;del&gt;不要跟我说IDEA多好用，维护者非常懒，学不会&lt;/del&gt;，IDEA真香，改了Eclipse快捷键后舒服多了）默认（tab）缩进，所以请遵守（不要和我争执空格与tab的问题，这是一个病人的习惯）。&lt;/li&gt; &#xA; &lt;li&gt;新加的方法不要使用第三方库的方法，Hutool遵循无依赖原则（除非在extra模块中加方法工具）。&lt;/li&gt; &#xA; &lt;li&gt;请pull request到&lt;code&gt;v5-dev&lt;/code&gt;分支。Hutool在5.x版本后使用了新的分支：&lt;code&gt;v5-master&lt;/code&gt;是主分支，表示已经发布中央库的版本，这个分支不允许pr，也不允许修改。&lt;/li&gt; &#xA; &lt;li&gt;我们如果关闭了你的issue或pr，请不要诧异，这是我们保持问题处理整洁的一种方式，你依旧可以继续讨论，当有讨论结果时我们会重新打开。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;⭐Star Hutool&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/dromara/hutool&#34;&gt;&lt;img src=&#34;https://starchart.cc/dromara/hutool.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📌公众号&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/looly/hutool-site/images/qr_tuling.jpg&#34; height=&#34;150&#34;&gt; &#xA; &lt;img src=&#34;https://dromara.org/img/qrcode/qrcode_1.png&#34; height=&#34;150&#34;&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>