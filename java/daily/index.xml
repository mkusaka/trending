<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-15T01:35:44Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ConsenSys/teku</title>
    <updated>2023-05-15T01:35:44Z</updated>
    <id>tag:github.com,2023-05-15:/ConsenSys/teku</id>
    <link href="https://github.com/ConsenSys/teku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Java Implementation of the Ethereum 2.0 Beacon Chain&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;teku&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/ConsenSys/workflows/teku&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/ConsenSys/teku.svg?style=svg&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ConsenSys/teku/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ConsenSys/teku/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ConsenSys/teku&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/7hPv2T6&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Chat-on%20Discord-%235865F2?logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gitpoap.io/gh/ConsenSys/teku&#34;&gt;&lt;img src=&#34;https://public-api.gitpoap.io/v1/repo/ConsenSys/teku/badge&#34; alt=&#34;GitPOAP Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Teku is a Java implementation of the Ethereum 2.0 Beacon Chain. See the &lt;a href=&#34;https://github.com/ConsenSys/teku/releases&#34;&gt;Changelog&lt;/a&gt; for details of the latest releases and upcoming breaking changes.&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ethereum/consensus-specs/raw/dev/specs/phase0/beacon-chain.md&#34;&gt;Ethereum 2.0 Beacon Chain specification&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.teku.consensys.net/&#34;&gt;Teku user documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://consensys.github.io/teku/&#34;&gt;Teku REST API reference documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ConsenSys/teku/issues&#34;&gt;Teku issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ConsenSys/teku/master/CONTRIBUTING.md&#34;&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ConsenSys/teku/releases&#34;&gt;Teku Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Teku users&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://docs.teku.consensys.net/&#34;&gt;user documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Raise a &lt;a href=&#34;https://github.com/ConsenSys/doc.teku/issues&#34;&gt;documentation issue&lt;/a&gt; or get in touch in the #teku channel on &lt;a href=&#34;https://discord.gg/7hPv2T6&#34;&gt;Discord&lt;/a&gt; if you&#39;ve got questions or feedback.&lt;/p&gt; &#xA;&lt;h2&gt;Teku developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ConsenSys/teku/master/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.hyperledger.org/display/BESU/Coding+Conventions&#34;&gt;Coding Conventions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Binary Releases&lt;/h2&gt; &#xA;&lt;p&gt;Binary releases are available from the &lt;a href=&#34;https://github.com/ConsenSys/teku/releases&#34;&gt;releases page&lt;/a&gt;. Binary builds that track the latest changes on the master branch are available on &lt;a href=&#34;https://hub.docker.com/r/consensys/teku&#34;&gt;Dockerhub&lt;/a&gt; using the &lt;code&gt;develop&lt;/code&gt; version or as binary downloads (&lt;a href=&#34;https://artifacts.consensys.net/public/teku/raw/names/teku.tar.gz/versions/develop/teku-develop.tar.gz&#34;&gt;tar.gz format&lt;/a&gt; or &lt;a href=&#34;https://artifacts.consensys.net/public/teku/raw/names/teku.zip/versions/develop/teku-develop.zip&#34;&gt;zip format&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;We recommend only using release versions for Mainnet, but &lt;code&gt;develop&lt;/code&gt; builds are useful for testing the latest changes on testnets.&lt;/p&gt; &#xA;&lt;p&gt;Release notifications are available via:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sign up to our &lt;a href=&#34;https://pages.consensys.net/teku-sign-up&#34;&gt;release announcements&lt;/a&gt; email list (release and important announcements only, no marketing)&lt;/li&gt; &#xA; &lt;li&gt;Follow us on &lt;a href=&#34;https://twitter.com/Teku_ConsenSys&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;teku&lt;/code&gt; in &lt;a href=&#34;https://discord.gg/7hPv2T6&#34;&gt;Consensys Discord&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;Subscribe to release notifications on github for &lt;a href=&#34;https://github.com/ConsenSys/teku&#34;&gt;teku&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;h3&gt;Install Prerequisites&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 11+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: Official builds of Teku are performed with Java 11. Building on a more recent version of Java is supported, but the resulting build will not work on earlier versions of Java.&lt;/p&gt; &#xA;&lt;h3&gt;Build and Dist&lt;/h3&gt; &#xA;&lt;p&gt;To create a ready to run distribution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/ConsenSys/teku.git&#xA;cd teku &amp;amp;&amp;amp; ./gradlew distTar installDist&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This produces:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully packaged distribution in &lt;code&gt;build/distributions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Expanded distribution, ready to run in &lt;code&gt;build/install/teku&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build and Test&lt;/h3&gt; &#xA;&lt;p&gt;To build, clone this repo and run with &lt;code&gt;gradle&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/ConsenSys/teku.git&#xA;cd teku &amp;amp;&amp;amp; ./gradlew&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After a successful build, distribution packages are available in &lt;code&gt;build/distributions&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Other Useful Gradle Targets&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Target&lt;/th&gt; &#xA;   &lt;th&gt;Builds&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;distTar&lt;/td&gt; &#xA;   &lt;td&gt;Full distribution in build/distributions (as &lt;code&gt;.tar.gz&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;distZip&lt;/td&gt; &#xA;   &lt;td&gt;Full distribution in build/distributions (as &lt;code&gt;.zip&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;installDist&lt;/td&gt; &#xA;   &lt;td&gt;Expanded distribution in &lt;code&gt;build/install/teku&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;distDocker&lt;/td&gt; &#xA;   &lt;td&gt;The &lt;code&gt;consensys/teku&lt;/code&gt; docker image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Code Style&lt;/h2&gt; &#xA;&lt;p&gt;We use Google&#39;s Java coding conventions for the project. To reformat code, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew spotlessApply&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Code style is checked automatically during a build.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;All the unit tests are run as part of the build, but can be explicitly triggered with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Special thanks&lt;/h2&gt; &#xA;&lt;p&gt;YourKit for providing us with a free profiler open source license.&lt;/p&gt; &#xA;&lt;p&gt;YourKit supports open source projects with innovative and intelligent tools for monitoring and profiling Java and .NET applications. YourKit is the creator of &lt;a href=&#34;https://www.yourkit.com/java/profiler/&#34;&gt;YourKit Java Profiler&lt;/a&gt;, &lt;a href=&#34;https://www.yourkit.com/.net/profiler/&#34;&gt;YourKit .NET Profiler&lt;/a&gt;, and &lt;a href=&#34;https://www.yourkit.com/youmonitor/&#34;&gt;YourKit YouMonitor&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.yourkit.com/images/yklogo.png&#34; alt=&#34;YourKit Logo&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kiegroup/optaplanner</title>
    <updated>2023-05-15T01:35:44Z</updated>
    <id>tag:github.com,2023-05-15:/kiegroup/optaplanner</id>
    <link href="https://github.com/kiegroup/optaplanner" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AI constraint solver in Java to optimize the vehicle routing problem, employee rostering, task assignment, maintenance scheduling, conference scheduling and other planning problems.&lt;/p&gt;&lt;hr&gt;&lt;div class=&#34;imageblock text-center&#34;&gt; &#xA; &lt;div class=&#34;content&#34;&gt; &#xA;  &lt;a class=&#34;image&#34; href=&#34;https://www.optaplanner.org/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kiegroup/optaplanner/main/optaplanner-docs/src/modules/ROOT/images/shared/optaPlannerLogo.png&#34; alt=&#34;optaPlannerLogo&#34; width=&#34;OptaPlanner&#34; height=&#34;150&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://ossindex.sonatype.org/component/pkg:maven/org.optaplanner/optaplanner-bom&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.optaplanner/optaplanner-bom?logo=apache-maven&amp;amp;style=for-the-badge&#34; alt=&#34;Maven artifact&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://stackoverflow.com/questions/tagged/optaplanner&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/stackoverflow-ask_question-orange.svg?logo=stackoverflow&amp;amp;style=for-the-badge&#34; alt=&#34;Stackoverflow&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://kie.zulipchat.com/#narrow/stream/232679-optaplanner&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?logo=zulip&amp;amp;style=for-the-badge&#34; alt=&#34;Join Zulip Chat&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/kiegroup/optaplanner/pulse&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/kiegroup/optaplanner?label=commits&amp;amp;style=for-the-badge&#34; alt=&#34;Commit Activity&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/kiegroup/optaplanner?style=for-the-badge&amp;amp;logo=apache&#34; alt=&#34;Livense&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/kiegroup/optaplanner/actions/workflows/pull_request.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/JVM-11—​17-brightgreen.svg?style=for-the-badge&#34; alt=&#34;JVM support&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://maven.apache.org/install.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Maven-3.x-blue?style=for-the-badge&#34; alt=&#34;Maven&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://github.com/kiegroup/optaplanner/actions/workflows/pull_request.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/code-size/kiegroup/optaplanner?style=for-the-badge&#34; alt=&#34;Code size&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://sonarcloud.io/dashboard?id=org.optaplanner:optaplanner&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=org.optaplanner:optaplanner&amp;amp;style=for-the-badge&amp;amp;metric=reliability_rating&#34; alt=&#34;Reliability Rating&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://sonarcloud.io/dashboard?id=org.optaplanner:optaplanner&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=org.optaplanner:optaplanner&amp;amp;metric=security_rating&#34; alt=&#34;Security Rating&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://sonarcloud.io/dashboard?id=org.optaplanner:optaplanner&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=org.optaplanner:optaplanner&amp;amp;metric=sqale_rating&#34; alt=&#34;Maintainability Rating&#34;&gt;&lt;/a&gt;&lt;/span&gt; &lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://sonarcloud.io/dashboard?id=org.optaplanner:optaplanner&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=org.optaplanner:optaplanner&amp;amp;metric=coverage&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;paragraph&#34;&gt; &#xA; &lt;p&gt;A fast, easy-to-use, open source AI constraint solver for software developers&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_looking_for_quickstarts&#34;&gt;Looking for Quickstarts?&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;OptaPlanner’s quickstarts are located in the &lt;a href=&#34;https://github.com/kiegroup/optaplanner-quickstarts&#34;&gt;optaplanner-quickstarts repository&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_quick_development_start&#34;&gt;Quick development start&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;To build and run from source:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;$ mvn clean install -Dquickly&#xA;$ cd optaplanner-examples&#xA;$ mvn exec:java&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;To develop with IntelliJ IDEA, Eclipse or VSCode, open the root &lt;code&gt;pom.xml&lt;/code&gt; as a new project and configure a &lt;em&gt;Run/Debug configuration&lt;/em&gt; like this:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Type: Application&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Main class: &lt;code&gt;org.optaplanner.examples.app.OptaPlannerExamplesApp&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;VM options: &lt;code&gt;-Xmx2G -server&lt;/code&gt; (memory only needed when using the big datasets in the examples)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Program arguments: (none)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Working directory: &lt;code&gt;$MODULE_DIR$&lt;/code&gt; (must resolve to optaplanner-examples directory)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Use classpath of module: &lt;code&gt;optaplanner-examples&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_contributing_to_optaplanner&#34;&gt;Contributing to OptaPlanner&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This is an open source project, and you are more than welcome to contribute &lt;span&gt;❤️&lt;/span&gt;!&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;If you’re just starting out with OptaPlanner and want to contribute, take a look at our &lt;a href=&#34;https://issues.redhat.com/issues/?jql=project%20%3D%20PLANNER%20AND%20status%20in%20(Open%2C%20Reopened)%20AND%20labels%20%3D%20starter%20ORDER%20BY%20priority%20DESC&#34;&gt;starter issues&lt;/a&gt;. They’re specifically chosen to be easier for first time contributors.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;If you want to contribute or start an opinionated discussion, join our &lt;a href=&#34;https://groups.google.com/g/optaplanner-dev&#34;&gt;discussion&lt;/a&gt; or send an e-mail directly to &lt;a href=&#34;mailto:optaplanner-dev@googlegroups.com&#34;&gt;optaplanner-dev@googlegroups.com&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;If you want to submit an issue, check out the &lt;a href=&#34;https://issues.redhat.com/projects/PLANNER/issues&#34;&gt;OptaPlanner Jira project&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_time_to_make_a_change&#34;&gt;Time to make a change?&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Every change must be submitted through a GitHub pull request (PR). OptaPlanner uses continuous integration (CI). The OptaPlanner CI runs checks against your branch after you submit the PR to ensure that your PR doesn’t introduce errors. If the CI identifies a potential problem, our friendly PR maintainers will help you resolve it.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_contributing&#34;&gt;Contributing&lt;/h3&gt; &#xA;   &lt;div class=&#34;olist arabic&#34;&gt; &#xA;    &lt;ol class=&#34;arabic&#34;&gt; &#xA;     &lt;li&gt; &lt;p&gt;Fork it (&lt;a href=&#34;https://github.com/kiegroup/optaplanner&#34; class=&#34;bare&#34;&gt;https://github.com/kiegroup/optaplanner&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Create your feature branch: (&lt;code&gt;git checkout -b feature&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Commit your changes with a comment: (&lt;code&gt;git commit -am &#39;Add some feature&#39;&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Push to the branch to GitHub: (&lt;code&gt;git push origin feature&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Create a new pull request.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_code_standards&#34;&gt;Code standards&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Your code is automatically formatted according to the &lt;em&gt;Import and Code Style&lt;/em&gt; conventions during every Maven build. CI checks enforce those conventions too, so be sure to build your project with maven before creating your PR:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;mvn clean install&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;For information about how to set up code style checks, see &lt;a href=&#34;https://github.com/kiegroup/optaplanner/raw/main/build/optaplanner-ide-config/ide-configuration.adoc&#34;&gt;IDE Setup Instructions&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_building_your_optaplanner_project&#34;&gt;Building your OptaPlanner project&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Use one of the following ways to build your OptaPlanner project:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;span&gt;🚀&lt;/span&gt; &lt;strong&gt;build-fast&lt;/strong&gt;: &lt;code&gt;mvn clean install -Dquickly&lt;/code&gt; skips any checks and code analysis (~1 min)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;span&gt;🔨&lt;/span&gt; &lt;strong&gt;build-normally&lt;/strong&gt;: &lt;code&gt;mvn clean install&lt;/code&gt; runs tests, checks code style, skips documentation (~17 min)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;span&gt;🧾&lt;/span&gt; &lt;strong&gt;build-doc&lt;/strong&gt;: &lt;code&gt;mvn clean install&lt;/code&gt; at &lt;code&gt;optaplanner/optaplanner-docs&lt;/code&gt; creates asciidoctor documentation &lt;code&gt;target/optaplanner-docs-*/html_single/index.html&lt;/code&gt; (~2 min)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;span&gt;🦾&lt;/span&gt; &lt;strong&gt;build-all&lt;/strong&gt;: &lt;code&gt;mvn clean install -Dfull&lt;/code&gt; runs all checks + creates documentation and distribution files (~20 min)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_optaplanner_ci_status&#34;&gt;OptaPlanner CI status&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;You can check the CI status of the OptaPlanner repositories from the &lt;a href=&#34;https://kiegroup.github.io/optaplanner/&#34;&gt;Chain Status webpage&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_jenkins_ci_jobs_need_vpn_access&#34;&gt;Jenkins CI Jobs (need VPN access)&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;All Jenkins jobs can be found under the OptaPlanner folder: &lt;a href=&#34;https://eng-jenkins-csb-business-automation.apps.ocp-c1.prod.psi.redhat.com/job/KIE/job/optaplanner&#34; class=&#34;bare&#34;&gt;https://eng-jenkins-csb-business-automation.apps.ocp-c1.prod.psi.redhat.com/job/KIE/job/optaplanner&lt;/a&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Interesting Jenkins CI jobs (need VPN access):&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;ulist&#34;&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://eng-jenkins-csb-business-automation.apps.ocp-c1.prod.psi.redhat.com/job/KIE/job/optaplanner/job/main/job/tools/job/update-quarkus-all/&#34;&gt;Update Quarkus version&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://eng-jenkins-csb-business-automation.apps.ocp-c1.prod.psi.redhat.com/job/KIE/job/optaplanner/job/main/job/tools/job/update-drools-optaplanner/&#34;&gt;Update Drools version&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://eng-jenkins-csb-business-automation.apps.ocp-c1.prod.psi.redhat.com/job/KIE/job/optaplanner/job/main/job/release/job/optaplanner-release&#34;&gt;Release pipeline&lt;/a&gt; (only available on release branches)&lt;/p&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://eng-jenkins-csb-business-automation.apps.ocp-c1.prod.psi.redhat.com/job/KIE/job/optaplanner/job/main/job/release/job/optaplanner-post-release&#34;&gt;Post-Release pipeline&lt;/a&gt; (only available on release branches)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>jobrunr/jobrunr</title>
    <updated>2023-05-15T01:35:44Z</updated>
    <id>tag:github.com,2023-05-15:/jobrunr/jobrunr</id>
    <link href="https://github.com/jobrunr/jobrunr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extremely easy way to perform background processing in Java. Backed by persistent storage. Open and free for commercial use.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/567842/80095933-1181c900-8569-11ea-85e7-14129b3f8142.png&#34; alt=&#34;JobRunr logo&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; The ultimate library to perform background processing on the JVM.&lt;br&gt; Dead simple API. Extensible. Reliable. &lt;br&gt; Distributed and backed by persistent storage. &lt;br&gt; Open and free for commercial use. &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://search.maven.org/artifact/org.jobrunr/jobrunr&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/org.jobrunr/jobrunr/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;img alt=&#34;Drone Build&#34; src=&#34;https://build.jobrunr.io/api/badges/jobrunr/jobrunr/status.svg?sanitize=true&#34;&gt;&amp;nbsp; &lt;img alt=&#34;LGPLv3 Licence&#34; src=&#34;https://img.shields.io/badge/license-LGPLv3-green.svg?sanitize=true&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=jobrunr_jobrunr&#34;&gt;&lt;img alt=&#34;Quality Scale&#34; src=&#34;https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&amp;amp;metric=sqale_rating&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=jobrunr_jobrunr&#34;&gt;&lt;img alt=&#34;Reliability Rating&#34; src=&#34;https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&amp;amp;metric=reliability_rating&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=jobrunr_jobrunr&#34;&gt;&lt;img alt=&#34;Security Rating&#34; src=&#34;https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&amp;amp;metric=security_rating&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=jobrunr_jobrunr&#34;&gt;&lt;img alt=&#34;Coverage&#34; src=&#34;https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&amp;amp;metric=coverage&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=jobrunr_jobrunr&#34;&gt;&lt;img alt=&#34;Vulnerabilities&#34; src=&#34;https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&amp;amp;metric=vulnerabilities&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=jobrunr_jobrunr&#34;&gt;&lt;img alt=&#34;Bugs&#34; src=&#34;https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&amp;amp;metric=bugs&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=Try%20JobRunr%20for%20easy%20distributed%20background%20job%20processing%20on%20the%20JVM%21%20&amp;amp;url=https://www.jobrunr.io&amp;amp;via=jobrunr&amp;amp;hashtags=java,scheduling,processing,distributed,developers&#34;&gt;&lt;img alt=&#34;Tweet about us!&#34; src=&#34;https://www.jobrunr.io/tweet-btn.svg?v2&#34;&gt;&lt;/a&gt;&amp;nbsp; &lt;a href=&#34;https://github.com/jobrunr/jobrunr/stargazers&#34;&gt;&lt;img alt=&#34;Star us!&#34; src=&#34;https://www.jobrunr.io/github-star-btn.svg?v2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jobrunr/jobrunr/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-Github%20discussions-green&#34; alt=&#34;Join the chat at Gitter&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;BackgroundJob.enqueue(() -&amp;gt; System.out.println(&#34;This is all you need for distributed jobs!&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Incredibly easy way to perform &lt;strong&gt;fire-and-forget&lt;/strong&gt;, &lt;strong&gt;delayed&lt;/strong&gt;, &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;recurring jobs&lt;/strong&gt; inside &lt;strong&gt;Java applications&lt;/strong&gt; using only &lt;em&gt;Java 8 lambda&#39;s&lt;/em&gt;. CPU and I/O intensive, long-running and short-running jobs are supported. Persistent storage is done via either RDBMS (e.g. Postgres, MariaDB/MySQL, Oracle, SQL Server, DB2 and SQLite) or NoSQL (ElasticSearch, MongoDB and Redis).&lt;/p&gt; &#xA;&lt;p&gt;JobRunr provides a unified programming model to handle background tasks in a &lt;strong&gt;reliable way&lt;/strong&gt; and runs them on shared hosting, dedicated hosting or in the cloud (&lt;a href=&#34;https://www.jobrunr.io/en/blog/2020-05-06-jobrunr-kubrnetes-terraform/&#34;&gt;hello Kubernetes&lt;/a&gt;) within a JVM instance.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Thanks for building JobRunr, I like it a lot! Before that I used similar libraries in Ruby and Golang and JobRunr so far is the most pleasant one to use. I especially like the dashboard, it’s awesome! &lt;a href=&#34;https://www.linkedin.com/in/alex-denisov-a29bab2a/&#34;&gt;Alex Denisov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;View more feedback on &lt;a href=&#34;https://www.jobrunr.io/en/#why-jobrunr&#34;&gt;jobrunr.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simple: just use Java 8 lambda&#39;s to create a background job.&lt;/li&gt; &#xA; &lt;li&gt;Distributed &amp;amp; cluster-friendly: guarantees execution by single scheduler instance using optimistic locking.&lt;/li&gt; &#xA; &lt;li&gt;Persistent jobs: using either a RDMBS (four tables and a view) or a noSQL data store.&lt;/li&gt; &#xA; &lt;li&gt;Embeddable: built to be embedded in existing applications.&lt;/li&gt; &#xA; &lt;li&gt;Minimal dependencies: (&lt;a href=&#34;https://asm.ow2.io/&#34;&gt;ASM&lt;/a&gt;, slf4j and either &lt;a href=&#34;https://github.com/FasterXML/jackson&#34;&gt;jackson&lt;/a&gt; and jackson-datatype-jsr310, &lt;a href=&#34;https://github.com/google/gson&#34;&gt;gson&lt;/a&gt; or a JSON-B compliant library).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage scenarios&lt;/h2&gt; &#xA;&lt;p&gt;Some scenarios where it may be a good fit:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;within a REST api return response to client immediately and perform long-running job in the background&lt;/li&gt; &#xA; &lt;li&gt;mass notifications/newsletters&lt;/li&gt; &#xA; &lt;li&gt;calculations of wages and the creation of the resulting documents&lt;/li&gt; &#xA; &lt;li&gt;batch import from xml, csv or json&lt;/li&gt; &#xA; &lt;li&gt;creation of archives&lt;/li&gt; &#xA; &lt;li&gt;firing off web hooks&lt;/li&gt; &#xA; &lt;li&gt;image/video processing&lt;/li&gt; &#xA; &lt;li&gt;purging temporary files&lt;/li&gt; &#xA; &lt;li&gt;recurring automated reports&lt;/li&gt; &#xA; &lt;li&gt;database maintenance&lt;/li&gt; &#xA; &lt;li&gt;updating elasticsearch/solr after data changes&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;…and so on&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can start small and process jobs within your web app or scale horizontally and add as many background job servers as you want to handle a peak of jobs. JobRunr will distribute the load over all the servers for you. JobRunr is also fault-tolerant - is an external web service down? No worries, the job is automatically retried 10-times with a smart back-off policy.&lt;/p&gt; &#xA;&lt;p&gt;JobRunr is a Java alternative to &lt;a href=&#34;https://github.com/HangfireIO/Hangfire&#34;&gt;HangFire&lt;/a&gt;, &lt;a href=&#34;https://github.com/resque/resque&#34;&gt;Resque&lt;/a&gt;, &lt;a href=&#34;http://sidekiq.org&#34;&gt;Sidekiq&lt;/a&gt;, &lt;a href=&#34;https://github.com/collectiveidea/delayed_job&#34;&gt;delayed_job&lt;/a&gt;, &lt;a href=&#34;https://github.com/celery/celery&#34;&gt;Celery&lt;/a&gt; and is similar to &lt;a href=&#34;https://github.com/quartz-scheduler/quartz&#34;&gt;Quartz&lt;/a&gt; and &lt;a href=&#34;https://github.com/spring-guides/gs-scheduling-tasks&#34;&gt;Spring Task Scheduler&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/567842/80217070-60019700-863f-11ea-9f02-d62c77e97a1c.png&#34; width=&#34;45%&#34; style=&#34;margin-right: 20px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://user-images.githubusercontent.com/567842/80217075-609a2d80-863f-11ea-8994-cd0ca16b31c4.png&#34; width=&#34;45%&#34;&gt; &lt;br&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/567842/80217067-5f690080-863f-11ea-9d41-3e2878ae7ac8.png&#34; width=&#34;45%&#34; style=&#34;margin-right: 20px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://user-images.githubusercontent.com/567842/80217063-5ed06a00-863f-11ea-847b-3ed829fd5503.png&#34; width=&#34;45%&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/567842/80217079-6132c400-863f-11ea-9789-8633897ef317.png&#34; width=&#34;45%&#34; style=&#34;margin-right: 20px;&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://user-images.githubusercontent.com/567842/80217078-609a2d80-863f-11ea-9b49-c891985de924.png&#34; width=&#34;45%&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jobrunr.io/en/documentation/background-methods/enqueueing-jobs/&#34;&gt;&lt;strong&gt;Fire-and-forget tasks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Dedicated worker pool threads execute queued background jobs as soon as possible, shortening your request&#39;s processing time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;BackgroundJob.enqueue(() -&amp;gt; System.out.println(&#34;Simple!&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jobrunr.io/en/documentation/background-methods/scheduling-jobs/&#34;&gt;&lt;strong&gt;Delayed tasks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Scheduled background jobs are executed only after a given amount of time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;BackgroundJob.schedule(Instant.now().plusHours(5), () -&amp;gt; System.out.println(&#34;Reliable!&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jobrunr.io/en/documentation/background-methods/recurring-jobs/&#34;&gt;&lt;strong&gt;Recurring tasks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Recurring jobs have never been simpler; just call the following method to perform any kind of recurring task using the &lt;a href=&#34;http://en.wikipedia.org/wiki/Cron#CRON_expression&#34;&gt;CRON expressions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;BackgroundJob.scheduleRecurrently(&#34;my-recurring-job&#34;, Cron.daily(), () -&amp;gt; service.doWork());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Process background tasks inside a web application…&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can process background tasks in any web application and we have thorough support for &lt;a href=&#34;https://spring.io/&#34;&gt;Spring&lt;/a&gt; - JobRunr is reliable to process your background jobs within a web application.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;… or anywhere else&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Like a Spring Console Application, wrapped in a docker container, that keeps running forever and polls for new background jobs.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://www.jobrunr.io&#34;&gt;https://www.jobrunr.io&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;Using Maven?&lt;/h4&gt; &#xA;&lt;p&gt;JobRunr is available in Maven Central - all you need to do is add the following dependency:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;   &amp;lt;groupId&amp;gt;org.jobrunr&amp;lt;/groupId&amp;gt;&#xA;   &amp;lt;artifactId&amp;gt;jobrunr&amp;lt;/artifactId&amp;gt;&#xA;   &amp;lt;version&amp;gt;${jobrunr.version}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using Gradle?&lt;/h4&gt; &#xA;&lt;p&gt;Just add the dependency to JobRunr:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;implementation &#39;org.jobrunr:jobrunr:${jobrunr.version}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h4&gt;Do you like to work Spring based?&lt;/h4&gt; &#xA;&lt;p&gt;Add the &lt;a href=&#34;https://search.maven.org/artifact/org.jobrunr/jobrunr-spring-boot-starter&#34;&gt;&lt;em&gt;jobrunr-spring-boot-starter&lt;/em&gt;&lt;/a&gt; to your dependencies and you&#39;re almost ready to go! Just set up your &lt;code&gt;application.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# the job-scheduler is enabled by default&#xA;# the background-job-server and dashboard are disabled by default&#xA;org.jobrunr.job-scheduler.enabled=true&#xA;org.jobrunr.background-job-server.enabled=true&#xA;org.jobrunr.dashboard.enabled=true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Or do you prefer a fluent API?&lt;/h4&gt; &#xA;&lt;p&gt;Define a &lt;code&gt;javax.sql.DataSource&lt;/code&gt; and put the following code on startup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@SpringBootApplication&#xA;public class JobRunrApplication {&#xA;&#xA;    public static void main(String[] args) {&#xA;        SpringApplication.run(JobRunrApplication.class, args);&#xA;    }&#xA;&#xA;    @Bean&#xA;    public JobScheduler initJobRunr(DataSource dataSource, JobActivator jobActivator) {&#xA;        return JobRunr.configure()&#xA;                .useJobActivator(jobActivator)&#xA;                .useStorageProvider(SqlStorageProviderFactory&#xA;                          .using(dataSource))&#xA;                .useBackgroundJobServer()&#xA;                .useDashboard()&#xA;                .initialize();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/jobrunr/jobrunr/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt; &#xA;&lt;h3&gt;How can I contribute?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Take a look at issues with tag called &lt;a href=&#34;https://github.com/jobrunr/jobrunr/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22&#34;&gt;&lt;code&gt;Good first issue&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Join the discussion on &lt;a href=&#34;https://github.com/jobrunr/jobrunr/discussions&#34;&gt;Github discussion&lt;/a&gt; - we won&#39;t be using Gitter anymore.&lt;/li&gt; &#xA; &lt;li&gt;Answer questions on &lt;a href=&#34;https://github.com/jobrunr/jobrunr/issues&#34;&gt;issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Fix bugs reported on &lt;a href=&#34;https://github.com/jobrunr/jobrunr/issues&#34;&gt;issues&lt;/a&gt;, and send us pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to build?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;git clone https://github.com/jobrunr/jobrunr.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd jobrunr&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd core/src/main/resources/org/jobrunr/dashboard/frontend&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm i&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd -&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew publishToMavenLocal&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then, in your own project you can depend on &lt;code&gt;org.jobrunr:jobrunr:1.0.0-SNAPSHOT&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>