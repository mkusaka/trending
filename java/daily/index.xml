<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-06T01:33:59Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Konloch/bytecode-viewer</title>
    <updated>2023-08-06T01:33:59Z</updated>
    <id>tag:github.com,2023-08-06:/Konloch/bytecode-viewer</id>
    <link href="https://github.com/Konloch/bytecode-viewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Java 8+ Jar &amp; Android APK Reverse Engineering Suite (Decompiler, Editor, Debugger &amp; More)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bytecode Viewer&lt;/h1&gt; &#xA;&lt;p&gt;Bytecode Viewer - a lightweight user-friendly Java/Android Bytecode Viewer, Decompiler &amp;amp; More.&lt;/p&gt; &#xA;&lt;h4&gt;New Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Patched &lt;a href=&#34;https://github.com/Konloch/bytecode-viewer/security/advisories/GHSA-3wq9-j4fc-4wmc&#34;&gt;CVE-2022-21675&lt;/a&gt; (Make sure to upgrade to v2.11.X)&lt;/li&gt; &#xA; &lt;li&gt;Dark mode with multiple themes&lt;/li&gt; &#xA; &lt;li&gt;Translated into over 30 languages including: Arabic, German, Japanese, Mandarin, Russian, Spanish&lt;/li&gt; &#xA; &lt;li&gt;Plugin Writer - create and edit external plugins from within BCV&lt;/li&gt; &#xA; &lt;li&gt;Fixed Java &amp;amp; Bytecode editing/compiling&lt;/li&gt; &#xA; &lt;li&gt;Tabbed plugin console&lt;/li&gt; &#xA; &lt;li&gt;Right-click menus on the resource and search panels&lt;/li&gt; &#xA; &lt;li&gt;Javap disassembler&lt;/li&gt; &#xA; &lt;li&gt;XAPK support&lt;/li&gt; &#xA; &lt;li&gt;Updated nearly all dependencies (incl. decompilers like CFR, JD-GUI etc.)&lt;/li&gt; &#xA; &lt;li&gt;Updated ASM library to version 9.1&lt;/li&gt; &#xA; &lt;li&gt;Added support to Java files compiled using JDK &amp;gt; 13&lt;/li&gt; &#xA; &lt;li&gt;Migrated to Maven&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Links&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/aexsYpfMEf&#34;&gt;BCV Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bytecodeviewer.com&#34;&gt;Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/konloch/bytecode-viewer&#34;&gt;Source Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/konloch/bytecode-viewer/releases&#34;&gt;Bin/Archive&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://the.bytecode.club/docs/bytecode-viewer/&#34;&gt;Java Docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Konloch/bytecode-viewer/master/LICENSE&#34;&gt;License (Copyleft)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Konloch/bytecode-viewer/raw/master/CREDITS.md&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Konloch/bytecode-viewer/raw/master/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Konloch/bytecode-viewer/issues&#34;&gt;Report Bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://the.bytecode.club/forumdisplay.php?fid=69&#34;&gt;Discussion Forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Key Features&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simply drag and drop to decompile and search Java Jars &amp;amp; Android APKs&lt;/li&gt; &#xA; &lt;li&gt;File format support for: Class, Jar, XAPK, APK, DEX, WAR, JSP, Image Resources, Text Resources &amp;amp; More&lt;/li&gt; &#xA; &lt;li&gt;6 Built-in Java decompilers: Krakatau, CFR, Procyon, FernFlower, JADX, JD-GUI&lt;/li&gt; &#xA; &lt;li&gt;3 Built-in Bytecode disassemblers, including 2 assemblers: Krakatau and Smali/BakSmali&lt;/li&gt; &#xA; &lt;li&gt;APK/DEX Support from Dex2Jar and Enjarify&lt;/li&gt; &#xA; &lt;li&gt;Built-in Java Compiler&lt;/li&gt; &#xA; &lt;li&gt;Advanced static-search functionality&lt;/li&gt; &#xA; &lt;li&gt;Customizable UI&lt;/li&gt; &#xA; &lt;li&gt;Plugins + Script Engine Design&lt;/li&gt; &#xA; &lt;li&gt;Malicious code scanning API&lt;/li&gt; &#xA; &lt;li&gt;Translated Into over 30 Languages Including: Arabic, German, Japanese, Mandarin, Russian, Spanish)&lt;/li&gt; &#xA; &lt;li&gt;Export functionality as Runnable Jar, Zip, APK, Decompile All As Zip, Etc.&lt;/li&gt; &#xA; &lt;li&gt;And more! Give it a try for yourself!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Command Line Input&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#x9;-help                         Displays the help menu&#xA;&#x9;-clean                        Deletes the BCV directory&#xA;&#x9;-english                      Forces English language translations&#xA;&#x9;-list                         Displays the available decompilers&#xA;&#x9;-decompiler &amp;lt;decompiler&amp;gt;      Selects the decompiler, procyon by default&#xA;&#x9;-i &amp;lt;input file&amp;gt;               Selects the input file (Jar, Class, APK, ZIP, DEX all work automatically)&#xA;&#x9;-o &amp;lt;output file&amp;gt;              Selects the output file (Java or Java-Bytecode)&#xA;&#x9;-t &amp;lt;target classname&amp;gt;         Must either be the fully qualified classname or &#34;all&#34; to decompile all as zip&#xA;&#x9;-nowait                       Doesn&#39;t wait for the user to read the CLI messages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;What is Bytecode Viewer?&lt;/h2&gt; &#xA;&lt;p&gt;Bytecode Viewer (BCV) is an Advanced Lightweight Java/Android Reverse Engineering Suite. Powered by several open source tools BCV is designed to aid in the reversing process.&lt;/p&gt; &#xA;&lt;p&gt;BCV comes with 6 decompilers, 3 disassemblers, 2 assemblers, 2 APK converters, advanced searching, debugging &amp;amp; more.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s written completely in Java, and it&#39;s open sourced. It&#39;s currently being maintained and developed by Konloch.&lt;/p&gt; &#xA;&lt;h2&gt;Is there a demo?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=I5GT6PoTGOw&#34;&gt;&lt;img src=&#34;https://img.youtube.com/vi/I5GT6PoTGOw/0.jpg&#34; alt=&#34;BCV Demo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please note this demo is from a very old version&lt;/p&gt; &#xA;&lt;h2&gt;How do I install BCV?&lt;/h2&gt; &#xA;&lt;p&gt;Download the latest version from &lt;a href=&#34;https://github.com/konloch/bytecode-viewer/releases&#34;&gt;https://github.com/konloch/bytecode-viewer/releases&lt;/a&gt; and run the Bytecode-Viewer-2.10.x.jar. You may need to execute it via command line &lt;code&gt;java -jar Bytecode-Viewer-2.10.x.jar&lt;/code&gt; (replace the X with the current minor version)&lt;/p&gt; &#xA;&lt;h2&gt;How can I use BCV?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Starting with a Jar, Zip, ClassFile or Android file (APK, DEX, XAPK, etc) drag it into BCV. It will start the decoding process automatically.&lt;/li&gt; &#xA; &lt;li&gt;From here you can select the decompilers you would like to use by selecting the View Pane&amp;gt;View 1, View 2, View 3, etc.&lt;/li&gt; &#xA; &lt;li&gt;The view panes are-used to display up to 3 decompilers side by side, you can also toggle edibility here.&lt;/li&gt; &#xA; &lt;li&gt;Select the resource you would like to open by navigating using the resource list, BCV will do its best to display it (Decompiling, Disassembling, etc).&lt;/li&gt; &#xA; &lt;li&gt;You can use plugins to help you search along with using the search pane in the left-hand bottom corner.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How do the plugins work?&lt;/h2&gt; &#xA;&lt;p&gt;There is also a plugin system that will allow you to interact with the loaded classfiles. You could for example write a String deobfuscator, a malicious code searcher, or anything else you can think of.&lt;/p&gt; &#xA;&lt;p&gt;You can either use one of the pre-written plugins, or write your own. The plugin system supports java and javascript scripting.&lt;/p&gt; &#xA;&lt;p&gt;Once a plugin is activated, it will execute the plugin with a ClassNode ArrayList of every single class loaded in BCV, this allows the user to handle it completely using ASM.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions to compile&lt;/h2&gt; &#xA;&lt;p&gt;Just clone this repo and run &lt;code&gt;mvn package&lt;/code&gt;. It&#39;s that simple!&lt;/p&gt; &#xA;&lt;h2&gt;Working on the source&lt;/h2&gt; &#xA;&lt;p&gt;Open the Maven project (e.g. in IntelliJ, open the &lt;code&gt;pom.xml&lt;/code&gt; as a project file).&lt;/p&gt; &#xA;&lt;h2&gt;Java Heap Space Issues (java.lang.OutOfMemoryError)&lt;/h2&gt; &#xA;&lt;p&gt;Start BCV with more RAM, e.g. &lt;code&gt;java -Xmx3G -jar BCV.jar&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;File Permission Issues (java.io.FileNotFoundException)&lt;/h2&gt; &#xA;&lt;p&gt;Right click on the jar file, go to Properties, and select Unblock under Security at the bottom of the General tab.&lt;/p&gt; &#xA;&lt;h2&gt;APK File Permission Issues (java.io.FileNotFoundException)&lt;/h2&gt; &#xA;&lt;p&gt;Run BCV as administrator.&lt;/p&gt; &#xA;&lt;h4&gt;Are you a Java Reverse Engineer? Do you want to learn?&lt;/h4&gt; &#xA;&lt;p&gt;Join The Bytecode Club Today! - &lt;a href=&#34;https://the.bytecode.club&#34;&gt;https://the.bytecode.club&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>