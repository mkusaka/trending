<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-02T01:31:31Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kafbat/kafka-ui</title>
    <updated>2024-10-02T01:31:31Z</updated>
    <id>tag:github.com,2024-10-02:/kafbat/kafka-ui</id>
    <link href="https://github.com/kafbat/kafka-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-Source Web UI for managing Apache Kafka clusters&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/logo_new.png&#34; alt=&#34;logo&#34;&gt; &#xA; &lt;h3&gt;Kafbat UI&lt;/h3&gt; &#xA; &lt;p&gt;Versatile, fast and lightweight web UI for managing Apache Kafka® clusters.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/kafbat/kafka-ui/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/free-open-source.svg?sanitize=true&#34; alt=&#34;price free&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/kafbat/kafka-ui/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/kafbat/kafka-ui&#34; alt=&#34;latest release version&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/4DWzD7pGE5&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/897805035122077716&#34; alt=&#34;discord online number count&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/sponsors/kafbat&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/kafbat?style=flat&amp;amp;logo=githubsponsors&amp;amp;logoColor=%23EA4AAA&amp;amp;label=Support%20us&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://ui.docs.kafbat.io/&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/quick-start&#34;&gt;Quick Start&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/4DWzD7pGE5&#34;&gt;Community&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://aws.amazon.com/marketplace/pp/%7BreplaceMe%7D&#34;&gt;AWS Marketplace&lt;/a&gt; • &lt;a href=&#34;https://www.producthunt.com/products/ui-for-apache-kafka/reviews/new&#34;&gt;ProductHunt&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://repobeats.axiom.co/api/embed/88d2bd9887380c7d86e2f986725d9af52ebad7f4.svg?sanitize=true&#34; alt=&#34;stats&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Kafbat UI is a free, open-source web UI to monitor and manage Apache Kafka clusters.&lt;/h4&gt; &#xA;&lt;p&gt;Kafbat UI is a simple tool that makes your data flows observable, helps find and troubleshoot issues faster and deliver optimal performance. Its lightweight dashboard makes it easy to track key metrics of your Kafka clusters - Brokers, Topics, Partitions, Production, and Consumption.&lt;/p&gt; &#xA;&lt;i&gt; Kafbat UI, developed by &lt;b&gt;Kafbat&lt;/b&gt;*, proudly carries forward the legacy of the UI Apache Kafka project. Our dedication is reflected in the continuous evolution of the project, ensuring adherence to its foundational vision while adapting to meet modern demands. We extend our gratitude to Provectus for their past support in groundbreaking work, which serves as a cornerstone for our ongoing innovation and dedication. &lt;/i&gt;&#xA;&lt;p&gt;&lt;i&gt;&lt;b&gt;*&lt;/b&gt; - The &lt;b&gt;Kafbat&lt;/b&gt; team comprises key contributors from the project&#39;s inception, bringing a wealth of experience and insight to this renewed endeavor. &lt;/i&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Interface&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/images/overview.gif&#34; alt=&#34;Interface&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Cluster Management&lt;/strong&gt; — monitor and manage all your clusters in one place&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance Monitoring with Metrics Dashboard&lt;/strong&gt; — track key Kafka metrics with a lightweight dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Kafka Brokers&lt;/strong&gt; — view topic and partition assignments, controller status&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Kafka Topics&lt;/strong&gt; — view partition count, replication status, and custom configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Consumer Groups&lt;/strong&gt; — view per-partition parked offsets, combined and per-partition lag&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Browse Messages&lt;/strong&gt; — browse messages with JSON, plain text, and Avro encoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Topic Configuration&lt;/strong&gt; — create and configure new topics with dynamic configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable Authentification&lt;/strong&gt; — &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/authentication&#34;&gt;secure&lt;/a&gt; your installation with optional Github/Gitlab/Google OAuth 2.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom serialization/deserialization plugins&lt;/strong&gt; - &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/serialization-serde&#34;&gt;use&lt;/a&gt; a ready-to-go serde for your data like AWS Glue or Smile, or code your own!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Role based access control&lt;/strong&gt; - &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/rbac-role-based-access-control&#34;&gt;manage permissions&lt;/a&gt; to access the UI with granular precision&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data masking&lt;/strong&gt; - &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/data-masking&#34;&gt;obfuscate&lt;/a&gt; sensitive data in topic messages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feature overview&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click here for the feature overview&lt;/summary&gt; &#xA; &lt;h1&gt;The Interface&lt;/h1&gt; &#xA; &lt;p&gt;Kafbat UI wraps major functions of Apache Kafka with an intuitive user interface.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Interface.gif&#34; alt=&#34;Interface&#34;&gt;&lt;/p&gt; &#xA; &lt;h2&gt;Topics&lt;/h2&gt; &#xA; &lt;p&gt;Kafbat UI makes it easy for you to create topics in your browser by several clicks, pasting your own parameters, and viewing topics in the list.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Create_topic_kafka-ui.gif&#34; alt=&#34;Create Topic&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;It&#39;s possible to jump from connectors view to corresponding topics and from a topic to consumers (back and forth) for more convenient navigation. connectors, overview topic settings.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Connector_Topic_Consumer.gif&#34; alt=&#34;Connector_Topic_Consumer&#34;&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Messages&lt;/h3&gt; &#xA; &lt;p&gt;Let&#39;s say we want to produce messages for our topic. With the Kafbat UI we can send or write data/messages to the Kafka topics without effort by specifying parameters, and viewing messages in the list.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Create_message_kafka-ui.gif&#34; alt=&#34;Produce Message&#34;&gt;&lt;/p&gt; &#xA; &lt;h2&gt;Schema registry&lt;/h2&gt; &#xA; &lt;p&gt;There are 3 supported types of schemas: Avro®, JSON Schema, and Protobuf schemas.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Create_schema.gif&#34; alt=&#34;Create Schema Registry&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Before producing avro/protobuf encoded messages, you have to add a schema for the topic in Schema Registry. Now all these steps are easy to do with a few clicks in a user-friendly interface.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Schema_Topic.gif&#34; alt=&#34;Avro Schema Topic&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;To run Kafbat UI, you can use either a pre-built Docker image or build it (or a jar file) yourself.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start (Demo run)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it -p 8080:8080 -e DYNAMIC_CONFIG_ENABLED=true ghcr.io/kafbat/kafka-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then access the web UI at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The command is sufficient to try things out. When you&#39;re done trying things out, you can proceed with a &lt;a href=&#34;https://ui.docs.kafbat.io/quick-start/persistent-start&#34;&gt;persistent installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Persistent installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;services:&#xA;  kafbat-ui:&#xA;    container_name: kafbat-ui&#xA;    image: ghcr.io/kafbat/kafka-ui:latest&#xA;    ports:&#xA;      - 8080:8080&#xA;    environment:&#xA;      DYNAMIC_CONFIG_ENABLED: &#39;true&#39;&#xA;    volumes:&#xA;      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/configuration-file&#34;&gt;configuration&lt;/a&gt; page to proceed with further app configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Some useful configuration related links&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/configuration-wizard&#34;&gt;Web UI Cluster Configuration Wizard&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/configuration-file&#34;&gt;Configuration file explanation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/compose-examples&#34;&gt;Docker Compose examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/misc-configuration-properties&#34;&gt;Misc configuration properties&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Helm charts&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/helm-charts/quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building from sources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/development/building/prerequisites&#34;&gt;Quick start&lt;/a&gt; with building&lt;/p&gt; &#xA;&lt;h2&gt;Liveliness and readiness probes&lt;/h2&gt; &#xA;&lt;p&gt;Liveliness and readiness endpoint is at &lt;code&gt;/actuator/health&lt;/code&gt;.&lt;br&gt; Info endpoint (build info) is located at &lt;code&gt;/actuator/info&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration options&lt;/h1&gt; &#xA;&lt;p&gt;All the environment variables/config properties could be found &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/misc-configuration-properties&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://ui.docs.kafbat.io/development/contributing&#34;&gt;contributing guide&lt;/a&gt;, we&#39;ll guide you from there.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;As we&#39;re fully independent, team members contribute in their free time. Your support is crucial for us, if you wish to sponsor us, take a look &lt;a href=&#34;https://github.com/sponsors/kafbat&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nageoffer/12306</title>
    <updated>2024-10-02T01:31:31Z</updated>
    <id>tag:github.com,2024-10-02:/nageoffer/12306</id>
    <link href="https://github.com/nageoffer/12306" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 官方推荐 🔥 大学春招、秋招、应届项目，SpringBoot3 + Java17 + SpringCloud Alibaba + Vue3 等技术架构，完成高仿铁路 12306 用户 + 抢票 + 订单 + 支付服务，帮助学生主打就业的项目。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;什么是 12306？&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🧐 为什么 12306 铁路购票项目更适合校招：&lt;a href=&#34;https://nageoffer.com/12306/suitable/&#34;&gt;https://nageoffer.com/12306&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔥 12306 在线体验地址：&lt;a href=&#34;http://12306.magestack.cn/ticketSearch&#34;&gt;http://12306.magestack.cn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;12306 铁路购票服务是与大家生活和出行相关的关键系统，包括会员、购票、订单、支付和网关等服务。&lt;/p&gt; &#xA;&lt;p&gt;这个项目旨在让学习者可以快速掌握分布式系统设计的技巧，尤其适合对高并发、分布式感兴趣的同学学习。如果想深入理解和应用分布式系统的设计原则，这个项目将会是一个很好的学习资源。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果对开源感兴趣，可以关注马哥的中间件项目：动态线程池框架 &lt;a href=&#34;https://github.com/opengoofy/hippo4j&#34;&gt;Hippo4j&lt;/a&gt; 。6.2kStar，43家企业使用。&lt;/p&gt; &#xA; &lt;p&gt;有几位同学参与 Hippo4j 的贡献后，将这段经历写到了简历上，都拿了不错的大厂offer。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;12306 项目中包含了缓存、消息队列、分库分表、设计模式等代码，通过这些代码可以全面了解分布式系统的核心知识点。&lt;/p&gt; &#xA;&lt;p&gt;为了方便大家学习，该系统提供了两种独立版本：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;SpringBoot 聚合服务版本&lt;/strong&gt;：适合测试和部署，可以直接启动 &lt;code&gt;aggregation-service&lt;/code&gt; 聚合服务和网关服务。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;SpringCloud 微服务版本&lt;/strong&gt;：适合学习微服务设计，可以分别启动支付、订单、用户、购票和网关服务。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;根据自己的学习和使用需求，选择合适的版本启动即可。微服务版本侧重学习设计，聚合服务版本侧重测试和部署。请根据场景需要，选择正确的版本进行学习和使用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/12306-base-biz-20230801.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;技术架构&lt;/h2&gt; &#xA;&lt;p&gt;在系统设计中，采用最新 JDK17 + SpringBoot3&amp;amp;SpringCloud 微服务架构，构建高并发、大数据量下仍然能提供高效可靠的 12306 购票服务。&lt;/p&gt; &#xA;&lt;p&gt;通过学习 12306 项目，不仅能了解其运作机制，还能接触最新技术体系带来的新特性，从而拓展技术视野并提升自身技术水平。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/1676637853202-c2af9e93-fe03-4c01-9fed-20ca07263476.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;下方的架构图全面描述了项目的服务集合、组件库列表和基础设置层等要素，有助于用户快速了解 12306 平台的顶层设计和业务细节，从零到一进行构建。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/image-20230802104007774.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;加群沟通&lt;/h2&gt; &#xA;&lt;p&gt;开源不易，右上角点个 Star 鼓励一下吧！&lt;/p&gt; &#xA;&lt;p&gt;如果大家想要实时关注 12306 更新的文章以及分享的干货的话，可以关注我的公众号：&lt;code&gt;马丁玩编程&lt;/code&gt;。&lt;/p&gt; &#xA;&lt;p&gt;使用过程中有任何问题，或者对项目有什么建议，添加好友备注：12306，领取项目学习资料，和 &lt;code&gt;2000+&lt;/code&gt; 志同道合的朋友交流讨论。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/1_990064918_171_84_3_716500817_c4659af930df3a2532d02b8fcc0f0cbe.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目质量怎么样？&lt;/h2&gt; &#xA;&lt;p&gt;我理解大家对选择一个合适的项目以投入时间和精力的担忧。选对项目既可以锻炼技能，又可以产出价值是非常重要的。&lt;/p&gt; &#xA;&lt;p&gt;以用户服务系统为例，低并发和低数据量的系统相对简单，但高并发和海量数据的系统则需要考虑很多额外因素。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;当用户在 12306 网站注册新账号或添加乘车人时，系统需验证用户提交信息的真实性和准确性。如何有效预防用户提交虚假信息，保障系统购票的安全？&lt;/li&gt; &#xA; &lt;li&gt;12306 的大规模用户和乘车人数据如何选择分库分表？选择哪个字段作为分片键？如何在老业务上平滑上线分库分表？出现问题如何快速回滚？&lt;/li&gt; &#xA; &lt;li&gt;系统支持会员使用用户名、手机号以及邮箱等多种方式进行登录。由于登录时无法确定用户的分片键，造成的“读请求扩散”问题如何解决？&lt;/li&gt; &#xA; &lt;li&gt;在高并发的会员注册场景下，绝对会出现缓存穿透问题。网上鼓吹的对不存在 Key 进行缓存值设为 Null，以及布隆过滤器等都存在漏洞，如何解决？&lt;/li&gt; &#xA; &lt;li&gt;存在较多的敏感信息，比如会员或者乘车人的姓名、手机号、邮箱、证件号码以及住址，如何防止数据库被攻击时造成的敏感信息泄露？&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;再以购票服务为例，当用户购买两个乘车人的高铁一等座票且没有选座时，座位的分配逻辑如下：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;首先检查当前列车的一等座余票是否足够。如果余票不足，直接向客户端返回购票请求失败的响应；&lt;/li&gt; &#xA; &lt;li&gt;获取所有车厢中有两个座位余票的车厢，并对这些车厢进行遍历，按照下述流程执行；&lt;/li&gt; &#xA; &lt;li&gt;首先检查所有车厢中是否存在一等座车票的相邻座位。如果所有车厢中都没有相邻座位，进入下一步逻辑；&lt;/li&gt; &#xA; &lt;li&gt;接着检查是否有车厢中包含两个不相邻的一等座座位？因为同车厢两座位相邻座位没有的话，就退而找同车厢不相邻座位；&lt;/li&gt; &#xA; &lt;li&gt;如果以上逻辑都无法满足，那么最后选择分配不同车厢的不相邻座位。这种情况下，由于已经确认一等座的余票充足，因此一定能够成功完成购票；&lt;/li&gt; &#xA; &lt;li&gt;通过以上步骤，购票系统能够在高铁一等座票余票充足的情况下，合理地分配座位，确保乘车人出行时有良好的座位体验。同时，如果余票不足，系统会优先满足乘车人顺利购票的需求。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;如何使用&lt;/h2&gt; &#xA;&lt;p&gt;12306 前端系统实现了与官网极为接近的业务逻辑和 UI 展示。&lt;/p&gt; &#xA;&lt;p&gt;在学习过程中，通过类似官网的前端系统直接调试后端服务，可以避免纯通过接口测试的繁琐。这种真实场景的模拟，使得学习过程更加流畅高效。&lt;/p&gt; &#xA;&lt;p&gt;目前前端系统还在开发中，部分业务及细节处还在调整，完成后统一给出控制台操作手册，请耐心等待。&lt;/p&gt; &#xA;&lt;h3&gt;1. 车票查询功能&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/image-20230716114538112.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. 提交订单页，选择乘车人下单&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/image-20231006135057984.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3. 高铁在线选座页面&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/image-20231006123150513.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4. 订单确认页&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/image-20231006123458176.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;12306 购票误区&lt;/h2&gt; &#xA;&lt;p&gt;说些大家对于 12306 购票时没有考虑到的一些业务点，或者存在误区的地方。&lt;/p&gt; &#xA;&lt;p&gt;背景：假设，有一站列车，途径北京南、济南西、南京南、杭州东、宁波。&lt;/p&gt; &#xA;&lt;p&gt;查询站点对应的列车车次信息。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;你以为：通过搜索引擎技术 ElasticSearch 技术解决，因为涉及大量的查询条件。比如：车次、车组、出发车站、到达车站、出发时间等。&lt;/li&gt; &#xA; &lt;li&gt;实际上 ：当海量并发查询时，ElasticSearch 的并发能力以及资源占用情况来说，并不适用。而且，大家如果仔细思考，发现这些查询条件都是可以通过类似于 Redis 的缓存技术存储，并在内存中进行组装。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;买一张北京南到南京南的车票。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;你以为：只扣减北京南到南京南单趟的票。&lt;/li&gt; &#xA; &lt;li&gt;实际上：会扣减北京南-济南西，北京南-南京南，济南西-南京南的三趟车票。如果其中有任意条件不满足都不会购买成功。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;买一张济南西到南京南的车票。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;你以为：按照上述逻辑，如果通过软件恶意刷票，只买济南西-南京南的票，北京南-杭州东是否就买不到了？&lt;/li&gt; &#xA; &lt;li&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;实际上：每个站数之间的数量都有规则。虽然放票时间都是一致的，但是优先大站之间的票量，避免因为大量用户购买了中间站的车票导致始发站和终点站的购票困难。该问题通过动态放票解决，比如刚开始放票时对小站之间仅开放少量票，大站之间放出来多数票。如果后续接近发车时间，再开放小站间的车票。&lt;/p&gt; &#xA;&lt;p&gt;当然，业务以及技术上的难点和亮点并不止于这些，更多的信息可以通过代码以及 12306 的使用上进行发掘。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/1692630338302-112a230f-c0df-4764-a12b-ac5cab805f1f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;常见问题答疑&lt;/h2&gt; &#xA;&lt;p&gt;Q：面向人群是学生，但是里面这么多的代码设计方案，学生能看明白么？&lt;/p&gt; &#xA;&lt;p&gt;A：文档中准备了两部分资料，一部分是讲解技术实现细节，通过该部分可以很好掌握核心技术；另一部分是讲如何从零到一实现系统；通过两种文档结合，可以很好吸收 12306 系统中的设计。&lt;/p&gt; &#xA;&lt;p&gt;Q：如何把 12306 项目写到我的简历上？&lt;/p&gt; &#xA;&lt;p&gt;A：马哥在文档库最后给大家提供了 12306 写到简历上的亮点、难点以及解决方案。其次，通过 12306 去面试的小伙伴的面试题也会进行汇总，免费供大家学习使用。&lt;/p&gt; &#xA;&lt;p&gt;Q：工作几年的有必要看 12306 这个系统么？&lt;/p&gt; &#xA;&lt;p&gt;A：我觉得有必要，已经工作的同学虽然没办法把这个项目应用到简历上，但是系统中好的设计却是可以代入到自己的项目中，提高自己项目的亮点以及难点。&lt;/p&gt; &#xA;&lt;h2&gt;项目文档&lt;/h2&gt; &#xA;&lt;p&gt;共计 100+ 核心技术文档！帮助你深入了解以及快手上手 12306 系统。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;入门准备&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306&#34;&gt;什么是 12306&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/scene&#34;&gt;为什么 12306 更适合学生&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/framework&#34;&gt;后端技术架构选型&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/interface/&#34;&gt;项目接口文档&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/console/&#34;&gt;前端控制台手册&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/how-to-study/&#34;&gt;如何从零到一学习 12306&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;快速开始&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/008ee6/&#34;&gt;项目依赖中间件环境搭建&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/33d574/&#34;&gt;快速启动（后端）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/088c16/&#34;&gt;快速启动（前端）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/dd027d/&#34;&gt;12306 用户体系建设概要&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;......&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;核心技术文档&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/distributed-id/&#34;&gt;如何生成全局唯一分布式 ID&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/threadpool-build/&#34;&gt;如何使用 Builder 模式创建线程池&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/chain/&#34;&gt;责任链模式重构复杂业务场景&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/abstract-chain/&#34;&gt;死磕设计模式之抽象责任链模式&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;......&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;手摸手从零到一实现&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/%E6%89%8B%E6%91%B8%E6%89%8B%E4%BB%8E%E9%9B%B6%E5%88%B0%E4%B8%80%E5%AE%9E%E7%8E%B0/%E6%89%8B%E6%91%B8%E6%89%8B%E4%B9%8B%E6%A2%B3%E7%90%86%E6%A0%B8%E5%BF%83%E4%B8%9A%E5%8A%A1/&#34;&gt;手摸手之梳理核心业务&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/%E6%89%8B%E6%91%B8%E6%89%8B%E4%BB%8E%E9%9B%B6%E5%88%B0%E4%B8%80%E5%AE%9E%E7%8E%B0/%E6%89%8B%E6%91%B8%E6%89%8B%E4%B9%8B%E5%AD%A6%E4%B9%A0%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E7%BB%93%E6%9E%84%E4%BF%A1%E6%81%AF/&#34;&gt;手摸手之梳理数据库表结构设计&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;......&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;面试系列&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/%E9%9D%A2%E8%AF%95%E7%B3%BB%E5%88%97/%E5%A6%82%E4%BD%95%E6%8A%8A12306%E5%86%99%E5%88%B0%E7%AE%80%E5%8E%86%E4%B8%8A/&#34;&gt;如何把 12306 写到简历上&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/%E9%9D%A2%E8%AF%95%E7%B3%BB%E5%88%97/%E9%9D%A2%E8%AF%95%E5%AE%98%E9%97%AE12306%E9%A1%B9%E7%9B%AE%E6%80%8E%E4%B9%88%E6%9D%A5%E7%9A%84%EF%BC%9F/&#34;&gt;面试官问 12306 项目怎么来的？&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://nageoffer.com/12306/question/&#34;&gt;快手校招一面（12306 面试真题）&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;......&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;项目中的文档包括三部分，快速开始、核心技术文档以及从零到一开发。可根据自己的兴趣选择深入了解核心技术或从零到一复刻系统。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oss.open8gu.com/12306%E6%96%87%E7%AB%A0%E7%BB%93%E6%9E%84-20230917.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>