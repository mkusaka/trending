<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-04T01:33:42Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gaucho-matrero/altoclef</title>
    <updated>2022-12-04T01:33:42Z</updated>
    <id>tag:github.com,2022-12-04:/gaucho-matrero/altoclef</id>
    <link href="https://github.com/gaucho-matrero/altoclef" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Plays block game&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;altoclef&lt;/h1&gt; &#xA;&lt;p&gt;Plays block game.&lt;/p&gt; &#xA;&lt;p&gt;Powered by Baritone.&lt;/p&gt; &#xA;&lt;p&gt;A client side bot that can accomplish any Minecraft task that is relatively simple and can be split into smaller tasks. &#34;Relatively Simple&#34; is a vague term, so check the list of current capabilities to see examples.&lt;/p&gt; &#xA;&lt;p&gt;Became &lt;a href=&#34;https://youtu.be/baAa6s8tahA&#34;&gt;the first bot to beat Minecraft fully autonomously&lt;/a&gt; on May 24, 2021.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Join the &lt;a href=&#34;https://discord.gg/JdFP4Kqdqc&#34;&gt;Discord Server&lt;/a&gt;&lt;/strong&gt; for discussions/updates/goofs &amp;amp; gaffs&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;Take a look at this &lt;a href=&#34;https://github.com/gaucho-matrero/altoclef/wiki/1:-Documentation:-Big-Picture&#34;&gt;Guide from the wiki&lt;/a&gt; or this &lt;a href=&#34;https://youtu.be/q5OmcinQ2ck?t=387&#34;&gt;Video explanation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Current capabilities, Examples:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Obtain 400+ Items from a fresh survival world, like diamond armor, cake, and nether brick stairs&lt;/li&gt; &#xA; &lt;li&gt;Dodge mob projectiles and force field mobs away while accomplishing arbitrary tasks&lt;/li&gt; &#xA; &lt;li&gt;Collect + smelt food from animals, hay, &amp;amp; crops&lt;/li&gt; &#xA; &lt;li&gt;Receive commands from chat whispers via /msg. Whitelist + Blacklist configurable (hereby dubbed the Butler System). Here&#39;s a &lt;a href=&#34;https://drive.google.com/file/d/1axVYYMJ5VjmVHaWlCifFHTwiXlFssOUc/view?usp=sharing&#34;&gt;Butler system demo video&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Simple config file that can be reloaded via command (check .minecraft directory)&lt;/li&gt; &#xA; &lt;li&gt;Beat the entire game on its own (no user input.)&lt;/li&gt; &#xA; &lt;li&gt;Print the entire bee movie script with signs in a straight line, automatically collecting signs + bridging materials along the way.&lt;/li&gt; &#xA; &lt;li&gt;Become the terminator: Run away from players while unarmed, gather diamond gear in secret, then return and wreak havoc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; After installing, please move/delete your old baritone configurations if you have any. Preexisting baritone configurations will interfere with altoclef and introduce bugs. This will be fixed in the future.&lt;/p&gt; &#xA;&lt;h3&gt;Nightly Release (Recommended) (has the latest bug fixes)&lt;/h3&gt; &#xA;&lt;p&gt;Start by downloading &lt;a href=&#34;https://github.com/gaucho-matrero/altoclef/releases&#34;&gt;the Latest Long Term Release&lt;/a&gt;, then &lt;a href=&#34;https://nightly.link/gaucho-matrero/altoclef/workflows/gradle/main/Artifacts.zip&#34;&gt;Download the Nightly&lt;/a&gt; &amp;amp; replace &lt;code&gt;altoclef-4.0-SNAPSHOT.jar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If the Nightly Link doesn&#39;t work, check the latest &lt;a href=&#34;https://github.com/gaucho-matrero/altoclef/actions&#34;&gt;Build Action&lt;/a&gt; that succeeded and download &lt;code&gt;Artifacts.zip&lt;/code&gt; (you must be signed into GitHub). Replace your existing &lt;code&gt;altoclef-4.0-SNAPSHOT.jar&lt;/code&gt; with the one found in &lt;code&gt;Artifacts.zip&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then, copy &lt;code&gt;altoclef-4.0-SNAPSHOT.jar&lt;/code&gt; from &lt;code&gt;Artifacts.zip&lt;/code&gt; to &lt;code&gt;./mods&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then, copy the &lt;code&gt;baritone-unoptimized-fabric-1.XX.X.jar&lt;/code&gt; from the long term release zip file to &lt;code&gt;./mods&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Long Term Release&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gaucho-matrero/altoclef/releases&#34;&gt;Check releases&lt;/a&gt;. Note you will need to copy over both jar files for the mod to work.&lt;/p&gt; &#xA;&lt;h3&gt;Meloweh&#39;s Extra Features Release (Unofficial)&lt;/h3&gt; &#xA;&lt;p&gt;Has some schematic support, command macros and a few utility features. Will eventually be merged, but if you can try it out now if you&#39;d like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Meloweh/altoclef/releases&#34;&gt;AltoClef jar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Meloweh/baritone/releases&#34;&gt;Baritone jar&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Versions&lt;/h3&gt; &#xA;&lt;p&gt;This is a &lt;strong&gt;fabric only&lt;/strong&gt; mod, currently only available for &lt;strong&gt;Minecraft 1.18&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For older MC versions, try &lt;a href=&#34;https://www.curseforge.com/minecraft/mc-mods/multiconnect&#34;&gt;multiconnect&lt;/a&gt; (NOTE: multiconnect is untested and not affiliated with altoclef, use at your own risk!)&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gaucho-matrero/altoclef/main/usage.md&#34;&gt;Usage Guide&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gaucho-matrero/altoclef/main/todos.md&#34;&gt;TODO&#39;s/Future Features&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/gaucho-matrero/altoclef/main/develop.md&#34;&gt;Development Guide&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>camunda/zeebe</title>
    <updated>2022-12-04T01:33:42Z</updated>
    <id>tag:github.com,2022-12-04:/camunda/zeebe</id>
    <link href="https://github.com/camunda/zeebe" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Distributed Workflow Engine for Microservices Orchestration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zeebe - Workflow Engine for Microservices Orchestration&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/io.camunda.zeebe/camunda-zeebe&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/io.camunda.zeebe/camunda-zeebe/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Zeebe provides visibility into and control over business processes that span multiple microservices. It is the engine that powers &lt;a href=&#34;https://camunda.com/platform/zeebe/&#34;&gt;Camunda Platform 8&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why Zeebe?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Define processes visually in &lt;a href=&#34;https://www.omg.org/spec/BPMN/2.0.2/&#34;&gt;BPMN 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose your programming language&lt;/li&gt; &#xA; &lt;li&gt;Deploy with &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt; and &lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build processes that react to messages from &lt;a href=&#34;https://kafka.apache.org/&#34;&gt;Kafka&lt;/a&gt; and other message queues&lt;/li&gt; &#xA; &lt;li&gt;Scale horizontally to handle very high throughput&lt;/li&gt; &#xA; &lt;li&gt;Fault tolerance (no relational database required)&lt;/li&gt; &#xA; &lt;li&gt;Export process data for monitoring and analysis&lt;/li&gt; &#xA; &lt;li&gt;Engage with an active community&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://camunda.com/platform/zeebe/&#34;&gt;Learn more at camunda.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Release Lifecycle&lt;/h2&gt; &#xA;&lt;p&gt;Our release cadence within major releases is a minor release every six months, with an alpha release on each of the five months between minor releases. Releases happen on the second Tuesday of the month, Berlin time (CET).&lt;/p&gt; &#xA;&lt;p&gt;Minor releases are supported with patches for twelve months after their release.&lt;/p&gt; &#xA;&lt;p&gt;Here is a diagram illustrating the lifecycle of minor releases over a 20-month period:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20&#xA;x.1---------------------------------------------|&#xA;                        x.2---------------------------------------------|&#xA;                                                x.3---------------------------&#xA;                                                                        x.4---&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is a diagram illustrating the release schedule of the five alpha releases prior to an upcoming minor release over a 7-month period:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1         2            3            4            5            6            7&#xA;x.1       x.2-alpha1   x.2-alpha2   x.2-alpha3   x.2-alpha4   x.2-alpha5   x.2&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;To learn more about what we&#39;re currently working on, check the &lt;a href=&#34;https://github.com/camunda/zeebe/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc&#34;&gt;GitHub issues&lt;/a&gt; and the &lt;a href=&#34;https://github.com/camunda/zeebe/commits/main&#34;&gt;latest commits&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Helpful Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/camunda/zeebe/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/camunda/zeebe/tags?page=1&amp;amp;ordering=last_updated&#34;&gt;Pre-built Docker images&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/docs/building_docker_images.md&#34;&gt;Building Docker images for other platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://camunda.com/blog/category/process-automation-as-a-service/&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.camunda.io&#34;&gt;Documentation Home&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/camunda/zeebe/issues&#34;&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://forum.camunda.io&#34;&gt;User Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zeebe-slack-invite.herokuapp.com/&#34;&gt;Slack Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/CONTRIBUTING.md&#34;&gt;Contribution Guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Recommended Docs Entries for New Users&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.camunda.io/docs/components/concepts/what-is-camunda-platform-8/&#34;&gt;What is Camunda Platform 8?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.camunda.io/docs/guides/&#34;&gt;Getting Started Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.camunda.io/docs/components/zeebe/technical-concepts/&#34;&gt;Technical Concepts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.camunda.io/docs/components/modeler/bpmn/bpmn-primer/&#34;&gt;BPMN Processes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.camunda.io/docs/self-managed/zeebe-deployment/&#34;&gt;Installation and Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.camunda.io/docs/apis-clients/java-client/&#34;&gt;Java Client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.camunda.io/docs/apis-clients/go-client/&#34;&gt;Go Client&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/camunda-community-hub/spring-zeebe/&#34;&gt;Spring Integration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/CONTRIBUTING.md&#34;&gt;Contributions Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project adheres to the &lt;a href=&#34;https://camunda.com/events/code-conduct/&#34;&gt;Camunda Code of Conduct&lt;/a&gt;. By participating, you are expected to uphold this code. Please &lt;a href=&#34;https://camunda.com/events/code-conduct/reporting-violations/&#34;&gt;report&lt;/a&gt; unacceptable behavior as soon as possible.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Zeebe source files are made available under the &lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/licenses/ZEEBE-COMMUNITY-LICENSE-1.1.txt&#34;&gt;Zeebe Community License Version 1.1&lt;/a&gt; except for the parts listed below, which are made available under the &lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/licenses/APACHE-2.0.txt&#34;&gt;Apache License, Version 2.0&lt;/a&gt;. See individual source files for details.&lt;/p&gt; &#xA;&lt;p&gt;Available under the &lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/licenses/APACHE-2.0.txt&#34;&gt;Apache License, Version 2.0&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java Client (&lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/clients/java&#34;&gt;clients/java&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Go Client (&lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/clients/go&#34;&gt;clients/go&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Exporter API (&lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/exporter-api&#34;&gt;exporter-api&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Protocol (&lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/protocol&#34;&gt;protocol&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Gateway Protocol Implementation (&lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/gateway-protocol-impl&#34;&gt;gateway-protocol-impl&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;BPMN Model API (&lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/bpmn-model&#34;&gt;bpmn-model&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Clarification on gRPC Code Generation&lt;/h3&gt; &#xA;&lt;p&gt;The Zeebe Gateway Protocol (API) as published in the &lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/gateway-protocol/src/main/proto/gateway.proto&#34;&gt;gateway-protocol&lt;/a&gt; is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/camunda/zeebe/main/licenses/ZEEBE-COMMUNITY-LICENSE-1.1.txt&#34;&gt;Zeebe Community License 1.1&lt;/a&gt;. Using gRPC tooling to generate stubs for the protocol does not constitute creating a derivative work under the Zeebe Community License 1.1 and no licensing restrictions are imposed on the resulting stub code by the Zeebe Community License 1.1.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>firebase/firebase-android-sdk</title>
    <updated>2022-12-04T01:33:42Z</updated>
    <id>tag:github.com,2022-12-04:/firebase/firebase-android-sdk</id>
    <link href="https://github.com/firebase/firebase-android-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firebase Android SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Firebase Android Open Source Development&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a subset of the Firebase Android SDK source. It currently includes the following Firebase libraries, and some of their dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-abt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-appdistribution&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-common&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-common-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-crashlytics&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-crashlytics-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-crashlytics-ndk&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-database&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-database-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-database-collection&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-datatransport&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-firestore&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-firestore-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-functions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-functions-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-inappmessaging&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-inappmessaging-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-inappmessaging-display&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-inappmessaging-display-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-messaging&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-messaging-directboot&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-perf&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-perf-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-remote-config&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-remote-config-ktx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-storage&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-storage-ktx&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Firebase is an app development platform with tools to help you build, grow and monetize your app. More information about Firebase can be found at &lt;a href=&#34;https://firebase.google.com&#34;&gt;https://firebase.google.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#testing&#34;&gt;Testing&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#unit-testing&#34;&gt;Unit Testing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#integration-testing&#34;&gt;Integration Testing&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#proguarding&#34;&gt;Proguarding&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#APIs-used-via-reflection&#34;&gt;APIs used via reflection&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#APIs-intended-for-developer-consumption&#34;&gt;APIs intended for developer consumption&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#APIs-intended-for-other-firebase-sdks&#34;&gt;APIs intended for other Firebase SDKs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#publishing&#34;&gt;Publishing&lt;/a&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#dependencies&#34;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#commands&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#code-formatting&#34;&gt;Code Formatting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the latest Android Studio (should be 3.0.1 or later)&lt;/li&gt; &#xA; &lt;li&gt;Clone the repo (&lt;code&gt;git clone --recurse-submodules git@github.com:firebase/firebase-android-sdk.git&lt;/code&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When cloning the repo, it is important to get the submodules as well. If you have already cloned the repo without the submodules, you can update the submodules by running &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Import the firebase-android-sdk gradle project into Android Studio using the &lt;strong&gt;Import project(Gradle, Eclipse ADT, etc.)&lt;/strong&gt; option.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;firebase-crashlytics-ndk&lt;/code&gt; must be built with NDK 21. See &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/firebase-crashlytics-ndk/README.md&#34;&gt;firebase-crashlytics-ndk&lt;/a&gt; for more details.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Firebase Android libraries exercise all three types of tests recommended by the &lt;a href=&#34;https://developer.android.com/training/testing/fundamentals#testing-pyramid&#34;&gt;Android Testing Pyramid&lt;/a&gt;. Depending on the requirements of the specific project, some or all of these tests may be used to support changes.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;Running tests with errorprone&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;To run with errorprone add &lt;code&gt;withErrorProne&lt;/code&gt; to the command line, e.g.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;./gradlew :&amp;lt;firebase-project&amp;gt;:check withErrorProne&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Unit Testing&lt;/h3&gt; &#xA;&lt;p&gt;These are tests that run on your machine&#39;s local Java Virtual Machine (JVM). At runtime, these tests are executed against a modified version of android.jar where all final modifiers have been stripped off. This lets us sandbox behaviors at desired places and use popular mocking libraries.&lt;/p&gt; &#xA;&lt;p&gt;Unit tests can be executed on the command line by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew :&amp;lt;firebase-project&amp;gt;:check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Integration Testing&lt;/h3&gt; &#xA;&lt;p&gt;These are tests that run on a hardware device or emulator. These tests have access to Instrumentation APIs, give you access to information such as the &lt;a href=&#34;https://developer.android.com/reference/android/content/Context&#34;&gt;Android Context&lt;/a&gt;. In Firebase, instrumentation tests are used at different capacities by different projects. Some tests may exercise device capabilities, while stubbing any calls to the backend, while some others may call out to nightly backend builds to ensure distributed API compatibility.&lt;/p&gt; &#xA;&lt;p&gt;Along with Espresso, they are also used to test projects that have UI components.&lt;/p&gt; &#xA;&lt;h4&gt;Project Setup&lt;/h4&gt; &#xA;&lt;p&gt;Before you can run integration tests, you need to add a &lt;code&gt;google-services.json&lt;/code&gt; file to the root of your checkout. You can use the &lt;code&gt;google-services.json&lt;/code&gt; from any project that includes an Android App, though you&#39;ll likely want one that&#39;s separate from any production data you have because our tests write random data.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t have a suitable testing project already:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the &lt;a href=&#34;https://console.firebase.google.com/&#34;&gt;Firebase console&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t yet have a project you want to use for testing, create one.&lt;/li&gt; &#xA; &lt;li&gt;Add an Android app to the project&lt;/li&gt; &#xA; &lt;li&gt;Give the app any package name you like.&lt;/li&gt; &#xA; &lt;li&gt;Download the resulting &lt;code&gt;google-services.json&lt;/code&gt; file and put it in the root of your checkout.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Running Integration Tests on Local Emulator&lt;/h4&gt; &#xA;&lt;p&gt;Integration tests can be executed on the command line by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew :&amp;lt;firebase-project&amp;gt;:connectedCheck&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Running Integration Tests on Firebase Test Lab&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You need additional setup for this to work:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;code&gt;gcloud&lt;/code&gt; needs to be &lt;a href=&#34;https://cloud.google.com/sdk/install&#34;&gt;installed&lt;/a&gt; on local machine&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;gcloud&lt;/code&gt; needs to be configured with a project that has billing enabled&lt;/li&gt; &#xA;  &lt;li&gt;&lt;code&gt;gcloud&lt;/code&gt; needs to be authenticated with credentials that have &#39;Firebase Test Lab Admin&#39; role&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Integration tests can be executed on the command line by running&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew :&amp;lt;firebase-project&amp;gt;:deviceCheck&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will execute tests on devices that are configured per project, if nothing is configured for the project, the tests will run on &lt;code&gt;model=Pixel2,version=27,locale=en,orientation=portrait&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Projects can be configured in the following way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;firebaseTestLab {&#xA;  // to get a list of available devices execute `gcloud firebase test android models list`&#xA;  devices = [&#xA;    &#39;&amp;lt;device1&amp;gt;&#39;,&#xA;    &#39;&amp;lt;device2&amp;gt;&#39;,&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Annotations&lt;/h2&gt; &#xA;&lt;p&gt;Firebase SDKs use some special annotations for tooling purposes.&lt;/p&gt; &#xA;&lt;h3&gt;@Keep&lt;/h3&gt; &#xA;&lt;p&gt;APIs that need to be preserved up until the app&#39;s runtime can be annotated with &lt;a href=&#34;https://developer.android.com/reference/android/support/annotation/Keep&#34;&gt;@Keep&lt;/a&gt;. The &lt;a href=&#34;https://developer.android.com/reference/android/support/annotation/Keep&#34;&gt;@Keep&lt;/a&gt; annotation is &lt;em&gt;blessed&lt;/em&gt; to be honored by android&#39;s &lt;a href=&#34;https://developer.android.com/studio/write/annotations#keep&#34;&gt;default proguard configuration&lt;/a&gt;. A common use for this annotation is because of reflection. These APIs should be generally &lt;strong&gt;discouraged&lt;/strong&gt;, because they can&#39;t be proguarded.&lt;/p&gt; &#xA;&lt;h3&gt;@KeepForSdk&lt;/h3&gt; &#xA;&lt;p&gt;APIs that are intended to be used by Firebase SDKs should be annotated with &lt;code&gt;@KeepForSdk&lt;/code&gt;. The key benefit here is that the annotation is &lt;em&gt;blessed&lt;/em&gt; to throw linter errors on Android Studio if used by the developer from a non firebase package, thereby providing a valuable guard rail.&lt;/p&gt; &#xA;&lt;h3&gt;@PublicApi&lt;/h3&gt; &#xA;&lt;p&gt;We annotate APIs that meant to be used by developers with &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/firebase-common/src/main/java/com/google/firebase/annotations/PublicApi.java&#34;&gt;@PublicAPI&lt;/a&gt;. This annotation will be used by tooling to help inform the version bump (major, minor, patch) that is required for the next release.&lt;/p&gt; &#xA;&lt;h2&gt;Proguarding&lt;/h2&gt; &#xA;&lt;p&gt;Firebase SDKs do not proguard themselves, but support proguarding. Firebase SDKs themselves are proguard friendly, but the dependencies of Firebase SDKs may not be.&lt;/p&gt; &#xA;&lt;h3&gt;Proguard config&lt;/h3&gt; &#xA;&lt;p&gt;In addition to preguard.txt, projects declare an additional set of proguard rules in a proguard.txt that are honored by the developer&#39;s app while building the app&#39;s proguarded apk. This file typically contains the keep rules that need to be honored during the app&#39; s proguarding phase.&lt;/p&gt; &#xA;&lt;p&gt;As a best practice, these explicit rules should be scoped to only libraries whose source code is outside the firebase-android-sdk codebase making annotation based approaches insufficient.The combination of keep rules resulting from the annotations, the preguard.txt and the proguard.txt collectively determine the APIs that are preserved at &lt;strong&gt;runtime&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Publishing&lt;/h2&gt; &#xA;&lt;p&gt;Firebase is published as a collection of libraries each of which either represents a top level product, or contains shared functionality used by one or more projects. The projects are published as managed maven artifacts available at &lt;a href=&#34;https://maven.google.com&#34;&gt;Google&#39;s Maven Repository&lt;/a&gt;. This section helps reason about how developers may make changes to firebase projects and have their apps depend on the modified versions of Firebase.&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Any dependencies, within the projects, or outside of Firebase are encoded as &lt;a href=&#34;https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html&#34;&gt;maven dependencies&lt;/a&gt; into the &lt;code&gt;pom&lt;/code&gt; file that accompanies the published artifact. This allows the developer&#39;s build system (typically Gradle) to build a dependency graph and select the dependencies using its own &lt;a href=&#34;https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.ResolutionStrategy.html&#34;&gt;resolution strategy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;The simplest way to publish a project and all its associated dependencies is to just publish all projects. The following command builds SNAPSHOT dependencies of all projects. All pom level dependencies within the published artifacts will also point to SNAPSHOT versions that are co-published.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew publishAllToLocal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Developers may take a dependency on these locally published versions by adding the &lt;code&gt;mavenLocal()&lt;/code&gt; repository to your &lt;a href=&#34;https://docs.gradle.org/current/userguide/declaring_repositories.html&#34;&gt;repositories block&lt;/a&gt; in your app module&#39;s build.gradle.&lt;/p&gt; &#xA;&lt;p&gt;For more advanced use cases where developers wish to make changes to a project, but have transitive dependencies point to publicly released versions, individual projects may be published as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# e.g. to publish Firestore and Functions&#xA;./gradlew -PprojectsToPublish=&#34;:firebase-firestore,:firebase-functions&#34; \&#xA;    publishProjectsToMavenLocal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Code Formatting&lt;/h3&gt; &#xA;&lt;p&gt;Code in this repo is formatted with the google-java-format tool. You can enable this formatting in Android Studio by downloading and installing the &lt;a href=&#34;https://github.com/google/google-java-format&#34;&gt;google-java-format plugin&lt;/a&gt;. The plugin is disabled by default, but the repo contains configuration information and links to additional plugins.&lt;/p&gt; &#xA;&lt;p&gt;To run formatting on your entire project you can run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew :&amp;lt;firebase-project&amp;gt;:googleJavaFormat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;We love contributions! Please read our &lt;a href=&#34;https://raw.githubusercontent.com/firebase/firebase-android-sdk/master/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; to get started.&lt;/p&gt;</summary>
  </entry>
</feed>