<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-25T01:30:55Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>react-native-cameraroll/react-native-cameraroll</title>
    <updated>2024-04-25T01:30:55Z</updated>
    <id>tag:github.com,2024-04-25:/react-native-cameraroll/react-native-cameraroll</id>
    <link href="https://github.com/react-native-cameraroll/react-native-cameraroll" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CameraRoll is a react-native native module that provides access to the local camera roll or photo library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;code&gt;@react-native-camera-roll/camera-roll&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/react-native-cameraroll/workflows/react-native-cameraroll/tree/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/circleci/project/github/react-native-cameraroll/react-native-cameraroll/master.svg?style=flat-square&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/platforms-android%20%7C%20ios-lightgrey.svg?style=flat-square&#34; alt=&#34;Supports Android and iOS&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/l/@react-native-camera-roll/camera-roll.svg?style=flat-square&#34; alt=&#34;MIT License&#34;&gt; &lt;a href=&#34;https://github.com/facebook/react-native/issues/23313&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Lean%20Core-Extracted-brightgreen.svg?style=flat-square&#34; alt=&#34;Lean Core Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;em&gt;Notice&lt;/em&gt;: The NPM package name has changed, please change your package.json dependency!&lt;/h2&gt; &#xA;&lt;p&gt;Previous package name: @react-native-community/cameraroll&lt;/p&gt; &#xA;&lt;p&gt;New package name: @react-native-camera-roll/camera-roll&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;$ npm install @react-native-camera-roll/camera-roll --save&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;$ yarn add @react-native-camera-roll/camera-roll&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Linking&lt;/h2&gt; &#xA;&lt;p&gt;Linking should be automatic since react-native version 0.60. Below are instructions if auto linking does not work.&lt;/p&gt; &#xA;&lt;h3&gt;Mostly automatic installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;$ react-native link @react-native-camera-roll/camera-roll &amp;amp;&amp;amp; npx pod-install&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Manual installation&lt;/h3&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In XCode, in the project navigator, right click &lt;code&gt;Libraries&lt;/code&gt; ➜ &lt;code&gt;Add Files to [your project&#39;s name]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Go to &lt;code&gt;node_modules&lt;/code&gt; ➜ &lt;code&gt;@react-native-camera-roll/camera-roll&lt;/code&gt; and add &lt;code&gt;RNCCameraroll.xcodeproj&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In XCode, in the project navigator, select your project. Add &lt;code&gt;libRNCCameraroll.a&lt;/code&gt; to your project&#39;s &lt;code&gt;Build Phases&lt;/code&gt; ➜ &lt;code&gt;Link Binary With Libraries&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run your project (&lt;code&gt;Cmd+R&lt;/code&gt;)&amp;lt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open up &lt;code&gt;android/app/src/main/java/[...]/MainApplication.java&lt;/code&gt; (Auto link, ^RN0.69 does not required)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add &lt;code&gt;import com.reactnativecommunity.cameraroll.CameraRollPackage;&lt;/code&gt; to the imports at the top of the file&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;new CameraRollPackage()&lt;/code&gt; to the list returned by the &lt;code&gt;getPackages()&lt;/code&gt; method&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Append the following lines to &lt;code&gt;android/settings.gradle&lt;/code&gt;: &lt;pre&gt;&lt;code&gt;include &#39;:@react-native-camera-roll_camera-roll&#39;&#xA;project(&#39;:@react-native-camera-roll_camera-roll&#39;).projectDir = new File(rootProject.projectDir, &#x9;&#39;../node_modules/@react-native-camera-roll/camera-roll/android&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Insert the following lines inside the dependencies block in &lt;code&gt;android/app/build.gradle&lt;/code&gt;: &lt;pre&gt;&lt;code&gt;  implementation project(&#39;:@react-native-camera-roll_camera-roll&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Migrating from the core &lt;code&gt;react-native&lt;/code&gt; module&lt;/h2&gt; &#xA;&lt;p&gt;This module was created when the CameraRoll was split out from the core of React Native. To migrate to this module you need to follow the installation instructions above and then change you imports from:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { CameraRoll } from &#34;react-native&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { CameraRoll } from &#34;@react-native-camera-roll/camera-roll&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;CameraRoll&lt;/code&gt; provides access to the local camera roll or photo library.&lt;/p&gt; &#xA;&lt;h3&gt;Permissions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;iOS&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The user&#39;s permission is required in order to access the Camera Roll on devices running iOS 10 or later. Add the &lt;code&gt;NSPhotoLibraryUsageDescription&lt;/code&gt; key in your &lt;code&gt;Info.plist&lt;/code&gt; with a string that describes how your app will use this data. This key will appear as &lt;code&gt;Privacy - Photo Library Usage Description&lt;/code&gt; in Xcode.&lt;/p&gt; &#xA;&lt;p&gt;If you are targeting devices running iOS 11 or later, you will also need to add the &lt;code&gt;NSPhotoLibraryAddUsageDescription&lt;/code&gt; key in your &lt;code&gt;Info.plist&lt;/code&gt;. Use this key to define a string that describes how your app will use this data. By adding this key to your &lt;code&gt;Info.plist&lt;/code&gt;, you will be able to request write-only access permission from the user. If you try to save to the camera roll without this permission, your app will exit.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Permission is required to read and write to the external storage.&lt;/p&gt; &#xA;&lt;p&gt;On Expo, follow the guide &lt;a href=&#34;https://docs.expo.io/versions/latest/sdk/permissions/&#34;&gt;here&lt;/a&gt; for requesting the permission.&lt;/p&gt; &#xA;&lt;p&gt;On react-native-cli or ejected apps, adding the following lines will add the capability for the app to request the permission. Find more info on Android Permissions &lt;a href=&#34;https://reactnative.dev/docs/permissionsandroid&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;manifest&amp;gt;&#xA;...&#xA;  &amp;lt;uses-permission android:name=&#34;android.permission.READ_MEDIA_IMAGES&#34; /&amp;gt;&#xA;  &amp;lt;uses-permission android:name=&#34;android.permission.READ_MEDIA_VIDEO&#34; /&amp;gt;&#xA;  &amp;lt;uses-permission android:name=&#34;android.permission.READ_EXTERNAL_STORAGE&#34;&#xA;    android:maxSdkVersion=&#34;32&#34; /&amp;gt;&#xA;  &amp;lt;uses-permission android:name=&#34;android.permission.WRITE_EXTERNAL_STORAGE&#34; /&amp;gt;&#xA;...&#xA;&amp;lt;application&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you have to explicitly ask for the permission&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { PermissionsAndroid, Platform } from &#34;react-native&#34;;&#xA;import { CameraRoll } from &#34;@react-native-camera-roll/camera-roll&#34;;&#xA;&#xA;async function hasAndroidPermission() {&#xA;  const getCheckPermissionPromise = () =&amp;gt; {&#xA;    if (Platform.Version &amp;gt;= 33) {&#xA;      return Promise.all([&#xA;        PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.READ_MEDIA_IMAGES),&#xA;        PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.READ_MEDIA_VIDEO),&#xA;      ]).then(&#xA;        ([hasReadMediaImagesPermission, hasReadMediaVideoPermission]) =&amp;gt;&#xA;          hasReadMediaImagesPermission &amp;amp;&amp;amp; hasReadMediaVideoPermission,&#xA;      );&#xA;    } else {&#xA;      return PermissionsAndroid.check(PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE);&#xA;    }&#xA;  };&#xA;&#xA;  const hasPermission = await getCheckPermissionPromise();&#xA;  if (hasPermission) {&#xA;    return true;&#xA;  }&#xA;  const getRequestPermissionPromise = () =&amp;gt; {&#xA;    if (Platform.Version &amp;gt;= 33) {&#xA;      return PermissionsAndroid.requestMultiple([&#xA;        PermissionsAndroid.PERMISSIONS.READ_MEDIA_IMAGES,&#xA;        PermissionsAndroid.PERMISSIONS.READ_MEDIA_VIDEO,&#xA;      ]).then(&#xA;        (statuses) =&amp;gt;&#xA;          statuses[PermissionsAndroid.PERMISSIONS.READ_MEDIA_IMAGES] ===&#xA;            PermissionsAndroid.RESULTS.GRANTED &amp;amp;&amp;amp;&#xA;          statuses[PermissionsAndroid.PERMISSIONS.READ_MEDIA_VIDEO] ===&#xA;            PermissionsAndroid.RESULTS.GRANTED,&#xA;      );&#xA;    } else {&#xA;      return PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.READ_EXTERNAL_STORAGE).then((status) =&amp;gt; status === PermissionsAndroid.RESULTS.GRANTED);&#xA;    }&#xA;  };&#xA;&#xA;  return await getRequestPermissionPromise();&#xA;}&#xA;&#xA;async function savePicture() {&#xA;  if (Platform.OS === &#34;android&#34; &amp;amp;&amp;amp; !(await hasAndroidPermission())) {&#xA;    return;&#xA;  }&#xA;&#xA;  CameraRoll.save(tag, { type, album })&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Methods&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-cameraroll/react-native-cameraroll/master/#save&#34;&gt;&lt;code&gt;save&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-cameraroll/react-native-cameraroll/master/#getalbums&#34;&gt;&lt;code&gt;getAlbums&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-cameraroll/react-native-cameraroll/master/#getphotos&#34;&gt;&lt;code&gt;getPhotos&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-cameraroll/react-native-cameraroll/master/#deletephotos&#34;&gt;&lt;code&gt;deletePhotos&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-cameraroll/react-native-cameraroll/master/#iosgetimagedatabyid&#34;&gt;&lt;code&gt;iosGetImageDataById&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-cameraroll/react-native-cameraroll/master/#usecameraroll&#34;&gt;&lt;code&gt;useCameraRoll&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/react-native-cameraroll/react-native-cameraroll/master/#getphotothumbnail&#34;&gt;&lt;code&gt;getPhotoThumbnail&lt;/code&gt;&lt;/a&gt; &lt;strong&gt;iOS only&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Reference&lt;/h1&gt; &#xA;&lt;h2&gt;Methods&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;CameraRoll.save(tag, { type, album })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Saves the photo or video to the photo library, and returns the URI of the newly created asset.&lt;/p&gt; &#xA;&lt;p&gt;On Android, the tag must be a local image or video URI, such as &lt;code&gt;&#34;file:///sdcard/img.png&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On iOS, the tag can be any image URI (including local, remote asset-library and base64 data URIs) or a local video file URI (remote or data URIs are not supported for saving video at this time).&lt;/p&gt; &#xA;&lt;p&gt;If the tag has a file extension of .mov or .mp4 (lower or uppercase), it will be inferred as a video. Otherwise it will be treated as a photo. To override the automatic choice, you can pass an optional &lt;code&gt;type&lt;/code&gt; parameter that must be one of &#39;photo&#39; or &#39;video&#39;.&lt;/p&gt; &#xA;&lt;p&gt;It allows to specify a particular album you want to store the asset to when the param &lt;code&gt;album&lt;/code&gt; is provided. On Android, if no album is provided, DCIM directory is used, otherwise PICTURE or MOVIES directory is used depending on the &lt;code&gt;type&lt;/code&gt; provided.&lt;/p&gt; &#xA;&lt;p&gt;Returns a Promise which will resolve with the new URI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tag&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;See above.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;type&lt;/td&gt; &#xA;   &lt;td&gt;enum(&#39;photo&#39;, &#39;video&#39;)&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;Overrides automatic detection based on the file extension.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;album&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;   &lt;td&gt;The album to save to&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;saveAsset()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Same as &lt;code&gt;save()&lt;/code&gt;, but returns the full asset information (&lt;code&gt;PhotoIdentifier&lt;/code&gt;) instead of just the URI.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;getAlbums()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;CameraRoll.getAlbums(params);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns a Promise with a list of albums&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;assetType&lt;/code&gt; : {string} : Specifies filter on asset type. Valid values are: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;All&lt;/code&gt; // default&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Videos&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Photos&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;albumType&lt;/code&gt; : {string} : (iOS only) Specifies filter on type of album. Valid values are: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;All&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Album&lt;/code&gt; // default&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;SmartAlbum&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Array of &lt;code&gt;Album&lt;/code&gt; object&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;title: {string}&lt;/li&gt; &#xA; &lt;li&gt;count: {number}&lt;/li&gt; &#xA; &lt;li&gt;type: {string} (iOS only)&lt;/li&gt; &#xA; &lt;li&gt;subtype: {string |&amp;nbsp;undefined} : See AlbumSubType type for possible values. iOS only.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;getPhotos()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;CameraRoll.getPhotos(params);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns a Promise with photo identifier objects from the local camera roll of the device matching shape defined by &lt;code&gt;getPhotosReturnChecker&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;params&lt;/td&gt; &#xA;   &lt;td&gt;object&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Expects a params with the shape described below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;first&lt;/code&gt; : {number} : The number of photos wanted in reverse order of the photo application (i.e. most recent first for SavedPhotos). Required.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;after&lt;/code&gt; : {string} : A cursor that matches &lt;code&gt;page_info { end_cursor }&lt;/code&gt; returned from a previous call to &lt;code&gt;getPhotos&lt;/code&gt;. Note that using this will reduce performance slightly on iOS. An alternative is just using the &lt;code&gt;fromTime&lt;/code&gt; and &lt;code&gt;toTime&lt;/code&gt; filters, which have no such impact.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;groupTypes&lt;/code&gt; : {string} : Specifies which group types to filter the results to. Valid values are: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Album&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;All&lt;/code&gt; // default&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Faces&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Library&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;SmartAlbum&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PhotoStream&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;SavedPhotos&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;groupName&lt;/code&gt; : {string} : Specifies filter on group names, like &#39;Recent Photos&#39; or custom album titles.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;includeSharedAlbums&lt;/code&gt; : {boolean} : Include assets originating from an iCloud Shared Album. iOS only.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;assetType&lt;/code&gt; : {string} : Specifies filter on asset type. Valid values are: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;All&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Videos&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Photos&lt;/code&gt; // default&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mimeTypes&lt;/code&gt; : {Array} : Filter by mimetype (e.g. image/jpeg). Note that using this will reduce performance slightly on iOS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fromTime&lt;/code&gt; : {number} : Filter by creation time with a timestamp in milliseconds. This time is exclusive, so we&#39;ll select all photos with &lt;code&gt;timestamp &amp;gt; fromTime&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;toTime&lt;/code&gt; : {number} : Filter by creation time with a timestamp in milliseconds. This time is inclusive, so we&#39;ll select all photos with &lt;code&gt;timestamp &amp;lt;= toTime&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;include&lt;/code&gt; : {Array} : Whether to include some fields that are slower to fetch &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;filename&lt;/code&gt; : Ensures &lt;code&gt;image.filename&lt;/code&gt; is available in each node. This has a large performance impact on iOS.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;fileSize&lt;/code&gt; : Ensures &lt;code&gt;image.fileSize&lt;/code&gt; is available in each node. This has a large performance impact on iOS.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;fileExtension&lt;/code&gt; : Ensures &lt;code&gt;image.fileExtension&lt;/code&gt; is available in each node.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;location&lt;/code&gt;: Ensures &lt;code&gt;location&lt;/code&gt; is available in each node. This has a large performance impact on Android.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;imageSize&lt;/code&gt; : Ensures &lt;code&gt;image.width&lt;/code&gt; and &lt;code&gt;image.height&lt;/code&gt; are available in each node. This has a small performance impact on Android.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;playableDuration&lt;/code&gt; : Ensures &lt;code&gt;image.playableDuration&lt;/code&gt; is available in each node. This has a medium peformance impact on Android.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;orientation&lt;/code&gt; : Ensures &lt;code&gt;image.orientation&lt;/code&gt; is available in each node. This has a small peformance impact on Android. &lt;strong&gt;Android only&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;albums&lt;/code&gt; : Ensures &lt;code&gt;group_name&lt;/code&gt; is available in each node. This has a large peformance impact on iOS.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;sourceType&lt;/code&gt; : Ensures &lt;code&gt;sourceType&lt;/code&gt; is available in each node.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Returns a Promise which when resolved will be of the following shape:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;edges&lt;/code&gt; : {Array&#xA;  &lt;node&gt;&#xA;   } An array of node objects &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: {object} An object with the following shape: &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;code&gt;id&lt;/code&gt;: {string} : A local identifier. Correspond to &lt;code&gt;Media._ID&lt;/code&gt; on Android and &lt;code&gt;localIdentifier&lt;/code&gt; on iOS.&lt;/li&gt; &#xA;      &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: {string}&lt;/li&gt; &#xA;      &lt;li&gt;&lt;code&gt;subTypes&lt;/code&gt;: {Array&#xA;       &lt;string&gt;&#xA;        } : An array of subtype strings (see &#xA;        &lt;code&gt;SubTypes&lt;/code&gt; type). Always [] on Android.&#xA;       &lt;/string&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;code&gt;sourceType&lt;/code&gt;: {string |&amp;nbsp;null} : &#34;UserLibrary&#34; (for the user library) or &#34;CloudShared&#34; (for an iCloud Shared Album). Always &#34;UserLibrary&#34; on Android.&lt;/li&gt; &#xA;      &lt;li&gt;&lt;code&gt;group_name&lt;/code&gt;: {Array&#xA;       &lt;string&gt;&#xA;        } : An array of albums containing the element. Always 1 element on Android. 0 to n elements on iOS.&#xA;       &lt;/string&gt;&lt;/li&gt; &#xA;      &lt;li&gt;&lt;code&gt;image&lt;/code&gt;: {object} : An object with the following shape: &#xA;       &lt;ul&gt; &#xA;        &lt;li&gt;&lt;code&gt;uri&lt;/code&gt;: {string}&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;filename&lt;/code&gt;: {string | null} : Only set if the &lt;code&gt;include&lt;/code&gt; parameter contains &lt;code&gt;filename&lt;/code&gt;&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;extension&lt;/code&gt;: {string | null} : Only set if the &lt;code&gt;include&lt;/code&gt; parameter contains &lt;code&gt;fileExtension&lt;/code&gt;&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: {number | null} : Only set if the &lt;code&gt;include&lt;/code&gt; parameter contains &lt;code&gt;imageSize&lt;/code&gt;&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: {number | null} : Only set if the &lt;code&gt;include&lt;/code&gt; parameter contains &lt;code&gt;imageSize&lt;/code&gt;&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;fileSize&lt;/code&gt;: {number | null} : Only set if the &lt;code&gt;include&lt;/code&gt; parameter contains &lt;code&gt;fileSize&lt;/code&gt;&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;playableDuration&lt;/code&gt;: {number | null} : Only set for videos if the &lt;code&gt;include&lt;/code&gt; parameter contains &lt;code&gt;playableDuration&lt;/code&gt;. Will be null for images.&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;orientation&lt;/code&gt;: {number | null} : Only set for images if the &lt;code&gt;include&lt;/code&gt; parameter contains &lt;code&gt;orientation&lt;/code&gt;. &lt;strong&gt;Android only&lt;/strong&gt;&lt;/li&gt; &#xA;       &lt;/ul&gt; &lt;/li&gt; &#xA;      &lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt;: {number}&lt;/li&gt; &#xA;      &lt;li&gt;&lt;code&gt;modificationTimestamp&lt;/code&gt;: {number}&lt;/li&gt; &#xA;      &lt;li&gt;&lt;code&gt;location&lt;/code&gt;: {object | null} : Only set if the &lt;code&gt;include&lt;/code&gt; parameter contains &lt;code&gt;location&lt;/code&gt;. An object with the following shape: &#xA;       &lt;ul&gt; &#xA;        &lt;li&gt;&lt;code&gt;latitude&lt;/code&gt;: {number}&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;longitude&lt;/code&gt;: {number}&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;altitude&lt;/code&gt;: {number}&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;heading&lt;/code&gt;: {number}&lt;/li&gt; &#xA;        &lt;li&gt;&lt;code&gt;speed&lt;/code&gt;: {number}&lt;/li&gt; &#xA;       &lt;/ul&gt; &lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/node&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;page_info&lt;/code&gt; : {object} : An object with the following shape: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;has_next_page&lt;/code&gt;: {boolean}&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;start_cursor&lt;/code&gt;: {string}&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;end_cursor&lt;/code&gt;: {string}&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;limited&lt;/code&gt; : {boolean | undefined} : true if the app can only access a subset of the gallery pictures (authorization is &lt;code&gt;PHAuthorizationStatusLimited&lt;/code&gt;), false otherwise (iOS only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Loading images:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;_handleButtonPress = () =&amp;gt; {&#xA;   CameraRoll.getPhotos({&#xA;       first: 20,&#xA;       assetType: &#39;Photos&#39;,&#xA;     })&#xA;     .then(r =&amp;gt; {&#xA;       this.setState({ photos: r.edges });&#xA;     })&#xA;     .catch((err) =&amp;gt; {&#xA;        //Error Loading Images&#xA;     });&#xA;   };&#xA;render() {&#xA; return (&#xA;   &amp;lt;View&amp;gt;&#xA;     &amp;lt;Button title=&#34;Load Images&#34; onPress={this._handleButtonPress} /&amp;gt;&#xA;     &amp;lt;ScrollView&amp;gt;&#xA;       {this.state.photos.map((p, i) =&amp;gt; {&#xA;       return (&#xA;         &amp;lt;Image&#xA;           key={i}&#xA;           style={{&#xA;             width: 300,&#xA;             height: 100,&#xA;           }}&#xA;           source={{ uri: p.node.image.uri }}&#xA;         /&amp;gt;&#xA;       );&#xA;     })}&#xA;     &amp;lt;/ScrollView&amp;gt;&#xA;   &amp;lt;/View&amp;gt;&#xA; );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Loading images with listeners and refetchs:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { CameraRoll, cameraRollEventEmitter } from &#39;@react-native-camera-roll/camera-roll&#39;;&#xA;&#xA;import { useCallback, useEffect, useState } from &#39;react&#39;;&#xA;&#xA;import { AppState, EmitterSubscription } from &#39;react-native&#39;;&#xA;&#xA;interface GalleryOptions {&#xA;  pageSize: number;&#xA;  mimeTypeFilter?: Array&amp;lt;string&amp;gt;;&#xA;}&#xA;&#xA;interface GalleryLogic {&#xA;  photos?: ImageDTO[];&#xA;  loadNextPagePictures: () =&amp;gt; void;&#xA;  isLoading: boolean;&#xA;  isLoadingNextPage: boolean;&#xA;  isReloading: boolean;&#xA;  hasNextPage: boolean;&#xA;}&#xA;&#xA;const supportedMimeTypesByTheBackEnd = [&#xA;  &#39;image/jpeg&#39;,&#xA;  &#39;image/png&#39;,&#xA;  &#39;image/heif&#39;,&#xA;  &#39;image/heic&#39;,&#xA;  &#39;image/heif-sequence&#39;,&#xA;  &#39;image/heic-sequence&#39;,&#xA;];&#xA;&#xA;export const useGallery = ({&#xA;  pageSize = 30,&#xA;  mimeTypeFilter = supportedMimeTypesByTheBackEnd,&#xA;}: GalleryOptions): GalleryLogic =&amp;gt; {&#xA;  const [isLoading, setIsLoading] = useState(false);&#xA;  const [isReloading, setIsReloading] = useState(false);&#xA;  const [isLoadingNextPage, setIsLoadingNextPage] = useState(false);&#xA;  const [hasNextPage, setHasNextPage] = useState(false);&#xA;  const [nextCursor, setNextCursor] = useState&amp;lt;string&amp;gt;();&#xA;  const [photos, setPhotos] = useState&amp;lt;ImageDTO[]&amp;gt;();&#xA;&#xA;  const loadNextPagePictures = useCallback(async () =&amp;gt; {&#xA;    try {&#xA;      nextCursor ? setIsLoadingNextPage(true) : setIsLoading(true);&#xA;      const { edges, page_info } = await CameraRoll.getPhotos({&#xA;        first: pageSize,&#xA;        after: nextCursor,&#xA;        assetType: &#39;Photos&#39;,&#xA;        mimeTypes: mimeTypeFilter,&#xA;        ...(isAndroid &amp;amp;&amp;amp; { include: [&#39;fileSize&#39;, &#39;filename&#39;] }),&#xA;      });&#xA;      const photos = convertCameraRollPicturesToImageDtoType(edges);&#xA;      setPhotos((prev) =&amp;gt; [...(prev ?? []), ...photos]);&#xA;&#xA;      setNextCursor(page_info.end_cursor);&#xA;      setHasNextPage(page_info.has_next_page);&#xA;    } catch (error) {&#xA;      console.error(&#39;useGallery getPhotos error:&#39;, error);&#xA;    } finally {&#xA;      setIsLoading(false);&#xA;      setIsLoadingNextPage(false);&#xA;    }&#xA;  }, [mimeTypeFilter, nextCursor, pageSize]);&#xA;&#xA;  const getUnloadedPictures = useCallback(async () =&amp;gt; {&#xA;    try {&#xA;      setIsReloading(true);&#xA;      const { edges, page_info } = await CameraRoll.getPhotos({&#xA;        first: !photos || photos.length &amp;lt; pageSize ? pageSize : photos.length,&#xA;        assetType: &#39;Photos&#39;,&#xA;        mimeTypes: mimeTypeFilter,&#xA;        // Include fileSize only for android since it&#39;s causing performance issues on IOS.&#xA;        ...(isAndroid &amp;amp;&amp;amp; { include: [&#39;fileSize&#39;, &#39;filename&#39;] }),&#xA;      });&#xA;      const newPhotos = convertCameraRollPicturesToImageDtoType(edges);&#xA;      setPhotos(newPhotos);&#xA;&#xA;      setNextCursor(page_info.end_cursor);&#xA;      setHasNextPage(page_info.has_next_page);&#xA;    } catch (error) {&#xA;      console.error(&#39;useGallery getNewPhotos error:&#39;, error);&#xA;    } finally {&#xA;      setIsReloading(false);&#xA;    }&#xA;  }, [mimeTypeFilter, pageSize, photos]);&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    if (!photos) {&#xA;      loadNextPagePictures();&#xA;    }&#xA;  }, [loadNextPagePictures, photos]);&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    const subscription = AppState.addEventListener(&#39;change&#39;, async (nextAppState) =&amp;gt; {&#xA;      if (nextAppState === &#39;active&#39;) {&#xA;        getUnloadedPictures();&#xA;      }&#xA;    });&#xA;&#xA;    return () =&amp;gt; {&#xA;      subscription.remove();&#xA;    };&#xA;  }, [getUnloadedPictures]);&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    let subscription: EmitterSubscription;&#xA;    if (isAboveIOS14) {&#xA;      subscription = cameraRollEventEmitter.addListener(&#39;onLibrarySelectionChange&#39;, (_event) =&amp;gt; {&#xA;        getUnloadedPictures();&#xA;      });&#xA;    }&#xA;&#xA;    return () =&amp;gt; {&#xA;      if (isAboveIOS14 &amp;amp;&amp;amp; subscription) {&#xA;        subscription.remove();&#xA;      }&#xA;    };&#xA;  }, [getUnloadedPictures]);&#xA;&#xA;  return {&#xA;    photos,&#xA;    loadNextPagePictures,&#xA;    isLoading,&#xA;    isLoadingNextPage,&#xA;    isReloading,&#xA;    hasNextPage,&#xA;  };&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;&lt;code&gt;deletePhotos()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;CameraRoll.deletePhotos([uri]);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Requests deletion of photos in the camera roll.&lt;/p&gt; &#xA;&lt;p&gt;On Android, the uri must be a local image or video URI, such as &lt;code&gt;&#34;file:///sdcard/img.png&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On iOS, the uri can be any image URI (including local, remote asset-library and base64 data URIs) or a local video file URI. The user is presented with a dialog box that shows them the asset(s) and asks them to confirm deletion. This is not able to be bypassed as per Apple Developer guidelines.&lt;/p&gt; &#xA;&lt;p&gt;Returns a Promise which will resolve when the deletion request is completed, or reject if there is a problem during the deletion. On iOS the user is able to cancel the deletion request, which causes a rejection, while on Android the rejection will be due to a system error.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uri&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;See above.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;code&gt;iosGetImageDataById()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;CameraRoll.iosGetImageDataById(internalID, true);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internalID&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Ios internal ID &#39;PH://xxxx&#39;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;options&lt;/td&gt; &#xA;   &lt;td&gt;PhotoConvertionOptions&lt;/td&gt; &#xA;   &lt;td&gt;False&lt;/td&gt; &#xA;   &lt;td&gt;Expects an options object with the shape described below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;convertHeic&lt;/code&gt; : {boolean} : &lt;strong&gt;default = false&lt;/strong&gt; : Whether to convert or not to JPEG image.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;quality&lt;/code&gt; : {number} : &lt;strong&gt;default = 1.0&lt;/strong&gt; : jpeg quality used for compression (a value from 0.0 to 1.0). A value of 0.0 is maximum compression (or lowest quality). A value of 1.0 is least compression (or best quality).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Upload photo/video with &lt;code&gt;iosGetImageDataById&lt;/code&gt; method&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;try {&#xA;// uri &#39;PH://xxxx&#39;&#xA;const fileData = await CameraRoll.iosGetImageDataById(uri);&#xA;if (!fileData?.node?.image?.filepath) return undefined;&#xA;const uploadPath = imageData.node.image.filepath; // output should be file://...&#xA;// fetch or ReactNativeBlobUtil.fetch to upload&#xA;}&#xA;catch (error) {}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Sometimes when calling &lt;code&gt;iosGetImageDataById&lt;/code&gt;, the image/video can be downloaded from iCloud. To be able to receive the progress of this download, you need to add a listener to the &lt;code&gt;onProgressUpdate&lt;/code&gt; event and use it to render on the UI.&lt;/p&gt; &#xA;&lt;p&gt;The event generated will be an object containing the image id (&lt;code&gt;id&lt;/code&gt;) and the progress of the download (&lt;code&gt;progress&lt;/code&gt;). The &lt;code&gt;id&lt;/code&gt; is a string with the &lt;code&gt;internalID&lt;/code&gt; you used to call &lt;code&gt;iosGetImageDataById&lt;/code&gt;. The &lt;code&gt;progress&lt;/code&gt; is a double ranging from 0 to 1, where 0 represents the start of the download and 1 represents the completion of the download.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#xA;import { progressUpdateEventEmitter } from &#39;@react-native-camera-roll/camera-roll&#39;;&#xA;&#xA;useEffect(() =&amp;gt; {&#xA;  const subscription = progressUpdateEventEmitter.addListener(&#xA;    &#39;onProgressUpdate&#39;,&#xA;    event =&amp;gt; {&#xA;      // Render the progress of the image / video being &#xA;      // downloaded using event.id and event.progress&#xA;    },&#xA;  );&#xA;&#xA;  return () =&amp;gt; {&#xA;    subscription.remove();&#xA;  };&#xA;}, []);&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;useCameraRoll()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;useCameraRoll&lt;/code&gt; is a utility hooks for the CameraRoll module.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React, {useEffect} from &#39;react&#39;;&#xA;import {Button} from &#39;react-native&#39;;&#xA;import {useCameraRoll} from &#34;@react-native-camera-roll/camera-roll&#34;;&#xA;&#xA;function Example() {&#xA;  const [photos, getPhotos, save] = useCameraRoll();&#xA;&#xA;  return &amp;lt;&amp;gt;&#xA;    &amp;lt;Button title=&#39;Get Photos&#39; onPress={() =&amp;gt; getPhotos()}&amp;gt;Get Photos&amp;lt;/Button&amp;gt;&#xA;    {&#xA;      photos.map((photo, index) =&amp;gt; /* render photos */)&#xA;    }&#xA;  &amp;lt;/&amp;gt;;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;getPhotoThumbnail()&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;iOS only&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Returns a Promise with thumbnail photo.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Parameters:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;internalID&lt;/td&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Ios internal ID &#39;PH://xxxx&#39;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;options&lt;/td&gt; &#xA;   &lt;td&gt;PhotoThumbnailOptions&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;   &lt;td&gt;Expects an options object with the shape described below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;allowNetworkAccess&lt;/code&gt; : {boolean} : &lt;strong&gt;default = false&lt;/strong&gt; : Specifies whether the requested image can be downloaded from iCloud. &lt;strong&gt;iOS only&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;targetSize&lt;/code&gt; : {ThumbnailSize} : Expects a targetSize with the shape desribed below: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;height&lt;/code&gt; : {number} : &lt;strong&gt;default = 400&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;width&lt;/code&gt; : {number} : &lt;strong&gt;default = 400&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;quality&lt;/code&gt; : {number} : &lt;strong&gt;default = 1.0&lt;/strong&gt; : jpeg quality used for compression (a value from 0.0 to 1.0). A value of 0.0 is maximum compression (or lowest quality). A value of 1.0 is least compression (or best quality).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Returns:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Promise&amp;lt;PhotoThumbnail&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Promise with PhotoThumbnail with the shape described below.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;thumbnailBase64&lt;/code&gt; : {string}&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Example&lt;/h4&gt; &#xA;&lt;p&gt;Loading a thumbnail:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export default function Thumbnail(props) {&#xA;  const [base64Image, setBase64Image] = useState(null);&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    const getThumbnail = async () =&amp;gt; {&#xA;      const options = {&#xA;        allowNetworkAccess: true,&#xA;        targetSize: {&#xA;          height: 80,&#xA;          width: 80&#xA;        },&#xA;        quality: 1.0&#xA;      };&#xA;&#xA;      const thumbnailResponse = await CameraRoll.getPhotoThumbnail(props.image.uri, options);&#xA;&#xA;      setBase64Image(thumbnailResponse.thumbnailBase64);&#xA;    };&#xA;&#xA;    getThumbnail();&#xA;  }, []);&#xA;&#xA;  const extension = props.image.extension;&#xA;  let prefix;&#xA;&#xA;  switch (extension) {&#xA;    case &#39;png&#39;:&#xA;      prefix = &#39;data:image/png;base64,&#39;;&#xA;      break;&#xA;    default:&#xA;      //all others can use jpeg&#xA;      prefix = &#39;data:image/jpeg;base64,&#39;;&#xA;      break;&#xA;  }&#xA;&#xA;  return (&#xA;    &amp;lt;Image&#xA;      source={{ uri: `${prefix}${base64Image}` }}&#xA;    /&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Known issues&lt;/h3&gt; &#xA;&lt;h4&gt;IOS&lt;/h4&gt; &#xA;&lt;p&gt;If you try to save media into specific album without asking for read and write permission then saving will not work, workaround is to not precice album name for IOS if you don&#39;t want to request full permission (Only ios &amp;gt;= 14).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>loks666/get_jobs</title>
    <updated>2024-04-25T01:30:55Z</updated>
    <id>tag:github.com,2024-04-25:/loks666/get_jobs</id>
    <link href="https://github.com/loks666/get_jobs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💼【找工作最强助手】全平台自动投简历脚本：(boss、前程无忧、猎聘、拉勾、智联招聘)&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;🍀Get Jobs【工作无忧】&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/loks666/get_jobs&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/loks666/get_jobs?style=flat&amp;amp;label=%F0%9F%8C%9Fstars&amp;amp;labelColor=ff4f4f&amp;amp;color=ff8383&#34; alt=&#34;Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=BV_WjeFlg3s--MePsk0OyBXMWH0tK5DR&amp;amp;authKey=lyaZwh50DkD8wrpM2A9BCXzutG3O4gK0mTwm6ODk9EBij/FNZAHGBT05KmLgLTG/BL&amp;amp;noverify=0&amp;amp;group_code=219885606&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%90%A7QQ%E4%BA%A4%E6%B5%81%E7%BE%A4-get_jobs-0FB5EB?labelColor=235389&amp;amp;logoColor=white&amp;amp;style=flat&#34; alt=&#34;QQ交流群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/loks666/get_jobs/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%93%91licenses-MIT-34D058?labelColor=22863A&amp;amp;style=flat&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/loks666/get_jobs/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-search?query=repo%3Aloks666/Fget_jobs/0is%3Aclosed&amp;amp;label=%F0%9F%A4%8F%F0%9F%8F%BBFissues/0closed&amp;amp;labelColor=008B8B&amp;amp;color=00CCCC&#34; alt=&#34;Issues closed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/loks666/get_jobs/forks&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/loks666/get_jobs?style=flat&amp;amp;label=%F0%9F%8F%85Forks&amp;amp;labelColor=800080&amp;amp;color=912CEE&#34; alt=&#34;Forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;🌴源码地址&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Github(国外访问)：&lt;a href=&#34;https://github.com/loks666/get_jobs&#34;&gt;https://github.com/loks666/get_jobs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Gitee·码云(中国大陆)：&lt;a href=&#34;https://gitee.com/lok666/get_jobs&#34;&gt;https://gitee.com/lok666/get_jobs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🌞 特色功能&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;支持国内全部招聘平台(Boss直聘、猎聘、拉勾、51job、智联招聘)&lt;/li&gt; &#xA; &lt;li&gt;集中化配置，仅需修改配置文件即可完成自定义筛选&lt;/li&gt; &#xA; &lt;li&gt;全局日志记录，投递记录可追踪&lt;/li&gt; &#xA; &lt;li&gt;内置driver驱动，自动判断系统环境适配驱动版本&lt;/li&gt; &#xA; &lt;li&gt;超长cookie登录，每周仅需扫码一次(理论上时间更久)&lt;/li&gt; &#xA; &lt;li&gt;内置xpathHelper插件，方便快速定位元素&lt;/li&gt; &#xA; &lt;li&gt;Boss默认过滤猎头岗位，可修改代码自定义修改条件&lt;/li&gt; &#xA; &lt;li&gt;QQ交流群暗號：get_jobs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🔞️ 注意事项&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如你有“折腾精神”希望自己配置，QQ群内提供免费答疑，如你不想麻烦，可联系群主付费部署&lt;/li&gt; &#xA; &lt;li&gt;由于不同系统的页面不一样，导致可能不兼容，文末会给出文档，尽可能让大家能自定义修改&lt;/li&gt; &#xA; &lt;li&gt;必须要关闭墙外代理，由于主要针对的国内平台，墙外代理会导致页面加载缓慢&lt;/li&gt; &#xA; &lt;li&gt;如您不方便访问github，可使用码云镜像(中国大陆)版本：&lt;a href=&#34;https://gitee.com/loks666/get_jobs&#34;&gt;gitee/getjobs&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;已经有人在交流群里 &lt;strong&gt;发广告&lt;/strong&gt; 等与本项目无关的信息&lt;br&gt; 如果带着不同目的或者没想清楚就进群的&lt;br&gt; 一经发现群主会对您的家人及朋友进行亲切(&lt;strong&gt;没有素质&lt;/strong&gt;)的问候&lt;br&gt; 并将您请出群聊，请珍惜交流的机会，谢谢！&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🚀 如何使用？&lt;/h2&gt; &#xA;&lt;h3&gt;1️⃣ 使用git拉取代码&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/loks666/get_jobs.git&#xA;cd get_jobs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2️⃣ 环境配置:JDK17+、Maven、Chrome、ChromeDriver&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;目前driver版本号：123.0.6312.122 chrome需要版本为：124.0.6367.61及以上(默认最新即可)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;目前程序自动判断系统环境，使用对应的chromedriver，无需手动下载&lt;/li&gt; &#xA; &lt;li&gt;但是你的Chrome版本必须是在Chrome官网下载的，并且为最新版本，才可使用&lt;/li&gt; &#xA; &lt;li&gt;如果你是mac m1芯片的版本，需要解压【&lt;a href=&#34;https://raw.githubusercontent.com/loks666/get_jobs/master/src/Fmain/Fresources/Fchromedriver-mac-arm64.zip&#34;&gt;chromedriver-mac-arm64.zip&lt;/a&gt; 】后才能使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;更多环境配置详情请点击：📚 &lt;a href=&#34;https://github.com/loks666/get_jobs/wiki/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&#34;&gt;环境配置&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3️⃣ 修改配置文件(一般默认即可,需要修改自己的地区和岗位)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;🔩 通用配置&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;日志文件在 &lt;strong&gt;target/logs&lt;/strong&gt; 目录下，所有日志都会输出在以运行日期结尾的日志文件中&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Constant.WAIT_TIME&lt;/strong&gt;：超时等待时间，单位秒，用于等待页面加载&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;cookie登录&lt;/strong&gt;: 扫码后会自动保存&lt;strong&gt;cookie.json&lt;/strong&gt;文件在代码运行目录下，换号直接删除&lt;strong&gt;cookie.json&lt;/strong&gt;即可&lt;/li&gt; &#xA;   &lt;li&gt;每个平台的配置转换码都在平台文件夹下的Enum类里，找到相应的代码添加到类中即可&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;⚙️ &lt;strong&gt;主要的配置文件&lt;/strong&gt;（&lt;a href=&#34;https://raw.githubusercontent.com/loks666/get_jobs/master/src/main/resources/config.yaml&#34;&gt;config.yaml&lt;/a&gt;）&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# 带[ ]括号的，就是多选，不带的就是单选&#xA;boss:&#xA;  sayHi: &#34;您好,我有7年工作经验,还有AIGC大模型、Java,Python,Golang和运维的相关经验,希望应聘这个岗位,期待可以与您进一步沟通,谢谢！&#34; #必须要关闭boss的自动打招呼&#xA;  keywords: [ &#34;大模型工程师&#34;, &#34;AIGC工程师&#34;, &#34;Java&#34;, &#34;Python&#34;, &#34;Golang&#34; ] # 需要搜索的职位,会依次投递&#xA;  industry: [ &#34;不限&#34; ] # 公司行业，只能选三个，相关代码枚举的部分，如果需要其他的需要自己找&#xA;  cityCode: &#34;上海&#34; # 只列举了部分,如果没有的需要自己找：目前支持的：全国 北京 上海 广州 深圳 成都&#xA;  experience: [ &#34;不限&#34; ] # 工作经验：&#34;应届毕业生&#34;, &#34;1年以下&#34;, &#34;1-3年&#34;, &#34;3-5年&#34;, &#34;5-10年&#34;, &#34;10年以上&#34;&#xA;  jobType: &#34;不限&#34; #求职类型：&#34;全职&#34;, &#34;兼职&#34;&#xA;  salary: &#34;不限&#34; # 薪资（单选）：&#34;3K以下&#34;, &#34;3-5K&#34;, &#34;5-10K&#34;, &#34;10-20K&#34;, &#34;20-50K&#34;, &#34;50K以上&#34;&#xA;  degree: [ &#34;不限&#34; ] # 学历: &#34;初中及以下&#34;, &#34;中专/中技&#34;, &#34;高中&#34;, &#34;大专&#34;, &#34;本科&#34;, &#34;硕士&#34;, &#34;博士&#34;&#xA;  scale: [ &#34;不限&#34; ] # 公司规模：&#34;0-20人&#34;, &#34;20-99人&#34;, &#34;100-499人&#34;, &#34;500-999人&#34;, &#34;1000-9999人&#34;, &#34;10000人以上&#34;&#xA;  stage: [ &#34;不限&#34; ] # &#34;未融资&#34;, &#34;天使轮&#34;, &#34;A轮&#34;, &#34;B轮&#34;, &#34;C轮&#34;, &#34;D轮及以上&#34;, &#34;已上市&#34;, &#34;不需要融资&#34;&#xA;&#xA;job51:&#xA;  jobArea: [ &#34;上海&#34; ]  #工作地区：目前只有【北京 成都 上海 广州 深圳】&#xA;  keywords: [ &#34;java&#34;, &#34;python&#34;, &#34;go&#34;, &#34;golang&#34;, &#34;大模型&#34;, &#34;软件工程师&#34; ] #关键词：依次投递&#xA;  salary: [ &#34;不限&#34; ] #薪资范围：只能选5个【&#34;2千以下&#34;, &#34;2-3千&#34;, &#34;3-4.5千&#34;, &#34;4.5-6千&#34;, &#34;6-8千&#34;, &#34;0.8-1万&#34;, &#34;1-1.5万&#34;, &#34;1.5-2万&#34;, &#34;2-3万&#34;, &#34;3-4万&#34;, &#34;4-5万&#34;, &#34;5万以上&#34;】&#xA;&#xA;lagou:&#xA;  keywords: [ &#34;AI工程师&#34;,&#34;Java&#34;,&#34;Golang&#34;,&#34;Python&#34; ] #搜索关键词&#xA;  cityCode: &#34;上海&#34; #拉勾城市名没有限制,直接填写即可&#xA;  salary: &#34;不限&#34; #薪资【&#34;不限&#34;,&#34;2k以下&#34;, &#34;2k-5k&#34;, &#34;5k-10k&#34;, &#34;10k-15k&#34;, &#34;15k-25k&#34;, &#34;25k-50k&#34;, &#34;50k以上&#34;】&#xA;  scale: [ &#34;不限&#34; ] #公司规模【&#34;不限&#34;,&#34;少于15人&#34;, &#34;15-50人&#34;, &#34;50-150人&#34;, &#34;150-500人&#34;, &#34;500-2000人&#34;, &#34;2000人以上&#34;】&#xA;&#xA;liepin:&#xA;  cityCode: &#34;上海&#34; # 目前支持的：全国 北京 上海 广州 深圳 成都&#xA;  keywords: [ &#34;Java&#34;, &#34;Python&#34;, &#34;Golang&#34;, &#34;大模型&#34; ]&#xA;  salary: &#34;不限&#34; # 填 15$30 代表 15k-30k&#xA;&#xA;zhilian:&#xA;  cityCode: &#34;上海&#34;&#xA;  salary: &#34;25001,35000&#34; #薪资区间&#xA;  keywords: [ &#34;AI工程师&#34;, &#34;AIGC&#34;, &#34;Java&#34;, &#34;Python&#34;, &#34;Golang&#34; ]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;boss直聘(&lt;a href=&#34;https://raw.githubusercontent.com/loks666/get_jobs/master/src/main/java/boss/Boss.java&#34;&gt;Boss.java&lt;/a&gt;)【每日仅可发起100次新聊天，活跃度还行，但是每日投递次数太少】&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;注意：Boss必须要关闭自动打招呼，设置配置文件的sayHi为你的打招呼语，否则会投递失败&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code&gt;data.json //黑名单数据，在投递结束后会查询聊天记录寻找不合适的公司添加进去&#xA;    ├── blackCompanies: List.of(&#34;复深蓝&#34;); // 公司黑名单，多个用逗号分隔&#xA;    ├── blackRecruiters: List.of(&#34;猎头&#34;); // 排除招聘人员，比如猎头&#xA;    └── blackJobs: List.of(&#34;外包&#34;, &#34;外派&#34;); // 排除岗位，比如外包，外派&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;51job(&lt;a href=&#34;https://raw.githubusercontent.com/loks666/get_jobs/master/src/main/java/job51/Job51.java&#34;&gt;Job.java&lt;/a&gt;)【投递无上限，会限制搜索到的岗位数量，没什么活人】&lt;/p&gt; &lt;pre&gt;&lt;code&gt;scanLogin() //扫码登录(默认方式) 只可微信扫码，请绑定微信账号&#xA;&#xA;inputLogin() //密码登录(需要手动过验证)&#xA;&#xA;51投递一段时间后会出现滑块验证，是某个时间段内投递量达到上限，需要关闭脚本，等待一段时间再运行&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;拉勾(&lt;a href=&#34;https://raw.githubusercontent.com/loks666/get_jobs/master/src/main/java/lagou/Lagou.java&#34;&gt;Lagou.java&lt;/a&gt;)【投递无上限，会限制投递的频率，没什么活人而且投不了几个岗位】&lt;/p&gt; &lt;pre&gt;&lt;code&gt;默认使用微信扫码，请绑定微信账号&#xA;&#xA;拉勾需要指定默认投递简历(在线简历 or 附件简历)，否则会投递失败&#xA;&#xA;拉勾直接使用的是微信扫码登录，运行后直接扫码即可，开箱通用&#xA;&#xA;但是拉勾由于反爬机制较为严重，代码中嵌套了大量的sleep，导致效率较慢&#xA;&#xA;这边建议拉勾的脚本运行一段时间后差不多就行了，配合手动在app或者微信小程序投递简历效果更佳！&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;猎聘(&lt;a href=&#34;https://raw.githubusercontent.com/loks666/get_jobs/master/src/main/java/liepin/Liepin.java&#34;&gt;Liepin.java&lt;/a&gt;)【默认打招呼无上限，主动发消息有上限，虽然成功率不高，好在量大】&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;注意：需要在猎聘App最新版设置打招呼语(默或者自定义皆可)，即可自动发送消息，不会被限制&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;pre&gt;&lt;code&gt;只可微信扫码，请绑定微信账号&#xA;&#xA;需要使用最新版猎聘手机app设置打招呼文本，只要不主动发消息，可以无限制对猎头打招呼，程序默认为该配置。&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;智联招聘(&lt;a href=&#34;https://raw.githubusercontent.com/loks666/get_jobs/master/src/Fmain/Fjava/Fzhilian/FZhiLian.java&#34;&gt;ZhiLian.java&lt;/a&gt;)【投递上限100左右，岗位质量较差,走投无路可以考虑】&lt;/p&gt; &lt;pre&gt;&lt;code&gt;智联招聘需要指定默认投递简历(在线简历 or 附件简历)，否则会投递失败&#xA;&#xA;只可微信扫码，请绑定微信账号&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;4️⃣ 最后一步：运行代码&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🏃🏻‍♂️‍➡️ 直接运行你想要投递平台的下的代码即可&lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/loks666/get_jobs/master/src/main/resources/images/run1.png&#34; alt=&#34;运行图片&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;✍🏼 例:Boss投递日志&lt;/h3&gt; &#xA;&lt;img src=&#34;https://gitee.com/lok666/images/raw/master/img/boss.png&#34; alt=&#34;Boss投递日志&#34;&gt; &#xA;&lt;h3&gt;✍🏼 猎聘投递日志&lt;/h3&gt; &#xA;&lt;img src=&#34;https://gitee.com/lok666/images/raw/master/img/liepin.png&#34; alt=&#34;猎聘投递日志&#34;&gt; &#xA;&lt;h2&gt;📧 联系方式&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;V2VDaGF0OkFpckVsaWF1azk1Mjcs6K+35aSH5rOo77ya5pq06aOO6Zuo5bCx6KaB5p2l5LqG&lt;/li&gt; &#xA; &lt;li&gt;如想进入微信群，请添加上面的微信，或者进入QQ群联系&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;👨🏻‍🔧 QQ群&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;扫码添加：加群答案为本项目仓库名【get_jobs】&lt;/p&gt; &#xA;  &lt;div style=&#34;display: flex;&#34;&gt; &#xA;   &lt;img src=&#34;https://gitee.com/lok666/images/raw/master/img/qq.jpg&#34; alt=&#34;qq群&#34; height=&#34;600&#34;&gt; &#xA;   &lt;img src=&#34;https://gitee.com/lok666/images/raw/master/img/wgroup.jpg&#34; alt=&#34;微信群&#34; height=&#34;600&#34;&gt; &#xA;  &lt;/div&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;  &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;点击下面的链接可直接加群&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=BV_WjeFlg3s--MePsk0OyBXMWH0tK5DR&amp;amp;authKey=lyaZwh50DkD8wrpM2A9BCXzutG3O4gK0mTwm6ODk9EBij/FNZAHGBT05KmLgLTG/BL&amp;amp;noverify=0&amp;amp;group_code=219885606&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QQ%E4%BA%A4%E6%B5%81%E7%BE%A4-get_jobs-0FB5EB?labelColor=235389&amp;amp;logo=tencent-qq&amp;amp;logoColor=white&amp;amp;style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚩 付费部署&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本项目文档已相对完善，如仍需付费部署，请添加QQ群或微信联系群主&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;win与mac下环境部署：¥100/次&lt;/li&gt; &#xA; &lt;li&gt;如需定制化修改请联系商议&lt;/li&gt; &#xA; &lt;li&gt;请注意： &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;本项目不支持服务器部署，无须尝试，如招聘网站发现访问者为服务器IP，不会返回任何网站数据&lt;/li&gt; &#xA;   &lt;li&gt;在开发与部署过程有任何问题都可在群内沟通，如您需要远程调试，会根据问题的复杂性收取一定费用，一般不超过¥50。&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;📑 更新日志&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2024-4-15 01:52:18 &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;新增config.yaml,目前仅需修改配置文件即可，已全平台支持&lt;/li&gt; &#xA;   &lt;li&gt;cookie有效期延长，保持至少一周（拉勾平台除外）&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🤝 参与贡献&lt;/h2&gt; &#xA;&lt;p&gt;我们非常欢迎各种形式的贡献&lt;br&gt; 如果你对贡献代码感兴趣&lt;br&gt; 可以查看我们的 &lt;a href=&#34;https://github.com/loks666/get_jobs/issues&#34;&gt;Issues&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/loks666/get_jobs/discussions&#34;&gt;discussions&lt;/a&gt;&lt;br&gt; 期待你的大展身手，向我们展示你的奇思妙想。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;提交Pr流程： &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;fork本项目&lt;/li&gt; &#xA;   &lt;li&gt;从master分支新建分支&lt;/li&gt; &#xA;   &lt;li&gt;开发完成后提交pull request到lok666/get_jobs的release分支&lt;/li&gt; &#xA;   &lt;li&gt;等待管理员审核验证提交代码无误后，合并到master分支&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/loks666/get_jobs/pulls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%AF_pr_welcome-%E2%86%92-ffcb47?labelColor=black&amp;amp;style=for-the-badge&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;📰 开源协议&lt;/h3&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;h4&gt;📝 License&lt;/h4&gt;&lt;/summary&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git/Bgithub.com/Floks666/Fget_jobs?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git/Bgithub.com/Floks666/Fget_jobs.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;授人以渔: &lt;a href=&#34;https://github.com/loks666/get_jobs/wiki/%E6%8E%88%E4%BA%BA%E4%BB%A5%E6%B8%94%E2%80%90%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BF%AE%E6%94%B9%E4%BD%A0%E7%9A%84%E4%BB%A3%E7%A0%81&#34;&gt;自定义修改你的代码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;本项目受此启发:&lt;a href=&#34;https://github.com/BeammNotFound/get-jobs-51job&#34;&gt;https://github.com/BeammNotFound/get-jobs-51job&lt;/a&gt; , 感谢大佬，让我们将爱传递下去~&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;☕️ 请我喝杯咖啡&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gitee.com/lok666/images/raw/master/img/aliPay.jpg&#34; alt=&#34;支付宝付款码&#34; height=&#34;500&#34;&gt; &lt;img src=&#34;https://gitee.com/lok666/images/raw/master/img/wechatPay.jpg&#34; alt=&#34;微信付款码&#34; height=&#34;500&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- LINK GROUP --&gt; &#xA;&lt;!-- [![][fossa-license-shield]][fossa-license-link] --&gt;</summary>
  </entry>
  <entry>
    <title>meghadandapat/BE-IT-DS</title>
    <updated>2024-04-25T01:30:55Z</updated>
    <id>tag:github.com,2024-04-25:/meghadandapat/BE-IT-DS</id>
    <link href="https://github.com/meghadandapat/BE-IT-DS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains distributed systems assignments according to SPPU 2019 Pattern along with their execution steps&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Distributed Systems Assignments of SPPU Final Year IT Syllabus (2019 pattern)&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Assignment No.&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Problem Statement&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meghadandapat/BE-IT-DS/main/Assign1&#34;&gt;Assignment 1&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Implement multi-threaded client/server Process communication using RMI.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meghadandapat/BE-IT-DS/main/Assign2&#34;&gt;Assignment 2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Develop distributed application using CORBA to demonstrate object brokering (Calculator or String operations).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meghadandapat/BE-IT-DS/main/Assign3&#34;&gt;Assignment 3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Develop a distributed system, to find sum of N elements in an array by distributing N/n elements to n number of processors MPI or OpenMP. Demonstrate by displaying the intermediate sums calculated at different processors.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meghadandapat/BE-IT-DS/main/Assign4&#34;&gt;Assignment 4&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Implement Berkeley algorithm for clock synchronization.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meghadandapat/BE-IT-DS/main/Assign5&#34;&gt;Assignment 5&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Implement token ring based mutual exclusion algorithm.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meghadandapat/BE-IT-DS/main/Assign6&#34;&gt;Assignment 6&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Implement Bully and Ring algorithm for leader election.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meghadandapat/BE-IT-DS/main/Assign7&#34;&gt;Assignment 7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Create a simple web service and write distributed application(calculator) to consume the Web Service.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/meghadandapat/BE-IT-DS/main/Sockets&#34;&gt;Extra&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Develop any distributed application for implementing client-server communication programs based on Java Sockets.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Execution Steps&lt;/h2&gt; &#xA;&lt;h3&gt;Pre-requisites:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install JDK-8&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo apt-get remove openjdk*&#xA; sudo apt update&#xA; sudo apt install openjdk-8-jdk openjdk-8-jre&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download &lt;a href=&#34;https://sourceforge.net/projects/mpjexpress/files/releases/mpj-v0_44.tar.gz/download&#34;&gt;MPJ Express&lt;/a&gt; and extract in the Downloads dir&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install Apache Netbeans&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&#xA; sudo snap install netbeans --classic&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Glassfish server version must be 4.1.1&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Assignment 1:&lt;/h3&gt; &#xA;&lt;p&gt;Terminal 1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;javac *.java&#xA;rmic AddServerImpl&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Terminal 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rmiregistry&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Terminal 3:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java AddServer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Terminal 4:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java AddClient 127.0.0.1 5 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assignment 2:&lt;/h3&gt; &#xA;&lt;p&gt;Terminal 1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;idlj -fall ReverseModule.idl&#xA;javac *.java ReverseModule/*.java&#xA;orbd -ORBInitialPort 1056&amp;amp;&#xA;java ReverseServer -ORBInitialPort 1056&amp;amp; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Terminal 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java ReverseClient -ORBInitialPort 1056 -ORBInitialHost localhost&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assignment 3:&lt;/h3&gt; &#xA;&lt;p&gt;Terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export MPJ_HOME=/home/ubuntu/Downloads/mpj-v0_44&#xA;export PATH=$MPJ_HOME/bin:$PATH&#xA;javac -cp $MPJ_HOME/lib/mpj.jar ArrSum.java&#xA;$MPJ_HOME/bin/mpjrun.sh -np 4 ArrSum&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assignment 4:&lt;/h3&gt; &#xA;&lt;p&gt;Terminal 1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python client.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Terminal 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;python server.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assignment 5:&lt;/h3&gt; &#xA;&lt;p&gt;Terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;javac Tring.java&#xA;java Tring&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assignmnet 6:&lt;/h3&gt; &#xA;&lt;p&gt;Terminal&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;javac Bully.java&#xA;java Bully&#xA;javac Ring.java&#xA;java Ring&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Assignment 7:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=0z-HvSfr-M4&#34;&gt;Youtube tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Extra:&lt;/h3&gt; &#xA;&lt;p&gt;Terminal 1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;javac *.java&#xA;java Server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Reminal 2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java Client&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>