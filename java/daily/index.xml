<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-07T01:39:27Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apeto2/gpt-commercial</title>
    <updated>2023-06-07T01:39:27Z</updated>
    <id>tag:github.com,2023-06-07:/apeto2/gpt-commercial</id>
    <link href="https://github.com/apeto2/gpt-commercial" rel="alternate"></link>
    <summary type="html">&lt;p&gt;本项目是一个商用版服务平台，基于Java语言实现服务端功能，前端使用React框架，底层使用官方的ChatGPT API。用户可以通过一键部署方便地使用本平台。除了支持chat对话模型外，还支持openai官方所有api，包括余额查询、模型检索、Completions chatgpt对话、Images 图片模型、模型自定义训练、文件上传自定义模型、微调、文本审核和敏感词鉴别，以及GPT 3.5、4.0和4.0-32k等功能。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;😏&lt;/span&gt; gpt-commercial&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;本项目是一个商用版服务平台，基于Java语言实现服务端功能，前端使用React框架，底层使用官方的ChatGPT API。用户可以通过一键部署方便地使用本平台。除了支持chat对话模型外，还支持openai官方所有api，包括余额查询、模型检索、Completions chatgpt对话、Images 图片模型、模型自定义训练、文件上传自定义模型、微调、文本审核和敏感词鉴别，以及GPT 3.5、4.0和4.0-32k等功能。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span&gt;🙌&lt;/span&gt; 为何开源?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;补缺java语言的商业版ChatGPT&lt;/li&gt; &#xA; &lt;li&gt;加速创新,提高软件质量&lt;/li&gt; &#xA; &lt;li&gt;共同学习&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;💬 加入我们&lt;/h2&gt; &#xA;&lt;h3&gt;⭐️ 不要吝啬你的star 会持续更新 为了方便找到此项目 可以点一下小星星&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;GPT商业版开源讨论群&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;作者微信 如果二维码过期请加我好友&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://github.com/apeto2/gpt-commercial/assets/131843341/2d3ea9d6-156f-48af-9c3e-8061d49adda7?raw=true&#34; alt=&#34;图片替换文本&#34; width=&#34;200&#34; height=&#34;250&#34; align=&#34;bottom&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/apeto2/gpt-commercial/assets/131843341/b6a8b5e2-4448-4e03-9335-9252eb55467b&#34; alt=&#34;图片替换文本&#34; width=&#34;210&#34; height=&#34;250&#34; align=&#34;bottom&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;后台部署教程&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;http://be.apeto.cn/archives/geniusaibu-shu-jiao-cheng&#34;&gt;http://be.apeto.cn/archives/geniusaibu-shu-jiao-cheng&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;前端项目说明&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href=&#34;https://www.gaojinglin.vip/archives/genius-web%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E8%AF%B4%E6%98%8E&#34;&gt;https://www.gaojinglin.vip/archives/genius-web%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E8%AF%B4%E6%98%8E&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;模块说明&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;C 端源码&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;服务端&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;genius_web&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ai-mechanician&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;前端示例&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;公众号交互&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;img src=&#34;https://github.com/apeto2/gpt-commercial/assets/131843341/73e87373-e707-4079-8a8e-8a3518450ef4?raw=true&#34; alt=&#34;图片替换文本&#34; width=&#34;200&#34; height=&#34;450&#34; align=&#34;bottom&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;旅游攻略&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&#34;&gt;&lt;img src=&#34;http://be.apeto.cn/upload/image-qslc.png&#34; alt=&#34;旅游攻略&#34; title=&#34;Shiprock&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;产品经理&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&#34;&gt;&lt;img src=&#34;http://be.apeto.cn/upload/c%E7%AB%AF.png&#34; alt=&#34;产品经理&#34; title=&#34;Shiprock&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;会员购买&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&#34;&gt;&lt;img src=&#34;http://be.apeto.cn/upload/image-eksc.png&#34; alt=&#34;会员购买&#34; title=&#34;Shiprock&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;个人信息&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&#34;&gt;&lt;img src=&#34;http://be.apeto.cn/upload/image-qumb.png&#34; alt=&#34;个人信息&#34; title=&#34;Shiprock&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;集成框架&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;框架&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;版本&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;springboot&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.7.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;redisson&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3.17.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;mybatis-plus&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;3.5.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;IJPay&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2.9.6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;knife4j&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.1.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;sa-token&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1.34.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;weixin-java-mp&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;4.4.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;部署要求&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;MySQL 5.7及以上&lt;/li&gt; &#xA; &lt;li&gt;Redis 6以上&lt;/li&gt; &#xA; &lt;li&gt;JDK8&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;功能&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;openai所有接口的对接&lt;/li&gt; &#xA; &lt;li&gt;超长token优化及网络速度优化&lt;/li&gt; &#xA; &lt;li&gt;支付宝当面付对接，可用来支付会员卡&lt;/li&gt; &#xA; &lt;li&gt;微信公众号对接，包括公众号关注监听，取关监听，地理位置监听，扫码事件监听，菜单监听&lt;/li&gt; &#xA; &lt;li&gt;登录方式： 微信授权登录/邮箱登录/短信登录(阿里云短信服务)&lt;/li&gt; &#xA; &lt;li&gt;AI角色赋能&lt;/li&gt; &#xA; &lt;li&gt;会员卡功能&lt;/li&gt; &#xA; &lt;li&gt;反馈与建议&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;span&gt;💯&lt;/span&gt; 以下为plus收费版&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;如果以上开源代码不满足你的要求,可以看一下我们的收费版本 一次购买 持续更新 随着功能的完善后面会涨价哦~ 现在还是优惠阶段&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔗&lt;/span&gt; 演示地址 &lt;a href=&#34;https://chat.apeto.cn&#34;&gt;https://chat.apeto.cn&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔗&lt;/span&gt; 说明文档 &lt;a href=&#34;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&#34;&gt;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;项目快到飞起~可自行体验&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;后台管理系统示例&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;仪表盘总览&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&#34;&gt;&lt;img src=&#34;http://be.apeto.cn/upload/image-opti.png&#34; alt=&#34;仪表盘总览&#34; title=&#34;Shiprock&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ChatGTP参数配置&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&#34;&gt;&lt;img src=&#34;http://be.apeto.cn/upload/image-sbvr.png&#34; alt=&#34;ChatGTP参数配置&#34; title=&#34;Shiprock&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;站点配置&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://be.apeto.cn/archives/shang-ye-ban-chatgpt&#34;&gt;&lt;img src=&#34;http://be.apeto.cn/upload/image-dbej.png&#34; alt=&#34;站点配置&#34; title=&#34;Shiprock&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openzipkin/zipkin</title>
    <updated>2023-06-07T01:39:27Z</updated>
    <id>tag:github.com,2023-06-07:/openzipkin/zipkin</id>
    <link href="https://github.com/openzipkin/zipkin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Zipkin is a distributed tracing system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;zipkin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/openzipkin/zipkin&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/gitter-join%20chat%20%E2%86%92-brightgreen.svg?sanitize=true&#34; alt=&#34;Gitter chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/openzipkin/zipkin/actions?query=workflow%3Atest&#34;&gt;&lt;img src=&#34;https://github.com/openzipkin/zipkin/workflows/test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=g:io.zipkin%20AND%20a:zipkin-server&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.zipkin/zipkin-server.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zipkin.io&#34;&gt;Zipkin&lt;/a&gt; is a distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in service architectures. Features include both the collection and lookup of this data.&lt;/p&gt; &#xA;&lt;p&gt;If you have a trace ID in a log file, you can jump directly to it. Otherwise, you can query based on attributes such as service, operation name, tags and duration. Some interesting data will be summarized for you, such as the percentage of time spent in a service, and whether or not operations failed.&lt;/p&gt; &#xA;&lt;img src=&#34;https://zipkin.io/public/img/web-screenshot.png&#34; alt=&#34;Trace view screenshot&#34;&gt; &#xA;&lt;p&gt;The Zipkin UI also presents a dependency diagram showing how many traced requests went through each application. This can be helpful for identifying aggregate behavior including error paths or calls to deprecated services.&lt;/p&gt; &#xA;&lt;img src=&#34;https://zipkin.io/public/img/dependency-graph.png&#34; alt=&#34;Dependency graph screenshot&#34;&gt; &#xA;&lt;p&gt;Application’s need to be “instrumented” to report trace data to Zipkin. This usually means configuration of a &lt;a href=&#34;https://zipkin.io/pages/tracers_instrumentation.html&#34;&gt;tracer or instrumentation library&lt;/a&gt;. The most popular ways to report data to Zipkin are via http or Kafka, though many other options exist, such as Apache ActiveMQ, gRPC and RabbitMQ. The data served to the UI is stored in-memory, or persistently with a supported backend such as Apache Cassandra or Elasticsearch.&lt;/p&gt; &#xA;&lt;h2&gt;Quick-start&lt;/h2&gt; &#xA;&lt;p&gt;The quickest way to get started is to fetch the &lt;a href=&#34;https://search.maven.org/remote_content?g=io.zipkin&amp;amp;a=zipkin-server&amp;amp;v=LATEST&amp;amp;c=exec&#34;&gt;latest released server&lt;/a&gt; as a self-contained executable jar. Note that the Zipkin server requires minimum JRE 8. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sSL https://zipkin.io/quickstart.sh | bash -s&#xA;java -jar zipkin.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also start Zipkin via Docker.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Note: this is mirrored as ghcr.io/openzipkin/zipkin&#xA;docker run -d -p 9411:9411 openzipkin/zipkin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once the server is running, you can view traces with the Zipkin UI at &lt;code&gt;http://your_host:9411/zipkin/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If your applications aren&#39;t sending traces, yet, configure them with &lt;a href=&#34;https://zipkin.io/pages/tracers_instrumentation&#34;&gt;Zipkin instrumentation&lt;/a&gt; or try one of our &lt;a href=&#34;https://github.com/openzipkin?utf8=%E2%9C%93&amp;amp;q=example&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/zipkin-server&#34;&gt;&lt;code&gt;zipkin-server&lt;/code&gt;&lt;/a&gt; documentation for configuration details, or &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/docker/examples&#34;&gt;Docker examples&lt;/a&gt; for how to use docker-compose.&lt;/p&gt; &#xA;&lt;h3&gt;Zipkin Slim&lt;/h3&gt; &#xA;&lt;p&gt;The slim build of Zipkin is smaller and starts faster. It supports in-memory and Elasticsearch storage, but doesn&#39;t support messaging transports like Kafka or RabbitMQ. If these constraints match your needs, you can try slim like below:&lt;/p&gt; &#xA;&lt;p&gt;Running via Java:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sSL https://zipkin.io/quickstart.sh | bash -s io.zipkin:zipkin-server:LATEST:slim zipkin.jar&#xA;java -jar zipkin.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running via Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Note: this is mirrored as ghcr.io/openzipkin/zipkin-slim&#xA;docker run -d -p 9411:9411 openzipkin/zipkin-slim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Core Library&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/zipkin/src/main/java/zipkin2&#34;&gt;core library&lt;/a&gt; is used by both Zipkin instrumentation and the Zipkin server. Its minimum Java language level is 6, in efforts to support those writing agent instrumentation.&lt;/p&gt; &#xA;&lt;p&gt;This includes built-in codec for Zipkin&#39;s v1 and v2 json formats. A direct dependency on gson (json library) is avoided by minifying and repackaging classes used. The result is a 155k jar which won&#39;t conflict with any library you use.&lt;/p&gt; &#xA;&lt;p&gt;Ex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// All data are recorded against the same endpoint, associated with your service graph&#xA;localEndpoint = Endpoint.newBuilder().serviceName(&#34;tweetie&#34;).ip(&#34;192.168.0.1&#34;).build()&#xA;span = Span.newBuilder()&#xA;    .traceId(&#34;d3d200866a77cc59&#34;)&#xA;    .id(&#34;d3d200866a77cc59&#34;)&#xA;    .name(&#34;targz&#34;)&#xA;    .localEndpoint(localEndpoint)&#xA;    .timestamp(epochMicros())&#xA;    .duration(durationInMicros)&#xA;    .putTag(&#34;compression.level&#34;, &#34;9&#34;);&#xA;&#xA;// Now, you can encode it as json&#xA;bytes = SpanBytesEncoder.JSON_V2.encode(span);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: The above is just an example, most likely you&#39;ll want to use an existing tracing library like &lt;a href=&#34;https://github.com/openzipkin/brave&#34;&gt;Brave&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Storage Component&lt;/h2&gt; &#xA;&lt;p&gt;Zipkin includes a &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/zipkin/src/main/java/zipkin2/storage/StorageComponent.java&#34;&gt;StorageComponent&lt;/a&gt;, used to store and query spans and dependency links. This is used by the server and those making collectors, or span reporters. For this reason, storage components have minimal dependencies, but most require Java 8+&lt;/p&gt; &#xA;&lt;p&gt;Ex.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// this won&#39;t create network connections&#xA;storage = ElasticsearchStorage.newBuilder()&#xA;                              .hosts(asList(&#34;http://myelastic:9200&#34;)).build();&#xA;&#xA;// prepare a call&#xA;traceCall = storage.spanStore().getTrace(&#34;d3d200866a77cc59&#34;);&#xA;&#xA;// execute it synchronously or asynchronously&#xA;trace = traceCall.execute();&#xA;&#xA;// clean up any sessions, etc&#xA;storage.close();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;In-Memory&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/zipkin-server#in-memory-storage&#34;&gt;InMemoryStorage&lt;/a&gt; component is packaged in zipkin&#39;s core library. It is neither persistent, nor viable for realistic work loads. Its purpose is for testing, for example starting a server on your laptop without any database needed.&lt;/p&gt; &#xA;&lt;h3&gt;Cassandra&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/zipkin-server#cassandra-storage&#34;&gt;Cassandra&lt;/a&gt; component uses Cassandra 3.11.3+ features, but is tested against the latest patch of Cassandra 3.11.&lt;/p&gt; &#xA;&lt;p&gt;This is the second generation of our Cassandra schema. It stores spans using UDTs, such that they appear like Zipkin v2 json in cqlsh. It is designed for scale, and uses a combination of SASI and manually implemented indexes to make querying larger data more performant.&lt;/p&gt; &#xA;&lt;p&gt;Note: This store requires a &lt;a href=&#34;https://github.com/openzipkin/zipkin-dependencies&#34;&gt;job to aggregate&lt;/a&gt; dependency links.&lt;/p&gt; &#xA;&lt;h3&gt;Elasticsearch&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/zipkin-server#elasticsearch-storage&#34;&gt;Elasticsearch&lt;/a&gt; component uses Elasticsearch 5+ features, but is tested against Elasticsearch 6-7.x.&lt;/p&gt; &#xA;&lt;p&gt;It stores spans as Zipkin v2 json so that integration with other tools is straightforward. To help with scale, this uses a combination of custom and manually implemented indexing.&lt;/p&gt; &#xA;&lt;p&gt;Note: This store requires a &lt;a href=&#34;https://github.com/openzipkin/zipkin-dependencies&#34;&gt;spark job&lt;/a&gt; to aggregate dependency links.&lt;/p&gt; &#xA;&lt;h3&gt;Disabling search&lt;/h3&gt; &#xA;&lt;p&gt;The following API endpoints provide search features, and are enabled by default. Search primarily allows the trace list screen of the UI operate.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /services&lt;/code&gt; - Distinct Span.localServiceName&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /remoteServices?serviceName=X&lt;/code&gt; - Distinct Span.remoteServiceName by Span.localServiceName&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /spans?serviceName=X&lt;/code&gt; - Distinct Span.name by Span.localServiceName&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /autocompleteKeys&lt;/code&gt; - Distinct keys of Span.tags subject to configurable whitelist&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /autocompleteValues?key=X&lt;/code&gt; - Distinct values of Span.tags by key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GET /traces&lt;/code&gt; - Traces matching a query possibly including the above criteria&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When search is disabled, traces can only be retrieved by ID (&lt;code&gt;GET /trace/{traceId}&lt;/code&gt;). Disabling search is only viable when there is an alternative way to find trace IDs, such as logs. Disabling search can reduce storage costs or increase write throughput.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;StorageComponent.Builder.searchEnabled(false)&lt;/code&gt; is implied when a zipkin is run with the env variable &lt;code&gt;SEARCH_ENABLED=false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Legacy (v1) components&lt;/h3&gt; &#xA;&lt;p&gt;The following components are no longer encouraged, but exist to help aid transition to supported ones. These are indicated as &#34;v1&#34; as they use data layouts based on Zipkin&#39;s V1 Thrift model, as opposed to the simpler v2 data model currently used.&lt;/p&gt; &#xA;&lt;h4&gt;MySQL&lt;/h4&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/zipkin-storage/mysql-v1&#34;&gt;MySQL v1&lt;/a&gt; component uses MySQL 5.6+ features, but is tested against MariaDB 10.3.&lt;/p&gt; &#xA;&lt;p&gt;The schema was designed to be easy to understand and get started with; it was not designed for performance. Ex spans fields are columns, so you can perform ad-hoc queries using SQL. However, this component has &lt;a href=&#34;https://github.com/openzipkin/zipkin/issues/1233&#34;&gt;known performance issues&lt;/a&gt;: queries will eventually take seconds to return if you put a lot of data into it.&lt;/p&gt; &#xA;&lt;p&gt;This store does not require a &lt;a href=&#34;https://github.com/openzipkin/zipkin-dependencies&#34;&gt;job to aggregate&lt;/a&gt; dependency links. However, running the job will improve performance of dependencies queries.&lt;/p&gt; &#xA;&lt;h2&gt;Running the server from source&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/zipkin-server&#34;&gt;Zipkin server&lt;/a&gt; receives spans via HTTP POST and respond to queries from its UI. It can also run collectors, such as RabbitMQ or Kafka.&lt;/p&gt; &#xA;&lt;p&gt;To run the server from the currently checked out source, enter the following. JDK 11 is required to compile the source.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Build the server and also make its dependencies&#xA;$ ./mvnw -q --batch-mode -DskipTests --also-make -pl zipkin-server clean install&#xA;# Run the server&#xA;$ java -jar ./zipkin-server/target/zipkin-server-*exec.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Artifacts&lt;/h2&gt; &#xA;&lt;p&gt;Server artifacts are under the maven group id &lt;code&gt;io.zipkin&lt;/code&gt; Library artifacts are under the maven group id &lt;code&gt;io.zipkin.zipkin2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Library Releases&lt;/h3&gt; &#xA;&lt;p&gt;Releases are at &lt;a href=&#34;https://oss.sonatype.org/content/repositories/releases&#34;&gt;Sonatype&lt;/a&gt; and &lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22io.zipkin%22&#34;&gt;Maven Central&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Library Snapshots&lt;/h3&gt; &#xA;&lt;p&gt;Snapshots are uploaded to &lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots&#34;&gt;Sonatype&lt;/a&gt; after commits to master.&lt;/p&gt; &#xA;&lt;h3&gt;Docker Images&lt;/h3&gt; &#xA;&lt;p&gt;Released versions of zipkin-server are published to Docker Hub as &lt;code&gt;openzipkin/zipkin&lt;/code&gt; and GitHub Container Registry as &lt;code&gt;ghcr.io/openzipkin/zipkin&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/docker&#34;&gt;docker&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Helm Charts&lt;/h3&gt; &#xA;&lt;p&gt;Helm charts are available at &lt;a href=&#34;https://openzipkin.github.io/zipkin&#34;&gt;https://openzipkin.github.io/zipkin&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/openzipkin/zipkin/master/charts/zipkin&#34;&gt;charts&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h3&gt;Javadocs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://zipkin.io/zipkin&#34;&gt;https://zipkin.io/zipkin&lt;/a&gt; contains versioned folders with JavaDocs published on each (non-PR) build, as well as releases.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>donaldlee2008/FaceRecognition</title>
    <updated>2023-06-07T01:39:27Z</updated>
    <id>tag:github.com,2023-06-07:/donaldlee2008/FaceRecognition</id>
    <link href="https://github.com/donaldlee2008/FaceRecognition" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A FaceRecognition Software Based on Java&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FaceRecognition&lt;/h1&gt; &#xA;&lt;p&gt;A FaceRecognition Software Based on Java&lt;/p&gt; &#xA;&lt;p&gt;Functions: 1.Face Recognise 2.Video Recognise 3.Photo Recognise&lt;/p&gt; &#xA;&lt;p&gt;功能： 1.人脸识别，登陆 2.视频识别 3.照片识别&lt;/p&gt;</summary>
  </entry>
</feed>