<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-04T01:36:49Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>traas-stack/holoinsight</title>
    <updated>2023-03-04T01:36:49Z</updated>
    <id>tag:github.com,2023-03-04:/traas-stack/holoinsight</id>
    <link href="https://github.com/traas-stack/holoinsight" rel="alternate"></link>
    <summary type="html">&lt;p&gt;HoloInsight is a cloud-native observability platform with a special focus on real-time log analysis and AI integration.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;300&#34; src=&#34;https://github.com/traas-stack/holoinsight/raw/main/docs/logo/logo-flat.png&#34; alt=&#34;HoloInsight&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache--2.0-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;a href=&#34;https://github.com/traas-stack/holoinsight&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/traas-stack/holoinsight?style=flat-square%5D&#34; alt=&#34;Github stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/traas-stack/holoinsight/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/traas-stack/holoinsight&#34; alt=&#34;OpenIssue&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/traas-stack/holoinsight/main/README-CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Get deep insights into your cloud-native apps with HoloInsight&#39;s low-cost and high-performance monitoring services.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;HoloInsight is a cloud-native observability platform with a special focus on real-time log analysis and AI integration. You can check the following documentation for more information.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/traas-stack/holoinsight-docs&#34;&gt;Holoinsight Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;h3&gt;Deploy using docker-compose&lt;/h3&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.docker.com/engine/install/&#34;&gt;docker&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://docs.docker.com/compose/install/other/&#34;&gt;docker-compose&lt;/a&gt;(&lt;strong&gt;&amp;gt;=v1.29 || &amp;gt;=v2&lt;/strong&gt;) installed&lt;/li&gt; &#xA; &lt;li&gt;Linux or Mac environment&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To verify whether docker compose is already installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# V1&#xA;docker-compose version&#xA;&#xA;# V2&#xA;docker compose version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Follow the &lt;a href=&#34;https://raw.githubusercontent.com/traas-stack/holoinsight/main/#install-docker-compose&#34;&gt;guide&lt;/a&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/traas-stack/holoinsight/main/#appendix&#34;&gt;appendix&lt;/a&gt; to install docker-compose quickly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;clone the repo&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/traas-stack/holoinsight.git --depth 1 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;run deploy script&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./deploy/examples/docker-compose/up.sh&#xA; &#xA;# Users in China can use the following script for better network access.&#xA;# sh ./deploy/examples/docker-compose/up.sh cn&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will also install an agent inside holoinsight-server container. This usage is only for demonstration and is not applicable to production environment.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;visit holoinsight&lt;br&gt; visit &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;br&gt; Check &lt;a href=&#34;https://github.com/traas-stack/holoinsight-docs/raw/main/docs/src/en/quickstart/quick-start.md&#34;&gt;product documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Deploy using k8s&lt;/h3&gt; &#xA;&lt;p&gt;Requirements:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;k8 cluster&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux or Mac environment&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;clone the repo&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/traas-stack/holoinsight.git --depth 1 &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;deploy k8s resources&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sh ./deploy/examples/k8s/overlays/example/apply.sh&#xA;&#xA;# Users in China can use the following script for better network access.&#xA;# sh ./deploy/examples/k8s/overlays/example-cn/apply.sh &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Notice: Your k8s user must has the permission to create ClusterRole.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Use following script to uninstall holoinsight from k8s cluster.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# sh ./deploy/examples/k8s/overlays/example/delete.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;visit holoinsight&lt;br&gt; visit &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;br&gt; Check &lt;a href=&#34;https://github.com/traas-stack/holoinsight-docs/raw/main/docs/src/en/quickstart/quick-start.md&#34;&gt;product documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Appendix&lt;/h3&gt; &#xA;&lt;h4&gt;Install docker-compose&lt;/h4&gt; &#xA;&lt;p&gt;quick install docker-compose V2:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo curl -SL https://github.com/docker/compose/releases/download/v2.15.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose &amp;amp;&amp;amp; sudo chmod a+x /usr/local/bin/docker-compose&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Users in China can use the following script for better network access.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name holoinsight-tools -d registry.cn-hangzhou.aliyuncs.com/holoinsight-examples/tools:latest &amp;amp;&amp;amp; \&#xA;  docker cp holoinsight-tools:/docker-compose . &amp;amp;&amp;amp;&#xA;  docker rm -f holoinsight-tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Licensing&lt;/h1&gt; &#xA;&lt;p&gt;Holoinsight is under &lt;a href=&#34;https://github.com/traas-stack/holoinsight/raw/main/LICENSE&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Community and support&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contact us via Email: &lt;a href=&#34;mailto:traas_stack@antgroup.com&#34;&gt;traas_stack@antgroup.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;WeChat group &lt;a href=&#34;https://github.com/traas-stack/community/raw/main/holoinsight/groups/wechat-qrcode.jpg&#34;&gt;QR code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;DingTalk group &lt;a href=&#34;https://github.com/traas-stack/community/raw/main/holoinsight/groups/dingtalk-qrcode.jpg&#34;&gt;QR code&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>naver/scavenger</title>
    <updated>2023-03-04T01:36:49Z</updated>
    <id>tag:github.com,2023-03-04:/naver/scavenger</id>
    <link href="https://github.com/naver/scavenger" rel="alternate"></link>
    <summary type="html">&lt;p&gt;a runtime dead code analysis tool&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Scavenger&lt;/h1&gt; &#xA;&lt;p&gt;As the system ages, more and more unused code, aka &#34;Dead Code&#34;, will pile up due to requirement and spec changes.&lt;/p&gt; &#xA;&lt;p&gt;Scavenger was started from &lt;a href=&#34;https://github.com/crispab/codekvast&#34;&gt;codekvast&lt;/a&gt;. Codekvast is the first tool which enables runtime dead code analysis in Java. Scavenger provides more sophisticated and clear UI and elaborate the instrumentation logic by re-writing most of codes.&lt;/p&gt; &#xA;&lt;h3&gt;Components&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scavenger agent &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Collect the code base and regularly send the invocations of the host application to collectors.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Scavenger Collector &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Store the data received from the agent in the database.&lt;/li&gt; &#xA;   &lt;li&gt;Clean up garbages.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Scavenger API &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Provide APs for exploring invocations.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Scavenger Frontend &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Provides UI.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Analyze runtime dead code with no code changes.&lt;/li&gt; &#xA; &lt;li&gt;Support JVM based languages. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Agent for Java 1.7 is officially not supported any more. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;However, if you cannot avoid, please use the old agent.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Provide a web-based interface for project management, invocation snapshot, and project dashboard.&lt;/li&gt; &#xA; &lt;li&gt;Supports MySQL, Vitess, and H2 as databases.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Download&lt;/h1&gt; &#xA;&lt;p&gt;You can download the latest Scavenger in the following link.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Collector, API &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/naver/scavenger/releases&#34;&gt;https://github.com/naver/scavenger/releases&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Agent &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download the latest version from &lt;a href=&#34;https://repo1.maven.org/maven2/com/navercorp/scavenger/scavenger-agent-java/%7BVERSION%7D/scavenger-agent-java-%7BVERSION%7D.jar&#34;&gt;https://repo1.maven.org/maven2/com/navercorp/scavenger/scavenger-agent-java/{VERSION}/scavenger-agent-java-{VERSION}.jar&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can find out what latest VERSION is in &lt;a href=&#34;https://search.maven.org/search?q=g:com.navercorp.scavenger%20AND%20a:scavenger-agent-java&#34;&gt;maven central&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;old agent java (support java 1.7)&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Download the latest version from &lt;a href=&#34;https://repo1.maven.org/maven2/com/navercorp/scavenger/scavenger-old-agent-java/%7BVERSION%7D/scavenger-old-agent-java-%7BVERSION%7D.jar&#34;&gt;https://repo1.maven.org/maven2/com/navercorp/scavenger/scavenger-old-agent-java/{VERSION}/scavenger-old-agent-java-{VERSION}.jar&lt;/a&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;You can find out what latest VERSION is in &lt;a href=&#34;https://search.maven.org/search?q=g:com.navercorp.scavenger%20AND%20a:scavenger-old-agent-java&#34;&gt;maven central&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;You can find the installation guide at the following link.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/naver/scavenger/raw/develop/doc/installation.md&#34;&gt;https://github.com/naver/scavenger/blob/develop/doc/installation.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find the user guide at the following location link.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/naver/scavenger/raw/develop/doc/user-guide.md&#34;&gt;https://github.com/naver/scavenger/blob/develop/doc/user-guide.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contribution?&lt;/h1&gt; &#xA;&lt;p&gt;Scavenger welcomes any contributions from users.&lt;br&gt; Pull requests are the best way to propose changes to the codebase. We actively welcome your pull requests:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repo and create your branch from master.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;ve added code that should be tested, add tests.&lt;/li&gt; &#xA; &lt;li&gt;Ensure the test suite passes.&lt;/li&gt; &#xA; &lt;li&gt;Issue that pull request!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Versioning&lt;/h1&gt; &#xA;&lt;p&gt;For transparency and insight into our release cycle, and to strive to maintain backward compatibility, Scavenger will be maintained under the Semantic Versioning guidelines to the greatest extent possible.&lt;/p&gt; &#xA;&lt;p&gt;Releases will be numbered in the following format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  `&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Release will be constructed based on the following guidelines:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Breaking backward compatibility bumps the major (and resets the minor and patch)&lt;/li&gt; &#xA; &lt;li&gt;New additions without breaking backward compatibility bump the minor (and reset the patch)&lt;/li&gt; &#xA; &lt;li&gt;Bug fixes and small enhancement. changes bump the patch&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Q/A and Bug tracker&lt;/h1&gt; &#xA;&lt;p&gt;Found the apparent bug? Got a brilliant idea for an enhancement? Please create an issue here on GitHub so you can notify us!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/naver/scavenger/issues&#34;&gt;https://github.com/naver/scavenger/issues&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2023-present NAVER Corp.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>obsidiandynamics/kafdrop</title>
    <updated>2023-03-04T01:36:49Z</updated>
    <id>tag:github.com,2023-03-04:/obsidiandynamics/kafdrop</id>
    <link href="https://github.com/obsidiandynamics/kafdrop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kafka Web UI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/wiki/obsidiandynamics/kafdrop/images/kafdrop-logo.png&#34; width=&#34;90px&#34; alt=&#34;logo&#34;&gt; Kafdrop – Kafka Web UI &amp;nbsp; &lt;a href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fobsidiandynamics%2Fkafdrop&amp;amp;text=Get%20Kafdrop%20%E2%80%94%20a%20web-based%20UI%20for%20viewing%20%23ApacheKafka%20topics%20and%20browsing%20consumers%20&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34; alt=&#34;Tweet&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/obsidiandynamics/kafdrop/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/price-FREE-0098f7.svg?sanitize=true&#34; alt=&#34;Price&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/obsidiandynamics/kafdrop/actions/workflows/master.yml&#34;&gt;&lt;img src=&#34;https://github.com/obsidiandynamics/kafdrop/actions/workflows/master.yml/badge.svg?sanitize=true&#34; alt=&#34;Release with mvn&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/obsidiandynamics/kafdrop&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/obsidiandynamics/kafdrop.svg?sanitize=true&#34; alt=&#34;Docker&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/obsidiandynamics/kafdrop/context:java&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/java/g/obsidiandynamics/kafdrop.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: Java&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Kafdrop is a web UI for viewing Kafka topics and browsing consumer groups.&lt;/em&gt; The tool displays information such as brokers, topics, partitions, consumers, and lets you view messages.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/obsidiandynamics/kafdrop/master/docs/images/overview.png?raw=true&#34; alt=&#34;Overview Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This project is a reboot of Kafdrop 2.x, dragged kicking and screaming into the world of JDK 11+, Kafka 2.x, Helm and Kubernetes. It&#39;s a lightweight application that runs on Spring Boot and is dead-easy to configure, supporting SASL and TLS-secured brokers.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Kafka brokers&lt;/strong&gt; — topic and partition assignments, and controller status&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View topics&lt;/strong&gt; — partition count, replication status, and custom configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Browse messages&lt;/strong&gt; — JSON, plain text, Avro and Protobuf encoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View consumer groups&lt;/strong&gt; — per-partition parked offsets, combined and per-partition lag&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Create new topics&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View ACLs&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Support for Azure Event Hubs&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 11 or newer&lt;/li&gt; &#xA; &lt;li&gt;Kafka (version 0.11.0 or newer) or Azure Event Hubs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional, additional integration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Schema Registry&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;You can run the Kafdrop JAR directly, via Docker, or in Kubernetes.&lt;/p&gt; &#xA;&lt;h2&gt;Running from JAR&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;java --add-opens=java.base/sun.nio.ch=ALL-UNNAMED \&#xA;    -jar target/kafdrop-&amp;lt;version&amp;gt;.jar \&#xA;    --kafka.brokerConnect=&amp;lt;host:port,host:port&amp;gt;,...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If unspecified, &lt;code&gt;kafka.brokerConnect&lt;/code&gt; defaults to &lt;code&gt;localhost:9092&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As of Kafdrop 3.10.0, a ZooKeeper connection is no longer required. All necessary cluster information is retrieved via the Kafka admin API.&lt;/p&gt; &#xA;&lt;p&gt;Open a browser and navigate to &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt;. The port can be overridden by adding the following config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--server.port=&amp;lt;port&amp;gt; --management.server.port=&amp;lt;port&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, configure a schema registry connection with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--schemaregistry.connect=http://localhost:8081&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and if you also require basic auth for your schema registry connection you should add:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--schemaregistry.auth=username:password&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Finally, a default message and key format (e.g. to deserialize Avro messages or keys) can optionally be configured as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--message.format=AVRO&#xA;--message.keyFormat=DEFAULT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Valid format values are &lt;code&gt;DEFAULT&lt;/code&gt;, &lt;code&gt;AVRO&lt;/code&gt;, &lt;code&gt;PROTOBUF&lt;/code&gt;. This can also be configured at the topic level via dropdown when viewing messages. If key format is unspecified, message format will be used for key too.&lt;/p&gt; &#xA;&lt;h2&gt;Configure Protobuf message type&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1: Using Protobuf Descriptor&lt;/h3&gt; &#xA;&lt;p&gt;In case of protobuf message type, the definition of a message could be compiled and transmitted using a descriptor file. Thus, in order for kafdrop to recognize the message, the application will need to access to the descriptor file(s). Kafdrop will allow user to select descriptor and well as specifying name of one of the message type provided by the descriptor at runtime.&lt;/p&gt; &#xA;&lt;p&gt;To configure a folder with protobuf descriptor file(s) (.desc), follow:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--protobufdesc.directory=/var/protobuf_desc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Option 2 : Using Schema Registry&lt;/h3&gt; &#xA;&lt;p&gt;In case of no protobuf descriptor file being supplied the implementation will attempt to create the protobuf deserializer using the schema registry instead.&lt;/p&gt; &#xA;&lt;h3&gt;Defaulting to Protobuf&lt;/h3&gt; &#xA;&lt;p&gt;If preferred the message type could be set to default as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--message.format=PROTOBUF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running with Docker&lt;/h2&gt; &#xA;&lt;p&gt;Images are hosted at &lt;a href=&#34;https://hub.docker.com/r/obsidiandynamics/kafdrop&#34;&gt;hub.docker.com/r/obsidiandynamics/kafdrop&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Launch container in background:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --rm -p 9000:9000 \&#xA;    -e KAFKA_BROKERCONNECT=&amp;lt;host:port,host:port&amp;gt; \&#xA;    -e JVM_OPTS=&#34;-Xms32M -Xmx64M&#34; \&#xA;    -e SERVER_SERVLET_CONTEXTPATH=&#34;/&#34; \&#xA;    obsidiandynamics/kafdrop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Launch container in background with protobuff definitions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --rm -v &amp;lt;path_to_protobuff_descriptor_files&amp;gt;:/var/protobuf_desc -p 9000:9000 \&#xA;    -e KAFKA_BROKERCONNECT=&amp;lt;host:port,host:port&amp;gt; \&#xA;    -e JVM_OPTS=&#34;-Xms32M -Xmx64M&#34; \&#xA;    -e SERVER_SERVLET_CONTEXTPATH=&#34;/&#34; \&#xA;    -e CMD_ARGS=&#34;--message.format=PROTOBUF --protobufdesc.directory=/var/protobuf_desc&#34; \&#xA;    obsidiandynamics/kafdrop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then access the web UI at &lt;a href=&#34;http://localhost:9000&#34;&gt;http://localhost:9000&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Hey there!&lt;/strong&gt; We hope you really like Kafdrop! Please take a moment to &lt;a href=&#34;https://github.com/obsidiandynamics/kafdrop&#34;&gt;⭐&lt;/a&gt;the repo or &lt;a href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fobsidiandynamics%2Fkafdrop&amp;amp;text=Get%20Kafdrop%20%E2%80%94%20a%20web-based%20UI%20for%20viewing%20%23ApacheKafka%20topics%20and%20browsing%20consumers%20&#34;&gt;Tweet&lt;/a&gt; about it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Running in Kubernetes (using a Helm Chart)&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository (if necessary):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/obsidiandynamics/kafdrop &amp;amp;&amp;amp; cd kafdrop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apply the chart:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;helm upgrade -i kafdrop chart --set image.tag=3.x.x \&#xA;    --set kafka.brokerConnect=&amp;lt;host:port,host:port&amp;gt; \&#xA;    --set server.servlet.contextPath=&#34;/&#34; \&#xA;    --set cmdArgs=&#34;--message.format=AVRO --schemaregistry.connect=http://localhost:8080&#34; \ #optional&#xA;    --set jvm.opts=&#34;-Xms32M -Xmx64M&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For all Helm configuration options, have a peek into &lt;a href=&#34;https://raw.githubusercontent.com/obsidiandynamics/kafdrop/master/chart/values.yaml&#34;&gt;chart/values.yaml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Replace &lt;code&gt;3.x.x&lt;/code&gt; with the image tag of &lt;a href=&#34;https://hub.docker.com/r/obsidiandynamics/kafdrop&#34;&gt;obsidiandynamics/kafdrop&lt;/a&gt;. Services will be bound on port 9000 by default (node port 30900).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The context path &lt;em&gt;must&lt;/em&gt; begin with a slash.&lt;/p&gt; &#xA;&lt;p&gt;Proxy to the Kubernetes cluster:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;kubectl proxy&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Navigate to &lt;a href=&#34;http://localhost:8001/api/v1/namespaces/default/services/http:kafdrop:9000/proxy&#34;&gt;http://localhost:8001/api/v1/namespaces/default/services/http:kafdrop:9000/proxy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Protobuf support via helm chart:&lt;/h3&gt; &#xA;&lt;p&gt;To install with protobuf support, a &#34;facility&#34; option is provided for the deployment, to mount the descriptor files folder, as well as passing the required CMD arguments, via option &lt;em&gt;mountProtoDesc&lt;/em&gt;. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;helm upgrade -i kafdrop chart --set image.tag=3.x.x \&#xA;    --set kafka.brokerConnect=&amp;lt;host:port,host:port&amp;gt; \&#xA;    --set server.servlet.contextPath=&#34;/&#34; \&#xA;    --set mountProtoDesc.enabled=true \&#xA;    --set mountProtoDesc.hostPath=&#34;&amp;lt;path/to/desc/folder&amp;gt;&#34; \&#xA;    --set jvm.opts=&#34;-Xms32M -Xmx64M&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;After cloning the repository, building is just a matter of running a standard Maven build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ mvn clean package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following command will generate a Docker image:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mvn assembly:single docker:build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker Compose&lt;/h2&gt; &#xA;&lt;p&gt;There is a &lt;code&gt;docker-compose.yaml&lt;/code&gt; file that bundles a Kafka/ZooKeeper instance with Kafdrop:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd docker-compose/kafka-kafdrop&#xA;docker-compose up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;APIs&lt;/h1&gt; &#xA;&lt;h2&gt;JSON endpoints&lt;/h2&gt; &#xA;&lt;p&gt;Starting with version 2.0.0, Kafdrop offers a set of Kafka APIs that mirror the existing HTML views. Any existing endpoint can be returned as JSON by simply setting the &lt;code&gt;Accept: application/json&lt;/code&gt; header. Some endpoints are JSON only:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;/topic&lt;/code&gt;: Returns a list of all topics.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Swagger&lt;/h2&gt; &#xA;&lt;p&gt;To help document the Kafka APIs, Swagger has been included. The Swagger output is available by default at the following Kafdrop URL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;/v2/api-docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can be overridden with the following configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;springfox.documentation.swagger.v2.path=/new/swagger/path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Currently only the JSON endpoints are included in the Swagger output; the HTML views and Spring Boot debug endpoints are excluded.&lt;/p&gt; &#xA;&lt;p&gt;You can disable Swagger output with the following configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;swagger.enabled=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CORS Headers&lt;/h2&gt; &#xA;&lt;p&gt;Starting in version 2.0.0, Kafdrop sets CORS headers for all endpoints. You can control the CORS header values with the following configurations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cors.allowOrigins (default is *)&#xA;cors.allowMethods (default is GET,POST,PUT,DELETE)&#xA;cors.maxAge (default is 3600)&#xA;cors.allowCredentials (default is true)&#xA;cors.allowHeaders (default is Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also disable CORS entirely with the following configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cors.enabled=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Topic Configuration&lt;/h2&gt; &#xA;&lt;p&gt;By default, you could delete a topic. If you don&#39;t want this feature, you could disable it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--topic.deleteEnabled=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, you could create a topic. If you don&#39;t want this feature, you could disable it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;--topic.createEnabled=false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Actuator&lt;/h2&gt; &#xA;&lt;p&gt;Health and info endpoints are available at the following path: &lt;code&gt;/actuator&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This can be overridden with the following configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;management.endpoints.web.base-path=&amp;lt;path&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Guides&lt;/h1&gt; &#xA;&lt;h2&gt;Connecting to a Secure Broker&lt;/h2&gt; &#xA;&lt;p&gt;Kafdrop supports TLS (SSL) and SASL connections for &lt;a href=&#34;http://kafka.apache.org/090/documentation.html#security&#34;&gt;encryption and authentication&lt;/a&gt;. This can be configured by providing a combination of the following files (placed into the Kafka root directory):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;kafka.truststore.jks&lt;/code&gt;: specifying the certificate for authenticating brokers, if TLS is enabled.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kafka.keystore.jks&lt;/code&gt;: specifying the private key to authenticate the client to the broker, if mutual TLS authentication is required.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kafka.properties&lt;/code&gt;: specifying the necessary configuration, including key/truststore passwords, cipher suites, enabled TLS protocol versions, username/password pairs, etc. When supplying the truststore and/or keystore files, the &lt;code&gt;ssl.truststore.location&lt;/code&gt; and &lt;code&gt;ssl.keystore.location&lt;/code&gt; properties will be assigned automatically.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Using Docker&lt;/h3&gt; &#xA;&lt;p&gt;The three files above can be supplied to a Docker instance in base-64-encoded form via environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker run -d --rm -p 9000:9000 \&#xA;    -e KAFKA_BROKERCONNECT=&amp;lt;host:port,host:port&amp;gt; \&#xA;    -e KAFKA_PROPERTIES=&#34;$(cat kafka.properties | base64)&#34; \&#xA;    -e KAFKA_TRUSTSTORE=&#34;$(cat kafka.truststore.jks | base64)&#34; \   # optional&#xA;    -e KAFKA_KEYSTORE=&#34;$(cat kafka.keystore.jks | base64)&#34; \       # optional&#xA;    obsidiandynamics/kafdrop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Environment Variables&lt;/h4&gt; &#xA;&lt;h5&gt;Basic configuration&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_BROKERCONNECT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Bootstrap list of Kafka host/port pairs. Defaults to &lt;code&gt;localhost:9092&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_PROPERTIES&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Additional properties to configure the broker connection (base-64 encoded).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_TRUSTSTORE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Certificate for broker authentication (base-64 encoded). Required for TLS/SSL.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_KEYSTORE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Private key for mutual TLS authentication (base-64 encoded).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SERVER_SERVLET_CONTEXTPATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The context path to serve requests on (must end with a &lt;code&gt;/&lt;/code&gt;). Defaults to &lt;code&gt;/&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SERVER_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The web server port to listen on. Defaults to &lt;code&gt;9000&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SCHEMAREGISTRY_CONNECT &lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The endpoint of Schema Registry for Avro or Protobuf message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SCHEMAREGISTRY_AUTH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optional basic auth credentials in the form &lt;code&gt;username:password&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;CMD_ARGS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Command line arguments to Kafdrop, e.g. &lt;code&gt;--message.format&lt;/code&gt; or &lt;code&gt;--protobufdesc.directory&lt;/code&gt; or &lt;code&gt;--server.port&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;Advanced configuration&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;JVM_OPTS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JVM options.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;JMX_PORT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Port to use for JMX. No default; if unspecified, JMX will not be exposed.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The hostname to report for the RMI registry (used for JMX). Defaults to &lt;code&gt;localhost&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_PROPERTIES_FILE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Internal location where the Kafka properties file will be written to (if &lt;code&gt;KAFKA_PROPERTIES&lt;/code&gt; is set). Defaults to &lt;code&gt;kafka.properties&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_TRUSTSTORE_FILE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Internal location where the truststore file will be written to (if &lt;code&gt;KAFKA_TRUSTSTORE&lt;/code&gt; is set). Defaults to &lt;code&gt;kafka.truststore.jks&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;KAFKA_KEYSTORE_FILE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Internal location where the keystore file will be written to (if &lt;code&gt;KAFKA_KEYSTORE&lt;/code&gt; is set). Defaults to &lt;code&gt;kafka.keystore.jks&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SSL_ENABLED&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Enabling HTTPS (SSL) for Kafdrop server. Default is &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SSL_KEY_STORE_TYPE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Type of SSL keystore. Default is &lt;code&gt;PKCS12&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SSL_KEY_STORE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Path to keystore file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SSL_KEY_STORE_PASSWORD&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Keystore password&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;SSL_KEY_ALIAS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Key alias&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Using Helm&lt;/h3&gt; &#xA;&lt;p&gt;Like in the Docker example, supply the files in base-64 form:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;helm upgrade -i kafdrop chart --set image.tag=3.x.x \&#xA;    --set kafka.brokerConnect=&amp;lt;host:port,host:port&amp;gt; \&#xA;    --set kafka.properties=&#34;$(cat kafka.properties | base64)&#34; \&#xA;    --set kafka.truststore=&#34;$(cat kafka.truststore.jks | base64)&#34; \&#xA;    --set kafka.keystore=&#34;$(cat kafka.keystore.jks | base64)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Updating the Bootstrap theme&lt;/h2&gt; &#xA;&lt;p&gt;Edit the &lt;code&gt;.scss&lt;/code&gt; files in the &lt;code&gt;theme&lt;/code&gt; directory, then run &lt;code&gt;theme/install.sh&lt;/code&gt;. This will overwrite &lt;code&gt;src/main/resources/static/css/bootstrap.min.css&lt;/code&gt;. Then build as usual. (Requires &lt;code&gt;npm&lt;/code&gt;.)&lt;/p&gt; &#xA;&lt;h2&gt;Securing the Kafdrop UI&lt;/h2&gt; &#xA;&lt;p&gt;Kafdrop doesn&#39;t (yet) natively implement an authentication mechanism to restrict user access. Here&#39;s a quick workaround using NGINX using Basic Auth. The instructions below are for macOS and Homebrew.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NGINX: install using &lt;code&gt;which nginx &amp;gt; /dev/null || brew install nginx&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Apache HTTP utilities: &lt;code&gt;which htpasswd &amp;gt; /dev/null || brew install httpd&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;Set the admin password (you will be prompted):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;htpasswd -c /usr/local/etc/nginx/.htpasswd admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add a logout page in &lt;code&gt;/usr/local/opt/nginx/html/401.html&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&#xA;&amp;lt;p&amp;gt;Not authorized. &amp;lt;a href=&#34;&amp;lt;!--# echo var=&#34;scheme&#34; --&amp;gt;://&amp;lt;!--# echo var=&#34;http_host&#34; --&amp;gt;/&#34;&amp;gt;Login&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use the following snippet for &lt;code&gt;/usr/local/etc/nginx/nginx.conf&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;worker_processes 4;&#xA;  &#xA;events {&#xA;  worker_connections 1024;&#xA;}&#xA;&#xA;http {&#xA;  upstream kafdrop {&#xA;    server 127.0.0.1:9000;&#xA;    keepalive 64;&#xA;  }&#xA;&#xA;  server {&#xA;    listen *:8080;&#xA;    server_name _;&#xA;    access_log /usr/local/var/log/nginx/nginx.access.log;&#xA;    error_log /usr/local/var/log/nginx/nginx.error.log;&#xA;    auth_basic &#34;Restricted Area&#34;;&#xA;    auth_basic_user_file /usr/local/etc/nginx/.htpasswd;&#xA;&#xA;    location / {&#xA;      proxy_pass http://kafdrop;&#xA;    }&#xA;&#xA;    location /logout {&#xA;      return 401;&#xA;    }&#xA;&#xA;    error_page 401 /errors/401.html;&#xA;&#xA;    location /errors {&#xA;      auth_basic off;&#xA;      ssi        on;&#xA;      alias /usr/local/opt/nginx/html;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run NGINX:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nginx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or reload its configuration if already running:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nginx -s reload&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To logout, browse to &lt;a href=&#34;http://localhost:8080/logout&#34;&gt;/logout&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Hey there!&lt;/strong&gt; We hope you really like Kafdrop! Please take a moment to &lt;a href=&#34;https://github.com/obsidiandynamics/kafdrop&#34;&gt;⭐&lt;/a&gt;the repo or &lt;a href=&#34;https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fobsidiandynamics%2Fkafdrop&amp;amp;text=Get%20Kafdrop%20%E2%80%94%20a%20web-based%20UI%20for%20viewing%20%23ApacheKafka%20topics%20and%20browsing%20consumers%20&#34;&gt;Tweet&lt;/a&gt; about it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Contributing Guidelines&lt;/h1&gt; &#xA;&lt;p&gt;All contributions are more than welcomed. Contributions may close an issue, fix a bug (reported or not reported), add new design blocks, improve the existing code, add new feature, and so on. In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone.&lt;/p&gt; &#xA;&lt;h2&gt;Release workflow&lt;/h2&gt; &#xA;&lt;p&gt;To cut an official release, these are the steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Commit a new version on master that has the &lt;code&gt;-SNAPSHOT&lt;/code&gt; suffix stripped (see &lt;code&gt;pom.xml&lt;/code&gt;). Once the commit is merged, the CI will treat it as a release build, and will end up publishing more artifacts than the regular (non-release/snapshot) build. One of those will be a dockerhub push to the specific version and &#34;latest&#34; tags. (The regular build doesn&#39;t update &#34;latest&#34;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can then edit the release description in GitHub to describe what went into the release.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After the release goes through successfully, you need to prepare the repo for the next version, which requires committing the next snapshot version on master again. So we should increment the minor version and add again the &lt;code&gt;-SNAPSHOT&lt;/code&gt; suffix.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>