<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-30T01:38:36Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>androidx/media</title>
    <updated>2023-07-30T01:38:36Z</updated>
    <id>tag:github.com,2023-07-30:/androidx/media</id>
    <link href="https://github.com/androidx/media" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Jetpack Media3 support libraries for media use cases, including ExoPlayer, an extensible media player for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AndroidX Media&lt;/h1&gt; &#xA;&lt;p&gt;AndroidX Media is a collection of libraries for implementing media use cases on Android, including local playback (via ExoPlayer) and media sessions.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://developer.android.com/guide/topics/media/media3&#34;&gt;developer guide&lt;/a&gt; provides a wealth of information.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://developer.android.com/reference/androidx/media3/common/package-summary&#34;&gt;class reference&lt;/a&gt; documents the classes and methods.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/androidx/media/release/RELEASENOTES.md&#34;&gt;release notes&lt;/a&gt; document the major changes in each release.&lt;/li&gt; &#xA; &lt;li&gt;Follow our &lt;a href=&#34;https://medium.com/google-exoplayer&#34;&gt;developer blog&lt;/a&gt; to keep up to date with the latest developments!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migration for existing ExoPlayer and MediaSession projects&lt;/h2&gt; &#xA;&lt;p&gt;You&#39;ll find a &lt;a href=&#34;https://developer.android.com/guide/topics/media/media3/getting-started/migration-guide&#34;&gt;migration guide for existing ExoPlayer and MediaSession users&lt;/a&gt; on developer.android.com.&lt;/p&gt; &#xA;&lt;h2&gt;API stability&lt;/h2&gt; &#xA;&lt;p&gt;AndroidX Media releases provide API stability guarantees, ensuring that the API surface remains backwards compatible for the most commonly used APIs. APIs intended for more advanced use cases are marked as unstable. To use an unstable method or class without lint warnings, youâ€™ll need to add the OptIn annotation before using it. For more information see the &lt;a href=&#34;https://github.com/androidx/media/raw/main/libraries/common/src/main/java/androidx/media3/common/util/UnstableApi.java&#34;&gt;UnstableApi&lt;/a&gt; documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Using the libraries&lt;/h2&gt; &#xA;&lt;p&gt;You can get the libraries from &lt;a href=&#34;https://developer.android.com/studio/build/dependencies#google-maven&#34;&gt;the Google Maven repository&lt;/a&gt;. It&#39;s also possible to clone this GitHub repository and depend on the modules locally.&lt;/p&gt; &#xA;&lt;h3&gt;From the Google Maven repository&lt;/h3&gt; &#xA;&lt;h4&gt;1. Add module dependencies&lt;/h4&gt; &#xA;&lt;p&gt;The easiest way to get started using AndroidX Media is to add gradle dependencies on the libraries you need in the &lt;code&gt;build.gradle&lt;/code&gt; file of your app module.&lt;/p&gt; &#xA;&lt;p&gt;For example, to depend on ExoPlayer with DASH playback support and UI components you can add dependencies on the modules like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;implementation &#39;androidx.media3:media3-exoplayer:1.X.X&#39;&#xA;implementation &#39;androidx.media3:media3-exoplayer-dash:1.X.X&#39;&#xA;implementation &#39;androidx.media3:media3-ui:1.X.X&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;where &lt;code&gt;1.X.X&lt;/code&gt; is your preferred version. All modules must be the same version.&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://developer.android.com/jetpack/androidx/releases/media3#declaring_dependencies&#34;&gt;AndroidX Media3 developer.android.com page&lt;/a&gt; for more information, including a full list of library modules.&lt;/p&gt; &#xA;&lt;p&gt;This repository includes some modules that depend on external libraries that need to be built manually, and are not available from the Maven repository. Please see the individual READMEs under the &lt;a href=&#34;https://raw.githubusercontent.com/androidx/media/release/libraries&#34;&gt;libraries directory&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h4&gt;2. Turn on Java 8 support&lt;/h4&gt; &#xA;&lt;p&gt;If not enabled already, you also need to turn on Java 8 support in all &lt;code&gt;build.gradle&lt;/code&gt; files depending on AndroidX Media, by adding the following to the &lt;code&gt;android&lt;/code&gt; section:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;compileOptions {&#xA;  targetCompatibility JavaVersion.VERSION_1_8&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Enable multidex&lt;/h4&gt; &#xA;&lt;p&gt;If your Gradle &lt;code&gt;minSdkVersion&lt;/code&gt; is 20 or lower, you should &lt;a href=&#34;https://developer.android.com/studio/build/multidex&#34;&gt;enable multidex&lt;/a&gt; in order to prevent build errors.&lt;/p&gt; &#xA;&lt;h3&gt;Locally&lt;/h3&gt; &#xA;&lt;p&gt;Cloning the repository and depending on the modules locally is required when using some libraries. It&#39;s also a suitable approach if you want to make local changes, or if you want to use the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;p&gt;First, clone the repository into a local directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/androidx/media.git&#xA;cd media&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next, add the following to your project&#39;s &lt;code&gt;settings.gradle&lt;/code&gt; file, replacing &lt;code&gt;path/to/media&lt;/code&gt; with the path to your local copy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;gradle.ext.androidxMediaModulePrefix = &#39;media-&#39;&#xA;apply from: file(&#34;path/to/media/core_settings.gradle&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should now see the AndroidX Media modules appear as part of your project. You can depend on them as you would on any other local module, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;implementation project(&#39;:media-lib-exoplayer&#39;)&#xA;implementation project(&#39;:media-lib-exoplayer-dash&#39;)&#xA;implementation project(&#39;:media-lib-ui&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Developing AndroidX Media&lt;/h2&gt; &#xA;&lt;h4&gt;Project branches&lt;/h4&gt; &#xA;&lt;p&gt;Development work happens on the &lt;code&gt;main&lt;/code&gt; branch. Pull requests should normally be made to this branch.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;release&lt;/code&gt; branch holds the most recent stable release.&lt;/p&gt; &#xA;&lt;h4&gt;Using Android Studio&lt;/h4&gt; &#xA;&lt;p&gt;To develop AndroidX Media using Android Studio, simply open the project in the root directory of this repository.&lt;/p&gt;</summary>
  </entry>
</feed>