<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-05T01:34:23Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>woowacourse-precourse/java-lotto-6</title>
    <updated>2023-11-05T01:34:23Z</updated>
    <id>tag:github.com,2023-11-05:/woowacourse-precourse/java-lotto-6</id>
    <link href="https://github.com/woowacourse-precourse/java-lotto-6" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;미션 - 로또&lt;/h1&gt; &#xA;&lt;h2&gt;🔍 진행 방식&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;미션은 &lt;strong&gt;기능 요구 사항, 프로그래밍 요구 사항, 과제 진행 요구 사항&lt;/strong&gt; 세 가지로 구성되어 있다.&lt;/li&gt; &#xA; &lt;li&gt;세 개의 요구 사항을 만족하기 위해 노력한다. 특히 기능을 구현하기 전에 기능 목록을 만들고, 기능 단위로 커밋 하는 방식으로 진행한다.&lt;/li&gt; &#xA; &lt;li&gt;기능 요구 사항에 기재되지 않은 내용은 스스로 판단하여 구현한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📮 미션 제출 방법&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;미션 구현을 완료한 후 GitHub을 통해 제출해야 한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;GitHub을 활용한 제출 방법은 &lt;a href=&#34;https://github.com/woowacourse/woowacourse-docs/tree/master/precourse&#34;&gt;프리코스 과제 제출&lt;/a&gt; 문서를 참고해 제출한다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;GitHub에 미션을 제출한 후 &lt;a href=&#34;https://apply.techcourse.co.kr&#34;&gt;우아한테크코스 지원&lt;/a&gt; 사이트에 접속하여 프리코스 과제를 제출한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;자세한 방법은 &lt;a href=&#34;https://github.com/woowacourse/woowacourse-docs/tree/master/precourse#%EC%A0%9C%EC%B6%9C-%EA%B0%80%EC%9D%B4%EB%93%9C&#34;&gt;제출 가이드&lt;/a&gt; 참고&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Pull Request만 보내고 지원 플랫폼에서 과제를 제출하지 않으면 최종 제출하지 않은 것으로 처리되니 주의한다.&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚨 과제 제출 전 체크 리스트 - 0점 방지&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;기능 구현을 모두 정상적으로 했더라도 &lt;strong&gt;요구 사항에 명시된 출력값 형식을 지키지 않을 경우 0점으로 처리&lt;/strong&gt;한다.&lt;/li&gt; &#xA; &lt;li&gt;기능 구현을 완료한 뒤 아래 가이드에 따라 테스트를 실행했을 때 모든 테스트가 성공하는지 확인한다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;테스트가 실패할 경우 0점으로 처리&lt;/strong&gt;되므로, 반드시 확인 후 제출한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;테스트 실행 가이드&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;터미널에서 &lt;code&gt;java -version&lt;/code&gt;을 실행하여 Java 버전이 17인지 확인한다. Eclipse 또는 IntelliJ IDEA와 같은 IDE에서 Java 17로 실행되는지 확인한다.&lt;/li&gt; &#xA; &lt;li&gt;터미널에서 Mac 또는 Linux 사용자의 경우 &lt;code&gt;./gradlew clean test&lt;/code&gt; 명령을 실행하고, Windows 사용자의 경우 &lt;code&gt;gradlew.bat clean test&lt;/code&gt; 또는 &lt;code&gt;./gradlew.bat clean test&lt;/code&gt; 명령을 실행할 때 모든 테스트가 아래와 같이 통과하는지 확인한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;BUILD SUCCESSFUL in 0s&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🚀 기능 요구 사항&lt;/h2&gt; &#xA;&lt;p&gt;로또 게임 기능을 구현해야 한다. 로또 게임은 아래와 같은 규칙으로 진행된다.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;- 로또 번호의 숫자 범위는 1~45까지이다.&#xA;- 1개의 로또를 발행할 때 중복되지 않는 6개의 숫자를 뽑는다.&#xA;- 당첨 번호 추첨 시 중복되지 않는 숫자 6개와 보너스 번호 1개를 뽑는다.&#xA;- 당첨은 1등부터 5등까지 있다. 당첨 기준과 금액은 아래와 같다.&#xA;    - 1등: 6개 번호 일치 / 2,000,000,000원&#xA;    - 2등: 5개 번호 + 보너스 번호 일치 / 30,000,000원&#xA;    - 3등: 5개 번호 일치 / 1,500,000원&#xA;    - 4등: 4개 번호 일치 / 50,000원&#xA;    - 5등: 3개 번호 일치 / 5,000원&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;로또 구입 금액을 입력하면 구입 금액에 해당하는 만큼 로또를 발행해야 한다.&lt;/li&gt; &#xA; &lt;li&gt;로또 1장의 가격은 1,000원이다.&lt;/li&gt; &#xA; &lt;li&gt;당첨 번호와 보너스 번호를 입력받는다.&lt;/li&gt; &#xA; &lt;li&gt;사용자가 구매한 로또 번호와 당첨 번호를 비교하여 당첨 내역 및 수익률을 출력하고 로또 게임을 종료한다.&lt;/li&gt; &#xA; &lt;li&gt;사용자가 잘못된 값을 입력할 경우 &lt;code&gt;IllegalArgumentException&lt;/code&gt;를 발생시키고, &#34;[ERROR]&#34;로 시작하는 에러 메시지를 출력 후 그 부분부터 입력을 다시 받는다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;Exception&lt;/code&gt;이 아닌 &lt;code&gt;IllegalArgumentException&lt;/code&gt;, &lt;code&gt;IllegalStateException&lt;/code&gt; 등과 같은 명확한 유형을 처리한다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;입출력 요구 사항&lt;/h3&gt; &#xA;&lt;h4&gt;입력&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;로또 구입 금액을 입력 받는다. 구입 금액은 1,000원 단위로 입력 받으며 1,000원으로 나누어 떨어지지 않는 경우 예외 처리한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;14000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;당첨 번호를 입력 받는다. 번호는 쉼표(,)를 기준으로 구분한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;1,2,3,4,5,6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;보너스 번호를 입력 받는다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;출력&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;발행한 로또 수량 및 번호를 출력한다. 로또 번호는 오름차순으로 정렬하여 보여준다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;8개를 구매했습니다.&#xA;[8, 21, 23, 41, 42, 43] &#xA;[3, 5, 11, 16, 32, 38] &#xA;[7, 11, 16, 35, 36, 44] &#xA;[1, 8, 11, 31, 41, 42] &#xA;[13, 14, 16, 38, 42, 45] &#xA;[7, 11, 30, 40, 42, 43] &#xA;[2, 13, 22, 32, 38, 45] &#xA;[1, 3, 5, 14, 22, 45]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;당첨 내역을 출력한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;3개 일치 (5,000원) - 1개&#xA;4개 일치 (50,000원) - 0개&#xA;5개 일치 (1,500,000원) - 0개&#xA;5개 일치, 보너스 볼 일치 (30,000,000원) - 0개&#xA;6개 일치 (2,000,000,000원) - 0개&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;수익률은 소수점 둘째 자리에서 반올림한다. (ex. 100.0%, 51.5%, 1,000,000.0%)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;총 수익률은 62.5%입니다.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;예외 상황 시 에러 문구를 출력해야 한다. 단, 에러 문구는 &#34;[ERROR]&#34;로 시작해야 한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;[ERROR] 로또 번호는 1부터 45 사이의 숫자여야 합니다.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;실행 결과 예시&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;구입금액을 입력해 주세요.&#xA;8000&#xA;&#xA;8개를 구매했습니다.&#xA;[8, 21, 23, 41, 42, 43] &#xA;[3, 5, 11, 16, 32, 38] &#xA;[7, 11, 16, 35, 36, 44] &#xA;[1, 8, 11, 31, 41, 42] &#xA;[13, 14, 16, 38, 42, 45] &#xA;[7, 11, 30, 40, 42, 43] &#xA;[2, 13, 22, 32, 38, 45] &#xA;[1, 3, 5, 14, 22, 45]&#xA;&#xA;당첨 번호를 입력해 주세요.&#xA;1,2,3,4,5,6&#xA;&#xA;보너스 번호를 입력해 주세요.&#xA;7&#xA;&#xA;당첨 통계&#xA;---&#xA;3개 일치 (5,000원) - 1개&#xA;4개 일치 (50,000원) - 0개&#xA;5개 일치 (1,500,000원) - 0개&#xA;5개 일치, 보너스 볼 일치 (30,000,000원) - 0개&#xA;6개 일치 (2,000,000,000원) - 0개&#xA;총 수익률은 62.5%입니다.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎯 프로그래밍 요구 사항&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 17 버전에서 실행 가능해야 한다. &lt;strong&gt;JDK 17에서 정상적으로 동작하지 않을 경우 0점 처리한다.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;프로그램 실행의 시작점은 &lt;code&gt;Application&lt;/code&gt;의 &lt;code&gt;main()&lt;/code&gt;이다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;build.gradle&lt;/code&gt; 파일을 변경할 수 없고, 외부 라이브러리를 사용하지 않는다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/woowacourse/woowacourse-docs/tree/master/styleguide/java&#34;&gt;Java 코드 컨벤션&lt;/a&gt; 가이드를 준수하며 프로그래밍한다.&lt;/li&gt; &#xA; &lt;li&gt;프로그램 종료 시 &lt;code&gt;System.exit()&lt;/code&gt;를 호출하지 않는다.&lt;/li&gt; &#xA; &lt;li&gt;프로그램 구현이 완료되면 &lt;code&gt;ApplicationTest&lt;/code&gt;의 모든 테스트가 성공해야 한다. &lt;strong&gt;테스트가 실패할 경우 0점 처리한다.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;프로그래밍 요구 사항에서 달리 명시하지 않는 한 파일, 패키지 이름을 수정하거나 이동하지 않는다.&lt;/li&gt; &#xA; &lt;li&gt;indent(인덴트, 들여쓰기) depth를 3이 넘지 않도록 구현한다. 2까지만 허용한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;예를 들어 while문 안에 if문이 있으면 들여쓰기는 2이다.&lt;/li&gt; &#xA;   &lt;li&gt;힌트: indent(인덴트, 들여쓰기) depth를 줄이는 좋은 방법은 함수(또는 메서드)를 분리하면 된다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;3항 연산자를 쓰지 않는다.&lt;/li&gt; &#xA; &lt;li&gt;함수(또는 메서드)가 한 가지 일만 하도록 최대한 작게 만들어라.&lt;/li&gt; &#xA; &lt;li&gt;JUnit 5와 AssertJ를 이용하여 본인이 정리한 기능 목록이 정상 동작함을 테스트 코드로 확인한다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;추가된 요구 사항&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;함수(또는 메서드)의 길이가 15라인을 넘어가지 않도록 구현한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;함수(또는 메서드)가 한 가지 일만 잘 하도록 구현한다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;else 예약어를 쓰지 않는다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;힌트: if 조건절에서 값을 return하는 방식으로 구현하면 else를 사용하지 않아도 된다.&lt;/li&gt; &#xA;   &lt;li&gt;else를 쓰지 말라고 하니 switch/case로 구현하는 경우가 있는데 switch/case도 허용하지 않는다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Java Enum을 적용한다.&lt;/li&gt; &#xA; &lt;li&gt;도메인 로직에 단위 테스트를 구현해야 한다. 단, UI(System.out, System.in, Scanner) 로직은 제외한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;핵심 로직을 구현하는 코드와 UI를 담당하는 로직을 분리해 구현한다.&lt;/li&gt; &#xA;   &lt;li&gt;단위 테스트 작성이 익숙하지 않다면 &lt;code&gt;test/java/lotto/LottoTest&lt;/code&gt;를 참고하여 학습한 후 테스트를 구현한다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;라이브러리&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;camp.nextstep.edu.missionutils&lt;/code&gt;에서 제공하는 &lt;code&gt;Randoms&lt;/code&gt; 및 &lt;code&gt;Console&lt;/code&gt; API를 사용하여 구현해야 한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Random 값 추출은 &lt;code&gt;camp.nextstep.edu.missionutils.Randoms&lt;/code&gt;의 &lt;code&gt;pickUniqueNumbersInRange()&lt;/code&gt;를 활용한다.&lt;/li&gt; &#xA;   &lt;li&gt;사용자가 입력하는 값은 &lt;code&gt;camp.nextstep.edu.missionutils.Console&lt;/code&gt;의 &lt;code&gt;readLine()&lt;/code&gt;을 활용한다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;사용 예시&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;List&amp;lt;Integer&amp;gt; numbers = Randoms.pickUniqueNumbersInRange(1, 45, 6);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lotto 클래스&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;제공된 &lt;code&gt;Lotto&lt;/code&gt; 클래스를 활용해 구현해야 한다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;numbers&lt;/code&gt;의 접근 제어자인 private을 변경할 수 없다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Lotto&lt;/code&gt;에 필드(인스턴스 변수)를 추가할 수 없다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Lotto&lt;/code&gt;의 패키지 변경은 가능하다.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Lotto {&#xA;    private final List&amp;lt;Integer&amp;gt; numbers;&#xA;&#xA;    public Lotto(List&amp;lt;Integer&amp;gt; numbers) {&#xA;        validate(numbers);&#xA;        this.numbers = numbers;&#xA;    }&#xA;&#xA;    private void validate(List&amp;lt;Integer&amp;gt; numbers) {&#xA;        if (numbers.size() != 6) {&#xA;            throw new IllegalArgumentException();&#xA;        }&#xA;    }&#xA;&#xA;    // TODO: 추가 기능 구현&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✏️ 과제 진행 요구 사항&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;미션은 &lt;a href=&#34;https://github.com/woowacourse-precourse/java-lotto-6&#34;&gt;java-lotto-6&lt;/a&gt; 저장소를 Fork &amp;amp; Clone해 시작한다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;기능을 구현하기 전 &lt;code&gt;docs/README.md&lt;/code&gt;에 구현할 기능 목록을 정리&lt;/strong&gt;해 추가한다.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Git의 커밋 단위는 앞 단계에서 &lt;code&gt;docs/README.md&lt;/code&gt;에 정리한 기능 목록 단위&lt;/strong&gt;로 추가한다. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://gist.github.com/stephenparish/9941e89d80e2bc58a153&#34;&gt;커밋 메시지 컨벤션&lt;/a&gt; 가이드를 참고해 커밋 메시지를 작성한다.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;과제 진행 및 제출 방법은 &lt;a href=&#34;https://github.com/woowacourse/woowacourse-docs/tree/master/precourse&#34;&gt;프리코스 과제 제출&lt;/a&gt; 문서를 참고한다.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>