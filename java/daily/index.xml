<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-26T01:39:33Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>gephi/gephi</title>
    <updated>2023-01-26T01:39:33Z</updated>
    <id>tag:github.com,2023-01-26:/gephi/gephi</id>
    <link href="https://github.com/gephi/gephi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gephi - The Open Graph Viz Platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gephi - The Open Graph Viz Platform&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gephi/gephi/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/gephi/gephi/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gephi/gephi/releases/tag/v0.10.1&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/gephi/gephi/v0.10.1/total.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gephi/gephi/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/gephi/gephi/total.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/gephi/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/gephi/-/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation progress&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://gephi.org&#34;&gt;Gephi&lt;/a&gt; is an award-winning open-source platform for visualizing and manipulating large graphs. It runs on Windows, Mac OS X and Linux. Localization is available in English, French, Spanish, Japanese, Russian, Brazilian Portuguese, Chinese, Czech, German and Romanian.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt; Powered by a built-in OpenGL engine, Gephi is able to push the envelope with very large networks. Visualize networks up to a million elements. All actions (e.g. layout, filter, drag) run in real-time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Simple&lt;/strong&gt; Easy to install and &lt;a href=&#34;https://gephi.github.io/users/quick-start&#34;&gt;get started&lt;/a&gt;. An UI that is centered around the visualization. Like Photoshop™ for graphs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modular&lt;/strong&gt; Extend Gephi with &lt;a href=&#34;https://gephi.org/plugins&#34;&gt;plug-ins&lt;/a&gt;. The architecture is built on top of &lt;a href=&#34;https://netbeans.apache.org/tutorials/nbm-quick-start.html&#34;&gt;Apache Netbeans Platform&lt;/a&gt; and can be extended or reused easily through well-written APIs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gephi.github.io/users/download&#34;&gt;Download Gephi&lt;/a&gt; for Windows, Mac OS X and Linux and consult the &lt;a href=&#34;https://github.com/gephi/gephi/releases&#34;&gt;release notes&lt;/a&gt;. Example datasets can be found on our &lt;a href=&#34;https://github.com/gephi/gephi/wiki/Datasets&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://gephi.github.io/images/screenshots/select-tool-mini.png&#34; alt=&#34;Gephi&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install and use Gephi&lt;/h2&gt; &#xA;&lt;p&gt;Download and &lt;a href=&#34;https://gephi.github.io/users/install/&#34;&gt;Install&lt;/a&gt; Gephi on your computer.&lt;/p&gt; &#xA;&lt;p&gt;Get started with the &lt;a href=&#34;https://gephi.github.io/users/quick-start/&#34;&gt;Quick Start&lt;/a&gt; and follow the &lt;a href=&#34;https://gephi.github.io/users/&#34;&gt;Tutorials&lt;/a&gt;. Load a sample &lt;a href=&#34;https://github.com/gephi/gephi/wiki/Datasets&#34;&gt;dataset&lt;/a&gt; and start to play with the data.&lt;/p&gt; &#xA;&lt;p&gt;If you run into any trouble or have questions consult our &lt;a href=&#34;https://github.com/gephi/gephi/discussions&#34;&gt;discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Latest releases&lt;/h2&gt; &#xA;&lt;h3&gt;Stable&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Latest stable release on &lt;a href=&#34;https://gephi.org/users/download/&#34;&gt;gephi.org&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development builds&lt;/h3&gt; &#xA;&lt;p&gt;Development builds are &lt;a href=&#34;https://github.com/gephi/gephi/actions/workflows/release.yml&#34;&gt;generated regularly&lt;/a&gt;. Current version is 0.10.2-SNAPSHOT&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://oss.sonatype.org/service/local/artifact/maven/content?r=snapshots&amp;amp;g=org.gephi&amp;amp;a=gephi&amp;amp;v=0.10.2-SNAPSHOT&amp;amp;c=windows-x64&amp;amp;p=exe&#34;&gt;gephi-0.10.2-SNAPSHOT-windows-x64.exe&lt;/a&gt; (Windows)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://oss.sonatype.org/service/local/artifact/maven/content?r=snapshots&amp;amp;g=org.gephi&amp;amp;a=gephi&amp;amp;v=0.10.2-SNAPSHOT&amp;amp;c=windows-x32&amp;amp;p=exe&#34;&gt;gephi-0.10.2-SNAPSHOT-windows-x32.exe&lt;/a&gt; (Windows x32)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://oss.sonatype.org/service/local/artifact/maven/content?r=snapshots&amp;amp;g=org.gephi&amp;amp;a=gephi&amp;amp;v=0.10.2-SNAPSHOT&amp;amp;c=macos-x64&amp;amp;p=dmg&#34;&gt;gephi-0.10.2-SNAPSHOT-macos-x64.dmg&lt;/a&gt; (Mac OS X)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://oss.sonatype.org/service/local/artifact/maven/content?r=snapshots&amp;amp;g=org.gephi&amp;amp;a=gephi&amp;amp;v=0.10.2-SNAPSHOT&amp;amp;c=macos-aarch64&amp;amp;p=dmg&#34;&gt;gephi-0.10.2-SNAPSHOT-macos-aarch64.dmg&lt;/a&gt; (Mac OS X Silicon)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://oss.sonatype.org/service/local/artifact/maven/content?r=snapshots&amp;amp;g=org.gephi&amp;amp;a=gephi&amp;amp;v=0.10.2-SNAPSHOT&amp;amp;c=linux-x64&amp;amp;p=tar.gz&#34;&gt;gephi-0.10.2-SNAPSHOT-linux-x64.tar.gz&lt;/a&gt; (Linux)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developer Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Gephi is developed in Java and uses OpenGL for its visualization engine. Built on the top of Netbeans Platform, it follows a loosely-coupled, modular architecture philosophy. Gephi is split into modules, which depend on other modules through well-written APIs. Plugins can reuse existing APIs, create new services and even replace a default implementation with a new one.&lt;/p&gt; &#xA;&lt;p&gt;Consult the &lt;a href=&#34;http://gephi.github.io/gephi/0.9.2/apidocs/index.html&#34;&gt;&lt;strong&gt;Javadoc&lt;/strong&gt;&lt;/a&gt; for an overview of the APIs.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Java JDK 11 (or later)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://maven.apache.org/&#34;&gt;Apache Maven&lt;/a&gt; version 3.6.3 or later&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Checkout and Build the sources&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork the repository and clone&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  git clone git@github.com:username/gephi.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the following command or &lt;a href=&#34;https://github.com/gephi/gephi/wiki/How-to-build-Gephi&#34;&gt;open the project in an IDE&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  mvn -T 4 clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once built, one can test running Gephi&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  cd modules/application&#xA;  mvn nbm:cluster-app nbm:run-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that while Gephi can be built using JDK 11 or later, it currently requires JDK 11 to run.&lt;/p&gt; &#xA;&lt;h3&gt;Create Plug-ins&lt;/h3&gt; &#xA;&lt;p&gt;Gephi is extensible and lets developers create plug-ins to add new features, or to modify existing features. For example, you can create a new layout algorithm, add a metric, create a filter or a tool, support a new file format or database, or modify the visualization.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gephi/gephi/wiki/Plugins&#34;&gt;&lt;strong&gt;Plugins Portal&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gephi/gephi/wiki/Plugin-Quick-Start&#34;&gt;Plugins Quick Start (5 minutes)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Browse the &lt;a href=&#34;https://gephi.org/plugins&#34;&gt;plugins&lt;/a&gt; created by the community&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We&#39;ve created a &lt;a href=&#34;https://github.com/gephi/gephi-plugins-bootcamp&#34;&gt;&lt;strong&gt;Plugins Bootcamp&lt;/strong&gt;&lt;/a&gt; to learn by examples.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Gephi Toolkit&lt;/h2&gt; &#xA;&lt;p&gt;The Gephi Toolkit project packages essential Gephi modules (Graph, Layout, Filters, IO…) in a standard Java library which any Java project can use for getting things done. It can be used on a server or command-line tool to do the same things Gephi does but automatically.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://gephi.org/toolkit/&#34;&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gephi/gephi-toolkit&#34;&gt;GitHub Project&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gephi/gephi/wiki/Toolkit&#34;&gt;Toolkit Portal&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Localization&lt;/h2&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://hosted.weblate.org/projects/gephi/&#34;&gt;Weblate&lt;/a&gt; for localization. Follow the guidelines on the &lt;a href=&#34;https://github.com/gephi/gephi/wiki/Localization&#34;&gt;wiki&lt;/a&gt; for more details how to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Icons&lt;/h2&gt; &#xA;&lt;p&gt;Gephi uses icons from various sources. The icons are licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by/3.0/&#34;&gt;CC BY 3.0&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;p&gt;All icons can be found in the &lt;code&gt;DesktopIcons&lt;/code&gt; module, organised by module name.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Gephi main source code is distributed under the dual license &lt;a href=&#34;http://www.opensource.org/licenses/CDDL-1.0&#34;&gt;CDDL 1.0&lt;/a&gt; and &lt;a href=&#34;http://www.gnu.org/licenses/gpl.html&#34;&gt;GNU General Public License v3&lt;/a&gt;. Read the &lt;a href=&#34;http://gephi.github.io/legal/faq/&#34;&gt;Legal FAQs&lt;/a&gt; to learn more.&lt;/p&gt; &#xA;&lt;p&gt;Copyright 2011 Gephi Consortium. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;The contents of this file are subject to the terms of either the GNU General Public License Version 3 only (&#34;GPL&#34;) or the Common Development and Distribution License (&#34;CDDL&#34;) (collectively, the &#34;License&#34;). You may not use this file except in compliance with the License. You can obtain a copy of the License at &lt;a href=&#34;http://gephi.github.io/developers/license/&#34;&gt;http://gephi.github.io/developers/license/&lt;/a&gt; or /cddl-1.0.txt and /gpl-3.0.txt. See the License for the specific language governing permissions and limitations under the License. When distributing the software, include this License Header Notice in each file and include the License files at /cddl-1.0.txt and /gpl-3.0.txt. If applicable, add the following below the License Header, with the fields enclosed by brackets [] replaced by your own identifying information: &#34;Portions Copyrighted [year] [name of copyright owner]&#34;&lt;/p&gt; &#xA;&lt;p&gt;If you wish your version of this file to be governed by only the CDDL or only the GPL Version 3, indicate your decision by adding &#34;[Contributor] elects to include this software in this distribution under the [CDDL or GPL Version 3] license.&#34; If you do not indicate a single choice of license, a recipient has the option to distribute your version of this file under either the CDDL, the GPL Version 3 or to extend the choice of license to its licensees as provided above. However, if you add GPL Version 3 code and therefore, elected the GPL Version 3 license, then the option applies only if the new code is made subject to such option by the copyright holder.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>microsoft/playwright-java</title>
    <updated>2023-01-26T01:39:33Z</updated>
    <id>tag:github.com,2023-01-26:/microsoft/playwright-java</id>
    <link href="https://github.com/microsoft/playwright-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Java version of the Playwright testing and automation library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🎭 &lt;a href=&#34;https://playwright.dev&#34;&gt;Playwright&lt;/a&gt; for Java&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://javadoc.io/doc/com.microsoft.playwright/playwright&#34;&gt;&lt;img src=&#34;https://javadoc.io/badge2/com.microsoft.playwright/playwright/javadoc.svg?sanitize=true&#34; alt=&#34;javadoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=com.microsoft.playwright&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.microsoft.playwright/playwright&#34; alt=&#34;maven version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots/com/microsoft/playwright/playwright/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nexus/s/https/oss.sonatype.org/com.microsoft.playwright/playwright.svg?sanitize=true&#34; alt=&#34;Sonatype Nexus (Snapshots)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://aka.ms/playwright-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/join-slack-infomational&#34; alt=&#34;Join Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://playwright.dev/java/&#34;&gt;Website&lt;/a&gt; | &lt;a href=&#34;https://www.javadoc.io/doc/com.microsoft.playwright/playwright/latest/index.html&#34;&gt;API reference&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Playwright is a Java library to automate &lt;a href=&#34;https://www.chromium.org/Home&#34;&gt;Chromium&lt;/a&gt;, &lt;a href=&#34;https://www.mozilla.org/en-US/firefox/new/&#34;&gt;Firefox&lt;/a&gt; and &lt;a href=&#34;https://webkit.org/&#34;&gt;WebKit&lt;/a&gt; with a single API. Playwright is built to enable cross-browser web automation that is &lt;strong&gt;ever-green&lt;/strong&gt;, &lt;strong&gt;capable&lt;/strong&gt;, &lt;strong&gt;reliable&lt;/strong&gt; and &lt;strong&gt;fast&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Linux&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;macOS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Chromium &#xA;    &lt;!-- GEN:chromium-version --&gt;110.0.5481.38&#xA;    &lt;!-- GEN:stop --&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;WebKit &#xA;    &lt;!-- GEN:webkit-version --&gt;16.4&#xA;    &lt;!-- GEN:stop --&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Firefox &#xA;    &lt;!-- GEN:firefox-version --&gt;108.0.2&#xA;    &lt;!-- GEN:stop --&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Headless execution is supported for all the browsers on all platforms. Check out &lt;a href=&#34;https://playwright.dev/java/docs/next/intro/#system-requirements&#34;&gt;system requirements&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#add-maven-dependency&#34;&gt;Add Maven dependency&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#is-playwright-thread-safe&#34;&gt;Is Playwright thread-safe?&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#examples&#34;&gt;Examples&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#page-screenshot&#34;&gt;Page screenshot&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#mobile-and-geolocation&#34;&gt;Mobile and geolocation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#evaluate-javascript-in-browser&#34;&gt;Evaluate JavaScript in browser&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#intercept-network-requests&#34;&gt;Intercept network requests&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/#is-playwright-for-java-ready&#34;&gt;Is Playwright for Java ready?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Playwright requires &lt;strong&gt;Java 8&lt;/strong&gt; or newer.&lt;/p&gt; &#xA;&lt;h4&gt;Add Maven dependency&lt;/h4&gt; &#xA;&lt;p&gt;Playwright is distributed as a set of &lt;a href=&#34;https://maven.apache.org/what-is-maven.html&#34;&gt;Maven&lt;/a&gt; modules. The easiest way to use it is to add one dependency to your Maven &lt;code&gt;pom.xml&lt;/code&gt; file as described below. If you&#39;re not familiar with Maven please refer to its &lt;a href=&#34;https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run Playwright simply add following dependency to your Maven project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;com.microsoft.playwright&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;playwright&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;1.28.1&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run Playwright using Gradle add following dependency to your build.gradle file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;  implementation group: &#39;com.microsoft.playwright&#39;, name: &#39;playwright&#39;, version: &#39;1.28.1&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Is Playwright thread-safe?&lt;/h4&gt; &#xA;&lt;p&gt;No, Playwright is not thread safe, i.e. all its methods as well as methods on all objects created by it (such as BrowserContext, Browser, Page etc.) are expected to be called on the same thread where Playwright object was created or proper synchronization should be implemented to ensure only one thread calls Playwright methods at any given time. Having said that it&#39;s okay to create multiple Playwright instances each on its own thread.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;You can find Maven project with the examples &lt;a href=&#34;https://raw.githubusercontent.com/microsoft/playwright-java/main/examples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Page screenshot&lt;/h4&gt; &#xA;&lt;p&gt;This code snippet navigates to whatsmyuseragent.org in Chromium, Firefox and WebKit, and saves 3 screenshots.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.microsoft.playwright.*;&#xA;&#xA;import java.nio.file.Paths;&#xA;import java.util.Arrays;&#xA;import java.util.List;&#xA;&#xA;public class PageScreenshot {&#xA;  public static void main(String[] args) {&#xA;    try (Playwright playwright = Playwright.create()) {&#xA;      List&amp;lt;BrowserType&amp;gt; browserTypes = Arrays.asList(&#xA;        playwright.chromium(),&#xA;        playwright.webkit(),&#xA;        playwright.firefox()&#xA;      );&#xA;      for (BrowserType browserType : browserTypes) {&#xA;        try (Browser browser = browserType.launch()) {&#xA;          BrowserContext context = browser.newContext();&#xA;          Page page = context.newPage();&#xA;          page.navigate(&#34;http://whatsmyuseragent.org/&#34;);&#xA;          page.screenshot(new Page.ScreenshotOptions().setPath(Paths.get(&#34;screenshot-&#34; + browserType.name() + &#34;.png&#34;)));&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Mobile and geolocation&lt;/h4&gt; &#xA;&lt;p&gt;This snippet emulates Mobile Chromium on a device at a given geolocation, navigates to openstreetmap.org, performs action and takes a screenshot.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.microsoft.playwright.options.*;&#xA;import com.microsoft.playwright.*;&#xA;&#xA;import java.nio.file.Paths;&#xA;&#xA;import static java.util.Arrays.asList;&#xA;&#xA;public class MobileAndGeolocation {&#xA;  public static void main(String[] args) {&#xA;    try (Playwright playwright = Playwright.create()) {&#xA;      Browser browser = playwright.chromium().launch();&#xA;      BrowserContext context = browser.newContext(new Browser.NewContextOptions()&#xA;        .setUserAgent(&#34;Mozilla/5.0 (Linux; Android 8.0; Pixel 2 Build/OPD3.170816.012) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3765.0 Mobile Safari/537.36&#34;)&#xA;        .setViewportSize(411, 731)&#xA;        .setDeviceScaleFactor(2.625)&#xA;        .setIsMobile(true)&#xA;        .setHasTouch(true)&#xA;        .setLocale(&#34;en-US&#34;)&#xA;        .setGeolocation(41.889938, 12.492507)&#xA;        .setPermissions(asList(&#34;geolocation&#34;)));&#xA;      Page page = context.newPage();&#xA;      page.navigate(&#34;https://www.openstreetmap.org/&#34;);&#xA;      page.click(&#34;a[data-original-title=\&#34;Show My Location\&#34;]&#34;);&#xA;      page.screenshot(new Page.ScreenshotOptions().setPath(Paths.get(&#34;colosseum-pixel2.png&#34;)));&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Evaluate JavaScript in browser&lt;/h4&gt; &#xA;&lt;p&gt;This code snippet navigates to example.com in Firefox, and executes a script in the page context.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.microsoft.playwright.*;&#xA;&#xA;public class EvaluateInBrowserContext {&#xA;  public static void main(String[] args) {&#xA;    try (Playwright playwright = Playwright.create()) {&#xA;      Browser browser = playwright.firefox().launch();&#xA;      BrowserContext context = browser.newContext();&#xA;      Page page = context.newPage();&#xA;      page.navigate(&#34;https://www.example.com/&#34;);&#xA;      Object dimensions = page.evaluate(&#34;() =&amp;gt; {\n&#34; +&#xA;        &#34;  return {\n&#34; +&#xA;        &#34;      width: document.documentElement.clientWidth,\n&#34; +&#xA;        &#34;      height: document.documentElement.clientHeight,\n&#34; +&#xA;        &#34;      deviceScaleFactor: window.devicePixelRatio\n&#34; +&#xA;        &#34;  }\n&#34; +&#xA;        &#34;}&#34;);&#xA;      System.out.println(dimensions);&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Intercept network requests&lt;/h4&gt; &#xA;&lt;p&gt;This code snippet sets up request routing for a WebKit page to log all network requests.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.microsoft.playwright.*;&#xA;&#xA;public class InterceptNetworkRequests {&#xA;  public static void main(String[] args) {&#xA;    try (Playwright playwright = Playwright.create()) {&#xA;      Browser browser = playwright.webkit().launch();&#xA;      BrowserContext context = browser.newContext();&#xA;      Page page = context.newPage();&#xA;      page.route(&#34;**&#34;, route -&amp;gt; {&#xA;        System.out.println(route.request().url());&#xA;        route.resume();&#xA;      });&#xA;      page.navigate(&#34;http://todomvc.com&#34;);&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check out our official &lt;a href=&#34;https://playwright.dev/java&#34;&gt;documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also browse &lt;a href=&#34;https://www.javadoc.io/doc/com.microsoft.playwright/playwright/latest/index.html&#34;&gt;javadoc online&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Follow &lt;a href=&#34;https://github.com/microsoft/playwright-java/raw/main/CONTRIBUTING.md#getting-code&#34;&gt;the instructions&lt;/a&gt; to build the project from source and install the driver.&lt;/p&gt; &#xA;&lt;h2&gt;Is Playwright for Java ready?&lt;/h2&gt; &#xA;&lt;p&gt;Yes, Playwright for Java is ready. v1.10.0 is the first stable release. Going forward we will adhere to &lt;a href=&#34;https://semver.org/&#34;&gt;semantic versioning&lt;/a&gt; of the API.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>confluentinc/kafka-connect-storage-cloud</title>
    <updated>2023-01-26T01:39:33Z</updated>
    <id>tag:github.com,2023-01-26:/confluentinc/kafka-connect-storage-cloud</id>
    <link href="https://github.com/confluentinc/kafka-connect-storage-cloud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kafka Connect suite of connectors for Cloud storage (Amazon S3)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kafka Connect Connector for S3&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fconfluentinc%2Fkafka-connect-storage-cloud?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fconfluentinc%2Fkafka-connect-storage-cloud.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;kafka-connect-storage-cloud&lt;/em&gt; is the repository for Confluent&#39;s &lt;a href=&#34;http://kafka.apache.org/documentation.html#connect&#34;&gt;Kafka Connectors&lt;/a&gt; designed to be used to copy data from Kafka into Amazon S3.&lt;/p&gt; &#xA;&lt;h2&gt;Kafka Connect Sink Connector for Amazon Simple Storage Service (S3)&lt;/h2&gt; &#xA;&lt;p&gt;Documentation for this connector can be found &lt;a href=&#34;http://docs.confluent.io/current/connect/connect-storage-cloud/kafka-connect-s3/docs/index.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Blogpost for this connector can be found &lt;a href=&#34;https://www.confluent.io/blog/apache-kafka-to-amazon-s3-exactly-once&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;To build a development version you&#39;ll need a recent version of Kafka as well as a set of upstream Confluent projects, which you&#39;ll have to build from their appropriate snapshot branch. See &lt;a href=&#34;https://github.com/confluentinc/kafka-connect-storage-common/wiki/FAQ&#34;&gt;the kafka-connect-storage-common FAQ&lt;/a&gt; for guidance on this process.&lt;/p&gt; &#xA;&lt;p&gt;You can build &lt;em&gt;kafka-connect-storage-cloud&lt;/em&gt; with Maven using the standard lifecycle phases.&lt;/p&gt; &#xA;&lt;h1&gt;Running Integration Tests&lt;/h1&gt; &#xA;&lt;p&gt;Integration tests are run as part of &lt;code&gt;mvn install&lt;/code&gt;; however one needs to first configure the environment variable&lt;code&gt;AWS_CREDENTIALS_PATH&lt;/code&gt; to point to a json file path with following structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &#34;aws_access_key_id&#34;: &#34;&amp;lt;key&amp;gt;&#34;,&#xA;    &#34;aws_secret_access_key&#34;: &#34;&amp;lt;secret&amp;gt;&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contribute&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Source Code: &lt;a href=&#34;https://github.com/confluentinc/kafka-connect-storage-cloud&#34;&gt;https://github.com/confluentinc/kafka-connect-storage-cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Issue Tracker: &lt;a href=&#34;https://github.com/confluentinc/kafka-connect-storage-cloud/issues&#34;&gt;https://github.com/confluentinc/kafka-connect-storage-cloud/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Learn how to work with the connector&#39;s source code by reading our &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/kafka-connect-storage-cloud/master/CONTRIBUTING.md&#34;&gt;Development and Contribution guidelines&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/kafka-connect-storage-cloud/master/LICENSE&#34;&gt;Confluent Community License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fconfluentinc%2Fkafka-connect-storage-cloud?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fconfluentinc%2Fkafka-connect-storage-cloud.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>