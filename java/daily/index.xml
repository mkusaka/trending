<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-31T01:35:27Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>macrozheng/mall-learning</title>
    <updated>2022-08-31T01:35:27Z</updated>
    <id>tag:github.com,2022-08-31:/macrozheng/mall-learning</id>
    <link href="https://github.com/macrozheng/mall-learning" rel="alternate"></link>
    <summary type="html">&lt;p&gt;mall学习教程，架构、业务、技术要点全方位解析。mall项目（50k+star）是一套电商系统，使用现阶段主流技术实现。涵盖了SpringBoot 2.3.0、MyBatis 3.4.6、Elasticsearch 7.6.2、RabbitMQ 3.7.15、Redis 5.0、MongoDB 4.2.5、Mysql5.7等技术，采用Docker容器化部署。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mall学习教程&lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;#公众号&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%85%AC%E4%BC%97%E5%8F%B7-macrozheng-blue.svg?sanitize=true&#34; alt=&#34;公众号&#34;&gt;&lt;/a&gt; &lt;a href=&#34;#公众号&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E4%BA%A4%E6%B5%81-%E5%BE%AE%E4%BF%A1%E7%BE%A4-2BA245.svg?sanitize=true&#34; alt=&#34;交流&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/macrozheng/mall&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%90%8E%E5%8F%B0%E9%A1%B9%E7%9B%AE-mall-blue.svg?sanitize=true&#34; alt=&#34;后台项目&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/macrozheng/mall-admin-web&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE-mall--admin--web-green.svg?sanitize=true&#34; alt=&#34;前端项目&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/macrozheng/mall-swarm&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/Cloud%E7%89%88%E6%9C%AC-mall--swarm-brightgreen.svg?sanitize=true&#34; alt=&#34;SpringCloud版本&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;mall学习教程，架构、业务、技术要点全方位解析。mall项目（50k+star）是一套电商系统，使用现阶段主流技术实现。涵盖了SpringBoot 2.3.0、MyBatis 3.4.6、Elasticsearch 7.6.2、RabbitMQ 3.7.15、Redis 5.0、MongoDB 4.2.5、Mysql5.7等技术，采用Docker容器化部署。&lt;/p&gt; &#xA;&lt;h2&gt;项目地址&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;后台项目：&lt;a href=&#34;https://github.com/macrozheng/mall&#34;&gt;https://github.com/macrozheng/mall&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;前端项目：&lt;a href=&#34;https://github.com/macrozheng/mall-admin-web&#34;&gt;https://github.com/macrozheng/mall-admin-web&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;微服务项目：&lt;a href=&#34;https://github.com/macrozheng/mall-swarm&#34;&gt;https://github.com/macrozheng/mall-swarm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;更好的阅读体验&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;文档地址：&lt;a href=&#34;https://www.macrozheng.com&#34;&gt;https://www.macrozheng.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;备用地址：&lt;a href=&#34;https://macrozheng.github.io/mall-learning&#34;&gt;https://macrozheng.github.io/mall-learning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;序章&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;项目架构及数据库概览，推荐一些项目学习所需知识点。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/foreword/mall_foreword_01.html&#34;&gt;mall架构及功能概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/foreword/mall_foreword_02.html&#34;&gt;mall学习所需知识点（推荐资料）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;架构篇&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;手把手教你搭建一个mall在使用的项目骨架，带你逐步熟悉mall所使用的技术栈。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_01.html&#34;&gt;mall整合SpringBoot+MyBatis搭建基本骨架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_02.html&#34;&gt;mall整合Swagger-UI实现在线API文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_03.html&#34;&gt;mall整合Redis实现缓存功能&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_04.html&#34;&gt;mall整合SpringSecurity和JWT实现认证和授权（一）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_05.html&#34;&gt;mall整合SpringSecurity和JWT实现认证和授权（二）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_06.html&#34;&gt;mall整合SpringTask实现定时任务&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_07.html&#34;&gt;mall整合Elasticsearch实现商品搜索&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_08.html&#34;&gt;mall整合Mongodb实现文档操作&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_09.html&#34;&gt;mall整合RabbitMQ实现延迟消息&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/architect/mall_arch_10.html&#34;&gt;mall整合OSS实现文件上传&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;业务篇&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;全面解析mall中使用的数据库表结构，带你熟悉mall项目中的电商业务。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_database_overview.html&#34;&gt;mall数据库表结构概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_pms_01.html&#34;&gt;商品模块数据库表解析（一）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_pms_02.html&#34;&gt;商品模块数据库表解析（二）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_oms_01.html&#34;&gt;订单模块数据库表解析（一）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_oms_02.html&#34;&gt;订单模块数据库表解析（二）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_oms_03.html&#34;&gt;订单模块数据库表解析（三）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_sms_01.html&#34;&gt;营销模块数据库表解析（一）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_sms_02.html&#34;&gt;营销模块数据库表解析（二）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_sms_03.html&#34;&gt;营销模块数据库表解析（三）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/database/mall_permission.html&#34;&gt;权限管理功能设计与优化&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术要点篇&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;mall中一些功能的技术要点解析，这些技术要点和业务结合地比较紧密。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/mybatis_mapper.html&#34;&gt;MyBatis Generator使用过程中踩过的一个坑&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/aop_log.html&#34;&gt;SpringBoot应用中使用AOP记录接口访问日志&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/springboot_cors.html&#34;&gt;前后端分离项目，如何解决跨域问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/java_stream.html&#34;&gt;Java 8都出那么久了，Stream API了解下？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/springsecurity_use.html&#34;&gt;仅需四步，整合SpringSecurity+JWT实现登录认证！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/minio_use.html&#34;&gt;前后端分离项目，如何优雅实现文件存储！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/gateway_cors.html&#34;&gt;前后端分离项目，引入Spring Cloud Gateway遇到的一个问题！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/permission_back.html&#34;&gt;手把手教你搞定权限管理，结合Spring Security实现接口的动态权限控制！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/permission_front.html&#34;&gt;手把手教你搞定权限管理，结合Vue实现菜单的动态权限控制！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/product_sku.html&#34;&gt;商品SKU功能设计与优化&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/springboot_validator.html&#34;&gt;SpringBoot中处理校验逻辑的两种方式，真的很机智！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/redis_permission.html&#34;&gt;使用Redis+AOP优化权限管理功能，这波操作贼爽！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/product_search.html&#34;&gt;Elasticsearch项目实战，商品搜索功能设计与实现！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/rabbitmq_delay.html&#34;&gt;RabbitMQ实现延迟消息居然如此简单，整个插件就完事了！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/swagger_upgrade.html&#34;&gt;给Swagger升级了新版本，没想到居然有这么多坑！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/elasticsearch_upgrade.html&#34;&gt;Elasticsearch 升级 7.x 版本后，我感觉掉坑里了！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/technology/mall_permission_question.html&#34;&gt;搞定Mall项目中的权限管理功能，弄懂这些问题就妥了！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;部署篇&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;mall开发及生产环境的搭建，涵盖Windows、Docker、K8S及自动化部署。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_deploy_windows.html&#34;&gt;mall在Windows环境下的部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_deploy_docker.html&#34;&gt;mall在Linux环境下的部署（基于Docker容器）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_deploy_docker_compose.html&#34;&gt;mall在Linux环境下的部署（基于Docker Compose）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_deploy_web.html&#34;&gt;mall前端项目的安装与部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_swarm_deploy_windows.html&#34;&gt;mall-swarm在Windows环境下的部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_swarm_deploy_docker.html&#34;&gt;mall-swarm在Linux环境下的部署（基于Docker容器）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_deploy_jenkins.html&#34;&gt;mall使用Jenkins实现自动化部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_swarm_deploy_jenkins.html&#34;&gt;mall-swarm使用Jenkins实现自动化部署&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/deploy/mall_swarm_deploy_k8s.html&#34;&gt;mall-swarm微服务项目在K8S下的实践！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;参考篇&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;mall相关技术的参考教程，每篇都是可以独立学习的教程，学习过程中遇到不懂的知识点可以从这里找找。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/mysql.html&#34;&gt;开发者必备Mysql命令&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/linux_command.html&#34;&gt;还在百度Linux命令？推荐一套我用起来特顺手的命令！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/linux_firewall.html&#34;&gt;Linux防火墙Firewall和Iptables的使用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/docker_command.html&#34;&gt;还在百度Docker命令？推荐一套我用起来特顺手的命令！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/docker_maven.html&#34;&gt;使用Maven插件为SpringBoot应用构建Docker镜像&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/docker_file.html&#34;&gt;使用DockerFile为SpringBoot应用构建Docker镜像&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/docker_compose.html&#34;&gt;使用Docker Compose部署SpringBoot应用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/hutool_start.html&#34;&gt;Hutool中那些常用的工具类和方法 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/nginx.html&#34;&gt;Nginx的这些妙用，你肯定有不知道的！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/jenkins.html&#34;&gt;使用Jenkins一键打包部署SpringBoot应用，就是这么6！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/jenkins_vue.html&#34;&gt;使用Jenkins一键打包部署前端应用，就是这么6！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/minio.html&#34;&gt;Github标星19K+Star，10分钟自建对象存储服务！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/spring_data_redis.html&#34;&gt;Spring Data Redis 最佳实践！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/elasticsearch_start.html&#34;&gt;Elasticsearch快速入门，掌握这些刚刚好！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/mongodb_start.html&#34;&gt;MongoDB快速入门，掌握这些刚刚好！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/springboot_auto_deploy.html&#34;&gt;我常用的自动化部署技巧，贼好用，推荐给大家！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/rabbitmq_start.html&#34;&gt;连RabbitMQ的5种核心消息模式都不懂，也敢说自己会用消息队列！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/mall_tiny_elk.html&#34;&gt;SpringBoot应用整合ELK实现日志收集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/mall_elk_advance.html&#34;&gt;你居然还去服务器上捞日志，搭个日志收集系统难道不香么！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/knife4j_start.html&#34;&gt;给Swagger换了个新皮肤，瞬间高大上了！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/docker_protect_socket.html&#34;&gt;Docker服务开放了这个端口，服务器分分钟变肉机！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/elk_security.html&#34;&gt;居然有人想白嫖我的日志，赶紧开启安全保护压压惊！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/nginx_https_start.html&#34;&gt;Nginx如何支持HTTPS？手把手教贼简单！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/swagger_starter.html&#34;&gt;还在手动整合Swagger？Swagger官方Starter是真的香！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/springboot_start.html&#34;&gt;肝了一周总结的SpringBoot实战教程，太实用了！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/mybatis_generator_start.html&#34;&gt;解放双手！MyBatis官方代码生成工具给力！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/mall/reference/lombok_start.html&#34;&gt;Lombok有啥牛皮的？SpringBoot和IDEA官方都要支持它！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;公众号&lt;/h2&gt; &#xA;&lt;p&gt;学习不走弯路，关注公众号「&lt;strong&gt;macrozheng&lt;/strong&gt;」，回复「&lt;strong&gt;学习路线&lt;/strong&gt;」，获取mall项目专属学习路线！&lt;/p&gt; &#xA;&lt;p&gt;加微信群交流，公众号后台回复「&lt;strong&gt;加群&lt;/strong&gt;」即可。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/banner/qrcode_for_macrozheng_258.jpg&#34; alt=&#34;公众号图片&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>plantuml/plantuml</title>
    <updated>2022-08-31T01:35:27Z</updated>
    <id>tag:github.com,2022-08-31:/plantuml/plantuml</id>
    <link href="https://github.com/plantuml/plantuml" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate diagrams from textual description&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PlantUML&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/plantuml/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/plantuml?logo=github&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/stargazers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/plantuml&#34; alt=&#34;GitHub Org&#39;s stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/watchers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/watchers/plantuml/plantuml&#34; alt=&#34;GitHub watchers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors-anon/plantuml/plantuml?color=blue&#34; alt=&#34;GitHub contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/network/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/plantuml/plantuml&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/sourceforge/dt/plantuml?color=blue&#34; alt=&#34;GitHub all releases&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.plantuml.com/plantuml&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://www.plantuml.com/plantuml/badge&#34; alt=&#34;online&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.plantuml.com/plantuml&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://www.plantuml.com/plantuml/rate&#34; alt=&#34;rate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.plantuml.com/plantuml&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://www.plantuml.com/plantuml/rate?peak&#34; alt=&#34;peak&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plantuml/plantuml/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/plantuml/plantuml&#34; alt=&#34;Release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/plantuml/plantuml?color=blue&#34; alt=&#34;Release Date&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/commits/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commits-since/plantuml/plantuml/latest&#34; alt=&#34;GitHub commits since latest release (by date)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plantuml/plantuml/releases/tag/snapshot&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/plantuml/plantuml?color=chocolate&amp;amp;include_prereleases&#34; alt=&#34;Pre-release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/releases/tag/snapshot&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date-pre/plantuml/plantuml?color=chocolate&#34; alt=&#34;Pre-release Date&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/commits/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/plantuml/plantuml?color=chocolate&#34; alt=&#34;GitHub last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/plantuml/plantuml/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/plantuml/plantuml/actions/workflows/ci.yml/badge.svg?color=chocolate&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Generate UML diagram from textual description&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/plantuml/plantuml/issues/826&#34;&gt;PlantUML is &lt;strong&gt;not&lt;/strong&gt; affected by the log4j vulnerability.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;PlantUML is a component that allows to quickly write:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/sequence-diagram&#34;&gt;Sequence diagram&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/use-case-diagram&#34;&gt;Use case diagram&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/class-diagram&#34;&gt;Class diagram&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/object-diagram&#34;&gt;Object diagram&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/activity-diagram-beta&#34;&gt;Activity diagram&lt;/a&gt; (here is &lt;a href=&#34;http://plantuml.com/activity-diagram-legacy&#34;&gt;the legacy syntax&lt;/a&gt;),&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/component-diagram&#34;&gt;Component diagram&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/deployment-diagram&#34;&gt;Deployment diagram&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/state-diagram&#34;&gt;State diagram&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/timing-diagram&#34;&gt;Timing diagram&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The following non-UML diagrams are also supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/json&#34;&gt;JSON data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/yaml&#34;&gt;YAML data&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/nwdiag&#34;&gt;Network diagram (nwdiag)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/salt&#34;&gt;Wireframe graphical interface or UI mockups (salt)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/archimate-diagram&#34;&gt;Archimate diagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/activity-diagram-beta#sdl&#34;&gt;Specification and Description Language (SDL)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/ditaa&#34;&gt;Ditaa diagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/gantt-diagram&#34;&gt;Gantt diagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/mindmap-diagram&#34;&gt;MindMap diagram&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/wbs-diagram&#34;&gt;Work Breakdown Structure diagram (WBS)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/ascii-math&#34;&gt;Mathematic with AsciiMath or JLaTeXMath notation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/ie-diagram&#34;&gt;Entity Relationship diagram (IE/ER)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Furthermore:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/link&#34;&gt;Hyperlinks and tooltips&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/creole&#34;&gt;Creole&lt;/a&gt;: rich text, emoticons, unicode, icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/openiconic&#34;&gt;OpenIconic icons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/sprite&#34;&gt;Sprite icons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plantuml.com/ascii-math&#34;&gt;AsciiMath mathematical expressions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To know more about PlantUML, please visit &lt;a href=&#34;https://plantuml.com/&#34;&gt;https://plantuml.com/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jOOQ/jOOQ</title>
    <updated>2022-08-31T01:35:27Z</updated>
    <id>tag:github.com,2022-08-31:/jOOQ/jOOQ</id>
    <link href="https://github.com/jOOQ/jOOQ" rel="alternate"></link>
    <summary type="html">&lt;p&gt;jOOQ is the best way to write SQL in Java&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;jOOQ&#39;s reason for being - compared to JPA&lt;/h1&gt; &#xA;&lt;p&gt;Java and SQL have come a long way. SQL is an &#34;ancient&#34;, yet established and well-understood technology. Java is a legacy too, although its platform JVM allows for many new and contemporary languages built on top of it. Yet, after all these years, libraries dealing with the interface between SQL and Java have come and gone, leaving JPA to be a standard that is accepted only with doubts, short of any surviving options.&lt;/p&gt; &#xA;&lt;p&gt;So far, there had been only few database abstraction frameworks or libraries, that truly respected SQL as a first class citizen among languages. Most frameworks, including the industry standards JPA, EJB, Hibernate, JDO, Criteria Query, and many others try to hide SQL itself, minimising its scope to things called JPQL, HQL, JDOQL and various other inferior query languages&lt;/p&gt; &#xA;&lt;p&gt;jOOQ has come to fill this gap.&lt;/p&gt; &#xA;&lt;h1&gt;jOOQ&#39;s reason of being - compared to LINQ&lt;/h1&gt; &#xA;&lt;p&gt;Other platforms incorporate ideas such as LINQ (with LINQ-to-SQL), or Scala&#39;s SLICK, or also Java&#39;s QueryDSL to better integrate querying as a concept into their respective language. By querying, they understand querying of arbitrary targets, such as SQL, XML, Collections and other heterogeneous data stores. jOOQ claims that this is going the wrong way too.&lt;/p&gt; &#xA;&lt;p&gt;In more advanced querying use-cases (more than simple CRUD and the occasional JOIN), people will want to profit from the expressivity of SQL. Due to the relational nature of SQL, this is quite different from what object-oriented and partially functional languages such as C#, Scala, or Java can offer.&lt;/p&gt; &#xA;&lt;p&gt;It is very hard to formally express and validate joins and the ad-hoc table expression types they create. It gets even harder when you want support for more advanced table expressions, such as pivot tables, unnested cursors, or just arbitrary projections from derived tables. With a very strong object-oriented typing model, these features will probably stay out of scope.&lt;/p&gt; &#xA;&lt;p&gt;In essence, the decision of creating an API that looks like SQL or one that looks like C#, Scala, Java is a definite decision in favour of one or the other platform. While it will be easier to evolve SLICK in similar ways as LINQ (or QueryDSL in the Java world), SQL feature scope that clearly communicates its underlying intent will be very hard to add, later on (e.g. how would you model Oracle&#39;s partitioned outer join syntax? How would you model ANSI/ISO SQL:1999 grouping sets? How can you support scalar subquery caching? etc...).&lt;/p&gt; &#xA;&lt;p&gt;jOOQ has come to fill this gap.&lt;/p&gt; &#xA;&lt;h1&gt;jOOQ is different&lt;/h1&gt; &#xA;&lt;p&gt;SQL was never meant to be abstracted. To be confined in the narrow boundaries of heavy mappers, hiding the beauty and simplicity of relational data. SQL was never meant to be object-oriented. SQL was never meant to be anything other than... SQL!&lt;/p&gt; &#xA;&lt;p&gt;For more details please visit &lt;a href=&#34;https://www.jooq.org&#34;&gt;jooq.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Follow jOOQ on &lt;a href=&#34;https://twitter.com/JavaOOQ&#34;&gt;Twitter&lt;/a&gt; and &lt;a href=&#34;https://blog.jooq.org&#34;&gt;the jOOQ blog&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>