<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-02T01:33:26Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nayuki/QR-Code-generator</title>
    <updated>2022-08-02T01:33:26Z</updated>
    <id>tag:github.com,2022-08-02:/nayuki/QR-Code-generator</id>
    <link href="https://github.com/nayuki/QR-Code-generator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;High-quality QR Code generator library in Java, TypeScript/JavaScript, Python, Rust, C++, C.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;QR Code generator library&lt;/h1&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;This project aims to be the best, clearest QR Code generator library in multiple languages. The primary goals are flexible options and absolute correctness. Secondary goals are compact implementation size and good documentation comments.&lt;/p&gt; &#xA;&lt;p&gt;Home page with live JavaScript demo, extensive descriptions, and competitor comparisons: &lt;a href=&#34;https://www.nayuki.io/page/qr-code-generator-library&#34;&gt;https://www.nayuki.io/page/qr-code-generator-library&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Core features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Available in 6 programming languages, all with nearly equal functionality: Java, TypeScript/JavaScript, Python, Rust, C++, C&lt;/li&gt; &#xA; &lt;li&gt;Significantly shorter code but more documentation comments compared to competing libraries&lt;/li&gt; &#xA; &lt;li&gt;Supports encoding all 40 versions (sizes) and all 4 error correction levels, as per the QR Code Model 2 standard&lt;/li&gt; &#xA; &lt;li&gt;Output format: Raw modules/pixels of the QR symbol&lt;/li&gt; &#xA; &lt;li&gt;Detects finder-like penalty patterns more accurately than other implementations&lt;/li&gt; &#xA; &lt;li&gt;Encodes numeric and special-alphanumeric text in less space than general text&lt;/li&gt; &#xA; &lt;li&gt;Open-source code under the permissive MIT License&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Manual parameters:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User can specify minimum and maximum version numbers allowed, then library will automatically choose smallest version in the range that fits the data&lt;/li&gt; &#xA; &lt;li&gt;User can specify mask pattern manually, otherwise library will automatically evaluate all 8 masks and select the optimal one&lt;/li&gt; &#xA; &lt;li&gt;User can specify absolute error correction level, or allow the library to boost it if it doesn&#39;t increase the version number&lt;/li&gt; &#xA; &lt;li&gt;User can create a list of data segments manually and add ECI segments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional advanced features (Java only):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Encodes Japanese Unicode text in kanji mode to save a lot of space compared to UTF-8 bytes&lt;/li&gt; &#xA; &lt;li&gt;Computes optimal segment mode switching for text with mixed numeric/alphanumeric/general/kanji parts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information about QR Code technology and this library&#39;s design can be found on the project home page.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;The code below is in Java, but the other language ports are designed with essentially the same API naming and behavior.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.awt.image.BufferedImage;&#xA;import java.io.File;&#xA;import java.util.List;&#xA;import javax.imageio.ImageIO;&#xA;import io.nayuki.qrcodegen.*;&#xA;&#xA;// Simple operation&#xA;QrCode qr0 = QrCode.encodeText(&#34;Hello, world!&#34;, QrCode.Ecc.MEDIUM);&#xA;BufferedImage img = toImage(qr0, 4, 10);  // See QrCodeGeneratorDemo&#xA;ImageIO.write(img, &#34;png&#34;, new File(&#34;qr-code.png&#34;));&#xA;&#xA;// Manual operation&#xA;List&amp;lt;QrSegment&amp;gt; segs = QrSegment.makeSegments(&#34;3141592653589793238462643383&#34;);&#xA;QrCode qr1 = QrCode.encodeSegments(segs, QrCode.Ecc.HIGH, 5, 5, 2, false);&#xA;for (int y = 0; y &amp;lt; qr1.size; y++) {&#xA;    for (int x = 0; x &amp;lt; qr1.size; x++) {&#xA;        (... paint qr1.getModule(x, y) ...)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright © 2022 Project Nayuki. (MIT License)&lt;br&gt; &lt;a href=&#34;https://www.nayuki.io/page/qr-code-generator-library&#34;&gt;https://www.nayuki.io/page/qr-code-generator-library&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Software is provided &#34;as is&#34;, without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the Software or the use or other dealings in the Software.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Tangsan99999/TvJar</title>
    <updated>2022-08-02T01:33:26Z</updated>
    <id>tag:github.com,2022-08-02:/Tangsan99999/TvJar</id>
    <link href="https://github.com/Tangsan99999/TvJar" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;猫影视TV客户端爬虫自定义接口工程&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;思维没有边界 一切皆有可能&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;span&gt;🚀&lt;/span&gt;&lt;a href=&#34;https://t.me/catvodtv_offical&#34;&gt;&lt;strong&gt;TG交流群&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本工程最终食用需配合 猫影视TV新版（一下简称为软件） &lt;strong&gt;v2.0.0&lt;/strong&gt;及以上版本。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Tangsan99999/TvJar/master/app/src/main/res/drawable-xhdpi/app_icon.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;欢迎各路大佬踊跃提PR，分享爬虫代码。&lt;/h3&gt; &#xA;&lt;h3&gt;这里是用户分享的爬虫代码打包的共享包，可以配合自定义配置，直接食用 &lt;a href=&#34;https://raw.githubusercontent.com/Tangsan99999/TvJar/master/jar/&#34;&gt;custom_spider.jar&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;快速开始&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;本工程是一个完整的AndroidStudio工程，请你用AS打开编辑。&lt;/p&gt; &#xA;&lt;p&gt;工程调试完毕后要需要导出生成jar文件配合软件使用，执行根目录下的 &lt;code&gt;buildAndGenJar.bat&lt;/code&gt; 会在&lt;code&gt;jar&lt;/code&gt;目录生成一个名为&lt;code&gt;custom_spider.jar&lt;/code&gt;的jar文件，这个文件就是我们最终要是用的代码包。&lt;/p&gt; &#xA;&lt;h3&gt;代码包食用方式&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;本地加载：将&lt;code&gt;custom_spider.jar&lt;/code&gt;放入设备sd卡根目录即可。 &lt;strong&gt;注意，如需本地加载，请手动赋予App存储空间读写权限，App默认不申请存储空间读写权限&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;远程加载：将&lt;code&gt;custom_spider.jar&lt;/code&gt;上传到你的网络空间，获取对应的文件下载地址，在软件自定义配置的json文件中加入下面格式的键值对。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;spider&#34;: &#34;http://xxx.xxx.xxx/custom_spider.jar&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;支持jar文件本地缓存（需v2.0.5及以上版本）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;spider&#34;: &#34;http://xxx.xxx.xxx/custom_spider.jar;md5;jar文件md5&#34;&#xA;// 例如&#xA;&#34;spider&#34;: &#34;https://github.com/catvod/CatVodTVSpider/blob/master/jar/custom_spider.jar?raw=true;md5;c6ed6bc8285f0aca90e7cb3abf7f9caa&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;如何在自定义配置中调用我们代码包中的Spider&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;同样在自定义json中加入相应的播放源即可，&lt;strong&gt;type=3, api对应你代码工程中自定义的爬虫类名（api必须是&lt;code&gt;csp_&lt;/code&gt;开头），例如实例工程中的&lt;code&gt;Aidi&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;key&#34;: &#34;csp_Aidi&#34;,&#xA;    &#34;name&#34;: &#34;爱迪&#34;,&#xA;    &#34;type&#34;: 3,&#xA;    &#34;api&#34;: &#34;csp_Aidi&#34;,&#xA;    &#34;searchable&#34;: 1,&#xA;    &#34;quickSearch&#34;: 0,&#xA;    &#34;filterable&#34;: 1&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Json解析扩展（需v2.0.2及以上版本）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;通过jar包可以实现json解析并发、轮询等相关功能，&lt;strong&gt;参与并发和轮询的json解析地址，默认为解析地址列表中的所有json解析（即type=1）&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;在自定义json中的&lt;code&gt;parse&lt;/code&gt;里加入相应的解析配置（type=2）即可启用。&lt;strong&gt;调用扩展类的名称配置在&lt;code&gt;parse&lt;/code&gt;的&lt;code&gt;url&lt;/code&gt;字段里，例如扩展类&lt;code&gt;JsonParallel&lt;/code&gt;的json配置&lt;code&gt;url&lt;/code&gt;字段值为&lt;code&gt;Parallel&lt;/code&gt;&lt;/strong&gt;。如下：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;name&#34;: &#34;Json并发&#34;,&#xA;    &#34;type&#34;: 2,&#xA;    &#34;url&#34;: &#34;Parallel&#34;&#xA;},&#xA;{&#xA;    &#34;name&#34;: &#34;Json轮询&#34;,&#xA;    &#34;type&#34;: 2,&#xA;    &#34;url&#34;: &#34;Sequence&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;XPath规则套娃（需v2.0.4及以上版本）&lt;/strong&gt; 套娃规则祥见&lt;a href=&#34;https://raw.githubusercontent.com/Tangsan99999/TvJar/master/XPath.md&#34;&gt;XPath.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;M浏览器中APP影视规则支持&lt;/strong&gt;（2022.01.17 by 小黄瓜）支持筛选。&lt;/p&gt; &#xA;&lt;p&gt;因&lt;a href=&#34;https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/APP%E5%BD%B1%E8%A7%86%E5%88%97%E8%A1%A8&#34; target=&#34;_blank&#34;&gt;App影视接口收集地址&lt;/a&gt;停止维护，代码里不再读取相关json地址。&lt;/p&gt; &#xA;&lt;p&gt;如果你有对应影视Api地址请在ext字段中直接配置Api地址。&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;配置代码示例 点我展开&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#34;key&#34;:&#34;csp_appysv2_追剧达人&#34;, &#34;name&#34;:&#34;追剧推荐(M2)&#34;, &#34;type&#34;:3,&#34;api&#34;:&#34;csp_AppYsV2&#34;, &#34;searchable&#34;:1, &#34;quickSearch&#34;:0, &#34;filterable&#34;:1, &#34;ext&#34;:&#34;https://vipmv.co/xgapp.php/v1/&#34;},&#xA;{&#34;key&#34;:&#34;csp_appysv2_天空影视&#34;, &#34;name&#34;:&#34;天空推荐(M2)&#34;, &#34;type&#34;:3,&#34;api&#34;:&#34;csp_AppYsV2&#34;, &#34;searchable&#34;:1, &#34;quickSearch&#34;:0, &#34;filterable&#34;:1, &#34;ext&#34;:&#34;https://tkys.tv/xgapp.php/v1/&#34;},&#xA;{&#34;key&#34;:&#34;csp_appys_HG影视&#34;, &#34;name&#34;:&#34;HG影视(M)&#34;, &#34;type&#34;:3, &#34;api&#34;:&#34;csp_AppYs&#34;, &#34;searchable&#34;:1, &#34;quickSearch&#34;:0, &#34;filterable&#34;:1, &#34;ext&#34;:&#34;http://hgyx.vip/api.php/v1.vod&#34;},&#xA;{&#34;key&#34;:&#34;csp_appys_瑞丰资源&#34;, &#34;name&#34;:&#34;瑞丰资源(M)&#34;, &#34;type&#34;:3, &#34;api&#34;:&#34;csp_AppYs&#34;, &#34;searchable&#34;:1, &#34;quickSearch&#34;:0, &#34;filterable&#34;:1, &#34;ext&#34;:&#34;https://ts.yjhan.com:4433/ruifenglb_api.php/v1.vod&#34;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;部分内置代理接口使用（需v2.0.9及以上版本）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;入口 &lt;a href=&#34;https://raw.githubusercontent.com/Tangsan99999/TvJar/master/app/src/main/java/com/github/catvod/spider/Proxy.java&#34;&gt;Proxy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;图片代理，示例参考&lt;a href=&#34;https://raw.githubusercontent.com/Tangsan99999/TvJar/master/app/src/main/java/com/github/catvod/spider/Nekk.java#L449&#34;&gt;Nekk&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;直播配置重定向代理，示例参考&lt;a href=&#34;https://raw.githubusercontent.com/Tangsan99999/TvJar/master/app/src/main/java/com/github/catvod/live/TxtSubscribe.java&#34;&gt;TxtSubscribe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;推送功能扩展（需v2.1.0.Beta6及以上版本）&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;入口 &lt;a href=&#34;https://raw.githubusercontent.com/Tangsan99999/TvJar/master/app/src/main/java/com/github/catvod/spider/PushAgent.java&#34;&gt;PushAgent&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;需要在配置文件中，加入key为&lt;code&gt;push_agent&lt;/code&gt;的站点，数据返回格式和普通爬虫一致&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;key&#34;: &#34;push_agent&#34;,&#xA;  &#34;name&#34;: &#34;推送&#34;,&#xA;  &#34;type&#34;: 3,&#xA;  &#34;api&#34;: &#34;csp_PushAgent&#34;,&#xA;  &#34;searchable&#34;: 0,&#xA;  &#34;quickSearch&#34;: 0,&#xA;  &#34;filterable&#34;: 0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;基础类&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.crawler.Spider 爬虫基类&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.crawler.SpiderReq 用于发起网络请求 获取网络数据，请使用&lt;a href=&#34;https://raw.githubusercontent.com/Tangsan99999/TvJar/master/app/src/main/java/com/github/catvod/utils/okhttp/OkHttpUtil.java&#34;&gt;OkHttpUtil&lt;/a&gt;类，SpiderReq后续将删除&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.crawler.SpiderReqResult 网络请求结果&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.crawler.SpiderUrl 用于定义一个网络请求&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;示例&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;请查看 仓库中的爱迪影视 相关实现 ，调试可参考 &lt;code&gt;com.github.catvod.demo.MainActivity&lt;/code&gt; ，直接调用对应爬虫相关接口&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;com.github.catvod.spider.Aidi&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;注意事项!!&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;除了&lt;code&gt;com.github.catvod.spider&lt;/code&gt;包以外的代码，最终都会被软件本身内置的代码代替掉，所以，建议你不要修改除&lt;code&gt;com.github.catvod.spider&lt;/code&gt;包以外的代码。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;不要在&lt;code&gt;Spider&lt;/code&gt;中使用&lt;code&gt;Gson&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;待补充&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;爬虫类返回的相关Json字符串格式说明&lt;/h2&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;homeContent&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;class&#34;: [{   // 分类&#xA;&#x9;&#x9;&#34;type_id&#34;: &#34;dianying&#34;, // 分类id &#xA;&#x9;&#x9;&#34;type_name&#34;: &#34;电影&#34; // 分类名&#xA;&#x9;}, {&#xA;&#x9;&#x9;&#34;type_id&#34;: &#34;lianxuju&#34;,&#xA;&#x9;&#x9;&#34;type_name&#34;: &#34;连续剧&#34;&#xA;&#x9;}],&#xA;&#x9;&#34;filters&#34;: { // 筛选&#xA;&#x9;&#x9;&#34;dianying&#34;: [{ // 分类id 就是上面class中的分类id&#xA;&#x9;&#x9;&#x9;&#34;key&#34;: &#34;0&#34;, // 筛选key&#xA;&#x9;&#x9;&#x9;&#34;name&#34;: &#34;分类&#34;, // 筛选名称&#xA;&#x9;&#x9;&#x9;&#34;value&#34;: [{ // 筛选选项 &#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;全部&#34;, // 选项展示的名称&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;dianying&#34; // 选项最终在url中的展现&#xA;&#x9;&#x9;&#x9;}, {&#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;动作片&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;dongzuopian&#34;&#xA;&#x9;&#x9;&#x9;}]&#xA;&#x9;&#x9;}],&#xA;&#x9;&#x9;&#34;lianxuju&#34;: [{&#xA;&#x9;&#x9;&#x9;&#34;key&#34;: 0,&#xA;&#x9;&#x9;&#x9;&#34;name&#34;: &#34;分类&#34;,&#xA;&#x9;&#x9;&#x9;&#34;value&#34;: [{&#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;全部&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;lianxuju&#34;&#xA;&#x9;&#x9;&#x9;}, {&#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;国产剧&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;guochanju&#34;&#xA;&#x9;&#x9;&#x9;}, {&#xA;&#x9;&#x9;&#x9;&#x9;&#34;n&#34;: &#34;港台剧&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;&#34;v&#34;: &#34;gangtaiju&#34;&#xA;&#x9;&#x9;&#x9;}]&#xA;&#x9;&#x9;}]&#xA;&#x9;},&#xA;&#x9;&#34;list&#34;: [{ // 首页最近更新视频列表&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1901&#34;, // 视频id&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;判决&#34;, // 视频名&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/614631e62ab3f51d918e9201.jpg&#34;, // 展示图片&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;6.8&#34; // 视频信息 展示在 视频名上方&#xA;&#x9;}, {&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1908&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;移山的父亲&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/6146fab82ab3f51d91c01af1.jpg&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;6.7&#34;&#xA;&#x9;}]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;categoryContent&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;page&#34;: 1, // 当前页&#xA;&#x9;&#34;pagecount&#34;: 2, // 总共几页&#xA;&#x9;&#34;limit&#34;: 60, // 每页几条数据&#xA;&#x9;&#34;total&#34;: 120, // 总共多少调数据&#xA;&#x9;&#34;list&#34;: [{ // 视频列表 下面的视频结构 同上面homeContent中的&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1897&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;北区侦缉队&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/6145d4b22ab3f51d91bd98b6.jpg&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;7.3&#34;&#xA;&#x9;}, {&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1879&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;浪客剑心 最终章 人诛篇&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/60e3f37e5132923bf82ef95e.jpg&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;8.0&#34;&#xA;&#x9;}]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;detailContent&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;list&#34;: [{&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1902&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;海岸村恰恰恰&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/pic.imgdb.cn\/item\/61463fd12ab3f51d91a0f44d.jpg&#34;,&#xA;&#x9;&#x9;&#34;type_name&#34;: &#34;剧情&#34;,&#xA;&#x9;&#x9;&#34;vod_year&#34;: &#34;2021&#34;,&#xA;&#x9;&#x9;&#34;vod_area&#34;: &#34;韩国&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;更新至第8集&#34;,&#xA;&#x9;&#x9;&#34;vod_actor&#34;: &#34;申敏儿,金宣虎,李相二,孔敏晶,徐尚沅,禹美华,朴艺荣,李世亨,边胜泰,金贤佑,金英玉&#34;,&#xA;&#x9;&#x9;&#34;vod_director&#34;: &#34;柳济元&#34;,&#xA;&#x9;&#x9;&#34;vod_content&#34;: &#34;海岸村恰恰恰剧情:　　韩剧海岸村恰恰恰 갯마을 차차차改编自2004年的电影《我的百事通男友洪班长》，海岸村恰恰恰 갯마을 차차차讲述来自大都市的牙医（申敏儿 饰）到充满人情味的海岸村开设牙医诊所，那里住着一位各方面都&#34;,&#xA;        // 播放源 多个用$$$分隔&#xA;&#x9;&#x9;&#34;vod_play_from&#34;: &#34;qiepian$$$yun3edu&#34;, &#xA;        // 播放列表 注意分隔符 分别是 多个源$$$分隔，源中的剧集用#分隔，剧集的名称和地址用$分隔&#xA;&#x9;&#x9;&#34;vod_play_url&#34;: &#34;第1集$1902-1-1#第2集$1902-1-2#第3集$1902-1-3#第4集$1902-1-4#第5集$1902-1-5#第6集$1902-1-6#第7集$1902-1-7#第8集$1902-1-8$$$第1集$1902-2-1#第2集$1902-2-2#第3集$1902-2-3#第4集$1902-2-4#第5集$1902-2-5#第6集$1902-2-6#第7集$1902-2-7#第8集$1902-2-8&#34; &#xA;&#x9;}]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;searchContent&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;&#x9;&#34;list&#34;: [{ // 视频列表 下面的视频结构 同上面homeContent中的&#xA;&#x9;&#x9;&#34;vod_id&#34;: &#34;1606&#34;,&#xA;&#x9;&#x9;&#34;vod_name&#34;: &#34;陪你一起长大&#34;,&#xA;&#x9;&#x9;&#34;vod_pic&#34;: &#34;https:\/\/img.aidi.tv\/img\/upload\/vod\/20210417-1\/e27d4eb86f7cde375171dd324b2c19ae.jpg&#34;,&#xA;&#x9;&#x9;&#34;vod_remarks&#34;: &#34;更新至第37集&#34;&#xA;&#x9;}]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Col-E/Recaf</title>
    <updated>2022-08-02T01:33:26Z</updated>
    <id>tag:github.com,2022-08-02:/Col-E/Recaf</id>
    <link href="https://github.com/Col-E/Recaf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The modern Java bytecode editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Recaf &lt;a href=&#34;https://discord.gg/Bya5HaA&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/443258489146572810.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cloud.drone.io/Col-E/Recaf&#34;&gt;&lt;img src=&#34;https://cloud.drone.io/api/badges/Col-E/Recaf/status.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/Col-E/Recaf/total.svg?sanitize=true&#34; alt=&#34;downloads&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Col-E/Recaf/master/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat&#34; alt=&#34;Contributions welcome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Col-E/Recaf/master/docs/screenshots/main-anim.gif&#34; alt=&#34;screenshot of recaf&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;An easy to use modern Java bytecode editor that abstracts away the complexities of Java programs. Recaf abstracts away:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Constant pool&lt;/li&gt; &#xA; &lt;li&gt;Stack frames&lt;/li&gt; &#xA; &lt;li&gt;Wide instructions&lt;/li&gt; &#xA; &lt;li&gt;And more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Don&#39;t know bytecode? That&#39;s ok because Recaf supports &lt;a href=&#34;https://col-e.github.io/Recaf-documentation/use-edit-via-decompile.html&#34;&gt;recompiling decompiled code&lt;/a&gt; and inserting &lt;a href=&#34;https://col-e.github.io/Recaf-documentation/use-assembler.html&#34;&gt;single line Java statements into the bytecode&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more information: &lt;em&gt;&lt;a href=&#34;https://col-e.github.io/Recaf-documentation/&#34;&gt;Read the documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/Col-E/Recaf/releases&#34;&gt;releases&lt;/a&gt; page for the latest build.&lt;/p&gt; &#xA;&lt;h2&gt;Preface&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re just getting started with reverse-engineering in Java, read &lt;a href=&#34;https://raw.githubusercontent.com/Col-E/Recaf/master/PRIMER.md&#34;&gt;primer guide&lt;/a&gt;. Then check the documentation pages.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Are you a developer?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://github.com/Col-E/Recaf/issues&#34;&gt;open issues&lt;/a&gt;, &lt;a href=&#34;https://github.com/Col-E/Recaf/projects&#34;&gt;project boards&lt;/a&gt;, and many scattered &lt;code&gt;TODO&lt;/code&gt; messages throughout the source code. There&#39;s plenty to do.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Not a developer?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can help by reporting bugs, making suggestions, providing translations, and sharing this project.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;More information can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/Col-E/Recaf/master/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setting up the project&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository via &lt;code&gt;git clone https://github.com/Col-E/Recaf.git&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open the project in an IDE or generate the build with maven.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IDE&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Import the project from the &lt;code&gt;pom.xml&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/help/idea/maven-support.html#maven_import_project_start&#34;&gt;IntelliJ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/a/36242422&#34;&gt;Eclipse&lt;/a&gt; - &lt;em&gt;(Warning: Eclipse&#39;s custom compiler cannot compile Recaf because of incorrect generics parsing)&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create a run configuration with the main class &lt;code&gt;me.coley.recaf.Recaf&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Without IDE&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Execute &lt;code&gt;build&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Follow the prompt in the script to build the project.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run the generated build: &lt;code&gt;java -jar target/recaf-{version}-jar-with-dependencies.jar&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For additional information, join the &lt;a href=&#34;https://discord.gg/Bya5HaA&#34;&gt;Discord server &lt;em&gt;(https://discord.gg/Bya5HaA)&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>