<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-06T01:29:19Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OpenEMS/openems</title>
    <updated>2024-03-06T01:29:19Z</updated>
    <id>tag:github.com,2024-03-06:/OpenEMS/openems</id>
    <link href="https://github.com/OpenEMS/openems" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenEMS - Open Source Energy Management System&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenEMS/openems/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/OpenEMS/openems/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/OpenEMS/openems/tree/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-live--demo-blue?logo=gitpod&#34; alt=&#34;Gitpod live-demo&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doi.org/10.5281/zenodo.4440883&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.4440884.svg?sanitize=true&#34; alt=&#34;Cite via Zenodo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenEMS/openems/develop/doc/modules/ROOT/assets/images/OpenEMS-Logo.png&#34; alt=&#34;the Feneco - OpenEMS Logo&#34; width=&#34;200&#34;&gt; &lt;br&gt;Open Source Energy Management System &lt;/h1&gt; &#xA;&lt;p&gt;OpenEMS - the Open Source Energy Management System - is a modular platform for energy management applications. It was developed around the requirements of monitoring, controlling, and integrating energy storage together with renewable energy sources and complementary devices and services like electric vehicle charging stations, heat-pumps, electrolysers, time-of-use electricity tariffs and more.&lt;/p&gt; &#xA;&lt;p&gt;If you plan to use OpenEMS for your own projects, please consider joining the &lt;a href=&#34;https://openems.io/association&#34;&gt;OpenEMS Association e.V.&lt;/a&gt;, a network of universities, hardware manufacturers, software companies as well as commercial and private owners, and get in touch in the &lt;a href=&#34;https://community.openems.io&#34;&gt;OpenEMS Community forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;OpenEMS in »Local Energy Management«&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenEMS/openems/develop/doc/modules/ROOT/assets/images/local-energy-management.png&#34; alt=&#34;alt text&#34; title=&#34;Local Energy Management&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;OpenEMS in »Areal Energy Management«&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenEMS/openems/develop/doc/modules/ROOT/assets/images/areal-energy-management.png&#34; alt=&#34;alt text&#34; title=&#34;Areal Energy Management&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;OpenEMS IoT stack&lt;/h2&gt; &#xA;&lt;p&gt;The OpenEMS &#39;Internet of Things&#39; stack contains three main components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenEMS Edge&lt;/strong&gt; runs on site, communicates with devices and services, collects data and executes control algorithms&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenEMS UI&lt;/strong&gt; is the real-time user interface for web browsers and smartphones&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenEMS Backend&lt;/strong&gt; runs on a (cloud) server, connects the decentralized Edge systems and provides aggregation, monitoring and control via internet&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;The OpenEMS software architecture was designed to leverage some features that are required by a modern and flexible Energy Management System:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fast, PLC-like control of devices&lt;/li&gt; &#xA; &lt;li&gt;Easily extendable due to the use of modern programming languages and modular architecture&lt;/li&gt; &#xA; &lt;li&gt;Reusable, device independent control algorithms due to clear device abstraction&lt;/li&gt; &#xA; &lt;li&gt;Wide range of supported devices and protocols&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;OpenEMS UI Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/OpenEMS/openems/develop/doc/modules/ROOT/assets/images/ui-live.png&#34; alt=&#34;alt text&#34; title=&#34;OpenEMS UI Live View&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/OpenEMS/openems/develop/doc/modules/ROOT/assets/images/ui-history.png&#34; alt=&#34;alt text&#34; title=&#34;OpenEMS UI History View&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;System architecture&lt;/h2&gt; &#xA;&lt;p&gt;OpenEMS is generally used in combination with external hardware and software components (the exception is a simulated development environment - see &lt;a href=&#34;https://openems.github.io/openems.io/openems/latest/gettingstarted.html&#34;&gt;Getting Started&lt;/a&gt;). As a brief overview, this is how OpenEMS is used in production setups: &lt;img src=&#34;https://raw.githubusercontent.com/OpenEMS/openems/develop/doc/modules/ROOT/assets/images/system-architecture.png&#34; alt=&#34;alt text&#34; title=&#34;OpenEMS System Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open up a &lt;a href=&#34;https://gitpod.io/#https://github.com/OpenEMS/openems&#34;&gt;Live-Demo on Gitpod&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://openems.github.io/openems.io/openems/latest/gettingstarted.html&#34;&gt;Getting Started&lt;/a&gt; guide to setup OpenEMS on your own computer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openems.github.io/openems.io/openems/latest/introduction.html&#34;&gt;Latest version of documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openems.github.io/openems.io/javadoc/&#34;&gt;Javadoc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Open Source philosophy&lt;/h2&gt; &#xA;&lt;p&gt;The OpenEMS project is driven by the &lt;a href=&#34;https://openems.io/association&#34;&gt;OpenEMS Association e.V.&lt;/a&gt;, a network of users, vendors and scientific institutions from all kinds of areas like hardware manufacturers, software companies, grid operators and more. They share the common target of developing a free and open-source platform for energy management, that supports the 100 % energy transition.&lt;/p&gt; &#xA;&lt;p&gt;We are inviting third parties to use OpenEMS for their own projects and are glad to support them with their first steps. In any case if you are interested in OpenEMS we would be glad to hear from you in the &lt;a href=&#34;https://community.openems.io&#34;&gt;OpenEMS Community forum&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;OpenEMS development was started by &lt;a href=&#34;https://www.fenecon.de&#34;&gt;FENECON GmbH&lt;/a&gt;, a German company specialized in manufacturing and project development of energy storage systems. It is the software stack behind &lt;a href=&#34;https://fenecon.de/page/fems&#34;&gt;FEMS - FENECON Energy Management System&lt;/a&gt; and widely used in private, commercial and industrial applications.&lt;/p&gt; &#xA;&lt;p&gt;OpenEMS is funded by several federal and EU funding projects. If you are a developer and you would like to get hired by one of the partner companies or universities for working on OpenEMS, please send your motivation letter to &lt;a href=&#34;mailto:info@openems.io&#34;&gt;info@openems.io&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Scientific Research&lt;/h2&gt; &#xA;&lt;p&gt;If you use OpenEMS in your scientific research, please use our Zenodo Digital Object Identifier (DOI) as reference:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://doi.org/10.5281/zenodo.4440883&#34;&gt;&lt;img src=&#34;https://zenodo.org/badge/DOI/10.5281/zenodo.4440884.svg?sanitize=true&#34; alt=&#34;Cite via Zenodo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenEMS Edge&lt;/li&gt; &#xA; &lt;li&gt;OpenEMS Backend&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Copyright (C) 2016-2022 OpenEMS Association e.V.&lt;/p&gt; &#xA;&lt;p&gt;This product includes software developed at FENECON GmbH: you can redistribute it and/or modify it under the terms of the &lt;a href=&#34;https://raw.githubusercontent.com/OpenEMS/openems/develop/LICENSE-EPL-2.0&#34;&gt;Eclipse Public License version 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;OpenEMS UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Copyright (C) 2016-2022 OpenEMS Association e.V.&lt;/p&gt; &#xA;&lt;p&gt;This product includes software developed at FENECON GmbH: you can redistribute it and/or modify it under the terms of the &lt;a href=&#34;https://raw.githubusercontent.com/OpenEMS/openems/develop/LICENSE-AGPL-3.0&#34;&gt;GNU Affero General Public License version 3&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/flink-cdc</title>
    <updated>2024-03-06T01:29:19Z</updated>
    <id>tag:github.com,2024-03-06:/apache/flink-cdc</id>
    <link href="https://github.com/apache/flink-cdc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CDC Connectors for Apache Flink®&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CDC Connectors for Apache Flink&lt;sup&gt;®&lt;/sup&gt;&lt;/h1&gt; &#xA;&lt;p&gt;CDC Connectors for Apache Flink&lt;sup&gt;®&lt;/sup&gt; is a set of source connectors for Apache Flink&lt;sup&gt;®&lt;/sup&gt;, ingesting changes from different databases using change data capture (CDC). CDC Connectors for Apache Flink&lt;sup&gt;®&lt;/sup&gt; integrates Debezium as the engine to capture data changes. So it can fully leverage the ability of Debezium. See more about what is &lt;a href=&#34;https://github.com/debezium/debezium&#34;&gt;Debezium&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This README is meant as a brief walkthrough on the core features of CDC Connectors for Apache Flink&lt;sup&gt;®&lt;/sup&gt;. For a fully detailed documentation, please see &lt;a href=&#34;https://ververica.github.io/flink-cdc-connectors/master/&#34;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported (Tested) Databases&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Connector&lt;/th&gt; &#xA;   &lt;th&gt;Database&lt;/th&gt; &#xA;   &lt;th&gt;Driver&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/mongodb-cdc.md&#34;&gt;mongodb-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://www.mongodb.com&#34;&gt;MongoDB&lt;/a&gt;: 3.6, 4.x, 5.0, 6.0&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MongoDB Driver: 4.3.4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/mysql-cdc.md&#34;&gt;mysql-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://dev.mysql.com/doc&#34;&gt;MySQL&lt;/a&gt;: 5.6, 5.7, 8.0.x &lt;/li&gt;&lt;li&gt; &lt;a href=&#34;https://www.aliyun.com/product/rds/mysql&#34;&gt;RDS MySQL&lt;/a&gt;: 5.6, 5.7, 8.0.x &lt;/li&gt;&lt;li&gt; &lt;a href=&#34;https://www.aliyun.com/product/polardb&#34;&gt;PolarDB MySQL&lt;/a&gt;: 5.6, 5.7, 8.0.x &lt;/li&gt;&lt;li&gt; &lt;a href=&#34;https://aws.amazon.com/cn/rds/aurora&#34;&gt;Aurora MySQL&lt;/a&gt;: 5.6, 5.7, 8.0.x &lt;/li&gt;&lt;li&gt; &lt;a href=&#34;https://mariadb.org&#34;&gt;MariaDB&lt;/a&gt;: 10.x &lt;/li&gt;&lt;li&gt; &lt;a href=&#34;https://github.com/ApsaraDB/galaxysql&#34;&gt;PolarDB X&lt;/a&gt;: 2.0.1&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JDBC Driver: 8.0.28&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/oceanbase-cdc.md&#34;&gt;oceanbase-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://open.oceanbase.com&#34;&gt;OceanBase CE&lt;/a&gt;: 3.1.x, 4.x &lt;/li&gt;&lt;li&gt; &lt;a href=&#34;https://www.oceanbase.com/product/oceanbase&#34;&gt;OceanBase EE&lt;/a&gt;: 2.x, 3.x, 4.x&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OceanBase Driver: 2.4.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/oracle-cdc.md&#34;&gt;oracle-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://www.oracle.com/index.html&#34;&gt;Oracle&lt;/a&gt;: 11, 12, 19, 21&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Oracle Driver: 19.3.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/postgres-cdc.md&#34;&gt;postgres-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt;: 9.6, 10, 11, 12, 13, 14&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JDBC Driver: 42.5.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/sqlserver-cdc.md&#34;&gt;sqlserver-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://www.microsoft.com/sql-server&#34;&gt;Sqlserver&lt;/a&gt;: 2012, 2014, 2016, 2017, 2019&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JDBC Driver: 9.4.1.jre8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/tidb-cdc.md&#34;&gt;tidb-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://www.pingcap.com&#34;&gt;TiDB&lt;/a&gt;: 5.1.x, 5.2.x, 5.3.x, 5.4.x, 6.0.0&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JDBC Driver: 8.0.27&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/db2-cdc.md&#34;&gt;Db2-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://www.ibm.com/products/db2&#34;&gt;Db2&lt;/a&gt;: 11.5&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Db2 Driver: 11.5.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/docs/content/connectors/vitess-cdc.md&#34;&gt;Vitess-cdc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;li&gt; &lt;a href=&#34;https://vitess.io/&#34;&gt;Vitess&lt;/a&gt;: 8.0.x, 9.0.x&lt;/li&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MySql JDBC Driver: 8.0.26&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Supports reading database snapshot and continues to read transaction logs with &lt;strong&gt;exactly-once processing&lt;/strong&gt; even failures happen.&lt;/li&gt; &#xA; &lt;li&gt;CDC connectors for DataStream API, users can consume changes on multiple databases and tables in a single job without Debezium and Kafka deployed.&lt;/li&gt; &#xA; &lt;li&gt;CDC connectors for Table/SQL API, users can use SQL DDL to create a CDC source to monitor changes on a single table.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;Usage for CDC Streaming ELT Framework&lt;/h3&gt; &#xA;&lt;p&gt;The example shows how to continuously synchronize data, including snapshot data and incremental data, from multiple business tables in MySQL database to Doris for creating the ODS layer.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download and extract the flink-cdc-3.0.tar file to a local directory.&lt;/li&gt; &#xA; &lt;li&gt;Download the required CDC Pipeline Connector JAR from Maven and place it in the lib directory.&lt;/li&gt; &#xA; &lt;li&gt;Configure the FLINK_HOME environment variable to load the Flink cluster configuration from the flink-conf.yaml file located in the $FLINK_HOME/conf directory.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export FLINK_HOME=/path/to/your/flink/home&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Write Flink CDC task YAML.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;source:&#xA;  type: mysql&#xA;  host: localhost&#xA;  port: 3306&#xA;  username: admin&#xA;  password: pass&#xA;  tables: db0.commodity, db1.user_table_[0-9]+, [app|web]_order_\.*&#xA;&#xA;sink:&#xA;  type: doris&#xA;  fenodes: FE_IP:HTTP_PORT&#xA;  username: admin&#xA;  password: pass&#xA;&#xA;pipeline:&#xA;  name: mysql-sync-doris&#xA;  parallelism: 4&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Submit the job to Flink cluster.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Submit Pipeline&#xA;$ ./bin/flink-cdc.sh mysql-to-doris.yaml&#xA;Pipeline &#34;mysql-sync-doris&#34; is submitted with Job ID &#34;DEADBEEF&#34;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;During the execution of the flink-cdc.sh script, the CDC task configuration is parsed and translated into a DataStream job, which is then submitted to the specified Flink cluster.&lt;/p&gt; &#xA;&lt;h3&gt;Usage for Source Connectors&lt;/h3&gt; &#xA;&lt;h4&gt;Usage for Table/SQL API&lt;/h4&gt; &#xA;&lt;p&gt;We need several steps to setup a Flink cluster with the provided connector.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Setup a Flink cluster with version 1.14+ and Java 8+ installed.&lt;/li&gt; &#xA; &lt;li&gt;Download the connector SQL jars from the &lt;a href=&#34;https://github.com/ververica/flink-cdc-connectors/releases&#34;&gt;Download&lt;/a&gt; page (or &lt;a href=&#34;https://raw.githubusercontent.com/apache/flink-cdc/master/#building-from-source&#34;&gt;build yourself&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Put the downloaded jars under &lt;code&gt;FLINK_HOME/lib/&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Restart the Flink cluster.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The example shows how to create a MySQL CDC source in &lt;a href=&#34;https://nightlies.apache.org/flink/flink-docs-stable/docs/dev/table/sqlclient/&#34;&gt;Flink SQL Client&lt;/a&gt; and execute queries on it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;-- creates a mysql cdc table source&#xA;CREATE TABLE mysql_binlog (&#xA; id INT NOT NULL,&#xA; name STRING,&#xA; description STRING,&#xA; weight DECIMAL(10,3)&#xA;) WITH (&#xA; &#39;connector&#39; = &#39;mysql-cdc&#39;,&#xA; &#39;hostname&#39; = &#39;localhost&#39;,&#xA; &#39;port&#39; = &#39;3306&#39;,&#xA; &#39;username&#39; = &#39;flinkuser&#39;,&#xA; &#39;password&#39; = &#39;flinkpw&#39;,&#xA; &#39;database-name&#39; = &#39;inventory&#39;,&#xA; &#39;table-name&#39; = &#39;products&#39;&#xA;);&#xA;&#xA;-- read snapshot and binlog data from mysql, and do some transformation, and show on the client&#xA;SELECT id, UPPER(name), description, weight FROM mysql_binlog;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Usage for DataStream API&lt;/h4&gt; &#xA;&lt;p&gt;Include following Maven dependency (available through Maven Central):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;com.ververica&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;!-- add the dependency matching your database --&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;flink-connector-mysql-cdc&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;!-- The dependency is available only for stable releases, SNAPSHOT dependencies need to be built based on master or release- branches by yourself. --&amp;gt;&#xA;  &amp;lt;version&amp;gt;2.5-SNAPSHOT&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import org.apache.flink.api.common.eventtime.WatermarkStrategy;&#xA;import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;&#xA;import com.ververica.cdc.debezium.JsonDebeziumDeserializationSchema;&#xA;import com.ververica.cdc.connectors.mysql.source.MySqlSource;&#xA;&#xA;public class MySqlSourceExample {&#xA;  public static void main(String[] args) throws Exception {&#xA;    MySqlSource&amp;lt;String&amp;gt; mySqlSource = MySqlSource.&amp;lt;String&amp;gt;builder()&#xA;            .hostname(&#34;yourHostname&#34;)&#xA;            .port(yourPort)&#xA;            .databaseList(&#34;yourDatabaseName&#34;) // set captured database&#xA;            .tableList(&#34;yourDatabaseName.yourTableName&#34;) // set captured table&#xA;            .username(&#34;yourUsername&#34;)&#xA;            .password(&#34;yourPassword&#34;)&#xA;            .deserializer(new JsonDebeziumDeserializationSchema()) // converts SourceRecord to JSON String&#xA;            .build();&#xA;&#xA;    StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();&#xA;&#xA;    // enable checkpoint&#xA;    env.enableCheckpointing(3000);&#xA;&#xA;    env&#xA;      .fromSource(mySqlSource, WatermarkStrategy.noWatermarks(), &#34;MySQL Source&#34;)&#xA;      // set 4 parallel source tasks&#xA;      .setParallelism(4)&#xA;      .print().setParallelism(1); // use parallelism 1 for sink to keep message ordering&#xA;&#xA;    env.execute(&#34;Print MySQL Snapshot + Binlog&#34;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building from source&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prerequisites: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;git&lt;/li&gt; &#xA;   &lt;li&gt;Maven&lt;/li&gt; &#xA;   &lt;li&gt;At least Java 8&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/ververica/flink-cdc-connectors.git&#xA;cd flink-cdc-connectors&#xA;mvn clean install -DskipTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The dependencies are now available in your local &lt;code&gt;.m2&lt;/code&gt; repository.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code in this repository is licensed under the &lt;a href=&#34;https://github.com/ververica/flink-cdc-connectors/raw/master/LICENSE&#34;&gt;Apache Software License 2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;CDC Connectors for Apache Flink&lt;sup&gt;®&lt;/sup&gt; welcomes anyone that wants to help out in any way, whether that includes reporting problems, helping with documentation, or contributing code changes to fix bugs, add tests, or implement new features. You can report problems to request features in the &lt;a href=&#34;https://github.com/ververica/flink-cdc-connectors/issues&#34;&gt;GitHub Issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Code Contribute&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Left comment under the issue that you want to take&lt;/li&gt; &#xA; &lt;li&gt;Fork Flink CDC project to your GitHub repositories&lt;/li&gt; &#xA; &lt;li&gt;Clone and compile your Flink CDC project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/your_name/flink-cdc-connectors.git&#xA;cd flink-cdc-connectors&#xA;mvn clean install -DskipTests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Check to a new branch and start your work&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout -b my_feature&#xA;-- develop and commit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Push your branch to your github&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push origin my_feature&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;Open a PR to &lt;a href=&#34;https://github.com/ververica/flink-cdc-connectors&#34;&gt;https://github.com/ververica/flink-cdc-connectors&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Code Style&lt;/h3&gt; &#xA;&lt;h4&gt;Code Formatting&lt;/h4&gt; &#xA;&lt;p&gt;You need to install the google-java-format plugin. Spotless together with google-java-format is used to format the codes.&lt;/p&gt; &#xA;&lt;p&gt;It is recommended to automatically format your code by applying the following settings:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &#34;Settings&#34; → &#34;Other Settings&#34; → &#34;google-java-format Settings&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Tick the checkbox to enable the plugin.&lt;/li&gt; &#xA; &lt;li&gt;Change the code style to &#34;Android Open Source Project (AOSP) style&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Go to &#34;Settings&#34; → &#34;Tools&#34; → &#34;Actions on Save&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Under &#34;Formatting Actions&#34;, select &#34;Optimize imports&#34; and &#34;Reformat file&#34;.&lt;/li&gt; &#xA; &lt;li&gt;From the &#34;All file types list&#34; next to &#34;Reformat code&#34;, select &#34;Java&#34;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For earlier IntelliJ IDEA versions, the step 4 to 7 will be changed as follows.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;4.Go to &#34;Settings&#34; → &#34;Other Settings&#34; → &#34;Save Actions&#34;.&lt;/li&gt; &#xA; &lt;li&gt;5.Under &#34;General&#34;, enable your preferred settings for when to format the code, e.g. &#34;Activate save actions on save&#34;.&lt;/li&gt; &#xA; &lt;li&gt;6.Under &#34;Formatting Actions&#34;, select &#34;Optimize imports&#34; and &#34;Reformat file&#34;.&lt;/li&gt; &#xA; &lt;li&gt;7.Under &#34;File Path Inclusions&#34;, add an entry for &lt;code&gt;.*\.java&lt;/code&gt; to avoid formatting other file types. Then the whole project could be formatted by command &lt;code&gt;mvn spotless:apply&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Checkstyle&lt;/h4&gt; &#xA;&lt;p&gt;Checkstyle is used to enforce static coding guidelines.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &#34;Settings&#34; → &#34;Tools&#34; → &#34;Checkstyle&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Set &#34;Scan Scope&#34; to &#34;Only Java sources (including tests)&#34;.&lt;/li&gt; &#xA; &lt;li&gt;For &#34;Checkstyle Version&#34; select &#34;8.14&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Under &#34;Configuration File&#34; click the &#34;+&#34; icon to add a new configuration.&lt;/li&gt; &#xA; &lt;li&gt;Set &#34;Description&#34; to &#34;Flink cdc&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Use a local Checkstyle file&#34; and link it to the file &lt;code&gt;tools/maven/checkstyle.xml&lt;/code&gt; which is located within your cloned repository.&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Store relative to project location&#34; and click &#34;Next&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Configure the property &lt;code&gt;checkstyle.suppressions.file&lt;/code&gt; with the value &lt;code&gt;suppressions.xml&lt;/code&gt; and click &#34;Next&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;Finish&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Select &#34;Flink cdc&#34; as the only active configuration file and click &#34;Apply&#34;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can now import the Checkstyle configuration for the Java code formatter.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to &#34;Settings&#34; → &#34;Editor&#34; → &#34;Code Style&#34; → &#34;Java&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Click the gear icon next to &#34;Scheme&#34; and select &#34;Import Scheme&#34; → &#34;Checkstyle Configuration&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Navigate to and select &lt;code&gt;tools/maven/checkstyle.xml&lt;/code&gt; located within your cloned repository.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Then you could click &#34;View&#34; → &#34;Tool Windows&#34; → &#34;Checkstyle&#34; and find the &#34;Check Module&#34; button in the opened tool window to validate checkstyle. Or you can use the command &lt;code&gt;mvn clean compile checkstyle:checkstyle&lt;/code&gt; to validate.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation Contribute&lt;/h3&gt; &#xA;&lt;p&gt;Flink cdc documentations locates at &lt;code&gt;docs/content&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The contribution step is the same as the code contribution. We use markdown as the source code of the document.&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.dingtalk.com/&#34;&gt;DingTalk&lt;/a&gt; Chinese User Group&lt;/p&gt; &lt;p&gt;You can search the group number [&lt;strong&gt;33121212&lt;/strong&gt;] or scan the following QR code to join in the group.&lt;/p&gt; &#xA;  &lt;div align=&#34;center&#34;&gt; &#xA;   &lt;img src=&#34;https://user-images.githubusercontent.com/5163645/233297896-0195d0ae-eb1c-4604-977b-1d08e424c7e7.png&#34; width=&#34;400&#34;&gt; &#xA;  &lt;/div&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;To get started, please see &lt;a href=&#34;https://ververica.github.io/flink-cdc-connectors/&#34;&gt;https://ververica.github.io/flink-cdc-connectors/&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/tika</title>
    <updated>2024-03-06T01:29:19Z</updated>
    <id>tag:github.com,2024-03-06:/apache/tika</id>
    <link href="https://github.com/apache/tika" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Apache Tika toolkit detects and extracts metadata and text from over a thousand different file types (such as PPT, XLS, and PDF).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Apache Tika &lt;a href=&#34;https://tika.apache.org/&#34;&gt;https://tika.apache.org/&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/apache/tika.svg?maxAge=2592000&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-builds.apache.org/job/Tika/job/tika-main-jdk8/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/s/https/ci-builds.apache.org/job/Tika/job/tika-main-jdk8.svg?maxAge=3600&#34; alt=&#34;Jenkins&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci-builds.apache.org/job/Tika/job/tika-main-jdk8/lastBuild/testReport/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/t/https/ci-builds.apache.org/job/Tika/job/tika-main-jdk8.svg?maxAge=3600&#34; alt=&#34;Jenkins tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.apache.tika%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.apache.tika/tika.svg?maxAge=86400&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apache Tika(TM) is a toolkit for detecting and extracting metadata and structured text content from various documents using existing parser libraries.&lt;/p&gt; &#xA;&lt;p&gt;Tika is a project of the &lt;a href=&#34;https://www.apache.org&#34;&gt;Apache Software Foundation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Apache Tika, Tika, Apache, the Apache feather logo, and the Apache Tika project logo are trademarks of The Apache Software Foundation.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;Pre-built binaries of Apache Tika standalone applications are available from &lt;a href=&#34;https://tika.apache.org/download.html&#34;&gt;https://tika.apache.org/download.html&lt;/a&gt; . Pre-built binaries of all the Tika jars can be fetched from Maven Central or your favourite Maven mirror.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tika 1.X reached End of Life (EOL) on September 30, 2022.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tika is based on &lt;strong&gt;Java 11&lt;/strong&gt; and uses the &lt;a href=&#34;https://maven.apache.org&#34;&gt;Maven 3&lt;/a&gt; build system. &lt;strong&gt;N.B.&lt;/strong&gt; &lt;a href=&#34;https://www.docker.com/products/personal&#34;&gt;Docker&lt;/a&gt; is used for tests in tika-integration-tests. As of Tika 2.5.1, if Docker is not installed, those tests are skipped. Docker is required for a successful build on earlier 2.x versions.&lt;/p&gt; &#xA;&lt;p&gt;To build Tika from source, use the following command in the main directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The build consists of a number of components, including a standalone runnable jar that you can use to try out Tika features. You can run it like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java -jar tika-app/target/tika-app-*.jar --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build a specific project (for example, tika-server-standard):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn clean install -am -pl :tika-server-standard&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the ossindex-maven-plugin is causing the build to fail because a dependency has now been discovered to have a vulnerability:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn clean install -Dossindex.skip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Maven Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;Apache Tika provides &lt;em&gt;Bill of Material&lt;/em&gt; (BOM) artifact to align Tika module versions and simplify version management. To avoid convergence errors in your own project, import this bom or Tika&#39;s parent pom.xml in your dependency management section.&lt;/p&gt; &#xA;&lt;p&gt;If you use Apache Maven:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;project&amp;gt;&#xA;  &amp;lt;dependencyManagement&amp;gt;&#xA;    &amp;lt;dependencies&amp;gt;&#xA;      &amp;lt;dependency&amp;gt;&#xA;       &amp;lt;groupId&amp;gt;org.apache.tika&amp;lt;/groupId&amp;gt;&#xA;       &amp;lt;artifactId&amp;gt;tika-bom&amp;lt;/artifactId&amp;gt;&#xA;       &amp;lt;version&amp;gt;2.x.y&amp;lt;/version&amp;gt;&#xA;       &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xA;       &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xA;      &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;/dependencies&amp;gt;&#xA;  &amp;lt;/dependencyManagement&amp;gt;&#xA;&#xA;  &amp;lt;dependencies&amp;gt;&#xA;    &amp;lt;dependency&amp;gt;&#xA;      &amp;lt;groupId&amp;gt;org.apache.tika&amp;lt;/groupId&amp;gt;&#xA;      &amp;lt;artifactId&amp;gt;tika-parsers-standard-package&amp;lt;/artifactId&amp;gt;&#xA;      &amp;lt;!-- version not required since BOM included --&amp;gt;&#xA;    &amp;lt;/dependency&amp;gt;&#xA;  &amp;lt;/dependencies&amp;gt;&#xA;&amp;lt;/project&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Gradle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies {&#xA;  implementation(platform(&#34;org.apache.tika:tika-bom:2.x.y&#34;))&#xA;&#xA;  // version not required since bom (platform in Gradle terms)&#xA;  implementation(&#34;org.apache.tika:tika-parsers-standard-package&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Migrating to 2.x&lt;/h1&gt; &#xA;&lt;p&gt;The initial 2.x release notes are available in the &lt;a href=&#34;https://archive.apache.org/dist/tika/2.0.0/CHANGES-2.0.0.txt&#34;&gt;archives&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://cwiki.apache.org/confluence/display/TIKA/Migrating+to+Tika+2.0.0&#34;&gt;wiki&lt;/a&gt; for the latest.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing via Github&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/apache/tika/raw/main/.github/pull_request_template.md&#34;&gt;pull request template&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Please open pull requests against the &lt;code&gt;main&lt;/code&gt; branch. We locked &lt;code&gt;master&lt;/code&gt; in September 2020 and no longer use it.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks to all the people who have contributed&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/tika/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contributors-img.web.app/image?repo=apache/tika&#34; alt=&#34;contributors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building from a Specific Tag&lt;/h1&gt; &#xA;&lt;p&gt;Let&#39;s assume that you want to build the 2.5.0 tag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;0. Download and install hub.github.com&#xA;1. git clone https://github.com/apache/tika.git &#xA;2. cd tika&#xA;3. git checkout 2.5.0&#xA;4. mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a new vulnerability has been discovered between the date of the tag and the date you are building the tag, you may need to build with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;4. mvn clean install -Dossindex.skip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If a local test is not working in your environment, please notify the project at &lt;a href=&#34;mailto:dev@tika.apache.org&#34;&gt;dev@tika.apache.org&lt;/a&gt;. As an immediate workaround, you can turn off individual tests with e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;4. mvn clean install -Dossindex.skip -Dtest=\!UnpackerResourceTest#testPDFImages&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License (see also LICENSE.txt)&lt;/h1&gt; &#xA;&lt;p&gt;Collective work: Copyright 2011 The Apache Software Foundation.&lt;/p&gt; &#xA;&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;p&gt;Apache Tika includes a number of subcomponents with separate copyright notices and license terms. Your use of these subcomponents is subject to the terms and conditions of the licenses listed in the LICENSE.txt file.&lt;/p&gt; &#xA;&lt;h1&gt;Export Control&lt;/h1&gt; &#xA;&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country&#39;s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&#34;http://www.wassenaar.org/&#34;&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this Apache Software Foundation distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; &#xA;&lt;p&gt;The following provides more details on the included cryptographic software:&lt;/p&gt; &#xA;&lt;p&gt;Apache Tika uses the Bouncy Castle generic encryption libraries for extracting text content and metadata from encrypted PDF files. See &lt;a href=&#34;http://www.bouncycastle.org/&#34;&gt;http://www.bouncycastle.org/&lt;/a&gt; for more details on Bouncy Castle.&lt;/p&gt; &#xA;&lt;h1&gt;Mailing Lists&lt;/h1&gt; &#xA;&lt;p&gt;Discussion about Tika takes place on the following mailing lists:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:user@tika.apache.org&#34;&gt;user@tika.apache.org&lt;/a&gt; - About using Tika&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:dev@tika.apache.org&#34;&gt;dev@tika.apache.org&lt;/a&gt; - About developing Tika&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Notification on all code changes are sent to the following mailing list:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:commits@tika.apache.org&#34;&gt;commits@tika.apache.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The mailing lists are open to anyone and publicly archived.&lt;/p&gt; &#xA;&lt;p&gt;You can subscribe the mailing lists by sending a message to [LIST]&lt;a href=&#34;mailto:-subscribe@tika.apache.org&#34;&gt;-subscribe@tika.apache.org&lt;/a&gt; (for example, user-subscribe@...).&lt;br&gt; To unsubscribe, send a message to [LIST]&lt;a href=&#34;mailto:-unsubscribe@tika.apache.org&#34;&gt;-unsubscribe@tika.apache.org&lt;/a&gt;.&lt;br&gt; For more instructions, send a message to [LIST]&lt;a href=&#34;mailto:-help@tika.apache.org&#34;&gt;-help@tika.apache.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Issue Tracker&lt;/h1&gt; &#xA;&lt;p&gt;If you encounter errors in Tika or want to suggest an improvement or a new feature, please visit the &lt;a href=&#34;https://issues.apache.org/jira/browse/TIKA&#34;&gt;Tika issue tracker&lt;/a&gt;. There you can also find the latest information on known issues and recent bug fixes and enhancements.&lt;/p&gt; &#xA;&lt;h1&gt;Build Issues&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;TODO&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Need to install jce&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you find any other issues while building, please email the &lt;a href=&#34;mailto:dev@tika.apache.org&#34;&gt;dev@tika.apache.org&lt;/a&gt; list.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>