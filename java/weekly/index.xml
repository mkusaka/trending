<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-12T02:00:04Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Blankj/AndroidUtilCode</title>
    <updated>2022-06-12T02:00:04Z</updated>
    <id>tag:github.com,2022-06-12:/Blankj/AndroidUtilCode</id>
    <link href="https://github.com/Blankj/AndroidUtilCode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üî• Android developers should collect the following utils(updating).&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Blankj/AndroidUtilCode/master/art/logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Blankj/AucFrameTemplate&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Blankj/AndroidUtilCode/master/art/auc_frame.png&#34; alt=&#34;frame&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode&#34;&gt;&lt;img src=&#34;https://github.com/Blankj/AndroidUtilCode/workflows/Android%20CI/badge.svg?branch=master&#34; alt=&#34;auc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/result?level=14&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API-14+-brightgreen.svg?sanitize=true&#34; alt=&#34;result&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/Blankj/AndroidUtilCode&#34;&gt;&lt;img src=&#34;https://travis-ci.org/Blankj/AndroidUtilCode.svg?branch=master&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache--2.0-brightgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/README-CN.md&#34;&gt;README of Chinese&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode&#34;&gt;AndroidUtilCode&lt;/a&gt;&lt;/strong&gt; &lt;span&gt;üî•&lt;/span&gt; is a powerful &amp;amp; easy to use library for Android. This library encapsulates the functions that commonly used in Android development which have complete demo and unit test. By using it&#39;s encapsulated APIs, you can greatly improve the development efficiency. The program mainly consists of two modules which is &lt;strong&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/lib/utilcode/README-CN.md&#34;&gt;utilcode&lt;/a&gt;&lt;/strong&gt;, which is commonly used in development, and &lt;strong&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/lib/subutil/README-CN.md&#34;&gt;subutil&lt;/a&gt;&lt;/strong&gt; which is rarely used in development, but the utils can be beneficial to simplify the main module. &lt;span&gt;üî•&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;utilcode&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/lib/utilcode/README.md&#34;&gt;README of English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/lib/utilcode/README-CN.md&#34;&gt;README of Chinese&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;subutil&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/lib/subutil/README.md&#34;&gt;README of English&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/lib/subutil/README-CN.md&#34;&gt;README of Chinese&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;If this project helps you a lot and you want to support the project&#39;s development and maintenance of this project, feel free to scan the following QR code for donation. Your donation is highly appreciated. Thank you!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Blankj/AndroidUtilCode/master/art/donate.png&#34; alt=&#34;donate&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://blankj.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Blog-@Blankj-34a48e.svg?sanitize=true&#34; alt=&#34;Blog&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.jianshu.com/u/46702d5c6978&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E7%AE%80%E4%B9%A6-@Blankj-34a48e.svg?sanitize=true&#34; alt=&#34;jianshu&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://weibo.com/3076228982&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/weibo-@__Blankj-34a48e.svg?sanitize=true&#34; alt=&#34;weibo&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://shang.qq.com/wpa/qunwpa?idkey=d906789f84484465e2736f7b524366b4c23afeda38733d5c7b10fc3f6e406e9b&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QQ%E7%BE%A4-25206533-34a48e.svg?sanitize=true&#34; alt=&#34;QQGroup&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/Blankj/AndroidUtilCode/raw/master/CHANGELOG.md&#34;&gt;Change Log&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;Êâì‰∏™Â∞èÂπøÂëä&lt;/h2&gt; &#xA;&lt;p&gt;Ê¨¢ËøéÂä†ÂÖ•ÊàëÁöÑÂ∞è‰∏ìÊ†è„Äå&lt;strong&gt;&lt;a href=&#34;https://xiaozhuanlan.com/Blankj&#34;&gt;Âü∫‰Ω†Â§™Áæé&lt;/a&gt;&lt;/strong&gt;„Äç‰∏ÄËµ∑Â≠¶‰π†„ÄÇ&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android-hacker/VirtualXposed</title>
    <updated>2022-06-12T02:00:04Z</updated>
    <id>tag:github.com,2022-06-12:/android-hacker/VirtualXposed</id>
    <link href="https://github.com/android-hacker/VirtualXposed" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple app to use Xposed without root, unlock the bootloader or modify system image, etc.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/android-hacker/VirtualXposed&#34;&gt;&lt;img src=&#34;https://travis-ci.org/android-hacker/VirtualXposed.svg?branch=exposed&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android-hacker/VirtualXposed/vxp/CHINESE.md&#34; title=&#34;‰∏≠Êñá&#34;&gt;‰∏≠ÊñáÊñáÊ°£&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;VirtualXposed&lt;/strong&gt; is a simple App based on &lt;a href=&#34;https://github.com/asLody/VirtualApp&#34;&gt;VirtualApp&lt;/a&gt; and &lt;a href=&#34;https://github.com/tiann/epic&#34;&gt;epic&lt;/a&gt; that allows you to use an Xposed Module without needing to root, unlock the bootloader, or flash a custom system image. (Supports Android 5.0~10.0)&lt;/p&gt; &#xA;&lt;p&gt;The only two restriction of VirtualXposed are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Unable to modify system, so any Module which modifies system won&#39;t be able to work properly.&lt;/li&gt; &#xA; &lt;li&gt;Currently resource hooks are not supported. (Theming modules use Resource Hooks).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Warning&lt;/h2&gt; &#xA;&lt;p&gt;Usage for Commercial Purposes are not allowed!!! Please refer to VirtualApp&#39;s &lt;a href=&#34;https://github.com/asLody/VirtualApp&#34;&gt;declaration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Preparation&lt;/h3&gt; &#xA;&lt;p&gt;Download the latest APK from the &lt;a href=&#34;https://github.com/android-hacker/VirtualXposed/releases&#34;&gt;release page&lt;/a&gt;, and install it on your Android device.&lt;/p&gt; &#xA;&lt;h3&gt;Install APP and Xposed Module&lt;/h3&gt; &#xA;&lt;p&gt;Open VirtualXposed, Click on the &lt;strong&gt;Drawer Button&lt;/strong&gt; at the bottom of home page(Or long click the screen), add your desired APP and Xposed Module to VirtualXposed&#39;s virtual environment.&lt;/p&gt; &#xA;&lt;p&gt;Note: &lt;strong&gt;All operationsÔºàinstallation of Xposed Module, APPÔºâmust be done in VirtualXposed&lt;/strong&gt;, otherwise the Xposed Module installed won&#39;t take effect. For example, if you install the YouTube app on your system (Your phone&#39;s original system, not in VirtualXposed), and then install YouTube AdAway (A YouTube Xposed Module) in VirtualXposed; or you install YouTube in VirtualXposed, and install YouTube AdAway on original system; or both of them are installed on original system, &lt;strong&gt;neither of these three cases will work!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tiann/arts/master/vxp_install.gif&#34; alt=&#34;How to install&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are three ways to install an APP or Xposed Module to VirtualXposed:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone an installed app from your original system.&lt;/strong&gt; (Click Button at bottom of home page, then click Add App, the first page shows a list of installed apps.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install via an APK file.&lt;/strong&gt; (Click Button at bottom of home page, then click Add App, the second page shows APKs found in your sdcard)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Install via an external file chooser.&lt;/strong&gt; (Click Button at bottom of home page, then click Add App, use the floating action button to choose an APK file to install)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For Xposed Module, You can install it from Xposed Installer, too.&lt;/p&gt; &#xA;&lt;h3&gt;Activate the Xposed Module&lt;/h3&gt; &#xA;&lt;p&gt;Open Xposed Installer in VirtualXposed, go to the module fragment, check the module you want to use:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tiann/arts/master/vxp_activate.gif&#34; alt=&#34;How to activate module&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Reboot&lt;/h3&gt; &#xA;&lt;p&gt;You only need to reboot VirtualXposed, &lt;strong&gt;There&#39;s no need to reboot your phone&lt;/strong&gt;; Just click Settings in home page of VirtualXposed, click &lt;code&gt;Reboot&lt;/code&gt; button, and VirtualXposed will reboot in a blink.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tiann/arts/master/vxp_reboot.gif&#34; alt=&#34;How to reboot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported Modules&lt;/h2&gt; &#xA;&lt;p&gt;Almost all modules except system-relevant are supported, please try it by yourself :)&lt;/p&gt; &#xA;&lt;h2&gt;Others&lt;/h2&gt; &#xA;&lt;h3&gt;GameGuardian&lt;/h3&gt; &#xA;&lt;p&gt;VirtualXposed also supports GameGuardian, &lt;strong&gt;you should use the separate version for GameGuardian&lt;/strong&gt;.(Download it in release page).&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gameguardian.net/forum/gallery/image/437-no-root-via-virtualxposed-without-error-105-gameguardian/&#34;&gt;Video Tutorial&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;VirusTotal&lt;/h3&gt; &#xA;&lt;p&gt;VirusTotal might report VirtualXposed as a malware, it is stupid, you can refer to my &lt;a href=&#34;https://github.com/android-hacker/VirtualXposed/issues/10&#34;&gt;explanation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;And obviously, VirtualXposed is open source, so you can refer to the source code. I am sure that it is safe to use.&lt;/p&gt; &#xA;&lt;p&gt;If you still couldn&#39;t believe in me, you can install version &lt;a href=&#34;https://github.com/android-hacker/VirtualXposed/releases/tag/0.8.7&#34;&gt;0.8.7&lt;/a&gt;; VirusTotal reports this version as safe.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to VirtualXposed are always welcomed!!&lt;/p&gt; &#xA;&lt;h2&gt;For Developers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/android-hacker/exposed/issues&#34;&gt;File a bug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/android-hacker/VirtualXposed/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/vxp_devs&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/asLody/VirtualApp&#34;&gt;VirtualApp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rovo89/Xposed&#34;&gt;Xposed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rprop/And64InlineHook&#34;&gt;And64InlineHook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>confluentinc/ksql</title>
    <updated>2022-06-12T02:00:04Z</updated>
    <id>tag:github.com,2022-06-12:/confluentinc/ksql</id>
    <link href="https://github.com/confluentinc/ksql" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The database purpose-built for stream processing applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/confluentinc/ksql/master/ksql-rocket.png&#34; alt=&#34;KSQL rocket&#34;&gt; ksqlDB&lt;/h1&gt; &#xA;&lt;h3&gt;The database purpose-built for stream processing applications&lt;/h3&gt; &#xA;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;ksqlDB is a database for building stream processing applications on top of Apache Kafka. It is &lt;strong&gt;distributed&lt;/strong&gt;, &lt;strong&gt;scalable&lt;/strong&gt;, &lt;strong&gt;reliable&lt;/strong&gt;, and &lt;strong&gt;real-time&lt;/strong&gt;. ksqlDB combines the power of real-time stream processing with the approachable feel of a relational database through a familiar, lightweight SQL syntax. ksqlDB offers these core primitives:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ksqldb.io/en/latest/concepts/collections/streams/&#34;&gt;Streams&lt;/a&gt; and &lt;a href=&#34;https://docs.ksqldb.io/en/latest/concepts/collections/tables/&#34;&gt;tables&lt;/a&gt;&lt;/strong&gt; - Create relations with schemas over your Apache Kafka topic data&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ksqldb.io/en/latest/concepts/materialized-views/&#34;&gt;Materialized views&lt;/a&gt;&lt;/strong&gt; - Define real-time, incrementally updated materialized views over streams using SQL&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ksqldb.io/en/latest/concepts/queries/push/&#34;&gt;Push queries&lt;/a&gt;&lt;/strong&gt;- Continuous queries that push incremental results to clients in real time&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ksqldb.io/en/latest/concepts/queries/pull/&#34;&gt;Pull queries&lt;/a&gt;&lt;/strong&gt; - Query materialized views on demand, much like with a traditional database&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://docs.ksqldb.io/en/latest/concepts/connectors&#34;&gt;Connect&lt;/a&gt;&lt;/strong&gt; - Integrate with any &lt;a href=&#34;https://docs.confluent.io/current/connect/index.html&#34;&gt;Kafka Connect&lt;/a&gt; data source or sink, entirely from within ksqlDB&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Composing these powerful primitives enables you to build a complete streaming app with just SQL statements, minimizing complexity and operational overhead. ksqlDB supports a wide range of operations including aggregations, joins, windowing, sessionization, and much more. You can find more ksqlDB tutorials and resources &lt;a href=&#34;https://developer.confluent.io/tutorials/use-cases.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://ksqldb.io/quickstart.html&#34;&gt;ksqlDB quickstart&lt;/a&gt; to get started in just a few minutes.&lt;/li&gt; &#xA; &lt;li&gt;Read through the &lt;a href=&#34;https://docs.ksqldb.io&#34;&gt;ksqlDB documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Take a look at some &lt;a href=&#34;https://developer.confluent.io/tutorials/use-cases.html&#34;&gt;ksqlDB use case recipes&lt;/a&gt; for examples of common patterns.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://docs.ksqldb.io/&#34;&gt;ksqlDB documentation&lt;/a&gt; for the latest stable release.&lt;/p&gt; &#xA;&lt;h1&gt;Use Cases and Examples&lt;/h1&gt; &#xA;&lt;h2&gt;Materialized views&lt;/h2&gt; &#xA;&lt;p&gt;ksqlDB allows you to define materialized views over your streams and tables. Materialized views are defined by what is known as a &#34;persistent query&#34;. These queries are known as persistent because they maintain their incrementally updated results using a table.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE TABLE hourly_metrics AS&#xA;  SELECT url, COUNT(*)&#xA;  FROM page_views&#xA;  WINDOW TUMBLING (SIZE 1 HOUR)&#xA;  GROUP BY url EMIT CHANGES;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Results may be &lt;strong&gt;&#34;pulled&#34;&lt;/strong&gt; from materialized views on demand via &lt;code&gt;SELECT&lt;/code&gt; queries. The following query will return a single row:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM hourly_metrics&#xA;  WHERE url = &#39;http://myurl.com&#39; AND WINDOWSTART = &#39;2019-11-20T19:00&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Results may also be continuously &lt;strong&gt;&#34;pushed&#34;&lt;/strong&gt; to clients via streaming &lt;code&gt;SELECT&lt;/code&gt; queries. The following streaming query will push to the client all incremental changes made to the materialized view:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT * FROM hourly_metrics EMIT CHANGES;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Streaming queries will run perpetually until they are explicitly terminated.&lt;/p&gt; &#xA;&lt;h2&gt;Streaming ETL&lt;/h2&gt; &#xA;&lt;p&gt;Apache Kafka is a popular choice for powering data pipelines. ksqlDB makes it simple to transform data within the pipeline, readying messages to cleanly land in another system.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE STREAM vip_actions AS&#xA;  SELECT userid, page, action&#xA;  FROM clickstream c&#xA;  LEFT JOIN users u ON c.userid = u.user_id&#xA;  WHERE u.level = &#39;Platinum&#39; EMIT CHANGES;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Anomaly Detection&lt;/h2&gt; &#xA;&lt;p&gt;ksqlDB is a good fit for identifying patterns or anomalies on real-time data. By processing the stream as data arrives you can identify and properly surface out of the ordinary events with millisecond latency.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE TABLE possible_fraud AS&#xA;  SELECT card_number, count(*)&#xA;  FROM authorization_attempts&#xA;  WINDOW TUMBLING (SIZE 5 SECONDS)&#xA;  GROUP BY card_number&#xA;  HAVING count(*) &amp;gt; 3 EMIT CHANGES;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Monitoring&lt;/h2&gt; &#xA;&lt;p&gt;Kafka&#39;s ability to provide scalable ordered records with stream processing make it a common solution for log data monitoring and alerting. ksqlDB lends a familiar syntax for tracking, understanding, and managing alerts.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE TABLE error_counts AS&#xA;  SELECT error_code, count(*)&#xA;  FROM monitoring_stream&#xA;  WINDOW TUMBLING (SIZE 1 MINUTE)&#xA;  WHERE  type = &#39;ERROR&#39;&#xA;  GROUP BY error_code EMIT CHANGES;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Integration with External Data Sources and Sinks&lt;/h2&gt; &#xA;&lt;p&gt;ksqlDB includes native integration with &lt;a href=&#34;https://docs.ksqldb.io/en/latest/concepts/connectors&#34;&gt;Kafka Connect&lt;/a&gt; data sources and sinks, effectively providing a unified SQL interface over a &lt;a href=&#34;https://www.confluent.io/hub&#34;&gt;broad variety of external systems&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following query is a simple persistent streaming query that will produce all of its output into a topic named &lt;code&gt;clicks_transformed&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE STREAM clicks_transformed AS&#xA;  SELECT userid, page, action&#xA;  FROM clickstream c&#xA;  LEFT JOIN users u ON c.userid = u.user_id EMIT CHANGES;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Rather than simply send all continuous query output into a Kafka topic, it is often very useful to route the output into another datastore. ksqlDB&#39;s Kafka Connect integration makes this pattern very easy.&lt;/p&gt; &#xA;&lt;p&gt;The following statement will create a Kafka Connect sink connector that continuously sends all output from the above streaming ETL query directly into Elasticsearch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt; CREATE SINK CONNECTOR es_sink WITH (&#xA;  &#39;connector.class&#39; = &#39;io.confluent.connect.elasticsearch.ElasticsearchSinkConnector&#39;,&#xA;  &#39;key.converter&#39;   = &#39;org.apache.kafka.connect.storage.StringConverter&#39;,&#xA;  &#39;topics&#39;          = &#39;clicks_transformed&#39;,&#xA;  &#39;key.ignore&#39;      = &#39;true&#39;,&#xA;  &#39;schema.ignore&#39;   = &#39;true&#39;,&#xA;  &#39;type.name&#39;       = &#39;&#39;,&#xA;  &#39;connection.url&#39;  = &#39;http://elasticsearch:9200&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;community&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Join the Community&lt;/h1&gt; &#xA;&lt;p&gt;For user help, questions or queries about ksqlDB please use our &lt;a href=&#34;https://groups.google.com/forum/#!forum/ksql-users&#34;&gt;user Google Group&lt;/a&gt; or our public Slack channel #ksqldb in &lt;a href=&#34;https://slackpass.io/confluentcommunity&#34;&gt;Confluent Community Slack&lt;/a&gt;. Everyone is welcome!&lt;/p&gt; &#xA;&lt;p&gt;You can get help, learn how to contribute to ksqlDB, and find the latest news by &lt;a href=&#34;https://www.confluent.io/contact-us-thank-you/&#34;&gt;connecting with the Confluent community&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For more general questions about the Confluent Platform please post in the &lt;a href=&#34;https://groups.google.com/forum/#!forum/confluent-platform&#34;&gt;Confluent Google group&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing and building from source&lt;/h1&gt; &#xA;&lt;p&gt;Contributions to the code, examples, documentation, etc. are very much appreciated.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Report issues and bugs directly in &lt;a href=&#34;https://github.com/confluentinc/ksql/issues&#34;&gt;this GitHub project&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Learn how to work with the ksqlDB source code, including building and testing ksqlDB as well as contributing code changes to ksqlDB by reading our &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/ksql/master/CONTRIBUTING.md&#34;&gt;Development and Contribution guidelines&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;One good way to get started is by tackling a &lt;a href=&#34;https://github.com/confluentinc/ksql/labels/good%20first%20issue&#34;&gt;newbie issue&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The project is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/confluentinc/ksql/master/LICENSE&#34;&gt;Confluent Community License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Apache, Apache Kafka, Kafka, and associated open source project names are trademarks of the &lt;a href=&#34;https://www.apache.org/&#34;&gt;Apache Software Foundation&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>