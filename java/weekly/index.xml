<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-09T01:42:05Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Catfriend1/syncthing-android</title>
    <updated>2025-02-09T01:42:05Z</updated>
    <id>tag:github.com,2025-02-09:/Catfriend1/syncthing-android</id>
    <link href="https://github.com/Catfriend1/syncthing-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Syncthing-Fork - A Syncthing Wrapper for Android.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Syncthing-Fork - A Syncthing Wrapper for Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MPL-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MPLv2-blue.svg?sanitize=true&#34; alt=&#34;License: MPLv2&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Catfriend1/syncthing-android/releases&#34; alt=&#34;GitHub release&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/Catfriend1/syncthing-android/all.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.github.catfriend1.syncthingandroid&#34; alt=&#34;F-Droid release&#34;&gt;&lt;img src=&#34;https://img.shields.io/f-droid/v/com.github.catfriend1.syncthingandroid.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://tooomm.github.io/github-release-stats/?username=Catfriend1&amp;amp;repository=syncthing-android&#34; alt=&#34;GitHub Stats&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Catfriend1/syncthing-android/total.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/projects/syncthing/android/catfriend1/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widget/syncthing/android/catfriend1/svg-badge.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A wrapper of &lt;a href=&#34;https://github.com/syncthing/syncthing&#34;&gt;Syncthing&lt;/a&gt; for Android. Head to the &#34;releases&#34; section or F-Droid for builds. Please open an issue under this fork if you need help. Important: Please don&#39;t file bugs at the upstream repository &#34;syncthing-android&#34; if you are using this fork.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Catfriend1/syncthing-android/main/app/src/main/play/listings/en-US/graphics/phone-screenshots/1.png&#34; alt=&#34;screenshot 1&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Catfriend1/syncthing-android/main/app/src/main/play/listings/en-US/graphics/phone-screenshots/2.png&#34; alt=&#34;screenshot 2&#34; width=&#34;200&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Catfriend1/syncthing-android/main/app/src/main/play/listings/en-US/graphics/phone-screenshots/4.png&#34; alt=&#34;screenshot 3&#34; width=&#34;200&#34;&gt; &#xA;&lt;h2&gt;I am no longer publishing this on Google Play&lt;/h2&gt; &#xA;&lt;p&gt;&#34;nel0x&#34; has announced to continue publishing on the play store. I welcome his help and the work I think he&#39;ll put into his mission. It&#39;s up to you, reading this, to decide if to trust and/or support him or go with the F-Droid release channel of this app instead. You don&#39;t know me and I don&#39;t know him... we are all volunteers in the spirit of open source.&lt;/p&gt; &#xA;&lt;h2&gt;Major enhancements in this fork are&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Folder, device and overall sync progress can easily be read off the UI.&lt;/li&gt; &#xA; &lt;li&gt;&#34;Syncthing Camera&#34; - an optional feature (with optional permission to use the camera) where you can take pictures with your friend, partner, ... on two phones into one shared and private Syncthing folder. No cloud involved. (deprecated)&lt;/li&gt; &#xA; &lt;li&gt;&#34;Sync every hour&#34; to save even more battery&lt;/li&gt; &#xA; &lt;li&gt;Individual sync conditions can be applied per device and per folder (for expert users).&lt;/li&gt; &#xA; &lt;li&gt;Recent changes UI, click to open files.&lt;/li&gt; &#xA; &lt;li&gt;Changes to folder and device config can be made regardless if syncthing is running or not.&lt;/li&gt; &#xA; &lt;li&gt;UI explains why syncthing is running or not.&lt;/li&gt; &#xA; &lt;li&gt;&#34;Battery eater&#34; problem is fixed.&lt;/li&gt; &#xA; &lt;li&gt;Discover other Syncthing devices on the same network and easily add them.&lt;/li&gt; &#xA; &lt;li&gt;Supports two-way synchronization on external sd cards since Android 11.&lt;/li&gt; &#xA; &lt;li&gt;Supports encrypted folders on untrusted devices.&lt;/li&gt; &#xA; &lt;li&gt;Partial Android 15+ support regarding the run condition monitor due to Android restrictions. Feel free to PR and help here :-).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Switching from the (now deprecated) official version&lt;/h2&gt; &#xA;&lt;p&gt;Switching is easier than you may think!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;On Syncthing on the official app, go into the settings and create a backup.&lt;/li&gt; &#xA; &lt;li&gt;Confirm you can see that backup in your files.&lt;/li&gt; &#xA; &lt;li&gt;Now stop the official app entirely using the system app settings for Syncthing (force stop the app basically - we need to ensure it&#39;s not running).&lt;/li&gt; &#xA; &lt;li&gt;Now start Syncthing-Fork.&lt;/li&gt; &#xA; &lt;li&gt;In the Syncthing-Fork settings, restore the backup you created earlier.&lt;/li&gt; &#xA; &lt;li&gt;Like magic, everything should be as it was in Syncthing official.&lt;/li&gt; &#xA; &lt;li&gt;Confirm everything looks good.&lt;/li&gt; &#xA; &lt;li&gt;Uninstall the official Syncthing app.&lt;/li&gt; &#xA; &lt;li&gt;Delete the syncthing configuration backup from &lt;code&gt;backups/syncthing&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;See our document on privacy: &lt;a href=&#34;https://github.com/Catfriend1/syncthing-android/raw/main/privacy-policy.md&#34;&gt;privacy-policy.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Goal of the forked version&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Develop and try out enhancements together&lt;/li&gt; &#xA; &lt;li&gt;Release the wrapper more frequently to identify and fix bugs together caused by changes in the syncthing submodule&lt;/li&gt; &#xA; &lt;li&gt;Make enhancements configurable in the settings UI, e.g. users should be able to turn them on and off&lt;/li&gt; &#xA; &lt;li&gt;Let&#39;s get ready for newer Android versions that put limits on background syncing tools. We need your bug reports as detailed as possible&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;If you miss any prerequisite, the shell scripts will abort with an error and tell you what you need to do. In case you like to dive into building directly, you can skip this section and jump directly to &#34;Build instructions&#34;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android SDK&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# This command will help you install the minimum Android SDK components to build this project in case you don&#39;t use Android Studio.&#xA;python install_minimum_android_sdk_prerequisites.py&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android NDK r26b&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;$ANDROID_NDK_HOME environment variable should point at the root directory of your NDK. If the variable is not set, build-syncthing.py will automatically try to download and setup the NDK.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Go 1.21.4&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;Make sure, Go is installed and available on the PATH environment variable. If Go is not found on the PATH environment variable, build-syncthing.py will automatically try to download and setup GO on the PATH.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3.9.6 64-Bit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;Make sure, Python is installed and available on the PATH environment variable. Download &#39;https://www.python.org/ftp/python/3.9.6/python-3.9.6-amd64.exe&#39; and run &#39;python-3.9.6-amd64.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Git (for Linux) or Git for Windows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;Make sure, git (or git.exe) is installed and available on the PATH environment variable. If Git is not found on the PATH environment variable, build-syncthing.py will automatically try to download and setup MinGit 2.19.0-x64 on the PATH.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java Development Version 17&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-log&#34;&gt;&#34;java&#34; should be on the PATH environment variable. Download from Oracle and run the installer. Log off and back on to let the new PATH variable take effect.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build instructions&lt;/h3&gt; &#xA;&lt;p&gt;Edit &#34;App_build_and_release.cmd&#34; and set &#34;SKIP_RELEASE_BUILD=1&#34; if you don&#39;t need to upload signed releases to Google Play. This will simplify things for you.&lt;/p&gt; &#xA;&lt;h4&gt;Build on Linux&lt;/h4&gt; &#xA;&lt;p&gt;A Linux VM, for example running Debian, is recommended to build this.&lt;/p&gt; &#xA;&lt;p&gt;Build SyncthingNative and the Syncthing-Android wrapper using the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get -y install git openjdk-17-jdk python&#xA;mkdir -p /root/work&#xA;cd /root/work&#xA;git clone https://github.com/Catfriend1/syncthing-android.git --recursive&#xA;cd /root/work/syncthing-android&#xA;./gradlew buildNative&#xA;./gradlew lint assembleDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also use Android Studio to build the apk after you manually ran the &lt;code&gt;./gradlew buildNative&lt;/code&gt; command in the repository root.&lt;/p&gt; &#xA;&lt;p&gt;To clean up all files generated during build, use the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew cleanNative&#xA;./gradlew clean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Build on Windows&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Catfriend1/syncthing-android.git --recursive&#xA;cd /d &#34;YOUR_CLONED_GIT_ROOT&#34;&#xA;SyncthingNative_update_and_build&#xA;App_build_and_release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development Notes&lt;/h2&gt; &#xA;&lt;p&gt;It is recommended to change the GUI and Listen Address ports for the debug app, e.g. to &lt;code&gt;8385&lt;/code&gt; and &lt;code&gt;22001&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;p&gt;The Syncthing native used for this android application provides a web interface by default. It can be accessed via the Settings menu -&amp;gt; &#39;Web GUI&#39;. It is quite helpful to access this web interface from your development machine. Read&amp;nbsp;android documentation&amp;nbsp;on how to access the network of your emulator. Or use the following command to connect to the single currently running emulator/AVD.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;adb forward tcp:18384 tcp:8384&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Start Syncthing app on your emulator and access the web interface from you favorite browser of your development machine via&amp;nbsp;&lt;a href=&#34;https://127.0.0.1:18384&#34;&gt;&lt;code&gt;127.0.0.1:18384&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/Catfriend1/syncthing-android/main/LICENSE&#34;&gt;MPLv2&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>TeamNewPipe/NewPipeExtractor</title>
    <updated>2025-02-09T01:42:05Z</updated>
    <id>tag:github.com,2025-02-09:/TeamNewPipe/NewPipeExtractor</id>
    <link href="https://github.com/TeamNewPipe/NewPipeExtractor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NewPipe&#39;s core library for extracting data from streaming sites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NewPipe Extractor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TeamNewPipe/NewPipeExtractor/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/TeamNewPipe/NewPipeExtractor/actions/workflows/ci.yml/badge.svg?branch=dev&amp;amp;event=schedule&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jitpack.io/#teamnewpipe/NewPipeExtractor&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/teamnewpipe/NewPipeExtractor.svg?sanitize=true&#34; alt=&#34;JIT Pack Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://teamnewpipe.github.io/NewPipeExtractor/javadoc/&#34;&gt;JDoc&lt;/a&gt; • &lt;a href=&#34;https://teamnewpipe.github.io/documentation/&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NewPipe Extractor is a library for extracting things from streaming sites. It is a core component of &lt;a href=&#34;https://github.com/TeamNewPipe/NewPipe&#34;&gt;NewPipe&lt;/a&gt;, but could be used independently.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;NewPipe Extractor is available at JitPack&#39;s Maven repo.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using Gradle, you could add NewPipe Extractor as a dependency with the following steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;maven { url &#39;https://jitpack.io&#39; }&lt;/code&gt; to the &lt;code&gt;repositories&lt;/code&gt; in your &lt;code&gt;build.gradle&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add &lt;code&gt;implementation &#39;com.github.teamnewpipe:NewPipeExtractor:INSERT_VERSION_HERE&#39;&lt;/code&gt; to the &lt;code&gt;dependencies&lt;/code&gt; in your &lt;code&gt;build.gradle&lt;/code&gt;. Replace &lt;code&gt;INSERT_VERSION_HERE&lt;/code&gt; with the &lt;a href=&#34;https://github.com/TeamNewPipe/NewPipeExtractor/releases/latest&#34;&gt;latest release&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you are using tools to minimize your project, make sure to keep the files below, by e.g. adding the following lines to your proguard file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;## Rules for NewPipeExtractor&#xA;-keep class org.schabi.newpipe.extractor.timeago.patterns.** { *; }&#xA;-keep class org.mozilla.javascript.** { *; }&#xA;-keep class org.mozilla.classfile.ClassFileWriter&#xA;-dontwarn org.mozilla.javascript.tools.**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To use NewPipe Extractor in Android projects with a &lt;code&gt;minSdk&lt;/code&gt; below 33, &lt;a href=&#34;https://developer.android.com/studio/write/java8-support#library-desugaring&#34;&gt;core library desugaring&lt;/a&gt; with the &lt;code&gt;desugar_jdk_libs_nio&lt;/code&gt; artifact is required.&lt;/p&gt; &#xA;&lt;h3&gt;Testing changes&lt;/h3&gt; &#xA;&lt;p&gt;To test changes quickly you can build the library locally. A good approach would be to add something like the following to your &lt;code&gt;settings.gradle&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;includeBuild(&#39;../NewPipeExtractor&#39;) {&#xA;    dependencySubstitution {&#xA;        substitute module(&#39;com.github.teamnewpipe:NewPipeExtractor&#39;) with project(&#39;:extractor&#39;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Another approach would be to use the local Maven repository, here&#39;s a gist of how to use it:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Add &lt;code&gt;mavenLocal()&lt;/code&gt; in your project &lt;code&gt;repositories&lt;/code&gt; list (usually as the first entry to give priority above the others).&lt;/li&gt; &#xA; &lt;li&gt;It&#39;s &lt;em&gt;recommended&lt;/em&gt; that you change the &lt;code&gt;version&lt;/code&gt; of this library (e.g. &lt;code&gt;LOCAL_SNAPSHOT&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Run gradle&#39;s &lt;code&gt;ìnstall&lt;/code&gt; task to deploy this library to your local repository (using the wrapper, present in the root of this project: &lt;code&gt;./gradlew install&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Change the dependency version used in your project to match the one you chose in step 2 (&lt;code&gt;implementation &#39;com.github.teamnewpipe:NewPipeExtractor:LOCAL_SNAPSHOT&#39;&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Tip for Android Studio users: After you make changes and run the &lt;code&gt;install&lt;/code&gt; task, use the menu option &lt;code&gt;File → &#34;Sync with File System&#34;&lt;/code&gt; to refresh the library in your project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Supported sites&lt;/h2&gt; &#xA;&lt;p&gt;The following sites are currently supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;YouTube&lt;/li&gt; &#xA; &lt;li&gt;SoundCloud&lt;/li&gt; &#xA; &lt;li&gt;media.ccc.de&lt;/li&gt; &#xA; &lt;li&gt;PeerTube (no P2P)&lt;/li&gt; &#xA; &lt;li&gt;Bandcamp&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://www.gnu.org/graphics/gplv3-127x51.png&#34; alt=&#34;GNU GPLv3 Image&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;NewPipe Extractor is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href=&#34;https://www.gnu.org/licenses/gpl.html&#34;&gt;GNU General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</summary>
  </entry>
</feed>