<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-27T01:45:12Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apache/polaris</title>
    <updated>2025-04-27T01:45:12Z</updated>
    <id>tag:github.com,2025-04-27:/apache/polaris</id>
    <link href="https://github.com/apache/polaris" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Polaris, the interoperable, open source catalog for Apache Iceberg&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache Polaris (incubating)&lt;/h1&gt; &#xA;&lt;p&gt;Apache Polaris™ is an open-source, fully-featured catalog for Apache Iceberg™. It implements Iceberg&#39;s &lt;a href=&#34;https://github.com/apache/iceberg/raw/main/open-api/rest-catalog-open-api.yaml&#34;&gt;REST API&lt;/a&gt;, enabling seamless multi-engine interoperability across a wide range of platforms, including Apache Doris™, Apache Flink®, Apache Spark™, StarRocks, and Trino.&lt;/p&gt; &#xA;&lt;p&gt;Documentation is available at &lt;a href=&#34;https://polaris.apache.org&#34;&gt;https://polaris.apache.org&lt;/a&gt;, including &lt;a href=&#34;https://polaris.apache.org/index.html#tag/polaris-management-service_other&#34;&gt;Polaris management API doc&lt;/a&gt; and &lt;a href=&#34;https://polaris.apache.org/index.html#tag/Configuration-API&#34;&gt;Apache Iceberg REST API doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:dev-subscribe@polaris.apache.org&#34;&gt;Subscribe to the dev mailing list&lt;/a&gt; to join discussions via email or browse &lt;a href=&#34;https://lists.apache.org/list.html?dev@polaris.apache.org&#34;&gt;the archives&lt;/a&gt;. Check out the &lt;a href=&#34;https://raw.githubusercontent.com/apache/polaris/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING guide&lt;/a&gt; for contribution guidelines.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/apache-polaris/shared_invite/zt-2y3l3r0fr-VtoW42ltir~nSzCYOrQgfw&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Slack-brightgreen.svg?style=for-the-badge&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/polaris/actions/workflows/gradle.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/apache/polaris/gradle.yml?branch=main&amp;amp;label=Main%20CI&amp;amp;logo=Github&amp;amp;style=for-the-badge&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Polaris Overview&lt;/h2&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://polaris.apache.org/in-dev/unreleased/overview/&#34;&gt;here&lt;/a&gt; for a quick overview of Polaris.&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Click &lt;a href=&#34;https://polaris.apache.org/in-dev/unreleased/getting-started/install-dependencies/&#34;&gt;here&lt;/a&gt; for the quickstart experience, which will help you set up a Polaris instance locally or on any supported cloud provider.&lt;/p&gt; &#xA;&lt;h2&gt;Building and Running&lt;/h2&gt; &#xA;&lt;p&gt;Apache Polaris is organized into the following modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;polaris-core&lt;/code&gt; - The main Polaris entity definitions and core business logic&lt;/li&gt; &#xA; &lt;li&gt;API modules (implementing the Iceberg REST API and Polaris management API): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-api-management-model&lt;/code&gt; - The Polaris management model&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-api-management-service&lt;/code&gt; - The Polaris management service&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-api-iceberg-service&lt;/code&gt; - The Iceberg REST service&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Service modules: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-service-common&lt;/code&gt; - The main components of the Polaris server&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Quarkus runtime modules: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-quarkus-service&lt;/code&gt; - The Quarkus-specific components of the Polaris server&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-quarkus-defaults&lt;/code&gt; - The Quarkus-specific configuration defaults&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-quarkus-server&lt;/code&gt; - The Polaris server runtime&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-quarkus-admin-tool&lt;/code&gt; - The Polaris admin &amp;amp; maintenance tool&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Persistence modules: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-jpa-model&lt;/code&gt; - The JPA entity definitions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-eclipselink&lt;/code&gt; - The Eclipselink implementation of the MetaStoreManager interface&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;polaris-relational-jdbc&lt;/code&gt; - The JDBC implementation of BasePersistence to be used via AtomicMetaStoreManager&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Apache Polaris is built using Gradle with Java 21+ and Docker 27+.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew build&lt;/code&gt; - To build and run tests. Make sure Docker is running, as the integration tests depend on it.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew assemble&lt;/code&gt; - To skip tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew test&lt;/code&gt; - To run unit tests and integration tests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew run&lt;/code&gt; - To run the Polaris server locally; the server is reachable at localhost:8181. This is also suitable for running regression tests, or for connecting with Spark. Set your own credentials by specifying system property &lt;code&gt;./gradlew run -Dpolaris.bootstrap.credentials=POLARIS,root,secret&lt;/code&gt; where: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;POLARIS&lt;/code&gt; is the realm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;root&lt;/code&gt; is the CLIENT_ID&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;secret&lt;/code&gt; is the CLIENT_SECRET&lt;/li&gt; &#xA;   &lt;li&gt;If credentials are not set, it will use preset credentials &lt;code&gt;POLARIS,root,secret&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./regtests/run_spark_sql.sh&lt;/code&gt; - To connect from Spark SQL. Here are some example commands to run in the Spark SQL shell:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;create database db1;&#xA;show databases;&#xA;create table db1.table1 (id int, name string);&#xA;insert into db1.table1 values (1, &#39;a&#39;);&#xA;select * from db1.table1;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;env POLARIS_HOST=localhost ./regtests/run.sh&lt;/code&gt; - To run regression tests locally, see more options &lt;a href=&#34;https://raw.githubusercontent.com/apache/polaris/main/regtests/README.md&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;More build and run options&lt;/h3&gt; &#xA;&lt;h4&gt;Running in Docker&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To build the image locally: &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew \&#xA;  :polaris-quarkus-server:assemble \&#xA;  :polaris-quarkus-server:quarkusAppPartsBuild --rerun \&#xA;  -Dquarkus.container-image.build=true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;docker run -p 8181:8181 -p 8182:8182 apache/polaris:latest&lt;/code&gt; - To run the image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Polaris codebase contains some docker compose examples to quickly get started with Polaris, using different configurations. Check the &lt;code&gt;./getting-started&lt;/code&gt; directory for more information.&lt;/p&gt; &#xA;&lt;h4&gt;Running in Kubernetes&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;./run.sh&lt;/code&gt; - To run Polaris as a mini-deployment locally. This will create a Kind cluster, then deploy one pod and one service. The service is available on ports &lt;code&gt;8181&lt;/code&gt; and &lt;code&gt;8182&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kubectl port-forward svc/polaris-service -n polaris 8181:8181 8182:8182&lt;/code&gt; - To create secure connections between a local machine and a pod within the cluster for both service and health/metrics endpoints: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://localhost:8182/q/metrics&#34;&gt;http://localhost:8182/q/metrics&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://localhost:8182/q/health&#34;&gt;http://localhost:8182/q/health&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kubectl get pods -n polaris&lt;/code&gt; - To check the status of the pods.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kubectl get deployment -n polaris&lt;/code&gt; - To check the status of the deployment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;kubectl describe deployment polaris-deployment -n polaris&lt;/code&gt; - To troubleshoot if things aren&#39;t working as expected.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Configuring Polaris&lt;/h4&gt; &#xA;&lt;p&gt;Polaris Servers can be configured using a variety of ways. Please see the &lt;a href=&#34;https://raw.githubusercontent.com/apache/polaris/main/site/content/in-dev/unreleased/configuration.md&#34;&gt;Configuration Guide&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Default configuration values can be found in &lt;code&gt;quarkus/defaults/src/main/resources/application.properties&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Building docs&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Docs are generated using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; using the &lt;a href=&#34;https://www.docsy.dev/docs/&#34;&gt;Docsy&lt;/a&gt; theme.&lt;/li&gt; &#xA; &lt;li&gt;To view the site locally, run &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;site/bin/run-hugo-in-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/apache/polaris/main/site/README.md&#34;&gt;README in &lt;code&gt;site/&lt;/code&gt;&lt;/a&gt; for more information.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache Polaris is under the Apache License Version 2.0. See the &lt;a href=&#34;https://raw.githubusercontent.com/apache/polaris/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;ASF Incubator disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;Apache Polaris™ is an effort undergoing incubation at The Apache Software Foundation (ASF), sponsored by the Apache Incubator. Incubation is required of all newly accepted projects until a further review indicates that the infrastructure, communications, and decision making process have stabilized in a manner consistent with other successful ASF projects. While incubation status is not necessarily a reflection of the completeness or stability of the code, it does indicate that the project has yet to be fully endorsed by the ASF.&lt;/p&gt; &#xA;&lt;p&gt;&lt;sub&gt;Apache®, Apache Polaris™, Apache Iceberg™, Apache Spark™ are either registered trademarks or trademarks of the Apache Software Foundation in the United States and/or other countries.&lt;/sub&gt;&lt;/p&gt;</summary>
  </entry>
</feed>