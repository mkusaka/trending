<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-25T01:41:56Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jeecgboot/jeecg-boot</title>
    <updated>2022-09-25T01:41:56Z</updated>
    <id>tag:github.com,2022-09-25:/jeecgboot/jeecg-boot</id>
    <link href="https://github.com/jeecgboot/jeecg-boot" rel="alternate"></link>
    <summary type="html">&lt;p&gt;「企业级低代码平台」前后端分离架构SpringBoot 2.x，SpringCloud，Ant Design&amp;Vue，Mybatis，Shiro，JWT。强大的代码生成器让前后端代码一键生成，无需写任何代码! 引领新的开发模式OnlineCoding-&gt;代码生成-&gt;手工MERGE，帮助Java项目解决70%重复工作，让开发更关注业务，既能快速提高效率，帮助公司节省成本，同时又不失灵活性。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://jeecgos.oss-cn-beijing.aliyuncs.com/files/logov3.png&#34; alt=&#34;JEECG&#34; title=&#34;JeecgBoot低代码开发平台&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;JEECG BOOT 低代码开发平台&lt;/h1&gt; &#xA;&lt;p&gt;当前最新版本： 3.4.2（发布日期：2022-09-22）&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/zhangdaiscott/jeecg-boot/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?sanitize=true&#34; alt=&#34;AUR&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.jeecg.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Author-%E5%8C%97%E4%BA%AC%E5%9B%BD%E7%82%AC%E8%BD%AF%E4%BB%B6-orange.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://my.oschina.net/jeecg&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Blog-%E5%AE%98%E6%96%B9%E5%8D%9A%E5%AE%A2-blue.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhangdaiscott/jeecg-boot&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/version-3.4.2-brightgreen.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhangdaiscott/jeecg-boot&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/zhangdaiscott/jeecg-boot.svg?style=social&amp;amp;label=Stars&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zhangdaiscott/jeecg-boot&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/zhangdaiscott/jeecg-boot.svg?style=social&amp;amp;label=Fork&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;项目介绍&lt;/h2&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;Java Low Code Platform for Enterprise web applications&lt;/h3&gt; &#xA;&lt;p&gt;JeecgBoot 是一款基于代码生成器的&lt;code&gt;低代码开发平台&lt;/code&gt;！前后端分离架构 SpringBoot2.x，SpringCloud，Ant Design&amp;amp;Vue，Mybatis-plus，Shiro，JWT，支持微服务。强大的代码生成器让前后端代码一键生成，实现低代码开发! JeecgBoot 引领新的低代码开发模式(OnlineCoding-&amp;gt; 代码生成器-&amp;gt; 手工MERGE)， 帮助解决Java项目70%的重复工作，让开发更多关注业务。既能快速提高效率，节省研发成本，同时又不失灵活性！&lt;/p&gt; &#xA;&lt;p&gt;JeecgBoot 提供了一系列&lt;code&gt;低代码模块&lt;/code&gt;，实现在线开发&lt;code&gt;真正的零代码&lt;/code&gt;：Online表单开发、Online报表、报表配置能力、在线图表设计、大屏设计、移动配置能力、表单设计器、在线设计流程、流程自动化配置、插件能力（可插拔）等等！&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;JEECG宗旨是:&lt;/code&gt; 简单功能由OnlineCoding配置实现，做到&lt;code&gt;零代码开发&lt;/code&gt;；复杂功能由代码生成器生成进行手工Merge 实现&lt;code&gt;低代码开发&lt;/code&gt;，既保证了&lt;code&gt;智能&lt;/code&gt;又兼顾&lt;code&gt;灵活&lt;/code&gt;；实现了低代码开发的同时又支持灵活编码，解决了当前低代码产品普遍不灵活的弊端！&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;JEECG业务流程:&lt;/code&gt; 采用工作流来实现、扩展出任务接口，供开发编写业务逻辑，表单提供多种解决方案： 表单设计器、online配置表单、编码表单。同时实现了流程与表单的分离设计（松耦合）、并支持任务节点灵活配置，既保证了公司流程的保密性，又减少了开发人员的工作量。&lt;/p&gt; &#xA;&lt;h2&gt;项目源码&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;仓库&lt;/th&gt; &#xA;   &lt;th&gt;前端 Vue3版&lt;/th&gt; &#xA;   &lt;th&gt;前端 Vue2版&lt;/th&gt; &#xA;   &lt;th&gt;后端源码&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Github&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jeecgboot/jeecgboot-vue3&#34;&gt;jeecgboot-vue3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jeecgboot/ant-design-vue-jeecg&#34;&gt;ant-design-vue-jeecg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/jeecgboot/jeecg-boot&#34;&gt;jeecg-boot&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;码云&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitee.com/jeecg/jeecgboot-vue3&#34;&gt;jeecgboot-vue3&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitee.com/jeecg/ant-design-vue-jeecg&#34;&gt;ant-design-vue-jeecg&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitee.com/jeecg/jeecg-boot&#34;&gt;jeecg-boot&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;项目说明&lt;/h5&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;项目名&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jeecg-boot&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SpringBoot后台源码（支持微服务）&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ant-design-vue-jeecg&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Vue2版前端源码&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jeecgboot-vue3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Vue3+Ts版前端源码&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jeecg-boot-starter&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;stater依赖项目单独维护 &lt;a href=&#34;https://gitee.com/jeecg/jeecg-boot-starter&#34;&gt;下载地址&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h5&gt;Star走势图&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://jeecgos.oss-cn-beijing.aliyuncs.com/files/star20220907.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;适用项目&lt;/h2&gt; &#xA;&lt;p&gt;Jeecg-Boot低代码开发平台，可以应用在任何J2EE项目的开发中，尤其适合SAAS项目、企业信息管理系统（MIS）、内部办公系统（OA）、企业资源计划系统（ERP）、客户关系管理系统（CRM）等，其半智能手工Merge的开发方式，可以显著提高开发效率70%以上，极大降低开发成本。&lt;/p&gt; &#xA;&lt;h2&gt;技术文档&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;技术官网： &lt;a href=&#34;http://www.jeecg.com&#34;&gt;http://www.jeecg.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在线演示 ： &lt;a href=&#34;http://boot.jeecg.com&#34;&gt;Vue2版本&lt;/a&gt; | &lt;a href=&#34;http://boot3.jeecg.com&#34;&gt;Vue3版本&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;开发文档： &lt;a href=&#34;http://doc.jeecg.com&#34;&gt;主项目文档&lt;/a&gt; | &lt;a href=&#34;http://vue3.jeecg.com&#34;&gt;Vue3文档&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;新手指南： &lt;a href=&#34;http://www.jeecg.com/doc/quickstart&#34;&gt;快速入门&lt;/a&gt; | &lt;a href=&#34;https://space.bilibili.com/454617261/channel/series&#34;&gt;视频教程&lt;/a&gt; | &lt;a href=&#34;http://www.jeecg.com/doc/qa&#34;&gt;常见问题 &lt;/a&gt; | &lt;a href=&#34;http://jeecg.com/doc/help&#34;&gt;技术支持&lt;/a&gt; | &lt;a href=&#34;https://my.oschina.net/jeecg/blog/3083313&#34;&gt;1分钟体验低代码&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;微服务开发： &lt;a href=&#34;http://doc.jeecg.com/3043471&#34;&gt;单体升级为微服务&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;QQ交流群 ： ⑥730954414、VUE3群683903138、⑤860162132(满)、④774126647(满)、③816531124(满)、②769925425(满)、①284271917(满)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;提醒：【QQ群是自助服务群，建议给帮助您解决问题的同学发送指定红包，表示感谢！】&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;后台目录结构&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;项目结构&#xA;├─jeecg-boot-parent（父POM： 项目依赖、modules组织）&#xA;│  ├─jeecg-boot-base-core（共通模块： 工具类、config、权限、查询过滤器、注解等）&#xA;│  ├─jeecg-module-demo    示例代码&#xA;│  ├─jeecg-module-system  System系统管理目录&#xA;│  │  ├─jeecg-system-biz    System系统管理权限等功能&#xA;│  │  ├─jeecg-system-start  System单体启动项目(8080）&#xA;│  │  ├─jeecg-system-api    System系统管理模块对外api&#xA;│  │  │  ├─jeecg-system-cloud-api   System模块对外提供的微服务接口&#xA;│  │  │  ├─jeecg-system-local-api   System模块对外提供的单体接口&#xA;│  ├─jeecg-server-cloud           --微服务模块&#xA;     ├─jeecg-cloud-gateway       --微服务网关模块(9999)&#xA;     ├─jeecg-cloud-nacos       --Nacos服务模块(8848)&#xA;     ├─jeecg-system-cloud-start  --System微服务启动项目(7001)&#xA;     ├─jeecg-demo-cloud-start    --Demo微服务启动项目(7002)&#xA;     ├─jeecg-visual&#xA;        ├─jeecg-cloud-monitor       --微服务监控模块 (9111)&#xA;        ├─jeecg-cloud-xxljob        --微服务xxljob定时任务服务端 (9080)&#xA;        ├─jeecg-cloud-sentinel     --sentinel服务端 (9000)&#xA;        ├─jeecg-cloud-test           -- 微服务测试示例（各种例子）&#xA;           ├─jeecg-cloud-test-more         -- 微服务测试示例（feign、熔断降级、xxljob、分布式锁）&#xA;           ├─jeecg-cloud-test-rabbitmq     -- 微服务测试示例（rabbitmq）&#xA;           ├─jeecg-cloud-test-seata          -- 微服务测试示例（seata分布式事务）&#xA;           ├─jeecg-cloud-test-shardingsphere    -- 微服务测试示例（分库分表）&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Docker启动项目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://doc.jeecg.com/2043889&#34;&gt;Docker启动单体后台&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://doc.jeecg.com/3043472&#34;&gt;Docker启动微服务后台&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://vue3.jeecg.com/3028878&#34;&gt;Docker启动Vue3前端&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://doc.jeecg.com/3043612&#34;&gt;Docker启动Vue2前端&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;为什么选择JeecgBoot?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.采用最新主流前后分离框架（Springboot+Mybatis+antd），容易上手; 代码生成器依赖性低,灵活的扩展能力，可快速实现二次开发;&lt;/li&gt; &#xA; &lt;li&gt;2.支持微服务SpringCloud Alibaba(Nacos、Gateway、Sentinel、Skywalking)，提供切换机制支持单体和微服务自由切换&lt;/li&gt; &#xA; &lt;li&gt;3.开发效率高,采用代码生成器，单表、树列表、一对多、一对一等数据模型，增删改查功能一键生成，菜单配置直接使用；&lt;/li&gt; &#xA; &lt;li&gt;4.代码生成器提供强大模板机制，支持自定义模板，目前提供四套风格模板（单表两套、树模型一套、一对多三套）&lt;/li&gt; &#xA; &lt;li&gt;5.代码生成器非常智能，在线业务建模、在线配置、所见即所得支持23种类控件，一键生成前后端代码，大幅度提升开发效率，不再为重复工作发愁。&lt;/li&gt; &#xA; &lt;li&gt;6.低代码能力：Online在线表单（无需编码，通过在线配置表单，实现表单的增删改查，支持单表、树、一对多、一对一等模型，实现人人皆可编码）&lt;/li&gt; &#xA; &lt;li&gt;7.低代码能力：Online在线报表（无需编码，通过在线配置方式，实现数据报表，可以快速抽取数据，减轻开发压力，实现人人皆可编码）&lt;/li&gt; &#xA; &lt;li&gt;8.低代码能力：Online在线图表（无需编码，通过在线配置方式，实现曲线图，柱状图，数据报表等，支持自定义排版布局，实现人人皆可编码）&lt;/li&gt; &#xA; &lt;li&gt;9.封装完善的用户、角色、菜单、组织机构、数据字典、在线定时任务等基础功能，支持访问授权、按钮权限、数据权限等功能&lt;/li&gt; &#xA; &lt;li&gt;10.常用共通封装，各种工具类(定时任务,短信接口,邮件发送,Excel导入导出等),基本满足80%项目需求&lt;/li&gt; &#xA; &lt;li&gt;11.简易Excel导入导出，支持单表导出和一对多表模式导出，生成的代码自带导入导出功能&lt;/li&gt; &#xA; &lt;li&gt;12.集成简易报表工具，图像报表和数据导出非常方便，可极其方便的生成图形报表、pdf、excel、word等报表；&lt;/li&gt; &#xA; &lt;li&gt;13.采用前后分离技术，页面UI风格精美，针对常用组件做了封装：时间、行表格控件、截取显示控件、报表组件，编辑器等等&lt;/li&gt; &#xA; &lt;li&gt;14.查询过滤器：查询功能自动生成，后台动态拼SQL追加查询条件；支持多种匹配方式（全匹配/模糊查询/包含查询/不匹配查询）；&lt;/li&gt; &#xA; &lt;li&gt;15.数据权限（精细化数据权限控制，控制到行级，列表级，表单字段级，实现不同人看不同数据，不同人对同一个页面操作不同字段&lt;/li&gt; &#xA; &lt;li&gt;16.页面校验自动生成(必须输入、数字校验、金额校验、时间空间等);&lt;/li&gt; &#xA; &lt;li&gt;17.支持SAAS服务模式，提供SaaS多租户架构方案。&lt;/li&gt; &#xA; &lt;li&gt;18.分布式文件服务，集成minio、阿里OSS等优秀的第三方，提供便捷的文件上传与管理，同时也支持本地存储。&lt;/li&gt; &#xA; &lt;li&gt;19.主流数据库兼容，一套代码完全兼容Mysql、Postgresql、Oracle、Sqlserver、MariaDB、达梦等主流数据库。&lt;/li&gt; &#xA; &lt;li&gt;20.集成工作流activiti，并实现了只需在页面配置流程转向，可极大的简化bpm工作流的开发；用bpm的流程设计器画出了流程走向，一个工作流基本就完成了，只需写很少量的java代码；&lt;/li&gt; &#xA; &lt;li&gt;21.低代码能力：在线流程设计，采用开源Activiti流程引擎，实现在线画流程,自定义表单,表单挂靠,业务流转&lt;/li&gt; &#xA; &lt;li&gt;22.多数据源：及其简易的使用方式，在线配置数据源配置，便捷的从其他数据抓取数据；&lt;/li&gt; &#xA; &lt;li&gt;23.提供单点登录CAS集成方案，项目中已经提供完善的对接代码&lt;/li&gt; &#xA; &lt;li&gt;24.低代码能力：表单设计器，支持用户自定义表单布局，支持单表，一对多表单、支持select、radio、checkbox、textarea、date、popup、列表、宏等控件&lt;/li&gt; &#xA; &lt;li&gt;25.专业接口对接机制，统一采用restful接口方式，集成swagger-ui在线接口文档，Jwt token安全验证，方便客户端对接&lt;/li&gt; &#xA; &lt;li&gt;26.接口安全机制，可细化控制接口授权，非常简便实现不同客户端只看自己数据等控制&lt;/li&gt; &#xA; &lt;li&gt;27.高级组合查询功能，在线配置支持主子表关联查询，可保存查询历史&lt;/li&gt; &#xA; &lt;li&gt;28.提供各种系统监控，实时跟踪系统运行情况（监控 Redis、Tomcat、jvm、服务器信息、请求追踪、SQL监控）&lt;/li&gt; &#xA; &lt;li&gt;29.消息中心（支持短信、邮件、微信推送等等）&lt;/li&gt; &#xA; &lt;li&gt;30.集成Websocket消息通知机制&lt;/li&gt; &#xA; &lt;li&gt;31.移动自适应效果优秀，提供APP发布方案：&lt;/li&gt; &#xA; &lt;li&gt;32.支持多语言，提供国际化方案；&lt;/li&gt; &#xA; &lt;li&gt;33.数据变更记录日志，可记录数据每次变更内容，通过版本对比功能查看历史变化&lt;/li&gt; &#xA; &lt;li&gt;34.平台UI强大，实现了移动自适应&lt;/li&gt; &#xA; &lt;li&gt;35.平台首页风格，提供多种组合模式，支持自定义风格&lt;/li&gt; &#xA; &lt;li&gt;36.提供简单易用的打印插件，支持谷歌、火狐、IE11+ 等各种浏览器&lt;/li&gt; &#xA; &lt;li&gt;37.示例代码丰富，提供很多学习案例参考&lt;/li&gt; &#xA; &lt;li&gt;38.采用maven分模块开发方式&lt;/li&gt; &#xA; &lt;li&gt;39.支持菜单动态路由&lt;/li&gt; &#xA; &lt;li&gt;40.权限控制采用 RBAC（Role-Based Access Control，基于角色的访问控制）&lt;/li&gt; &#xA; &lt;li&gt;41.提供新行编辑表格JVXETable，轻松满足各种复杂ERP布局，拥有更高的性能、更灵活的扩展、更强大的功能&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;技术架构：&lt;/h2&gt; &#xA;&lt;h4&gt;开发环境&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;语言：Java 8+ (小于17)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;IDE(JAVA)： IDEA (必须安装lombok插件 )&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;IDE(前端)： Vscode、WebStorm、IDEA&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;依赖管理：Maven&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;缓存：Redis&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;数据库脚本：MySQL5.7+ &amp;amp; Oracle 11g &amp;amp; Sqlserver2017（其他数据库，&lt;a href=&#34;https://my.oschina.net/jeecg/blog/4905722&#34;&gt;需要自己转&lt;/a&gt;）&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;后端&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;基础框架：Spring Boot 2.6.6&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;微服务框架： Spring Cloud Alibaba 2021.0.1.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;持久层框架：MybatisPlus 3.5.1&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;报表工具： JimuReport 1.5.2&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;安全框架：Apache Shiro 1.8.0，Jwt 3.11.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;微服务技术栈：Spring Cloud Alibaba、Nacos、Gateway、Sentinel、Skywalking&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;数据库连接池：阿里巴巴Druid 1.1.22&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;日志打印：logback&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;其他：autopoi, fastjson，poi，Swagger-ui，quartz, lombok（简化代码）等。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;前端&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vue2版本：&lt;code&gt;Vue2.6+@vue/cli+AntDesignVue+Viser-vue+Vuex等&lt;/code&gt; &lt;a href=&#34;https://github.com/jeecgboot/ant-design-vue-jeecg&#34;&gt;详细查看&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Vue3版本：&lt;code&gt;Vue3.0+TypeScript+Vite+AntDesignVue+pinia+echarts等新方案&lt;/code&gt; &lt;a href=&#34;https://github.com/jeecgboot/jeecgboot-vue3&#34;&gt;详细查看&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;支持库&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;数据库&lt;/th&gt; &#xA;   &lt;th&gt;支持&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Oracle11g&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sqlserver2017&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MariaDB&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;达梦、人大金仓&lt;/td&gt; &#xA;   &lt;td&gt;√&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;微服务解决方案&lt;/h2&gt; &#xA;&lt;p&gt;1、服务注册和发现 Nacos √&lt;/p&gt; &#xA;&lt;p&gt;2、统一配置中心 Nacos √&lt;/p&gt; &#xA;&lt;p&gt;3、路由网关 gateway(三种加载方式) √&lt;/p&gt; &#xA;&lt;p&gt;4、分布式 http feign √&lt;/p&gt; &#xA;&lt;p&gt;5、熔断降级限流 Sentinel √&lt;/p&gt; &#xA;&lt;p&gt;6、分布式文件 Minio、阿里OSS √&lt;/p&gt; &#xA;&lt;p&gt;7、统一权限控制 JWT + Shiro √&lt;/p&gt; &#xA;&lt;p&gt;8、服务监控 SpringBootAdmin√&lt;/p&gt; &#xA;&lt;p&gt;9、链路跟踪 Skywalking &lt;a href=&#34;http://doc.jeecg.com/2350293&#34;&gt;参考文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;10、消息中间件 RabbitMQ √&lt;/p&gt; &#xA;&lt;p&gt;11、分布式任务 xxl-job √&lt;/p&gt; &#xA;&lt;p&gt;12、分布式事务 Seata&lt;/p&gt; &#xA;&lt;p&gt;13、分布式日志 elk + kafka&lt;/p&gt; &#xA;&lt;p&gt;14、支持 docker-compose、k8s、jenkins&lt;/p&gt; &#xA;&lt;p&gt;15、CAS 单点登录 √&lt;/p&gt; &#xA;&lt;p&gt;16、路由限流 √&lt;/p&gt; &#xA;&lt;h4&gt;微服务架构图&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://jeecgos.oss-cn-beijing.aliyuncs.com/files/jeecgboot_springcloud2022.png&#34; alt=&#34;微服务架构图&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Jeecg Boot 产品功能蓝图&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://jeecgos.oss-cn-beijing.aliyuncs.com/upload/test/Jeecg-Boot-lantu202005_1590912449914.jpg&#34; alt=&#34;功能蓝图&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;功能模块&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;├─系统管理&#xA;│  ├─用户管理&#xA;│  ├─角色管理&#xA;│  ├─菜单管理&#xA;│  ├─权限设置（支持按钮权限、数据权限）&#xA;│  ├─表单权限（控制字段禁用、隐藏）&#xA;│  ├─部门管理&#xA;│  ├─我的部门（二级管理员）&#xA;│  └─字典管理&#xA;│  └─分类字典&#xA;│  └─系统公告&#xA;│  └─职务管理&#xA;│  └─通讯录&#xA;│  └─多租户管理&#xA;├─消息中心&#xA;│  ├─消息管理&#xA;│  ├─模板管理&#xA;├─代码生成器(低代码)&#xA;│  ├─代码生成器功能（一键生成前后端代码，生成后无需修改直接用，绝对是后端开发福音）&#xA;│  ├─代码生成器模板（提供4套模板，分别支持单表和一对多模型，不同风格选择）&#xA;│  ├─代码生成器模板（生成代码，自带excel导入导出）&#xA;│  ├─查询过滤器（查询逻辑无需编码，系统根据页面配置自动生成）&#xA;│  ├─高级查询器（弹窗自动组合查询条件）&#xA;│  ├─Excel导入导出工具集成（支持单表，一对多 导入导出）&#xA;│  ├─平台移动自适应支持&#xA;├─系统监控&#xA;│  ├─Gateway路由网关&#xA;│  ├─性能扫描监控&#xA;│  │  ├─监控 Redis&#xA;│  │  ├─Tomcat&#xA;│  │  ├─jvm&#xA;│  │  ├─服务器信息&#xA;│  │  ├─请求追踪&#xA;│  │  ├─磁盘监控&#xA;│  ├─定时任务&#xA;│  ├─系统日志&#xA;│  ├─消息中心（支持短信、邮件、微信推送等等）&#xA;│  ├─数据日志（记录数据快照，可对比快照，查看数据变更情况）&#xA;│  ├─系统通知&#xA;│  ├─SQL监控&#xA;│  ├─swagger-ui(在线接口文档)&#xA;│─报表示例&#xA;│  ├─曲线图&#xA;│  └─饼状图&#xA;│  └─柱状图&#xA;│  └─折线图&#xA;│  └─面积图&#xA;│  └─雷达图&#xA;│  └─仪表图&#xA;│  └─进度条&#xA;│  └─排名列表&#xA;│  └─等等&#xA;│─大屏模板&#xA;│  ├─作战指挥中心大屏&#xA;│  └─物流服务中心大屏&#xA;│─常用示例&#xA;│  ├─自定义组件&#xA;│  ├─对象存储(对接阿里云)&#xA;│  ├─JVXETable示例（各种复杂ERP布局示例）&#xA;│  ├─单表模型例子&#xA;│  └─一对多模型例子&#xA;│  └─打印例子&#xA;│  └─一对多TAB例子&#xA;│  └─内嵌table例子&#xA;│  └─常用选择组件&#xA;│  └─异步树table&#xA;│  └─接口模拟测试&#xA;│  └─表格合计示例&#xA;│  └─异步树列表示例&#xA;│  └─一对多JEditable&#xA;│  └─JEditable组件示例&#xA;│  └─图片拖拽排序&#xA;│  └─图片翻页&#xA;│  └─图片预览&#xA;│  └─PDF预览&#xA;│  └─分屏功能&#xA;│─封装通用组件&#x9;&#xA;│  ├─行编辑表格JEditableTable&#xA;│  └─省略显示组件&#xA;│  └─时间控件&#xA;│  └─高级查询&#xA;│  └─用户选择组件&#xA;│  └─报表组件封装&#xA;│  └─字典组件&#xA;│  └─下拉多选组件&#xA;│  └─选人组件&#xA;│  └─选部门组件&#xA;│  └─通过部门选人组件&#xA;│  └─封装曲线、柱状图、饼状图、折线图等等报表的组件（经过封装，使用简单）&#xA;│  └─在线code编辑器&#xA;│  └─上传文件组件&#xA;│  └─验证码组件&#xA;│  └─树列表组件&#xA;│  └─表单禁用组件&#xA;│  └─等等&#xA;│─更多页面模板&#xA;│  ├─各种高级表单&#xA;│  ├─各种列表效果&#xA;│  └─结果页面&#xA;│  └─异常页面&#xA;│  └─个人页面&#xA;├─高级功能&#xA;│  ├─系统编码规则&#xA;│  ├─提供单点登录CAS集成方案&#xA;│  ├─提供APP发布方案&#xA;│  ├─集成Websocket消息通知机制&#xA;├─Online在线开发(低代码)&#xA;│  ├─Online在线表单 - 功能已开放&#xA;│  ├─Online代码生成器 - 功能已开放&#xA;│  ├─Online在线报表 - 功能已开放&#xA;│  ├─Online在线图表(未开源)&#xA;│  ├─Online图表模板配置(未开源)&#xA;│  ├─Online布局设计(未开源)&#xA;│  ├─多数据源管理 - 功能已开放&#xA;├─积木报表设计器(低代码)&#xA;│  ├─打印设计器&#xA;│  ├─数据报表设计&#xA;│  ├─图形报表设计（支持echart）&#xA;│  ├─大屏设计器(未开源)&#xA;│─流程模块功能 (未开源)&#xA;│  ├─流程设计器&#xA;│  ├─表单设计器&#xA;   ├─大屏设计器&#xA;   ├─门户设计/仪表盘设计器&#xA;│  └─我的任务&#xA;│  └─历史流程&#xA;│  └─历史流程&#xA;│  └─流程实例管理&#xA;│  └─流程监听管理&#xA;│  └─流程表达式&#xA;│  └─我发起的流程&#xA;│  └─我的抄送&#xA;│  └─流程委派、抄送、跳转&#xA;│  └─。。。&#xA;│─OA办公组件 (未开源)&#xA;│  ├─更多功能&#xA;│  └─。。。&#xA;└─其他模块&#xA;   └─更多功能开发中。。&#xA;   &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;系统效果&lt;/h2&gt; &#xA;&lt;h5&gt;大屏模板&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.oschina.net/uploads/img/201912/25133248_Ag1C.jpg&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.oschina.net/uploads/img/201912/25133301_k9Kc.jpg&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;PC端&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14155402_AmlV.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160657_cHwb.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160813_KmXS.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160935_Nibs.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14161004_bxQ4.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;在线接口文档&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.oschina.net/uploads/img/201908/27095258_M2Xq.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160957_hN3X.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;报表&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160828_pkFr.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160834_Lo23.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160842_QK7B.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160849_GBm5.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160858_6RAM.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;流程&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160623_8fwk.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160917_9Ftz.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201904/14160633_u59G.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt; &lt;img src=&#34;https://static.oschina.net/uploads/img/201907/05165142_yyQ7.png&#34; alt=&#34;输入图片说明&#34; title=&#34;在这里输入图片标题&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;手机端&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/da543c5d0d57baab0cecaa4670c8b68c521.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://oscimg.oschina.net/oscnet/fda4bd82cab9d682de1c1fbf2060bf14fa6.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;PAD端&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/e90fef970a8c33790ab03ffd6c4c7cec225.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://oscimg.oschina.net/oscnet/d78218803a9e856a0aa82b45efc49849a0c.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://oscimg.oschina.net/oscnet/0404054d9a12647ef6f82cf9cfb80a5ac02.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://oscimg.oschina.net/oscnet/59c23b230f52384e588ee16309b44fa20de.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;捐赠&lt;/h2&gt; &#xA;&lt;p&gt;如果觉得还不错，请作者喝杯咖啡吧 ☺&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://static.oschina.net/uploads/img/201903/08155608_0EFX.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>quarkusio/quarkus</title>
    <updated>2022-09-25T01:41:56Z</updated>
    <id>tag:github.com,2022-09-25:/quarkusio/quarkus</id>
    <link href="https://github.com/quarkusio/quarkus" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quarkus: Supersonic Subatomic Java.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://quarkus.io/#gh-light-mode-only&#34;&gt;&lt;img src=&#34;https://design.jboss.org/quarkus/logo/final/PNG/quarkus_logo_horizontal_rgb_1280px_default.png#gh-light-mode-only&#34; alt=&#34;Quarkus&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quarkus.io/#gh-dark-mode-only&#34;&gt;&lt;img src=&#34;https://design.jboss.org/quarkus/logo/final/PNG/quarkus_logo_horizontal_rgb_1280px_reverse.png#gh-dark-mode-only&#34; alt=&#34;Quarkus&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/artifact/io.quarkus/quarkus-bom&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.quarkus/quarkus-bom?logo=apache-maven&amp;amp;style=for-the-badge&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/quarkusio/quarkus/actions?query=workflow%3A%22Quarkus+CI%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/QuarkusIO/quarkus/Quarkus%20CI?logo=GitHub&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Actions Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/quarkusio/quarkus/pulse&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/quarkusio/quarkus.svg?label=commits&amp;amp;style=for-the-badge&amp;amp;logo=git&amp;amp;logoColor=white&#34; alt=&#34;Commits&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/quarkusio/quarkus?style=for-the-badge&amp;amp;logo=apache&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://quarkusio.zulipchat.com/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/zulip-join_chat-brightgreen.svg?style=for-the-badge&amp;amp;logo=zulip&#34; alt=&#34;Project Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitpod.io/#https://github.com/quarkusio/quarkus/-/tree/main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?style=for-the-badge&amp;amp;logo=gitpod&amp;amp;logoColor=white&#34; alt=&#34;Gitpod Ready-to-Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/quarkusio/quarkus/actions/runs/113853915/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/JVM-11--17--18-brightgreen.svg?style=for-the-badge&amp;amp;logo=openjdk&#34; alt=&#34;Supported JVM Versions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Quarkus - Supersonic Subatomic Java&lt;/h1&gt; &#xA;&lt;p&gt;Quarkus is a Cloud Native, (Linux) Container First framework for writing Java applications.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Container First&lt;/strong&gt;: Minimal footprint Java applications optimal for running in containers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cloud Native&lt;/strong&gt;: Embraces &lt;a href=&#34;https://12factor.net&#34;&gt;12 factor architecture&lt;/a&gt; in environments like Kubernetes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unify imperative and reactive&lt;/strong&gt;: Brings under one programming model non-blocking and imperative styles of development.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Standards-based&lt;/strong&gt;: Based on the standards and frameworks you love and use (RESTEasy and JAX-RS, Hibernate ORM and JPA, Netty, Eclipse Vert.x, Eclipse MicroProfile, Apache Camel...).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Microservice First&lt;/strong&gt;: Brings lightning fast startup time and code turn around to Java apps.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Developer Joy&lt;/strong&gt;: Development centric experience without compromise to bring your amazing apps to life in no time.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;All under ONE framework.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quarkus.io&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/quarkusio/quarkus/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Migration Guides&lt;/h2&gt; &#xA;&lt;p&gt;We collect all the migration notes in our &lt;a href=&#34;https://github.com/quarkusio/quarkus/wiki/Migration-Guides&#34;&gt;migration guides&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Release Planning&lt;/h2&gt; &#xA;&lt;p&gt;Interested in when the next release is coming? Check our &lt;a href=&#34;https://github.com/quarkusio/quarkus/wiki/Release-Planning&#34;&gt;release planning&lt;/a&gt; document for details.&lt;/p&gt; &#xA;&lt;h2&gt;How to build Quarkus&lt;/h2&gt; &#xA;&lt;p&gt;The build instructions are available in the &lt;a href=&#34;https://raw.githubusercontent.com/quarkusio/quarkus/main/CONTRIBUTING.md&#34;&gt;contribution guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>doocs/advanced-java</title>
    <updated>2022-09-25T01:41:56Z</updated>
    <id>tag:github.com,2022-09-25:/doocs/advanced-java</id>
    <link href="https://github.com/doocs/advanced-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;😮 Core Interview Questions &amp; Answers For Experienced Java(Backend) Developers | 互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;互联网 Java 工程师进阶知识完全扫盲&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doocs/advanced-java/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/doocs/advanced-java?color=42b883&amp;amp;logo=github&amp;amp;style=flat-square&amp;amp;logoColor=ffffff&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/advanced-java/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/doocs/advanced-java?color=42b883&amp;amp;logo=github&amp;amp;style=flat-square&amp;amp;logoColor=ffffff&#34; alt=&#34;forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/advanced-java/actions?query=workflow%3ASync&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/doocs/advanced-java/Sync?color=42b883&amp;amp;label=sync&amp;amp;logo=githubactions&amp;amp;style=flat-square&amp;amp;logoColor=ffffff&#34; alt=&#34;actions status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/advanced-java/actions?query=workflow%3APrettier&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/doocs/advanced-java/Prettier?color=42b883&amp;amp;label=prettier&amp;amp;logo=githubactions&amp;amp;style=flat-square&amp;amp;logoColor=ffffff&#34; alt=&#34;actions status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/doocs/advanced-java?color=42b883&amp;amp;style=flat-square&amp;amp;logo=homeassistantcommunitystore&amp;amp;logoColor=ffffff&#34; alt=&#34;license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doocs.github.io/#/?id=how-to-join&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/org-join%20us-42b883?style=flat-square&amp;amp;logo=homeassistantcommunitystore&amp;amp;logoColor=ffffff&#34; alt=&#34;doocs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/qUFwPPEYEy&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/901805669529825301.svg?logo=discord&amp;amp;color=42b883&amp;amp;style=flat-square&amp;amp;logoColor=ffffff&#34; alt=&#34;discord-chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;本项目大部分内容来自中华石杉，版权归作者所有，内容涵盖&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/#%E9%AB%98%E5%B9%B6%E5%8F%91%E6%9E%B6%E6%9E%84&#34;&gt;高并发&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F&#34;&gt;分布式&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/#%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84&#34;&gt;高可用&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84&#34;&gt;微服务&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/#%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86&#34;&gt;海量数据处理&lt;/a&gt;等领域知识。我们对这部分知识做了一个系统的整理，方便学习查阅。&lt;/p&gt; &#xA;&lt;p&gt;我们也在全力更新算法项目！如果你在准备笔面试算法，或者想进一步提升 coding 能力，欢迎 Star 关注 &lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;doocs/leetcode&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;学习本项目之前，先来看看 &lt;a href=&#34;https://github.com/doocs/advanced-java/discussions/9&#34;&gt;Discussions 讨论区&lt;/a&gt;的技术面试官是怎么说的吧。本项目欢迎各位开发者朋友到 Discussions 讨论区分享自己的一些想法和实践经验。也不妨 Star 关注 &lt;a href=&#34;https://github.com/doocs/advanced-java&#34;&gt;doocs/advanced-java&lt;/a&gt;，随时追踪项目最新动态。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gitee Pages: &lt;a href=&#34;https://doocs.gitee.io/advanced-java&#34;&gt;https://doocs.gitee.io/advanced-java&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub Pages: &lt;a href=&#34;https://doocs.github.io/advanced-java&#34;&gt;https://doocs.github.io/advanced-java&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;高并发架构&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/mq-interview.md&#34;&gt;消息队列&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/why-mq.md&#34;&gt;为什么使用消息队列？消息队列有什么优点和缺点？Kafka、ActiveMQ、RabbitMQ、RocketMQ 都有什么优点和缺点？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/how-to-ensure-high-availability-of-message-queues.md&#34;&gt;如何保证消息队列的高可用？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/how-to-ensure-that-messages-are-not-repeatedly-consumed.md&#34;&gt;如何保证消息不被重复消费？（如何保证消息消费的幂等性）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/how-to-ensure-the-reliable-transmission-of-messages.md&#34;&gt;如何保证消息的可靠性传输？（如何处理消息丢失的问题）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/how-to-ensure-the-order-of-messages.md&#34;&gt;如何保证消息的顺序性？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/mq-time-delay-and-expired-failure.md&#34;&gt;如何解决消息队列的延时以及过期失效问题？消息队列满了以后该怎么处理？有几百万消息持续积压几小时，说说怎么解决？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/mq-design.md&#34;&gt;如果让你写一个消息队列，该如何进行架构设计啊？说一下你的思路。&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/es-introduction.md&#34;&gt;搜索引擎&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/es-architecture.md&#34;&gt;ES 的分布式架构原理能说一下么（ES 是如何实现分布式的啊）？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/es-write-query-search.md&#34;&gt;ES 写入数据的工作原理是什么啊？ES 查询数据的工作原理是什么啊？底层的 Lucene 介绍一下呗？倒排索引了解吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/es-optimizing-query-performance.md&#34;&gt;ES 在数据量很大的情况下（数十亿级别）如何提高查询效率啊？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/es-production-cluster.md&#34;&gt;ES 生产集群的部署架构是什么？每个索引的数据量大概有多少？每个索引大概有多少个分片？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;缓存&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/why-cache.md&#34;&gt;在项目中缓存是如何使用的？缓存如果使用不当会造成什么后果？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-single-thread-model.md&#34;&gt;Redis 和 Memcached 有什么区别？Redis 的线程模型是什么？为什么单线程的 Redis 比多线程的 Memcached 效率要高得多？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-data-types.md&#34;&gt;Redis 都有哪些数据类型？分别在哪些场景下使用比较合适？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-expiration-policies-and-lru.md&#34;&gt;Redis 的过期策略都有哪些？手写一下 LRU 代码实现？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/how-to-ensure-high-concurrency-and-high-availability-of-redis.md&#34;&gt;如何保证 Redis 高并发、高可用？Redis 的主从复制原理能介绍一下么？Redis 的哨兵原理能介绍一下么？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-master-slave.md&#34;&gt;Redis 主从架构是怎样的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-persistence.md&#34;&gt;Redis 的持久化有哪几种方式？不同的持久化机制都有什么优缺点？持久化机制具体底层是如何实现的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-cluster.md&#34;&gt;Redis 集群模式的工作原理能说一下么？在集群模式下，Redis 的 key 是如何寻址的？分布式寻址都有哪些算法？了解一致性 hash 算法吗？如何动态增加和删除一个节点？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-caching-avalanche-and-caching-penetration.md&#34;&gt;了解什么是 Redis 的雪崩、穿透和击穿？Redis 崩溃之后会怎么样？系统该如何应对这种情况？如何处理 Redis 的穿透？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-consistence.md&#34;&gt;如何保证缓存与数据库的双写一致性？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-cas.md&#34;&gt;Redis 的并发竞争问题是什么？如何解决这个问题？了解 Redis 事务的 CAS 方案吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-production-environment.md&#34;&gt;生产环境中的 Redis 是怎么部署的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/redis-rehash.md&#34;&gt;有了解过 Redis rehash 的过程吗？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分库分表&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/database-shard.md&#34;&gt;为什么要分库分表（设计高并发系统的时候，数据库层面该如何设计）？用过哪些分库分表中间件？不同的分库分表中间件都有什么优点和缺点？你们具体是如何对数据库如何进行垂直拆分或水平拆分的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/database-shard-method.md&#34;&gt;现在有一个未分库分表的系统，未来要分库分表，如何设计才可以让系统从未分库分表动态切换到分库分表上？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/database-shard-dynamic-expand.md&#34;&gt;如何设计可以动态扩容缩容的分库分表方案？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/database-shard-global-id-generate.md&#34;&gt;分库分表之后，id 主键如何处理？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;读写分离&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/mysql-read-write-separation.md&#34;&gt;如何实现 MySQL 的读写分离？MySQL 主从复制原理是啥？如何解决 MySQL 主从同步的延时问题？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;高并发系统&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/high-concurrency-design.md&#34;&gt;如何设计一个高并发系统？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;分布式系统&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/distributed-system-interview.md&#34;&gt;面试连环炮&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;系统拆分&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/why-dubbo.md&#34;&gt;为什么要进行系统拆分？如何进行系统拆分？拆分后不用 Dubbo 可以吗？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式服务框架&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/dubbo-operating-principle.md&#34;&gt;说一下 Dubbo 的工作原理？注册中心挂了可以继续通信吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/dubbo-serialization-protocol.md&#34;&gt;Dubbo 支持哪些序列化协议？说一下 Hessian 的数据结构？PB 知道吗？为什么 PB 的效率是最高的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/dubbo-load-balancing.md&#34;&gt;Dubbo 负载均衡策略和集群容错策略都有哪些？动态代理策略呢？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/dubbo-spi.md&#34;&gt;Dubbo 的 spi 思想是什么？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/dubbo-service-management.md&#34;&gt;如何基于 Dubbo 进行服务治理、服务降级、失败重试以及超时重试？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/distributed-system-idempotency.md&#34;&gt;分布式服务接口的幂等性如何设计（比如不能重复扣款）？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/distributed-system-request-sequence.md&#34;&gt;分布式服务接口请求的顺序性如何保证？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/dubbo-rpc-design.md&#34;&gt;如何自己设计一个类似 Dubbo 的 RPC 框架？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/distributed-system-cap.md&#34;&gt;CAP 定理的 P 是什么？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式锁&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/zookeeper-application-scenarios.md&#34;&gt;Zookeeper 都有哪些应用场景？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/distributed-lock-redis-vs-zookeeper.md&#34;&gt;使用 Redis 如何设计分布式锁？使用 Zookeeper 来设计分布式锁可以吗？以上两种分布式锁的实现方式哪种效率比较高？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式事务&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/distributed-transaction.md&#34;&gt;分布式事务了解吗？你们如何解决分布式事务问题的？TCC 如果出现网络连不通怎么办？XA 的一致性如何保证？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式会话&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/distributed-system/distributed-session.md&#34;&gt;集群部署时的分布式 Session 如何实现？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;高可用架构&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-introduction.md&#34;&gt;Hystrix 介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/e-commerce-website-detail-page-architecture.md&#34;&gt;电商网站详情页系统架构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-thread-pool-isolation.md&#34;&gt;Hystrix 线程池技术实现资源隔离&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-semphore-isolation.md&#34;&gt;Hystrix 信号量机制实现资源隔离&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-execution-isolation.md&#34;&gt;Hystrix 隔离策略细粒度控制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-process.md&#34;&gt;深入 Hystrix 执行时内部原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-request-cache.md&#34;&gt;基于 request cache 请求缓存技术优化批量商品数据查询接口&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-fallback.md&#34;&gt;基于本地缓存的 fallback 降级机制&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-circuit-breaker.md&#34;&gt;深入 Hystrix 断路器执行原理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-thread-pool-current-limiting.md&#34;&gt;深入 Hystrix 线程池隔离与接口限流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/hystrix-timeout.md&#34;&gt;基于 timeout 机制为服务接口调用超时提供安全保护&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;高可用系统&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如何设计一个高可用系统？&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;限流&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-concurrency/how-to-limit-current.md&#34;&gt;如何限流？在工作中是怎么做的？说一下具体的实现？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;熔断&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如何进行熔断？&lt;/li&gt; &#xA; &lt;li&gt;熔断框架都有哪些？具体实现原理知道吗？&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/high-availability/sentinel-vs-hystrix.md&#34;&gt;熔断框架如何做技术选型？选用 Sentinel 还是 Hystrix？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;降级&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;如何进行降级？&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;微服务架构&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/doocs/advanced-java&#34;&gt;微服务架构整个章节内容属额外新增，后续抽空更新，也欢迎读者们参与补充完善&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/microservices-introduction.md&#34;&gt;关于微服务架构的描述&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/migrating-from-a-monolithic-architecture-to-a-microservices-architecture.md&#34;&gt;从单体式架构迁移到微服务架构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/event-driven-data-management-for-microservices.md&#34;&gt;微服务的事件驱动数据管理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/choose-microservice-deployment-strategy.md&#34;&gt;选择微服务部署策略&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/advantages-and-disadvantages-of-microservice.md&#34;&gt;微服务架构的优势与不足&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Spring Cloud 微服务架构&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/what&#39;s-microservice-how-to-communicate.md&#34;&gt;什么是微服务？微服务之间是如何独立通讯的？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Spring Cloud 和 Dubbo 有哪些区别？&lt;/li&gt; &#xA; &lt;li&gt;Spring Boot 和 Spring Cloud，谈谈你对它们的理解？&lt;/li&gt; &#xA; &lt;li&gt;什么是服务熔断？什么是服务降级？&lt;/li&gt; &#xA; &lt;li&gt;微服务的优缺点分别是什么？说一下你在项目开发中碰到的坑？&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/micro-services-technology-stack.md&#34;&gt;你所知道的微服务技术栈都有哪些？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/micro-service-governance.md&#34;&gt;微服务治理策略&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Eureka 和 Zookeeper 都可以提供服务注册与发现的功能，它们有什么区别？&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/micro-services/how-eureka-enable-service-discovery-and-service-registration.md&#34;&gt;谈谈服务发现组件 Eureka 的主要调用过程？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;......&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;海量数据处理&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/find-common-urls.md&#34;&gt;如何从大量的 URL 中找出相同的 URL？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/find-top-100-words.md&#34;&gt;如何从大量数据中找出高频词？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/find-top-1-ip.md&#34;&gt;如何找出某一天访问百度网站最多的 IP？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/find-no-repeat-number.md&#34;&gt;如何在大量的数据中找出不重复的整数？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/find-a-number-if-exists.md&#34;&gt;如何在大量的数据中判断一个数是否存在？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/find-hotest-query-string.md&#34;&gt;如何查询最热门的查询串？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/count-different-phone-numbers.md&#34;&gt;如何统计不同电话号码的个数？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/find-mid-value-in-500-millions.md&#34;&gt;如何从 5 亿个数中找出中位数？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/sort-the-query-strings-by-counts.md&#34;&gt;如何按照 query 的频度排序？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/find-rank-top-500-numbers.md&#34;&gt;如何找出排名前 500 的数？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/docs/big-data/topk-problems-and-solutions.md&#34;&gt;讲讲大数据中 TopK 问题的常用套路？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Stars 趋势&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doocs/advanced-java/stargazers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/images/starcharts.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;注：本趋势图由 &lt;a href=&#34;https://github.com/MaoLongLong/actions-starcharts&#34;&gt;actions-starcharts&lt;/a&gt; 自动定时刷新。&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Doocs 社区优质项目&lt;/h2&gt; &#xA;&lt;p&gt;Doocs 技术社区，致力于打造一个内容完整、持续成长的互联网开发者学习生态圈！以下是 Doocs 旗下的一些优秀项目，欢迎各位开发者朋友持续保持关注。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;#&lt;/th&gt; &#xA;   &lt;th&gt;项目&lt;/th&gt; &#xA;   &lt;th&gt;描述&lt;/th&gt; &#xA;   &lt;th&gt;热度&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/doocs/advanced-java&#34;&gt;advanced-java&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://badgen.net/github/stars/doocs/advanced-java&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://badgen.net/github/forks/doocs/advanced-java&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;leetcode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;多种编程语言实现 LeetCode、《剑指 Offer（第 2 版）》、《程序员面试金典（第 6 版）》题解。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://badgen.net/github/stars/doocs/leetcode&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://badgen.net/github/forks/doocs/leetcode&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/doocs/source-code-hunter&#34;&gt;source-code-hunter&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;互联网常用组件框架源码分析。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://badgen.net/github/stars/doocs/source-code-hunter&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://badgen.net/github/forks/doocs/source-code-hunter&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/doocs/jvm&#34;&gt;jvm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java 虚拟机底层原理知识总结。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://badgen.net/github/stars/doocs/jvm&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://badgen.net/github/forks/doocs/jvm&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/doocs/coding-interview&#34;&gt;coding-interview&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;代码面试题集，包括《剑指 Offer》、《编程之美》等。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://badgen.net/github/stars/doocs/coding-interview&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://badgen.net/github/forks/doocs/coding-interview&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/doocs/md&#34;&gt;md&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;一款高度简洁的微信 Markdown 编辑器。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://badgen.net/github/stars/doocs/md&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://badgen.net/github/forks/doocs/md&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/doocs/technical-books&#34;&gt;technical-books&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;值得一看的技术书籍列表。&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://badgen.net/github/stars/doocs/technical-books&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;img src=&#34;https://badgen.net/github/forks/doocs/technical-books&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;贡献者&lt;/h2&gt; &#xA;&lt;p&gt;感谢以下所有朋友对 &lt;a href=&#34;https://github.com/doocs&#34;&gt;Doocs 技术社区&lt;/a&gt; 所做出的贡献，&lt;a href=&#34;https://doocs.github.io/#/?id=how-to-join&#34;&gt;参与项目维护请戳这儿&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST: START - Do not remove or modify this section --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/doocs/contributors.svg?width=890&amp;amp;button=true&#34;&gt;&lt;img src=&#34;https://opencollective.com/doocs/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST: END --&gt; &#xA;&lt;h2&gt;公众号&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doocs&#34;&gt;Doocs&lt;/a&gt; 技术社区旗下唯一公众号「&lt;strong&gt;Doocs&lt;/strong&gt;」​，欢迎扫码关注，&lt;strong&gt;专注分享技术领域相关知识及行业最新资讯&lt;/strong&gt;。当然，也可以加我个人微信（备注：GitHub），拉你进技术交流群。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;width: 200px;&#34;&gt; &lt;a href=&#34;https://github.com/doocs&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/images/qrcode-for-doocs.jpg&#34; style=&#34;width: 400px;&#34;&gt;&lt;br&gt; &lt;sub&gt;公众平台&lt;/sub&gt; &lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; style=&#34;width: 200px;&#34;&gt; &lt;a href=&#34;https://github.com/yanglbme&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/images/qrcode-for-yanglbme.jpg&#34; style=&#34;width: 400px;&#34;&gt;&lt;br&gt; &lt;sub&gt;个人微信&lt;/sub&gt; &lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;关注「&lt;strong&gt;Doocs&lt;/strong&gt;」公众号，回复 &lt;strong&gt;PDF&lt;/strong&gt;，即可获取本项目离线 PDF 文档（283 页精华），学习更加方便！&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/doocs/advanced-java/main/images/pdf.png&#34; style=&#34;width: 600px;&#34;&gt;&lt;br&gt;&lt;/p&gt;</summary>
  </entry>
</feed>