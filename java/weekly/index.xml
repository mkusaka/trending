<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-13T01:44:34Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kafbat/kafka-ui</title>
    <updated>2024-10-13T01:44:34Z</updated>
    <id>tag:github.com,2024-10-13:/kafbat/kafka-ui</id>
    <link href="https://github.com/kafbat/kafka-ui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-Source Web UI for managing Apache Kafka clusters&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/logo_new.png&#34; alt=&#34;logo&#34;&gt; &#xA; &lt;h3&gt;Kafbat UI&lt;/h3&gt; &#xA; &lt;p&gt;Versatile, fast and lightweight web UI for managing Apache Kafka® clusters.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/kafbat/kafka-ui/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/free-open-source.svg?sanitize=true&#34; alt=&#34;price free&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/kafbat/kafka-ui/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/kafbat/kafka-ui&#34; alt=&#34;latest release version&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://discord.gg/4DWzD7pGE5&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/897805035122077716&#34; alt=&#34;discord online number count&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://github.com/sponsors/kafbat&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/kafbat?style=flat&amp;amp;logo=githubsponsors&amp;amp;logoColor=%23EA4AAA&amp;amp;label=Support%20us&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://ui.docs.kafbat.io/&#34;&gt;Documentation&lt;/a&gt; • &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/quick-start&#34;&gt;Quick Start&lt;/a&gt; • &lt;a href=&#34;https://discord.gg/4DWzD7pGE5&#34;&gt;Community&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://aws.amazon.com/marketplace/pp/%7BreplaceMe%7D&#34;&gt;AWS Marketplace&lt;/a&gt; • &lt;a href=&#34;https://www.producthunt.com/products/ui-for-apache-kafka/reviews/new&#34;&gt;ProductHunt&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://repobeats.axiom.co/api/embed/88d2bd9887380c7d86e2f986725d9af52ebad7f4.svg?sanitize=true&#34; alt=&#34;stats&#34;&gt; &lt;/p&gt; &#xA;&lt;h4&gt;Kafbat UI is a free, open-source web UI to monitor and manage Apache Kafka clusters.&lt;/h4&gt; &#xA;&lt;p&gt;Kafbat UI is a simple tool that makes your data flows observable, helps find and troubleshoot issues faster and deliver optimal performance. Its lightweight dashboard makes it easy to track key metrics of your Kafka clusters - Brokers, Topics, Partitions, Production, and Consumption.&lt;/p&gt; &#xA;&lt;i&gt; Kafbat UI, developed by &lt;b&gt;Kafbat&lt;/b&gt;*, proudly carries forward the legacy of the UI Apache Kafka project. Our dedication is reflected in the continuous evolution of the project, ensuring adherence to its foundational vision while adapting to meet modern demands. We extend our gratitude to Provectus for their past support in groundbreaking work, which serves as a cornerstone for our ongoing innovation and dedication. &lt;/i&gt;&#xA;&lt;p&gt;&lt;i&gt;&lt;b&gt;*&lt;/b&gt; - The &lt;b&gt;Kafbat&lt;/b&gt; team comprises key contributors from the project&#39;s inception, bringing a wealth of experience and insight to this renewed endeavor. &lt;/i&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Interface&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/images/overview.gif&#34; alt=&#34;Interface&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-Cluster Management&lt;/strong&gt; — monitor and manage all your clusters in one place&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Performance Monitoring with Metrics Dashboard&lt;/strong&gt; — track key Kafka metrics with a lightweight dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Kafka Brokers&lt;/strong&gt; — view topic and partition assignments, controller status&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Kafka Topics&lt;/strong&gt; — view partition count, replication status, and custom configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;View Consumer Groups&lt;/strong&gt; — view per-partition parked offsets, combined and per-partition lag&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Browse Messages&lt;/strong&gt; — browse messages with JSON, plain text, and Avro encoding&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Topic Configuration&lt;/strong&gt; — create and configure new topics with dynamic configuration&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable Authentification&lt;/strong&gt; — &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/authentication&#34;&gt;secure&lt;/a&gt; your installation with optional Github/Gitlab/Google OAuth 2.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom serialization/deserialization plugins&lt;/strong&gt; - &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/serialization-serde&#34;&gt;use&lt;/a&gt; a ready-to-go serde for your data like AWS Glue or Smile, or code your own!&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Role based access control&lt;/strong&gt; - &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/rbac-role-based-access-control&#34;&gt;manage permissions&lt;/a&gt; to access the UI with granular precision&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Data masking&lt;/strong&gt; - &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/data-masking&#34;&gt;obfuscate&lt;/a&gt; sensitive data in topic messages&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feature overview&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click here for the feature overview&lt;/summary&gt; &#xA; &lt;h1&gt;The Interface&lt;/h1&gt; &#xA; &lt;p&gt;Kafbat UI wraps major functions of Apache Kafka with an intuitive user interface.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Interface.gif&#34; alt=&#34;Interface&#34;&gt;&lt;/p&gt; &#xA; &lt;h2&gt;Topics&lt;/h2&gt; &#xA; &lt;p&gt;Kafbat UI makes it easy for you to create topics in your browser by several clicks, pasting your own parameters, and viewing topics in the list.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Create_topic_kafka-ui.gif&#34; alt=&#34;Create Topic&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;It&#39;s possible to jump from connectors view to corresponding topics and from a topic to consumers (back and forth) for more convenient navigation. connectors, overview topic settings.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Connector_Topic_Consumer.gif&#34; alt=&#34;Connector_Topic_Consumer&#34;&gt;&lt;/p&gt; &#xA; &lt;h3&gt;Messages&lt;/h3&gt; &#xA; &lt;p&gt;Let&#39;s say we want to produce messages for our topic. With the Kafbat UI we can send or write data/messages to the Kafka topics without effort by specifying parameters, and viewing messages in the list.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Create_message_kafka-ui.gif&#34; alt=&#34;Produce Message&#34;&gt;&lt;/p&gt; &#xA; &lt;h2&gt;Schema registry&lt;/h2&gt; &#xA; &lt;p&gt;There are 3 supported types of schemas: Avro®, JSON Schema, and Protobuf schemas.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Create_schema.gif&#34; alt=&#34;Create Schema Registry&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;Before producing avro/protobuf encoded messages, you have to add a schema for the topic in Schema Registry. Now all these steps are easy to do with a few clicks in a user-friendly interface.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kafbat/kafka-ui/main/documentation/images/Schema_Topic.gif&#34; alt=&#34;Avro Schema Topic&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;To run Kafbat UI, you can use either a pre-built Docker image or build it (or a jar file) yourself.&lt;/p&gt; &#xA;&lt;h2&gt;Quick start (Demo run)&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -it -p 8080:8080 -e DYNAMIC_CONFIG_ENABLED=true ghcr.io/kafbat/kafka-ui&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then access the web UI at &lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The command is sufficient to try things out. When you&#39;re done trying things out, you can proceed with a &lt;a href=&#34;https://ui.docs.kafbat.io/quick-start/persistent-start&#34;&gt;persistent installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Persistent installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;services:&#xA;  kafbat-ui:&#xA;    container_name: kafbat-ui&#xA;    image: ghcr.io/kafbat/kafka-ui:latest&#xA;    ports:&#xA;      - 8080:8080&#xA;    environment:&#xA;      DYNAMIC_CONFIG_ENABLED: &#39;true&#39;&#xA;    volumes:&#xA;      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/configuration-file&#34;&gt;configuration&lt;/a&gt; page to proceed with further app configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Some useful configuration related links&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/configuration-wizard&#34;&gt;Web UI Cluster Configuration Wizard&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/configuration-file&#34;&gt;Configuration file explanation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/compose-examples&#34;&gt;Docker Compose examples&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/misc-configuration-properties&#34;&gt;Misc configuration properties&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Helm charts&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/configuration/helm-charts/quick-start&#34;&gt;Quick start&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building from sources&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ui.docs.kafbat.io/development/building/prerequisites&#34;&gt;Quick start&lt;/a&gt; with building&lt;/p&gt; &#xA;&lt;h2&gt;Liveliness and readiness probes&lt;/h2&gt; &#xA;&lt;p&gt;Liveliness and readiness endpoint is at &lt;code&gt;/actuator/health&lt;/code&gt;.&lt;br&gt; Info endpoint (build info) is located at &lt;code&gt;/actuator/info&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration options&lt;/h1&gt; &#xA;&lt;p&gt;All the environment variables/config properties could be found &lt;a href=&#34;https://ui.docs.kafbat.io/configuration/misc-configuration-properties&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://ui.docs.kafbat.io/development/contributing&#34;&gt;contributing guide&lt;/a&gt;, we&#39;ll guide you from there.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;As we&#39;re fully independent, team members contribute in their free time. Your support is crucial for us, if you wish to sponsor us, take a look &lt;a href=&#34;https://github.com/sponsors/kafbat&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/nifi</title>
    <updated>2024-10-13T01:44:34Z</updated>
    <id>tag:github.com,2024-10-13:/apache/nifi</id>
    <link href="https://github.com/apache/nifi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache NiFi&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://nifi.apache.org/&#34;&gt;&lt;img src=&#34;https://nifi.apache.org/assets/images/apache-nifi-logo.svg?sanitize=true&#34; width=&#34;300&#34; height=&#34;126&#34; alt=&#34;Apache NiFi&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/nifi/actions/workflows/ci-workflow.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/nifi/workflows/ci-workflow/badge.svg?sanitize=true&#34; alt=&#34;ci-workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/nifi/actions/workflows/system-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/nifi/workflows/system-tests/badge.svg?sanitize=true&#34; alt=&#34;system-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/nifi/actions/workflows/integration-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/nifi/actions/workflows/integration-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;integration-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/nifi/actions/workflows/docker-tests.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/nifi/actions/workflows/docker-tests.yml/badge.svg?sanitize=true&#34; alt=&#34;docker-tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apache/nifi/actions/workflows/code-coverage.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/nifi/actions/workflows/code-coverage.yml/badge.svg?sanitize=true&#34; alt=&#34;code-coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/apache/nifi&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/apache/nifi/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/apache/nifi/&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/pulls/apache/nifi.svg?sanitize=true&#34; alt=&#34;Docker pulls&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nifi.apache.org/download.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.apache.nifi/nifi-utils.svg?sanitize=true&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://s.apache.org/nifi-community-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20Slack-brightgreen.svg?sanitize=true&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://nifi.apache.org/&#34;&gt;Apache NiFi&lt;/a&gt; is an easy to use, powerful, and reliable system to process and distribute data.&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#getting-started&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#minifi-subproject&#34;&gt;MiNiFi subproject&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#registry-subproject&#34;&gt;Registry subproject&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#getting-help&#34;&gt;Getting Help&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#export-control&#34;&gt;Export Control&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Apache NiFi was made for dataflow. It supports highly configurable directed graphs of data routing, transformation, and system mediation logic. Some of its key features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Web-based user interface &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Seamless experience for design, control, and monitoring&lt;/li&gt; &#xA;   &lt;li&gt;Multi-tenant user experience&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Highly configurable &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Loss tolerant vs guaranteed delivery&lt;/li&gt; &#xA;   &lt;li&gt;Low latency vs high throughput&lt;/li&gt; &#xA;   &lt;li&gt;Dynamic prioritization&lt;/li&gt; &#xA;   &lt;li&gt;Flows can be modified at runtime&lt;/li&gt; &#xA;   &lt;li&gt;Back pressure&lt;/li&gt; &#xA;   &lt;li&gt;Scales up to leverage full machine capability&lt;/li&gt; &#xA;   &lt;li&gt;Scales out with zero-leader clustering model&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Data Provenance &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Track dataflow from beginning to end&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Designed for extension &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Build your own processors and more&lt;/li&gt; &#xA;   &lt;li&gt;Enables rapid development and effective testing&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Secure &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;SSL, SSH, HTTPS, encrypted content, etc...&lt;/li&gt; &#xA;   &lt;li&gt;Pluggable fine-grained role-based authentication/authorization&lt;/li&gt; &#xA;   &lt;li&gt;Multiple teams can manage and share specific portions of the flow&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Minimum Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 21&lt;/li&gt; &#xA; &lt;li&gt;Apache Maven 3.9.6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Read through the &lt;a href=&#34;https://nifi.apache.org/quickstart.html&#34;&gt;quickstart guide for development&lt;/a&gt;. It will include information on getting a local copy of the source, give pointers on issue tracking, and provide some warnings about common problems with development environments.&lt;/p&gt; &#xA;&lt;p&gt;For a more comprehensive guide to development and information about contributing to the project read through the &lt;a href=&#34;https://nifi.apache.org/developer-guide.html&#34;&gt;NiFi Developer&#39;s Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Run the following Maven command to build standard project modules using parallel execution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./mvnw clean install -T2C&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the following Maven command to build project modules with static analysis to confirm compliance with code and licensing requirements:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./mvnw clean install -T2C -P contrib-check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Building on Microsoft Windows requires using &lt;code&gt;mvnw.cmd&lt;/code&gt; instead of &lt;code&gt;mwnw&lt;/code&gt; to run the Maven Wrapper.&lt;/p&gt; &#xA;&lt;h3&gt;Deploying&lt;/h3&gt; &#xA;&lt;p&gt;Change directories to &lt;code&gt;nifi-assembly&lt;/code&gt;. The &lt;code&gt;target&lt;/code&gt; directory contains binary archives.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;laptop:nifi myuser$ cd nifi-assembly&#xA;laptop:nifi-assembly myuser$ ls -lhd target/nifi*&#xA;drwxr-xr-x  3 myuser  mygroup   102B Apr 30 00:29 target/nifi-1.0.0-SNAPSHOT-bin&#xA;-rw-r--r--  1 myuser  mygroup   144M Apr 30 00:30 target/nifi-1.0.0-SNAPSHOT-bin.tar.gz&#xA;-rw-r--r--  1 myuser  mygroup   144M Apr 30 00:30 target/nifi-1.0.0-SNAPSHOT-bin.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Copy the &lt;code&gt;nifi-VERSION-bin.tar.gz&lt;/code&gt; or &lt;code&gt;nifi-VERSION-bin.zip&lt;/code&gt; to a separate deployment directory. Extracting the distribution will create a new directory named for the version.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;laptop:nifi-assembly myuser$ mkdir ~/example-nifi-deploy&#xA;laptop:nifi-assembly myuser$ tar xzf target/nifi-*-bin.tar.gz -C ~/example-nifi-deploy&#xA;laptop:nifi-assembly myuser$ ls -lh ~/example-nifi-deploy/&#xA;total 0&#xA;drwxr-xr-x  10 myuser  mygroup   340B Apr 30 01:06 nifi-1.0.0-SNAPSHOT&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Starting&lt;/h3&gt; &#xA;&lt;p&gt;Change directories to the deployment location and run the following command to start NiFi.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;laptop:~ myuser$ cd ~/example-nifi-deploy/nifi-*&#xA;laptop:nifi-1.0.0-SNAPSHOT myuser$ ./bin/nifi.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Running &lt;code&gt;bin/nifi.sh start&lt;/code&gt; starts NiFi in the background and exits. Use &lt;code&gt;--wait-for-init&lt;/code&gt; with an optional timeout in seconds to wait for a complete startup before exiting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;laptop:nifi-1.0.0-SNAPSHOT myuser$ ./bin/nifi.sh start --wait-for-init 120&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authenticating&lt;/h3&gt; &#xA;&lt;p&gt;The default configuration generates a random username and password on startup. NiFi writes the generated credentials to the application log located in &lt;code&gt;logs/nifi-app.log&lt;/code&gt; under the NiFi installation directory.&lt;/p&gt; &#xA;&lt;p&gt;The following command can be used to find the generated credentials on operating systems with &lt;code&gt;grep&lt;/code&gt; installed:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;laptop:nifi-1.0.0-SNAPSHOT myuser$ grep Generated logs/nifi-app*log&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NiFi logs the generated credentials as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Generated Username [USERNAME]&#xA;Generated Password [PASSWORD]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;USERNAME&lt;/code&gt; will be a random UUID composed of 36 characters. The &lt;code&gt;PASSWORD&lt;/code&gt; will be a random string composed of 32 characters. The generated credentials will be stored in &lt;code&gt;conf/login-identity-providers.xml&lt;/code&gt; with the password stored using bcrypt hashing. Record these credentials in a secure location for access to NiFi.&lt;/p&gt; &#xA;&lt;p&gt;The random username and password can be replaced with custom credentials using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./bin/nifi.sh set-single-user-credentials &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;p&gt;Open the following link in a web browser to access NiFi: &lt;a href=&#34;https://localhost:8443/nifi&#34;&gt;https://localhost:8443/nifi&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The web browser will display a warning message indicating a potential security risk due to the self-signed certificate NiFi generated during initialization. Accepting the potential security risk and continuing to load the interface is an option for initial development installations. Production deployments should provision a certificate from a trusted certificate authority and update the NiFi keystore and truststore configuration.&lt;/p&gt; &#xA;&lt;p&gt;Accessing NiFi after accepting the self-signed certificate will display the login screen. &lt;img src=&#34;https://raw.githubusercontent.com/apache/nifi/main/nifi-docs/src/main/asciidoc/images/nifi-login.png?raw=true&#34; alt=&#34;NiFi Login Screen&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Using the generated credentials, enter the generated username in the &lt;code&gt;User&lt;/code&gt; field and the generated password in the &lt;code&gt;Password&lt;/code&gt; field, then select &lt;code&gt;LOG IN&lt;/code&gt; to access the system. &lt;img src=&#34;https://raw.githubusercontent.com/apache/nifi/main/nifi-docs/src/main/asciidoc/images/nifi-flow-authenticated.png?raw=true&#34; alt=&#34;NiFi Flow Authenticated Screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Configuring&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://nifi.apache.org/docs/nifi-docs/html/user-guide.html&#34;&gt;NiFi User Guide&lt;/a&gt; describes how to build a data flow.&lt;/p&gt; &#xA;&lt;h3&gt;Stopping&lt;/h3&gt; &#xA;&lt;p&gt;Run the following command to stop NiFi:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;laptop:~ myuser$ cd ~/example-nifi-deploy/nifi-*&#xA;laptop:nifi-1.0.0-SNAPSHOT myuser$ ./bin/nifi.sh stop&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;MiNiFi subproject&lt;/h2&gt; &#xA;&lt;p&gt;MiNiFi is a child project effort of Apache NiFi. It is a complementary data collection approach that supplements the core tenets of &lt;a href=&#34;https://nifi.apache.org/&#34;&gt;NiFi&lt;/a&gt; in dataflow management, focusing on the collection of data at the source of its creation.&lt;/p&gt; &#xA;&lt;p&gt;Specific goals for MiNiFi are comprised of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;small and lightweight footprint&lt;/li&gt; &#xA; &lt;li&gt;central management of agents&lt;/li&gt; &#xA; &lt;li&gt;generation of data provenance&lt;/li&gt; &#xA; &lt;li&gt;integration with NiFi for follow-on dataflow management and full chain of custody of information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Perspectives of the role of MiNiFi should be from the perspective of the agent acting immediately at, or directly adjacent to, source sensors, systems, or servers.&lt;/p&gt; &#xA;&lt;p&gt;To run:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Change directory to &#39;minifi-assembly&#39;. In the target directory, there should be a build of minifi.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ cd minifi-assembly&#xA;  $ ls -lhd target/minifi*&#xA;  drwxr-xr-x  3 user  staff   102B Jul  6 13:07 minifi-1.14.0-SNAPSHOT-bin&#xA;  -rw-r--r--  1 user  staff    39M Jul  6 13:07 minifi-1.14.0-SNAPSHOT-bin.tar.gz&#xA;  -rw-r--r--  1 user  staff    39M Jul  6 13:07 minifi-1.14.0-SNAPSHOT-bin.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For testing ongoing development you could use the already unpacked build present in the directory named &#34;minifi-&lt;em&gt;version&lt;/em&gt;-bin&#34;, where &lt;em&gt;version&lt;/em&gt; is the current project version. To deploy in another location make use of either the tarball or zipfile and unpack them wherever you like. The distribution will be within a common parent directory named for the version.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ mkdir ~/example-minifi-deploy&#xA;  $ tar xzf target/minifi-*-bin.tar.gz -C ~/example-minifi-deploy&#xA;  $ ls -lh ~/example-minifi-deploy/&#xA;  total 0&#xA;  drwxr-xr-x  10 user  staff   340B Jul 6 01:06 minifi-1.14.0-SNAPSHOT&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To run MiNiFi:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Change directory to the location where you installed MiNiFi and run it.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ cd ~/example-minifi-deploy/minifi-*&#xA;  $ ./bin/minifi.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;View the logs located in the logs folder $ tail -F ~/example-minifi-deploy/logs/minifi-app.log&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For help building your first data flow and sending data to a NiFi instance see the System Admin Guide located in the docs folder or making use of the minifi-toolkit.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are testing ongoing development, you will likely want to stop your instance.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;  $ cd ~/example-minifi-deploy/minifi-*&#xA;  $ ./bin/minifi.sh stop&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker Build&lt;/h3&gt; &#xA;&lt;p&gt;To build:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run a full NiFi build (see above for instructions). Then from the minifi/ subdirectory, execute &lt;code&gt;mvn -P docker clean install&lt;/code&gt;. This will run the full build, create a docker image based on it, and run docker-compose integration tests. After it completes successfully, you should have an apacheminifi:${minifi.version} image that can be started with the following command (replacing ${minifi.version} with the current maven version of your branch):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -d -v YOUR_CONFIG.YML:/opt/minifi/minifi-${minifi.version}/conf/config.yml apacheminifi:${minifi.version}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Registry subproject&lt;/h2&gt; &#xA;&lt;p&gt;Registry—a subproject of Apache NiFi—is a complementary application that provides a central location for storage and management of shared resources across one or more instances of NiFi and/or MiNiFi.&lt;/p&gt; &#xA;&lt;h3&gt;Getting Registry Started&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Build NiFi (see &lt;a href=&#34;https://raw.githubusercontent.com/apache/nifi/main/#getting-started&#34;&gt;Getting Started for NiFi&lt;/a&gt; )&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;p&gt;Build only the Registry subproject:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd nifi/nifi-registry&#xA;mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you wish to enable style and license checks, specify the contrib-check profile:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn clean install -Pcontrib-check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Registry&lt;/p&gt; &lt;p&gt;cd nifi-registry/nifi-registry-assembly/target/nifi-registry-&#xA;   &lt;version&gt;&#xA;    -bin/nifi-registry-&#xA;    &lt;version&gt;&#xA;     / ./bin/nifi-registry.sh start&#xA;    &lt;/version&gt;&#xA;   &lt;/version&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Note that the application web server can take a while to load before it is accessible.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Accessing the application web UI&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;With the default settings, the application UI will be available at &lt;a href=&#34;http://localhost:18080/nifi-registry&#34;&gt;http://localhost:18080/nifi-registry&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Accessing the application REST API&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you wish to test against the application REST API, you can access the REST API directly. With the default settings, the base URL of the REST API will be at &lt;code&gt;http://localhost:18080/nifi-registry-api&lt;/code&gt;. A UI for testing the REST API will be available at &lt;a href=&#34;http://localhost:18080/nifi-registry-api/swagger/ui.html&#34;&gt;http://localhost:18080/nifi-registry-api/swagger/ui.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Accessing the application logs&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Logs will be available in &lt;code&gt;logs/nifi-registry-app.log&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Database Testing&lt;/h3&gt; &#xA;&lt;p&gt;In order to ensure that NiFi Registry works correctly against different relational databases, the existing integration tests can be run against different databases by leveraging the &lt;a href=&#34;https://www.testcontainers.org/&#34;&gt;Testcontainers framework&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Spring profiles are used to control the DataSource factory that will be made available to the Spring application context. DataSource factories are provided that use the Testcontainers framework to start a Docker container for a given database and create a corresponding DataSource. If no profile is specified then an H2 DataSource will be used by default and no Docker containers are required.&lt;/p&gt; &#xA;&lt;p&gt;Assuming Docker is running on the system where the build is running, then the following commands can be run:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Target Database&lt;/th&gt; &#xA;   &lt;th&gt;Build Command&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;All supported&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mvn verify -Ptest-all-dbs&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;H2 (default)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mvn verify&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MariaDB 10.3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mvn verify -Pcontrib-check -Dspring.profiles.active=mariadb-10-3&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MySQL 8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mvn verify -Pcontrib-check -Dspring.profiles.active=mysql-8&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PostgreSQL 10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mvn verify -Dspring.profiles.active=postgres-10&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For a full list of the available DataSource factories, consult the &lt;code&gt;nifi-registry-test&lt;/code&gt; module.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Help&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions, you can reach out to our mailing list: &lt;a href=&#34;mailto:dev@nifi.apache.org&#34;&gt;dev@nifi.apache.org&lt;/a&gt; (&lt;a href=&#34;https://lists.apache.org/list.html?dev@nifi.apache.org&#34;&gt;archive&lt;/a&gt;). For more interactive discussions, community members can often be found in the following locations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Apache NiFi Slack Workspace: &lt;a href=&#34;https://apachenifi.slack.com/&#34;&gt;https://apachenifi.slack.com/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;New users can join the workspace using the following &lt;a href=&#34;https://join.slack.com/t/apachenifi/shared_invite/zt-11njbtkdx-ZRU8FKYSWoEHRJetidy0zA&#34;&gt;invite link&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To submit a feature request or bug report, please file a Jira at &lt;a href=&#34;https://issues.apache.org/jira/projects/NIFI/issues&#34;&gt;https://issues.apache.org/jira/projects/NIFI/issues&lt;/a&gt;. If this is a &lt;strong&gt;security vulnerability report&lt;/strong&gt;, please email &lt;a href=&#34;mailto:security@nifi.apache.org&#34;&gt;security@nifi.apache.org&lt;/a&gt; directly and review the &lt;a href=&#34;https://nifi.apache.org/security.html&#34;&gt;Apache NiFi Security Vulnerability Disclosure&lt;/a&gt; and &lt;a href=&#34;https://www.apache.org/security/committers.html&#34;&gt;Apache Software Foundation Security&lt;/a&gt; processes first.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://nifi.apache.org/&#34;&gt;https://nifi.apache.org/&lt;/a&gt; for the latest NiFi documentation.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://nifi.apache.org/minifi&#34;&gt;https://nifi.apache.org/minifi&lt;/a&gt; and &lt;a href=&#34;https://cwiki.apache.org/confluence/display/MINIFI&#34;&gt;https://cwiki.apache.org/confluence/display/MINIFI&lt;/a&gt; for the latest MiNiFi-specific documentation.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://nifi.apache.org/registry&#34;&gt;https://nifi.apache.org/registry&lt;/a&gt; for the latest Registry-specific documentation.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Except as otherwise noted this software is licensed under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;Apache License, Version 2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;h2&gt;Export Control&lt;/h2&gt; &#xA;&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country&#39;s laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href=&#34;https://www.wassenaar.org/&#34;&gt;https://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this Apache Software Foundation distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; &#xA;&lt;p&gt;The following provides more details on the included cryptographic software:&lt;/p&gt; &#xA;&lt;p&gt;Apache NiFi uses BouncyCastle, JCraft Inc., and the built-in Java cryptography libraries for SSL, SSH, and the protection of sensitive configuration parameters. See&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bouncycastle.org/about.html&#34;&gt;https://bouncycastle.org/about.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.jcraft.com/c-info.html&#34;&gt;http://www.jcraft.com/c-info.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oracle.com/corporate/security-practices/corporate/governance/global-trade-compliance.html&#34;&gt;https://www.oracle.com/corporate/security-practices/corporate/governance/global-trade-compliance.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;for more details on each of these libraries cryptography features.&lt;/p&gt;</summary>
  </entry>
</feed>