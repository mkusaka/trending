<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-25T01:41:22Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>devopshydclub/vprofile-project</title>
    <updated>2022-12-25T01:41:22Z</updated>
    <id>tag:github.com,2022-12-25:/devopshydclub/vprofile-project</id>
    <link href="https://github.com/devopshydclub/vprofile-project" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Prerequisites&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 1.8 or later&lt;/li&gt; &#xA; &lt;li&gt;Maven 3 or later&lt;/li&gt; &#xA; &lt;li&gt;MySQL 5.6 or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Technologies&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spring MVC&lt;/li&gt; &#xA; &lt;li&gt;Spring Security&lt;/li&gt; &#xA; &lt;li&gt;Spring Data JPA&lt;/li&gt; &#xA; &lt;li&gt;Maven&lt;/li&gt; &#xA; &lt;li&gt;JSP&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Database&lt;/h1&gt; &#xA;&lt;p&gt;Here,we used Mysql DB MSQL DB Installation Steps for Linux ubuntu 14.04:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;$ sudo apt-get update&lt;/li&gt; &#xA; &lt;li&gt;$ sudo apt-get install mysql-server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then look for the file :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;/src/main/resources/accountsdb&lt;/li&gt; &#xA; &lt;li&gt;accountsdb.sql file is a mysql dump file.we have to import this dump to mysql db server&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;mysql -u &amp;lt;user_name&amp;gt; -p accounts &amp;lt; accountsdb.sql&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>valarchie/AgileBoot-Back-End</title>
    <updated>2022-12-25T01:41:22Z</updated>
    <id>tag:github.com,2022-12-25:/valarchie/AgileBoot-Back-End</id>
    <link href="https://github.com/valarchie/AgileBoot-Back-End" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 基于Ruoyi做了大量重构优化的全栈基础快速开发脚手架。🔥 采用Springboot + Vue 3 + Mybatis Plus + Redis + 更面向对象的业务建模 + 面向生产的项目（非玩具项目）。你的 ⭐️ Star ⭐️，是作者更新的动力！&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Release-V1.5.0-green.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/JDK-1.8+-green.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Spring%20Boot-2.7.1-blue.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://bladex.vip&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Author-valarchie-ff69b4.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://bladex.vip&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Copyright%20-@Agileboot-%23ff3f59.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;logo&#34; height=&#34;200&#34; src=&#34;https://oscimg.oschina.net/oscnet/up-eda2a402cc061f1f5f40d9ac4c084f4c98c.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34; style=&#34;margin: 30px 0 30px; font-weight: bold;&#34;&gt;AgileBoot v1.6.0&lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;基于SpringBoot+Vue3前后端分离的Java快速开发脚手架&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;⚡平台简介⚡&lt;/h2&gt; &#xA;&lt;p&gt;AgileBoot是一套开源的全栈精简快速开发平台，毫无保留给个人及企业免费使用。本项目的目标是做一款精简可靠，代码风格优良，项目规范的小型开发脚手架。 适合个人开发者的小型项目或者公司内部项目使用。也可作为供初学者学习使用的案例。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;前端采用Vue3、Element UI。对应前端仓库 &lt;a href=&#34;https://github.com/valarchie/AgileBoot-Front-End&#34;&gt;AgileBoot-Front-End&lt;/a&gt; ，保持同步更新。&lt;/li&gt; &#xA; &lt;li&gt;后端采用Spring Boot、Spring Security、Redis &amp;amp; Jwt、Mybatis Plus、MySql。&lt;/li&gt; &#xA; &lt;li&gt;权限认证使用Jwt，支持多终端认证系统。&lt;/li&gt; &#xA; &lt;li&gt;支持加载动态权限菜单，多方式轻松权限控制。&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;&lt;strong&gt;有大量的单元测试，集成测试覆盖确保业务逻辑正确&lt;/strong&gt;&lt;/em&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;有任何问题或者建议，可以在 &lt;em&gt;Issues&lt;/em&gt; 中提给作者。&lt;/p&gt; &#xA; &lt;p&gt;您的Issue比Star更重要&lt;/p&gt; &#xA; &lt;p&gt;如果觉得项目对您有帮助，可以来个Star ⭐&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;💥 在线体验 💥&lt;/h2&gt; &#xA;&lt;p&gt;演示地址：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.agileboot.vip&#34;&gt;www.agileboot.vip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.agileboot.cc&#34;&gt;www.agileboot.cc&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;账号密码：admin/admin123&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;🌴 项目背景 🌴&lt;/h2&gt; &#xA;&lt;p&gt;业余时间想做一些个人小项目，一开始找了很多开源项目比如Ruoyi / Jeecg / ElAdmin / RenRen-Fast / Guns / EAdmin&lt;br&gt; 最后本项目选择基于Ruoyi项目进行完全重构改造。&lt;br&gt; 首先非常感谢Ruoyi作者。但是Ruoyi项目存在太多缺陷。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;命名比较乱七八糟（很多很糟糕的命名，包括机翻英语乱用）&lt;/li&gt; &#xA; &lt;li&gt;项目分包以及模块比较乱&lt;/li&gt; &#xA; &lt;li&gt;比较原始的Controller &amp;gt; Service &amp;gt; DAO的开发模式。过于面向过程。&lt;/li&gt; &#xA; &lt;li&gt;一大堆自己造的轮子，并且没有UT覆盖。&lt;/li&gt; &#xA; &lt;li&gt;大量逻辑嵌套在if else块当中&lt;/li&gt; &#xA; &lt;li&gt;值的前后不统一，比如有的地方1代表是，有的地方1代表否&lt;/li&gt; &#xA; &lt;li&gt;很多很奇怪的代码写法（比如return result &amp;gt; 0 ? true:false.. 一言难尽）&lt;/li&gt; &#xA; &lt;li&gt;业务逻辑不集中，代码可读性较差。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;于是我做了大量的重构工作。&lt;/p&gt; &#xA;&lt;h3&gt;重构内容&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;规范： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;切分不同环境的启动文件&lt;/li&gt; &#xA;   &lt;li&gt;统一设计异常类&lt;/li&gt; &#xA;   &lt;li&gt;统一设计错误码并集中处理异常&lt;/li&gt; &#xA;   &lt;li&gt;统一系统内的变量并集中管理&lt;/li&gt; &#xA;   &lt;li&gt;统一返回模型&lt;/li&gt; &#xA;   &lt;li&gt;引入Google代码格式化模板&lt;/li&gt; &#xA;   &lt;li&gt;后端代码的命名基本都整改OK&lt;/li&gt; &#xA;   &lt;li&gt;前端代码的命名也非常混乱，进行了整改&lt;/li&gt; &#xA;   &lt;li&gt;规范系统内的常量&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;整改： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;引入hutool包以及guava包去掉大量自己造的轮子，尽可能使用现成的轮子&lt;/li&gt; &#xA;   &lt;li&gt;去除代码中大量的warning&lt;/li&gt; &#xA;   &lt;li&gt;引入lombok去除大量getter setter代码&lt;/li&gt; &#xA;   &lt;li&gt;调整日志级别&lt;/li&gt; &#xA;   &lt;li&gt;字典类型数据完全用Enum进行代替&lt;/li&gt; &#xA;   &lt;li&gt;移除SQL注入的Filter，因为迁移到Mybatis Plus就不会有这个注入的问题&lt;/li&gt; &#xA;   &lt;li&gt;XSS直接通过JSON序列化进行转义。&lt;/li&gt; &#xA;   &lt;li&gt;替换掉很多Deprecated的类以及配置&lt;/li&gt; &#xA;   &lt;li&gt;替换fastJson为Jackson&lt;/li&gt; &#xA;   &lt;li&gt;数据库的整体重构设计，缩减至10张表。&lt;/li&gt; &#xA;   &lt;li&gt;重新设计异步代码&lt;/li&gt; &#xA;   &lt;li&gt;前后端密码加密传输（更严谨的话，还是需要HTTPS）&lt;/li&gt; &#xA;   &lt;li&gt;重构权限校验和数据权限校验（直接都通过注解的形式）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;优化： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;优化异步服务&lt;/li&gt; &#xA;   &lt;li&gt;优化Redis缓存类，封装各个业务缓存，提供多级缓存实现&lt;/li&gt; &#xA;   &lt;li&gt;权限判断使用多级缓存&lt;/li&gt; &#xA;   &lt;li&gt;IP地址查询引入离线包&lt;/li&gt; &#xA;   &lt;li&gt;前端优化字典数据缓存&lt;/li&gt; &#xA;   &lt;li&gt;启动优化&lt;/li&gt; &#xA;   &lt;li&gt;i18n支持&lt;/li&gt; &#xA;   &lt;li&gt;优化excel工具类，代码更加简洁&lt;/li&gt; &#xA;   &lt;li&gt;将所有逻辑集中于Domain模块中&lt;/li&gt; &#xA;   &lt;li&gt;切面记录修改者和创建者&lt;/li&gt; &#xA;   &lt;li&gt;统一设置事务&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✨ 使用 ✨&lt;/h2&gt; &#xA;&lt;h3&gt;开发环境&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK&lt;/li&gt; &#xA; &lt;li&gt;Mysql&lt;/li&gt; &#xA; &lt;li&gt;Redis&lt;/li&gt; &#xA; &lt;li&gt;Node.js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;技术栈&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;技术&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;版本&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;springboot&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java项目必备框架&lt;/td&gt; &#xA;   &lt;td&gt;2.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;druid&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;alibaba数据库连接池&lt;/td&gt; &#xA;   &lt;td&gt;1.2.8&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;swagger&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;文档生成&lt;/td&gt; &#xA;   &lt;td&gt;3.0.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;mybatis-plus&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;数据库框架&lt;/td&gt; &#xA;   &lt;td&gt;3.5.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;hutool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;国产工具包（简单易用）&lt;/td&gt; &#xA;   &lt;td&gt;3.5.2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;mockito&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;单元测试模拟&lt;/td&gt; &#xA;   &lt;td&gt;1.10.19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;guava&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;谷歌工具包（提供简易缓存实现）&lt;/td&gt; &#xA;   &lt;td&gt;31.0.1-jre&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;junit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;单元测试&lt;/td&gt; &#xA;   &lt;td&gt;1.10.19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;h2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;内存数据库&lt;/td&gt; &#xA;   &lt;td&gt;1.10.19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;jackson&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;比较安全的Json框架&lt;/td&gt; &#xA;   &lt;td&gt;follow springboot&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;启动说明&lt;/h3&gt; &#xA;&lt;h4&gt;前置准备： 下载前后端代码&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/valarchie/AgileBoot-Back-End&#xA;git clone https://github.com/valarchie/AgileBoot-Front-End&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;安装好Mysql和Redis&lt;/h4&gt; &#xA;&lt;h4&gt;后端启动&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. 生成所需的数据库表&#xA;找到后端项目根目录下的sql目录中的agileboot_xxxxx.sql脚本文件。 导入到你新建的数据库中。&#xA;&#xA;2. 在infrastructure模块底下，找到resource目录下的application-dev.yml文件&#xA;配置数据库以及Redis的 地址、端口、账号密码&#xA;&#xA;3. 在根目录执行mvn install&#xA;&#xA;4. 找到agileboot-admin模块中的AgileBootAdminApplication启动类，直接启动即可&#xA;&#xA;5. 当出现以下字样即为启动成功&#xA;  ____   _                _                                                           __         _  _ &#xA; / ___| | |_  __ _  _ __ | |_   _   _  _ __    ___  _   _   ___  ___  ___  ___  ___  / _| _   _ | || |&#xA; \___ \ | __|/ _` || &#39;__|| __| | | | || &#39;_ \  / __|| | | | / __|/ __|/ _ \/ __|/ __|| |_ | | | || || |&#xA;  ___) || |_| (_| || |   | |_  | |_| || |_) | \__ \| |_| || (__| (__|  __/\__ \\__ \|  _|| |_| || ||_|&#xA; |____/  \__|\__,_||_|    \__|  \__,_|| .__/  |___/ \__,_| \___|\___|\___||___/|___/|_|   \__,_||_|(_)&#xA;                                      |_|                             &#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;前端启动&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. npm install&#xA;&#xA;2. npm run dev&#xA;&#xA;3. 当出现以下字样时即为启动成功&#xA;&#xA;vite v2.6.14 dev server running at:&#xA;&#xA;&amp;gt; Local: http://127.0.0.1:80/&#xA;&#xA;ready in 4376ms.&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;详细过程在这个文章中：&lt;a href=&#34;https://juejin.cn/post/7153812187834744845&#34;&gt;AgileBoot - 手把手一步一步带你Run起全栈项目(SpringBoot+Vue3)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;对于想要尝试全栈项目的前端人员，这边提供更简便的后端启动方式，无需配置Mysql和Redis直接启动&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;无Mysql/Redis 后端启动&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;1. 找到agilboot-admin模块下的resource文件中的application.yml文件&#xA;&#xA;2. 配置以下两个值&#xA;spring.profiles.active: basic,dev&#xA;改为&#xA;spring.profiles.active: basic,test&#xA;&#xA;agileboot.embedded.mysql: false&#xA;agileboot.embedded.redis: false&#xA;改为&#xA;agileboot.embedded.mysql: true&#xA;agileboot.embedded.redis: true&#xA;&#xA;&#xA;3. 找到agileboot-admin模块中的AgileBootAdminApplication启动类，直接启动即可&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🙊 系统内置功能 🙊&lt;/h2&gt; &#xA;&lt;p&gt;🙂 大部分功能，均有通过 &lt;strong&gt;单元测试&lt;/strong&gt; &lt;strong&gt;集成测试&lt;/strong&gt; 保证质量。&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;   &lt;th&gt;描述&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;用户管理&lt;/td&gt; &#xA;   &lt;td&gt;用户是系统操作者，该功能主要完成系统用户配置&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;⭐&lt;/td&gt; &#xA;   &lt;td&gt;部门管理&lt;/td&gt; &#xA;   &lt;td&gt;配置系统组织机构（公司、部门、小组），树结构展现支持数据权限&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;⭐&lt;/td&gt; &#xA;   &lt;td&gt;岗位管理&lt;/td&gt; &#xA;   &lt;td&gt;配置系统用户所属担任职务&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;菜单管理&lt;/td&gt; &#xA;   &lt;td&gt;配置系统菜单、操作权限、按钮权限标识等，本地缓存提供性能&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;⭐&lt;/td&gt; &#xA;   &lt;td&gt;角色管理&lt;/td&gt; &#xA;   &lt;td&gt;角色菜单权限分配、设置角色按机构进行数据范围权限划分&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;参数管理&lt;/td&gt; &#xA;   &lt;td&gt;对系统动态配置常用参数&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;通知公告&lt;/td&gt; &#xA;   &lt;td&gt;系统通知公告信息发布维护&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;🚀&lt;/td&gt; &#xA;   &lt;td&gt;操作日志&lt;/td&gt; &#xA;   &lt;td&gt;系统正常操作日志记录和查询；系统异常信息日志记录和查询&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;登录日志&lt;/td&gt; &#xA;   &lt;td&gt;系统登录日志记录查询包含登录异常&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;在线用户&lt;/td&gt; &#xA;   &lt;td&gt;当前系统中活跃用户状态监控&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;系统接口&lt;/td&gt; &#xA;   &lt;td&gt;根据业务代码自动生成相关的api接口文档&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;服务监控&lt;/td&gt; &#xA;   &lt;td&gt;监视当前系统CPU、内存、磁盘、堆栈等相关信息&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;缓存监控&lt;/td&gt; &#xA;   &lt;td&gt;对系统的缓存信息查询，命令统计等&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;连接池监视&lt;/td&gt; &#xA;   &lt;td&gt;监视当前系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;目前版本是V1.5，将在2.0版本后陆续新增新功能。&lt;/p&gt; &#xA;&lt;h2&gt;🐯 工程结构 🐯&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;agileboot&#xA;├── agileboot-admin -- 管理后台接口模块（供后台调用）&#xA;│&#xA;├── agileboot-api -- 开放接口模块（供客户端调用）&#xA;│&#xA;├── agileboot-common -- 精简基础工具模块&#xA;│&#xA;├── agileboot-infrastructure -- 基础设施模块（主要是配置和集成）&#xA;│&#xA;├── agileboot-domain -- 业务模块&#xA;├    ├── user -- 用户模块（举例）&#xA;├         ├── command -- 命令参数接收模型（命令）&#xA;├         ├── dto -- 返回数据类&#xA;├         ├── model -- 领域模型类&#xA;├         ├── query -- 查询参数模型（查询）&#xA;│         ├────── UserApplicationService -- 应用服务（事务层，操作领域模型类完成业务逻辑）&#xA;│&#xA;├── agileboot-integration-test -- 集成测试模块&#xA;│&#xA;├── agileboot-orm -- 数据映射模块（仅包含数据相关逻辑）&#xA;├    ├── entiy -- 实体类&#xA;├    ├── enums -- 数据相关枚举 &#xA;├    ├── mapper -- DAO &#xA;├    ├── query -- 封装查询对象 &#xA;├    ├── result -- 封装多表查询对象 &#xA;└──  └── service -- 服务层&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;代码流转&lt;/h3&gt; &#xA;&lt;p&gt;请求分为两类：一类是查询，一类是操作（即对数据有进行更新）。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;查询&lt;/strong&gt;：Controller &amp;gt; xxxQuery &amp;gt; xxxApplicationService &amp;gt; xxxService(Db) &amp;gt; xxxMapper&lt;br&gt; &lt;strong&gt;操作&lt;/strong&gt;：Controller &amp;gt; xxxCommand &amp;gt; xxxApplicationService &amp;gt; xxxModel(处理逻辑) &amp;gt; save 或者 update (本项目直接采用JPA的方式进行插入已经更新数据)&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🎅 技术文档 🎅&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7152871067151777829&#34;&gt;AgileBoot - 基于SpringBoot + Vue3的前后端快速开发脚手架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7153812187834744845&#34;&gt;AgileBoot - 手把手一步一步带你Run起全栈项目(SpringBoot+Vue3)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7156062116712022023&#34;&gt;AgileBoot - 项目内统一的错误码设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7158793441198112781&#34;&gt;AgileBoot - 如何集成内置数据库H2和内置Redis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;持续输出中&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🌻 注意事项 🌻&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IDEA会自动将.properties文件的编码设置为ISO-8859-1,请在Settings &amp;gt; Editor &amp;gt; File Encodings &amp;gt; Properties Files &amp;gt; 设置为UTF-8&lt;/li&gt; &#xA; &lt;li&gt;请导入统一的代码格式化模板（Google）: Settings &amp;gt; Editor &amp;gt; Code Style &amp;gt; Java &amp;gt; 设置按钮 &amp;gt; import schema &amp;gt; 选择项目根目录下的GoogleStyle.xml文件&lt;/li&gt; &#xA; &lt;li&gt;如需要生成新的表，请使用CodeGenerator类进行生成。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;填入数据库地址，账号密码，库名。然后填入所需的表名执行代码即可。（大概看一下代码就知道怎么填啦）&lt;/li&gt; &#xA;   &lt;li&gt;生成的类在orm模块下的target/classes目录下&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;项目基础环境搭建，请参考docker目录下的指南搭建。保姆级启动说明： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://juejin.cn/post/7153812187834744845&#34;&gt;AgileBoot - 手把手一步一步带你Run起全栈项目(SpringBoot+Vue3)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;注意：管理后台的后端启动类是AgileBoot&lt;strong&gt;Admin&lt;/strong&gt;Application&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎬 AgileBoot全栈交流群 🎬&lt;/h2&gt; &#xA;&lt;p&gt;QQ群： &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=TR5guoXS0HssErVWefmdFRirJvfpEvp1&amp;amp;jump_from=webapi&amp;amp;authKey=VkWMmVhp/pNdWuRD8sqgM+Sv2+Vy2qCJQSeLmeXlLtfER2RJBi6zL56PdcRlCmTs&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/1398880-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; 点击按钮入群。&lt;/p&gt; &#xA;&lt;p&gt;如果该项目对您有帮助，可以请作者喝个咖啡~&lt;/p&gt; &#xA;&lt;img alt=&#34;logo&#34; height=&#34;200&#34; src=&#34;https://oscimg.oschina.net/oscnet/up-261828407c9089ad1cc0ce3f41a0ef3fbc0.png&#34;&gt;</summary>
  </entry>
  <entry>
    <title>StarRocks/starrocks</title>
    <updated>2022-12-25T01:41:22Z</updated>
    <id>tag:github.com,2022-12-25:/StarRocks/starrocks</id>
    <link href="https://github.com/StarRocks/starrocks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;StarRocks is a next-gen sub-second MPP database for full analytics scenarios, including multi-dimensional analytics, real-time analytics and ad-hoc query.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://starrocks.io/index&#34;&gt; &lt;img width=&#34;900&#34; src=&#34;https://cdn.starrocks.io/static/github/starrocks.png&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://starrocks.io/download/community&#34;&gt;Download&lt;/a&gt; | &lt;a href=&#34;https://docs.starrocks.io/&#34;&gt;Docs&lt;/a&gt; | &lt;a href=&#34;https://starrocks.io/blog/benchmark-test&#34;&gt;Benchmarks&lt;/a&gt; | &lt;a href=&#34;https://github.com/StarRocks/demo&#34;&gt;Demo&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Made%20with-JAVA%20%26%20C%2B%2B-red&#34; alt=&#34;JAVA&amp;amp;C++&#34;&gt;  &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/StarRocks/starrocks&#34; alt=&#34;Commit Activities&#34;&gt;  &lt;a href=&#34;https://github.com/StarRocks/starrocks/issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues-raw/StarRocks/starrocks&#34; alt=&#34;Open Issues&#34;&gt; &lt;/a&gt;  &lt;a href=&#34;https://starrocks.io/index&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Visit%20StarRocks-Website-green&#34; alt=&#34;Website&#34;&gt; &lt;/a&gt;  &lt;a href=&#34;https://join.slack.com/t/starrocks/shared_invite/zt-z5zxqr0k-U5lrTVlgypRIV8RbnCIAzg&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Join-Slack-ff69b4&#34; alt=&#34;Slack&#34;&gt; &lt;/a&gt;  &lt;a href=&#34;https://twitter.com/StarRocksLabs&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/StarRocksLabs?style=social&#34; alt=&#34;Twitter&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA;&lt;/div&gt; StarRocks is the next-generation data platform designed to make data-intensive real-time analytics fast and easy. It delivers query speeds 5 to 10 times faster than other popular solutions. StarRocks can perform real-time analytics well while updating historical records. It can also enhance real-time analytics with historical data from data lakes easily. With StarRocks, you can get rid of the de-normalized tables and get the best performance and flexibility.&#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.starrocks.io/static/github/community.gif&#34;&gt;  &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;🚀 Native vectorized SQL engine:&lt;/strong&gt; StarRocks adopts vectorization technology to make full use of the parallel computing power of CPU, achieving sub-second query returns in multi-dimensional analyses, which is 5 to 10 times faster than previous systems.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;📊 Standard SQL:&lt;/strong&gt; StarRocks supports ANSI SQL syntax (fully supported TPC-H and TPC-DS). It is also compatible with the MySQL protocol. Various clients and BI software can be used to access StarRocks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;💡 Smart query optimization:&lt;/strong&gt; StarRocks can optimize complex queries through CBO (Cost Based Optimizer). With a better execution plan, the data analysis efficiency will be greatly improved.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;⚡ Real-time update:&lt;/strong&gt; The updated model of StarRocks can perform upsert/delete operations according to the primary key, and achieve efficient query while concurrent updates.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🪟 Intelligent materialized view:&lt;/strong&gt; The materialized view of StarRocks can be automatically updated during the data import and automatically selected when the query is executed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;✨ Querying data in data lakes directly&lt;/strong&gt;: StarRocks allows direct access to data from Apache Hive™, Apache Iceberg™, and Apache Hudi™ without importing.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;🎛️ Resource management&lt;/strong&gt;: This feature allows StarRocks to limit resource consumption for queries and implement isolation and efficient use of resources among tenants in the same cluster.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;💠 Easy to maintain&lt;/strong&gt;: Simple architecture makes StarRocks easy to deploy, maintain and scale out. StarRocks tunes its query plan agilely, balances the resources when the cluster is scaled in or out, and recovers the data replica under node failure automatically.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Architecture Overview&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/StarRocks/starrocks/main/images/arch.png&#34;&gt;  &lt;/p&gt; &#xA;&lt;p&gt;StarRocks’s streamlined architecture is mainly composed of two modules：Frontend (FE) and Backend (BE). The entire system eliminates single points of failure through seamless and horizontal scaling of FE and BE, as well as replication of metadata and data.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;h3&gt;📚 Read the docs&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Section&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.starrocks.io/en-us/latest/quick_start/Deploy&#34;&gt;Deploy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Learn how to run and configure StarRocks.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.starrocks.io/en-us/latest/introduction/StarRocks_intro&#34;&gt;Docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Full documentation.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://starrocks.io/blog&#34;&gt;Blogs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;StarRocks deep dive and user stories.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;❓ Get support&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://join.slack.com/t/starrocks/shared_invite/zt-z5zxqr0k-U5lrTVlgypRIV8RbnCIAzg&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;150&#34; src=&#34;https://firstcontributions.github.io/assets/Readme/join-slack-team.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://join.slack.com/t/starrocks/shared_invite/zt-z5zxqr0k-U5lrTVlgypRIV8RbnCIAzg&#34;&gt;Slack community: &lt;/a&gt;join technical discussions, ask questions, and meet other users!&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC38wR-ogamk4naaWNQ45y7Q/featured&#34;&gt;YouTube channel:&lt;/a&gt; subscribe to the latest video tutorials and webcasts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StarRocks/starrocks/issues&#34;&gt;GitHub issues:&lt;/a&gt; report an issue with StarRocks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Contributing to StarRocks&lt;/h2&gt; &#xA;&lt;p&gt;We welcome all kinds of contributions from the community, individuals and partners. We owe our success to your active involvement.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/StarRocks/starrocks/raw/main/CONTRIBUTING.md&#34;&gt;Contributing.md&lt;/a&gt; to get started.&lt;/li&gt; &#xA; &lt;li&gt;Set up StarRocks development environment:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StarRocks/community/raw/main/Contributors/guide/IDEA.md&#34;&gt;IDEA&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/StarRocks/community/raw/main/Contributors/guide/Clion.md&#34;&gt;Clion&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Understand our &lt;a href=&#34;https://github.com/StarRocks/community/raw/main/Contributors/guide/workflow.md&#34;&gt;GitHub workflow&lt;/a&gt; for opening a pull request; use this &lt;a href=&#34;https://github.com/StarRocks/starrocks/raw/main/.github/PULL_REQUEST_TEMPLATE.md&#34;&gt;PR Template&lt;/a&gt; when submitting a pull request.&lt;/li&gt; &#xA; &lt;li&gt;Pick a &lt;a href=&#34;https://github.com/StarRocks/starrocks/labels/good%20first%20issue&#34;&gt;good first issue&lt;/a&gt; and start contributing.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;📝 License:&lt;/strong&gt; StarRocks is licensed under &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;👥 Community Membership:&lt;/strong&gt; Learn more about different &lt;a href=&#34;https://raw.githubusercontent.com/StarRocks/starrocks/main/community/membership.md&#34;&gt;contributor roles&lt;/a&gt; in StarRocks community.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Used By&lt;/h2&gt; &#xA;&lt;p&gt;This project is used by the following companies. Learn more about their use cases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=AzDxEZuMBwM&amp;amp;ab_channel=StarRocks_labs&#34;&gt;Airbnb&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://starrocks.medium.com/trip-com-starrocks-efficiently-supports-high-concurrent-queries-dramatically-reduces-labor-and-1e1921dd6bf8&#34;&gt;Trip.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://starrocks.io/blog/zeppheath&#34;&gt;Zepp Health&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://starrocks.io/blog/lenovo_en&#34;&gt;Lenovo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Acknowledgment&lt;/h2&gt; &#xA;&lt;p&gt;StarRocks is built upon Apache® Doris™ 0.13 in early 2020. We have recreated many important parts of the database including a full vectorized execution engine, a brand new CBO optimizer, a novel real-time update engine, and query federation for data lakes.&lt;/p&gt; &#xA;&lt;p&gt;Today, only less than 20% of the code in StarRocks is from Apache® Doris™.&lt;/p&gt;</summary>
  </entry>
</feed>