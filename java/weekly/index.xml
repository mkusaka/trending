<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-21T01:58:11Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>testcontainers/testcontainers-java</title>
    <updated>2024-01-21T01:58:11Z</updated>
    <id>tag:github.com,2024-01-21:/testcontainers/testcontainers-java</id>
    <link href="https://github.com/testcontainers/testcontainers-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Testcontainers is a Java library that supports JUnit tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Testcontainers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/org.testcontainers/testcontainers&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/org.testcontainers/testcontainers/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/codespaces/new?hide_repo_select=true&amp;amp;ref=main&amp;amp;repo=33816473&amp;amp;machine=standardLinux32gb&amp;amp;devcontainer_path=.devcontainer%2Fdevcontainer.json&amp;amp;location=EastUs&#34;&gt;&lt;img src=&#34;https://github.com/codespaces/badge.svg?sanitize=true&#34; alt=&#34;Open in GitHub Codespaces&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ge.testcontainers.org/scans&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&amp;amp;labelColor=02303A&#34; alt=&#34;Revved up by Develocity&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Testcontainers is a Java library that supports JUnit tests, providing lightweight, throwaway instances of common databases, Selenium web browsers, or anything else that can run in a Docker container.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/testcontainers/testcontainers-java/main/docs/logo.png&#34; alt=&#34;Testcontainers logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://java.testcontainers.org&#34;&gt;Read the documentation here&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/testcontainers/testcontainers-java/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Copyright&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2015 - 2021 Richard North and other authors.&lt;/p&gt; &#xA;&lt;p&gt;MS SQL Server module is (c) 2017 - 2021 G DATA Software AG and other authors.&lt;/p&gt; &#xA;&lt;p&gt;Hashicorp Vault module is (c) 2017 - 2021 Capital One Services, LLC and other authors.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/testcontainers/testcontainers-java/graphs/contributors&#34;&gt;contributors&lt;/a&gt; for all contributors.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>SaiUpadhyayula/spring-boot-microservices</title>
    <updated>2024-01-21T01:58:11Z</updated>
    <id>tag:github.com,2024-01-21:/SaiUpadhyayula/spring-boot-microservices</id>
    <link href="https://github.com/SaiUpadhyayula/spring-boot-microservices" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains the latest source code of th spring-boot-microservices tutorial&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Spring Boot Microservices&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains the latest source code of the spring-boot-microservices tutorial&lt;/p&gt; &#xA;&lt;p&gt;You can watch the tutorial on Youtube here - &lt;a href=&#34;https://www.youtube.com/watch?v=mPPhcU7oWDU&amp;amp;t=20634s&#34;&gt;https://www.youtube.com/watch?v=mPPhcU7oWDU&amp;amp;t=20634s&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to run the application using Docker&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;mvn clean package -DskipTests&lt;/code&gt; to build the applications and create the docker image locally.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker-compose up -d&lt;/code&gt; to start the applications.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to run the application without Docker&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;mvn clean verify -DskipTests&lt;/code&gt; by going inside each folder to build the applications.&lt;/li&gt; &#xA; &lt;li&gt;After that run &lt;code&gt;mvn spring-boot:run&lt;/code&gt; by going inside each folder to start the applications.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>WuKongOpenSource/Wukong_HRM</title>
    <updated>2024-01-21T01:58:11Z</updated>
    <id>tag:github.com,2024-01-21:/WuKongOpenSource/Wukong_HRM</id>
    <link href="https://github.com/WuKongOpenSource/Wukong_HRM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;悟空HRM人力资源管理系统-提供入职管理、招聘管理、绩效考核管理等一站式人力管理流程&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Wukong_HRM&lt;/h1&gt; &#xA;&lt;h3&gt;🌐Read This in &lt;a href=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;体验地址：&lt;a href=&#34;http://www.72crm.com&#34;&gt;https://www.72crm.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;悟空人力资源管理介绍&lt;/h2&gt; &#xA;&lt;p&gt;悟空人力资源管理系统正式开源，从人力资源管理的角度出发，用集中的数据将几乎所有与人力资源相关的信息（组织规划、招聘管理、员工管理、考勤管理、社保管理、绩效管理）统一管理起来。&lt;/p&gt; &#xA;&lt;p&gt;官网地址：&lt;a href=&#34;http://www.5kcrm.com/&#34;&gt;http://www.5kcrm.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;扫码添加小悟官方客服微信，邀您加入千人微信交流群：&lt;/p&gt; &#xA;&lt;img src=&#34;https://images.gitee.com/uploads/images/2019/1231/115927_f9c580c8_345098.png&#34; width=&#34;120&#34;&gt; &#xA;&lt;p&gt;关注悟空CRM公众号，了解更多悟空资讯&lt;/p&gt; &#xA;&lt;img src=&#34;https://images.gitee.com/uploads/images/2019/1202/135713_d3566c6a_345098.jpeg&#34; width=&#34;120&#34;&gt; &#xA;&lt;p&gt;扫码加入微信群，在线客服解答疑问&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/WukongHRM/main/img/cc1.png&#34; width=&#34;120&#34;&gt; &#xA;&lt;p&gt;&lt;span&gt;💥&lt;/span&gt; &lt;span&gt;💥&lt;/span&gt; &lt;span&gt;💥&lt;/span&gt; 注：悟空人力资源管理系统采用全新的前后端分离模式，本仓库代码中已集成前端vue打包后文件， &lt;strong&gt;可免去打包操作，无需运行前端&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;悟空项目管理目录结构&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;wk_open_hrm&#xA;├── common        -- 基础模块&#xA;├── DB        -- sql文件&#xA;├── hrm        -- 人力资源管理模块&#xA;├── ux        -- 前端源码&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;核心功能模块&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;员工组织管理，最优配置人才资源&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;考勤管理，增加员工行动力&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;薪资管理，助力企业人才战略&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;社保管理，给与员工充足的保障&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;绩效管理，调动全员积极性&lt;/strong&gt; &lt;br&gt; &lt;strong&gt;员工自助，员工所有相关信息一览无余&lt;/strong&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h1&gt;悟空人力资源管理使用的主要技术栈&lt;/h1&gt; &#xA;&lt;h1&gt;后端：&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;名称&lt;/th&gt; &#xA;   &lt;th&gt;版本&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;spring-cloud-alibaba&lt;/td&gt; &#xA;   &lt;td&gt;2021.0.5.0&lt;/td&gt; &#xA;   &lt;td&gt;核心框架&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;spring-boot&lt;/td&gt; &#xA;   &lt;td&gt;2.7.15&lt;/td&gt; &#xA;   &lt;td&gt;spring版本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mybatis-plus&lt;/td&gt; &#xA;   &lt;td&gt;3.5.3.2&lt;/td&gt; &#xA;   &lt;td&gt;ORM框架&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;前端：&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;技术&lt;/th&gt; &#xA;   &lt;th&gt;说明&lt;/th&gt; &#xA;   &lt;th&gt;版本&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://vuejs.org&#34;&gt;Vue&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;框架&lt;/td&gt; &#xA;   &lt;td&gt;2.5.17&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://router.vuejs.org&#34;&gt;Vue-router&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;路由框架&lt;/td&gt; &#xA;   &lt;td&gt;3.0.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://vuex.vuejs.org&#34;&gt;Vuex&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;全局状态管理框架&lt;/td&gt; &#xA;   &lt;td&gt;3.0.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://element.eleme.io&#34;&gt;Element&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;UI框架&lt;/td&gt; &#xA;   &lt;td&gt;2.12.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/axios/axios&#34;&gt;Axios&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HTTP框架&lt;/td&gt; &#xA;   &lt;td&gt;0.18.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;使用说明&lt;/h1&gt; &#xA;&lt;h3&gt;一、本项目安装需要在Linux环境下进行，可在虚拟机中安装Linux环境&lt;/h3&gt; &#xA;&lt;p&gt;Linux 环境配置要求如下：&lt;/p&gt; &#xA;&lt;p&gt;推荐使用系统：centos 系统内存：≥16G 系统CPU：≥4核 磁盘大小：≥100G&lt;/p&gt; &#xA;&lt;h3&gt;二、前置环境，需要在Linux环境下安装以下配置&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Jdk1.8&lt;/li&gt; &#xA; &lt;li&gt;Maven3.5^&lt;/li&gt; &#xA; &lt;li&gt;Mysql8^&lt;/li&gt; &#xA; &lt;li&gt;Redis(版本不限)&lt;/li&gt; &#xA; &lt;li&gt;elasticsearch8.5.3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;安装说明&lt;/h3&gt; &#xA;&lt;h4&gt;一、依赖环境安装&lt;/h4&gt; &#xA;&lt;h6&gt;1. 安装jdk&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;yum -y install java-1.8.0-openjdk-devel;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;2. 安装redis&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;yum -y install epel-release;&#xA;yum -y install redis;&#xA;systemctl start redis&#xA;&#xA;#-- 修改redis密码为123456&#xA;yum -y install vim;&#xA;vim /etc/redis.conf;&#xA;&#xA;#-- 在文件最下面追加一行&#xA;requirepass 123456&#xA;#-- 或者输入 / 搜索 # requirepass foobared&#xA;#-- 将前面的#删除，将foobared改为123456&#xA;#-- 修改完成之后 :wq 保存并退出,重启redis&#xA;&#xA;systemctl restart redis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;3.安装mysql&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;wget https://repo.mysql.com//mysql80-community-release-el7-3.noarch.rpm&#xA;yum -y install mysql80-community-release-el7-3.noarch.rpm&#xA;yum -y install mysql-community-server --nogpgcheck&#xA;sudo systemctl start mysqld.service;&#xA;sudo systemctl enable mysqld.service;&#xA;&#xA;--查看安装的mysql默认密码&#xA;grep &#34;password&#34; /var/log/mysqld.log&#xA;--进入mysql 例：mysql -u root -p&#34;GXOO%eiI/7o&amp;gt;&#34;&#xA;mysql - u root -p&#34;此处为上一步的默认密码&#34; &#xA; &#xA;--修改mysql密码，如下图所示&#xA;set global validate_password_policy=LOW;&#xA;ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;&#xA;&#xA;--退出mysql&#xA;exit&#xA;    &#xA;--修改mysql配置&#xA;vim /etc/my.cnf;&#xA;--输入 i 进入编辑模式，修改sql_mode设置，将下面sql_mode配置复制，到 [mysqld]下使用 shift+insert 粘贴&#xA;sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION &#xA;--修改完毕，按esc按键，然后 :wq 保存并退出，重启mysql&#xA;&#xA;&#xA;service mysqld restart;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4.安装elasticsearch(es)&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;--下载es  &#xA;&#xA;# 注意不要放在root目录下&#xA;&#xA;useradd elasticsearch&#xA;wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.3-linux-x86_64.tar.gz&#xA;tar xvf elasticsearch-8.5.3-linux-x86_64.tar.gz&#xA;chown -R elasticsearch:elasticsearch  elasticsearch-8.5.3 &#xA;chmod -R 777  elasticsearch-8.5.3&#xA;&#xA;--修改es配置文件:elasticsearch.yml&#xA;&#xA;# 安装es如有以下配置信息，需要修改配置信息&#xA;&#xA;ingest.geoip.downloader.enabled: false  ## 添加配置&#xA;xpack.security.enabled: true&#xA;xpack.security.enrollment.enabled: true&#xA;&#xA;xpack.security.http.ssl:&#xA;  enabled: false        # 改为false&#xA;  keystore.path: certs/http.p12&#xA;&#xA;Enable encryption and mutual authentication between cluster nodes&#xA;xpack.security.transport.ssl:&#xA;  enabled: false         # 改为false&#xA;  verification_mode: certificate&#xA;  keystore.path: certs/transport.p12&#xA;  truststore.path: certs/transport.p12&#xA;&#xA;-- 安装es分词器&#xA;./elasticsearch-plugin install analysis-icu&#xA;--重置 es 账户密码&#xA;./elasticsearch-reset-password -u elastic&#xA;&#xA;-- 进入bin启动es&#xA;su elasticsearch&#xA;./elasticsearch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;二、项目配置与启动&lt;/h4&gt; &#xA;&lt;p&gt;yum -y install maven&lt;/p&gt; &#xA;&lt;h6&gt;1.导入DB目录下数据库&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;create database wk_hrm_open character set utf8mb4 collate utf8mb4_general_ci;&#xA; use wk_hrm_open;&#xA;source XXX（项目路径）&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;2.在项目根目录执行mvn install&lt;/h6&gt; &#xA;&lt;h6&gt;3.在项目中修改以下配置信息：&lt;/h6&gt; &#xA;&lt;h6&gt;3.在hrm模块下resource目录配置数据库帐号密码信息以及redis帐号信息`&lt;/h6&gt; &#xA;&lt;h6&gt;4. 访问&lt;a href=&#34;https://id.72crm.com/&#34;&gt;悟空ID&lt;/a&gt;获取账号&lt;/h6&gt; &#xA;&lt;h6&gt;注册之后点击默认企业,应用列表中选择人力资源管理&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/007.png&#34; alt=&#34;默认企业&#34; title=&#34;img1.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h6&gt;点击人力资源管理&lt;/h6&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/008.png&#34; alt=&#34;人力资源管理&#34; title=&#34;img2.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h5&gt;将App ID，accessKey，secretKey复制到 hrm-web\src\main\resources\application.yml，分别对应appId，clientId，clientSecret 如下图所示&lt;/h5&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/009.png&#34; alt=&#34;代码配置&#34; title=&#34;img4.png&#34;&gt; 将appId复制到hrm-web\src\main\resources\static\APPLICATION_ID.txt内，替换里面内容&lt;/p&gt; &#xA;&lt;h6&gt;5. 项目打包部署&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;--项目打包&#xA;mkdir /opt/package&#xA;mvn clean -Dmaven.test.skip=true package&#xA;cp hrm-web/target/hrm-web.zip /opt/package&#xA;cd /opt/package&#xA;unzip hrm-web.zip -d hrm&#xA;cd hrm-web&#xA;sh 72crm.sh start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;6. 前端项目项目运行、打包&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;- 下载node并安装(LTS)：https://nodejs.org/;&#xA;- 该项目为前后端分离项目，本地访问需搭建后台环境，请参考[后端项目](https://gitee.com/wukongcrm/crm_pro);&#xA;- 访问线上接口无需搭建后台环境，只需将config/index.js文件中的dev下的proxyTable中的target改为线上地址即可;&#xA;- 执行 npm install，下载相关依赖;&#xA;- 执行 npm run dev，运行项目;&#xA;- 执行成功，即可访问http://localhost:8090，查看;&#xA;&#xA;打包：&#xA;- 需将config/prod.env.js文件中的BASE_API，调整为自己需要的&#xA;- 执行 npm run build&#xA;- 打包完成&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;三、其他说明&lt;/h3&gt; &#xA;&lt;h4&gt;1.接口文档&lt;br&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;接口文档地址：http://localhost:44311/doc.html&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;2.docker镜像&lt;br&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;敬请期待&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;四、悟空人力资源功能模块预览&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/001.png&#34; alt=&#34;输入图片说明&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/002.png&#34; alt=&#34;输入图片说明&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/003.png&#34; alt=&#34;输入图片说明&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/004.png&#34; alt=&#34;输入图片说明&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/005.png&#34; alt=&#34;输入图片说明&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/WuKongOpenSource/Wukong_HRM/main/img/006.png&#34; alt=&#34;输入图片说明&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>