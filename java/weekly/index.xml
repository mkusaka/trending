<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T02:02:25Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apache/incubator-seatunnel</title>
    <updated>2022-07-17T02:02:25Z</updated>
    <id>tag:github.com,2022-07-17:/apache/incubator-seatunnel</id>
    <link href="https://github.com/apache/incubator-seatunnel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SeaTunnel is a distributed, high-performance data integration platform for the synchronization and transformation of massive data (offline &amp; real-time).&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apache SeaTunnel (Incubating)&lt;/h1&gt; &#xA;&lt;img src=&#34;https://seatunnel.apache.org/image/logo.png&#34; alt=&#34;seatunnel logo&#34; height=&#34;200px&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/incubator-seatunnel/actions/workflows/backend.yml&#34;&gt;&lt;img src=&#34;https://github.com/apache/incubator-seatunnel/actions/workflows/backend.yml/badge.svg?branch=dev&#34; alt=&#34;Backend Workflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/apacheseatunnel/shared_invite/zt-123jmewxe-RjB_DW3M3gV~xL91pZ0oVQ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-%23seatunnel-4f8eba?logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ASFSeaTunnel&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ASFSeaTunnel.svg?label=Follow&amp;amp;logo=twitter&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel/dev/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/document-English-blue.svg?sanitize=true&#34; alt=&#34;EN doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel/dev/README_zh_CN.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E6%96%87%E6%A1%A3-%E4%B8%AD%E6%96%87%E7%89%88-blue.svg?sanitize=true&#34; alt=&#34;CN doc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;SeaTunnel was formerly named Waterdrop , and renamed SeaTunnel since October 12, 2021.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;SeaTunnel is a very easy-to-use ultra-high-performance distributed data integration platform that supports real-time synchronization of massive data. It can synchronize tens of billions of data stably and efficiently every day, and has been used in the production of nearly 100 companies.&lt;/p&gt; &#xA;&lt;h2&gt;Why do we need SeaTunnel&lt;/h2&gt; &#xA;&lt;p&gt;SeaTunnel will do its best to solve the problems that may be encountered in the synchronization of massive data:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Data loss and duplication&lt;/li&gt; &#xA; &lt;li&gt;Task accumulation and delay&lt;/li&gt; &#xA; &lt;li&gt;Low throughput&lt;/li&gt; &#xA; &lt;li&gt;Long cycle to be applied in the production environment&lt;/li&gt; &#xA; &lt;li&gt;Lack of application running status monitoring&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;SeaTunnel use scenarios&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mass data synchronization&lt;/li&gt; &#xA; &lt;li&gt;Mass data integration&lt;/li&gt; &#xA; &lt;li&gt;ETL with massive data&lt;/li&gt; &#xA; &lt;li&gt;Mass data aggregation&lt;/li&gt; &#xA; &lt;li&gt;Multi-source data processing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features of SeaTunnel&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Easy to use, flexible configuration, low code development&lt;/li&gt; &#xA; &lt;li&gt;Real-time streaming&lt;/li&gt; &#xA; &lt;li&gt;Offline multi-source data analysis&lt;/li&gt; &#xA; &lt;li&gt;High-performance, massive data processing capabilities&lt;/li&gt; &#xA; &lt;li&gt;Modular and plug-in mechanism, easy to extend&lt;/li&gt; &#xA; &lt;li&gt;Support data processing and aggregation by SQL&lt;/li&gt; &#xA; &lt;li&gt;Support Spark structured streaming&lt;/li&gt; &#xA; &lt;li&gt;Support Spark 2.x&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Workflow of SeaTunnel&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel-website/main/static/image/seatunnel-workflow.svg?sanitize=true&#34; alt=&#34;seatunnel-workflow.svg&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Source[Data Source Input] -&amp;gt; Transform[Data Processing] -&amp;gt; Sink[Result Output]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The data processing pipeline is constituted by multiple filters to meet a variety of data processing needs. If you are accustomed to SQL, you can also directly construct a data processing pipeline by SQL, which is simple and efficient. Currently, the filter list supported by SeaTunnel is still being expanded. Furthermore, you can develop your own data processing plug-in, because the whole system is easy to expand.&lt;/p&gt; &#xA;&lt;h2&gt;Plugins supported by SeaTunnel&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Connectors supported &lt;a href=&#34;https://seatunnel.apache.org/docs/category/source&#34;&gt;check out&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Transform supported &lt;a href=&#34;https://seatunnel.apache.org/docs/transform/common-options/&#34;&gt;check out&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Environmental dependency&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;java runtime environment, java &amp;gt;= 8&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to run SeaTunnel in a cluster environment, any of the following Spark cluster environments is usable:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Spark on Yarn&lt;/li&gt; &#xA; &lt;li&gt;Spark Standalone&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If the data volume is small, or the goal is merely for functional verification, you can also start in local mode without a cluster environment, because SeaTunnel supports standalone operation. Note: SeaTunnel 2.0 supports running on Spark and Flink.&lt;/p&gt; &#xA;&lt;h2&gt;Compiling project&lt;/h2&gt; &#xA;&lt;p&gt;Follow this &lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel/dev/docs/en/contribution/setup.md&#34;&gt;document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;Download address for run-directly software package : &lt;a href=&#34;https://seatunnel.apache.org/download&#34;&gt;https://seatunnel.apache.org/download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Spark&lt;/strong&gt; &lt;a href=&#34;https://seatunnel.apache.org/docs/deployment&#34;&gt;https://seatunnel.apache.org/docs/deployment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Flink&lt;/strong&gt; &lt;a href=&#34;https://seatunnel.apache.org/docs/deployment&#34;&gt;https://seatunnel.apache.org/docs/deployment&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Detailed documentation on SeaTunnel &lt;a href=&#34;https://seatunnel.apache.org/docs/intro/about&#34;&gt;https://seatunnel.apache.org/docs/intro/about&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Application practice cases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Weibo, Value-added Business Department Data Platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Weibo business uses an internal customized version of SeaTunnel and its sub-project Guardian for SeaTunnel On Yarn task monitoring for hundreds of real-time streaming computing tasks.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sina, Big Data Operation Analysis Platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sina Data Operation Analysis Platform uses SeaTunnel to perform real-time and offline analysis of data operation and maintenance for Sina News, CDN and other services, and write it into Clickhouse.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sogou, Sogou Qiqian System&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sogou Qiqian System takes SeaTunnel as an ETL tool to help establish a real-time data warehouse system.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Qutoutiao, Qutoutiao Data Center&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Qutoutiao Data Center uses SeaTunnel to support mysql to hive offline ETL tasks, real-time hive to clickhouse backfill technical support, and well covers most offline and real-time tasks needs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Yixia Technology, Yizhibo Data Platform&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Yonghui Superstores Founders&#39; Alliance-Yonghui Yunchuang Technology, Member E-commerce Data Analysis Platform&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;SeaTunnel provides real-time streaming and offline SQL computing of e-commerce user behavior data for Yonghui Life, a new retail brand of Yonghui Yunchuang Technology.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Shuidichou, Data Platform&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Shuidichou adopts SeaTunnel to do real-time streaming and regular offline batch processing on Yarn, processing 3~4T data volume average daily, and later writing the data to Clickhouse.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tencent Cloud&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Collecting various logs from business services into Apache Kafka, some of the data in Apache Kafka is consumed and extracted through Seatunnel, and then store into Clickhouse.&lt;/p&gt; &#xA;&lt;p&gt;For more use cases, please refer to: &lt;a href=&#34;https://seatunnel.apache.org/blog&#34;&gt;https://seatunnel.apache.org/blog&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project adheres to the Contributor Covenant &lt;a href=&#34;https://www.apache.org/foundation/policies/conduct&#34;&gt;code of conduct&lt;/a&gt;. By participating, you are expected to uphold this code. Please follow the &lt;a href=&#34;https://www.apache.org/foundation/policies/conduct#reporting-guidelines&#34;&gt;REPORTING GUIDELINES&lt;/a&gt; to report unacceptable behavior.&lt;/p&gt; &#xA;&lt;h2&gt;Developer&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all developers!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/incubator-seatunnel/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/seatunnel/contributors.svg?width=666&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Mail list: &lt;strong&gt;&lt;a href=&#34;mailto:dev@seatunnel.apache.org&#34;&gt;dev@seatunnel.apache.org&lt;/a&gt;&lt;/strong&gt;. Mail to &lt;code&gt;dev-subscribe@seatunnel.apache.org&lt;/code&gt;, follow the reply to subscribe the mail list.&lt;/li&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://join.slack.com/t/apacheseatunnel/shared_invite/zt-123jmewxe-RjB_DW3M3gV~xL91pZ0oVQ&#34;&gt;https://join.slack.com/t/apacheseatunnel/shared_invite/zt-123jmewxe-RjB_DW3M3gV~xL91pZ0oVQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/ASFSeaTunnel&#34;&gt;https://twitter.com/ASFSeaTunnel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://space.bilibili.com/1542095008&#34;&gt;Bilibili&lt;/a&gt; (for Chinese users)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Landscapes&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://landscape.cncf.io/images/left-logo.svg?sanitize=true&#34; width=&#34;150&#34; alt=&#34;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://landscape.cncf.io/images/right-logo.svg?sanitize=true&#34; width=&#34;200&#34; alt=&#34;&#34;&gt; &lt;br&gt;&lt;br&gt; SeaTunnel enriches the &lt;a href=&#34;https://landscape.cncf.io/?landscape=observability-and-analysis&amp;amp;license=apache-license-2-0&#34;&gt;CNCF CLOUD NATIVE Landscape.&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Our Users&lt;/h2&gt; &#xA;&lt;p&gt;Various companies and organizations use SeaTunnel for research, production and commercial products. Visit our &lt;a href=&#34;https://seatunnel.apache.org/user&#34;&gt;website&lt;/a&gt; to find the user page.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/incubator-seatunnel/dev/LICENSE&#34;&gt;Apache 2.0 License.&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>macrozheng/springcloud-learning</title>
    <updated>2022-07-17T02:02:25Z</updated>
    <id>tag:github.com,2022-07-17:/macrozheng/springcloud-learning</id>
    <link href="https://github.com/macrozheng/springcloud-learning" rel="alternate"></link>
    <summary type="html">&lt;p&gt;一套涵盖大部分核心组件使用的Spring Cloud教程，包括Spring Cloud Alibaba及分布式事务Seata，基于Spring Cloud Greenwich及SpringBoot 2.1.7。篇篇精华，涵盖大部分应用场景。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;springcloud-learning&lt;/h1&gt; &#xA;&lt;p&gt; &lt;a href=&#34;#公众号&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%85%AC%E4%BC%97%E5%8F%B7-macrozheng-blue.svg?sanitize=true&#34; alt=&#34;公众号&#34;&gt;&lt;/a&gt; &lt;a href=&#34;#公众号&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E4%BA%A4%E6%B5%81-%E5%BE%AE%E4%BF%A1%E7%BE%A4-2BA245.svg?sanitize=true&#34; alt=&#34;交流&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/macrozheng/mall-swarm&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/Cloud%E7%89%88%E6%9C%AC-mall--swarm-brightgreen.svg?sanitize=true&#34; alt=&#34;SpringCloud版本&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/macrozheng/mall&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%90%8E%E5%8F%B0%E9%A1%B9%E7%9B%AE-mall-blue.svg?sanitize=true&#34; alt=&#34;后台项目&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/macrozheng/mall-admin-web&#34;&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/badge/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE-mall--admin--web-green.svg?sanitize=true&#34; alt=&#34;前端项目&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;一套涵盖大部分核心组件使用的Spring Cloud教程，包括Spring Cloud Alibaba及分布式事务Seata，基于Spring Cloud Greenwich及SpringBoot 2.1.7。24篇文章，篇篇精华，34个Demo，涵盖大部分应用场景。&lt;/p&gt; &#xA;&lt;h2&gt;目录&lt;/h2&gt; &#xA;&lt;h3&gt;概述&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/springcloud.html&#34;&gt;Spring Cloud 整体架构概览&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Spring Cloud 组件&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/eureka.html&#34;&gt;Spring Cloud Eureka：服务注册与发现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/ribbon.html&#34;&gt;Spring Cloud Ribbon：负载均衡的服务调用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/hystrix.html&#34;&gt;Spring Cloud Hystrix：服务容错保护&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/hystrix_dashboard.html&#34;&gt;Hystrix Dashboard：断路器执行监控&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/feign.html&#34;&gt;Spring Cloud OpenFeign：基于Ribbon和Hystrix的声明式服务调用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/zuul.html&#34;&gt;Spring Cloud Zuul：API网关服务&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/config.html&#34;&gt;Spring Cloud Config：外部集中化配置管理&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/bus.html&#34;&gt;Spring Cloud Bus：消息总线&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/sleuth.html&#34;&gt;Spring Cloud Sleuth：分布式请求链路跟踪&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/consul.html&#34;&gt;Spring Cloud Consul：服务治理与配置中心&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/gateway.html&#34;&gt;Spring Cloud Gateway：新一代API网关服务&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Spring Cloud Alibaba&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/nacos.html&#34;&gt;Spring Cloud Alibaba：Nacos 作为注册中心和配置中心使用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/sentinel.html&#34;&gt;Spring Cloud Alibaba：Sentinel实现熔断与限流&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/seata.html&#34;&gt;使用Seata彻底解决Spring Cloud中的分布式事务问题&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Spring Cloud Oauth2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/oauth2.html&#34;&gt;Spring Cloud Security：Oauth2使用入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/oauth2_jwt.html&#34;&gt;Spring Cloud Security：Oauth2结合JWT使用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/oauth2_sso.html&#34;&gt;Spring Cloud Security：Oauth2实现单点登录&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;微服务监控&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/admin.html&#34;&gt;Spring Boot Admin：微服务应用监控&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;微服务解决方案&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/gateway_oauth2.html&#34;&gt;微服务权限终极解决方案，Spring Cloud Gateway + Oauth2 实现统一认证和鉴权！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/knife4j_cloud.html&#34;&gt;微服务聚合Swagger文档，这波操作是真的香！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/oauth2_custom.html&#34;&gt;我扒了半天源码，终于找到了Oauth2自定义处理结果的最佳方案！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/sa_token_cloud_start.html&#34;&gt;开箱即用！看看人家的微服务权限解决方案，那叫一个优雅！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.macrozheng.com/cloud/retrofit_cloud.html&#34;&gt;再见Feign！推荐一款微服务间调用神器，跟SpringCloud绝配！&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目结构&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;springcloud-learning&#xA;├── eureka-server -- eureka注册中心&#xA;├── eureka-security-server -- 带登录认证的eureka注册中心&#xA;├── eureka-client -- eureka客户端&#xA;├── user-service -- 提供User对象CRUD接口的服务&#xA;├── ribbon-service -- ribbon服务调用测试服务&#xA;├── hystrix-service -- hystrix服务调用测试服务&#xA;├── turbine-service -- 聚合收集hystrix实例监控信息的服务&#xA;├── hystrix-dashboard -- 展示hystrix实例监控信息的仪表盘&#xA;├── feign-service -- feign服务调用测试服务&#xA;├── zuul-proxy -- zuul作为网关的测试服务&#xA;├── config-server -- 配置中心服务&#xA;├── config-security-server -- 带安全认证的配置中心服务&#xA;├── config-client -- 获取配置的客户端服务&#xA;├── consul-config-client -- 用于演示consul作为配置中心的consul客户端&#xA;├── consul-user-service -- 注册到consul的提供User对象CRUD接口的服务&#xA;├── consul-service -- 注册到consul的ribbon服务调用测试服务&#xA;├── api-gateway -- gateway作为网关的测试服务&#xA;├── admin-server -- admin监控中心服务&#xA;├── admin-client -- admin监控中心监控的应用服务&#xA;├── admin-security-server -- 带登录认证的admin监控中心服务&#xA;├── oauth2-server -- oauth2认证测试服务&#xA;├── oauth2-jwt-server -- 使用jwt的oauth2认证测试服务&#xA;├── oauth2-client -- 单点登录的oauth2客户端服务&#xA;├── nacos-config-client -- 用于演示nacos作为配置中心的nacos客户端&#xA;├── nacos-user-service -- 注册到nacos的提供User对象CRUD接口的服务&#xA;├── nacos-ribbon-service -- 注册到nacos的ribbon服务调用测试服务&#xA;├── sentinel-service -- sentinel功能测试服务&#xA;├── seata-order-service -- 整合了seata的订单服务&#xA;├── seata-storage-service -- 整合了seata的库存服务&#xA;├── seata-account-service -- 整合了seata的账户服务&#xA;├── micro-oauth2 -- Gateway + Oauth2 实现统一认证和鉴权&#xA;└── micro-knife4j -- Gateway + Knife4j聚合API文档&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;公众号&lt;/h2&gt; &#xA;&lt;p&gt;学习不走弯路，关注公众号「&lt;strong&gt;macrozheng&lt;/strong&gt;」，回复「&lt;strong&gt;学习路线&lt;/strong&gt;」，获取mall项目专属学习路线！&lt;/p&gt; &#xA;&lt;p&gt;加微信群交流，公众号后台回复「&lt;strong&gt;加群&lt;/strong&gt;」即可。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://macro-oss.oss-cn-shenzhen.aliyuncs.com/mall/banner/qrcode_for_macrozheng_258.jpg&#34; alt=&#34;公众号图片&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Grasscutters/Grasscutter</title>
    <updated>2022-07-17T02:02:25Z</updated>
    <id>tag:github.com,2022-07-17:/Grasscutters/Grasscutter</id>
    <link href="https://github.com/Grasscutters/Grasscutter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A server software reimplementation for a certain anime game.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://socialify.git.ci/Grasscutters/Grasscutter/image?description=1&amp;amp;forks=1&amp;amp;issues=1&amp;amp;language=1&amp;amp;logo=https%3A%2F%2Fs2.loli.net%2F2022%2F04%2F25%2FxOiJn7lCdcT5Mw1.png&amp;amp;name=1&amp;amp;owner=1&amp;amp;pulls=1&amp;amp;stargazers=1&amp;amp;theme=Light&#34; alt=&#34;Grasscutter&#34;&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;img alt=&#34;Documentation&#34; src=&#34;https://img.shields.io/badge/Wiki-Grasscutter-blue?style=for-the-badge&amp;amp;link=https://github.com/Grasscutters/Grasscutter/wiki&amp;amp;link=https://github.com/Grasscutters/Grasscutter/wiki&#34;&gt; &#xA; &lt;img alt=&#34;GitHub release (latest by date)&#34; src=&#34;https://img.shields.io/github/v/release/Grasscutters/Grasscutter?logo=java&amp;amp;style=for-the-badge&#34;&gt; &#xA; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/Grasscutters/Grasscutter?style=for-the-badge&#34;&gt; &#xA; &lt;img alt=&#34;GitHub last commit&#34; src=&#34;https://img.shields.io/github/last-commit/Grasscutters/Grasscutter?style=for-the-badge&#34;&gt; &#xA; &lt;img alt=&#34;GitHub Workflow Status&#34; src=&#34;https://img.shields.io/github/workflow/status/Grasscutters/Grasscutter/Build?logo=github&amp;amp;style=for-the-badge&#34;&gt;&#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;a href=&#34;https://discord.gg/T5vZU6UyeG&#34;&gt;&lt;img alt=&#34;Discord - Grasscutter&#34; src=&#34;https://img.shields.io/discord/965284035985305680?label=Discord&amp;amp;logo=discord&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;p&gt;EN | &lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/development/README_zh-CN.md&#34;&gt;简中&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/development/README_zh-TW.md&#34;&gt;繁中&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/development/README_fr-FR.md&#34;&gt;FR&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/development/README_es-ES.md&#34;&gt;ES&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/development/README_HE.md&#34;&gt;HE&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/development/README_ru-RU.md&#34;&gt;RU&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Attention:&lt;/strong&gt; We always welcome contributors to the project. Before adding your contribution, please carefully read our &lt;a href=&#34;https://github.com/Grasscutters/Grasscutter/raw/stable/CONTRIBUTING.md&#34;&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Current features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Logging in&lt;/li&gt; &#xA; &lt;li&gt;Combat&lt;/li&gt; &#xA; &lt;li&gt;Friends list&lt;/li&gt; &#xA; &lt;li&gt;Teleportation&lt;/li&gt; &#xA; &lt;li&gt;Gacha system&lt;/li&gt; &#xA; &lt;li&gt;Co-op &lt;em&gt;partially&lt;/em&gt; works&lt;/li&gt; &#xA; &lt;li&gt;Spawning monsters via console&lt;/li&gt; &#xA; &lt;li&gt;Inventory features (receiving items/characters, upgrading items/characters, etc)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick setup guide&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For support please join our &lt;a href=&#34;https://discord.gg/T5vZU6UyeG&#34;&gt;Discord&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Java SE - 17 (&lt;a href=&#34;https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html&#34;&gt;link&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you just want to &lt;strong&gt;run it&lt;/strong&gt;, then &lt;strong&gt;jre&lt;/strong&gt; only is fine.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.mongodb.com/try/download/community&#34;&gt;MongoDB&lt;/a&gt; (recommended 4.0+)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Proxy daemon: mitmproxy (mitmdump, recommended), Fiddler Classic, etc.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you updated from an older version, delete &lt;code&gt;config.json&lt;/code&gt; to regenerate it.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get &lt;code&gt;grasscutter.jar&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Download from &lt;a href=&#34;https://github.com/Grasscutters/Grasscutter/suites/6895963598/artifacts/267483297&#34;&gt;actions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Grasscutters/Grasscutter/development/#Building&#34;&gt;Build by yourself&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Create a &lt;code&gt;resources&lt;/code&gt; folder in the directory where grasscutter.jar is located and move your &lt;code&gt;BinOutput&lt;/code&gt; and &lt;code&gt;ExcelBinOutput&lt;/code&gt; folders there &lt;em&gt;(Check the &lt;a href=&#34;https://github.com/Grasscutters/Grasscutter/wiki&#34;&gt;wiki&lt;/a&gt; for more details how to get those.)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run Grasscutter with &lt;code&gt;java -jar grasscutter.jar&lt;/code&gt;. &lt;strong&gt;Make sure mongodb service is running as well.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Connecting with the client&lt;/h3&gt; &#xA;&lt;p&gt;½. Create an account using &lt;a href=&#34;https://github.com/Grasscutters/Grasscutter/wiki/Commands#targeting&#34;&gt;server console command&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Redirect traffic: (choose one)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;mitmdump: &lt;code&gt;mitmdump -s proxy.py -k&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Trust CA certificate:&lt;/p&gt; &lt;p&gt;​ **Note:**The CA certificate is usually stored in &lt;code&gt;%USERPROFILE%\ .mitmproxy&lt;/code&gt;, or you can download it from &lt;code&gt;http://mitm.it&lt;/code&gt;&lt;/p&gt; &lt;p&gt;​ Double click for &lt;a href=&#34;https://docs.microsoft.com/en-us/skype-sdk/sdn/articles/installing-the-trusted-root-certificate#installing-a-trusted-root-certificate&#34;&gt;install&lt;/a&gt; or ...&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Via command line&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;certutil -addstore root %USERPROFILE%\.mitmproxy\mitmproxy-ca-cert.cer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Fiddler Classic: Run Fiddler Classic, turn on &lt;code&gt;Decrypt https traffic&lt;/code&gt; in setting and change the default port there (Tools -&amp;gt; Options -&amp;gt; Connections) to anything other than &lt;code&gt;8888&lt;/code&gt;, and load &lt;a href=&#34;https://github.lunatic.moe/fiddlerscript&#34;&gt;this script&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Melledy/Grasscutter/wiki/Running#traffic-route-map&#34;&gt;Hosts file&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set network proxy to &lt;code&gt;127.0.0.1:8080&lt;/code&gt; or the proxy port you specified.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;you can also use &lt;code&gt;start.cmd&lt;/code&gt; to start servers and proxy daemons automatically, but you have to set up JAVA_HOME enviroment&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Grasscutter uses Gradle to handle dependencies &amp;amp; building.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html&#34;&gt;Java SE Development Kits - 17&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Windows&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/Grasscutters/Grasscutter.git&#xA;cd Grasscutter&#xA;.\gradlew.bat # Setting up environments&#xA;.\gradlew jar # Compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Linux&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/Grasscutters/Grasscutter.git&#xA;cd Grasscutter&#xA;chmod +x gradlew&#xA;./gradlew jar # Compile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find the output jar in the root of the project folder.&lt;/p&gt; &#xA;&lt;h3&gt;Commands have moved to the &lt;a href=&#34;https://github.com/Grasscutters/Grasscutter/wiki/Commands&#34;&gt;wiki&lt;/a&gt;!&lt;/h3&gt; &#xA;&lt;h1&gt;Quick Troubleshooting&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If compiling wasn&#39;t successful, please check your JDK installation (JDK 17 and validated JDK&#39;s bin PATH variable)&lt;/li&gt; &#xA; &lt;li&gt;My client doesn&#39;t connect, doesn&#39;t login, 4206, etc... - Mostly your proxy daemon setup is &lt;em&gt;the issue&lt;/em&gt;, if using Fiddler make sure it running on another port except 8888&lt;/li&gt; &#xA; &lt;li&gt;Startup sequence: MongoDB &amp;gt; Grasscutter &amp;gt; Proxy daemon (mitmdump, fiddler, etc.) &amp;gt; Game&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>