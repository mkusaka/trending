<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-28T01:46:27Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>doocs/leetcode</title>
    <updated>2022-08-28T01:46:27Z</updated>
    <id>tag:github.com,2022-08-28:/doocs/leetcode</id>
    <link href="https://github.com/doocs/leetcode" rel="alternate"></link>
    <summary type="html">&lt;p&gt;😏 LeetCode solutions in any programming language | 多种编程语言实现 LeetCode、《剑指 Offer（第 2 版）》、《程序员面试金典（第 6 版）》题解&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;&lt;img src=&#34;https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/leetcode@main/images/leetcode-doocs.png&#34; alt=&#34;LeetCode-GitHub-Doocs&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/langs-Java%20%7C%20Python%20%7C%20C%2B%2B%20%7C%20Go%20%7C%20TypeScript%20%7C%20...-red?style=flat-square&amp;amp;color=42b883&#34; alt=&#34;languages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://doocs.github.io/#/?id=how-to-join&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/organization-join%20us-42b883?style=flat-square&#34; alt=&#34;open-source-organization&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/leetcode/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/doocs/leetcode?color=42b883&amp;amp;style=flat-square&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://opencollective.com/doocs-leetcode/backers/badge.svg&#34; alt=&#34;backers on Open Collective&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/backers/doocs-leetcode?color=42b883&amp;amp;style=flat-square&amp;amp;logo=open%20collective&amp;amp;logoColor=ffffff&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/leetcode/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/doocs/leetcode?color=42b883&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/doocs/leetcode/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/doocs/leetcode?color=42b883&amp;amp;logo=github&amp;amp;style=flat-square&#34; alt=&#34;forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/doocs-leetcode/sponsors/badge.svg&#34; alt=&#34;Sponsors on Open Collective&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/sponsors/doocs-leetcode?color=42b883&amp;amp;style=flat-square&amp;amp;logo=open%20collective&amp;amp;logoColor=ffffff&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;本项目包含 LeetCode、《剑指 Offer（第 2 版）》、《剑指 Offer（专项突击版）》、《程序员面试金典（第 6 版）》等题目的相关题解。所有题解均由多种编程语言实现，包括但不限于：Java、Python、C++、Go、TypeScript、Rust，日常更新。欢迎 Star 🌟 关注&lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;本项目&lt;/a&gt;，获取项目最新动态。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/README_EN.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;站点&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vercel: &lt;a href=&#34;https://doocs-leetcode.vercel.app&#34;&gt;https://doocs-leetcode.vercel.app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GitHub Pages: &lt;a href=&#34;https://doocs.github.io/leetcode&#34;&gt;https://doocs.github.io/leetcode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;算法全解&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/README.md&#34;&gt;LeetCode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/CONTEST_README.md&#34;&gt;往期竞赛合集&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/lcof/README.md&#34;&gt;剑指 Offer（第 2 版）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/lcof2/README.md&#34;&gt;剑指 Offer（专项突击版）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/lcci/README.md&#34;&gt;程序员面试金典（第 6 版）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;算法提升专题&lt;/h2&gt; &#xA;&lt;h3&gt;1. 基础算法&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0034.Find%20First%20and%20Last%20Position%20of%20Element%20in%20Sorted%20Array/README.md&#34;&gt;在排序数组中查找元素的第一个和最后一个位置&lt;/a&gt; - &lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1800-1899/1870.Minimum%20Speed%20to%20Arrive%20on%20Time/README.md&#34;&gt;准时到达的列车最小时速&lt;/a&gt; - &lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1800-1899/1894.Find%20the%20Student%20that%20Will%20Replace%20the%20Chalk/README.md&#34;&gt;找到需要补充粉笔的学生编号&lt;/a&gt; - &lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1800-1899/1898.Maximum%20Number%20of%20Removable%20Characters/README.md&#34;&gt;可移除字符的最大数目&lt;/a&gt; - &lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0912.Sort%20an%20Array/README.md&#34;&gt;排序数组&lt;/a&gt; - &lt;code&gt;快速排序&lt;/code&gt;、&lt;code&gt;归并排序&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0415.Add%20Strings/README.md&#34;&gt;字符串相加&lt;/a&gt; - &lt;code&gt;高精度加法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0043.Multiply%20Strings/README.md&#34;&gt;字符串相乘&lt;/a&gt; - &lt;code&gt;高精度乘法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0303.Range%20Sum%20Query%20-%20Immutable/README.md&#34;&gt;区域和检索 - 数组不可变&lt;/a&gt; - &lt;code&gt;前缀和&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0304.Range%20Sum%20Query%202D%20-%20Immutable/README.md&#34;&gt;二维区域和检索 - 矩阵不可变&lt;/a&gt; - &lt;code&gt;二维前缀和&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0370.Range%20Addition/README.md&#34;&gt;区间加法&lt;/a&gt; - &lt;code&gt;前缀和&lt;/code&gt;、&lt;code&gt;差分&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2100-2199/2132.Stamping%20the%20Grid/README.md&#34;&gt;用邮票贴满网格图&lt;/a&gt; - &lt;code&gt;二维前缀和&lt;/code&gt;、&lt;code&gt;二维差分&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0003.Longest%20Substring%20Without%20Repeating%20Characters/README.md&#34;&gt;无重复字符的最长子串&lt;/a&gt; - &lt;code&gt;双指针&lt;/code&gt;、&lt;code&gt;哈希表&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0713.Subarray%20Product%20Less%20Than%20K/README.md&#34;&gt;乘积小于 K 的子数组&lt;/a&gt; - &lt;code&gt;双指针&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0100-0199/0191.Number%20of%201%20Bits/README.md&#34;&gt;位 1 的个数&lt;/a&gt; - &lt;code&gt;位运算&lt;/code&gt;、&lt;code&gt;lowbit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0056.Merge%20Intervals/README.md&#34;&gt;合并区间&lt;/a&gt; - &lt;code&gt;区间合并&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- 排序算法、待补充 --&gt; &#xA;&lt;h3&gt;2. 数据结构&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0707.Design%20Linked%20List/README.md&#34;&gt;设计链表&lt;/a&gt; - &lt;code&gt;单链表&lt;/code&gt;、&lt;code&gt;指针引用&lt;/code&gt;、&lt;code&gt;数组实现&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0496.Next%20Greater%20Element%20I/README.md&#34;&gt;下一个更大元素 I&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0739.Daily%20Temperatures/README.md&#34;&gt;每日温度&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0907.Sum%20of%20Subarray%20Minimums/README.md&#34;&gt;子数组的最小值之和&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0962.Maximum%20Width%20Ramp/README.md&#34;&gt;最大宽度坡&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0768.Max%20Chunks%20To%20Make%20Sorted%20II/README.md&#34;&gt;最多能完成排序的块 II&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2100-2199/2104.Sum%20of%20Subarray%20Ranges/README.md&#34;&gt;子数组范围和&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1800-1899/1856.Maximum%20Subarray%20Min-Product/README.md&#34;&gt;子数组最小乘积的最大值&lt;/a&gt; - &lt;code&gt;单调栈&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0239.Sliding%20Window%20Maximum/README.md&#34;&gt;滑动窗口最大值&lt;/a&gt; - &lt;code&gt;单调队列&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1499.Max%20Value%20of%20Equation/README.md&#34;&gt;满足不等式的最大值&lt;/a&gt; - &lt;code&gt;单调队列&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0800-0899/0862.Shortest%20Subarray%20with%20Sum%20at%20Least%20K/README.md&#34;&gt;和至少为 K 的最短子数组&lt;/a&gt; - &lt;code&gt;单调队列&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1425.Constrained%20Subsequence%20Sum/README.md&#34;&gt;带限制的子序列和&lt;/a&gt; - &lt;code&gt;动态规划&lt;/code&gt;、&lt;code&gt;单调队列优化&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0291.Word%20Pattern%20II/README.md&#34;&gt;单词规律 II&lt;/a&gt; - &lt;code&gt;哈希表&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0214.Shortest%20Palindrome/README.md&#34;&gt;最短回文串&lt;/a&gt; - &lt;code&gt;字符串哈希&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0336.Palindrome%20Pairs/README.md&#34;&gt;回文对&lt;/a&gt; - &lt;code&gt;字符串哈希&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1000-1099/1044.Longest%20Duplicate%20Substring/README.md&#34;&gt;最长重复子串&lt;/a&gt; - &lt;code&gt;字符串哈希&lt;/code&gt;、&lt;code&gt;二分查找&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1300-1399/1316.Distinct%20Echo%20Substrings/README.md&#34;&gt;不同的循环子字符串&lt;/a&gt; - &lt;code&gt;字符串哈希&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;3. 搜索&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0733.Flood%20Fill/README.md&#34;&gt;图像渲染&lt;/a&gt;- &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;Flood Fill 算法&lt;/code&gt;、&lt;code&gt;连通性模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0200.Number%20of%20Islands/README.md&#34;&gt;岛屿数量&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;Flood Fill 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0500-0599/0542.01%20Matrix/README.md&#34;&gt;01 矩阵&lt;/a&gt; - &lt;code&gt;多源 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1700-1799/1765.Map%20of%20Highest%20Peak/README.md&#34;&gt;地图中的最高点&lt;/a&gt; - &lt;code&gt;多源 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1100-1199/1197.Minimum%20Knight%20Moves/README.md&#34;&gt;进击的骑士&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最短路模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1000-1099/1091.Shortest%20Path%20in%20Binary%20Matrix/README.md&#34;&gt;二进制矩阵中的最短路径&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最短路模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1900-1999/1926.Nearest%20Exit%20from%20Entrance%20in%20Maze/README.md&#34;&gt;迷宫中离入口最近的出口&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最短路模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1200-1299/1293.Shortest%20Path%20in%20a%20Grid%20with%20Obstacles%20Elimination/README.md&#34;&gt;网格中的最短路径&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最短路模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0752.Open%20the%20Lock/README.md&#34;&gt;打开转盘锁&lt;/a&gt; - &lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;双向 BFS&lt;/code&gt;、&lt;code&gt;A* 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0100-0199/0127.Word%20Ladder/README.md&#34;&gt;单词接龙&lt;/a&gt; - &lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;双向 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2000-2099/2059.Minimum%20Operations%20to%20Convert%20Number/README.md&#34;&gt;转化数字的最小运算数&lt;/a&gt; - &lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;双向 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0773.Sliding%20Puzzle/README.md&#34;&gt;滑动谜题&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;A* 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0800-0899/0847.Shortest%20Path%20Visiting%20All%20Nodes/README.md&#34;&gt;访问所有节点的最短路径&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;最小步数模型&lt;/code&gt;、&lt;code&gt;A* 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0600-0699/0675.Cut%20Off%20Trees%20for%20Golf%20Event/README.md&#34;&gt;为高尔夫比赛砍树&lt;/a&gt; - &lt;code&gt;BFS&lt;/code&gt;、&lt;code&gt;A* 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1300-1399/1368.Minimum%20Cost%20to%20Make%20at%20Least%20One%20Valid%20Path%20in%20a%20Grid/README.md&#34;&gt;使网格图至少有一条有效路径的最小代价&lt;/a&gt; - &lt;code&gt;双端队列 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2200-2299/2290.Minimum%20Obstacle%20Removal%20to%20Reach%20Corner/README.md&#34;&gt;到达角落需要移除障碍物的最小数目&lt;/a&gt; - &lt;code&gt;双端队列 BFS&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0490.The%20Maze/README.md&#34;&gt;迷宫&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;连通性模型&lt;/code&gt;、&lt;code&gt;Flood Fill 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0079.Word%20Search/README.md&#34;&gt;单词搜索&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;搜索顺序&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1200-1299/1219.Path%20with%20Maximum%20Gold/README.md&#34;&gt;黄金矿工&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;搜索顺序&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0473.Matchsticks%20to%20Square/README.md&#34;&gt;火柴拼正方形&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;、&lt;code&gt;剪枝&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0600-0699/0698.Partition%20to%20K%20Equal%20Sum%20Subsets/README.md&#34;&gt;划分为 k 个相等的子集&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;、&lt;code&gt;剪枝&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1700-1799/1723.Find%20Minimum%20Time%20to%20Finish%20All%20Jobs/README.md&#34;&gt;完成所有工作的最短时间&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;、&lt;code&gt;剪枝&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2300-2399/2305.Fair%20Distribution%20of%20Cookies/README.md&#34;&gt;公平分发饼干&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;回溯&lt;/code&gt;、&lt;code&gt;剪枝&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0329.Longest%20Increasing%20Path%20in%20a%20Matrix/README.md&#34;&gt;矩阵中的最长递增路径&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2300-2399/2328.Number%20of%20Increasing%20Paths%20in%20a%20Grid/README.md&#34;&gt;网格图中递增路径的数目&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0200-0299/0294.Flip%20Game%20II/README.md&#34;&gt;翻转游戏 II&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;状态压缩&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1575.Count%20All%20Possible%20Routes/README.md&#34;&gt;统计所有可行路径&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1444.Number%20of%20Ways%20of%20Cutting%20a%20Pizza/README.md&#34;&gt;切披萨的方案数&lt;/a&gt; - &lt;code&gt;DFS&lt;/code&gt;、&lt;code&gt;记忆化搜索&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- DFS 待补充 --&gt; &#xA;&lt;h3&gt;4. 动态规划（DP）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0100-0199/0118.Pascal&#39;s%20Triangle/README.md&#34;&gt;杨辉三角&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;数字三角形模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0000-0099/0064.Minimum%20Path%20Sum/README.md&#34;&gt;最小路径和&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;数字三角形模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0741.Cherry%20Pickup/README.md&#34;&gt;摘樱桃&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;数字三角形模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1463.Cherry%20Pickup%20II/README.md&#34;&gt;摘樱桃 II&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;数字三角形模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0300.Longest%20Increasing%20Subsequence/README.md&#34;&gt;最长递增子序列&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0435.Non-overlapping%20Intervals/README.md&#34;&gt;无重叠区间&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;、&lt;code&gt;贪心优化&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0960.Delete%20Columns%20to%20Make%20Sorted%20III/README.md&#34;&gt;删列造序 III&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0354.Russian%20Doll%20Envelopes/README.md&#34;&gt;俄罗斯套娃信封问题&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;、&lt;code&gt;贪心优化&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1691.Maximum%20Height%20by%20Stacking%20Cuboids/README.md&#34;&gt;堆叠长方体的最大高度&lt;/a&gt; - &lt;code&gt;排序&lt;/code&gt;、&lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1626.Best%20Team%20With%20No%20Conflicts/README.md&#34;&gt;无矛盾的最佳球队&lt;/a&gt; - &lt;code&gt;排序&lt;/code&gt;、&lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长上升子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1100-1199/1143.Longest%20Common%20Subsequence/README.md&#34;&gt;最长公共子序列&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长公共子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0712.Minimum%20ASCII%20Delete%20Sum%20for%20Two%20Strings/README.md&#34;&gt;两个字符串的最小 ASCII 删除和&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长公共子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0500-0599/0583.Delete%20Operation%20for%20Two%20Strings/README.md&#34;&gt;两个字符串的删除操作&lt;/a&gt; - &lt;code&gt;线性 DP&lt;/code&gt;、&lt;code&gt;最长公共子序列模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0494.Target%20Sum/README.md&#34;&gt;目标和&lt;/a&gt; - &lt;code&gt;0-1 背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0416.Partition%20Equal%20Subset%20Sum/README.md&#34;&gt;分割等和子集&lt;/a&gt; - &lt;code&gt;0-1 背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1000-1099/1049.Last%20Stone%20Weight%20II/README.md&#34;&gt;最后一块石头的重量 II&lt;/a&gt; - &lt;code&gt;0-1 背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0322.Coin%20Change/README.md&#34;&gt;零钱兑换&lt;/a&gt; - &lt;code&gt;完全背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0377.Combination%20Sum%20IV/README.md&#34;&gt;组合总和 Ⅳ&lt;/a&gt; - &lt;code&gt;完全背包问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2200-2299/2218.Maximum%20Value%20of%20K%20Coins%20From%20Piles/README.md&#34;&gt;从栈中取出 K 个硬币的最大面值和&lt;/a&gt; - &lt;code&gt;分组背包问题&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- 背包问题、状态机模型、状压DP、区间DP、树形DP、数位DP 待补充 --&gt; &#xA;&lt;h3&gt;5. 高级数据结构&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1559.Detect%20Cycles%20in%202D%20Grid/README.md&#34;&gt;二维网格图中探测环&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;检测环&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0399.Evaluate%20Division/README.md&#34;&gt;除法求值&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;权值维护&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0959.Regions%20Cut%20By%20Slashes/README.md&#34;&gt;由斜杠划分区域&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;连通分量个数&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0778.Swim%20in%20Rising%20Water/README.md&#34;&gt;水位上升的泳池中游泳&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1200-1299/1202.Smallest%20String%20With%20Swaps/README.md&#34;&gt;交换字符串中的元素&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0800-0899/0803.Bricks%20Falling%20When%20Hit/README.md&#34;&gt;打砖块&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;逆向思维&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0900-0999/0928.Minimize%20Malware%20Spread%20II/README.md&#34;&gt;尽量减少恶意软件的传播 II&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;逆向思维&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1697.Checking%20Existence%20of%20Edge%20Length%20Limited%20Paths/README.md&#34;&gt;检查边长度限制的路径是否存在&lt;/a&gt; - &lt;code&gt;并查集&lt;/code&gt;、&lt;code&gt;离线思维&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1579.Remove%20Max%20Number%20of%20Edges%20to%20Keep%20Graph%20Fully%20Traversable/README.md&#34;&gt;保证图可完全遍历&lt;/a&gt; - &lt;code&gt;双并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0307.Range%20Sum%20Query%20-%20Mutable/README.md&#34;&gt;区域和检索 - 数组可修改&lt;/a&gt; - &lt;code&gt;树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1649.Create%20Sorted%20Array%20through%20Instructions/README.md&#34;&gt;通过指令创建有序数组&lt;/a&gt; - &lt;code&gt;树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2100-2199/2179.Count%20Good%20Triplets%20in%20an%20Array/README.md&#34;&gt;统计数组中好三元组数目&lt;/a&gt; - &lt;code&gt;树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1505.Minimum%20Possible%20Integer%20After%20at%20Most%20K%20Adjacent%20Swaps%20On%20Digits/README.md&#34;&gt;最多 K 次交换相邻数位后得到的最小整数&lt;/a&gt; - &lt;code&gt;树状数组&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0308.Range%20Sum%20Query%202D%20-%20Mutable/README.md&#34;&gt;二维区域和检索 - 可变&lt;/a&gt; - &lt;code&gt;二维树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0315.Count%20of%20Smaller%20Numbers%20After%20Self/README.md&#34;&gt;计算右侧小于当前元素的个数&lt;/a&gt; - &lt;code&gt;离散化树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0300-0399/0327.Count%20of%20Range%20Sum/README.md&#34;&gt;区间和的个数&lt;/a&gt; - &lt;code&gt;离散化树状数组&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0400-0499/0493.Reverse%20Pairs/README.md&#34;&gt;翻转对&lt;/a&gt; - &lt;code&gt;离散化树状数组&lt;/code&gt;、&lt;code&gt;分治归并&lt;/code&gt;、&lt;code&gt;线段树&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0600-0699/0673.Number%20of%20Longest%20Increasing%20Subsequence/README.md&#34;&gt;最长递增子序列的个数&lt;/a&gt; - &lt;code&gt;离散化树状数组&lt;/code&gt;、&lt;code&gt;区间最值问题&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1600-1699/1622.Fancy%20Sequence/README.md&#34;&gt;奇妙序列&lt;/a&gt; - &lt;code&gt;动态开点线段树&lt;/code&gt;、&lt;code&gt;懒标记&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0715.Range%20Module/README.md&#34;&gt;Range 模块&lt;/a&gt; - &lt;code&gt;动态开点线段树&lt;/code&gt;、&lt;code&gt;懒标记&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0732.My%20Calendar%20III/README.md&#34;&gt;我的日程安排表 III&lt;/a&gt; - &lt;code&gt;动态开点线段树&lt;/code&gt;、&lt;code&gt;懒标记&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2100-2199/2158.Amount%20of%20New%20Area%20Painted%20Each%20Day/README.md&#34;&gt;每天绘制的新区域数量&lt;/a&gt; - &lt;code&gt;动态开点线段树&lt;/code&gt;、&lt;code&gt;懒标记&lt;/code&gt;、&lt;code&gt;区间染色模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2200-2299/2213.Longest%20Substring%20of%20One%20Repeating%20Character/README.md&#34;&gt;由单个字符重复的最长子字符串&lt;/a&gt; - &lt;code&gt;线段树&lt;/code&gt;、&lt;code&gt;动态最大子段和模型&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0800-0899/0850.Rectangle%20Area%20II/README.md&#34;&gt;矩形面积 II&lt;/a&gt; - &lt;code&gt;线段树&lt;/code&gt;、&lt;code&gt;离散化&lt;/code&gt;、&lt;code&gt;扫描线&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;6. 图论&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0743.Network%20Delay%20Time/README.md&#34;&gt;网络延迟时间&lt;/a&gt; - &lt;code&gt;最短路&lt;/code&gt;、&lt;code&gt;Dijkstra 算法&lt;/code&gt;、&lt;code&gt;Bellman Ford 算法&lt;/code&gt;、&lt;code&gt;SPFA 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/2200-2299/2203.Minimum%20Weighted%20Subgraph%20With%20the%20Required%20Paths/README.md&#34;&gt;得到要求路径的最小带权子图&lt;/a&gt; - &lt;code&gt;最短路&lt;/code&gt;、&lt;code&gt;Dijkstra 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1500-1599/1584.Min%20Cost%20to%20Connect%20All%20Points/README.md&#34;&gt;连接所有点的最小费用&lt;/a&gt; - &lt;code&gt;最小生成树&lt;/code&gt;、&lt;code&gt;Prim 算法&lt;/code&gt;、&lt;code&gt;Kruskal 算法&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1100-1199/1135.Connecting%20Cities%20With%20Minimum%20Cost/README.md&#34;&gt;最低成本联通所有城市&lt;/a&gt; - &lt;code&gt;最小生成树&lt;/code&gt;、&lt;code&gt;Kruskal 算法&lt;/code&gt;、&lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1100-1199/1168.Optimize%20Water%20Distribution%20in%20a%20Village/README.md&#34;&gt;水资源分配优化&lt;/a&gt; - &lt;code&gt;最小生成树&lt;/code&gt;、&lt;code&gt;Kruskal 算法&lt;/code&gt;、&lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/1400-1499/1489.Find%20Critical%20and%20Pseudo-Critical%20Edges%20in%20Minimum%20Spanning%20Tree/README.md&#34;&gt;找到最小生成树里的关键边和伪关键边&lt;/a&gt; - &lt;code&gt;最小生成树&lt;/code&gt;、&lt;code&gt;Kruskal 算法&lt;/code&gt;、&lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/solution/0700-0799/0785.Is%20Graph%20Bipartite/README.md&#34;&gt;判断二分图&lt;/a&gt; - &lt;code&gt;染色法判定二分图&lt;/code&gt;、&lt;code&gt;并查集&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- 待补充&#xA;### 7. 数学知识&#xA; --&gt; &#xA;&lt;h2&gt;加入我们&lt;/h2&gt; &#xA;&lt;p&gt;刷编程题的最大好处就是可以锻炼解决问题的思维能力。相信我，「如何去思考」​ 本身也是一项需要不断学习和练习的技能。非常感谢前微软工程师、现蚂蚁金服技术专家 &lt;a href=&#34;https://github.com/kfstorm&#34;&gt;@kfstorm&lt;/a&gt; 贡献了本项目的所有 &lt;a href=&#34;https://github.com/doocs/leetcode/pull/245&#34;&gt;C# 题解&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;如果你对本项目感兴趣，并且希望加入我们刷题小分队，欢迎随时提交 &lt;a href=&#34;https://github.com/doocs/leetcode/pulls&#34;&gt;PR&lt;/a&gt;。请参考如下步骤：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;将本项目 fork 到你的个人 GitHub 帐户，然后 clone 到你的本地机器；&lt;/li&gt; &#xA; &lt;li&gt;进入 leetcode 目录，切换到一个新的分支；&lt;/li&gt; &#xA; &lt;li&gt;对项目做出一些变更，然后使用 git add、commit、push 等命令将你的本地变更提交到你的远程 GitHub 仓库；&lt;/li&gt; &#xA; &lt;li&gt;将你的变更以 PR 的形式提交过来，项目的维护人员会在第一时间对你的变更进行 review！&lt;/li&gt; &#xA; &lt;li&gt;你也可以参考帮助文档 &lt;a href=&#34;https://help.github.com/cn&#34;&gt;https://help.github.com/cn&lt;/a&gt; 了解更多细节。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &amp;nbsp; &lt;a href=&#34;https://github.com/doocs/leetcode&#34;&gt;&lt;img src=&#34;https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/leetcode@main/images/how-to-contribute.svg?sanitize=true&#34; alt=&#34;how-to-contribute&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.gitpod.io&#34;&gt;Gitpod.io&lt;/a&gt; 是一个免费的在线开发环境，你也可以使用它参与本项目。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/#https://github.com/doocs/leetcode&#34; target=&#34;_blank&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Stars 趋势&lt;/h2&gt; &#xA;&lt;!-- 使用 https://starchart.cc/ 自动刷新 stars 数据，若有问题，可以使用 GitHub Action: starcharts.yml --&gt; &#xA;&lt;!-- &lt;a href=&#34;https://github.com/doocs/leetcode/stargazers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://starchart.cc/doocs/leetcode.svg&#34; alt=&#34;Stargazers over time&#34; /&gt;&lt;/a&gt; --&gt; &#xA;&lt;!-- [![Star History Chart](https://api.star-history.com/svg?repos=doocs/leetcode&amp;type=Date)](https://star-history.com/#doocs/leetcode) --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doocs/leetcode/stargazers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/doocs/leetcode/main/images/starcharts.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;贡献者&lt;/h2&gt; &#xA;&lt;p&gt;感谢以下所有朋友对本项目的贡献！&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/doocs/leetcode/graphs/contributors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=doocs/leetcode&amp;amp;max=500&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;赞助者&lt;/h2&gt; &#xA;&lt;p&gt;感谢以下个人、组织对本项目的支持和赞助！&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/doocs-leetcode/backers.svg?width=890&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/doocs-leetcode/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/doocs-leetcode/sponsors.svg?width=890&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/doocs-leetcode/sponsors.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;&lt;em&gt;You help the developer community practice for interviews, and there is nothing better we could ask for.&lt;/em&gt;&#34; -- &lt;a href=&#34;https://opencollective.com/alan-yessenbayev&#34;&gt;Alan Yessenbayev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;推荐者&lt;/h2&gt; &#xA;&lt;p&gt;知名互联网科技博主 &lt;a href=&#34;https://weibo.com/fly51fly&#34;&gt;@爱可可-爱生活&lt;/a&gt; 微博推荐。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://weibo.com/fly51fly&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn-doocs.oss-cn-shenzhen.aliyuncs.com/gh/doocs/leetcode@main/images/recommender-fly51fly.png&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;许可证&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;知识共享 版权归属-相同方式共享 4.0 国际 公共许可证&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LSPosed/LSPosed</title>
    <updated>2022-08-28T01:46:27Z</updated>
    <id>tag:github.com,2022-08-28:/LSPosed/LSPosed</id>
    <link href="https://github.com/LSPosed/LSPosed" rel="alternate"></link>
    <summary type="html">&lt;p&gt;LSPosed Framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LSPosed Framework&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://shields.io/github/workflow/status/LSPosed/LSPosed/Core?event=push&amp;amp;logo=github&amp;amp;label=Build&#34; alt=&#34;Build&#34;&gt; &lt;a href=&#34;https://lsposed.crowdin.com/lsposed&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Localization-Crowdin-blueviolet?logo=Crowdin&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/LSPosed&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Follow-Telegram-blue.svg?logo=telegram&#34; alt=&#34;Channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qun.qq.com/qqweb/qunpro/share?_wv=3&amp;amp;_wwv=128&amp;amp;inviteCode=Xz9dJ&amp;amp;from=246610&amp;amp;biz=ka&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Join-QQ%E9%A2%91%E9%81%93-red?logo=tencent-qq&amp;amp;logoColor=red&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LSPosed/LSPosed/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/LSPosed/LSPosed?color=orange&amp;amp;logoColor=orange&amp;amp;label=Download&amp;amp;logo=DocuSign&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LSPosed/LSPosed/releases&#34;&gt;&lt;img src=&#34;https://shields.io/github/downloads/LSPosed/LSPosed/total?logo=Bookmeter&amp;amp;label=Counts&amp;amp;logoColor=yellow&amp;amp;color=yellow&#34; alt=&#34;Total&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;A Riru / Zygisk module trying to provide an ART hooking framework which delivers consistent APIs with the OG Xposed, leveraging LSPlant hooking framework.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Xposed is a framework for modules that can change the behavior of the system and apps without touching any APKs. That&#39;s great because it means that modules can work for different versions and even ROMs without any changes (as long as the original code was not changed too much). It&#39;s also easy to undo. As all changes are done in the memory, you just need to deactivate the module and reboot to get your original system back. There are many other advantages, but here is just one more: multiple modules can do changes to the same part of the system or app. With modified APKs, you have to choose one. No way to combine them, unless the author builds multiple APKs with different combinations.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Supported Versions&lt;/h2&gt; &#xA;&lt;p&gt;Android 8.1 ~ 13&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Magisk v23+ (Riru) / v24+ (Zygisk)&lt;/li&gt; &#xA; &lt;li&gt;(For Riru flavor) Install &lt;a href=&#34;https://github.com/RikkaApps/Riru/releases&#34;&gt;Riru&lt;/a&gt; v25+ from Magisk repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/LSPosed/LSPosed/master/#download&#34;&gt;Download&lt;/a&gt; and install LSPosed in Magisk app&lt;/li&gt; &#xA; &lt;li&gt;Reboot&lt;/li&gt; &#xA; &lt;li&gt;Follow the prompt to add LSPosed shortcut to launcher &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Some launchers won&#39;t show a prompt but silently add the shortcut&lt;/li&gt; &#xA;   &lt;li&gt;If the shortcut cannot be added, you can install the manager located at &lt;code&gt;/data/adb/lspd/manager.apk&lt;/code&gt; manually&lt;/li&gt; &#xA;   &lt;li&gt;If you accidentally deleted the shortcut, reboot your device or install the manager manually to add the shortcut again&lt;/li&gt; &#xA;   &lt;li&gt;If you don&#39;t need a shortcut, install the manager manually and you can disable future shortcut being added in the settings&lt;/li&gt; &#xA;   &lt;li&gt;In any case, you can dial &lt;code&gt;*#*#5776733#*#*&lt;/code&gt; (aka LSPosed) to launch the manager if you have a dialer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Have fun :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;For stable releases, please go to &lt;a href=&#34;https://github.com/LSPosed/LSPosed/releases&#34;&gt;Github Releases page&lt;/a&gt; For canary build, please check &lt;a href=&#34;https://github.com/LSPosed/LSPosed/actions&#34;&gt;Github Actions&lt;/a&gt; Note: debug builds are only available in Github Actions.&lt;/p&gt; &#xA;&lt;h2&gt;Get Help&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;GitHub issues: &lt;a href=&#34;https://github.com/LSPosed/LSPosed/issues/&#34;&gt;Issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;(For Chinese speakers) 本项目只接受英语&lt;strong&gt;标题&lt;/strong&gt;的issue。如果您不懂英语，请使用&lt;a href=&#34;https://www.deepl.com/zh/translator&#34;&gt;翻译工具&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;For Developers&lt;/h2&gt; &#xA;&lt;p&gt;Developers are welcome to write Xposed modules with hooks based on LSPosed Framework. A module based on LSPosed framework is fully compatible with the original Xposed Framework, and vice versa, a Xposed Framework-based module will work well with LSPosed framework too.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://api.xposed.info/&#34;&gt;Xposed Framework API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We use our own module repository. We welcome developers to submit modules to our repository, and then modules can be downloaded in LSPosed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Xposed-Modules-Repo&#34;&gt;LSPosed Module Repository&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Community Discussion&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Telegram: &lt;a href=&#34;https://t.me/s/LSPosed&#34;&gt;@LSPosed&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Notice: These community groups don&#39;t accept any bug report, please use &lt;a href=&#34;https://raw.githubusercontent.com/LSPosed/LSPosed/master/#get-help&#34;&gt;Get help&lt;/a&gt; to report.&lt;/p&gt; &#xA;&lt;h2&gt;Translation Contributing&lt;/h2&gt; &#xA;&lt;p&gt;You can contribute translation &lt;a href=&#34;https://lsposed.crowdin.com/lsposed&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk/&#34;&gt;Magisk&lt;/a&gt;: makes all these possible&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RikkaApps/Riru&#34;&gt;Riru&lt;/a&gt;: provides a way to inject code into zygote process&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rovo89/XposedBridge&#34;&gt;XposedBridge&lt;/a&gt;: the OG Xposed framework APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jmpews/Dobby&#34;&gt;Dobby&lt;/a&gt;: used for inline hooking&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LSPosed/LSPlant&#34;&gt;LSPlant&lt;/a&gt;: the core ART hooking framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ElderDrivers/EdXposed&#34;&gt;EdXposed&lt;/a&gt;: fork source&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://github.com/ganyao114/SandHook/&#34;&gt;SandHook&lt;/a&gt;: ART hooking framework for SandHook variant&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://github.com/rk700/YAHFA&#34;&gt;YAHFA&lt;/a&gt;: previous ART hooking framework&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://github.com/linkedin/dexmaker&#34;&gt;dexmaker&lt;/a&gt; and &lt;a href=&#34;https://github.com/JakeWharton/dalvik-dx&#34;&gt;dalvikdx&lt;/a&gt;: to dynamically generate YAHFA hooker classes&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://github.com/LSPosed/DexBuilder&#34;&gt;DexBuilder&lt;/a&gt;: to dynamically generate YAHFA hooker classes&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;LSPosed is licensed under the &lt;strong&gt;GNU General Public License v3 (GPL-3)&lt;/strong&gt; (&lt;a href=&#34;http://www.gnu.org/copyleft/gpl.html&#34;&gt;http://www.gnu.org/copyleft/gpl.html&lt;/a&gt;).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>InterviewReady/Low-Level-Design</title>
    <updated>2022-08-28T01:46:27Z</updated>
    <id>tag:github.com,2022-08-28:/InterviewReady/Low-Level-Design</id>
    <link href="https://github.com/InterviewReady/Low-Level-Design" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Low Level Designs of common data structures. These designs keep concurrency control, latency and throughput in mind. We use design patterns where applicable to make the code readable, extensible and testable.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Low-Level-Design&lt;/h1&gt; &#xA;&lt;p&gt;Low Level Designs of common data structures.&lt;/p&gt; &#xA;&lt;p&gt;These designs keep concurrency control, latency and throughput in mind. We use design patterns where applicable to make the code readable, extensible and testable.&lt;/p&gt; &#xA;&lt;p&gt;The project contains multiple LLD codes for system design interviews. Please raise issues and pull requests for fixes and updates.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InterviewReady/Low-Level-Design/tree/main/distributed-cache&#34;&gt;Cache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InterviewReady/Low-Level-Design/tree/main/distributed-event-bus&#34;&gt;Event Bus&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InterviewReady/Low-Level-Design/tree/main/rate-limiter&#34;&gt;Rate Limiter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InterviewReady/Low-Level-Design/tree/main/service-orchestrator&#34;&gt;Service Orchestrator&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Checkout &lt;a href=&#34;https://get.interviewready.io/&#34;&gt;InterviewReady&lt;/a&gt; for more low level design explanations.&lt;/p&gt;</summary>
  </entry>
</feed>