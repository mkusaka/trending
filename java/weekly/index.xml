<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-07T01:59:49Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>apache/shenyu</title>
    <updated>2022-08-07T01:59:49Z</updated>
    <id>tag:github.com,2022-08-07:/apache/shenyu</id>
    <link href="https://github.com/apache/shenyu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache ShenYu is a Java native API Gateway for service proxy, protocol conversion and API governance.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/apache/shenyu-website/main/static/img/logo-light.svg#gh-dark-mode-only&#34; alt=&#34;Light Logo&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/apache/shenyu-website/main/static/img/logo.svg#gh-light-mode-only&#34; alt=&#34;Dark Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Scalable, High Performance, Responsive API Gateway Solution for all MicroServices&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://shenyu.apache.org/&#34;&gt;https://shenyu.apache.org/&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://shenyu.apache.org/docs/index&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/document-English-blue.svg?sanitize=true&#34; alt=&#34;EN docs&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://shenyu.apache.org/zh/docs/index&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/文档-简体中文-blue.svg&#34; alt=&#34;简体中文文档&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://search.maven.org/search?q=g:org.apache.shenyu%20AND%20a:shenyu&#34;&gt; &lt;img src=&#34;https://img.shields.io/maven-central/v/org.apache.shenyu/shenyu.svg?label=maven%20central&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/apache/shenyu/raw/master/LICENSE&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?label=license&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://www.oracle.com/technetwork/java/javase/downloads/index.html&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/JDK-8+-green.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/apache/shenyu/actions&#34;&gt; &lt;img src=&#34;https://github.com/apache/shenyu/workflows/ci/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/apache/shenyu&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/apache/shenyu.svg?sanitize=true&#34; alt=&#34;github forks&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/apache/shenyu&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/apache/shenyu.svg?sanitize=true&#34; alt=&#34;github stars&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/apache/shenyu&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/apache/shenyu.svg?sanitize=true&#34; alt=&#34;github contributors&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://codecov.io/gh/apache/shenyu&#34;&gt; &lt;img src=&#34;https://codecov.io/gh/apache/shenyu/branch/master/graph/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://hub.docker.com/r/apache/shenyu-bootstrap/tags&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/apache/shenyu-bootstrap&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://shenyu.apache.org/img/architecture/shenyu-framework.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Why named Apache ShenYu&lt;/h1&gt; &#xA;&lt;p&gt;ShenYu (神禹) is the honorific name of Chinese ancient monarch Xia Yu (also known in later times as Da Yu), who left behind the touching story of the three times he crossed the Yellow River for the benefit of the people and successfully managed the flooding of the river. He is known as one of the three greatest kings of ancient China, along with Yao and Shun.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Firstly, the name ShenYu is to promote the traditional virtues of our Chinese civilisation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Secondly, the most important thing about the gateway is the governance of the traffic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Finally, the community will do things in a fair, just, open and meritocratic way, paying tribute to ShenYu while also conforming to the Apache Way.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Proxy: Support for Apache® Dubbo™, Spring Cloud, gRPC, Motan, SOFA, TARS, WebSocket, MQTT&lt;/li&gt; &#xA; &lt;li&gt;Security: Sign, OAuth 2.0, JSON Web Tokens, WAF plugin&lt;/li&gt; &#xA; &lt;li&gt;API governance: Request, response, parameter mapping, Hystrix, RateLimiter plugin&lt;/li&gt; &#xA; &lt;li&gt;Observability: Tracing, metrics, logging plugin&lt;/li&gt; &#xA; &lt;li&gt;Dashboard: Dynamic traffic control, visual backend for user menu permissions&lt;/li&gt; &#xA; &lt;li&gt;Extensions: Plugin hot-swapping, dynamic loading&lt;/li&gt; &#xA; &lt;li&gt;Cluster: NGINX, Docker, Kubernetes&lt;/li&gt; &#xA; &lt;li&gt;Language: provides .NET, Python, Go, Java client for API register&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Quick Start (docker)&lt;/h1&gt; &#xA;&lt;h3&gt;Run Apache ShenYu Admin&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; docker pull apache/shenyu-admin&#xA;&amp;gt; docker network create shenyu&#xA;&amp;gt; docker run -d -p 9095:9095 --net shenyu apache/shenyu-admin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run Apache ShenYu Bootstrap&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; docker network create shenyu&#xA;&amp;gt; docker pull apache/shenyu-bootstrap&#xA;&amp;gt; docker run -d -p 9195:9195 --net shenyu apache/shenyu-bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set router&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Real requests ：&lt;a href=&#34;http://127.0.0.1:8080/helloworld&#34;&gt;http://127.0.0.1:8080/helloworld&lt;/a&gt;,&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;name&#34; : &#34;Shenyu&#34;,&#xA;  &#34;data&#34; : &#34;hello world&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set routing rules (Standalone)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Add &lt;code&gt;localKey: 123456&lt;/code&gt; to Headers. If you need to customize the localKey, you can use the sha512 tool to generate the key based on plaintext and update the &lt;code&gt;shenyu.local.sha512Key&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl --location --request POST &#39;http://localhost:9195/shenyu/plugin/selectorAndRules&#39; \&#xA;--header &#39;Content-Type: application/json&#39; \&#xA;--header &#39;localKey: 123456&#39; \&#xA;--data-raw &#39;{&#xA;    &#34;pluginName&#34;: &#34;divide&#34;,&#xA;    &#34;selectorHandler&#34;: &#34;[{\&#34;upstreamUrl\&#34;:\&#34;127.0.0.1:8080\&#34;}]&#34;,&#xA;    &#34;conditionDataList&#34;: [{&#xA;        &#34;paramType&#34;: &#34;uri&#34;,&#xA;        &#34;operator&#34;: &#34;match&#34;,&#xA;        &#34;paramValue&#34;: &#34;/**&#34;&#xA;    }],&#xA;    &#34;ruleDataList&#34;: [{&#xA;        &#34;ruleHandler&#34;: &#34;{\&#34;loadBalance\&#34;:\&#34;random\&#34;}&#34;,&#xA;        &#34;conditionDataList&#34;: [{&#xA;            &#34;paramType&#34;: &#34;uri&#34;,&#xA;            &#34;operator&#34;: &#34;match&#34;,&#xA;            &#34;paramValue&#34;: &#34;/**&#34;&#xA;        }]&#xA;    }]&#xA;}&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Proxy request ：&lt;a href=&#34;http://localhost:9195/helloworld&#34;&gt;http://localhost:9195/helloworld&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;name&#34; : &#34;Shenyu&#34;,&#xA;  &#34;data&#34; : &#34;hello world&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Plugin&lt;/h1&gt; &#xA;&lt;p&gt;Whenever a request comes in, Apache ShenYu will execute it by all enabled plugins through the chain of responsibility.&lt;/p&gt; &#xA;&lt;p&gt;As the heart of Apache ShenYu, plugins are extensible and hot-pluggable.&lt;/p&gt; &#xA;&lt;p&gt;Different plugins do different things.&lt;/p&gt; &#xA;&lt;p&gt;Of course, users can also customize plugins to meet their own needs.&lt;/p&gt; &#xA;&lt;p&gt;If you want to customize, see &lt;a href=&#34;https://shenyu.apache.org/docs/developer/custom-plugin/&#34;&gt;custom-plugin&lt;/a&gt; .&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Selector &amp;amp; Rule&lt;/h1&gt; &#xA;&lt;p&gt;According to your HTTP request headers, selectors and rules are used to route your requests.&lt;/p&gt; &#xA;&lt;p&gt;Selector is your first route, It is coarser grained, for example, at the module level.&lt;/p&gt; &#xA;&lt;p&gt;Rule is your second route and what do you think your request should do. For example a method level in a module.&lt;/p&gt; &#xA;&lt;p&gt;The selector and the rule match only once, and the match is returned. So the coarsest granularity should be sorted last.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Data Caching &amp;amp; Data Sync&lt;/h1&gt; &#xA;&lt;p&gt;Since all data have been cached using ConcurrentHashMap in the JVM, it&#39;s very fast.&lt;/p&gt; &#xA;&lt;p&gt;Apache ShenYu dynamically updates the cache by listening to the ZooKeeper node (or WebSocket push, HTTP long polling) when the user changes configuration information in the background management.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://shenyu.apache.org/img/shenyu/dataSync/shenyu-config-processor-en.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://shenyu.apache.org/img/shenyu/dataSync/config-strategy-processor-en.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Prerequisite&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 1.8+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Stargazers over time&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/apache/shenyu.svg&#34;&gt;&lt;img src=&#34;https://starchart.cc/apache/shenyu.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Contributor and Support&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shenyu.apache.org/community/contributor-guide&#34;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:dev@shenyu.apache.org&#34;&gt;Mailing Lists&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Known Users&lt;/h1&gt; &#xA;&lt;p&gt;In order of registration, More access companies are welcome to register at &lt;a href=&#34;https://github.com/apache/shenyu/issues/68&#34;&gt;https://github.com/apache/shenyu/issues/68&lt;/a&gt; (For open source users only) .&lt;/p&gt; &#xA;&lt;p&gt;All Users : &lt;a href=&#34;https://shenyu.apache.org/community/user-registration&#34;&gt;Known Users&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Snailclimb/JavaGuide</title>
    <updated>2022-08-07T01:59:49Z</updated>
    <id>tag:github.com,2022-08-07:/Snailclimb/JavaGuide</id>
    <link href="https://github.com/Snailclimb/JavaGuide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;「Java学习+面试指南」一份涵盖大部分 Java 程序员所需要掌握的核心知识。准备 Java 面试，首选 JavaGuide！&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc&#34;&gt;JavaGuide 官方知识星球&lt;/a&gt;来啦！！！如果你需要专属面试小册/一对一交流/简历修改/专属求职指南/学习打卡，不妨花 3 分钟左右看看星球的详细介绍： &lt;a href=&#34;https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc&#34;&gt;JavaGuide 知识星球详细介绍&lt;/a&gt; （一定要确定自己真的需要再加入，一定要看完详细介绍之后再加我）。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc&#34;&gt; &lt;img src=&#34;https://guide-blog-images.oss-cn-shenzhen.aliyuncs.com/xingqiu/xingqiu.png&#34; style=&#34;margin: 0 auto; width: 850px;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/Snailclimb/JavaGuide&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img-blog.csdnimg.cn/img_convert/1c00413c65d1995993bf2b0daf7b4f03.png#pic_center&#34; width=&#34;&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://javaguide.cn/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/阅读-read-brightgreen.svg&#34; alt=&#34;阅读&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/Snailclimb/JavaGuide&#34; alt=&#34;stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/Snailclimb/JavaGuide&#34; alt=&#34;forks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/Snailclimb/JavaGuide&#34; alt=&#34;issues&#34;&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;a href=&#34;https://github.com/Snailclimb/JavaGuide&#34;&gt;Github&lt;/a&gt; | &lt;a href=&#34;https://gitee.com/SnailClimb/JavaGuide&#34;&gt;Gitee&lt;/a&gt; &lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;&lt;strong&gt;面试专版&lt;/strong&gt; ：准备面试的小伙伴可以考虑面试专版：&lt;a href=&#34;https://www.yuque.com/docs/share/f37fc804-bfe6-4b0d-b373-9c462188fec7&#34;&gt;《Java 面试进阶指北 》&lt;/a&gt; (质量很高，专为面试打造，配合 JavaGuide 食用)。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;知识星球&lt;/strong&gt; ：专属面试小册/一对一交流/简历修改/专属求职指南，欢迎加入 &lt;a href=&#34;https://www.yuque.com/docs/share/8a30ffb5-83f3-40f9-baf9-38de68b906dc&#34;&gt;JavaGuide 知识星球&lt;/a&gt;（点击链接即可查看星球的详细介绍，一定一定一定确定自己真的需要再加入，一定一定要看完详细介绍之后再加我）。&lt;/li&gt; &#xA;  &lt;li&gt;&lt;strong&gt;转载须知&lt;/strong&gt; ：以下所有文章如非文首说明为转载皆为我（Guide 哥）的原创，转载在文首注明出处，如发现恶意抄袭/搬运，会动用法律武器维护自己的权益。让我们一起维护一个良好的技术创作环境！&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;推荐你通过在线阅读网站进行阅读，体验更好，速度更快！&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/&#34;&gt;JavaGuide 在线阅读网站（新版，推荐👍）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://snailclimb.gitee.io/javaguide/#/&#34;&gt;JavaGuide 在线阅读版（老版）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;你可能需要：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/intro.md&#34;&gt;项目介绍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/contribution-guideline.md&#34;&gt;贡献指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/faq.md&#34;&gt;常见问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/javaguide/todo&#34;&gt;项目代办.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Java&lt;/h2&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看&lt;span&gt;👍&lt;/span&gt; )：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-01.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(上)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-02.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(中)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/java-basic-questions-03.md&#34;&gt;Java 基础常见知识点&amp;amp;面试题总结(下)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/why-there-only-value-passing-in-java.md&#34;&gt;为什么 Java 中只有值传递？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/serialization.md&#34;&gt;Java 序列化详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/generics-and-wildcards.md&#34;&gt;泛型&amp;amp;序列化详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/reflection.md&#34;&gt;Java 反射机制详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/proxy.md&#34;&gt;Java 代理模式详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/bigdecimal.md&#34;&gt;BigDecimal 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/unsafe.md&#34;&gt;Java 魔法类 Unsafe 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/basis/spi.md&#34;&gt;Java SPI 机制详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;集合&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-questions-01.md&#34;&gt;Java 集合常见知识点&amp;amp;面试题总结(上)&lt;/a&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-questions-02.md&#34;&gt;Java 集合常见知识点&amp;amp;面试题总结(下)&lt;/a&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/java-collection-precautions-for-use.md&#34;&gt;Java 容器使用注意事项总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;源码分析&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/arraylist-source-code.md&#34;&gt;ArrayList 源码+扩容机制分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/hashmap-source-code.md&#34;&gt;HashMap(JDK1.8)源码+底层数据结构分析&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/collection/concurrent-hash-map-source-code.md&#34;&gt;ConcurrentHashMap 源码+底层数据结构分析&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;IO&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-basis.md&#34;&gt;IO 基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-design-patterns.md&#34;&gt;IO 设计模式总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/io/io-model.md&#34;&gt;IO 模型详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;并发&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-01.md&#34;&gt;Java 并发常见知识点&amp;amp;面试题总结（上）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-02.md&#34;&gt;Java 并发常见知识点&amp;amp;面试题总结（中）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-questions-03.md&#34;&gt;Java 并发常见知识点&amp;amp;面试题总结（下）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/jmm.md&#34;&gt;JMM（Java 内存模型）详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;线程池&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-thread-pool-summary.md&#34;&gt;Java 线程池详解&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-thread-pool-best-practices.md&#34;&gt;Java 线程池最佳实践&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/threadlocal.md&#34;&gt;ThreadLocal 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/java-concurrent-collections.md&#34;&gt;Java 并发容器总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/atomic-classes.md&#34;&gt;Atomic 原子类总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/aqs.md&#34;&gt;AQS 详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/concurrent/completablefuture-intro.md&#34;&gt;CompletableFuture入门&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;JVM (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/h3&gt; &#xA;&lt;p&gt;JVM 这部分内容主要参考 &lt;a href=&#34;https://docs.oracle.com/javase/specs/jvms/se8/html/index.html&#34;&gt;JVM 虚拟机规范-Java8 &lt;/a&gt; 和周志明老师的&lt;a href=&#34;https://book.douban.com/subject/34907497/&#34;&gt;《深入理解Java虚拟机（第3版）》&lt;/a&gt; （强烈建议阅读多遍！）。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/memory-area.md&#34;&gt;Java 内存区域&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-garbage-collection.md&#34;&gt;JVM 垃圾回收&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jdk-monitoring-and-troubleshooting-tools.md&#34;&gt;JDK 监控和故障处理工具&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/class-file-structure.md&#34;&gt;类文件结构&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/class-loading-process.md&#34;&gt;类加载过程&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/classloader.md&#34;&gt;类加载器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-parameters-intro.md&#34;&gt;【待完成】最重要的 JVM 参数总结（翻译完善了一半）&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/jvm/jvm-intro.md&#34;&gt;【加餐】大白话带你认识 JVM&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;新特性&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Java 8&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java8-tutorial-translate.md&#34;&gt;Java 8 新特性总结（翻译）&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java8-common-new-features.md&#34;&gt;Java8常用新特性总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java9.md&#34;&gt;Java 9 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java10.md&#34;&gt;Java 10 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java11.md&#34;&gt;Java 11 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java12-13.md&#34;&gt;Java 12~13 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java14-15.md&#34;&gt;Java 14~15 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/java/new-features/java16.md&#34;&gt;Java 16 新特性概览&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;计算机基础&lt;/h2&gt; &#xA;&lt;h3&gt;操作系统&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/operating-system-basic-questions-01.md&#34;&gt;操作系统常见问题总结！&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/linux-intro.md&#34;&gt;后端程序员必备的 Linux 基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/operating-system/shell-intro.md&#34;&gt;Shell 编程入门&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;网络&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/osi&amp;amp;tcp-ip-model.md&#34;&gt;OSI 和 TCP/IP 网络分层模型详解（基础）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http&amp;amp;https.md&#34;&gt;HTTP vs HTTPS（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http1.0&amp;amp;http1.1.md&#34;&gt;HTTP 1.0 vs HTTP 1.1（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/http-status-codes.md&#34;&gt;HTTP 常见状态码（应用层）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/other-network-questions.md&#34;&gt;计算机网络常见知识点&amp;amp;面试题（补充）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/network/%E8%B0%A2%E5%B8%8C%E4%BB%81%E8%80%81%E5%B8%88%E7%9A%84%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E3%80%8B%E5%86%85%E5%AE%B9%E6%80%BB%E7%BB%93.md&#34;&gt;谢希仁老师的《计算机网络》内容总结（补充）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;数据结构&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;图解数据结构：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/linear-data-structure.md&#34;&gt;线性数据结构 :数组、链表、栈、队列&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/graph.md&#34;&gt;图&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/heap.md&#34;&gt;堆&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/tree.md&#34;&gt;树&lt;/a&gt; ：重点关注&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/red-black-tree.md&#34;&gt;红黑树&lt;/a&gt;、B-，B+，B*树、LSM树&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;其他常用数据结构 ：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/data-structure/bloom-filter.md&#34;&gt;布隆过滤器&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;算法&lt;/h3&gt; &#xA;&lt;p&gt;算法这部分内容非常重要，如果你不知道如何学习算法的话，可以看下我写的：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/323359308/answer/1545320858&#34;&gt;算法学习书籍+资源推荐&lt;/a&gt; 。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.zhihu.com/question/31092580/answer/1534887374&#34;&gt;如何刷Leetcode?&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;常见算法问题总结&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/string-algorithm-problems.md&#34;&gt;几道常见的字符串算法题总结 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/linkedlist-algorithm-problems.md&#34;&gt;几道常见的链表算法题总结 &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/the-sword-refers-to-offer.md&#34;&gt;剑指 offer 部分编程题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/cs-basics/algorithms/10-classical-sorting-algorithms.md&#34;&gt;十大经典排序算法&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;另外，&lt;a href=&#34;https://www.geeksforgeeks.org/fundamentals-of-algorithms/&#34;&gt;GeeksforGeeks&lt;/a&gt; 这个网站总结了常见的算法 ，比较全面系统。&lt;/p&gt; &#xA;&lt;h2&gt;数据库&lt;/h2&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/basis.md&#34;&gt;数据库基础知识总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/character-set.md&#34;&gt;字符集详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MySQL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-questions-01.md&#34;&gt;MySQL知识点总结&lt;/a&gt;&lt;/strong&gt; (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/a-thousand-lines-of-mysql-study-notes.md&#34;&gt;一千行 MySQL 学习笔记&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-high-performance-optimization-specification-recommendations.md&#34;&gt;MySQL 高性能优化规范建议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-index.md&#34;&gt;MySQL数据库索引总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/transaction-isolation-level.md&#34;&gt;事务隔离级别(图文详解)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/mysql-logs.md&#34;&gt;MySQL三大日志(binlog、redo log和undo log)详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/innodb-implementation-of-mvcc.md&#34;&gt;InnoDB存储引擎对MVCC的实现&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/how-sql-executed-in-mysql.md&#34;&gt;SQL语句在MySQL中的执行过程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/some-thoughts-on-database-storage-time.md&#34;&gt;关于数据库中如何存储时间的一点思考&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/mysql/index-invalidation-caused-by-implicit-conversion.md&#34;&gt;MySQL中的隐式转换造成的索引失效&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Redis&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; : (必看&lt;span&gt;👍&lt;/span&gt; )：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-questions-01.md&#34;&gt;Redis 常见问题总结(上)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-questions-02.md&#34;&gt;Redis 常见问题总结(下)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/3-commonly-used-cache-read-and-write-strategies.md&#34;&gt;3种常用的缓存读写策略详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-data-structures-01.md&#34;&gt;Redis 5 种基本数据结构详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-data-structures-02.md&#34;&gt;Redis 3 种特殊数据结构详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-memory-fragmentation.md&#34;&gt;Redis 内存碎片详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/database/redis/redis-cluster.md&#34;&gt;Redis 集群详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;搜索引擎&lt;/h2&gt; &#xA;&lt;p&gt;用于提高搜索效率，功能和浏览器搜索引擎类似。比较常见的搜索引擎是 Elasticsearch（推荐） 和 Solr。&lt;/p&gt; &#xA;&lt;h2&gt;开发工具&lt;/h2&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-intro.md&#34;&gt;Docker 基本概念解读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-in-action.md&#34;&gt;Docker从入门到上手干事&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/git-intro.md&#34;&gt;Git 入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/github-tips.md&#34;&gt;Github 小技巧&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;系统设计&lt;/h2&gt; &#xA;&lt;h3&gt;基础&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/RESTfulAPI.md&#34;&gt;RestFul API 简明教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/naming.md&#34;&gt;Java 编码命名之道&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/refactoring.md&#34;&gt;代码重构指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/basis/unit-test.md&#34;&gt;单元测试指南&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;常用框架&lt;/h3&gt; &#xA;&lt;p&gt;如果你没有接触过 Java Web 开发的话，可以先看一下我总结的 &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md&#34;&gt;《J2EE 基础知识》&lt;/a&gt; 。虽然，这篇文章中的很多内容已经淘汰，但是可以让你对 Java 后台技术发展有更深的认识。&lt;/p&gt; &#xA;&lt;h4&gt;Spring/SpringBoot (必看 &lt;span&gt;👍&lt;/span&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;知识点/面试题总结&lt;/strong&gt; :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-knowledge-and-questions-summary.md&#34;&gt;Spring 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/springboot-knowledge-and-questions-summary.md&#34;&gt;SpringBoot 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-common-annotations.md&#34;&gt;Spring/Spring Boot 常用注解总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Snailclimb/springboot-guide&#34;&gt;SpringBoot 入门指南&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;重要知识点详解&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-transaction.md&#34;&gt;Spring 事务详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-design-patterns-summary.md&#34;&gt;Spring 中的设计模式详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/spring/spring-boot-auto-assembly-principles.md&#34;&gt;SpringBoot 自动装配原理详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;MyBatis&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/framework/mybatis/mybatis-interview.md&#34;&gt;MyBatis 常见面试题总结&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;安全&lt;/h3&gt; &#xA;&lt;h4&gt;认证授权&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/basis-of-authority-certification.md&#34;&gt;认证授权基础&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/jwt-intro.md&#34;&gt;JWT 基本概念详解&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/advantages&amp;amp;disadvantages-of-jwt.md&#34;&gt;JWT 优缺点分析以及常见问题解决方案&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/sso-intro.md&#34;&gt;SSO 单点登录详解&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;数据脱敏&lt;/h4&gt; &#xA;&lt;p&gt;数据脱敏说的就是我们根据特定的规则对敏感信息数据进行变形，比如我们把手机号、身份证号某些位数使用 * 来代替。&lt;/p&gt; &#xA;&lt;h4&gt;敏感词过滤&lt;/h4&gt; &#xA;&lt;p&gt;系统需要对用户输入的文本进行敏感词过滤如色情、政治、暴力相关的词汇。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/security/sentive-words-filter.md&#34;&gt;《敏感词过滤》&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;定时任务&lt;/h3&gt; &#xA;&lt;p&gt;最近有朋友问到定时任务相关的问题。于是，我简单写了一篇文章总结一下定时任务的一些概念以及一些常见的定时任务技术选型：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/system-design/schedule-task.md&#34;&gt;《Java定时任务大揭秘》&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;分布式&lt;/h2&gt; &#xA;&lt;h3&gt;CAP 理论和 BASE 理论&lt;/h3&gt; &#xA;&lt;p&gt;CAP 也就是 Consistency（一致性）、Availability（可用性）、Partition Tolerance（分区容错性） 这三个单词首字母组合。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;BASE&lt;/strong&gt; 是 &lt;strong&gt;Basically Available（基本可用）&lt;/strong&gt; 、&lt;strong&gt;Soft-state（软状态）&lt;/strong&gt; 和 &lt;strong&gt;Eventually Consistent（最终一致性）&lt;/strong&gt; 三个短语的缩写。BASE 理论是对 CAP 中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的总结，是基于 CAP 定理逐步演化而来的，它大大降低了我们对系统的要求。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/cap&amp;amp;base-theorem.md&#34;&gt;CAP 理论和 BASE 理论解读&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Paxos 算法和 Raft 算法&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Paxos 算法&lt;/strong&gt; 诞生于 1990 年，这是一种解决分布式系统一致性的经典算法 。但是，由于 Paxos 算法非常难以理解和实现，不断有人尝试简化这一算法。到了2013 年才诞生了一个比 Paxos 算法更易理解和实现的分布式一致性算法—&lt;strong&gt;Raft 算法&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/paxos-algorithm.md&#34;&gt;Paxos 算法解读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/theorem&amp;amp;algorithm&amp;amp;protocol/raft-algorithm.md&#34;&gt;Raft 算法解读&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RPC&lt;/h3&gt; &#xA;&lt;p&gt;RPC 让调用远程服务调用像调用本地方法那样简单。&lt;/p&gt; &#xA;&lt;p&gt;Dubbo 是一款国产的 RPC 框架，由阿里开源。相关阅读：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/rpc/rpc-intro.md&#34;&gt;RPC 基础常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/rpc/dubbo.md&#34;&gt;Dubbo 常见知识点&amp;amp;面试题总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API 网关&lt;/h3&gt; &#xA;&lt;p&gt;网关主要用于请求转发、安全认证、协议转换、容灾。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/api-gateway.md&#34;&gt;为什么要网关？你知道有哪些常见的网关系统？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tech.meituan.com/2021/05/20/shepherd-api-gateway.html&#34;&gt;百亿规模API网关服务Shepherd的设计与实现&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;分布式 id&lt;/h3&gt; &#xA;&lt;p&gt;在复杂分布式系统中，往往需要对大量的数据和消息进行唯一标识。比如数据量太大之后，往往需要对数据进行分库分表，分库分表后需要有一个唯一 ID 来标识一条数据或消息，数据库的自增 ID 显然不能满足需求。相关阅读：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-id.md&#34;&gt;为什么要分布式 id ？分布式 id 生成方案有哪些？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;分布式事务&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;分布式事务就是指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于不同的分布式系统的不同节点之上。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;简单的说，就是一次大的操作由不同的小操作组成，这些小的操作分布在不同的服务器上，且属于不同的应用，分布式事务需要保证这些小操作要么全部成功，要么全部失败。本质上来说，分布式事务就是为了保证不同数据库的数据一致性。&lt;/p&gt; &#xA;&lt;h3&gt;分布式协调&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;ZooKeeper&lt;/strong&gt; ：&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;前两篇文章可能有内容重合部分，推荐都看一遍。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-intro.md&#34;&gt;【入门】ZooKeeper 相关概念总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-plus.md&#34;&gt;【进阶】ZooKeeper 相关概念总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/distributed-system/distributed-process-coordination/zookeeper/zookeeper-in-action.md&#34;&gt;【实战】ZooKeeper 实战&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;高性能&lt;/h2&gt; &#xA;&lt;h3&gt;消息队列&lt;/h3&gt; &#xA;&lt;p&gt;消息队列在分布式系统中主要是为了解耦和削峰。相关阅读： &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/message-queue.md&#34;&gt;消息队列常见问题总结&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;RabbitMQ&lt;/strong&gt; : &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rabbitmq-intro.md&#34;&gt;RabbitMQ 基础知识总结&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rabbitmq-questions.md&#34;&gt;RabbitMQ 常见面试题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;RocketMQ&lt;/strong&gt; : &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rocketmq-intro&#34;&gt;RocketMQ 基础知识总结&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/rocketmq-questions.md&#34;&gt;RocketMQ 常见面试题总结&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kafka&lt;/strong&gt; ：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/message-queue/kafka-questions-01.md&#34;&gt;Kafka 常见问题总结&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;读写分离&amp;amp;分库分表&lt;/h3&gt; &#xA;&lt;p&gt;读写分离主要是为了将数据库的读和写操作分不到不同的数据库节点上。主服务器负责写，从服务器负责读。另外，一主一从或者一主多从都可以。&lt;/p&gt; &#xA;&lt;p&gt;读写分离可以大幅提高读性能，小幅提高写的性能。因此，读写分离更适合单机并发读请求比较多的场景。&lt;/p&gt; &#xA;&lt;p&gt;分库分表是为了解决由于库、表数据量过大，而导致数据库性能持续下降的问题。&lt;/p&gt; &#xA;&lt;p&gt;常见的分库分表工具有： &lt;code&gt;sharding-jdbc&lt;/code&gt; （当当）、 &lt;code&gt;TSharding&lt;/code&gt; （蘑菇街）、 &lt;code&gt;MyCAT&lt;/code&gt; （基于 Cobar）、 &lt;code&gt;Cobar&lt;/code&gt; （阿里巴巴）...。 推荐使用 &lt;code&gt;sharding-jdbc&lt;/code&gt; 。 因为， &lt;code&gt;sharding-jdbc&lt;/code&gt; 是一款轻量级 &lt;code&gt;Java&lt;/code&gt; 框架，以 &lt;code&gt;jar&lt;/code&gt; 包形式提供服务，不要我们做额外的运维工作，并且兼容性也很好。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读： &lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-performance/read-and-write-separation-and-library-subtable.md&#34;&gt;读写分离&amp;amp;分库分表常见问题总结&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;负载均衡&lt;/h3&gt; &#xA;&lt;p&gt;负载均衡系统通常用于将任务比如用户请求处理分配到多个服务器处理以提高网站、应用或者数据库的性能和可靠性。&lt;/p&gt; &#xA;&lt;p&gt;常见的负载均衡系统包括 3 种：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;DNS 负载均衡&lt;/strong&gt; ：一般用来实现地理级别的均衡。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;硬件负载均衡&lt;/strong&gt; ： 通过单独的硬件设备比如 F5 来实现负载均衡功能（硬件的价格一般很贵）。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;软件负载均衡&lt;/strong&gt; ：通过负载均衡软件比如 Nginx 来实现负载均衡功能。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;高可用&lt;/h2&gt; &#xA;&lt;p&gt;高可用描述的是一个系统在大部分时间都是可用的，可以为我们提供服务的。高可用代表系统即使在发生硬件故障或者系统升级的时候，服务仍然是可用的 。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读： &lt;strong&gt;《&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/high-availability-system-design.md&#34;&gt;如何设计一个高可用系统？要考虑哪些地方？&lt;/a&gt;》&lt;/strong&gt; 。&lt;/p&gt; &#xA;&lt;h3&gt;限流&lt;/h3&gt; &#xA;&lt;p&gt;限流是从用户访问压力的角度来考虑如何应对系统故障。&lt;/p&gt; &#xA;&lt;p&gt;限流为了对服务端的接口接受请求的频率进行限制，防止服务挂掉。比如某一接口的请求限制为 100 个每秒, 对超过限制的请求放弃处理或者放到队列中等待处理。限流可以有效应对突发请求过多。相关阅读：&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/high-availability/limit-request.md&#34;&gt;何为限流？限流算法有哪些？&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;降级&lt;/h3&gt; &#xA;&lt;p&gt;降级是从系统功能优先级的角度考虑如何应对系统故障。&lt;/p&gt; &#xA;&lt;p&gt;服务降级指的是当服务器压力剧增的情况下，根据当前业务情况及流量对一些服务和页面有策略的降级，以此释放服务器资源以保证核心任务的正常运行。&lt;/p&gt; &#xA;&lt;h3&gt;熔断&lt;/h3&gt; &#xA;&lt;p&gt;熔断和降级是两个比较容易混淆的概念，两者的含义并不相同。&lt;/p&gt; &#xA;&lt;p&gt;降级的目的在于应对系统自身的故障，而熔断的目的在于应对当前系统依赖的外部系统或者第三方系统的故障。&lt;/p&gt; &#xA;&lt;h3&gt;排队&lt;/h3&gt; &#xA;&lt;p&gt;另类的一种限流，类比于现实世界的排队。玩过英雄联盟的小伙伴应该有体会，每次一有活动，就要经历一波排队才能进入游戏。&lt;/p&gt; &#xA;&lt;h3&gt;集群&lt;/h3&gt; &#xA;&lt;p&gt;相同的服务部署多份，避免单点故障。&lt;/p&gt; &#xA;&lt;h3&gt;超时和重试机制&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;一旦用户的请求超过某个时间得不到响应就结束此次请求并抛出异常。&lt;/strong&gt; 如果不进行超时设置可能会导致请求响应速度慢，甚至导致请求堆积进而让系统无法再处理请求。&lt;/p&gt; &#xA;&lt;p&gt;重试的次数一般设为 3 次，再多的重试次数没有好处，反而会加重服务器压力（部分场景使用失败重试机制会不太适合）。在一次重试失败之后通常会加上一个时间间隔 delay 再进行下一次重试，时间间隔 delay 通常建议是随机的。&lt;/p&gt; &#xA;&lt;p&gt;并且，为了更好地保护下游，我们还可以结合断路器。&lt;/p&gt; &#xA;&lt;h3&gt;灾备设计和异地多活&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;灾备&lt;/strong&gt; = 容灾+备份。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;备份&lt;/strong&gt; ： 将系统所产生的的所有重要数据多备份几份。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;容灾&lt;/strong&gt; ： 在异地建立两个完全相同的系统。当某个地方的系统突然挂掉，整个应用系统可以切换到另一个，这样系统就可以正常提供服务了。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;异地多活&lt;/strong&gt; 描述的是将服务部署在异地并且服务同时对外提供服务。和传统的灾备设计的最主要区别在于“多活”，即所有站点都是同时在对外提供服务的。异地多活是为了应对突发状况比如火灾、地震等自然或者人为灾害。&lt;/p&gt; &#xA;&lt;p&gt;相关阅读：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/T6mMDdtTfBuIiEowCpqu6Q&#34;&gt;搞懂异地多活，看这篇就够了&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/hMD-IS__4JE5_nQhYPYSTg&#34;&gt;四步构建异地多活&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://gk.link/a/10pKZ&#34;&gt;《从零开始学架构》— 28 | 业务高可用的保障：异地多活架构&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开发工具&lt;/h2&gt; &#xA;&lt;h3&gt;Git&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/git-intro.md&#34;&gt;Git 入门&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/git/git-intro.md&#34;&gt;Github 小技巧&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-intro.md&#34;&gt;Docker 基本概念解读&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/docs/tools/docker/docker-in-action.md&#34;&gt;Docker从入门到上手干事&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;关于作者&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/&#34;&gt;个人介绍 Q&amp;amp;A&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/internet-addiction-teenager/&#34;&gt;我曾经也是网瘾少年&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/feelings-after-one-month-of-induction-training/&#34;&gt;入职培训一个月后的感受&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/feelings-of-half-a-year-from-graduation-to-entry/&#34;&gt;从毕业到入职半年的感受&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://javaguide.cn/about-the-author/my-article-was-stolen-and-made-into-video-and-it-became-popular/&#34;&gt;某培训机构盗我文章做成视频还上了B站热门&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star 趋势&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=Snailclimb/JavaGuide&amp;amp;type=Date&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;公众号&lt;/h2&gt; &#xA;&lt;p&gt;如果大家想要实时关注我更新的文章以及分享的干货的话，可以关注我的公众号。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;《Java面试突击》:&lt;/strong&gt; 由本文档衍生的专为面试而生的《Java面试突击》PDF 版本&lt;a href=&#34;https://raw.githubusercontent.com/Snailclimb/JavaGuide/main/#%E5%85%AC%E4%BC%97%E5%8F%B7&#34;&gt;公众号&lt;/a&gt;后台回复 &lt;strong&gt;&#34;面试突击&#34;&lt;/strong&gt; 即可免费领取！&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-6/167598cd2e17b8ec.png&#34; alt=&#34;我的公众号&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/7af97d4dccdb4123a541f336a107ca86.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3a2d826918a44bcbaa8d9272db3ad7d2~tplv-k3u1fbpfcp-watermark.image&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MuntashirAkon/AppManager</title>
    <updated>2022-08-07T01:59:49Z</updated>
    <id>tag:github.com,2022-08-07:/MuntashirAkon/AppManager</id>
    <link href="https://github.com/MuntashirAkon/AppManager" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A full-featured package manager and viewer for Android&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/docs/raw/images/icon.png&#34; alt=&#34;App Manager Logo&#34; height=&#34;150dp&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;App Manager&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://muntashirakon.github.io/AppManager&#34;&gt;Docs&lt;/a&gt; · &lt;a href=&#34;https://github.com/MuntashirAkon/AppManager/releases&#34;&gt;Releases&lt;/a&gt; · &lt;a href=&#34;https://t.me/AppManagerChannel&#34;&gt;Telegram Channel&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;General features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully reproducible, copylefted libre software (GPLv3+)&lt;/li&gt; &#xA; &lt;li&gt;Material 3 with dynamic colours&lt;/li&gt; &#xA; &lt;li&gt;Displays as much information as possible in the main page&lt;/li&gt; &#xA; &lt;li&gt;Lists activities, broadcast receivers, services, providers, app ops, permissions, signatures, shared libraries, etc. of an application&lt;/li&gt; &#xA; &lt;li&gt;Launch activities and services&lt;/li&gt; &#xA; &lt;li&gt;Create shortcuts of activities&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://muntashirakon.github.io/AppManager/#sec:interceptor-page&#34;&gt;Intercept activities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Scan for trackers and libraries in apps and list (all or only) tracking classes (and their code dump)&lt;/li&gt; &#xA; &lt;li&gt;View/save the manifest of an app&lt;/li&gt; &#xA; &lt;li&gt;Display app usage, data usage (mobile and Wi-Fi), and app storage info (requires “Usage Access” permission)&lt;/li&gt; &#xA; &lt;li&gt;Install/uninstall APK files (including APKS, APKM and XAPK with OBB files)&lt;/li&gt; &#xA; &lt;li&gt;Share APK files&lt;/li&gt; &#xA; &lt;li&gt;Back up/restore APK files&lt;/li&gt; &#xA; &lt;li&gt;Batch operations&lt;/li&gt; &#xA; &lt;li&gt;Single-click operations&lt;/li&gt; &#xA; &lt;li&gt;Logcat viewer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://muntashirakon.github.io/AppManager/#sec:profiles-page&#34;&gt;Profiles&lt;/a&gt; (including presets for quick debloating)&lt;/li&gt; &#xA; &lt;li&gt;Open an app in Aurora Store or in your favourite F-Droid client directly from App Manager&lt;/li&gt; &#xA; &lt;li&gt;Sign APK files with custom signatures before installing&lt;/li&gt; &#xA; &lt;li&gt;Backup encryption: OpenPGP via OpenKeychain, RSA (hybrid encryption with AES) and AES.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Root/ADB-only features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Revoke runtime (AKA dangerous) and development permissions&lt;/li&gt; &#xA; &lt;li&gt;Change the mode of an app op&lt;/li&gt; &#xA; &lt;li&gt;Display/kill/force-stop running apps or processes&lt;/li&gt; &#xA; &lt;li&gt;Clear app data or app cache&lt;/li&gt; &#xA; &lt;li&gt;View/change net policy&lt;/li&gt; &#xA; &lt;li&gt;Control battery optimization&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Root-only features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Block any activities, broadcast receivers, services, or providers of an app with native import/export as well as Watt and Blocker import support&lt;/li&gt; &#xA; &lt;li&gt;View/edit/delete shared preferences of any app&lt;/li&gt; &#xA; &lt;li&gt;Back up/restore apps with data, rules and extras (such as permissions, battery optimization, SSAID, etc.)&lt;/li&gt; &#xA; &lt;li&gt;View system configurations including blacklisted or whitelisted apps, permissions, etc.&lt;/li&gt; &#xA; &lt;li&gt;View/change SSAID&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;…and many more! This single app combines the features of 5 or 6 apps any tech-savvy person needs!&lt;/p&gt; &#xA;&lt;h3&gt;Upcoming features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;APK editing&lt;/li&gt; &#xA; &lt;li&gt;Routine operations&lt;/li&gt; &#xA; &lt;li&gt;Backup encryption: Elliptive-curve cryptography (ECC)&lt;/li&gt; &#xA; &lt;li&gt;Finder: Find app components, permissions etc. in all apps&lt;/li&gt; &#xA; &lt;li&gt;Enable/disable app actions such as launch on boot&lt;/li&gt; &#xA; &lt;li&gt;Panic responder for Ripple&lt;/li&gt; &#xA; &lt;li&gt;Crash monitor&lt;/li&gt; &#xA; &lt;li&gt;Systemless disabling/uninstalling of the system apps&lt;/li&gt; &#xA; &lt;li&gt;Import/export app list&lt;/li&gt; &#xA; &lt;li&gt;Terminal emulator&lt;/li&gt; &#xA; &lt;li&gt;Database viewer and editor, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/io.github.muntashirakon.AppManager&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;Help translate &lt;a href=&#34;https://hosted.weblate.org/engage/app-manager/&#34;&gt;the app strings&lt;/a&gt; and &lt;a href=&#34;https://hosted.weblate.org/projects/app-manager/docs/&#34;&gt;the docs&lt;/a&gt; at Hosted Weblate.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://hosted.weblate.org/engage/app-manager/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/app-manager/-/multi-auto.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mirrors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/muntashir/AppManager&#34;&gt;GitLab&lt;/a&gt; · &lt;a href=&#34;https://0xacab.org/muntashir/AppManager&#34;&gt;Riseup&lt;/a&gt; · &lt;a href=&#34;https://codeberg.org/muntashir/AppManager&#34;&gt;Codeberg&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/1.png&#34; height=&#34;500dp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/2.png&#34; height=&#34;500dp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/3.png&#34; height=&#34;500dp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/4.png&#34; height=&#34;500dp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/5.png&#34; height=&#34;500dp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/6.png&#34; height=&#34;500dp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/7.png&#34; height=&#34;500dp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/8.png&#34; height=&#34;500dp&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/fastlane/metadata/android/en-US/images/phoneScreenshots/9.png&#34; height=&#34;500dp&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/BUILDING.rst&#34;&gt;BUILDING.rst&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/MuntashirAkon/AppManager/master/CONTRIBUTING.rst&#34;&gt;CONTRIBUTING.rst&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Donation and Funding&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;Donation or purchasing is not a requirement in order to use app Manager.&lt;/em&gt; While App Manager does not support any purchases, donations can be sent to the owner of App Manager through Open Source Collective.&lt;/p&gt; &#xA;&lt;p&gt;Open Source Collective is a fiscal host in the Open Collective platform which helps the open source projects manage their finances. At present, it supports payments through bank accounts, PayPal, credit or debit cards and cryptocurrencies.&lt;/p&gt; &#xA;&lt;p&gt;Link: &lt;a href=&#34;https://opencollective.com/muntashir&#34;&gt;https://opencollective.com/muntashir&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;By sending donations, the senders agree that they shall not use the donations as a leverage to prioritise their requested features. Feature requests do not require any bounties or donations, and they are prioritised in accordance with the preferences of the owner.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;App Manager accepts any offers of funding/grants.&lt;/strong&gt; Representatives of the interested organization can contact the owner directly at muntashirakon [at] riseup [dot] net (FINGERPRINT: &lt;code&gt;7bad37c2981e41f8f6abea7f58f0b4f26c346fce&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Credits and Libraries&lt;/h2&gt; &#xA;&lt;p&gt;A list of credits and libraries are available in the &lt;strong&gt;About&lt;/strong&gt; section of the app.&lt;/p&gt;</summary>
  </entry>
</feed>