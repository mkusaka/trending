<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-13T01:40:10Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ssssssss-team/spider-flow</title>
    <updated>2025-07-13T01:40:10Z</updated>
    <id>tag:github.com,2025-07-13:/ssssssss-team/spider-flow</id>
    <link href="https://github.com/ssssssss-team/spider-flow" rel="alternate"></link>
    <summary type="html">&lt;p&gt;新一代爬虫平台，以图形化方式定义爬虫流程，不写代码即可完成爬虫。&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://www.spiderflow.org/images/logo.svg?sanitize=true&#34; width=&#34;600&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://www.oracle.com/technetwork/java/javase/downloads/index.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/JDK-1.8+-green.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://www.spiderflow.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Docs-latest-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/ssssssss-team/spider-flow/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ssssssss-team/spider-flow?logo=github&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://gitee.com/ssssssss-team/spider-flow&#34;&gt;&lt;img src=&#34;https://gitee.com/ssssssss-team/spider-flow/badge/star.svg?theme=white&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/ssssssss-team/spider-flow&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ssssssss-team/spider-flow.svg?style=social&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://raw.githubusercontent.com/ssssssss-team/spider-flow/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/:license-MIT-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://shang.qq.com/wpa/qunwpa?idkey=10faa4cf9743e0aa379a72f2ad12a9e576c81462742143c8f3391b52e8c3ed8d&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Join-QQGroup-blue&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ssssssss-team/spider-flow/master/#%E4%BB%8B%E7%BB%8D&#34;&gt;介绍&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ssssssss-team/spider-flow/master/#%E7%89%B9%E6%80%A7&#34;&gt;特性&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ssssssss-team/spider-flow/master/#%E6%8F%92%E4%BB%B6&#34;&gt;插件&lt;/a&gt; | &lt;a target=&#34;_blank&#34; href=&#34;http://demo.spiderflow.org&#34;&gt;DEMO站点&lt;/a&gt; | &lt;a target=&#34;_blank&#34; href=&#34;https://www.spiderflow.org&#34;&gt;文档&lt;/a&gt; | &lt;a target=&#34;_blank&#34; href=&#34;https://www.spiderflow.org/changelog.html&#34;&gt;更新日志&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ssssssss-team/spider-flow/master/#%E9%A1%B9%E7%9B%AE%E9%83%A8%E5%88%86%E6%88%AA%E5%9B%BE&#34;&gt;截图&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ssssssss-team/spider-flow/master/#%E5%85%B6%E5%AE%83%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE&#34;&gt;其它开源&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/ssssssss-team/spider-flow/master/#%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E&#34;&gt;免责声明&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;平台以流程图的方式定义爬虫,是一个高度灵活可配置的爬虫平台&lt;/p&gt; &#xA;&lt;h2&gt;特性&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持Xpath/JsonPath/css选择器/正则提取/混搭提取&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持JSON/XML/二进制格式&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持多数据源、SQL select/selectInt/selectOne/insert/update/delete&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持爬取JS动态渲染(或ajax)的页面&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持代理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自动保存至数据库/文件&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 常用字符串、日期、文件、加解密等函数&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持插件扩展(自定义执行器，自定义方法）&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 任务监控,任务日志&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持HTTP接口&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持Cookie自动管理&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 支持自定义函数&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;插件&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://gitee.com/ssssssss-team/spider-flow-selenium&#34;&gt;Selenium插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://gitee.com/ssssssss-team/spider-flow-redis&#34;&gt;Redis插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://gitee.com/ssssssss-team/spider-flow-oss&#34;&gt;OSS插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://gitee.com/ssssssss-team/spider-flow-mongodb&#34;&gt;Mongodb插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://gitee.com/ssssssss-team/spider-flow-proxypool&#34;&gt;IP代理池插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://gitee.com/ssssssss-team/spider-flow-ocr&#34;&gt;OCR识别插件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://gitee.com/ssssssss-team/spider-flow-mailbox&#34;&gt;电子邮箱插件&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目部分截图&lt;/h2&gt; &#xA;&lt;h3&gt;爬虫列表&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.gitee.com/uploads/images/2020/0412/104521_e1eb3fbb_297689.png&#34; alt=&#34;爬虫列表&#34; title=&#34;list.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;爬虫测试&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.gitee.com/uploads/images/2020/0412/104659_b06dfbf0_297689.gif&#34; alt=&#34;爬虫测试&#34; title=&#34;test.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Debug&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.gitee.com/uploads/images/2020/0412/104741_f9e1190e_297689.png&#34; alt=&#34;Debug&#34; title=&#34;debug.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;日志&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.gitee.com/uploads/images/2020/0412/104800_a757f569_297689.png&#34; alt=&#34;日志&#34; title=&#34;logo.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;其它开源项目&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/ssssssss-team/spider-flow-vue&#34;&gt;spider-flow-vue，spider-flow的前端&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/ssssssss-team/magic-api&#34;&gt;magic-api，一个以XML为基础自动映射为HTTP接口的框架&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitee.com/ssssssss-team/magic-api-spring-boot-starter&#34;&gt;magic-api-spring-boot-starter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;免责声明&lt;/h2&gt; &#xA;&lt;p&gt;请勿将&lt;code&gt;spider-flow&lt;/code&gt;应用到任何可能会违反法律规定和道德约束的工作中，请友善使用&lt;code&gt;spider-flow&lt;/code&gt;，遵守蜘蛛协议，不要将&lt;code&gt;spider-flow&lt;/code&gt;用于任何非法用途。如您选择使用&lt;code&gt;spider-flow&lt;/code&gt;即代表您遵守此协议，作者不承担任何由于您违反此协议带来任何的法律风险和损失，一切后果由您承担。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>googleapis/java-genai</title>
    <updated>2025-07-13T01:40:10Z</updated>
    <id>tag:github.com,2025-07-13:/googleapis/java-genai</id>
    <link href="https://github.com/googleapis/java-genai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Google Gen AI Java SDK provides an interface for developers to integrate Google&#39;s generative models into their Java applications.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Gen AI Java SDK&lt;/h1&gt; &#xA;&lt;p&gt;Java idiomatic SDK for the &lt;a href=&#34;https://ai.google.dev/gemini-api/docs&#34;&gt;Gemini Developer APIs&lt;/a&gt; and &lt;a href=&#34;https://cloud.google.com/vertex-ai/generative-ai/docs/learn/overview&#34;&gt;Vertex AI&lt;/a&gt; APIs.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://central.sonatype.com/artifact/com.google.genai/google-genai&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.google.genai/google-genai.svg?sanitize=true&#34; alt=&#34;Maven&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://googleapis.github.io/java-genai/javadoc/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/JavaDoc-Online-green&#34; alt=&#34;Javadoc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Add dependency&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re using Maven, add the following to your dependencies: &lt;a href=&#34;https://raw.githubusercontent.com/googleapis/java-genai/main/#&#34; title=&#34;{x-version-update-end}&#34;&gt;//&lt;/a&gt;: # ({x-version-update-start:google-genai:released})&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependencies&amp;gt;&#xA;  &amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.google.genai&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;google-genai&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.8.0&amp;lt;/version&amp;gt;&#xA;  &amp;lt;/dependency&amp;gt;&#xA;&amp;lt;/dependencies&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Follow the instructions in this section to get started using the Google Gen AI SDK for Java.&lt;/p&gt; &#xA;&lt;h3&gt;Create a client&lt;/h3&gt; &#xA;&lt;p&gt;The Google Gen AI Java SDK provides a Client class, simplifying interaction with both the Gemini API and Vertex AI API. With minimal configuration, you can seamlessly switch between the 2 backends without rewriting your code.&lt;/p&gt; &#xA;&lt;h4&gt;Instantiate a client that uses Gemini API&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.google.genai.Client;&#xA;&#xA;// Use Builder class for instantiation. Explicitly set the API key to use Gemini&#xA;// Developer backend.&#xA;Client client = Client.builder().apiKey(&#34;your-api-key&#34;).build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Instantiate a client that uses Vertex AI API&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.google.genai.Client;&#xA;&#xA;// Use Builder class for instantiation. Explicitly set the project and location,&#xA;// and set `vertexAI(true)` to use Vertex AI backend.&#xA;Client client = Client.builder()&#xA;  .project(&#34;your-project&#34;)&#xA;  .location(&#34;your-location&#34;)&#xA;  .vertexAI(true)&#xA;  .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;(Optional) Using environment variables:&lt;/h4&gt; &#xA;&lt;p&gt;You can create a client by configuring the necessary environment variables. Configuration setup instructions depends on whether you&#39;re using the Gemini Developer API or the Gemini API in Vertex AI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Gemini Developer API:&lt;/strong&gt; Set &lt;code&gt;GOOGLE_API_KEY&lt;/code&gt; as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOOGLE_API_KEY=&#39;your-api-key&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Gemini API on Vertex AI:&lt;/strong&gt; Set &lt;code&gt;GOOGLE_GENAI_USE_VERTEXAI&lt;/code&gt;, &lt;code&gt;GOOGLE_CLOUD_PROJECT&lt;/code&gt; and &lt;code&gt;GOOGLE_CLOUD_LOCATION&lt;/code&gt;, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOOGLE_GENAI_USE_VERTEXAI=true&#xA;export GOOGLE_CLOUD_PROJECT=&#39;your-project-id&#39;&#xA;export GOOGLE_CLOUD_LOCATION=&#39;us-central1&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.google.genai.Client;&#xA;&#xA;Client client = new Client();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Interact with models&lt;/h3&gt; &#xA;&lt;p&gt;The Gen AI Java SDK allows you to access the service programmatically. The following code snippets are some basic usages of model inferencing.&lt;/p&gt; &#xA;&lt;h4&gt;Generate Content&lt;/h4&gt; &#xA;&lt;p&gt;Use &lt;code&gt;generateContent&lt;/code&gt; method for the most basic text generation.&lt;/p&gt; &#xA;&lt;h5&gt;with text input&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package &amp;lt;your package name&amp;gt;;&#xA;&#xA;import com.google.genai.Client;&#xA;import com.google.genai.types.GenerateContentResponse;&#xA;&#xA;public class GenerateContentWithTextInput {&#xA;  public static void main(String[] args) {&#xA;    // Instantiate the client. The client by default uses the Gemini API. It&#xA;    //  gets the API key from the environment variable `GOOGLE_API_KEY`.&#xA;    Client client = new Client();&#xA;&#xA;    GenerateContentResponse response =&#xA;        client.models.generateContent(&#34;gemini-2.0-flash-001&#34;, &#34;What is your name?&#34;, null);&#xA;&#xA;    // Gets the text string from the response by the quick accessor method `text()`.&#xA;    System.out.println(&#34;Unary response: &#34; + response.text());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;with text and image input&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package &amp;lt;your package name&amp;gt;;&#xA;&#xA;import com.google.common.collect.ImmutableList;&#xA;import com.google.genai.Client;&#xA;import com.google.genai.types.Content;&#xA;import com.google.genai.types.GenerateContentResponse;&#xA;import com.google.genai.types.Part;&#xA;&#xA;public class GenerateContentWithImageInput {&#xA;  public static void main(String[] args) {&#xA;    // Instantiate the client using Vertex API. The client gets the project and&#xA;    // location from the environment variables `GOOGLE_CLOUD_PROJECT` and&#xA;    // `GOOGLE_CLOUD_LOCATION`.&#xA;    Client client = Client.builder().vertexAI(true).build();&#xA;&#xA;    // Construct a multimodal content with quick constructors&#xA;    Content content =&#xA;        Content.fromParts(&#xA;            Part.fromText(&#34;describe the image&#34;),&#xA;            Part.fromUri(&#34;gs://path/to/image.jpg&#34;, &#34;image/jpeg&#34;));&#xA;&#xA;    GenerateContentResponse response =&#xA;        client.models.generateContent(&#34;gemini-2.0-flash-001&#34;, content, null);&#xA;&#xA;    System.out.println(&#34;Response: &#34; + response.text());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Automatic function calling with generate content&lt;/h5&gt; &#xA;&lt;p&gt;The Models.generateContent methods supports automatic function calling (AFC). If the user passes in a list of public static method in the tool list of the GenerateContentConfig, by default AFC will be enabled with maximum remote calls to be 10 times. Follow the following steps to experience this feature.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;: enable the compiler to parse parameter name of your methods. In your &lt;code&gt;pom.xml&lt;/code&gt;, include the following compiler configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;plugin&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;3.14.0&amp;lt;/version&amp;gt;&#xA;  &amp;lt;configuration&amp;gt;&#xA;    &amp;lt;compilerArgs&amp;gt;&#xA;      &amp;lt;arg&amp;gt;-parameters&amp;lt;/arg&amp;gt;&#xA;    &amp;lt;/compilerArgs&amp;gt;&#xA;  &amp;lt;/configuration&amp;gt;&#xA;&amp;lt;/plugin&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;: see the following code example to use AFC, pay special attention to the code line where the &lt;code&gt;java.lang.reflect.Method&lt;/code&gt; instance was extracted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import com.google.common.collect.ImmutableList;&#xA;import com.google.genai.Client;&#xA;import com.google.genai.types.GenerateContentConfig;&#xA;import com.google.genai.types.GenerateContentResponse;&#xA;import com.google.genai.types.Tool;&#xA;import java.lang.reflect.Method;&#xA;&#xA;public class GenerateContentWithFunctionCall {&#xA;  public static String getCurrentWeather(String location, String unit) {&#xA;    return &#34;The weather in &#34; + location + &#34; is &#34; + &#34;very nice.&#34;;&#xA;  }&#xA;&#xA;  public static void main(String[] args) throws NoSuchMethodException {&#xA;    Client client = new Client();&#xA;&#xA;    Method method =&#xA;        GenerateContentWithFunctionCall.class.getMethod(&#xA;            &#34;getCurrentWeather&#34;, String.class, String.class);&#xA;&#xA;    GenerateContentConfig config =&#xA;        GenerateContentConfig.builder()&#xA;            .tools(&#xA;                ImmutableList.of(&#xA;                    Tool.builder().functions(ImmutableList.of(method)).build()))&#xA;            .build();&#xA;&#xA;    GenerateContentResponse response =&#xA;        client.models.generateContent(&#xA;            &#34;gemini-2.0-flash-001&#34;,&#xA;            &#34;What is the weather in Vancouver?&#34;,&#xA;            config);&#xA;&#xA;    System.out.println(&#34;The response is: &#34; + response.text());&#xA;    System.out.println(&#xA;        &#34;The automatic function calling history is: &#34;&#xA;            + response.automaticFunctionCallingHistory().get());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Stream Generated Content&lt;/h4&gt; &#xA;&lt;p&gt;To get a streamed response, you can use the &lt;code&gt;generateContentStream&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package &amp;lt;your package name&amp;gt;;&#xA;&#xA;import com.google.genai.Client;&#xA;import com.google.genai.ResponseStream;&#xA;import com.google.genai.types.GenerateContentResponse;&#xA;&#xA;public class StreamGeneration {&#xA;  public static void main(String[] args) {&#xA;    // Instantiate the client using Vertex API. The client gets the project and location from the&#xA;    // environment variables `GOOGLE_CLOUD_PROJECT` and `GOOGLE_CLOUD_LOCATION`.&#xA;    Client client = Client.builder().vertexAI(true).build();&#xA;&#xA;    ResponseStream&amp;lt;GenerateContentResponse&amp;gt; responseStream =&#xA;        client.models.generateContentStream(&#xA;            &#34;gemini-2.0-flash-001&#34;, &#34;Tell me a story in 300 words.&#34;, null);&#xA;&#xA;    System.out.println(&#34;Streaming response: &#34;);&#xA;    for (GenerateContentResponse res : responseStream) {&#xA;      System.out.print(res.text());&#xA;    }&#xA;&#xA;    // To save resources and avoid connection leaks, it is recommended to close the response&#xA;    // stream after consumption (or using try block to get the response stream).&#xA;    responseStream.close();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Async Generate Content&lt;/h4&gt; &#xA;&lt;p&gt;To get a response asynchronously, you can use the &lt;code&gt;generateContent&lt;/code&gt; method from the &lt;code&gt;client.async.models&lt;/code&gt; namespace.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package &amp;lt;your package name&amp;gt;;&#xA;&#xA;import com.google.genai.Client;&#xA;import com.google.genai.types.GenerateContentResponse;&#xA;import java.util.concurrent.CompletableFuture;&#xA;&#xA;public class GenerateContentAsync {&#xA;  public static void main(String[] args) {&#xA;    // Instantiates the client using Gemini API, and sets the API key in the builder.&#xA;    Client client = Client.builder().apiKey(&#34;your-api-key&#34;).build();&#xA;&#xA;    CompletableFuture&amp;lt;GenerateContentResponse&amp;gt; responseFuture =&#xA;        client.async.models.generateContent(&#xA;            &#34;gemini-2.0-flash-001&#34;, &#34;Introduce Google AI Studio.&#34;, null);&#xA;&#xA;    responseFuture&#xA;        .thenAccept(&#xA;            response -&amp;gt; {&#xA;              System.out.println(&#34;Async response: &#34; + response.text());&#xA;            })&#xA;        .join();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Generate Content with extra configs&lt;/h4&gt; &#xA;&lt;p&gt;To set configurations like System Instructions and Safety Settings, you can pass a &lt;code&gt;GenerateContentConfig&lt;/code&gt; to the &lt;code&gt;GenerateContent&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package &amp;lt;your package name&amp;gt;;&#xA;&#xA;import com.google.common.collect.ImmutableList;&#xA;import com.google.genai.Client;&#xA;import com.google.genai.types.Content;&#xA;import com.google.genai.types.GenerateContentConfig;&#xA;import com.google.genai.types.GenerateContentResponse;&#xA;import com.google.genai.types.GoogleSearch;&#xA;import com.google.genai.types.HarmBlockThreshold;&#xA;import com.google.genai.types.HarmCategory;&#xA;import com.google.genai.types.Part;&#xA;import com.google.genai.types.SafetySetting;&#xA;import com.google.genai.types.Tool;&#xA;&#xA;public class GenerateContentWithConfigs {&#xA;  public static void main(String[] args) {&#xA;    Client client = new Client();&#xA;&#xA;    // Sets the safety settings in the config.&#xA;    ImmutableList&amp;lt;SafetySetting&amp;gt; safetySettings =&#xA;        ImmutableList.of(&#xA;            SafetySetting.builder()&#xA;                .category(HarmCategory.Known.HARM_CATEGORY_HATE_SPEECH)&#xA;                .threshold(HarmBlockThreshold.Known.BLOCK_ONLY_HIGH)&#xA;                .build(),&#xA;            SafetySetting.builder()&#xA;                .category(HarmCategory.Known.HARM_CATEGORY_DANGEROUS_CONTENT)&#xA;                .threshold(HarmBlockThreshold.Known.BLOCK_LOW_AND_ABOVE)&#xA;                .build());&#xA;&#xA;    // Sets the system instruction in the config.&#xA;    Content systemInstruction = Content.fromParts(Part.fromText(&#34;You are a history teacher.&#34;));&#xA;&#xA;    // Sets the Google Search tool in the config.&#xA;    Tool googleSearchTool = Tool.builder().googleSearch(GoogleSearch.builder().build()).build();&#xA;&#xA;    GenerateContentConfig config =&#xA;        GenerateContentConfig.builder()&#xA;            .candidateCount(1)&#xA;            .maxOutputTokens(1024)&#xA;            .safetySettings(safetySettings)&#xA;            .systemInstruction(systemInstruction)&#xA;            .tools(ImmutableList.of(googleSearchTool))&#xA;            .build();&#xA;&#xA;    GenerateContentResponse response =&#xA;        client.models.generateContent(&#34;gemini-2.0-flash-001&#34;, &#34;Tell me the history of LLM&#34;, config);&#xA;&#xA;    System.out.println(&#34;Response: &#34; + response.text());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Generate Content with JSON response schema&lt;/h4&gt; &#xA;&lt;p&gt;To get a response in JSON by passing in a response schema to the &lt;code&gt;GenerateContent&lt;/code&gt; API.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package &amp;lt;your package name&amp;gt;;&#xA;&#xA;import com.google.common.collect.ImmutableMap;&#xA;import com.google.genai.Client;&#xA;import com.google.genai.types.GenerateContentConfig;&#xA;import com.google.genai.types.GenerateContentResponse;&#xA;import com.google.genai.types.Schema;&#xA;import com.google.genai.types.Type;&#xA;&#xA;public class GenerateContentWithSchema {&#xA;  public static void main(String[] args) {&#xA;    Client client = new Client();&#xA;&#xA;    Schema schema =&#xA;        Schema.builder()&#xA;            .type(&#34;object&#34;)&#xA;            .properties(&#xA;                ImmutableMap.of(&#xA;                    &#34;name&#34;, Schema.builder().type(Type.Known.STRING).description(&#34;Your Name&#34;).build()))&#xA;            .build();&#xA;    GenerateContentConfig config =&#xA;        GenerateContentConfig.builder()&#xA;            .responseMimeType(&#34;application/json&#34;)&#xA;            .candidateCount(1)&#xA;            .responseSchema(schema)&#xA;            .build();&#xA;&#xA;    GenerateContentResponse response =&#xA;        client.models.generateContent(&#34;gemini-2.0-flash-001&#34;, &#34;Tell me your name&#34;, config);&#xA;&#xA;    System.out.println(&#34;Response: &#34; + response.text());&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;This library follows &lt;a href=&#34;http://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to this library&lt;/h2&gt; &#xA;&lt;p&gt;The Google Gen AI Java SDK will accept contributions in the future.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache 2.0 - See &lt;a href=&#34;https://github.com/googleapis/java-genai/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
</feed>