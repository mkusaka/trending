<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-02T01:42:25Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>synthetichealth/synthea</title>
    <updated>2025-02-02T01:42:25Z</updated>
    <id>tag:github.com,2025-02-02:/synthetichealth/synthea</id>
    <link href="https://github.com/synthetichealth/synthea" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Synthetic Patient Population Simulator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Synthea&lt;sup&gt;TM&lt;/sup&gt; Patient Generator &lt;img src=&#34;https://github.com/synthetichealth/synthea/workflows/.github/workflows/ci-build-test.yml/badge.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/synthetichealth/synthea&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/synthetichealth/synthea/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Synthea&lt;sup&gt;TM&lt;/sup&gt; is a Synthetic Patient Population Simulator. The goal is to output synthetic, realistic (but not real), patient data and associated health records in a variety of formats.&lt;/p&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://github.com/synthetichealth/synthea/wiki&#34;&gt;wiki&lt;/a&gt; and &lt;a href=&#34;https://github.com/synthetichealth/synthea/wiki/Frequently-Asked-Questions&#34;&gt;Frequently Asked Questions&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;Currently, Synthea&lt;sup&gt;TM&lt;/sup&gt; features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Birth to Death Lifecycle&lt;/li&gt; &#xA; &lt;li&gt;Configuration-based statistics and demographics (defaults with Massachusetts Census data)&lt;/li&gt; &#xA; &lt;li&gt;Modular Rule System &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Drop in &lt;a href=&#34;https://github.com/synthetichealth/synthea/wiki/Generic-Module-Framework&#34;&gt;Generic Modules&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Custom Java rules modules for additional capabilities&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Primary Care Encounters, Emergency Room Encounters, and Symptom-Driven Encounters&lt;/li&gt; &#xA; &lt;li&gt;Conditions, Allergies, Medications, Vaccinations, Observations/Vitals, Labs, Procedures, CarePlans&lt;/li&gt; &#xA; &lt;li&gt;Formats &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;HL7 FHIR (R4, STU3 v3.0.1, and DSTU2 v1.0.2)&lt;/li&gt; &#xA;   &lt;li&gt;Bulk FHIR in ndjson format (set &lt;code&gt;exporter.fhir.bulk_data = true&lt;/code&gt; to activate)&lt;/li&gt; &#xA;   &lt;li&gt;C-CDA (set &lt;code&gt;exporter.ccda.export = true&lt;/code&gt; to activate)&lt;/li&gt; &#xA;   &lt;li&gt;CSV (set &lt;code&gt;exporter.csv.export = true&lt;/code&gt; to activate)&lt;/li&gt; &#xA;   &lt;li&gt;CPCDS (set &lt;code&gt;exporter.cpcds.export = true&lt;/code&gt; to activate)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rendering Rules and Disease Modules with Graphviz&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Developer Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;These instructions are intended for those wishing to examine the Synthea source code, extend it or build the code locally. Those just wishing to run Synthea should follow the &lt;a href=&#34;https://github.com/synthetichealth/synthea/wiki/Basic-Setup-and-Running&#34;&gt;Basic Setup and Running&lt;/a&gt; instructions instead.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;System Requirements:&lt;/strong&gt; Synthea&lt;sup&gt;TM&lt;/sup&gt; requires Java JDK 11 or newer. We strongly recommend using a Long-Term Support (LTS) release of Java, 11 or 17, as issues may occur with more recent non-LTS versions.&lt;/p&gt; &#xA;&lt;p&gt;To clone the Synthea&lt;sup&gt;TM&lt;/sup&gt; repo, then build and run the test suite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/synthetichealth/synthea.git&#xA;cd synthea&#xA;./gradlew build check test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Changing the default properties&lt;/h3&gt; &#xA;&lt;p&gt;The default properties file values can be found at &lt;code&gt;src/main/resources/synthea.properties&lt;/code&gt;. By default, synthea does not generate CCDA, CPCDA, CSV, or Bulk FHIR (ndjson). You&#39;ll need to adjust this file to activate these features. See the &lt;a href=&#34;https://github.com/synthetichealth/synthea/wiki&#34;&gt;wiki&lt;/a&gt; for more details, or use our &lt;a href=&#34;https://synthetichealth.github.io/spt/#/customizer&#34;&gt;guided customizer tool&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Generate Synthetic Patients&lt;/h3&gt; &#xA;&lt;p&gt;Generating the population one at a time...&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./run_synthea&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Command-line arguments may be provided to specify a state, city, population size, or seed for randomization.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;run_synthea [-s seed] [-p populationSize] [state [city]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Full usage info can be printed by passing the &lt;code&gt;-h&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./run_synthea -h     &#xA;&#xA;&amp;gt; Task :run&#xA;Usage: run_synthea [options] [state [city]]&#xA;Options: [-s seed]&#xA;         [-cs clinicianSeed]&#xA;         [-p populationSize]&#xA;         [-r referenceDate as YYYYMMDD]&#xA;         [-g gender]&#xA;         [-a minAge-maxAge]&#xA;         [-o overflowPopulation]&#xA;         [-c localConfigFilePath]&#xA;         [-d localModulesDirPath]&#xA;         [-i initialPopulationSnapshotPath]&#xA;         [-u updatedPopulationSnapshotPath]&#xA;         [-t updateTimePeriodInDays]&#xA;         [-f fixedRecordPath]&#xA;         [-k keepMatchingPatientsPath]&#xA;         [--config*=value]&#xA;          * any setting from src/main/resources/synthea.properties&#xA;&#xA;Examples:&#xA;run_synthea Massachusetts&#xA;run_synthea Alaska Juneau&#xA;run_synthea -s 12345&#xA;run_synthea -p 1000&#xA;run_synthea -s 987 Washington Seattle&#xA;run_synthea -s 21 -p 100 Utah &#34;Salt Lake City&#34;&#xA;run_synthea -g M -a 60-65&#xA;run_synthea -p 10 --exporter.fhir.export=true&#xA;run_synthea --exporter.baseDirectory=&#34;./output_tx/&#34; Texas&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Some settings can be changed in &lt;code&gt;./src/main/resources/synthea.properties&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Synthea&lt;sup&gt;TM&lt;/sup&gt; will output patient records in C-CDA and FHIR formats in &lt;code&gt;./output&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Synthea&lt;sup&gt;TM&lt;/sup&gt; GraphViz&lt;/h3&gt; &#xA;&lt;p&gt;Generate graphical visualizations of Synthea&lt;sup&gt;TM&lt;/sup&gt; rules and modules.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Concepts and Attributes&lt;/h3&gt; &#xA;&lt;p&gt;Generate a list of concepts (used in the records) or attributes (variables on each patient).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew concepts&#xA;./gradlew attributes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Copyright 2017-2023 The MITRE Corporation&lt;/p&gt; &#xA;&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>