<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-23T01:43:29Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tencentmusic/supersonic</title>
    <updated>2024-06-23T01:43:29Z</updated>
    <id>tag:github.com,2024-06-23:/tencentmusic/supersonic</id>
    <link href="https://github.com/tencentmusic/supersonic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;SuperSonic is the next-generation BI platform that integrates Chat BI (powered by LLM) and Headless BI (powered by semantic layer) paradigms.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/tencentmusic/supersonic/master/README_CN.md&#34;&gt;中文版&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/tencentmusic/supersonic/master/README_JP.md&#34;&gt;日本語版&lt;/a&gt; | &lt;a href=&#34;https://supersonicbi.github.io/&#34;&gt;Docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/tencentmusic/supersonic/workflows/supersonic%20CI/badge.svg?sanitize=true&#34; alt=&#34;Java CI&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;SuperSonic&lt;/h1&gt; &#xA;&lt;p&gt;SuperSonic is the next-generation BI platform that integrates &lt;strong&gt;Chat BI&lt;/strong&gt; (powered by LLM) and &lt;strong&gt;Headless BI&lt;/strong&gt; (powered by semantic layer) paradigms. This integration ensures that Chat BI has access to the same curated and governed semantic data models as traditional BI. Furthermore, the implementation of both paradigms benefits from the integration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Chat BI&#39;s Text2SQL gets augmented with context-retrieval from semantic models.&lt;/li&gt; &#xA; &lt;li&gt;Headless BI&#39;s query interface gets extended with natural language API.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_ideas.png&#34; height=&#34;75%&#34; width=&#34;75%&#34;&gt; &#xA;&lt;p&gt;SuperSonic provides a &lt;strong&gt;Chat BI interface&lt;/strong&gt; that empowers users to query data using natural language and visualize the results with suitable charts. To enable such experience, the only thing necessary is to build logical semantic models (definition of metric/dimension/tag, along with their meaning and relationships) through a &lt;strong&gt;Headless BI interface&lt;/strong&gt;. Meanwhile, SuperSonic is designed to be extensible and composable, allowing custom implementations to be added and configured with Java SPI.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_demo.gif&#34; height=&#34;100%&#34; width=&#34;100%&#34;&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;The emergence of Large Language Model (LLM) like ChatGPT is reshaping the way information is retrieved, leading to a new paradigm in the field of data analytics known as Chat BI. To implement Chat BI, both academia and industry are primarily focused on harnessing the power of LLMs to convert natural language into SQL, commonly referred to as Text2SQL or NL2SQL. While some approaches show promising results, their &lt;strong&gt;reliability&lt;/strong&gt; falls short for large-scale real-world applications.&lt;/p&gt; &#xA;&lt;p&gt;Meanwhile, another emerging paradigm called Headless BI, which focuses on constructing unified semantic data models, has garnered significant attention. Headless BI is implemented through a universal semantic layer that exposes consistent data semantics via an open API.&lt;/p&gt; &#xA;&lt;p&gt;From our perspective, the integration of Chat BI and Headless BI has the potential to enhance the Text2SQL generation in two dimensions:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Incorporate data semantics (such as business terms, column values, etc.) into the prompt, enabling LLM to better understand the semantics and &lt;strong&gt;reduce hallucination&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Offload the generation of advanced SQL syntax (such as join, formula, etc.) from LLM to the semantic layer to &lt;strong&gt;reduce complexity&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;With these ideas in mind, we develop SuperSonic as a practical reference implementation and use it to power our real-world products. Additionally, to facilitate further development we decide to open source SuperSonic as an extensible framework.&lt;/p&gt; &#xA;&lt;h2&gt;Out-of-the-box Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Built-in Chat BI interface for &lt;em&gt;business users&lt;/em&gt; to enter natural language queries&lt;/li&gt; &#xA; &lt;li&gt;Built-in Headless BI interface for &lt;em&gt;analytics engineers&lt;/em&gt; to build semantic data models&lt;/li&gt; &#xA; &lt;li&gt;Built-in rule-based semantic parser to improve efficiency in certain scenarios (e.g. demonstration, integration testing)&lt;/li&gt; &#xA; &lt;li&gt;Built-in support for input auto-completion, multi-turn conversation as well as post-query recommendation&lt;/li&gt; &#xA; &lt;li&gt;Built-in support for three-level data access control: dataset-level, column-level and row-level&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Extensible Components&lt;/h2&gt; &#xA;&lt;p&gt;The high-level architecture and main process flow is as follows:&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_components.png&#34; height=&#34;65%&#34; width=&#34;65%&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Knowledge Base:&lt;/strong&gt; extracts schema information periodically from the semantic models and build dictionary and index to facilitate schema mapping.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Schema Mapper:&lt;/strong&gt; identifies references to schema elements(metrics/dimensions/entities/values) in user queries. It matches the query text against the knowledge base.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Semantic Parser:&lt;/strong&gt; understands user queries and generates semantic query statement. It consists of a combination of rule-based and model-based parsers, each of which deals with specific scenarios.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Semantic Corrector:&lt;/strong&gt; checks validity of semantic query statement and performs correction and optimization if needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Semantic Translator:&lt;/strong&gt; converts semantic query statement into SQL statement that can be executed against physical data models.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chat Plugin:&lt;/strong&gt; extends functionality with third-party tools. The LLM is going to select the most suitable one, given all configured plugins with function description and sample questions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quick Demo&lt;/h2&gt; &#xA;&lt;h3&gt;Online playground&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;http://117.72.46.148:9080&#34;&gt;http://117.72.46.148:9080&lt;/a&gt; to register and experience as a new user. Please do not modify system configurations. We will restart to reset configurations regularly every weekend.&lt;/p&gt; &#xA;&lt;h3&gt;Local build&lt;/h3&gt; &#xA;&lt;p&gt;SuperSonic comes with sample semantic models as well as chat conversations that can be used as a starting point. Please follow the steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the latest prebuilt binary from the &lt;a href=&#34;https://github.com/tencentmusic/supersonic/releases&#34;&gt;release page&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run script &#34;assembly/bin/supersonic-daemon.sh start&#34; to start a standalone Java service&lt;/li&gt; &#xA; &lt;li&gt;Visit &lt;a href=&#34;http://localhost:9080&#34;&gt;http://localhost:9080&lt;/a&gt; in the browser to start exploration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build and Development&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to project &lt;a href=&#34;https://supersonicbi.github.io/docs/%E7%B3%BB%E7%BB%9F%E9%83%A8%E7%BD%B2/%E7%BC%96%E8%AF%91%E6%9E%84%E5%BB%BA/&#34;&gt;Docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;WeChat Contact&lt;/h2&gt; &#xA;&lt;p&gt;Please follow SuperSonic wechat official account:&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_wechat_oa.png&#34; height=&#34;50%&#34; width=&#34;50%&#34;&gt; &#xA;&lt;p&gt;Welcome to join the WeChat community:&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/supersonicbi/supersonic-website/raw/main/static/img/supersonic_wechat.png&#34; height=&#34;50%&#34; width=&#34;50%&#34;&gt;</summary>
  </entry>
  <entry>
    <title>antlr/antlr4</title>
    <updated>2024-06-23T01:43:29Z</updated>
    <id>tag:github.com,2024-06-23:/antlr/antlr4</id>
    <link href="https://github.com/antlr/antlr4" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ANTLR (ANother Tool for Language Recognition) is a powerful parser generator for reading, processing, executing, or translating structured text or binary files.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ANTLR v4&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://java.oracle.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/java-11+-4c7e9f.svg?sanitize=true&#34; alt=&#34;Java 11+&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/antlr/antlr4/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-BSD-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ANTLR&lt;/strong&gt; (ANother Tool for Language Recognition) is a powerful parser generator for reading, processing, executing, or translating structured text or binary files. It&#39;s widely used to build languages, tools, and frameworks. From a grammar, ANTLR generates a parser that can build parse trees and also generates a listener interface (or visitor) that makes it easy to respond to the recognition of phrases of interest.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Dev branch build status&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/actions/workflows/hosted.yml&#34;&gt;&lt;img src=&#34;https://github.com/antlr/antlr4/actions/workflows/hosted.yml/badge.svg?sanitize=true&#34; alt=&#34;MacOSX, Windows, Linux&#34;&gt;&lt;/a&gt; (github actions)&lt;/p&gt; &#xA;&lt;!--&#xA;* [![Windows](https://github.com/antlr/antlr4/actions/workflows/windows.yml/badge.svg?branch=dev)](https://github.com/antlr/antlr4/actions/workflows/windows.yml) (github actions)&#xA;&#xA;* [![Circle CI Build Status (Linux)](https://img.shields.io/circleci/build/gh/antlr/antlr4/master?label=Linux)](https://app.circleci.com/pipelines/github/antlr/antlr4) (CircleCI)&#xA;&#xA;[![AppVeyor CI Build Status (Windows)](https://img.shields.io/appveyor/build/parrt/antlr4?label=Windows)](https://ci.appveyor.com/project/parrt/antlr4) &#xA;[![Travis-CI Build Status (Swift-Linux)](https://img.shields.io/travis/antlr/antlr4.svg?label=Linux-Swift&amp;branch=master)](https://travis-ci.com/github/antlr/antlr4)&#xA;--&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;ANTLR 4 supports 10 target languages (Cpp, CSharp, Dart, Java, JavaScript, PHP, Python3, Swift, TypeScript, Go), and ensuring consistency across these targets is a unique and highly valuable feature. To ensure proper support of this feature, each release of ANTLR is a complete release of the tool and the 10 runtimes, all with the same version. As such, ANTLR versioning does not strictly follow semver semantics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;a component may be released with the latest version number even though nothing has changed within that component since the previous release&lt;/li&gt; &#xA; &lt;li&gt;major version is bumped only when ANTLR is rewritten for a totally new &#34;generation&#34;, such as ANTLR3 -&amp;gt; ANTLR4 (LL(*) -&amp;gt; ALL(*) parsing)&lt;/li&gt; &#xA; &lt;li&gt;minor version updates may include minor breaking changes, the policy is to regenerate parsers with every release (4.11 -&amp;gt; 4.12)&lt;/li&gt; &#xA; &lt;li&gt;backwards compatibility is only guaranteed for patch version bumps (4.11.1 -&amp;gt; 4.11.2)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you use a semver verifier in your CI, you probably want to apply special rules for ANTLR, such as treating minor change as a major change.&lt;/p&gt; &#xA;&lt;h2&gt;Repo branch structure&lt;/h2&gt; &#xA;&lt;p&gt;The default branch for this repo is &lt;a href=&#34;https://github.com/antlr/antlr4/tree/master&#34;&gt;&lt;code&gt;master&lt;/code&gt;&lt;/a&gt;, which is the latest stable release and has tags for the various releases; e.g., see release tag &lt;a href=&#34;https://github.com/antlr/antlr4/tree/4.9.3&#34;&gt;4.9.3&lt;/a&gt;. Branch &lt;a href=&#34;https://github.com/antlr/antlr4/tree/dev&#34;&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/a&gt; is where development occurs between releases and all pull requests should be derived from that branch. The &lt;code&gt;dev&lt;/code&gt; branch is merged back into &lt;code&gt;master&lt;/code&gt; to cut a release and the release state is tagged (e.g., with &lt;code&gt;4.10-rc1&lt;/code&gt; or &lt;code&gt;4.10&lt;/code&gt;.) Visually our process looks roughly like this:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/antlr/antlr4/dev/doc/images/new-antlr-branches.png&#34; width=&#34;500&#34;&gt; &#xA;&lt;p&gt;The Go target now has its own dedicated repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ go get github.com/antlr4-go/antlr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The dedicated Go repo is for &lt;code&gt;go get&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt; only. Go runtime development is still performed in the main &lt;code&gt;antlr/antlr4&lt;/code&gt; repo.&lt;/p&gt; &#xA;&lt;h2&gt;Authors and major contributors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.cs.usfca.edu/~parrt/&#34;&gt;Terence Parr&lt;/a&gt;, &lt;a href=&#34;mailto:parrt@cs.usfca.edu&#34;&gt;parrt@cs.usfca.edu&lt;/a&gt; ANTLR project lead and supreme dictator for life &lt;a href=&#34;http://www.usfca.edu/&#34;&gt;University of San Francisco&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://tunnelvisionlabs.com/&#34;&gt;Sam Harwell&lt;/a&gt; (Tool co-author, Java and original C# target)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ericvergnaud&#34;&gt;Eric Vergnaud&lt;/a&gt; (Javascript, TypeScript, Python2, Python3 targets and maintenance of C# target)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pboyer&#34;&gt;Peter Boyer&lt;/a&gt; (Go target)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.soft-gems.net/&#34;&gt;Mike Lischke&lt;/a&gt; (C++ completed target)&lt;/li&gt; &#xA; &lt;li&gt;Dan McLaughlin (C++ initial target)&lt;/li&gt; &#xA; &lt;li&gt;David Sisson (C++ initial target and test)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/janyou&#34;&gt;Janyou&lt;/a&gt; (Swift target)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ewanmellor&#34;&gt;Ewan Mellor&lt;/a&gt;, &lt;a href=&#34;https://github.com/hanjoes&#34;&gt;Hanzhou Shi&lt;/a&gt; (Swift target merging)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bhamiltoncx&#34;&gt;Ben Hamilton&lt;/a&gt; (Full Unicode support in serialized ATN and all languages&#39; runtimes for code points &amp;gt; U+FFFF)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marcospassos&#34;&gt;Marcos Passos&lt;/a&gt; (PHP target)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lingyv-li&#34;&gt;Lingyu Li&lt;/a&gt; (Dart target)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KvanTTT&#34;&gt;Ivan Kochurkin&lt;/a&gt; has made major contributions to overall quality, error handling, and Target performance.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jcking&#34;&gt;Justin King&lt;/a&gt; has done a huge amount of work across multiple targets, but especially for C++.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kaby76&#34;&gt;Ken Domino&lt;/a&gt; has a knack for finding bugs/issues and analysis; also a major contributor on the &lt;a href=&#34;https://github.com/antlr/grammars-v4&#34;&gt;grammars-v4 repo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jimidle&#34;&gt;Jim Idle&lt;/a&gt; has contributed to previous versions of ANTLR and recently jumped back in to solve a major problem with the Go target.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Useful information&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/releases&#34;&gt;Release notes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/raw/master/doc/getting-started.md&#34;&gt;Getting started with v4&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.antlr.org/&#34;&gt;Official site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/raw/master/doc/index.md&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/raw/master/doc/faq/index.md&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/raw/master/doc/targets.md&#34;&gt;ANTLR code generation targets&lt;/a&gt;&lt;br&gt;(Currently: Java, C#, Python3, JavaScript, TypeScript, Go, C++, Swift, Dart, PHP)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Note: As of version 4.14, we are dropping support for Python 2. We love the Python community, but Python 2 support was officially halted in Jan 2020. More recently, GiHub also dropped support for Python 2, which has made it impossible for us to maintain a consistent level of quality across targets (we use GitHub for our CI). Long live Python 3!&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.antlr.org/api/Java/index.html&#34;&gt;Java API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.antlr3.org/&#34;&gt;ANTLR v3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/raw/master/doc/faq/general.md&#34;&gt;v3 to v4 Migration, differences&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You might also find the following pages useful, particularly if you want to mess around with the various target languages.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/raw/master/doc/building-antlr.md&#34;&gt;How to build ANTLR itself&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/antlr/antlr4/raw/master/doc/releasing-antlr.md&#34;&gt;How we create and deploy an ANTLR release&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The Definitive ANTLR 4 Reference&lt;/h2&gt; &#xA;&lt;p&gt;Programmers run into parsing problems all the time. Whether it’s a data format like JSON, a network protocol like SMTP, a server configuration file for Apache, a PostScript/PDF file, or a simple spreadsheet macro language—ANTLR v4 and this book will demystify the process. ANTLR v4 has been rewritten from scratch to make it easier than ever to build parsers and the language applications built on top. This completely rewritten new edition of the bestselling Definitive ANTLR Reference shows you how to take advantage of these new features.&lt;/p&gt; &#xA;&lt;p&gt;You can buy the book &lt;a href=&#34;http://amzn.com/1934356999&#34;&gt;The Definitive ANTLR 4 Reference&lt;/a&gt; at amazon or an &lt;a href=&#34;https://pragprog.com/book/tpantlr2/the-definitive-antlr-4-reference&#34;&gt;electronic version at the publisher&#39;s site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You will find the &lt;a href=&#34;http://pragprog.com/titles/tpantlr2/source_code&#34;&gt;Book source code&lt;/a&gt; useful.&lt;/p&gt; &#xA;&lt;h2&gt;Additional grammars&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/antlr/grammars-v4&#34;&gt;This repository&lt;/a&gt; is a collection of grammars without actions where the root directory name is the all-lowercase name of the language parsed by the grammar. For example, java, cpp, csharp, c, etc...&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>apache/paimon</title>
    <updated>2024-06-23T01:43:29Z</updated>
    <id>tag:github.com,2024-06-23:/apache/paimon</id>
    <link href="https://github.com/apache/paimon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Apache Paimon is a lake format that enables building a Realtime Lakehouse Architecture with Flink and Spark for both streaming and batch operations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://paimon.apache.org/assets/paimon_blue.svg?sanitize=true&#34; alt=&#34;Paimon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://the-asf.slack.com/archives/C053Q2NCW8G&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-join-orange.svg?sanitize=true&#34; alt=&#34;Get on Slack&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apache Paimon is a lake format that enables building a Realtime Lakehouse Architecture with Flink and Spark for both streaming and batch operations. Paimon innovatively combines lake format and LSM structure, bringing realtime streaming updates into the lake architecture.&lt;/p&gt; &#xA;&lt;p&gt;Background and documentation are available at &lt;a href=&#34;https://paimon.apache.org&#34;&gt;https://paimon.apache.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Paimon&lt;/code&gt;&#39;s former name was &lt;code&gt;Flink Table Store&lt;/code&gt;, developed from the Flink community. The architecture refers to some design concepts of Iceberg. Thanks to Apache Flink and Apache Iceberg.&lt;/p&gt; &#xA;&lt;h2&gt;Collaboration&lt;/h2&gt; &#xA;&lt;p&gt;Paimon tracks issues in GitHub and prefers to receive contributions as pull requests.&lt;/p&gt; &#xA;&lt;h2&gt;Mailing Lists&lt;/h2&gt; &#xA;&lt;table class=&#34;table table-striped&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;th class=&#34;text-center&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th class=&#34;text-center&#34;&gt;Subscribe&lt;/th&gt; &#xA;   &lt;th class=&#34;text-center&#34;&gt;Digest&lt;/th&gt; &#xA;   &lt;th class=&#34;text-center&#34;&gt;Unsubscribe&lt;/th&gt; &#xA;   &lt;th class=&#34;text-center&#34;&gt;Post&lt;/th&gt; &#xA;   &lt;th class=&#34;text-center&#34;&gt;Archive&lt;/th&gt; &#xA;  &lt;/tr&gt;&#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;user&lt;/strong&gt;@paimon.apache.org&lt;br&gt; &lt;small&gt;User support and questions mailing list&lt;/small&gt; &lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt;&lt;i class=&#34;fa fa-pencil-square-o&#34;&gt;&lt;/i&gt; &lt;a href=&#34;mailto:user-subscribe@paimon.apache.org&#34;&gt;Subscribe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt;&lt;i class=&#34;fa fa-pencil-square-o&#34;&gt;&lt;/i&gt; &lt;a href=&#34;mailto:user-digest-subscribe@paimon.apache.org&#34;&gt;Subscribe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt;&lt;i class=&#34;fa fa-pencil-square-o&#34;&gt;&lt;/i&gt; &lt;a href=&#34;mailto:user-unsubscribe@paimon.apache.org&#34;&gt;Unsubscribe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt;&lt;i class=&#34;fa fa-pencil-square-o&#34;&gt;&lt;/i&gt; &lt;a href=&#34;mailto:user@paimon.apache.org&#34;&gt;Post&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt; &lt;a href=&#34;https://lists.apache.org/list.html?user@paimon.apache.org&#34;&gt;Archives&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;strong&gt;dev&lt;/strong&gt;@paimon.apache.org&lt;br&gt; &lt;small&gt;Development related discussions&lt;/small&gt; &lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt;&lt;i class=&#34;fa fa-pencil-square-o&#34;&gt;&lt;/i&gt; &lt;a href=&#34;mailto:dev-subscribe@paimon.apache.org&#34;&gt;Subscribe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt;&lt;i class=&#34;fa fa-pencil-square-o&#34;&gt;&lt;/i&gt; &lt;a href=&#34;mailto:dev-digest-subscribe@paimon.apache.org&#34;&gt;Subscribe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt;&lt;i class=&#34;fa fa-pencil-square-o&#34;&gt;&lt;/i&gt; &lt;a href=&#34;mailto:dev-unsubscribe@paimon.apache.org&#34;&gt;Unsubscribe&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt;&lt;i class=&#34;fa fa-pencil-square-o&#34;&gt;&lt;/i&gt; &lt;a href=&#34;mailto:dev@paimon.apache.org&#34;&gt;Post&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td class=&#34;text-center&#34;&gt; &lt;a href=&#34;https://lists.apache.org/list.html?dev@paimon.apache.org&#34;&gt;Archives&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;b style=&#34;color:red&#34;&gt;Please make sure you are subscribed to the mailing list you are posting to!&lt;/b&gt; If you are not subscribed to the mailing list, your message will either be rejected (dev@ list) or you won&#39;t receive the response (user@ list).&lt;/p&gt; &#xA;&lt;h2&gt;Slack&lt;/h2&gt; &#xA;&lt;p&gt;You can join the Paimon community on Slack. Paimon channel is in ASF Slack workspace.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Anyone with an @apache.org email address can become a full member of the ASF Slack workspace. Search &lt;a href=&#34;https://the-asf.slack.com/archives/C053Q2NCW8G&#34;&gt;Paimon channel&lt;/a&gt; and join it.&lt;/li&gt; &#xA; &lt;li&gt;If you don&#39;t have an @apache.org email address, you can email to &lt;code&gt;user@paimon.apache.org&lt;/code&gt; to apply for an &lt;a href=&#34;https://infra.apache.org/slack.html&#34;&gt;ASF Slack invitation&lt;/a&gt;. Then join &lt;a href=&#34;https://the-asf.slack.com/archives/C053Q2NCW8G&#34;&gt;Paimon channel&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;JDK 8/11 is required for building the project. Maven version &amp;gt;=3.3.1.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;mvn clean install -DskipTests&lt;/code&gt; command to build the project.&lt;/li&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;mvn spotless:apply&lt;/code&gt; to format the project (both Java and Scala).&lt;/li&gt; &#xA; &lt;li&gt;IDE: Mark &lt;code&gt;paimon-common/target/generated-sources/antlr4&lt;/code&gt; as Sources Root.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paimon.apache.org/docs/master/project/contributing/&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code in this repository is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/apache/paimon/master/LICENSE&#34;&gt;Apache Software License 2&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>