<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-08T01:41:32Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CarGuo/GSYVideoPlayer</title>
    <updated>2024-09-08T01:41:32Z</updated>
    <id>tag:github.com,2024-09-08:/CarGuo/GSYVideoPlayer</id>
    <link href="https://github.com/CarGuo/GSYVideoPlayer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;视频播放器（IJKplayer、ExoPlayer、MediaPlayer），HTTPS，16k page size，支持弹幕，外挂字幕，支持滤镜、水印、gif截图，片头广告、中间广告，多个同时播放，支持基本的拖动，声音、亮度调节，支持边播边缓存，支持视频自带rotation的旋转（90,270之类），重力旋转与手动旋转的同步支持，支持列表播放 ，列表全屏动画，视频加载速度，列表小窗口支持拖动，动画效果，调整比例，多分辨率切换，支持切换播放器，进度条小窗口预览，列表切换详情页面无缝播放，rtsp、concat、mpeg。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/home_logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;支持 &lt;a href=&#34;https://github.com/Bilibili/ijkplayer&#34;&gt;IJKPlayer&lt;/a&gt;、 &lt;a href=&#34;https://github.com/androidx/media&#34;&gt;Media3(EXOPlayer2)&lt;/a&gt;、MediaPlayer、AliPlayer，实现了多功能的视频播放器。 (请仔细阅读下方各项说明，大多数问题可在下方找到解答)。&lt;/h2&gt; &#xA;&lt;h2&gt;鸿蒙版本&lt;a href=&#34;https://gitee.com/openharmony-tpc/openharmony_tpc_samples/tree/master/GSYVideoPlayer&#34;&gt;openharmony-tpc/GSYVideoPlayer&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;h2&gt;&lt;a href=&#34;https://gitee.com/CarGuo/GSYVideoPlayer&#34;&gt;如果克隆太慢或者图片看不到，可尝试从码云地址下载&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;类型&lt;/th&gt; &#xA;   &lt;th&gt;功能&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;缓存&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;边播边缓存，使用了&lt;a href=&#34;https://github.com/danikula/AndroidVideoCache&#34;&gt;AndroidVideoCache&lt;/a&gt;；Media3(ExoPlayer)使用SimpleCache。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;协议&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;h263\4\5、Https、concat、rtsp、hls、rtmp、crypto、mpeg等等。&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/DECODERS.md&#34;&gt;（ijk模式格式支持）&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;滤镜&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;简单滤镜（马赛克、黑白、色彩过滤、高斯、模糊、模糊等等20多种）、动画、（水印、画面多重播放等）。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;帧图&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;视频第一帧、视频帧截图功能，视频生成gif功能。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;播放&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;列表播放、列表连续播放、重力旋转与手动旋转、视频本身rotation旋转属性、快播和慢播、网络视频加载速度。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;画面&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;调整显示比例:默认、16:9、4:3、填充；播放时旋转画面角度（0,90,180,270）；镜像旋转。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;内核&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;IJKPlayer、Media3(EXOPlayer)、MediaPlayer、AliPlayer切换、自定义内核&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;布局&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;全屏与非全屏两套布局切换、没有任何操作控件的纯播放支持、弹幕功能、继承自定义任何布局。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;播放&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;单例播放、多个同时播放、视频列表滑动自动播放、列表切换详情页面无缝播放。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;窗口&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;小窗口、多窗体下（包括桌面）的小窗口播放。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;广告&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;片头广告、跳过广告支持、中间插入广告功能。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;字幕&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/tree/master/app/src/main/java/com/example/gsyvideoplayer/exosubtitle&#34;&gt;media3(exo2)模式下支持自定增加外挂字幕&lt;/a&gt;。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;dash&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;media3(exo2) 模式支持dash&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;stream&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;支持元数据播放&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;适配 16k&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;ex_so 适配 16K Page Size&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;openssl&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;目前 arm64 使用 openssl 1.1.1w&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FFmpeg&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;目前 arm64 使用 FFmpeg 4.1.6&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;FFmpeg&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;目前 ex_so 的 arm64 支持 G711a(pcm_alaw)&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;更多&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;暂停前后台切换不黑屏；调整不同清晰度的支持；无缝切换支持；锁定/解锁全屏点击功能；进度条小窗口预览（测试）。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;自定义&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;可自定义渲染层、自定义管理层、自定义播放层（控制层）、自定义缓存层。&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jitpack.io/#CarGuo/GSYVideoPlayer&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.travis-ci.com/CarGuo/GSYVideoPlayer&#34;&gt;&lt;img src=&#34;https://app.travis-ci.com/CarGuo/GSYVideoPlayer.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/actions&#34;&gt;&lt;img src=&#34;https://github.com/CarGuo/GSYVideoPlayer/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;Github Actions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/network&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/CarGuo/GSYVideoPlayer.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;公众号&lt;/th&gt; &#xA;   &lt;th&gt;掘金&lt;/th&gt; &#xA;   &lt;th&gt;知乎&lt;/th&gt; &#xA;   &lt;th&gt;CSDN&lt;/th&gt; &#xA;   &lt;th&gt;简书&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GSYTech&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://juejin.im/user/582aca2ba22b9d006b59ae68/posts&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.zhihu.com/people/carguo&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.csdn.net/ZuoYueLiang&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.jianshu.com/u/6e613846e1ea&#34;&gt;点我&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://img.cdn.guoshuyu.cn/WeChat-Code&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/releases&#34;&gt;--------------Demo APK 下载地址---------------&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;一、使用依赖&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/UPDATE_VERSION.md&#34;&gt;--- 版本更新说明 --- &lt;/a&gt;。&lt;/h4&gt; &#xA;&lt;h3&gt;1、Jitpack 引入方法（推荐， JCenter 即将关闭）&lt;/h3&gt; &#xA;&lt;h4&gt;First、在project下的build.gradle添加&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;allprojects {&#xA;    repositories {&#xA;&#x9;&#x9;...&#xA;        maven { url &#39;https://jitpack.io&#39; }&#xA;        maven { url &#34;https://maven.aliyun.com/repository/public&#34; }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;你可以选择下面三种的其中一种，在module下的build.gradle添加。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;A、直接引入&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; //完整版引入&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer:v9.0.0-release-jitpack&#39;&#xA;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-aliplay:v9.0.0-release-jitpack&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;B、添加java和你想要的so支持：&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java:v9.0.0-release-jitpack&#39;&#xA;&#xA; //是否需要ExoPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-exo2:v9.0.0-release-jitpack&#39;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-aliplay:v9.0.0-release-jitpack&#39;&#xA;&#xA; //根据你的需求ijk模式的so&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-arm64:v9.0.0-release-jitpack&#39;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv7a:v9.0.0-release-jitpack&#39;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv5:v9.0.0-release-jitpack&#39;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-x86:v9.0.0-release-jitpack&#39;&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-x64:v9.0.0-release-jitpack&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;C、支持其他格式协议的（mpeg，rtsp, concat、crypto协议，支持 16k Page Size）&lt;/h4&gt; &#xA;&lt;p&gt;A、B普通版本支持263/264/265等，对于mpeg编码会有声音无画面情况。 C 引入的so支持mpeg编码和其他补充协议，但是so包相对变大。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java:v9.0.0-release-jitpack&#39;&#xA;&#xA; //是否需要ExoPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-exo2:v9.0.0-release-jitpack&#39;&#xA;&#xA; //是否需要AliPlayer模式&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:GSYVideoPlayer-aliplay:v9.0.0-release-jitpack&#39;&#xA;&#xA; //更多ijk的编码支持&#xA; implementation &#39;com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-ex_so:v9.0.0-release-jitpack&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;代码中的全局切换支持（更多请参看下方文档和demo）&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#xA;//EXOPlayer内核，支持格式更多&#xA;PlayerFactory.setPlayManager(Exo2PlayerManager.class);&#xA;//系统内核模式&#xA;PlayerFactory.setPlayManager(SystemPlayerManager.class);&#xA;//ijk内核，默认模式&#xA;PlayerFactory.setPlayManager(IjkPlayerManager.class);&#xA;//aliplay 内核，默认模式&#xA;PlayerFactory.setPlayManager(AliPlayerManager.class);&#xA;&#xA;&#xA;//exo缓存模式，支持m3u8，只支持exo&#xA;CacheFactory.setCacheManager(ExoPlayerCacheManager.class);&#xA;//代理缓存模式，支持所有模式，不支持m3u8等，默认&#xA;CacheFactory.setCacheManager(ProxyCacheManager.class);&#xA;&#xA;&#xA;&#xA;//切换渲染模式&#xA;GSYVideoType.setShowType(GSYVideoType.SCREEN_MATCH_FULL);&#xA;//默认显示比例&#xA;GSYVideoType.SCREEN_TYPE_DEFAULT = 0;&#xA;//16:9&#xA;GSYVideoType.SCREEN_TYPE_16_9 = 1;&#xA;//4:3&#xA;GSYVideoType.SCREEN_TYPE_4_3 = 2;&#xA;//全屏裁减显示，为了显示正常 CoverImageView 建议使用FrameLayout作为父布局&#xA;GSYVideoType.SCREEN_TYPE_FULL = 4;&#xA;//全屏拉伸显示，使用这个属性时，surface_container建议使用FrameLayout&#xA;GSYVideoType.SCREEN_MATCH_FULL = -4;&#xA;/***&#xA; * SCREEN_TYPE_CUSTOM 下自定义显示比例&#xA; * @param screenScaleRatio  高宽比，如 16：9&#xA; */&#xA;public static void setScreenScaleRatio(float screenScaleRatio)&#xA;&#xA;&#xA;//切换绘制模式&#xA;GSYVideoType.setRenderType(GSYVideoType.SUFRACE);&#xA;GSYVideoType.setRenderType(GSYVideoType.GLSURFACE);&#xA;GSYVideoType.setRenderType(GSYVideoType.TEXTURE);&#xA;&#xA;&#xA;//ijk关闭log&#xA;IjkPlayerManager.setLogLevel(IjkMediaPlayer.IJK_LOG_SILENT);&#xA;&#xA;&#xA;//exoplayer自定义MediaSource&#xA;ExoSourceManager.setExoMediaSourceInterceptListener(new ExoMediaSourceInterceptListener() {&#xA;    @Override&#xA;    public MediaSource getMediaSource(String dataSource, boolean preview, boolean cacheEnable, boolean isLooping, File cacheDir) {&#xA;        //可自定义MediaSource&#xA;        return null;&#xA;    }&#xA;});&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/DEPENDENCIES.md&#34;&gt;--- 更多依赖方式请点击 - &lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;二、其他推荐&lt;/h2&gt; &#xA;&lt;h3&gt;* 我所在的技术社区：&lt;a href=&#34;https://juejin.cn/user/817692379985752/posts&#34;&gt;掘金&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;* QQ群，有兴趣的欢迎（平时吹水吐槽多，因为人数饱和，就是日常瞎扯，没人解决问题的）：174815284 。&lt;/h3&gt; &#xA;&lt;h3&gt;* &lt;a href=&#34;https://github.com/CarGuo/gsy_github_app_flutter&#34;&gt;Flutter Github客户端&lt;/a&gt; 、&lt;a href=&#34;https://github.com/CarGuo/GSYGithubAPP&#34;&gt;React Native Github客户端&lt;/a&gt; 、 &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAPPWeex&#34;&gt;Weex Github客户端&lt;/a&gt; 、 &lt;a href=&#34;https://github.com/CarGuo/GSYGithubAPPKotlin&#34;&gt;原生 Kotlin Github客户端&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;* &lt;a href=&#34;https://github.com/microshow/RxFFmpeg&#34;&gt;RxFFmpeg Android 的音视频编辑工具&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;* &lt;a href=&#34;https://github.com/qingkouwei/oarplayer&#34;&gt;oarplayer Rtmp播放器,基于MediaCodec与srs-librtmp,不依赖ffmpeg&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;* 鸿蒙版本&lt;a href=&#34;https://gitee.com/openharmony-tpc/openharmony_tpc_samples/tree/master/GSYVideoPlayer&#34;&gt;openharmony-tpc/GSYVideoPlayer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;三、文档Wiki&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;文档&lt;/th&gt; &#xA;   &lt;th&gt;传送门&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/USE.md&#34;&gt;--- 简单使用，快速上手文档&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;建议阅读&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://juejin.cn/post/7057132141875822622&#34;&gt;--- 移动开发者必知的音视频基础知识1&lt;/a&gt;、&lt;a href=&#34;https://mp.weixin.qq.com/s/HjSdmAsHuvixCH_EWdvk3Q&#34;&gt;--- 移动开发者必知的音视频基础知识2&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;项目解析说明&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/GSYVIDEO_PLAYER_PROJECT_INFO.md&#34;&gt;--- 项目解析说明、包含项目架构和解析&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;接口文档入口&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/wiki&#34;&gt;--- 使用说明、接口文档 - 入口&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;问题集锦入口&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/QUESTION.md&#34;&gt;--- 问题集锦 - 入口（大部分你遇到的问题都在这里解决） &lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;编码格式&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/DECODERS.md&#34;&gt;--- IJK so文件配置格式说明&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;编译自定义SO&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/BUILD_SO.md&#34;&gt;--- IJKPlayer编译自定义SO - 入口&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;版本更新说明&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/UPDATE_VERSION.md&#34;&gt;--- 版本更新说明 - 入口&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;compileSdk 太高&lt;/td&gt; &#xA;   &lt;td&gt;--- &lt;strong&gt;&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/issues/3514&#34;&gt;#3514&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/StructureChart2.jpg&#34; alt=&#34;框架图&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;四、运行效果&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;1、打开一个播放(旋转、镜像、填充)&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/11.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;2、列表/详情模式(动画、旋转、小窗体)&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/22.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/33.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/44.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;3、弹幕&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/55.gif&#34; width=&#34;240px&#34; height=&#34;426px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;4、滤镜和GL动画&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/09.gif&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;6、背景铺满模糊播放&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/99.png&#34; width=&#34;426px&#34; height=&#34;240px&#34;&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;7、进度条小窗口预览&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/CarGuo/GSYVideoPlayer/master/img/07.gif&#34; height=&#34;240px&#34;&gt; &#xA;&lt;h2&gt;五、近期版本&lt;/h2&gt; &#xA;&lt;h3&gt;v9.0.0-release-jitpack (2024-07-29)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ex_so support 16k page size&lt;/li&gt; &#xA; &lt;li&gt;update media3 1.4.0&lt;/li&gt; &#xA; &lt;li&gt;fix #4014&lt;/li&gt; &#xA; &lt;li&gt;fix #3999 &amp;amp; #3649 system mediaPlayer setSpeed cause play&lt;/li&gt; &#xA; &lt;li&gt;fix #3972 ListGSYVideoPlayer 轮播场景焦点未移除导致播放器状态错误&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v8.6.0-release-jitpack (2024-03-07)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;update media 1.3.0&lt;/li&gt; &#xA; &lt;li&gt;update exo source intercept listener&lt;/li&gt; &#xA; &lt;li&gt;fix #3900&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;v8.5.0-release-jitpack (2023-11-20)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;update media 1.2.0 &amp;amp; compileSdk 34&lt;/li&gt; &#xA; &lt;li&gt;update exoplayer to androidx media&lt;/li&gt; &#xA; &lt;li&gt;fix #3874&lt;/li&gt; &#xA; &lt;li&gt;fix issues 3855 (#3856)&lt;/li&gt; &#xA; &lt;li&gt;add #3843&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;更多版本请查阅：&lt;a href=&#34;https://github.com/CarGuo/GSYVideoPlayer/raw/master/doc/UPDATE_VERSION.md&#34;&gt;版本更新说明&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;六、关于Issues&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;提问题前可先查阅上方文档和说明，请在Demo中复现问题。&#xA;&#xA;问题说明：&#xA;&#xA;1、说明那个Demo中哪个页面。&#xA;2、问题显现和重现步骤。&#xA;3、补充问题的视频流url，截图。&#xA;4、补充问题的机型，android版本。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;七、混淆&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;-keep class com.shuyu.gsyvideoplayer.video.** { *; }&#xA;-dontwarn com.shuyu.gsyvideoplayer.video.**&#xA;-keep class com.shuyu.gsyvideoplayer.video.base.** { *; }&#xA;-dontwarn com.shuyu.gsyvideoplayer.video.base.**&#xA;-keep class com.shuyu.gsyvideoplayer.utils.** { *; }&#xA;-dontwarn com.shuyu.gsyvideoplayer.utils.**&#xA;-keep class com.shuyu.gsyvideoplayer.player.** {*;}&#xA;-dontwarn com.shuyu.gsyvideoplayer.player.**&#xA;-keep class tv.danmaku.ijk.** { *; }&#xA;-dontwarn tv.danmaku.ijk.**&#xA;-keep class androidx.media3.** {*;}&#xA;-keep interface androidx.media3.**&#xA;&#xA;-keep class com.shuyu.alipay.** {*;}&#xA;-keep interface com.shuyu.alipay.**&#xA;&#xA;-keep public class * extends android.view.View{&#xA;    *** get*();&#xA;    void set*(***);&#xA;    public &amp;lt;init&amp;gt;(android.content.Context);&#xA;    public &amp;lt;init&amp;gt;(android.content.Context, java.lang.Boolean);&#xA;    public &amp;lt;init&amp;gt;(android.content.Context, android.util.AttributeSet);&#xA;    public &amp;lt;init&amp;gt;(android.content.Context, android.util.AttributeSet, int);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果是阿里云播放器，可以参考它的文档（ &lt;a href=&#34;https://help.aliyun.com/document_detail/124711.html?spm=a2c4g.124711.0.0.7fa0125dkwUPoU&#34;&gt;https://help.aliyun.com/document_detail/124711.html?spm=a2c4g.124711.0.0.7fa0125dkwUPoU&lt;/a&gt; ），需要新增一些 keep 规则：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-keep class com.alivc.**{*;}&#xA;-keep class com.aliyun.**{*;}&#xA;-keep class com.cicada.**{*;}&#xA;-dontwarn com.alivc.**&#xA;-dontwarn com.aliyun.**&#xA;-dontwarn com.cicada.**&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;温馨提示&lt;/h2&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://gitee.com/CarGuo/GSYVideoPlayer&#34;&gt;如果克隆太慢，可尝试从码云地址下载&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code&gt;关于自定义和出现问题的请先看问题集锦、demo、issue。&#xA;&#xA;多了解一些音视频的基础常识，对容器，音视频编码，ffmpeg先做一些了解，以及mediacodec等的不同。&#xA;尽量少出现为什么别的能播的问题哟。&#xA;&#xA;播放器的可自定义还是挺高的，定制请参考demo，多看源码。现在的功能有些多，demo也在不断的更新。&#xA;&#xA;一些新功能和项目结构也在不断的调整。&#xA;&#xA;欢迎提出问题，谢谢。&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;依赖大小参考&lt;/h2&gt; &#xA;&lt;p&gt;建议使用ndk过滤，详细参考 &lt;a href=&#34;http://www.jianshu.com/p/86e4b336c17d&#34;&gt;参考第四条 ： 4、NDK的so支持&lt;/a&gt; &lt;img src=&#34;https://ooo.0o0.ooo/2017/06/15/5941f343a39f5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Star History Chart&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#CarGuo/GSYVideoPlayer&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=CarGuo/GSYVideoPlayer&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;温馨提示&lt;/h2&gt; &#xA;&lt;p&gt;开源项目主要提供交流学习，并不提供技术支持，也不接商务合作，纯公益兴趣开源&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;请参看IJKPlayer和AndroidVideoCache相关协议。&#xA;项目最开始是从jiecao过来的，改着改着直接重构了。&#xA;偶尔有一变量和方法名可能还有点jiaozi的影子，但是基本是一个新项目。&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>in28minutes/JavaInterviewQuestionsAndAnswers</title>
    <updated>2024-09-08T01:41:32Z</updated>
    <id>tag:github.com,2024-09-08:/in28minutes/JavaInterviewQuestionsAndAnswers</id>
    <link href="https://github.com/in28minutes/JavaInterviewQuestionsAndAnswers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Java Interview Questions and Answers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Java Interview Questions and Answers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.udemy.com/course/java-interview-questions-and-answers/&#34;&gt;&lt;img src=&#34;https://www.springboottutorial.com/images/Course-Java-Interview-Guide-200-Interview-Questions-and-Answers.png&#34; alt=&#34;Image&#34; title=&#34;Java Interview Guide : 200+ Interview Questions and Answers&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Expectations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Good Java Knowledge&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Complete Course Link&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.udemy.com/course/java-interview-questions-and-answers/?couponCode=NOVEMBER-2019&#34;&gt;https://www.udemy.com/course/java-interview-questions-and-answers/?couponCode=NOVEMBER-2019&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Things You Need to Know&lt;/h2&gt; &#xA;&lt;h3&gt;Github Repository&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/in28minutes/JavaInterviewQuestionsAndAnswers&#34;&gt;https://github.com/in28minutes/JavaInterviewQuestionsAndAnswers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;PDF Guide&lt;/h3&gt; &#xA;&lt;p&gt;Available in the resources for the course&lt;/p&gt; &#xA;&lt;h3&gt;Installing Eclipse, Java and Maven&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PDF : &lt;a href=&#34;https://github.com/in28minutes/SpringIn28Minutes/raw/master/InstallationGuide-JavaEclipseAndMaven_v2.pdf&#34;&gt;https://github.com/in28minutes/SpringIn28Minutes/blob/master/InstallationGuide-JavaEclipseAndMaven_v2.pdf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Video : &lt;a href=&#34;https://www.youtube.com/playlist?list=PLBBog2r6uMCSmMVTW_QmDLyASBvovyAO3&#34;&gt;https://www.youtube.com/playlist?list=PLBBog2r6uMCSmMVTW_QmDLyASBvovyAO3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GIT Repository : &lt;a href=&#34;https://github.com/in28minutes/getting-started-in-5-steps&#34;&gt;https://github.com/in28minutes/getting-started-in-5-steps&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Interview Questions&lt;/h2&gt; &#xA;&lt;h3&gt;Java Platform&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1 . Why is Java so popular?&lt;/li&gt; &#xA; &lt;li&gt;2 . What is platform independence?&lt;/li&gt; &#xA; &lt;li&gt;3 . What is bytecode?&lt;/li&gt; &#xA; &lt;li&gt;4 . Compare JDK vs JVM vs JRE&lt;/li&gt; &#xA; &lt;li&gt;5 . What are the important differences between C++ and Java?&lt;/li&gt; &#xA; &lt;li&gt;6 . What is the role for a classloader in Java?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Wrapper Classes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;7 . What are Wrapper classes?&lt;/li&gt; &#xA; &lt;li&gt;8 . Why do we need Wrapper classes in Java?&lt;/li&gt; &#xA; &lt;li&gt;9 . What are the different ways of creating Wrapper class instances?&lt;/li&gt; &#xA; &lt;li&gt;10 . What are differences in the two ways of creating Wrapper classes?&lt;/li&gt; &#xA; &lt;li&gt;11 . What is auto boxing?&lt;/li&gt; &#xA; &lt;li&gt;12 . What are the advantages of auto boxing?&lt;/li&gt; &#xA; &lt;li&gt;13 . What is casting?&lt;/li&gt; &#xA; &lt;li&gt;14 . What is implicit casting?&lt;/li&gt; &#xA; &lt;li&gt;15 . What is explicit casting?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Strings&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;16 . Are all String’s immutable?&lt;/li&gt; &#xA; &lt;li&gt;17 . Where are String values stored in memory?&lt;/li&gt; &#xA; &lt;li&gt;18 . Why should you be careful about String concatenation(+) operator in loops?&lt;/li&gt; &#xA; &lt;li&gt;19 . How do you solve above problem?&lt;/li&gt; &#xA; &lt;li&gt;20 . What are differences between String and StringBuffer?&lt;/li&gt; &#xA; &lt;li&gt;21 . What are differences between StringBuilder and StringBuffer?&lt;/li&gt; &#xA; &lt;li&gt;22 . Can you give examples of different utility methods in String class?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Object oriented programming basics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;23 . What is a class?&lt;/li&gt; &#xA; &lt;li&gt;24 . What is an object?&lt;/li&gt; &#xA; &lt;li&gt;25 . What is state of an object?&lt;/li&gt; &#xA; &lt;li&gt;26 . What is behavior of an object?&lt;/li&gt; &#xA; &lt;li&gt;27 . What is the super class of every class in Java?&lt;/li&gt; &#xA; &lt;li&gt;28 . Explain about toString method ?&lt;/li&gt; &#xA; &lt;li&gt;29 . What is the use of equals method in Java?&lt;/li&gt; &#xA; &lt;li&gt;30 . What are the important things to consider when implementing equals method?&lt;/li&gt; &#xA; &lt;li&gt;31 . What is the Hashcode method used for in Java?&lt;/li&gt; &#xA; &lt;li&gt;32 . Explain inheritance with examples .&lt;/li&gt; &#xA; &lt;li&gt;33 . What is method overloading?&lt;/li&gt; &#xA; &lt;li&gt;34 . What is method overriding?&lt;/li&gt; &#xA; &lt;li&gt;35 . Can super class reference variable can hold an object of sub class?&lt;/li&gt; &#xA; &lt;li&gt;36 . Is multiple inheritance allowed in Java?&lt;/li&gt; &#xA; &lt;li&gt;37 . What is an interface?&lt;/li&gt; &#xA; &lt;li&gt;38 . How do you define an interface?&lt;/li&gt; &#xA; &lt;li&gt;39 . How do you implement an interface?&lt;/li&gt; &#xA; &lt;li&gt;40 . Can you explain a few tricky things about interfaces?&lt;/li&gt; &#xA; &lt;li&gt;41 . Can you extend an interface?&lt;/li&gt; &#xA; &lt;li&gt;42 . Can a class extend multiple interfaces?&lt;/li&gt; &#xA; &lt;li&gt;43 . What is an abstract class?&lt;/li&gt; &#xA; &lt;li&gt;44 . When do you use an abstract class?&lt;/li&gt; &#xA; &lt;li&gt;45 . How do you define an abstract method?&lt;/li&gt; &#xA; &lt;li&gt;46 . Compare abstract class vs interface?&lt;/li&gt; &#xA; &lt;li&gt;47 . What is a constructor?&lt;/li&gt; &#xA; &lt;li&gt;48 . What is a default constructor?&lt;/li&gt; &#xA; &lt;li&gt;49 . Will this code compile?&lt;/li&gt; &#xA; &lt;li&gt;50 . How do you call a super class constructor from a constructor?&lt;/li&gt; &#xA; &lt;li&gt;51 . Will this code compile?&lt;/li&gt; &#xA; &lt;li&gt;52 . What is the use of this()?&lt;/li&gt; &#xA; &lt;li&gt;53 . Can a constructor be called directly from a method?&lt;/li&gt; &#xA; &lt;li&gt;54 . Is a super class constructor called even when there is no explicit call from a sub class constructor?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced object oriented concepts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;55 . What is polymorphism?&lt;/li&gt; &#xA; &lt;li&gt;56 . What is the use of instanceof operator in Java?&lt;/li&gt; &#xA; &lt;li&gt;57 . What is coupling?&lt;/li&gt; &#xA; &lt;li&gt;58 . What is cohesion?&lt;/li&gt; &#xA; &lt;li&gt;59 . What is encapsulation?&lt;/li&gt; &#xA; &lt;li&gt;60 . What is an inner class?&lt;/li&gt; &#xA; &lt;li&gt;61 . What is a static inner class?&lt;/li&gt; &#xA; &lt;li&gt;62 . Can you create an inner class inside a method?&lt;/li&gt; &#xA; &lt;li&gt;63 . What is an anonymous class?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Modifiers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;64 . What is default class modifier?&lt;/li&gt; &#xA; &lt;li&gt;65 . What is private access modifier?&lt;/li&gt; &#xA; &lt;li&gt;66 . What is default or package access modifier?&lt;/li&gt; &#xA; &lt;li&gt;67 . What is protected access modifier?&lt;/li&gt; &#xA; &lt;li&gt;68 . What is public access modifier?&lt;/li&gt; &#xA; &lt;li&gt;69 . What access types of variables can be accessed from a class in same package?&lt;/li&gt; &#xA; &lt;li&gt;70 . What access types of variables can be accessed from a class in different package?&lt;/li&gt; &#xA; &lt;li&gt;71 . What access types of variables can be accessed from a sub class in same package?&lt;/li&gt; &#xA; &lt;li&gt;72 . What access types of variables can be accessed from a sub class in different package?&lt;/li&gt; &#xA; &lt;li&gt;73 . What is the use of a final modifier on a class?&lt;/li&gt; &#xA; &lt;li&gt;74 . What is the use of a final modifier on a method?&lt;/li&gt; &#xA; &lt;li&gt;75 . What is a final variable?&lt;/li&gt; &#xA; &lt;li&gt;76 . What is a final argument?&lt;/li&gt; &#xA; &lt;li&gt;77 . What happens when a variable is marked as volatile?&lt;/li&gt; &#xA; &lt;li&gt;78 . What is a static variable?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;conditions &amp;amp; loops&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;79 . Why should you always use blocks around if statement?&lt;/li&gt; &#xA; &lt;li&gt;80 . Guess the output&lt;/li&gt; &#xA; &lt;li&gt;81 . Guess the output&lt;/li&gt; &#xA; &lt;li&gt;82 . Guess the output of this switch block .&lt;/li&gt; &#xA; &lt;li&gt;83 . Guess the output of this switch block?&lt;/li&gt; &#xA; &lt;li&gt;84 . Should default be the last case in a switch statement?&lt;/li&gt; &#xA; &lt;li&gt;85 . Can a switch statement be used around a String&lt;/li&gt; &#xA; &lt;li&gt;86 . Guess the output of this for loop (P.S. there is an error as the output of given question should be 0-1-2-3-4-5-6-7-8-9. So please ignore that.)&lt;/li&gt; &#xA; &lt;li&gt;87 . What is an enhanced for loop?&lt;/li&gt; &#xA; &lt;li&gt;88 . What is the output of the for loop below?&lt;/li&gt; &#xA; &lt;li&gt;89 . What is the output of the program below?&lt;/li&gt; &#xA; &lt;li&gt;90 . What is the output of the program below?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Exception handling&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;91 . Why is exception handling important?&lt;/li&gt; &#xA; &lt;li&gt;92 . What design pattern is used to implement exception handling features in most languages?&lt;/li&gt; &#xA; &lt;li&gt;93 . What is the need for finally block?&lt;/li&gt; &#xA; &lt;li&gt;94 . In what scenarios is code in finally not executed?&lt;/li&gt; &#xA; &lt;li&gt;95 . Will finally be executed in the program below?&lt;/li&gt; &#xA; &lt;li&gt;96 . Is try without a catch is allowed?&lt;/li&gt; &#xA; &lt;li&gt;97 . Is try without catch and finally allowed?&lt;/li&gt; &#xA; &lt;li&gt;98 . Can you explain the hierarchy of exception handling classes?&lt;/li&gt; &#xA; &lt;li&gt;99 . What is the difference between error and exception?&lt;/li&gt; &#xA; &lt;li&gt;100 . What is the difference between checked exceptions and unchecked exceptions?&lt;/li&gt; &#xA; &lt;li&gt;101 . How do you throw an exception from a method?&lt;/li&gt; &#xA; &lt;li&gt;102 . What happens when you throw a checked exception from a method?&lt;/li&gt; &#xA; &lt;li&gt;103 . What are the options you have to eliminate compilation errors when handling checked exceptions?&lt;/li&gt; &#xA; &lt;li&gt;104 . How do you create a custom exception?&lt;/li&gt; &#xA; &lt;li&gt;105 . How do you handle multiple exception types with same exception handling block?&lt;/li&gt; &#xA; &lt;li&gt;106 . Can you explain about try with resources?&lt;/li&gt; &#xA; &lt;li&gt;107 . How does try with resources work?&lt;/li&gt; &#xA; &lt;li&gt;108 . Can you explain a few exception handling best practices?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Miscellaneous topics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;109 . What are the default values in an array?&lt;/li&gt; &#xA; &lt;li&gt;110 . How do you loop around an array using enhanced for loop?&lt;/li&gt; &#xA; &lt;li&gt;111 . How do you print the content of an array?&lt;/li&gt; &#xA; &lt;li&gt;112 . How do you compare two arrays?&lt;/li&gt; &#xA; &lt;li&gt;113 . What is an enum?&lt;/li&gt; &#xA; &lt;li&gt;114 . Can you use a switch statement around an enum?&lt;/li&gt; &#xA; &lt;li&gt;115 . What are variable arguments or varargs?&lt;/li&gt; &#xA; &lt;li&gt;116 . What are asserts used for?&lt;/li&gt; &#xA; &lt;li&gt;117 . When should asserts be used?&lt;/li&gt; &#xA; &lt;li&gt;118 . What is garbage collection?&lt;/li&gt; &#xA; &lt;li&gt;119 . Can you explain garbage collection with an example?&lt;/li&gt; &#xA; &lt;li&gt;120 . When is garbage collection run?&lt;/li&gt; &#xA; &lt;li&gt;121 . What are best practices on garbage collection?&lt;/li&gt; &#xA; &lt;li&gt;122 . What are initialization blocks?&lt;/li&gt; &#xA; &lt;li&gt;123 . What is a static initializer?&lt;/li&gt; &#xA; &lt;li&gt;124 . What is an instance initializer block?&lt;/li&gt; &#xA; &lt;li&gt;125 . What is tokenizing?&lt;/li&gt; &#xA; &lt;li&gt;126 . Can you give an example of tokenizing?&lt;/li&gt; &#xA; &lt;li&gt;127 . What is serialization?&lt;/li&gt; &#xA; &lt;li&gt;128 . How do you serialize an object using serializable interface?&lt;/li&gt; &#xA; &lt;li&gt;129 . How do you de-serialize in Java?&lt;/li&gt; &#xA; &lt;li&gt;130 . What do you do if only parts of the object have to be serialized?&lt;/li&gt; &#xA; &lt;li&gt;131 . How do you serialize a hierarchy of objects?&lt;/li&gt; &#xA; &lt;li&gt;132 . Are the constructors in an object invoked when it is de-serialized?&lt;/li&gt; &#xA; &lt;li&gt;133 . Are the values of static variables stored when an object is serialized?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Collections&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;134 . Why do we need collections in Java?&lt;/li&gt; &#xA; &lt;li&gt;135 . What are the important interfaces in the collection hierarchy?&lt;/li&gt; &#xA; &lt;li&gt;136 . What are the important methods that are declared in the collection interface?&lt;/li&gt; &#xA; &lt;li&gt;137 . Can you explain briefly about the List interface?&lt;/li&gt; &#xA; &lt;li&gt;138 . Explain about ArrayList with an example?&lt;/li&gt; &#xA; &lt;li&gt;139 . Can an ArrayList have duplicate elements?&lt;/li&gt; &#xA; &lt;li&gt;140 . How do you iterate around an ArrayList using iterator?&lt;/li&gt; &#xA; &lt;li&gt;141 . How do you sort an ArrayList?&lt;/li&gt; &#xA; &lt;li&gt;142 . How do you sort elements in an ArrayList using comparable interface?&lt;/li&gt; &#xA; &lt;li&gt;143 . How do you sort elements in an ArrayList using comparator interface?&lt;/li&gt; &#xA; &lt;li&gt;144 . What is vector class? How is it different from an ArrayList?&lt;/li&gt; &#xA; &lt;li&gt;145 . What is linkedList? What interfaces does it implement? How is it different from an ArrayList?&lt;/li&gt; &#xA; &lt;li&gt;146 . Can you briefly explain about the Set interface?&lt;/li&gt; &#xA; &lt;li&gt;147 . What are the important interfaces related to the Set interface?&lt;/li&gt; &#xA; &lt;li&gt;148 . What is the difference between Set and sortedSet interfaces?&lt;/li&gt; &#xA; &lt;li&gt;149 . Can you give examples of classes that implement the Set interface?&lt;/li&gt; &#xA; &lt;li&gt;150 . What is a HashSet?&lt;/li&gt; &#xA; &lt;li&gt;151 . What is a linkedHashSet? How is different from a HashSet?&lt;/li&gt; &#xA; &lt;li&gt;152 . What is a TreeSet? How is different from a HashSet?&lt;/li&gt; &#xA; &lt;li&gt;153 . Can you give examples of implementations of navigableSet?&lt;/li&gt; &#xA; &lt;li&gt;154 . Explain briefly about Queue interface?&lt;/li&gt; &#xA; &lt;li&gt;155 . What are the important interfaces related to the Queue interface?&lt;/li&gt; &#xA; &lt;li&gt;156 . Explain about the Deque interface?&lt;/li&gt; &#xA; &lt;li&gt;157 . Explain the BlockingQueue interface?&lt;/li&gt; &#xA; &lt;li&gt;158 . What is a priorityQueue?&lt;/li&gt; &#xA; &lt;li&gt;159 . Can you give example implementations of the BlockingQueue interface?&lt;/li&gt; &#xA; &lt;li&gt;160 . Can you briefly explain about the Map interface?&lt;/li&gt; &#xA; &lt;li&gt;161 . What is difference between Map and sortedMap?&lt;/li&gt; &#xA; &lt;li&gt;162 . What is a HashMap?&lt;/li&gt; &#xA; &lt;li&gt;163 . What are the different methods in a Hash Map?&lt;/li&gt; &#xA; &lt;li&gt;164 . What is a TreeMap? How is different from a HashMap?&lt;/li&gt; &#xA; &lt;li&gt;165 . Can you give an example of implementation of navigableMap interface?&lt;/li&gt; &#xA; &lt;li&gt;166 . What are the static methods present in the collections class?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Advanced collections&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;167 . What is the difference between synchronized and concurrent collections in Java?&lt;/li&gt; &#xA; &lt;li&gt;168 . Explain about the new concurrent collections in Java?&lt;/li&gt; &#xA; &lt;li&gt;169 . Explain about copyonwrite concurrent collections approach?&lt;/li&gt; &#xA; &lt;li&gt;170 . What is compareandswap approach?&lt;/li&gt; &#xA; &lt;li&gt;171 . What is a lock? How is it different from using synchronized approach?&lt;/li&gt; &#xA; &lt;li&gt;172 . What is initial capacity of a Java collection?&lt;/li&gt; &#xA; &lt;li&gt;173 . What is load factor?&lt;/li&gt; &#xA; &lt;li&gt;174 . When does a Java collection throw UnsupportedOperationException?&lt;/li&gt; &#xA; &lt;li&gt;175 . What is difference between fail-safe and fail-fast iterators?&lt;/li&gt; &#xA; &lt;li&gt;176 . What are atomic operations in Java?&lt;/li&gt; &#xA; &lt;li&gt;177 . What is BlockingQueue in Java?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Generics&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;178 . What are Generics?&lt;/li&gt; &#xA; &lt;li&gt;179 . Why do we need Generics? Can you give an example of how Generics make a program more flexible?&lt;/li&gt; &#xA; &lt;li&gt;180 . How do you declare a generic class?&lt;/li&gt; &#xA; &lt;li&gt;181 . What are the restrictions in using generic type that is declared in a class declaration?&lt;/li&gt; &#xA; &lt;li&gt;182 . How can we restrict Generics to a subclass of particular class?&lt;/li&gt; &#xA; &lt;li&gt;183 . How can we restrict Generics to a super class of particular class?&lt;/li&gt; &#xA; &lt;li&gt;184 . Can you give an example of a generic method?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Multi threading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;185 . What is the need for threads in Java?&lt;/li&gt; &#xA; &lt;li&gt;186 . How do you create a thread?&lt;/li&gt; &#xA; &lt;li&gt;187 . How do you create a thread by extending thread class?&lt;/li&gt; &#xA; &lt;li&gt;188 . How do you create a thread by implementing runnable interface?&lt;/li&gt; &#xA; &lt;li&gt;189 . How do you run a thread in Java?&lt;/li&gt; &#xA; &lt;li&gt;190 . What are the different states of a thread?&lt;/li&gt; &#xA; &lt;li&gt;191 . What is priority of a thread? How do you change the priority of a thread?&lt;/li&gt; &#xA; &lt;li&gt;192 . What is executorservice?&lt;/li&gt; &#xA; &lt;li&gt;193 . Can you give an example for executorservice?&lt;/li&gt; &#xA; &lt;li&gt;194 . Explain different ways of creating executor services .&lt;/li&gt; &#xA; &lt;li&gt;195 . How do you check whether an executionservice task executed successfully?&lt;/li&gt; &#xA; &lt;li&gt;196 . What is callable? How do you execute a callable from executionservice?&lt;/li&gt; &#xA; &lt;li&gt;197 . What is synchronization of threads?&lt;/li&gt; &#xA; &lt;li&gt;198 . Can you give an example of a synchronized block?&lt;/li&gt; &#xA; &lt;li&gt;199 . Can a static method be synchronized?&lt;/li&gt; &#xA; &lt;li&gt;200 . What is the use of join method in threads?&lt;/li&gt; &#xA; &lt;li&gt;201 . Describe a few other important methods in threads?&lt;/li&gt; &#xA; &lt;li&gt;202 . What is a deadlock?&lt;/li&gt; &#xA; &lt;li&gt;203 . What are the important methods in Java for inter-thread communication?&lt;/li&gt; &#xA; &lt;li&gt;204 . What is the use of wait method?&lt;/li&gt; &#xA; &lt;li&gt;205 . What is the use of notify method?&lt;/li&gt; &#xA; &lt;li&gt;206 . What is the use of notifyall method?&lt;/li&gt; &#xA; &lt;li&gt;207 . Can you write a synchronized program with wait and notify methods?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Functional Programming - Lamdba expressions and Streams&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;208 . What is functional programming?&lt;/li&gt; &#xA; &lt;li&gt;209 . Can you give an example of functional programming?&lt;/li&gt; &#xA; &lt;li&gt;210 . What is a stream?&lt;/li&gt; &#xA; &lt;li&gt;211 . Explain about streams with an example?&lt;/li&gt; &#xA; &lt;li&gt;what are intermediate operations in streams?&lt;/li&gt; &#xA; &lt;li&gt;212 . What are terminal operations in streams?&lt;/li&gt; &#xA; &lt;li&gt;213 . What are method references?&lt;/li&gt; &#xA; &lt;li&gt;214 . What are lambda expressions?&lt;/li&gt; &#xA; &lt;li&gt;215 . Can you give an example of lambda expression?&lt;/li&gt; &#xA; &lt;li&gt;216 . Can you explain the relationship between lambda expression and functional interfaces?&lt;/li&gt; &#xA; &lt;li&gt;217 . What is a predicate?&lt;/li&gt; &#xA; &lt;li&gt;218 . What is the functional interface - function?&lt;/li&gt; &#xA; &lt;li&gt;219 . What is a consumer?&lt;/li&gt; &#xA; &lt;li&gt;220 . Can you give examples of functional interfaces with multiple arguments?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;New Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;221 . What are the new features in Java 5?&lt;/li&gt; &#xA; &lt;li&gt;222 . What are the new features in Java 6?&lt;/li&gt; &#xA; &lt;li&gt;223 . What are the new features in Java 7?&lt;/li&gt; &#xA; &lt;li&gt;224 . What are the new features in Java 8?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;What you can do next?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Design Patterns] (&lt;a href=&#34;https://www.youtube.com/watch?v=f5Rzr5mVNbY&#34;&gt;https://www.youtube.com/watch?v=f5Rzr5mVNbY&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;[Maven] (&lt;a href=&#34;https://courses.in28minutes.com/p/maven-tutorial-for-beginners-in-5-steps&#34;&gt;https://courses.in28minutes.com/p/maven-tutorial-for-beginners-in-5-steps&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;[JSP Servlets] (&lt;a href=&#34;https://www.youtube.com/watch?v=Vvnliarkw48&#34;&gt;https://www.youtube.com/watch?v=Vvnliarkw48&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;[Spring MVC] (&lt;a href=&#34;https://www.youtube.com/watch?v=BjNhGaZDr0Y&#34;&gt;https://www.youtube.com/watch?v=BjNhGaZDr0Y&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Troubleshooting&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refer our TroubleShooting Guide - &lt;a href=&#34;https://github.com/in28minutes/in28minutes-initiatives/tree/master/The-in28Minutes-TroubleshootingGuide-And-FAQ&#34;&gt;https://github.com/in28minutes/in28minutes-initiatives/tree/master/The-in28Minutes-TroubleshootingGuide-And-FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Youtube Playlists - 500+ Videos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/rithustutorials/playlists?view=1&amp;amp;sort=lad&amp;amp;flow=list&#34;&gt;Click here - 30+ Playlists with 500+ Videos on Spring, Spring Boot, REST, Microservices and the Cloud&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Keep Learning in28Minutes&lt;/h2&gt; &#xA;&lt;p&gt;in28Minutes is creating amazing solutions for you to learn Spring Boot, Full Stack and the Cloud - Docker, Kubernetes, AWS, React, Angular etc. - &lt;a href=&#34;https://github.com/in28minutes/learn&#34;&gt;Check out all our courses here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/gson</title>
    <updated>2024-09-08T01:41:32Z</updated>
    <id>tag:github.com,2024-09-08:/google/gson</id>
    <link href="https://github.com/google/gson" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Java serialization/deserialization library to convert Java Objects into JSON and back&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gson&lt;/h1&gt; &#xA;&lt;p&gt;Gson is a Java library that can be used to convert Java Objects into their JSON representation. It can also be used to convert a JSON string to an equivalent Java object. Gson can work with arbitrary Java objects including pre-existing objects that you do not have source-code of.&lt;/p&gt; &#xA;&lt;p&gt;There are a few open-source projects that can convert Java objects to JSON. However, most of them require that you place Java annotations in your classes; something that you can not do if you do not have access to the source-code. Most also do not fully support the use of Java Generics. Gson considers both of these as very important design goals.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; Gson is currently in maintenance mode; existing bugs will be fixed, but large new features will likely not be added. If you want to add a new feature, please first search for existing GitHub issues, or create a new one to discuss the feature and get feedback.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; Gson&#39;s main focus is on Java. Using it with other JVM languages such as Kotlin or Scala might work fine in many cases, but language-specific features such as Kotlin&#39;s non-&lt;code&gt;null&lt;/code&gt; types or constructors with default arguments are not supported. This can lead to confusing and incorrect behavior.&lt;br&gt; When using languages other than Java, prefer a JSON library with explicit support for that language.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Goals&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Provide simple &lt;code&gt;toJson()&lt;/code&gt; and &lt;code&gt;fromJson()&lt;/code&gt; methods to convert Java objects to JSON and vice-versa&lt;/li&gt; &#xA; &lt;li&gt;Allow pre-existing unmodifiable objects to be converted to and from JSON&lt;/li&gt; &#xA; &lt;li&gt;Extensive support of Java Generics&lt;/li&gt; &#xA; &lt;li&gt;Allow custom representations for objects&lt;/li&gt; &#xA; &lt;li&gt;Support arbitrarily complex objects (with deep inheritance hierarchies and extensive use of generic types)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;Gradle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;  implementation &#39;com.google.code.gson:gson:2.11.0&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Maven:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;com.google.code.gson&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;gson&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;2.11.0&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/com.google.code.gson/gson&#34;&gt;Gson jar downloads&lt;/a&gt; are available from Maven Central.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/google/gson/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;h4&gt;Minimum Java version&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gson 2.9.0 and newer: Java 7&lt;/li&gt; &#xA; &lt;li&gt;Gson 2.8.9 and older: Java 6&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Despite supporting older Java versions, Gson also provides a JPMS module descriptor (module name &lt;code&gt;com.google.gson&lt;/code&gt;) for users of Java 9 or newer.&lt;/p&gt; &#xA;&lt;h4&gt;JPMS dependencies (Java 9+)&lt;/h4&gt; &#xA;&lt;p&gt;These are the optional Java Platform Module System (JPMS) JDK modules which Gson depends on. This only applies when running Java 9 or newer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.sql&lt;/code&gt; (optional since Gson 2.8.9)&lt;br&gt; When this module is present, Gson provides default adapters for some SQL date and time classes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;jdk.unsupported&lt;/code&gt;, respectively class &lt;code&gt;sun.misc.Unsafe&lt;/code&gt; (optional)&lt;br&gt; When this module is present, Gson can use the &lt;code&gt;Unsafe&lt;/code&gt; class to create instances of classes without no-args constructor. However, care should be taken when relying on this. &lt;code&gt;Unsafe&lt;/code&gt; is not available in all environments and its usage has some pitfalls, see &lt;a href=&#34;https://javadoc.io/doc/com.google.code.gson/gson/latest/com.google.gson/com/google/gson/GsonBuilder.html#disableJdkUnsafe()&#34;&gt;&lt;code&gt;GsonBuilder.disableJdkUnsafe()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Minimum Android API level&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gson 2.11.0 and newer: API level 21&lt;/li&gt; &#xA; &lt;li&gt;Gson 2.10.1 and older: API level 19&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Older Gson versions may also support lower API levels, however this has not been verified.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.javadoc.io/doc/com.google.code.gson/gson&#34;&gt;API Javadoc&lt;/a&gt;: Documentation for the current release&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/gson/main/UserGuide.md&#34;&gt;User guide&lt;/a&gt;: This guide contains examples on how to use Gson in your code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/gson/main/Troubleshooting.md&#34;&gt;Troubleshooting guide&lt;/a&gt;: Describes how to solve common issues when using Gson&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/gson/releases&#34;&gt;Releases and change log&lt;/a&gt;: Latest releases and changes in these versions; for older releases see &lt;a href=&#34;https://raw.githubusercontent.com/google/gson/main/CHANGELOG.md&#34;&gt;&lt;code&gt;CHANGELOG.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/google/gson/main/GsonDesignDocument.md&#34;&gt;Design document&lt;/a&gt;: This document discusses issues we faced while designing Gson. It also includes a comparison of Gson with other Java libraries that can be used for Json conversion&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please use the &lt;a href=&#34;https://stackoverflow.com/questions/tagged/gson&#34;&gt;&#39;gson&#39; tag on StackOverflow&lt;/a&gt;, &lt;a href=&#34;https://github.com/google/gson/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; or the &lt;a href=&#34;https://groups.google.com/group/google-gson&#34;&gt;google-gson Google group&lt;/a&gt; to discuss Gson or to post questions.&lt;/p&gt; &#xA;&lt;h3&gt;Related Content Created by Third Parties&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.studytrails.com/java/json/java-google-json-introduction/&#34;&gt;Gson Tutorial&lt;/a&gt; by &lt;code&gt;StudyTrails&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://futurestud.io/tutorials/gson-getting-started-with-java-json-serialization-deserialization&#34;&gt;Gson Tutorial Series&lt;/a&gt; by &lt;code&gt;Future Studio&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://abi-laboratory.pro/java/tracker/timeline/gson/&#34;&gt;Gson API Report&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Gson uses Maven to build the project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn clean verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;JDK 11 or newer is required for building, JDK 17 is recommended. Newer JDKs are currently not supported for building (but are supported when &lt;em&gt;using&lt;/em&gt; Gson).&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/google/.github/raw/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;br&gt; Please perform a quick search to check if there are already existing issues or pull requests related to your contribution.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that Gson is in maintenance mode. If you want to add a new feature, please first search for existing GitHub issues, or create a new one to discuss the feature and get feedback.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Gson is released under the &lt;a href=&#34;https://raw.githubusercontent.com/google/gson/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2008 Google Inc.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Disclaimer&lt;/h3&gt; &#xA;&lt;p&gt;This is not an officially supported Google product.&lt;/p&gt;</summary>
  </entry>
</feed>