<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-20T01:43:43Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>eugenp/tutorials</title>
    <updated>2022-11-20T01:43:43Z</updated>
    <id>tag:github.com,2022-11-20:/eugenp/tutorials</id>
    <link href="https://github.com/eugenp/tutorials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Just Announced - &#34;Learn Spring Security OAuth&#34;:&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Courses&lt;/h1&gt; &#xA;&lt;p&gt;Here&#39;s the new &#34;Learn Spring&#34; course: &lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://www.baeldung.com/learn-spring-course?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_content=tutorials&amp;amp;utm_campaign=ls#master-class&#34;&gt;&amp;gt;&amp;gt; LEARN SPRING - THE MASTER CLASS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s the Master Class of &#34;REST With Spring&#34; (along with the new announced Boot 2 material): &lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://www.baeldung.com/rest-with-spring-course?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_content=tutorials&amp;amp;utm_campaign=rws#master-class&#34;&gt;&amp;gt;&amp;gt; THE REST WITH SPRING - MASTER CLASS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;And here&#39;s the Master Class of &#34;Learn Spring Security&#34;: &lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://www.baeldung.com/learn-spring-security-course?utm_source=github&amp;amp;utm_medium=social&amp;amp;utm_content=tutorials&amp;amp;utm_campaign=lss#master-class&#34;&gt;&amp;gt;&amp;gt; LEARN SPRING SECURITY - MASTER CLASS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Java and Spring Tutorials&lt;/h1&gt; &#xA;&lt;p&gt;This project is &lt;strong&gt;a collection of small and focused tutorials&lt;/strong&gt; - each covering a single and well defined area of development in the Java ecosystem. A strong focus of these is, of course, the Spring Framework - Spring, Spring Boot and Spring Security. In addition to Spring, the modules here cover a number of aspects of Java.&lt;/p&gt; &#xA;&lt;h1&gt;Profile based segregation&lt;/h1&gt; &#xA;&lt;p&gt;We are using maven build profiles to segregate the huge list of individual projects we have in our repository.&lt;/p&gt; &#xA;&lt;p&gt;As for now, vast majority of the modules require JDK8 to build and run correctly.&lt;/p&gt; &#xA;&lt;p&gt;The projects are broadly divided into 3 lists: first, second and heavy.&lt;/p&gt; &#xA;&lt;p&gt;Next, they are segregated further on the basis of the tests that we want to execute.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, there are 2 profiles dedicated for JDK9 and above builds.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, we have a total of 8 profiles:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Profile&lt;/th&gt; &#xA;   &lt;th&gt;Includes&lt;/th&gt; &#xA;   &lt;th&gt;Type of test enabled&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;default-first&lt;/td&gt; &#xA;   &lt;td&gt;First set of projects&lt;/td&gt; &#xA;   &lt;td&gt;*UnitTest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;integration-lite-first&lt;/td&gt; &#xA;   &lt;td&gt;First set of projects&lt;/td&gt; &#xA;   &lt;td&gt;*IntegrationTest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;default-second&lt;/td&gt; &#xA;   &lt;td&gt;Second set of projects&lt;/td&gt; &#xA;   &lt;td&gt;*UnitTest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;integration-lite-second&lt;/td&gt; &#xA;   &lt;td&gt;Second set of projects&lt;/td&gt; &#xA;   &lt;td&gt;*IntegrationTest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;default-heavy&lt;/td&gt; &#xA;   &lt;td&gt;Heavy/long running projects&lt;/td&gt; &#xA;   &lt;td&gt;*UnitTest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;integration-heavy&lt;/td&gt; &#xA;   &lt;td&gt;Heavy/long running projects&lt;/td&gt; &#xA;   &lt;td&gt;*IntegrationTest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;default-jdk9-and-above&lt;/td&gt; &#xA;   &lt;td&gt;JDK9 and above projects&lt;/td&gt; &#xA;   &lt;td&gt;*UnitTest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;integration-jdk9-and-above&lt;/td&gt; &#xA;   &lt;td&gt;JDK9 and above projects&lt;/td&gt; &#xA;   &lt;td&gt;*IntegrationTest&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Building the project&lt;/h1&gt; &#xA;&lt;p&gt;Though it should not be needed often to build the entire repository at once because we are usually concerned with a specific module.&lt;/p&gt; &#xA;&lt;p&gt;But if we want to, we can invoke the below command from the root of the repository if we want to build the entire repository with only Unit Tests enabled:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn clean install -Pdefault-first,default-second,default-heavy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;or if we want to build the entire repository with Integration Tests enabled, we can do:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn clean install -Pintegration-lite-first,integration-lite-second,integration-heavy&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Analogously, for the JDK9 and above projects the commands are:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn clean install -Pdefault-jdk9-and-above&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;and&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn clean install -Pintegration-jdk9-and-above&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Building a single module&lt;/h1&gt; &#xA;&lt;p&gt;To build a specific module, run the command: &lt;code&gt;mvn clean install&lt;/code&gt; in the module directory.&lt;/p&gt; &#xA;&lt;h1&gt;Running a Spring Boot module&lt;/h1&gt; &#xA;&lt;p&gt;To run a Spring Boot module, run the command: &lt;code&gt;mvn spring-boot:run&lt;/code&gt; in the module directory.&lt;/p&gt; &#xA;&lt;h1&gt;Working with the IDE&lt;/h1&gt; &#xA;&lt;p&gt;This repo contains a large number of modules. When you&#39;re working with an individual module, there&#39;s no need to import all of them (or build all of them) - you can simply import that particular module in either Eclipse or IntelliJ.&lt;/p&gt; &#xA;&lt;h1&gt;Running Tests&lt;/h1&gt; &#xA;&lt;p&gt;The command &lt;code&gt;mvn clean install&lt;/code&gt; from within a module will run the unit tests in that module. For Spring modules this will also run the &lt;code&gt;SpringContextTest&lt;/code&gt; if present.&lt;/p&gt; &#xA;&lt;p&gt;To run the integration tests, use the command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn clean install -Pintegration-lite-first&lt;/code&gt; or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn clean install -Pintegration-lite-second&lt;/code&gt; or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn clean install -Pintegration-heavy&lt;/code&gt; or&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mvn clean install -Pintegration-jdk9-and-above&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;depending on the list where our module exists&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>openjdk/jdk</title>
    <updated>2022-11-20T01:43:43Z</updated>
    <id>tag:github.com,2022-11-20:/openjdk/jdk</id>
    <link href="https://github.com/openjdk/jdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JDK main-line development https://openjdk.org/projects/jdk&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to the JDK!&lt;/h1&gt; &#xA;&lt;p&gt;For build instructions please see the &lt;a href=&#34;https://openjdk.org/groups/build/doc/building.html&#34;&gt;online documentation&lt;/a&gt;, or either of these files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.html&#34;&gt;doc/building.html&lt;/a&gt; (html version)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/openjdk/jdk/master/doc/building.md&#34;&gt;doc/building.md&lt;/a&gt; (markdown version)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://openjdk.org/&#34;&gt;https://openjdk.org/&lt;/a&gt; for more information about the OpenJDK Community and the JDK and see &lt;a href=&#34;https://bugs.openjdk.org&#34;&gt;https://bugs.openjdk.org&lt;/a&gt; for JDK issue tracking.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MaximilianAnzinger/pgdp2223-tests</title>
    <updated>2022-11-20T01:43:43Z</updated>
    <id>tag:github.com,2022-11-20:/MaximilianAnzinger/pgdp2223-tests</id>
    <link href="https://github.com/MaximilianAnzinger/pgdp2223-tests" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Collection of JUnit Tests for PGdP exercises at TUM in WS22/23&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PGdP 22/23 - Tests&lt;/h1&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This is a repository to collect JUnit Tests for PGdP exercises at TUM in WS22/23. These tests have been written by students for students and are not part of the official course.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA; &lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt; &#xA;  &lt;div id=&#34;toctitle&#34;&gt;&#xA;   Table of Contents&#xA;  &lt;/div&gt; &#xA;  &lt;ul class=&#34;sectlevel1&#34;&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaximilianAnzinger/pgdp2223-tests/main/#_legal_status&#34;&gt;1. Legal Status&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaximilianAnzinger/pgdp2223-tests/main/#_usage&#34;&gt;2. Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaximilianAnzinger/pgdp2223-tests/main/#_how_to_contribute&#34;&gt;3. How to Contribute&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaximilianAnzinger/pgdp2223-tests/main/#_contributors&#34;&gt;4. Contributors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaximilianAnzinger/pgdp2223-tests/main/#_helpful_links&#34;&gt;5. Helpful Links&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MaximilianAnzinger/pgdp2223-tests/main/#_contact&#34;&gt;6. Contact&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_legal_status&#34;&gt;1. Legal Status&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;quoteblock&#34;&gt; &#xA;   &lt;blockquote&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Es ist alles erlaubt, was die Lösung nicht verrät.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/blockquote&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The so-called &lt;strong&gt;Übungsleitung&lt;/strong&gt; will have an eye on this repository. But as long as the tests do not reveal the solution of the homework, this repository will tolerate them. To ensure the solution is not getting revealed, the tests should be Input/Output-Tests only.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Furthermore, there is no guarantee of the correctness of the tests. Neither the &lt;strong&gt;Übungsleitung&lt;/strong&gt; nor any of the other tutors will contribute own tests. We (Maximilian Anzinger, Johannes Stöhr, Georg Henning, Konrad Gößmann, Robin Marchart, Oliver Specht, and Anton Kluge) will just make sure that there are no tests that reveal the solution. It is your own responsibility to validate the correctness and if necessary report bugs or even provide/contribute a fix for your fellow student.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;div class=&#34;title&#34;&gt;&#xA;    Examples&#xA;   &lt;/div&gt; &#xA;   &lt;p&gt;correct:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;// Test Area calculation&#xA;// Arrange&#xA;Rectangle r1 = new Rectangle(length: 4, width: 4)&#xA;// Act &amp;amp; Assert&#xA;assertEquals(16, r1.calculateArea());&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;wrong!:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;// Test Area calculation&#xA;// Arrange&#xA;Rectangle r1 = new Rectangle(length: 4, width: 6)&#xA;// Act &amp;amp; Assert&#xA;// Calculate using length * width             // &amp;lt;-- reveales the solution&#xA;assertEquals(4*6, r1.calculateArea()); // &amp;lt;-- reveales the solution&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_usage&#34;&gt;2. Usage&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;Clone this repository&lt;/p&gt; &#xA;     &lt;div class=&#34;listingblock&#34;&gt; &#xA;      &lt;div class=&#34;content&#34;&gt; &#xA;       &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git clone https://github.com/MaximilianAnzinger/pgdp2223-tests.git&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Check for updates&lt;/p&gt; &#xA;     &lt;div class=&#34;listingblock&#34;&gt; &#xA;      &lt;div class=&#34;content&#34;&gt; &#xA;       &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;git pull&lt;/code&gt;&lt;/pre&gt; &#xA;      &lt;/div&gt; &#xA;     &lt;/div&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;copy the files in the &lt;code&gt;test&lt;/code&gt; directory to the root of your repository and &lt;strong&gt;not&lt;/strong&gt; inside your src folder&lt;/p&gt; &#xA;     &lt;div class=&#34;paragraph&#34;&gt; &#xA;      &lt;p&gt;&lt;strong&gt;Or&lt;/strong&gt; use the symlink instruction below.&lt;/p&gt; &#xA;     &lt;/div&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Make sure your IDE (e.g. IntelIJ or Eclipse) sees your added files&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;JUnit should already be included. If not include JUnit to your Project by pressing the red lightbulb (or &lt;code&gt;ALT + ENTER&lt;/code&gt; in IntelIJ) on one of the red underlined @Test Annotations in the test file.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;Do not add them to your artemis git repository&lt;/strong&gt; (it should already be in your .gitignore)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Run the tests and check your mistakes&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;div class=&#34;title&#34;&gt;&#xA;    Important note&#xA;   &lt;/div&gt; &#xA;   &lt;p&gt;As this is a student-driven project please keep in mind that mistakes can happen. If you think a test is wrong, please feel free to open an Issue (it is easy!). To help fixing bugs, please add the following info to your &lt;a href=&#34;https://github.com/MaximilianAnzinger/pgdp2223-tests/issues&#34;&gt;&lt;code&gt;Issue&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Operating system&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;IDE (IntelIJ, Eclipse, …​)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Where is the mistake / error&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Citation of the homework instruction&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;div class=&#34;title&#34;&gt;&#xA;    How to use symlinks (Advanced Users only!)&#xA;   &lt;/div&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This has to be executed in the command line, run as administrator:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ mklink /d path&#x9;oartemis-repository&#x9;estpgdp path&#x9;o&#x9;est-repositoryaufgabe&#x9;estpgdp&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Linux/MacOS:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ ln -s /path/to/test-repository/aufgabe/test/pgdp /path/to/artemis-repository/test/pgdp&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_how_to_contribute&#34;&gt;3. How to Contribute&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;Fork Repository (&lt;a href=&#34;https://docs.github.com/en/get-started/quickstart/fork-a-repo#forking-a-repository&#34;&gt;GitHub Documentation&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Add / edit tests under &lt;code&gt;&amp;lt;EXERCISE&amp;gt;/test/`&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ensure no solution or homework-code is getting revealed&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Commit and push to your fork repository&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Open a Pull Request to this repository (&lt;a href=&#34;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests&#34;&gt;GitHub Documentation&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Wait until the changes are merged&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_contributors&#34;&gt;4. Contributors&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div id=&#34;img-contributors&#34; class=&#34;imageblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;a class=&#34;image&#34; href=&#34;https://github.com/MaximilianAnzinger/pgdp2223-tests/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=MaximilianAnzinger/pgdp2223-tests&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_helpful_links&#34;&gt;5. Helpful Links&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;Tests &lt;a href=&#34;https://github.com/LadnerJonas/PGdP-Tests-WS21-22&#34;&gt;PGDP WS 21/22&lt;/a&gt; (Testcases from last year might be a helpful guideline/inspiration)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Tests &lt;a href=&#34;https://github.com/MaximilianAnzinger/gad2022-tests#readme&#34;&gt;GAD 2022&lt;/a&gt; (Testcases for a second semester course)&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Write Tests using &lt;a href=&#34;https://junit.org/junit5/docs/current/user-guide/#writing-tests&#34;&gt;JUnit 5&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to use &lt;a href=&#34;https://www.atlassian.com/de/git/tutorials/learn-git-with-bitbucket-cloud&#34;&gt;Git&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to use &lt;a href=&#34;https://docs.github.com/en/get-started/quickstart/hello-world&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_contact&#34;&gt;6. Contact&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Feel free to contact us (Maximilian Anzinger, Johannes Stöhr, Georg Henning, Konrad Gößmann, Robin Marchart, Oliver Specht, and Anton Kluge) via Zulip, but consider using &lt;a href=&#34;https://www.google.com/&#34;&gt;google&lt;/a&gt; beforehand.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>