<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-16T01:43:33Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ben-manes/caffeine</title>
    <updated>2022-10-16T01:43:33Z</updated>
    <id>tag:github.com,2022-10-16:/ben-manes/caffeine</id>
    <link href="https://github.com/ben-manes/caffeine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A high performance caching library for Java&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/actions?query=workflow%3Abuild+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/ben-manes/caffeine/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ben-manes/caffeine/actions?query=workflow%3Abuild+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://gist.githubusercontent.com/ben-manes/c20eb418f0e0bd6dfe1c25beb35faae4/raw/badge.svg?sanitize=true&#34; alt=&#34;Test Count&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/r/ben-manes/caffeine?branch=master&#34;&gt;&lt;img src=&#34;https://img.shields.io/coveralls/ben-manes/caffeine.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/com.github.ben-manes.caffeine/caffeine&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/com.github.ben-manes.caffeine/caffeine/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.javadoc.io/doc/com.github.ben-manes.caffeine/caffeine&#34;&gt;&lt;img src=&#34;https://www.javadoc.io/badge/com.github.ben-manes.caffeine/caffeine.svg?sanitize=true&#34; alt=&#34;JavaDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/:license-apache-brightgreen.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://stackoverflow.com/questions/tagged/caffeine&#34;&gt;&lt;img src=&#34;https://img.shields.io/:stack%20overflow-caffeine-brightgreen.svg?sanitize=true&#34; alt=&#34;Stack Overflow&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki&#34;&gt; &lt;img align=&#34;right&#34; height=&#34;90px&#34; src=&#34;https://raw.githubusercontent.com/ben-manes/caffeine/master/wiki/logo.png&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Caffeine is a &lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Benchmarks&#34;&gt;high performance&lt;/a&gt;, &lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Efficiency&#34;&gt;near optimal&lt;/a&gt; caching library. For more details, see our &lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki&#34;&gt;user&#39;s guide&lt;/a&gt; and browse the &lt;a href=&#34;http://www.javadoc.io/doc/com.github.ben-manes.caffeine/caffeine&#34;&gt;API docs&lt;/a&gt; for the latest release.&lt;/p&gt; &#xA;&lt;h3&gt;Cache&lt;/h3&gt; &#xA;&lt;p&gt;Caffeine provides an in-memory cache using a Google Guava inspired API. The improvements draw on our experience designing &lt;a href=&#34;https://github.com/google/guava/wiki/CachesExplained&#34;&gt;Guava&#39;s cache&lt;/a&gt; and &lt;a href=&#34;https://github.com/ben-manes/concurrentlinkedhashmap&#34;&gt;ConcurrentLinkedHashMap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;LoadingCache&amp;lt;Key, Graph&amp;gt; graphs = Caffeine.newBuilder()&#xA;    .maximumSize(10_000)&#xA;    .expireAfterWrite(Duration.ofMinutes(5))&#xA;    .refreshAfterWrite(Duration.ofMinutes(1))&#xA;    .build(key -&amp;gt; createExpensiveGraph(key));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Features at a Glance&lt;/h4&gt; &#xA;&lt;p&gt;Caffeine provides flexible construction to create a cache with a combination of the following optional features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Population&#34;&gt;automatic loading of entries&lt;/a&gt; into the cache, optionally asynchronously&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Eviction#size-based&#34;&gt;size-based eviction&lt;/a&gt; when a maximum is exceeded based on &lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Efficiency&#34;&gt;frequency and recency&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Eviction#time-based&#34;&gt;time-based expiration&lt;/a&gt; of entries, measured since last access or last write&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Refresh&#34;&gt;asynchronously refresh&lt;/a&gt; when the first stale request for an entry occurs&lt;/li&gt; &#xA; &lt;li&gt;keys automatically wrapped in &lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Eviction#reference-based&#34;&gt;weak references&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;values automatically wrapped in &lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Eviction#reference-based&#34;&gt;weak or soft references&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Removal&#34;&gt;notification&lt;/a&gt; of evicted (or otherwise removed) entries&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Compute&#34;&gt;writes propagated&lt;/a&gt; to an external resource&lt;/li&gt; &#xA; &lt;li&gt;accumulation of cache access &lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Statistics&#34;&gt;statistics&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In addition, Caffeine offers the following extensions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/JCache&#34;&gt;JSR-107 JCache&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Guava&#34;&gt;Guava adapters&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ben-manes/caffeine/wiki/Simulator&#34;&gt;Simulation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use Caffeine in a community provided integration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.playframework.com/documentation/latest/JavaCache&#34;&gt;Play Framework&lt;/a&gt;: High velocity web framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.micronaut.io/latest/guide/index.html#caching&#34;&gt;Micronaut&lt;/a&gt;: A modern, full-stack framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.spring.io/spring/docs/current/spring-framework-reference/integration.html#cache-store-configuration-caffeine&#34;&gt;Spring Cache&lt;/a&gt;: As of Spring 4.3 &amp;amp; Boot 1.4&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://quarkus.io&#34;&gt;Quarkus&lt;/a&gt;: Supersonic Subatomic Java&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blemale/scaffeine&#34;&gt;Scaffeine&lt;/a&gt;: Scala wrapper for Caffeine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cb372/scalacache&#34;&gt;ScalaCache&lt;/a&gt;: Simple caching in Scala&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/apache/camel/raw/master/components/camel-caffeine/src/main/docs/caffeine-cache-component.adoc&#34;&gt;Camel&lt;/a&gt;: Routing and mediation engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jhipster.tech/&#34;&gt;JHipster&lt;/a&gt;: Generate, develop, deploy&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sksamuel/aedile&#34;&gt;Aedile&lt;/a&gt;: Kotlin wrapper for Caffeine&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Powering infrastructure near you:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dropwizard.io&#34;&gt;Dropwizard&lt;/a&gt;: Ops-friendly, high-performance, RESTful APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://cassandra.apache.org&#34;&gt;Cassandra&lt;/a&gt;: Manage massive amounts of data, fast&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/en/middleware/standalone/coherence/14.1.1.2206/develop-applications/implementing-storage-and-backing-maps.html#GUID-260228C2-371A-4B91-9024-8D6514DD4B78&#34;&gt;Coherence&lt;/a&gt;: Mission critical in-memory data grid&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://accumulo.apache.org&#34;&gt;Accumulo&lt;/a&gt;: A sorted, distributed key/value store&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hbase.apache.org&#34;&gt;HBase&lt;/a&gt;: A distributed, scalable, big data store&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://solr.apache.org/&#34;&gt;Apache Solr&lt;/a&gt;: Blazingly fast enterprise search&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://infinispan.org&#34;&gt;Infinispan&lt;/a&gt;: Distributed in-memory data grid&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/redisson/redisson&#34;&gt;Redisson&lt;/a&gt;: Ultra-fast in-memory data grid&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://openwhisk.apache.org/&#34;&gt;OpenWhisk&lt;/a&gt;: Serverless cloud platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CorfuDB/CorfuDB&#34;&gt;Corfu&lt;/a&gt;: A cluster consistency platform&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://grails.org&#34;&gt;Grails&lt;/a&gt;: Groovy-based web framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/twitter/finagle&#34;&gt;Finagle&lt;/a&gt;: Extensible RPC system&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neo4j/neo4j&#34;&gt;Neo4j&lt;/a&gt;: Graphs for Everyone&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://druid.apache.org/docs/latest/configuration/index.html#cache-configuration&#34;&gt;Druid&lt;/a&gt;: Real-time analytics&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;In the News&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;An in-depth description of Caffeine&#39;s architecture. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://highscalability.com/blog/2016/1/25/design-of-a-modern-cache.html&#34;&gt;Design of a Modern Cache: part #1&lt;/a&gt;, &lt;a href=&#34;http://highscalability.com/blog/2019/2/25/design-of-a-modern-cachepart-deux.html&#34;&gt;part #2&lt;/a&gt; (&lt;a href=&#34;https://docs.google.com/presentation/d/1NlDxyXsUG1qlVHMl4vsUUBQfAJ2c2NsFPNPr2qymIBs&#34;&gt;slides&lt;/a&gt;) at &lt;a href=&#34;http://highscalability.com&#34;&gt;HighScalability&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Caffeine is presented as part of research papers evaluating its novel eviction policy. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/3149371?cid=99659224047&#34;&gt;TinyLFU: A Highly Efficient Cache Admission Policy&lt;/a&gt; by Gil Einziger, Roy Friedman, Ben Manes&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/3274808.3274816?cid=99659224047&#34;&gt;Adaptive Software Cache Management&lt;/a&gt; by Gil Einziger, Ohad Eytan, Roy Friedman, Ben Manes&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dl.acm.org/doi/10.1145/3507920?cid=99659224047&#34;&gt;Lightweight Robust Size Aware Cache Management&lt;/a&gt; by Gil Einziger, Ohad Eytan, Roy Friedman, Ben Manes&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;Download from &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/com.github.ben-manes.caffeine/caffeine&#34;&gt;Maven Central&lt;/a&gt; or depend via Gradle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;implementation(&#34;com.github.ben-manes.caffeine:caffeine:3.1.1&#34;)&#xA;&#xA;// Optional extensions&#xA;implementation(&#34;com.github.ben-manes.caffeine:guava:3.1.1&#34;)&#xA;implementation(&#34;com.github.ben-manes.caffeine:jcache:3.1.1&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Java 11 or above, use &lt;code&gt;3.x&lt;/code&gt; otherwise use &lt;code&gt;2.x&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/ben-manes/caffeine/releases&#34;&gt;release notes&lt;/a&gt; for details of the changes.&lt;/p&gt; &#xA;&lt;p&gt;Snapshots of the development version are available in &lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots/com/github/ben-manes/caffeine/&#34;&gt;Sonatype&#39;s snapshots repository&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>WeiYe-Jing/datax-web</title>
    <updated>2022-10-16T01:43:33Z</updated>
    <id>tag:github.com,2022-10-16:/WeiYe-Jing/datax-web</id>
    <link href="https://github.com/WeiYe-Jing/datax-web" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DataX集成可视化页面，选择数据源即可一键生成数据同步任务，支持RDBMS、Hive、HBase、ClickHouse、MongoDB等数据源，批量创建RDBMS数据同步任务，集成开源调度系统，支持分布式、增量同步数据、实时查看运行日志、监控执行器资源、KILL运行进程、数据源信息加密等。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/WeiYe-Jing/datax-web&#34; alt=&#34;GitHub contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/WeiYe-Jing/datax-web&#34; alt=&#34;GitHub issues&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/WeiYe-Jing/datax-web&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/code-size/WeiYe-Jing/datax-web&#34; alt=&#34;GitHub code size in bytes&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/qq%E7%BE%A4-776939467-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;DataX-Web&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/WeiYe-Jing/datax-web&#34;&gt;&lt;img src=&#34;https://starchart.cc/WeiYe-Jing/datax-web.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;DataX Web是在DataX之上开发的分布式数据同步工具，提供简单易用的 操作界面，降低用户使用DataX的学习成本，缩短任务配置时间，避免配置过程中出错。用户可通过页面选择数据源即可创建数据同步任务，支持RDBMS、Hive、HBase、ClickHouse、MongoDB等数据源，RDBMS数据源可批量创建数据同步任务，支持实时查看数据同步进度及日志并提供终止同步功能，集成并二次开发xxl-job可根据时间、自增主键增量同步数据。&lt;/p&gt; &#xA;&lt;p&gt;任务&#34;执行器&#34;支持集群部署，支持执行器多节点路由策略选择，支持超时控制、失败重试、失败告警、任务依赖，执行器CPU.内存.负载的监控等等。后续还将提供更多的数据源支持、数据转换UDF、表结构同步、数据同步血缘等更为复杂的业务场景。&lt;/p&gt; &#xA;&lt;h1&gt;Architecture diagram：&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/DataX-Web.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;System Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Language: Java 8（jdk版本建议1.8.201以上）&lt;br&gt; Python2.7(支持Python3需要修改替换datax/bin下面的三个python文件，替换文件在doc/datax-web/datax-python3下)&lt;/li&gt; &#xA; &lt;li&gt;Environment: MacOS, Windows,Linux&lt;/li&gt; &#xA; &lt;li&gt;Database: Mysql5.7&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1、通过Web构建DataX Json；&lt;/li&gt; &#xA; &lt;li&gt;2、DataX Json保存在数据库中，方便任务的迁移，管理；&lt;/li&gt; &#xA; &lt;li&gt;3、Web实时查看抽取日志，类似Jenkins的日志控制台输出功能；&lt;/li&gt; &#xA; &lt;li&gt;4、DataX运行记录展示，可页面操作停止DataX作业；&lt;/li&gt; &#xA; &lt;li&gt;5、支持DataX定时任务，支持动态修改任务状态、启动/停止任务，以及终止运行中任务，即时生效；&lt;/li&gt; &#xA; &lt;li&gt;6、调度采用中心式设计，支持集群部署；&lt;/li&gt; &#xA; &lt;li&gt;7、任务分布式执行，任务&#34;执行器&#34;支持集群部署；&lt;/li&gt; &#xA; &lt;li&gt;8、执行器会周期性自动注册任务, 调度中心将会自动发现注册的任务并触发执行；&lt;/li&gt; &#xA; &lt;li&gt;9、路由策略：执行器集群部署时提供丰富的路由策略，包括：第一个、最后一个、轮询、随机、一致性HASH、最不经常使用、最近最久未使用、故障转移、忙碌转移等；&lt;/li&gt; &#xA; &lt;li&gt;10、阻塞处理策略：调度过于密集执行器来不及处理时的处理策略，策略包括：单机串行（默认）、丢弃后续调度、覆盖之前调度；&lt;/li&gt; &#xA; &lt;li&gt;11、任务超时控制：支持自定义任务超时时间，任务运行超时将会主动中断任务；&lt;/li&gt; &#xA; &lt;li&gt;12、任务失败重试：支持自定义任务失败重试次数，当任务失败时将会按照预设的失败重试次数主动进行重试；&lt;/li&gt; &#xA; &lt;li&gt;13、任务失败告警；默认提供邮件方式失败告警，同时预留扩展接口，可方便的扩展短信、钉钉等告警方式；&lt;/li&gt; &#xA; &lt;li&gt;14、用户管理：支持在线管理系统用户，存在管理员、普通用户两种角色；&lt;/li&gt; &#xA; &lt;li&gt;15、任务依赖：支持配置子任务依赖，当父任务执行结束且执行成功后将会主动触发一次子任务的执行, 多个子任务用逗号分隔；&lt;/li&gt; &#xA; &lt;li&gt;16、运行报表：支持实时查看运行数据，以及调度报表，如调度日期分布图，调度成功分布图等；&lt;/li&gt; &#xA; &lt;li&gt;17、指定增量字段，配置定时任务自动获取每次的数据区间，任务失败重试，保证数据安全；&lt;/li&gt; &#xA; &lt;li&gt;18、页面可配置DataX启动JVM参数；&lt;/li&gt; &#xA; &lt;li&gt;19、数据源配置成功后添加手动测试功能；&lt;/li&gt; &#xA; &lt;li&gt;20、可以对常用任务进行配置模板，在构建完JSON之后可选择关联模板创建任务；&lt;/li&gt; &#xA; &lt;li&gt;21、jdbc添加hive数据源支持，可在构建JSON页面选择数据源生成column信息并简化配置；&lt;/li&gt; &#xA; &lt;li&gt;22、优先通过环境变量获取DataX文件目录，集群部署时不用指定JSON及日志目录；&lt;/li&gt; &#xA; &lt;li&gt;23、通过动态参数配置指定hive分区，也可以配合增量实现增量数据动态插入分区；&lt;/li&gt; &#xA; &lt;li&gt;24、任务类型由原来DataX任务扩展到Shell任务、Python任务、PowerShell任务；&lt;/li&gt; &#xA; &lt;li&gt;25、添加HBase数据源支持，JSON构建可通过HBase数据源获取hbaseConfig，column；&lt;/li&gt; &#xA; &lt;li&gt;26、添加MongoDB数据源支持，用户仅需要选择collectionName即可完成json构建；&lt;/li&gt; &#xA; &lt;li&gt;27、添加执行器CPU、内存、负载的监控页面；&lt;/li&gt; &#xA; &lt;li&gt;28、添加24类插件DataX JSON配置样例&lt;/li&gt; &#xA; &lt;li&gt;29、公共字段（创建时间，创建人，修改时间，修改者）插入或更新时自动填充&lt;/li&gt; &#xA; &lt;li&gt;30、对swagger接口进行token验证&lt;/li&gt; &#xA; &lt;li&gt;31、任务增加超时时间，对超时任务kill datax进程，可配合重试策略避免网络问题导致的datax卡死。&lt;/li&gt; &#xA; &lt;li&gt;32、添加项目管理模块，可对任务分类管理；&lt;/li&gt; &#xA; &lt;li&gt;33、对RDBMS数据源增加批量任务创建功能，选择数据源，表即可根据模板批量生成DataX同步任务；&lt;/li&gt; &#xA; &lt;li&gt;34、JSON构建增加ClickHouse数据源支持；&lt;/li&gt; &#xA; &lt;li&gt;35、执行器CPU.内存.负载的监控页面图形化；&lt;/li&gt; &#xA; &lt;li&gt;36、RDBMS数据源增量抽取增加主键自增方式并优化页面参数配置；&lt;/li&gt; &#xA; &lt;li&gt;37、更换MongoDB数据源连接方式,重构HBase数据源JSON构建模块；&lt;/li&gt; &#xA; &lt;li&gt;38、脚本类型任务增加停止功能；&lt;/li&gt; &#xA; &lt;li&gt;39、rdbms json构建增加postSql，并支持构建多个preSql，postSql；&lt;/li&gt; &#xA; &lt;li&gt;40、数据源信息加密算法修改及代码优化；&lt;/li&gt; &#xA; &lt;li&gt;41、日志页面增加DataX执行结果统计数据；&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Quick Start：&lt;/h1&gt; &#xA;&lt;h5&gt;请点击：&lt;a href=&#34;https://github.com/WeiYe-Jing/datax-web/raw/master/userGuid.md&#34;&gt;Quick Start&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;h5&gt;Linux：&lt;a href=&#34;https://github.com/WeiYe-Jing/datax-web/raw/master/doc/datax-web/datax-web-deploy.md&#34;&gt;一键部署&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;h1&gt;Introduction：&lt;/h1&gt; &#xA;&lt;h3&gt;1.执行器配置(使用开源项目xxl-job)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/executor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1、&#34;调度中心OnLine:&#34;右侧显示在线的&#34;调度中心&#34;列表, 任务执行结束后, 将会以failover的模式进行回调调度中心通知执行结果, 避免回调的单点风险;&lt;/li&gt; &#xA; &lt;li&gt;2、&#34;执行器列表&#34; 中显示在线的执行器列表, 可通过&#34;OnLine 机器&#34;查看对应执行器的集群机器;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;执行器属性说明&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/add_executor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;1、AppName: （与datax-executor中application.yml的datax.job.executor.appname保持一致）&#xA;   每个执行器集群的唯一标示AppName, 执行器会周期性以AppName为对象进行自动注册。可通过该配置自动发现注册成功的执行器, 供任务调度时使用;&#xA;2、名称: 执行器的名称, 因为AppName限制字母数字等组成,可读性不强, 名称为了提高执行器的可读性;&#xA;3、排序: 执行器的排序, 系统中需要执行器的地方,如任务新增, 将会按照该排序读取可用的执行器列表;&#xA;4、注册方式：调度中心获取执行器地址的方式；&#xA;    自动注册：执行器自动进行执行器注册，调度中心通过底层注册表可以动态发现执行器机器地址；&#xA;    手动录入：人工手动录入执行器的地址信息，多地址逗号分隔，供调度中心使用；&#xA;5、机器地址：&#34;注册方式&#34;为&#34;手动录入&#34;时有效，支持人工维护执行器的地址信息；&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2.创建数据源&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/add_datasource.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;第四步使用&lt;/p&gt; &#xA;&lt;h3&gt;3.创建任务模版&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/template_list.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;第四步使用&lt;/p&gt; &#xA;&lt;h3&gt;4. 构建JSON脚本&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.步骤一，步骤二，选择第二步中创建的数据源，JSON构建目前支持的数据源有hive,mysql,oracle,postgresql,sqlserver,hbase,mongodb,clickhouse 其它数据源的JSON构建正在开发中,暂时需要手动编写。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/build.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;2.字段映射&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/mapping.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;3.点击构建，生成json,此时可以选择复制json然后创建任务，选择datax任务，将json粘贴到文本框。也可以点击选择模版，直接生成任务。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/select_template.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5.批量创建任务&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/batch_build_r.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/batch_build_w.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6.任务创建介绍（关联模版创建任务不再介绍，具体参考4. 构建JSON脚本）&lt;/h3&gt; &#xA;&lt;h4&gt;支持DataX任务,Shell任务，Python任务，PowerShell任务&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/datax.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/shell.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;阻塞处理策略：调度过于密集执行器来不及处理时的处理策略；&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;单机串行：调度请求进入单机执行器后，调度请求进入FIFO队列并以串行方式运行；&lt;/li&gt; &#xA;   &lt;li&gt;丢弃后续调度：调度请求进入单机执行器后，发现执行器存在运行的调度任务，本次请求将会被丢弃并标记为失败；&lt;/li&gt; &#xA;   &lt;li&gt;覆盖之前调度：调度请求进入单机执行器后，发现执行器存在运行的调度任务，将会终止运行中的调度任务并清空队列，然后运行本地调度任务；&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;增量增新建议将阻塞策略设置为丢弃后续调度或者单机串行&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;设置单机串行时应该注意合理设置重试次数(失败重试的次数*每次执行时间&amp;lt;任务的调度周期)，重试的次数如果设置的过多会导致数据重复，例如任务30秒执行一次，每次执行时间需要20秒，设置重试三次，如果任务失败了，第一个重试的时间段为1577755680-1577756680，重试任务没结束，新任务又开启，那新任务的时间段会是1577755680-1577758680&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeiYe-Jing/datax-web/raw/master/doc/datax-web/increment-desc.md&#34;&gt;增量参数设置&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WeiYe-Jing/datax-web/raw/master/doc/datax-web/partition-dynamic-param.md&#34;&gt;分区参数设置&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;7. 任务列表&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/job.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;8. 可以点击查看日志，实时获取日志信息,终止正在执行的datax进程&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/log_stat.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/img/log_detail.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;9.任务资源监控&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/img/monitor.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;10. admin可以创建用户，编辑用户信息&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/user.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;UI&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WeiYe-Jing/datax-web-ui&#34;&gt;前端github地址&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;项目成员&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;water&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;非常荣幸成为datax-web的Committer，从早期datax手工编写任务+配置，到datax-web界面化勾选创建任务+配置信息+调度管理，datax-web将数据同步工作的效率提升不少，相信后面后成为etl中不可或缺的生产力……&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Alecor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;非常荣幸成为datax-web的Committer，datax-web旨在帮助用户从datax配置中解放出来，提供datax的Web化的管理能力。希望datax-web能为更多有需要的人服务，带来更好的简单、易用的体验！&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;zhouhongfa&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;liukunyuan&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;感谢贡献！&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributions are welcome! Open a pull request to fix a bug, or open an Issue to discuss a new feature or change.&lt;/p&gt; &#xA;&lt;p&gt;欢迎参与项目贡献！比如提交PR修复一个bug，或者新建 Issue 讨论新特性或者变更。&lt;/p&gt; &#xA;&lt;h1&gt;Copyright and License&lt;/h1&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2020 WeiYe&lt;/p&gt; &#xA;&lt;p&gt;产品开源免费，并且将持续提供免费的社区技术支持。个人或企业内部可自由的接入和使用。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;欢迎在 &lt;a href=&#34;https://github.com/WeiYe-Jing/datax-web/issues/93&#34;&gt;登记地址&lt;/a&gt; 登记，登记仅仅为了产品推广和提升社区开发的动力。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;v-2.1.2&lt;/h1&gt; &#xA;&lt;h3&gt;新增&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;添加项目管理模块，可对任务分类管理；&lt;/li&gt; &#xA; &lt;li&gt;对RDBMS数据源增加批量任务创建功能，选择数据源，表即可根据模板批量生成DataX同步任务；&lt;/li&gt; &#xA; &lt;li&gt;JSON构建增加ClickHouse数据源支持；&lt;/li&gt; &#xA; &lt;li&gt;执行器CPU.内存.负载的监控页面图形化；&lt;/li&gt; &#xA; &lt;li&gt;RDBMS数据源增量抽取增加主键自增方式并优化页面参数配置；&lt;/li&gt; &#xA; &lt;li&gt;更换MongoDB数据源连接方式,重构HBase数据源JSON构建模块；&lt;/li&gt; &#xA; &lt;li&gt;脚本类型任务增加停止功能；&lt;/li&gt; &#xA; &lt;li&gt;rdbms json构建增加postSql，并支持构建多个preSql，postSql；&lt;/li&gt; &#xA; &lt;li&gt;合并datax-registry模块到datax-rpc中； 10.数据源信息加密算法修改及代码优化； 11.时间增量同步支持更多时间格式； 12.日志页面增加DataX执行结果统计数据；&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;升级：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;PostgreSql，SQLServer，Oracle 数据源JSON构建增加schema name选择；&lt;/li&gt; &#xA; &lt;li&gt;DataX JSON中的字段名称与数据源关键词一致问题优化；&lt;/li&gt; &#xA; &lt;li&gt;任务管理页面按钮展示优化；&lt;/li&gt; &#xA; &lt;li&gt;日志管理页面增加任务描述信息；&lt;/li&gt; &#xA; &lt;li&gt;JSON构建前端form表单不能缓存数据问题修复;&lt;/li&gt; &#xA; &lt;li&gt;HIVE JSON构建增加头尾选项参数;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;备注：&lt;/h3&gt; &#xA;&lt;p&gt;2.1.1版本不建议升级，数据源信息加密方式变更会导致之前已加密的数据源解密失败，任务运行失败。 如果需要升级请重建数据源，任务。&lt;/p&gt; &#xA;&lt;h1&gt;v-2.1.1&lt;/h1&gt; &#xA;&lt;h3&gt;新增&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;添加HBase数据源支持，JSON构建可通过HBase数据源获取hbaseConfig，column；&lt;/li&gt; &#xA; &lt;li&gt;添加MongoDB数据源支持，用户仅需要选择collectionName即可完成json构建；&lt;/li&gt; &#xA; &lt;li&gt;添加执行器CPU.内存.负载的监控页面；&lt;/li&gt; &#xA; &lt;li&gt;添加24类插件DataX JSON配置样例&lt;/li&gt; &#xA; &lt;li&gt;公共字段（创建时间，创建人，修改时间，修改者）插入或更新时自动填充&lt;/li&gt; &#xA; &lt;li&gt;对swagger接口进行token验证&lt;/li&gt; &#xA; &lt;li&gt;任务增加超时时间，对超时任务kill datax进程，可配合重试策略避免网络问题导致的datax卡死。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;升级：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;数据源管理对用户名和密码进行加密，提高安全性；&lt;/li&gt; &#xA; &lt;li&gt;对JSON文件中的用户名密码进行加密，执行DataX任务时解密&lt;/li&gt; &#xA; &lt;li&gt;对页面菜单整理，图标升级，提示信息等交互优化；&lt;/li&gt; &#xA; &lt;li&gt;日志输出取消项目类名等无关信息，减小文件大小，优化大文件输出，优化页面展示；&lt;/li&gt; &#xA; &lt;li&gt;logback为从yml中获取日志路径配置&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;修复：&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;任务日志过大时，查看日志报错，请求超时；&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;提交代码&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/WeiYe-Jing/datax-web/issues/190&#34;&gt;参与贡献&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contact us&lt;/h1&gt; &#xA;&lt;h3&gt;个人微信&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/WechatIMG2.jpeg?x-oss-process=image/resize,w_230,h_230&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;QQ交流群&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://datax-web.oss-cn-hangzhou.aliyuncs.com/doc/qrcode3.jpeg?x-oss-process=image/resize,w_250,h_300&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>alibaba/DataX</title>
    <updated>2022-10-16T01:43:33Z</updated>
    <id>tag:github.com,2022-10-16:/alibaba/DataX</id>
    <link href="https://github.com/alibaba/DataX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DataX是阿里云DataWorks数据集成的开源版本。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/alibaba/DataX/raw/master/images/DataX-logo.jpg&#34; alt=&#34;Datax-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;DataX&lt;/h1&gt; &#xA;&lt;p&gt;DataX 是阿里云 &lt;a href=&#34;https://www.aliyun.com/product/bigdata/ide&#34;&gt;DataWorks数据集成&lt;/a&gt; 的开源版本，在阿里巴巴集团内被广泛使用的离线数据同步工具/平台。DataX 实现了包括 MySQL、Oracle、OceanBase、SqlServer、Postgre、HDFS、Hive、ADS、HBase、TableStore(OTS)、MaxCompute(ODPS)、Hologres、DRDS 等各种异构数据源之间高效的数据同步功能。&lt;/p&gt; &#xA;&lt;h1&gt;DataX 商业版本&lt;/h1&gt; &#xA;&lt;p&gt;阿里云DataWorks数据集成是DataX团队在阿里云上的商业化产品，致力于提供复杂网络环境下、丰富的异构数据源之间高速稳定的数据移动能力，以及繁杂业务背景下的数据同步解决方案。目前已经支持云上近3000家客户，单日同步数据超过3万亿条。DataWorks数据集成目前支持离线50+种数据源，可以进行整库迁移、批量上云、增量同步、分库分表等各类同步解决方案。2020年更新实时同步能力，2020年更新实时同步能力，支持10+种数据源的读写任意组合。提供MySQL，Oracle等多种数据源到阿里云MaxCompute，Hologres等大数据引擎的一键全增量同步解决方案。&lt;/p&gt; &#xA;&lt;p&gt;商业版本参见： &lt;a href=&#34;https://www.aliyun.com/product/bigdata/ide&#34;&gt;https://www.aliyun.com/product/bigdata/ide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;DataX本身作为数据同步框架，将不同数据源的同步抽象为从源头数据源读取数据的Reader插件，以及向目标端写入数据的Writer插件，理论上DataX框架可以支持任意数据源类型的数据同步工作。同时DataX插件体系作为一套生态系统, 每接入一套新数据源该新加入的数据源即可实现和现有的数据源互通。&lt;/p&gt; &#xA;&lt;h1&gt;DataX详细介绍&lt;/h1&gt; &#xA;&lt;h5&gt;请参考：&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/introduction.md&#34;&gt;DataX-Introduction&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;h1&gt;Quick Start&lt;/h1&gt; &#xA;&lt;h5&gt;Download &lt;a href=&#34;https://datax-opensource.oss-cn-hangzhou.aliyuncs.com/202209/datax.tar.gz&#34;&gt;DataX下载地址&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;h5&gt;请点击：&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/userGuid.md&#34;&gt;Quick Start&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;h1&gt;Support Data Channels&lt;/h1&gt; &#xA;&lt;p&gt;DataX目前已经有了比较全面的插件体系，主流的RDBMS数据库、NOSQL、大数据计算系统都已经接入，目前支持数据如下图，详情请点击：&lt;a href=&#34;https://github.com/alibaba/DataX/wiki/DataX-all-data-channels&#34;&gt;DataX数据源参考指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;类型&lt;/th&gt; &#xA;   &lt;th&gt;数据源&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Reader(读)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Writer(写)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;文档&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDBMS 关系型数据库&lt;/td&gt; &#xA;   &lt;td&gt;MySQL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/mysqlreader/doc/mysqlreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/mysqlwriter/doc/mysqlwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td&gt;Oracle &amp;nbsp; &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&amp;nbsp; &amp;nbsp; √ &amp;nbsp; &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&amp;nbsp; &amp;nbsp; √ &amp;nbsp; &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/oraclereader/doc/oraclereader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/oraclewriter/doc/oraclewriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td&gt;OceanBase &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&amp;nbsp; &amp;nbsp; √ &amp;nbsp; &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&amp;nbsp; &amp;nbsp; √ &amp;nbsp; &amp;nbsp;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://open.oceanbase.com/docs/community/oceanbase-database/V3.1.0/use-datax-to-full-migration-data-to-oceanbase&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://open.oceanbase.com/docs/community/oceanbase-database/V3.1.0/use-datax-to-full-migration-data-to-oceanbase&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SQLServer&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/sqlserverreader/doc/sqlserverreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/sqlserverwriter/doc/sqlserverwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PostgreSQL&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/postgresqlreader/doc/postgresqlreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/postgresqlwriter/doc/postgresqlwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;DRDS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/drdsreader/doc/drdsreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/drdswriter/doc/drdswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Apache Doris&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/doriswriter/doc/doriswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;StarRocks&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/starrockswriter/doc/starrockswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;通用RDBMS(支持所有关系型数据库)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/rdbmsreader/doc/rdbmsreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/rdbmswriter/doc/rdbmswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;阿里云数仓数据存储&lt;/td&gt; &#xA;   &lt;td&gt;ODPS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/odpsreader/doc/odpsreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/odpswriter/doc/odpswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ADS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/adswriter/doc/adswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OSS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/ossreader/doc/ossreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/osswriter/doc/osswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OCS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/ocswriter/doc/ocswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;NoSQL数据存储&lt;/td&gt; &#xA;   &lt;td&gt;OTS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/otsreader/doc/otsreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/otswriter/doc/otswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hbase0.94&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hbase094xreader/doc/hbase094xreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hbase094xwriter/doc/hbase094xwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hbase1.1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hbase11xreader/doc/hbase11xreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hbase11xwriter/doc/hbase11xwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Phoenix4.x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hbase11xsqlreader/doc/hbase11xsqlreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hbase11xsqlwriter/doc/hbase11xsqlwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Phoenix5.x&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hbase20xsqlreader/doc/hbase20xsqlreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hbase20xsqlwriter/doc/hbase20xsqlwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;MongoDB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/mongodbreader/doc/mongodbreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/mongodbwriter/doc/mongodbwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Hive&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hdfsreader/doc/hdfsreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hdfswriter/doc/hdfswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Cassandra&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/cassandrareader/doc/cassandrareader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/cassandrawriter/doc/cassandrawriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;无结构化数据存储&lt;/td&gt; &#xA;   &lt;td&gt;TxtFile&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/txtfilereader/doc/txtfilereader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/txtfilewriter/doc/txtfilewriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;FTP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/ftpreader/doc/ftpreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/ftpwriter/doc/ftpwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HDFS&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hdfsreader/doc/hdfsreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/hdfswriter/doc/hdfswriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Elasticsearch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/elasticsearchwriter/doc/elasticsearchwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;时间序列数据库&lt;/td&gt; &#xA;   &lt;td&gt;OpenTSDB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/opentsdbreader/doc/opentsdbreader.md&#34;&gt;读&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TSDB&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/tsdbreader/doc/tsdbreader.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/tsdbwriter/doc/tsdbhttpwriter.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TDengine&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;√&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/tdenginereader/doc/tdenginereader-CN.md&#34;&gt;读&lt;/a&gt; 、&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/tdenginewriter/doc/tdenginewriter-CN.md&#34;&gt;写&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;阿里云DataWorks数据集成&lt;/h1&gt; &#xA;&lt;p&gt;目前DataX的已有能力已经全部融和进阿里云的数据集成，并且比DataX更加高效、安全，同时数据集成具备DataX不具备的其它高级特性和功能。可以理解为数据集成是DataX的全面升级的商业化用版本，为企业可以提供稳定、可靠、安全的数据传输服务。与DataX相比，数据集成主要有以下几大突出特点：&lt;/p&gt; &#xA;&lt;p&gt;支持实时同步：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;功能简介：&lt;a href=&#34;https://help.aliyun.com/document_detail/181912.html&#34;&gt;https://help.aliyun.com/document_detail/181912.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持的数据源：&lt;a href=&#34;https://help.aliyun.com/document_detail/146778.html&#34;&gt;https://help.aliyun.com/document_detail/146778.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;支持数据处理：&lt;a href=&#34;https://help.aliyun.com/document_detail/146777.html&#34;&gt;https://help.aliyun.com/document_detail/146777.html&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;离线同步数据源种类大幅度扩充：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;新增比如：DB2、Kafka、Hologres、MetaQ、SAPHANA、达梦等等，持续扩充中&lt;/li&gt; &#xA; &lt;li&gt;离线同步支持的数据源：&lt;a href=&#34;https://help.aliyun.com/document_detail/137670.html&#34;&gt;https://help.aliyun.com/document_detail/137670.html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;具备同步解决方案： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;解决方案系统：&lt;a href=&#34;https://help.aliyun.com/document_detail/171765.html&#34;&gt;https://help.aliyun.com/document_detail/171765.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;一键全增量：&lt;a href=&#34;https://help.aliyun.com/document_detail/175676.html&#34;&gt;https://help.aliyun.com/document_detail/175676.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;整库迁移：&lt;a href=&#34;https://help.aliyun.com/document_detail/137809.html&#34;&gt;https://help.aliyun.com/document_detail/137809.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;批量上云：&lt;a href=&#34;https://help.aliyun.com/document_detail/146671.html&#34;&gt;https://help.aliyun.com/document_detail/146671.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;更新更多能力请访问：&lt;a href=&#34;https://help.aliyun.com/document_detail/137663.html&#34;&gt;https://help.aliyun.com/document_detail/137663.html&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;我要开发新的插件&lt;/h1&gt; &#xA;&lt;p&gt;请点击：&lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/dataxPluginDev.md&#34;&gt;DataX插件开发宝典&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;重要版本更新说明&lt;/h1&gt; &#xA;&lt;p&gt;DataX 后续计划月度迭代更新，也欢迎感兴趣的同学提交 Pull requests，月度更新内容会介绍介绍如下。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;[datax_v202209]（&lt;a href=&#34;https://github.com/alibaba/DataX/releases/tag/datax_v202209&#34;&gt;https://github.com/alibaba/DataX/releases/tag/datax_v202209&lt;/a&gt;)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;涉及通道能力更新（MaxCompute、Datahub、SLS等）、安全漏洞更新、通用打包更新等&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;[datax_v202205]（&lt;a href=&#34;https://github.com/alibaba/DataX/releases/tag/datax_v202205&#34;&gt;https://github.com/alibaba/DataX/releases/tag/datax_v202205&lt;/a&gt;)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;涉及通道能力更新（MaxCompute、Hologres、OSS、Tdengine等）、安全漏洞更新、通用打包更新等&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;项目成员&lt;/h1&gt; &#xA;&lt;p&gt;核心Contributions: 言柏 、枕水、秋奇、青砾、一斅、云时&lt;/p&gt; &#xA;&lt;p&gt;感谢天烬、光戈、祁然、巴真、静行对DataX做出的贡献。&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This software is free to use under the Apache License &lt;a href=&#34;https://github.com/alibaba/DataX/raw/master/license.txt&#34;&gt;Apache license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;p&gt;请及时提出issue给我们。请前往：&lt;a href=&#34;https://github.com/alibaba/DataX/issues&#34;&gt;DataxIssue&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;开源版DataX企业用户&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/alibaba/DataX/raw/master/images/datax-enterprise-users.jpg&#34; alt=&#34;Datax-logo&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;长期招聘 联系邮箱：datax@alibabacloud.com&#xA;【JAVA开发职位】&#xA;职位名称：JAVA资深开发工程师/专家/高级专家&#xA;工作年限 : 2年以上&#xA;学历要求 : 本科（如果能力靠谱，这些都不是条件）&#xA;期望层级 : P6/P7/P8&#xA;&#xA;岗位描述：&#xA;    1. 负责阿里云大数据平台（数加）的开发设计。 &#xA;    2. 负责面向政企客户的大数据相关产品开发；&#xA;    3. 利用大规模机器学习算法挖掘数据之间的联系，探索数据挖掘技术在实际场景中的产品应用 ；&#xA;    4. 一站式大数据开发平台&#xA;    5. 大数据任务调度引擎&#xA;    6. 任务执行引擎&#xA;    7. 任务监控告警&#xA;    8. 海量异构数据同步&#xA;&#xA;岗位要求：&#xA;    1. 拥有3年以上JAVA Web开发经验；&#xA;    2. 熟悉Java的基础技术体系。包括JVM、类装载、线程、并发、IO资源管理、网络；&#xA;    3. 熟练使用常用Java技术框架、对新技术框架有敏锐感知能力；深刻理解面向对象、设计原则、封装抽象；&#xA;    4. 熟悉HTML/HTML5和JavaScript；熟悉SQL语言；&#xA;    5. 执行力强，具有优秀的团队合作精神、敬业精神；&#xA;    6. 深刻理解设计模式及应用场景者加分；&#xA;    7. 具有较强的问题分析和处理能力、比较强的动手能力，对技术有强烈追求者优先考虑；&#xA;    8. 对高并发、高稳定可用性、高性能、大数据处理有过实际项目及产品经验者优先考虑；&#xA;    9. 有大数据产品、云产品、中间件技术解决方案者优先考虑。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;用户咨询支持：&lt;/p&gt; &#xA;&lt;p&gt;钉钉群目前暂时受到了一些管控策略影响，建议大家有问题优先在这里提交问题 Issue，DataX研发和社区会定期回答Issue中的问题，知识库丰富后也能帮助到后来的使用者。&lt;/p&gt;</summary>
  </entry>
</feed>