<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-23T01:46:41Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zxing/zxing</title>
    <updated>2022-10-23T01:46:41Z</updated>
    <id>tag:github.com,2022-10-23:/zxing/zxing</id>
    <link href="https://github.com/zxing/zxing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ZXing (&#34;Zebra Crossing&#34;) barcode scanning library for Java, Android&lt;/p&gt;&lt;hr&gt;&lt;img align=&#34;right&#34; src=&#34;https://raw.github.com/wiki/zxing/zxing/zxing-logo.png&#34;&gt; &#xA;&lt;h2&gt;Project in Maintenance Mode Only&lt;/h2&gt; &#xA;&lt;p&gt;The project is in maintenance mode, meaning, changes are driven by contributed patches. Only bug fixes and minor enhancements will be considered. The Barcode Scanner app can no longer be published, so it&#39;s unlikely any changes will be accepted for it. There is otherwise no active development or roadmap for this project. It is &#34;DIY&#34;.&lt;/p&gt; &#xA;&lt;h2&gt;Get Started Developing&lt;/h2&gt; &#xA;&lt;p&gt;To get started, please visit: &lt;a href=&#34;https://github.com/zxing/zxing/wiki/Getting-Started-Developing&#34;&gt;https://github.com/zxing/zxing/wiki/Getting-Started-Developing&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;ZXing (&#34;zebra crossing&#34;) is an open-source, multi-format 1D/2D barcode image processing library implemented in Java, with ports to other languages.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Formats&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;1D product&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;1D industrial&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;2D&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;UPC-A&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Code 39&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;QR Code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;UPC-E&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Code 93&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Data Matrix&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;EAN-8&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Code 128&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Aztec&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;EAN-13&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Codabar&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;PDF 417&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;UPC/EAN Extension 2/5&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;ITF&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;MaxiCode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;RSS-14&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;RSS-Expanded&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;h3&gt;Active&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;core&lt;/td&gt; &#xA;   &lt;td&gt;The core image decoding library, and test code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;javase&lt;/td&gt; &#xA;   &lt;td&gt;JavaSE-specific client code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android&lt;/td&gt; &#xA;   &lt;td&gt;Android client Barcode Scanner &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.zxing.client.android&#34;&gt;&lt;img height=&#34;62&#34; width=&#34;161&#34; src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android-integration&lt;/td&gt; &#xA;   &lt;td&gt;Supports integration with Barcode Scanner via &lt;code&gt;Intent&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android-core&lt;/td&gt; &#xA;   &lt;td&gt;Android-related code shared among &lt;code&gt;android&lt;/code&gt;, other Android apps&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zxingorg&lt;/td&gt; &#xA;   &lt;td&gt;The source behind &lt;code&gt;zxing.org&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;zxing.appspot.com&lt;/td&gt; &#xA;   &lt;td&gt;The source behind web-based barcode generator at &lt;code&gt;zxing.appspot.com&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Available in previous releases&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zxing/zxing/tree/00f634024ceeee591f54e6984ea7dd666fab22ae/cpp&#34;&gt;cpp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C++ port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zxing/zxing/tree/00f634024ceeee591f54e6984ea7dd666fab22ae/iphone&#34;&gt;iphone&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iPhone client&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zxing/zxing/tree/00f634024ceeee591f54e6984ea7dd666fab22ae/objc&#34;&gt;objc&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Objective C port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zxing/zxing/tree/c1df162b95e07928afbd4830798cc1408af1ac67/actionscript&#34;&gt;actionscript&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Partial ActionScript port&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zxing/zxing/tree/a95a8fee842f67fb43799a8e0e70e4c68b509c43/jruby&#34;&gt;jruby&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;JRuby wrapper&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;ZXing-based third-party open source projects&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/scytheStudio/SCodes&#34;&gt;SCodes&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Qt &amp;amp; Qml wrapper&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ftylitak/qzxing&#34;&gt;QZXing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;port to Qt framework&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/glassechidna/zxing-cpp&#34;&gt;glassechidna/zxing-cpp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;port to C++ (forked from the &lt;a href=&#34;https://github.com/zxing/zxing/tree/00f634024ceeee591f54e6984ea7dd666fab22ae/cpp&#34;&gt;deprecated official C++ port&lt;/a&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zxing-cpp/zxing-cpp&#34;&gt;zxing-cpp/zxing-cpp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;latest/active port to C++, includes Android, iOS, Python, WASM and WinRT wrappers&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/glassechidna/zxing_cpp.rb&#34;&gt;zxing_cpp.rb&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;bindings for Ruby (not just JRuby), powered by &lt;a href=&#34;https://github.com/glassechidna/zxing-cpp&#34;&gt;zxing-cpp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/LazarSoft/jsqrcode&#34;&gt;jsqrcode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;port to JavaScript&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/oostendo/python-zxing&#34;&gt;python-zxing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;bindings for Python&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/micjahn/ZXing.Net&#34;&gt;ZXing .NET&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;port to .NET and C#, and related Windows platform&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/khanamiryan/php-qrcode-detector-decoder&#34;&gt;php-qrcode-detector-decoder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;port to PHP&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Spelt/ZXing.Delphi&#34;&gt;ZXing Delphi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Port to native Delphi object pascal, targeted at Firemonkey compatible devices (IOS/Android/Win/OSX) and VCL.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/TheLevelUp/ZXingObjC&#34;&gt;ZXingObjC&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Port to Objective-C&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/dsiddharth2/php-zxing&#34;&gt;php-zxing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PHP wrapper to Zxing Java library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/zxing-js/library&#34;&gt;zxing-js/library&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TypeScript port of ZXing library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ChenjieXu/pyzxing&#34;&gt;pyzxing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python wrapper to ZXing library&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/shirne/zxing-dart&#34;&gt;zxing-dart&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Port to dart&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Other related third-party open source projects&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://barcode4j.sourceforge.net/&#34;&gt;Barcode4J&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generator library in Java&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://boofcv.org&#34;&gt;BoofCV&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generator and reader library in Java&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://zbar.sourceforge.net/&#34;&gt;ZBar&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reader library in C99&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/woo-j/OkapiBarcode&#34;&gt;OkapiBarcode&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generator library in Java&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zxing.org/w/decode.jspx&#34;&gt;Online Decoder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zxing.appspot.com/generator&#34;&gt;QR Code Generator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zxing.github.io/zxing/apidocs/&#34;&gt;Javadoc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zxing.github.io/zxing/&#34;&gt;Documentation Site&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contacting&lt;/h2&gt; &#xA;&lt;p&gt;Post to the &lt;a href=&#34;https://groups.google.com/group/zxing&#34;&gt;discussion forum&lt;/a&gt; or tag a question with &lt;a href=&#34;https://stackoverflow.com/questions/tagged/zxing&#34;&gt;&lt;code&gt;zxing&lt;/code&gt; on StackOverflow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Etcetera&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/gh/zxing/zxing&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/zxing/zxing/branch/master/graph/badge.svg?token=6RrJHvUMDl&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/zxing/zxing/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=zxing/zxing&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/5d1186edeb714f0187e3eb18cc6aeef1&#34; alt=&#34;Codacy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;QR code is trademarked by Denso Wave, inc. Thanks to Haase &amp;amp; Martin OHG for contributing the logo.&lt;/p&gt; &#xA;&lt;p&gt;Optimized with &lt;a href=&#34;https://www.ej-technologies.com/products/jprofiler/overview.html&#34;&gt;&lt;img src=&#34;https://www.ej-technologies.com/images/banners/jprofiler_small.png&#34; alt=&#34;JProfiler&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jeremylong/DependencyCheck</title>
    <updated>2022-10-23T01:46:41Z</updated>
    <id>tag:github.com,2022-10-23:/jeremylong/DependencyCheck</id>
    <link href="https://github.com/jeremylong/DependencyCheck" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OWASP dependency-check is a software composition analysis utility that detects publicly disclosed vulnerabilities in application dependencies.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://mvnrepository.com/artifact/org.owasp/dependency-check-maven&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.owasp/dependency-check-maven.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/jeremylong/DependencyCheck/workflows/Build%20and%20Deploy/badge.svg?branch=main&#34; alt=&#34;Build and Deploy&#34;&gt; &lt;a href=&#34;https://scan.coverity.com/projects/dependencycheck&#34;&gt;&lt;img src=&#34;https://img.shields.io/coverity/scan/1654.svg?sanitize=true&#34; alt=&#34;Coverity Scan Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/app/jeremylong/DependencyCheck?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=jeremylong/DependencyCheck&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://api.codacy.com/project/badge/Grade/6b6021d481dc41a888c5da0d9ecf9494&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/843&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/843/badge&#34; alt=&#34;CII Best Practices&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-blue.svg?sanitize=true&#34; alt=&#34;Apache 2.0 License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.toolswatch.org/2018/05/black-hat-arsenal-usa-2018-the-w0w-lineup/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/toolswatch/badges/master/arsenal/usa/2018.svg?sanitize=true&#34; alt=&#34;Black Hat Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.toolswatch.org/2015/06/black-hat-arsenal-usa-2015-speakers-lineup/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/arsenal/2015.svg?sanitize=true&#34; alt=&#34;Black Hat Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.toolswatch.org/2014/06/black-hat-usa-2014-arsenal-tools-speaker-list/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/arsenal/2014.svg?sanitize=true&#34; alt=&#34;Black Hat Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.toolswatch.org/2013/06/announcement-blackhat-arsenal-usa-2013-selected-tools/&#34;&gt;&lt;img src=&#34;https://www.toolswatch.org/badges/arsenal/2013.svg?sanitize=true&#34; alt=&#34;Black Hat Arsenal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Dependency-Check&lt;/h1&gt; &#xA;&lt;p&gt;Dependency-Check is a Software Composition Analysis (SCA) tool that attempts to detect publicly disclosed vulnerabilities contained within a project&#39;s dependencies. It does this by determining if there is a Common Platform Enumeration (CPE) identifier for a given dependency. If found, it will generate a report linking to the associated CVE entries.&lt;/p&gt; &#xA;&lt;p&gt;Documentation and links to production binary releases can be found on the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/&#34;&gt;github pages&lt;/a&gt;. Additionally, more information about the architecture and ways to extend dependency-check can be found on the &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck/wiki&#34;&gt;wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;7.0.0 Upgrade Notice&lt;/h2&gt; &#xA;&lt;p&gt;If upgrading to 7.0.0 or higher, there were breaking changes. If you get an error indicating you can&#39;t connect to the database you will need to run the purge command to remove the old database:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gradle: &lt;code&gt;./gradlew dependencyCheckPurge&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;maven: &lt;code&gt;mvn org.owasp:dependency-check-maven:7.0.0:purge&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;cli: &lt;code&gt;dependency-check.sh --purge&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Homebrew users upgrading to dependency-check 7.0.0 will need to purge their old database.&lt;/p&gt; &#xA;&lt;h2&gt;Current Releases&lt;/h2&gt; &#xA;&lt;h3&gt;Jenkins Plugin&lt;/h3&gt; &#xA;&lt;p&gt;For instructions on the use of the Jenkins plugin please see the &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/OWASP+Dependency-Check+Plugin&#34;&gt;OWASP Dependency-Check Plugin page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Command Line&lt;/h3&gt; &#xA;&lt;p&gt;More detailed instructions can be found on the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/dependency-check-cli/&#34;&gt;dependency-check github pages&lt;/a&gt;. The latest CLI can be downloaded from github in the &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck/releases&#34;&gt;releases section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On *nix&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./bin/dependency-check.sh -h&#xA;$ ./bin/dependency-check.sh --out . --scan [path to jar files to be scanned]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; .\bin\dependency-check.bat -h&#xA;&amp;gt; .\bin\dependency-check.bat --out . --scan [path to jar files to be scanned]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Mac with &lt;a href=&#34;http://brew.sh&#34;&gt;Homebrew&lt;/a&gt; Note - homebrew users upgrading from 5.x to 6.0.0 will need to run &lt;code&gt;dependency-check.sh --purge&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ brew update &amp;amp;&amp;amp; brew install dependency-check&#xA;$ dependency-check -h&#xA;$ dependency-check --out . --scan [path to jar files to be scanned]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Maven Plugin&lt;/h3&gt; &#xA;&lt;p&gt;More detailed instructions can be found on the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/dependency-check-maven&#34;&gt;dependency-check-maven github pages&lt;/a&gt;. By default, the plugin is tied to the &lt;code&gt;verify&lt;/code&gt; phase (i.e. &lt;code&gt;mvn verify&lt;/code&gt;). Alternatively, one can directly invoke the plugin via &lt;code&gt;mvn org.owasp:dependency-check-maven:check&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The dependency-check plugin can be configured using the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;project&amp;gt;&#xA;    &amp;lt;build&amp;gt;&#xA;        &amp;lt;plugins&amp;gt;&#xA;            ...&#xA;            &amp;lt;plugin&amp;gt;&#xA;              &amp;lt;groupId&amp;gt;org.owasp&amp;lt;/groupId&amp;gt;&#xA;              &amp;lt;artifactId&amp;gt;dependency-check-maven&amp;lt;/artifactId&amp;gt;&#xA;              &amp;lt;executions&amp;gt;&#xA;                  &amp;lt;execution&amp;gt;&#xA;                      &amp;lt;goals&amp;gt;&#xA;                          &amp;lt;goal&amp;gt;check&amp;lt;/goal&amp;gt;&#xA;                      &amp;lt;/goals&amp;gt;&#xA;                  &amp;lt;/execution&amp;gt;&#xA;              &amp;lt;/executions&amp;gt;&#xA;            &amp;lt;/plugin&amp;gt;&#xA;            ...&#xA;        &amp;lt;/plugins&amp;gt;&#xA;        ...&#xA;    &amp;lt;/build&amp;gt;&#xA;    ...&#xA;&amp;lt;/project&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Gradle Plugin&lt;/h3&gt; &#xA;&lt;p&gt;For instructions on the use of the Gradle Plugin, please see the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/dependency-check-gradle&#34;&gt;dependency-check-gradle github page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Ant Task&lt;/h3&gt; &#xA;&lt;p&gt;For instructions on the use of the Ant Task, please see the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/dependency-check-ant&#34;&gt;dependency-check-ant github page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Development Prerequisites&lt;/h2&gt; &#xA;&lt;p&gt;For installation to pass, you must have the following components installed:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java: &lt;code&gt;java -version&lt;/code&gt; 1.8&lt;/li&gt; &#xA; &lt;li&gt;Maven: &lt;code&gt;mvn -version&lt;/code&gt; 3.5.0 and higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Tests cases require:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;dotnet core version 6.0&lt;/li&gt; &#xA; &lt;li&gt;Go: &lt;code&gt;go version&lt;/code&gt; 1.12 and higher&lt;/li&gt; &#xA; &lt;li&gt;Ruby &lt;a href=&#34;https://github.com/rubysec/bundler-audit#install&#34;&gt;bundler-audit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://classic.yarnpkg.com/en/docs/install/&#34;&gt;Yarn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pnpm.io/installation&#34;&gt;pnpm&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development Usage&lt;/h2&gt; &#xA;&lt;p&gt;The following instructions outline how to compile and use the current snapshot. While every intention is to maintain a stable snapshot it is recommended that the release versions listed above be used.&lt;/p&gt; &#xA;&lt;p&gt;The repository has some large files due to test resources. The team has tried to clean up the history as much as possible. However, it is recommended that you perform a shallow clone to save yourself time:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone --depth 1 https://github.com/jeremylong/DependencyCheck.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On *nix&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn -s settings.xml install&#xA;$ ./cli/target/release/bin/dependency-check.sh -h&#xA;$ ./cli/target/release/bin/dependency-check.sh --out . --scan ./src/test/resources&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;gt; mvn -s settings.xml install&#xA;&amp;gt; .\cli\target\release\bin\dependency-check.bat -h&#xA;&amp;gt; .\cli\target\release\bin\dependency-check.bat --out . --scan ./src/test/resources&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then load the resulting &#39;dependency-check-report.html&#39; into your favorite browser.&lt;/p&gt; &#xA;&lt;h4&gt;Building without running tests&lt;/h4&gt; &#xA;&lt;p&gt;To speed up your turnaround cycle times, you can also compile without running the tests each time:&lt;br&gt; &lt;code&gt;mvn -s settings.xml install -Dmaven.test.skip=true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please remember to at least run the tests once before opening the PR. :)&lt;/p&gt; &#xA;&lt;h3&gt;IntelliJ Idea&lt;/h3&gt; &#xA;&lt;p&gt;To be able to debug your tests in IntelliJ Idea, you can introduce a maven configuration that executes your test and enables debugging with breakpoints etc.&lt;br&gt; Basically, you do what´s described in &lt;a href=&#34;https://www.jetbrains.com/help/idea/work-with-tests-in-maven.html#run_single_test&#34;&gt;https://www.jetbrains.com/help/idea/work-with-tests-in-maven.html#run_single_test&lt;/a&gt; and set the &lt;code&gt;forkCount&lt;/code&gt; to 0, otherwise debugging won´t work.&lt;/p&gt; &#xA;&lt;p&gt;Step by step:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Run -&amp;gt; Edit Configurations&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;+ (Add new configuration) -&amp;gt; Maven&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Give the Configuration a name, e.g. &lt;code&gt;Run tests&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Choose working directory, e.g. &lt;code&gt;core&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;In &lt;code&gt;command line&lt;/code&gt;, enter &lt;code&gt;-DforkCount=0 -f pom.xml -s ../settings.xml test&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Press &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Run -&amp;gt; Debug&lt;/code&gt;, then choose the newly created run configuration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;IntelliJ will now execute the test run for the &lt;code&gt;core&lt;/code&gt; subproject with enabled debugging. Breakpoints set anywhere in code should work.&lt;/p&gt; &#xA;&lt;h4&gt;Only test one function or one class&lt;/h4&gt; &#xA;&lt;p&gt;If you would like to speed up your turnaround cycle times, you can also just test one function or one test class.&lt;br&gt; This works by adding &lt;code&gt;-Dtest=MyTestClass&lt;/code&gt; or &lt;code&gt;-Dtest=MyTestClass#myTestFunction&lt;/code&gt; to the run configuration. The complete command line in the run configuration then would be:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;-Dtest=MyTestClass#myTestFunction -DforkCount=0 -f pom.xml -s ../settings.xml test&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;In the following example it is assumed that the source to be checked is in the current working directory and the reports will be written to &lt;code&gt;$(pwd)/odc-reports&lt;/code&gt;. Persistent data and cache directories are used, allowing you to destroy the container after running.&lt;/p&gt; &#xA;&lt;p&gt;For Linux:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/sh&#xA;&#xA;DC_VERSION=&#34;latest&#34;&#xA;DC_DIRECTORY=$HOME/OWASP-Dependency-Check&#xA;DC_PROJECT=&#34;dependency-check scan: $(pwd)&#34;&#xA;DATA_DIRECTORY=&#34;$DC_DIRECTORY/data&#34;&#xA;CACHE_DIRECTORY=&#34;$DC_DIRECTORY/data/cache&#34;&#xA;&#xA;if [ ! -d &#34;$DATA_DIRECTORY&#34; ]; then&#xA;    echo &#34;Initially creating persistent directory: $DATA_DIRECTORY&#34;&#xA;    mkdir -p &#34;$DATA_DIRECTORY&#34;&#xA;fi&#xA;if [ ! -d &#34;$CACHE_DIRECTORY&#34; ]; then&#xA;    echo &#34;Initially creating persistent directory: $CACHE_DIRECTORY&#34;&#xA;    mkdir -p &#34;$CACHE_DIRECTORY&#34;&#xA;fi&#xA;&#xA;# Make sure we are using the latest version&#xA;docker pull owasp/dependency-check:$DC_VERSION&#xA;&#xA;docker run --rm \&#xA;    -e user=$USER \&#xA;    -u $(id -u ${USER}):$(id -g ${USER}) \&#xA;    --volume $(pwd):/src:z \&#xA;    --volume &#34;$DATA_DIRECTORY&#34;:/usr/share/dependency-check/data:z \&#xA;    --volume $(pwd)/odc-reports:/report:z \&#xA;    owasp/dependency-check:$DC_VERSION \&#xA;    --scan /src \&#xA;    --format &#34;ALL&#34; \&#xA;    --project &#34;$DC_PROJECT&#34; \&#xA;    --out /report&#xA;    # Use suppression like this: (where /src == $pwd)&#xA;    # --suppression &#34;/src/security/dependency-check-suppression.xml&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;@echo off&#xA;&#xA;set DC_VERSION=&#34;latest&#34;&#xA;set DC_DIRECTORY=%USERPROFILE%\OWASP-Dependency-Check&#xA;SET DC_PROJECT=&#34;dependency-check scan: %CD%&#34;&#xA;set DATA_DIRECTORY=&#34;%DC_DIRECTORY%\data&#34;&#xA;set CACHE_DIRECTORY=&#34;%DC_DIRECTORY%\data\cache&#34;&#xA;&#xA;IF NOT EXIST %DATA_DIRECTORY% (&#xA;    echo Initially creating persistent directory: %DATA_DIRECTORY%&#xA;    mkdir %DATA_DIRECTORY%&#xA;)&#xA;IF NOT EXIST %CACHE_DIRECTORY% (&#xA;    echo Initially creating persistent directory: %CACHE_DIRECTORY%&#xA;    mkdir %CACHE_DIRECTORY%&#xA;)&#xA;&#xA;rem Make sure we are using the latest version&#xA;docker pull owasp/dependency-check:%DC_VERSION%&#xA;&#xA;docker run --rm ^&#xA;    --volume %CD%:/src ^&#xA;    --volume %DATA_DIRECTORY%:/usr/share/dependency-check/data ^&#xA;    --volume %CD%/odc-reports:/report ^&#xA;    owasp/dependency-check:%DC_VERSION% ^&#xA;    --scan /src ^&#xA;    --format &#34;ALL&#34; ^&#xA;    --project &#34;%DC_PROJECT%&#34; ^&#xA;    --out /report&#xA;    rem Use suppression like this: (where /src == %CD%)&#xA;    rem --suppression &#34;/src/security/dependency-check-suppression.xml&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building From Source&lt;/h2&gt; &#xA;&lt;p&gt;To build dependency-check (using Java 8) run the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn -s settings.xml install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building the documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation on the &lt;a href=&#34;http://jeremylong.github.io/DependencyCheck/&#34;&gt;github pages&lt;/a&gt; is generated from this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn -s settings.xml site  site:staging&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once done, point your browser to &lt;code&gt;./target/staging/index.html&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building The Docker Image&lt;/h2&gt; &#xA;&lt;p&gt;To build dependency-check docker image run the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mvn -s settings.xml install&#xA;./build-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Permission to modify and redistribute is granted under the terms of the Apache 2.0 license. See the &lt;a href=&#34;https://raw.githubusercontent.com/jeremylong/DependencyCheck/master/LICENSE.txt&#34;&gt;LICENSE.txt&lt;/a&gt; file for the full license.&lt;/p&gt; &#xA;&lt;p&gt;Dependency-Check makes use of several other open source libraries. Please see the &lt;a href=&#34;https://github.com/jeremylong/DependencyCheck/raw/master/NOTICE.txt&#34;&gt;NOTICE.txt&lt;/a&gt; file for more information.&lt;/p&gt; &#xA;&lt;p&gt;Copyright (c) 2012-2022 Jeremy Long. All Rights Reserved.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>isl-org/MiDaS</title>
    <updated>2022-10-23T01:46:41Z</updated>
    <id>tag:github.com,2022-10-23:/isl-org/MiDaS</id>
    <link href="https://github.com/isl-org/MiDaS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Code for robust monocular depth estimation described in &#34;Ranftl et. al., Towards Robust Monocular Depth Estimation: Mixing Datasets for Zero-shot Cross-dataset Transfer, TPAMI 2022&#34;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Towards Robust Monocular Depth Estimation: Mixing Datasets for Zero-shot Cross-dataset Transfer&lt;/h2&gt; &#xA;&lt;p&gt;This repository contains code to compute depth from a single image. It accompanies our &lt;a href=&#34;https://arxiv.org/abs/1907.01341v3&#34;&gt;paper&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Towards Robust Monocular Depth Estimation: Mixing Datasets for Zero-shot Cross-dataset Transfer&lt;br&gt; René Ranftl, Katrin Lasinger, David Hafner, Konrad Schindler, Vladlen Koltun&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;and our &lt;a href=&#34;https://arxiv.org/abs/2103.13413&#34;&gt;preprint&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Vision Transformers for Dense Prediction&lt;br&gt; René Ranftl, Alexey Bochkovskiy, Vladlen Koltun&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;MiDaS was trained on 10 datasets (ReDWeb, DIML, Movies, MegaDepth, WSVD, TartanAir, HRWSI, ApolloScape, BlendedMVS, IRS) with multi-objective optimization. The original model that was trained on 5 datasets (&lt;code&gt;MIX 5&lt;/code&gt; in the paper) can be found &lt;a href=&#34;https://github.com/intel-isl/MiDaS/releases/tag/v2&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Changelog&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[Sep 2021] Integrated to &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;Huggingface Spaces&lt;/a&gt; with &lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;. See &lt;a href=&#34;https://huggingface.co/spaces/akhaliq/DPT-Large&#34;&gt;Gradio Web Demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;[Apr 2021] Released MiDaS v3.0: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;New models based on &lt;a href=&#34;https://arxiv.org/abs/2103.13413&#34;&gt;Dense Prediction Transformers&lt;/a&gt; are on average &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/MiDaS/master/#Accuracy&#34;&gt;21% more accurate&lt;/a&gt; than MiDaS v2.1&lt;/li&gt; &#xA;   &lt;li&gt;Additional models can be found &lt;a href=&#34;https://github.com/intel-isl/DPT&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Nov 2020] Released MiDaS v2.1: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;New model that was trained on 10 datasets and is on average about &lt;a href=&#34;https://raw.githubusercontent.com/isl-org/MiDaS/master/#Accuracy&#34;&gt;10% more accurate&lt;/a&gt; than &lt;a href=&#34;https://github.com/intel-isl/MiDaS/releases/tag/v2&#34;&gt;MiDaS v2.0&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;New light-weight model that achieves &lt;a href=&#34;https://github.com/intel-isl/MiDaS/tree/master/mobile&#34;&gt;real-time performance&lt;/a&gt; on mobile platforms.&lt;/li&gt; &#xA;   &lt;li&gt;Sample applications for &lt;a href=&#34;https://github.com/intel-isl/MiDaS/tree/master/mobile/ios&#34;&gt;iOS&lt;/a&gt; and &lt;a href=&#34;https://github.com/intel-isl/MiDaS/tree/master/mobile/android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/intel-isl/MiDaS/tree/master/ros&#34;&gt;ROS package&lt;/a&gt; for easy deployment on robots&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;[Jul 2020] Added TensorFlow and ONNX code. Added &lt;a href=&#34;http://35.202.76.57/&#34;&gt;online demo&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;[Dec 2019] Released new version of MiDaS - the new model is significantly more accurate and robust&lt;/li&gt; &#xA; &lt;li&gt;[Jul 2019] Initial release of MiDaS (&lt;a href=&#34;https://github.com/intel-isl/MiDaS/releases/tag/v1&#34;&gt;Link&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Pick one or more models and download corresponding weights to the &lt;code&gt;weights&lt;/code&gt; folder:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For highest quality: &lt;a href=&#34;https://github.com/intel-isl/DPT/releases/download/1_0/dpt_large-midas-2f21e586.pt&#34;&gt;dpt_large&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For moderately less quality, but better speed on CPU and slower GPUs: &lt;a href=&#34;https://github.com/intel-isl/DPT/releases/download/1_0/dpt_hybrid-midas-501f0c75.pt&#34;&gt;dpt_hybrid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For real-time applications on resource-constrained devices: &lt;a href=&#34;https://github.com/AlexeyAB/MiDaS/releases/download/midas_dpt/midas_v21_small-70d6b9c8.pt&#34;&gt;midas_v21_small&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Legacy convolutional model: &lt;a href=&#34;https://github.com/AlexeyAB/MiDaS/releases/download/midas_dpt/midas_v21-f6b98070.pt&#34;&gt;midas_v21&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Set up dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;conda install pytorch torchvision opencv&#xA;pip install timm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The code was tested with Python 3.7, PyTorch 1.8.0, OpenCV 4.5.1, and timm 0.4.5.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Place one or more input images in the folder &lt;code&gt;input&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the model:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;python run.py --model_type dpt_large&#xA;python run.py --model_type dpt_hybrid &#xA;python run.py --model_type midas_v21_small&#xA;python run.py --model_type midas_v21&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The resulting inverse depth maps are written to the &lt;code&gt;output&lt;/code&gt; folder.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;via Docker&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure you have installed Docker and the &lt;a href=&#34;https://github.com/NVIDIA/nvidia-docker/wiki/Installation-(Native-GPU-Support)&#34;&gt;NVIDIA Docker runtime&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Build the Docker image:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker build -t midas .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run inference:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker run --rm --gpus all -v $PWD/input:/opt/MiDaS/input -v $PWD/output:/opt/MiDaS/output midas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This command passes through all of your NVIDIA GPUs to the container, mounts the &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; directories and then runs the inference.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;via PyTorch Hub&lt;/h4&gt; &#xA;&lt;p&gt;The pretrained model is also available on &lt;a href=&#34;https://pytorch.org/hub/intelisl_midas_v2/&#34;&gt;PyTorch Hub&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;via TensorFlow or ONNX&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/intel-isl/MiDaS/tree/master/tf&#34;&gt;README&lt;/a&gt; in the &lt;code&gt;tf&lt;/code&gt; subdirectory.&lt;/p&gt; &#xA;&lt;p&gt;Currently only supports MiDaS v2.1. DPT-based models to be added.&lt;/p&gt; &#xA;&lt;h4&gt;via Mobile (iOS / Android)&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/intel-isl/MiDaS/tree/master/mobile&#34;&gt;README&lt;/a&gt; in the &lt;code&gt;mobile&lt;/code&gt; subdirectory.&lt;/p&gt; &#xA;&lt;h4&gt;via ROS1 (Robot Operating System)&lt;/h4&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/intel-isl/MiDaS/tree/master/ros&#34;&gt;README&lt;/a&gt; in the &lt;code&gt;ros&lt;/code&gt; subdirectory.&lt;/p&gt; &#xA;&lt;p&gt;Currently only supports MiDaS v2.1. DPT-based models to be added.&lt;/p&gt; &#xA;&lt;h3&gt;Accuracy&lt;/h3&gt; &#xA;&lt;p&gt;Zero-shot error (the lower - the better) and speed (FPS):&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Model&lt;/th&gt; &#xA;   &lt;th&gt;DIW, WHDR&lt;/th&gt; &#xA;   &lt;th&gt;Eth3d, AbsRel&lt;/th&gt; &#xA;   &lt;th&gt;Sintel, AbsRel&lt;/th&gt; &#xA;   &lt;th&gt;Kitti, δ&amp;gt;1.25&lt;/th&gt; &#xA;   &lt;th&gt;NyuDepthV2, δ&amp;gt;1.25&lt;/th&gt; &#xA;   &lt;th&gt;TUM, δ&amp;gt;1.25&lt;/th&gt; &#xA;   &lt;th&gt;Speed, FPS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Small models:&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;iPhone 11&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiDaS v2 small&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.1248&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0.1550&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.3300&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;21.81&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;15.73&lt;/td&gt; &#xA;   &lt;td&gt;17.00&lt;/td&gt; &#xA;   &lt;td&gt;0.6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiDaS v2.1 small &lt;a href=&#34;&#34;&gt;URL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0.1344&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.1344&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0.3370&lt;/td&gt; &#xA;   &lt;td&gt;29.27&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;13.43&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;14.53&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Big models:&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GPU RTX 3090&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiDaS v2 large &lt;a href=&#34;https://github.com/intel-isl/MiDaS/releases/download/v2/model-f46da743.pt&#34;&gt;URL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0.1246&lt;/td&gt; &#xA;   &lt;td&gt;0.1290&lt;/td&gt; &#xA;   &lt;td&gt;0.3270&lt;/td&gt; &#xA;   &lt;td&gt;23.90&lt;/td&gt; &#xA;   &lt;td&gt;9.55&lt;/td&gt; &#xA;   &lt;td&gt;14.29&lt;/td&gt; &#xA;   &lt;td&gt;51&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiDaS v2.1 large &lt;a href=&#34;https://github.com/AlexeyAB/MiDaS/releases/download/midas_dpt/midas_v21-f6b98070.pt&#34;&gt;URL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0.1295&lt;/td&gt; &#xA;   &lt;td&gt;0.1155&lt;/td&gt; &#xA;   &lt;td&gt;0.3285&lt;/td&gt; &#xA;   &lt;td&gt;16.08&lt;/td&gt; &#xA;   &lt;td&gt;8.71&lt;/td&gt; &#xA;   &lt;td&gt;12.51&lt;/td&gt; &#xA;   &lt;td&gt;51&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiDaS v3.0 DPT-Hybrid &lt;a href=&#34;https://github.com/intel-isl/DPT/releases/download/1_0/dpt_hybrid-midas-501f0c75.pt&#34;&gt;URL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;0.1106&lt;/td&gt; &#xA;   &lt;td&gt;0.0934&lt;/td&gt; &#xA;   &lt;td&gt;0.2741&lt;/td&gt; &#xA;   &lt;td&gt;11.56&lt;/td&gt; &#xA;   &lt;td&gt;8.69&lt;/td&gt; &#xA;   &lt;td&gt;10.89&lt;/td&gt; &#xA;   &lt;td&gt;46&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MiDaS v3.0 DPT-Large &lt;a href=&#34;https://github.com/intel-isl/DPT/releases/download/1_0/dpt_large-midas-2f21e586.pt&#34;&gt;URL&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.1082&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.0888&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.2697&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;8.46&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;8.32&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;9.97&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;47&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Citation&lt;/h3&gt; &#xA;&lt;p&gt;Please cite our paper if you use this code or any of the models:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@ARTICLE {Ranftl2022,&#xA;    author  = &#34;Ren\&#39;{e} Ranftl and Katrin Lasinger and David Hafner and Konrad Schindler and Vladlen Koltun&#34;,&#xA;    title   = &#34;Towards Robust Monocular Depth Estimation: Mixing Datasets for Zero-Shot Cross-Dataset Transfer&#34;,&#xA;    journal = &#34;IEEE Transactions on Pattern Analysis and Machine Intelligence&#34;,&#xA;    year    = &#34;2022&#34;,&#xA;    volume  = &#34;44&#34;,&#xA;    number  = &#34;3&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you use a DPT-based model, please also cite:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@article{Ranftl2021,&#xA;&#x9;author    = {Ren\&#39;{e} Ranftl and Alexey Bochkovskiy and Vladlen Koltun},&#xA;&#x9;title     = {Vision Transformers for Dense Prediction},&#xA;&#x9;journal   = {ICCV},&#xA;&#x9;year      = {2021},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Acknowledgements&lt;/h3&gt; &#xA;&lt;p&gt;Our work builds on and uses code from &lt;a href=&#34;https://github.com/rwightman/pytorch-image-models&#34;&gt;timm&lt;/a&gt;. We&#39;d like to thank the author for making these libraries available.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;MIT License&lt;/p&gt;</summary>
  </entry>
</feed>