<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Java Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-26T01:55:07Z</updated>
  <subtitle>Weekly Trending of Java in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DTStack/chunjun</title>
    <updated>2023-03-26T01:55:07Z</updated>
    <id>tag:github.com,2023-03-26:/DTStack/chunjun</id>
    <link href="https://github.com/DTStack/chunjun" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A data integration framework&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ChunJun&lt;/h1&gt; &#xA;&lt;p align=&#34;left&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/DTStack/chunjun?style=social&#34; alt=&#34;npm version&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/DTStack/chunjun&#34; alt=&#34;license&#34;&gt; &lt;a href=&#34;https://github.com/DTStack/chunjun/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/DTStack/chunjun/total&#34; alt=&#34;npm downloads&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/gitlab/coverage/DTStack/chunjun/master&#34; alt=&#34;master coverage&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DTStack/chunjun/master/README.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/document-English-blue.svg?sanitize=true&#34; alt=&#34;EN doc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/DTStack/chunjun/master/README_CH.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E6%96%87%E6%A1%A3-%E4%B8%AD%E6%96%87%E7%89%88-blue.svg?sanitize=true&#34; alt=&#34;CN doc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduce&lt;/h2&gt; &#xA;&lt;p&gt;ChunJun is a distributed integration framework, and currently is based on Apache Flink. It was initially known as FlinkX and renamed ChunJun on February 22, 2022. It can realize data synchronization and calculation between various heterogeneous data sources. ChunJun has been deployed and running stably in thousands of companies so far.&lt;/p&gt; &#xA;&lt;p&gt;Official website of ChunJun: &lt;a href=&#34;https://dtstack.github.io/chunjun/&#34;&gt;https://dtstack.github.io/chunjun/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features of ChunJun&lt;/h2&gt; &#xA;&lt;p&gt;ChunJun abstracts different databases into reader/source plugins, writer/sink plugins and lookup plugins, and it has the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Based on the real-time computing engine--Flink, and supports JSON template and SQL script configuration tasks. The SQL script is compatible with Flink SQL syntax;&lt;/li&gt; &#xA; &lt;li&gt;Supports distributed operation, support flink-standalone, yarn-session, yarn-per job and other submission methods;&lt;/li&gt; &#xA; &lt;li&gt;Supports Docker one-click deployment, support deploy and run on k8s;&lt;/li&gt; &#xA; &lt;li&gt;Supports a variety of heterogeneous data sources, and supports synchronization and calculation of more than 20 data sources such as MySQL, Oracle, SQLServer, Hive, Kudu, etc.&lt;/li&gt; &#xA; &lt;li&gt;Easy to expand, highly flexible, newly expanded data source plugins can integrate with existing data source plugins instantly, plugin developers do not need to care about the code logic of other plugins;&lt;/li&gt; &#xA; &lt;li&gt;Not only supports full synchronization, but also supports incremental synchronization and interval training;&lt;/li&gt; &#xA; &lt;li&gt;Not only supports offline synchronization and calculation, but also compatible with real-time scenarios;&lt;/li&gt; &#xA; &lt;li&gt;Supports dirty data storage, and provide indicator monitoring, etc.;&lt;/li&gt; &#xA; &lt;li&gt;Cooperate with the flink checkpoint mechanism to achieve breakpoint resuming, task disaster recovery;&lt;/li&gt; &#xA; &lt;li&gt;Not only supports synchronizing DML data, but also supports DDL synchronization, like &#39;CREATE TABLE&#39;, &#39;ALTER COLUMN&#39;, etc.;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build And Compilation&lt;/h2&gt; &#xA;&lt;h3&gt;Get the code&lt;/h3&gt; &#xA;&lt;p&gt;Use the git to clone the code of ChunJun&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/DTStack/chunjun.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;build&lt;/h3&gt; &#xA;&lt;p&gt;Execute the command in the project directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./mvnw clean package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or execute&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh build/build.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Common problem&lt;/h3&gt; &#xA;&lt;h4&gt;Compiling module &#39;ChunJun-core&#39; then throws &#39;Failed to read artifact descriptor for com.google.errorprone:javac-shaded&#39;&lt;/h4&gt; &#xA;&lt;p&gt;Error message：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;[ERROR]Failed to execute goal com.diffplug.spotless:spotless-maven-plugin:2.4.2:check(spotless-check)on project chunjun-core:&#xA;        Execution spotless-check of goal com.diffplug.spotless:spotless-maven-plugin:2.4.2:check failed:Unable to resolve dependencies:&#xA;        Failed to collect dependencies at com.google.googlejavaformat:google-java-format:jar:1.7-&amp;gt;com.google.errorprone:javac-shaded:jar:9+181-r4173-1:&#xA;        Failed to read artifact descriptor for com.google.errorprone:javac-shaded:jar:9+181-r4173-1:Could not transfer artifact&#xA;        com.google.errorprone:javac-shaded:pom:9+181-r4173-1 from/to aliyunmaven(https://maven.aliyun.com/repository/public): &#xA;        Access denied to:https://maven.aliyun.com/repository/public/com/google/errorprone/javac-shaded/9+181-r4173-1/javac-shaded-9+181-r4173-1.pom -&amp;gt; [Help 1]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Solution： Download the &#39;javac-shaded-9+181-r4173-1.jar&#39; from url &#39;&lt;a href=&#34;https://repo1.maven.org/maven2/com/google/errorprone/javac-shaded/9+181-r4173-1/javac-shaded-9+181-r4173-1.jar&#34;&gt;https://repo1.maven.org/maven2/com/google/errorprone/javac-shaded/9+181-r4173-1/javac-shaded-9+181-r4173-1.jar&lt;/a&gt;&#39;, and then install locally by using command below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn install:install-file -DgroupId=com.google.errorprone -DartifactId=javac-shaded -Dversion=9+181-r4173-1 -Dpackaging=jar -Dfile=./jars/javac-shaded-9+181-r4173-1.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The following table shows the correspondence between the branches of ChunJun and the version of flink. If the versions are not aligned, problems such as &#39;Serialization Exceptions&#39;, &#39;NoSuchMethod Exception&#39;, etc. mysql occur in tasks.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branches&lt;/th&gt; &#xA;   &lt;th&gt;Flink version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;master&lt;/td&gt; &#xA;   &lt;td&gt;1.16.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.12_release&lt;/td&gt; &#xA;   &lt;td&gt;1.12.7&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.10_release&lt;/td&gt; &#xA;   &lt;td&gt;1.10.1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.8_release&lt;/td&gt; &#xA;   &lt;td&gt;1.8.3&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;ChunJun supports running tasks in multiple modes. Different modes depend on different environments and steps. The following are&lt;/p&gt; &#xA;&lt;h3&gt;Local&lt;/h3&gt; &#xA;&lt;p&gt;Local mode does not depend on the Flink environment and Hadoop environment, and starts a JVM process in the local environment to perform tasks.&lt;/p&gt; &#xA;&lt;h4&gt;Steps&lt;/h4&gt; &#xA;&lt;p&gt;Go to the directory of &#39;chunjun-dist&#39; and execute the command below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh bin/chunjun-local.sh  -job $SCRIPT_PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The parameter of &#34;$SCRIPT_PATH&#34; means &#39;the path where the task script is located&#39;. After execute, you can perform a task locally.&lt;/p&gt; &#xA;&lt;p&gt;note:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;when you package in windows and run sh in linux , you need to execute command  sed -i &#34;s/\r//g&#34; bin/*.sh to fix the &#39;\r&#39; problems.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1mT411g7fJ?spm_id_from=333.999.0.0&#34;&gt;Reference video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Standalone&lt;/h3&gt; &#xA;&lt;p&gt;Standalone mode depend on the Flink Standalone environment and does not depend on the Hadoop environment.&lt;/p&gt; &#xA;&lt;h4&gt;Steps&lt;/h4&gt; &#xA;&lt;h5&gt;1. add jars of chunjun&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Find directory of jars: if you build this project using maven, the directory name is &#39;chunjun-dist&#39; ; if you download tar.gz file from release page, after decompression, the directory name would be like &#39;chunjun-assembly-${revision}-chunjun-dist&#39;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy jars to directory of Flink lib, command example:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cp -r chunjun-dist $FLINK_HOME/lib&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Notice: this operation should be executed in all machines of Flink cluster, otherwise some jobs will fail because of ClassNotFoundException.&lt;/p&gt; &#xA;&lt;h5&gt;2. Start Flink Standalone Cluster&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh $FLINK_HOME/bin/start-cluster.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the startup is successful, the default port of Flink Web is 8081, which you can configure in the file of &#39;flink-conf.yaml&#39;. We can access the 8081 port of the current machine to enter the flink web of standalone cluster.&lt;/p&gt; &#xA;&lt;h5&gt;3. Submit task&lt;/h5&gt; &#xA;&lt;p&gt;Go to the directory of &#39;chunjun-dist&#39; and execute the command below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh bin/chunjun-standalone.sh -job chunjun-examples/json/stream/stream.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the command execute successfully, you can observe the task staus on the flink web.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1TT41137UV?spm_id_from=333.999.0.0&#34;&gt;Reference video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Yarn Session&lt;/h3&gt; &#xA;&lt;p&gt;YarnSession mode depends on the Flink jars and Hadoop environments, and the yarn-session needs to be started before the task is submitted.&lt;/p&gt; &#xA;&lt;h4&gt;Steps&lt;/h4&gt; &#xA;&lt;h5&gt;1. Start yarn-session environment&lt;/h5&gt; &#xA;&lt;p&gt;Yarn-session mode depend on Flink and Hadoop environment. You need to set $HADOOP_HOME and $FLINK_HOME in advance, and we need to upload &#39;chunjun-dist&#39; with yarn-session &#39;-t&#39; parameter.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cd $FLINK_HOME/bin&#xA;./yarn-session -t $CHUNJUN_HOME -d&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;2. Submit task&lt;/h5&gt; &#xA;&lt;p&gt;Get the application id $SESSION_APPLICATION_ID corresponding to the yarn-session through yarn web, then enter the directory &#39;chunjun-dist&#39; and execute the command below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh ./bin/chunjun-yarn-session.sh -job chunjun-examples/json/stream/stream.json -confProp {\&#34;yarn.application.id\&#34;:\&#34;SESSION_APPLICATION_ID\&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#39;yarn.application.id&#39; can also be set in &#39;flink-conf.yaml&#39;. After the submission is successful, the task status can be observed on the yarn web.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1oU4y1D7e7?spm_id_from=333.999.0.0&#34;&gt;Reference video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Yarn Per-Job&lt;/h3&gt; &#xA;&lt;p&gt;Yarn Per-Job mode depend on Flink and Hadoop environment. You need to set $HADOOP_HOME and $FLINK_HOME in advance.&lt;/p&gt; &#xA;&lt;h4&gt;Steps&lt;/h4&gt; &#xA;&lt;p&gt;The yarn per-job task can be submitted after the configuration is correct. Then enter the directory &#39;chunjun-dist&#39; and execute the command below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;sh ./bin/chunjun-yarn-perjob.sh -job chunjun-examples/json/stream/stream.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the submission is successful, the task status can be observed on the yarn web.&lt;/p&gt; &#xA;&lt;h2&gt;Docs of Connectors&lt;/h2&gt; &#xA;&lt;p&gt;For details, please visit：&lt;a href=&#34;https://dtstack.github.io/chunjun/documents/&#34;&gt;https://dtstack.github.io/chunjun/documents/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to all contributors! We are very happy that you can contribute Chunjun.&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/DTStack/chunjun/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=DTStack/chunjun&#34; alt=&#34;contributors&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Contributor Over Time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://git-contributor.com?chart=contributorOverTime&amp;amp;repo=DTStack/chunjun&#34;&gt;&lt;img src=&#34;https://contributor-overtime-api.git-contributor.com/contributors-svg?chart=contributorOverTime&amp;amp;repo=DTStack/chunjun&#34; alt=&#34;Stargazers Over Time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;ChunJun is under the Apache 2.0 license. Please visit &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Contact Us&lt;/h2&gt; &#xA;&lt;p&gt;Join ChunJun Slack. &lt;a href=&#34;https://join.slack.com/t/chunjun/shared_invite/zt-1hzmvh0o3-qZ726NXmhClmLFRMpEDHYw&#34;&gt;https://join.slack.com/t/chunjun/shared_invite/zt-1hzmvh0o3-qZ726NXmhClmLFRMpEDHYw&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>awspring/spring-cloud-aws</title>
    <updated>2023-03-26T01:55:07Z</updated>
    <id>tag:github.com,2023-03-26:/awspring/spring-cloud-aws</id>
    <link href="https://github.com/awspring/spring-cloud-aws" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The New Home for Spring Cloud AWS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🍃 Spring Cloud AWS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitpod.io/from-referrer/&#34;&gt;&lt;img src=&#34;https://gitpod.io/button/open-in-gitpod.svg?sanitize=true&#34; alt=&#34;Open in Gitpod&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Simplifies using AWS managed services in a Spring and Spring Boot applications.&lt;/p&gt; &#xA;&lt;p&gt;For a deep dive into the project, refer to the Spring Cloud AWS documentation:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;   &lt;th&gt;Reference Docs&lt;/th&gt; &#xA;   &lt;th&gt;API Docs&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spring Cloud AWS 3.0.0-RC1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.awspring.io/spring-cloud-aws/docs/3.0.0-RC1/reference/html/index.html&#34;&gt;Reference Docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.awspring.io/spring-cloud-aws/docs/3.0.0-RC1/apidocs/index.html&#34;&gt;API Docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spring Cloud AWS 2.4.4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.awspring.io/spring-cloud-aws/docs/2.4.4/reference/html/index.html&#34;&gt;Reference Docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.awspring.io/spring-cloud-aws/docs/2.4.4/apidocs/index.html&#34;&gt;API Docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Spring Cloud AWS 2.3.5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.awspring.io/spring-cloud-aws/docs/2.3.5/reference/html/index.html&#34;&gt;Reference Docs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.awspring.io/spring-cloud-aws/docs/2.3.5/apidocs/index.html&#34;&gt;API Docs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Big thanks to &lt;a href=&#34;https://localstack.cloud&#34;&gt;Localstack&lt;/a&gt; for providing PRO licenses to the development team!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://localstack.cloud&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/47351025/215054012-f5af0761-0bd5-49c6-bd3e-c6b2a6844f53.png&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility with Spring Project Versions&lt;/h2&gt; &#xA;&lt;p&gt;This project has dependency and transitive dependencies on Spring Projects. The table below outlines the versions of Spring Cloud, Spring Boot and Spring Framework versions that are compatible with certain Spring Cloud AWS version.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Spring Cloud AWS&lt;/th&gt; &#xA;   &lt;th&gt;Spring Cloud&lt;/th&gt; &#xA;   &lt;th&gt;Spring Boot&lt;/th&gt; &#xA;   &lt;th&gt;Spring Framework&lt;/th&gt; &#xA;   &lt;th&gt;AWS Java SDK&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.3.x (maintenance mode)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2020.0-Release-Notes&#34;&gt;2020.0.x&lt;/a&gt; (3.0/Illford)&lt;/td&gt; &#xA;   &lt;td&gt;2.4.x, 2.5.x&lt;/td&gt; &#xA;   &lt;td&gt;5.3.x&lt;/td&gt; &#xA;   &lt;td&gt;1.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.4.x (maintenance mode)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2021.0-Release-Notes&#34;&gt;2021.0.x&lt;/a&gt; (3.1/Jubilee)&lt;/td&gt; &#xA;   &lt;td&gt;2.6.x, 2.7.x&lt;/td&gt; &#xA;   &lt;td&gt;5.3.x&lt;/td&gt; &#xA;   &lt;td&gt;1.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3.0.x (under development)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2022.0-Release-Notes&#34;&gt;2022.0.x&lt;/a&gt; (4.0/Kilburn)&lt;/td&gt; &#xA;   &lt;td&gt;3.0.x&lt;/td&gt; &#xA;   &lt;td&gt;6.0.x&lt;/td&gt; &#xA;   &lt;td&gt;2.x&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: 3.0.0-M2 is the last version compatible with Spring Boot 2.7.x and Spring Cloud 3.1. Starting from 3.0.0-M3, project has switched to Spring Boot 3.0.&lt;/p&gt; &#xA;&lt;h2&gt;Supported AWS integrations&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;AWS Service&lt;/th&gt; &#xA;   &lt;th&gt;Spring Cloud AWS 2.x&lt;/th&gt; &#xA;   &lt;th&gt;Spring Cloud AWS 3.x&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;S3&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SNS&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SES&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parameter Store&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Secrets Manager&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQS&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RDS&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EC2&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ElastiCache&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudFormation&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CloudWatch&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cognito&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.awspring.io/spring-cloud-aws/docs/3.0.0-SNAPSHOT/reference/html/index.html#migration-from-2-x-to-3-x&#34;&gt;Covered by Spring Boot&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DynamoDB&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Note, that Spring provides support for other AWS services in following projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-stream-binder-aws-kinesis&#34;&gt;Spring Cloud Stream Binder AWS Kinesis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-config&#34;&gt;Spring Cloud Config Server&lt;/a&gt; supports AWS Parameter Store and Secrets Manager&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/spring-projects/spring-integration-aws&#34;&gt;Spring Integration for AWS&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Current Efforts&lt;/h2&gt; &#xA;&lt;p&gt;We are working on Spring Cloud AWS 3.0 - a major release that includes moving to AWS SDK v2 and re-thinking most of the integrations.&lt;/p&gt; &#xA;&lt;h2&gt;Checking out and building&lt;/h2&gt; &#xA;&lt;p&gt;To check out the project and build it from source, do the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/awspring/spring-cloud-aws.git&#xA;cd spring-cloud-aws&#xA;./mvnw package&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build and install jars into your local Maven cache:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./mvnw install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For faster builds, we recommend using &lt;a href=&#34;https://github.com/apache/maven-mvnd&#34;&gt;Maven Daemon&lt;/a&gt; and using following commands:&lt;/p&gt; &#xA;&lt;p&gt;Build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Clean:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make clean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Format code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be built by activating the &lt;code&gt;docs&lt;/code&gt; profile in the maven build.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make docs&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It generates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;reference documentation in &lt;code&gt;docs/target/generated-docs/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;API docs in &lt;code&gt;target/site/&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting in touch&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/awspring/spring-cloud-aws/discussions&#34;&gt;Discussions on Github&lt;/a&gt; - the best way to discuss anything Spring Cloud AWS related&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Or reach out directly to individual team members:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Maciej Walkowiak &lt;a href=&#34;https://twitter.com/maciejwalkowiak&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matej Nedic &lt;a href=&#34;https://twitter.com/MatejNedic1&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tomaz Fernandes &lt;a href=&#34;https://twitter.com/tomazfernandes_&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Azure/azure-sdk-for-java</title>
    <updated>2023-03-26T01:55:07Z</updated>
    <id>tag:github.com,2023-03-26:/Azure/azure-sdk-for-java</id>
    <link href="https://github.com/Azure/azure-sdk-for-java" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository is for active development of the Azure SDK for Java. For consumers of the SDK we recommend visiting our public developer docs at https://docs.microsoft.com/java/azure/ or our versioned developer docs at https://azure.github.io/azure-sdk-for-java.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Azure SDK for Java&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/java.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/packages-latest-blue.svg?sanitize=true&#34; alt=&#34;Packages&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://azure.github.io/azure-sdk-for-java&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-published-blue.svg?sanitize=true&#34; alt=&#34;Build Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository is for active development of the Azure SDK for Java. For consumers of the SDK we recommend visiting our &lt;a href=&#34;https://docs.microsoft.com/azure/developer/java/sdk/&#34;&gt;public developer docs&lt;/a&gt; or our versioned &lt;a href=&#34;https://azure.github.io/azure-sdk-for-java&#34;&gt;developer docs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with a specific service library, see the &lt;strong&gt;README.md&lt;/strong&gt; file located in the library&#39;s project folder. You can find service libraries in the &lt;code&gt;/sdk&lt;/code&gt; directory. For a list of all the services we support access our &lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/all/java.html&#34;&gt;list of all existing libraries&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For tutorials, samples, quick starts and other documentation, visit &lt;a href=&#34;https://docs.microsoft.com/java/azure/&#34;&gt;Azure for Java Developers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;All libraries are baselined on Java 8, with testing and forward support up until the latest Java long-term support release (currently Java 17).&lt;/p&gt; &#xA;&lt;h2&gt;Available packages&lt;/h2&gt; &#xA;&lt;p&gt;Each service can have both &#39;client&#39; and &#39;management&#39; libraries. &#39;Client&#39; libraries are used to consume the service, whereas &#39;management&#39; libraries are used to configure and manage the service.&lt;/p&gt; &#xA;&lt;h3&gt;Client Libraries&lt;/h3&gt; &#xA;&lt;p&gt;Our client libraries follow the &lt;a href=&#34;https://azure.github.io/azure-sdk/java/guidelines/&#34;&gt;Azure SDK Design Guidelines for Java&lt;/a&gt;, and share a number of core features such as HTTP retries, logging, transport protocols, authentication protocols, etc., so that once you learn how to use these features in one client library, you will know how to use them in other client libraries. You can learn about these shared features &lt;a href=&#34;https://docs.microsoft.com/azure/developer/java/sdk/overview&#34;&gt;here&lt;/a&gt;. These libraries can be easily identified by folder, package, and namespaces names starting with &lt;code&gt;azure-&lt;/code&gt;, e.g. &lt;code&gt;azure-keyvault&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find the &lt;strong&gt;&lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/index.html#java&#34;&gt;most up to date list of all of the new packages on our page&lt;/a&gt;&lt;/strong&gt;. This list includes the most recent releases: both stable and beta.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: If you need to ensure your code is ready for production use one of the stable, non-beta libraries.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Management Libraries&lt;/h3&gt; &#xA;&lt;p&gt;Similar to our client libraries, the management libraries follow the &lt;a href=&#34;https://azure.github.io/azure-sdk/java/guidelines/&#34;&gt;Azure SDK Design Guidelines for Java&lt;/a&gt;. These libraries provide a high-level, object-oriented API for &lt;em&gt;managing&lt;/em&gt; Azure resources, that are optimized for ease of use, succinctness, and consistency. You can find the list of management libraries &lt;strong&gt;&lt;a href=&#34;https://azure.github.io/azure-sdk/releases/latest/mgmt/java.html&#34;&gt;on this page&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For general documentation on how to use the new libraries for Azure Resource Management, please &lt;a href=&#34;https://aka.ms/azsdk/java/mgmt&#34;&gt;visit here&lt;/a&gt;&lt;/strong&gt;. We have also prepared &lt;strong&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-java/raw/main/sdk/resourcemanager/docs/SAMPLE.md&#34;&gt;plenty of code samples&lt;/a&gt;&lt;/strong&gt; as well as &lt;strong&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-java/raw/main/sdk/resourcemanager/docs/MIGRATION_GUIDE.md&#34;&gt;migration guide&lt;/a&gt;&lt;/strong&gt; in case you are upgrading from previous versions.&lt;/p&gt; &#xA;&lt;p&gt;The management libraries can be identified by namespaces that start with &lt;code&gt;azure-resourcemanager&lt;/code&gt;, e.g. &lt;code&gt;azure-resourcemanager-compute&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Historical Releases&lt;/h3&gt; &#xA;&lt;p&gt;Note that the latest libraries from Microsoft are in the &lt;code&gt;com.azure&lt;/code&gt; Maven group ID, and have the package naming pattern of beginning with &lt;code&gt;com.azure&lt;/code&gt;. If you&#39;re using libraries that are in &lt;code&gt;com.microsoft.azure&lt;/code&gt; Maven group ID, or have this as the package structure, please consider migrating to the latest libraries. You can find a mapping table from these historical releases to their equivalent &lt;a href=&#34;https://azure.github.io/azure-sdk/releases/deprecated/index.html#java&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Need help?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For reference documentation visit the &lt;a href=&#34;https://aka.ms/java-docs&#34;&gt;Azure SDK for Java documentation&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For tutorials, samples, quick starts and other documentation, visit &lt;a href=&#34;https://docs.microsoft.com/java/azure/&#34;&gt;Azure for Java Developers&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For build reports on code quality, test coverage, etc, visit &lt;a href=&#34;https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-java/index.html&#34;&gt;Azure Java SDK&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;File an issue via &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-java/issues/new/choose&#34;&gt;Github Issues&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://stackoverflow.com/questions/tagged/azure-java-sdk&#34;&gt;previous questions&lt;/a&gt; or ask new ones on StackOverflow using &lt;code&gt;azure-java-sdk&lt;/code&gt; tag.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Navigating the repository&lt;/h2&gt; &#xA;&lt;h3&gt;Main branch&lt;/h3&gt; &#xA;&lt;p&gt;The main branch has the most recent code with new features and bug fixes. It does &lt;strong&gt;not&lt;/strong&gt; represent latest released &lt;strong&gt;stable&lt;/strong&gt; SDK.&lt;/p&gt; &#xA;&lt;h3&gt;Release branches (Release tagging)&lt;/h3&gt; &#xA;&lt;p&gt;For each package we release there will be a unique git tag created that contains the name and the version of the package to mark the commit of the code that produced the package. This tag will be used for servicing via hotfix branches as well as debugging the code for a particular beta or stable release version. Format of the release tags are &lt;code&gt;&amp;lt;package-name&amp;gt;_&amp;lt;package-version&amp;gt;&lt;/code&gt;. For more information please see &lt;a href=&#34;https://github.com/Azure/azure-sdk/raw/main/docs/policies/repobranching.md#release-tagging&#34;&gt;our branching strategy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;For details on contributing to this repository, see the &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-java/raw/main/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, view &lt;a href=&#34;https://cla.microsoft.com&#34;&gt;Microsoft&#39;s CLA&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; &#xA;&lt;p&gt;This project has adopted the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/&#34;&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href=&#34;https://opensource.microsoft.com/codeofconduct/faq/&#34;&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href=&#34;mailto:opencode@microsoft.com&#34;&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; &#xA;&lt;h3&gt;Additional Helpful Links for Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Many people all over the world have helped make this project better. You&#39;ll want to check out:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/azure/azure-sdk-for-java/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22&#34;&gt;What are some good first issues for new contributors to the repo?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-java/raw/main/CONTRIBUTING.md#developer-guide&#34;&gt;How to build and test your change&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Azure/azure-sdk-for-java/raw/main/CONTRIBUTING.md#pull-requests&#34;&gt;How you can make a change happen!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Frequently Asked Questions (FAQ) and Conceptual Topics in the detailed &lt;a href=&#34;https://github.com/azure/azure-sdk-for-java/wiki&#34;&gt;Azure SDK for Java wiki&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting security issues and security bugs&lt;/h3&gt; &#xA;&lt;p&gt;Security issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) &lt;a href=&#34;mailto:secure@microsoft.com&#34;&gt;secure@microsoft.com&lt;/a&gt;. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the &lt;a href=&#34;https://www.microsoft.com/msrc/faqs-report-an-issue&#34;&gt;Security TechCenter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;Azure SDK for Java is licensed under the &lt;a href=&#34;https://github.com/Azure/azure-sdk-for-java/raw/main/LICENSE.txt&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt; &#xA;&lt;!-- Links --&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-java%2FREADME.png&#34; alt=&#34;Impressions&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>