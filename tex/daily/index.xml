<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-21T01:38:41Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yegor256/cam</title>
    <updated>2023-09-21T01:38:41Z</updated>
    <id>tag:github.com,2023-09-21:/yegor256/cam</id>
    <link href="https://github.com/yegor256/cam" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Classes and Metriсs (CaM): a dataset of Java classes from public open-source GitHub repositories&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/yegor256/cam/actions/workflows/make.yml&#34;&gt;&lt;img src=&#34;https://github.com/yegor256/cam/actions/workflows/make.yml/badge.svg?branch=master&#34; alt=&#34;make&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yegor256/ctors-vs-size/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hub.docker.com/r/yegor256/cam&#34;&gt;&lt;img src=&#34;https://img.shields.io/docker/cloud/automated/yegor256/cam&#34; alt=&#34;Docker Cloud Automated build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a dataset of open source Java classes and some metrics on them. Every now and then I make a new version of it using the scripts in this repository. You are welcome to use it in your researches. Each release has a fixed version. By referring to it in your research you avoid ambiguity and guarantees repeatability of your experiments.&lt;/p&gt; &#xA;&lt;p&gt;The latest ZIP archive with the dataset is here: &lt;a href=&#34;https://github.com/yegor256/cam/releases/download/0.3.0/cam-2022-02-17.zip&#34;&gt;cam-2022-02-17.zip&lt;/a&gt; (532Mb). It is the result of the analysis of Java classes in 1000 GitHub repositories against a number of metrics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;lines of code (reported by &lt;a href=&#34;https://github.com/AlDanial/cloc&#34;&gt;cloc&lt;/a&gt;),&lt;/li&gt; &#xA; &lt;li&gt;lines of comments,&lt;/li&gt; &#xA; &lt;li&gt;blank lines,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/5486983/what-does-ncss-stand-for&#34;&gt;NCSS&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;cyclomatic complexity,&lt;/li&gt; &#xA; &lt;li&gt;number of attributes,&lt;/li&gt; &#xA; &lt;li&gt;number of static attributes,&lt;/li&gt; &#xA; &lt;li&gt;number of constructors,&lt;/li&gt; &#xA; &lt;li&gt;number of methods,&lt;/li&gt; &#xA; &lt;li&gt;number of static methods,&lt;/li&gt; &#xA; &lt;li&gt;total cognitive complexity (reported by &lt;a href=&#34;https://pmd.github.io/&#34;&gt;PMD&lt;/a&gt;),&lt;/li&gt; &#xA; &lt;li&gt;maximum cognitive complexity,&lt;/li&gt; &#xA; &lt;li&gt;minimum cognitive complexity,&lt;/li&gt; &#xA; &lt;li&gt;average cognitive complexity,&lt;/li&gt; &#xA; &lt;li&gt;number of committers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Previous archives (took me a few days to build each of them, using a pretty big machine):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yegor256/cam/releases/download/0.2.0/cam-2021-08-04.zip&#34;&gt;cam-2021-08-04.zip&lt;/a&gt; (692Mb): 1000 repos, 15 metrics&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/yegor256/cam/releases/download/0.1.1/cam-2021-07-08.zip&#34;&gt;cam-2021-07-08.zip&lt;/a&gt; (387Mb): 1000 repos, 11 metrics&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you want to create a new dataset, just run the following command and the entire dataset will be built in the current directory (you need to have &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker&lt;/a&gt; installed), where &lt;code&gt;1000&lt;/code&gt; is the number of repositories to fetch from GitHub and &lt;code&gt;XXX&lt;/code&gt; is your &lt;a href=&#34;https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token&#34;&gt;personal access token&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ docker run --detach --name=cam --rm --volume &#34;$(pwd):/dataset&#34; \&#xA;  -e &#34;TOKEN=XXX&#34; -e &#34;TOTAL=1000&#34; -e &#34;TARGET=/dataset&#34; \&#xA;  yegor256/cam:0.5.7 &#34;make -e &amp;gt;/dataset/make.log 2&amp;gt;&amp;amp;1&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will create a new Docker container, running in the background. (run &lt;code&gt;docker ps -a&lt;/code&gt;, in order to see it). If you want to run docker interactively and see all the logs, you can just disable &lt;a href=&#34;https://docs.docker.com/language/golang/run-containers/#run-in-detached-mode&#34;&gt;detached mode&lt;/a&gt; by removing the &lt;code&gt;--detach&lt;/code&gt; option from the command.&lt;/p&gt; &#xA;&lt;p&gt;The dataset will be created in the current directory (may take some time, maybe a few days!), and a &lt;code&gt;.zip&lt;/code&gt; archive will also be there. Docker container will run in the background: you can safely close the console and come back when the dataset is ready and the container is deleted.&lt;/p&gt; &#xA;&lt;p&gt;You can also run it without Docker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make wipe&#xA;$ make TOTAL=100&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Should work, if you have all the dependencies installed, as suggested in the &lt;a href=&#34;https://github.com/yegor256/cam/raw/master/Dockerfile&#34;&gt;Dockerfile&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to analyze just a single repository, do this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make wipe&#xA;$ make REPO=yegor256/jpeek&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to Calculate Additional Metrics&lt;/h2&gt; &#xA;&lt;p&gt;You may want to use this dataset as a basis, with an intend of adding your own metrics on top of it. It should be easy:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download ZIP archive&lt;/li&gt; &#xA; &lt;li&gt;Unpack it to a new &lt;code&gt;cam/&lt;/code&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;Add a new script to the &lt;code&gt;cam/metrics/&lt;/code&gt; directory (use &lt;code&gt;ast_metrics.py&lt;/code&gt; as an example)&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;make&lt;/code&gt; in the &lt;code&gt;cam/&lt;/code&gt; directory&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Make should understand that a new metric was added. It will apply this new metric to all &lt;code&gt;.java&lt;/code&gt; files, generate new &lt;code&gt;.csv&lt;/code&gt; reports, and then the final &lt;code&gt;.pdf&lt;/code&gt; report will also be updated.&lt;/p&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Fork repository, make changes, send us a &lt;a href=&#34;https://www.yegor256.com/2014/04/15/github-guidelines.html&#34;&gt;pull request&lt;/a&gt;. We will review your changes and apply them to the &lt;code&gt;master&lt;/code&gt; branch shortly, provided they don&#39;t violate our quality standards. To avoid frustration, before sending us your pull request please run full Maven build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make REPO=yegor256/tojos&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This should take a few minutes to complete.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>greebookfestclub/bookfest15</title>
    <updated>2023-09-21T01:38:41Z</updated>
    <id>tag:github.com,2023-09-21:/greebookfestclub/bookfest15</id>
    <link href="https://github.com/greebookfestclub/bookfest15" rel="alternate"></link>
    <summary type="html">&lt;p&gt;技術書典15用執筆リポジトリです。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Re:VIEW Template&lt;/h1&gt; &#xA;&lt;p&gt;このリポジトリはRe:VIEW用の書籍テンプレートです。Re:VIEWバージョン5.7に対応します。 メンテナンスはTechBoosterが行っています。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TechBooster/ReVIEW-Template/tree/master/pdf-sample/TechBooster-Template-B5.pdf&#34;&gt;B5紙面サンプル（PDF）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TechBooster/ReVIEW-Template/tree/master/pdf-sample/TechBooster-Template-A5.pdf&#34;&gt;A5紙面サンプル（PDF）&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TechBooster/ReVIEW-Template/tree/master/pdf-sample/TechBooster-Template-ebook.pdf&#34;&gt;B5紙面電子書籍サンプル（PDF）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;このテンプレートのビルドの仕方は？&lt;/h2&gt; &#xA;&lt;p&gt;細かい準備(TeX入れたり)は&lt;a href=&#34;https://github.com/TechBooster/C89-FirstStepReVIEW-v2&#34;&gt;『技術書をかこう！』&lt;/a&gt;に準じます。&lt;/p&gt; &#xA;&lt;p&gt;TeXの導入をしない場合でもHTMLやEPUBの出力は可能です。Dockerコンテナでビルドすることもできます。&lt;/p&gt; &#xA;&lt;h2&gt;Re:VIEWの使い方は？&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/TechBooster/C89-FirstStepReVIEW-v2&#34;&gt;技術書をかこう！〜はじめてのRe:VIEW〜改訂版&lt;/a&gt; のリポジトリで解説しています。Re:VIEWに対応した執筆ノウハウ本です。 Re:VIEWの使い方と制作にあたっての企画〜執筆〜編集〜告知〜会場頒布までのノウハウをギュッと詰めています。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://techbooster.booth.pm/&#34;&gt;https://techbooster.booth.pm/&lt;/a&gt; でPDF版の販売予定があります&lt;/p&gt; &#xA;&lt;h2&gt;環境の準備&lt;/h2&gt; &#xA;&lt;p&gt;本書は&lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;で&lt;a href=&#34;https://atom.io/packages/language-review&#34;&gt;language-review&lt;/a&gt;と&lt;a href=&#34;https://atom.io/packages/linter-redpen&#34;&gt;linter-redpen&lt;/a&gt;を導入している前提です。 内部的に&lt;a href=&#34;http://redpen.cc/&#34;&gt;RedPen&lt;/a&gt;を利用するため、 &lt;code&gt;brew install redpen&lt;/code&gt; とかしておいてください。&lt;/p&gt; &#xA;&lt;p&gt;Atom以外の環境の場合、&lt;a href=&#34;https://github.com/vvakame/prh&#34;&gt;prh&lt;/a&gt;または&lt;a href=&#34;https://github.com/vvakame/reviewjs-prh&#34;&gt;reviewjs-prh&lt;/a&gt;とRedPenを自力でなんとか頑張って適用してください。&lt;/p&gt; &#xA;&lt;p&gt;警告やlintのエラーを放置して編集に突入してしまうと @mhidaka が過労で死にます。 RedPenは試験的に導入したため、知見やルールについてまだ固まっていません。 意見・感想・修正案などあれば @mhidaka までご相談ください。&lt;/p&gt; &#xA;&lt;h2&gt;PDF出力する&lt;/h2&gt; &#xA;&lt;p&gt;rbenvやnodebrewを利用してRubyやNode.jsの準備をしている前提です。 もしそうではない場合、適宜sudoを補うこと。 Node.jsは4.x系以上が必須です。&lt;/p&gt; &#xA;&lt;p&gt;graphvizを使ったのでbrew install graphvizとかが必要かもしれません。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ gem install bundler&#xA;$ git clone git@github.com:TechBooster/ReVIEW-Template.git&#xA;$ cd ReVIEW-Template&#xA;$ npm install&#xA;$ npm run pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Re:VIEWコマンドでPDFを出力する&lt;/h3&gt; &#xA;&lt;p&gt;セットアップが完了していれば &lt;code&gt;npm run pdf&lt;/code&gt; のかわりに&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ rake pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ review-pdfmaker config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;でも生成できます。&lt;/p&gt; &#xA;&lt;h2&gt;EPUB・Webページ・テキストの出力&lt;/h2&gt; &#xA;&lt;p&gt;PDF以外に、EPUB・Webページ・テキストを出力することもできます。&lt;/p&gt; &#xA;&lt;h3&gt;EPUBを出力する&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm run epub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ rake epub&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ review-epubmaker config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Webページを出力する（webrootフォルダ）&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm run web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ rake web&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ review-webmaker config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;テキストファイルを出力する&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm run text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ rake text&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ review-textmaker config.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dockerを使う&lt;/h2&gt; &#xA;&lt;p&gt;TeXの環境構築が困難な場合、一式セットアップ済みのDockerイメージを &lt;a href=&#34;https://github.com/vvakame/docker-review/pkgs/container/review&#34;&gt;ghcr.io&lt;/a&gt; または &lt;a href=&#34;https://hub.docker.com/r/vvakame/review&#34;&gt;DockerHub&lt;/a&gt; に用意してあるので使ってください。 Dockerがうまく動くようになっている場合、以下のコマンドで細かい準備なしにビルドを行うことができます。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ docker pull ghcr.io/vvakame/review:5.7 (ghcrからのダウンロードの場合)&#xA;$ docker pull vvakame/review:5.7 (Docker Hubからのダウンロードの場合)&#xA;$ ./build-in-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;紙面や設定ファイルの切り替え&lt;/h2&gt; &#xA;&lt;p&gt;B5やA5といった紙面サイズ、印刷用・電子用といったメディアの切り替えは、articles/config.ymlのtexdocumentclassパラメータで設定しています。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# B5の設定(10pt 40文字×35行) - 紙版&#xA;texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=print,paper=b5,serial_pagination=true,hiddenfolio=nikko-pc,openany,fontsize=10pt,baselineskip=15.4pt,line_length=40zw,number_of_lines=35,head_space=30mm,headsep=10mm,headheight=5mm,footskip=10mm&#34;]&#xA;# B5の設定(10pt 40文字×35行) - 電子版&#xA;# texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=ebook,paper=b5,serial_pagination=true,openany,fontsize=10pt,baselineskip=15.4pt,line_length=40zw,number_of_lines=35,head_space=30mm,headsep=10mm,headheight=5mm,footskip=10mm&#34;]&#xA;# A5の設定(9pt 38文字×37行) - 紙版&#xA;# texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=print,paper=a5,serial_pagination=true,hiddenfolio=nikko-pc,openany,fontsize=9pt,baselineskip=13pt,line_length=38zw,number_of_lines=37,head_space=15mm,headsep=3mm,headheight=5mm,footskip=10mm&#34;]&#xA;# A5の設定(9pt 38文字×37行) - 電子版&#xA;# texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=ebook,paper=a5,serial_pagination=true,openany,fontsize=9pt,baselineskip=13pt,line_length=38zw,number_of_lines=37,head_space=15mm,headsep=3mm,headheight=5mm,footskip=10mm&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;デフォルトはB5・印刷用の設定になっていますが、たとえばA5・印刷用にしたい場合にはB5のパラメータをコメントアウトし、A5のほうを有効にします。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# B5の設定(10pt 40文字×35行) - 紙版 ↓これをコメントアウトし…&#xA;# texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=print,paper=b5,serial_pagination=true,hiddenfolio=nikko-pc,openany,fontsize=10pt,baselineskip=15.4pt,line_length=40zw,number_of_lines=35,head_space=30mm,headsep=10mm,headheight=5mm,footskip=10mm&#34;]&#xA;# B5の設定(10pt 40文字×35行) - 電子版&#xA;# texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=ebook,paper=b5,serial_pagination=true,openany,fontsize=10pt,baselineskip=15.4pt,line_length=40zw,number_of_lines=35,head_space=30mm,headsep=10mm,headheight=5mm,footskip=10mm&#34;]&#xA;# A5の設定(9pt 38文字×37行) - 紙版 ↓こちらを有効にする&#xA;texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=print,paper=a5,serial_pagination=true,hiddenfolio=nikko-pc,openany,fontsize=9pt,baselineskip=13pt,line_length=38zw,number_of_lines=37,head_space=15mm,headsep=3mm,headheight=5mm,footskip=10mm&#34;]&#xA;# A5の設定(9pt 38文字×37行) - 電子版&#xA;# texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=ebook,paper=a5,serial_pagination=true,openany,fontsize=9pt,baselineskip=13pt,line_length=38zw,number_of_lines=37,head_space=15mm,headsep=3mm,headheight=5mm,footskip=10mm&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;印刷用と電子用の両方を作りたいときには、設定ファイルの継承機能を利用できます。たとえばB5電子版の設定ファイルの例をconfig-ebook.ymlとして用意しています。この内容は次のようにシンプルに既存のconfig.ymlのtexdocumentclassパラメータを置き換えているだけです。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# 継承元設定&#xA;inherit: [&#34;config.yml&#34;]&#xA;&#xA;# B5の設定(10pt 40文字×35行) - 電子版&#xA;texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=ebook,paper=b5,serial_pagination=true,openany,fontsize=10pt,baselineskip=15.4pt,line_length=40zw,number_of_lines=35,head_space=30mm,headsep=10mm,headheight=5mm,footskip=10mm&#34;]&#xA;# A5の設定(9pt 38文字×37行) - 電子版&#xA;# texdocumentclass: [&#34;review-jsbook&#34;, &#34;media=ebook,paper=a5,serial_pagination=true,openany,fontsize=9pt,baselineskip=13pt,line_length=38zw,number_of_lines=37,head_space=15mm,headsep=3mm,headheight=5mm,footskip=10mm&#34;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;このconfig-ebook.ymlを使ってPDFを生成するには次のようにします。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ REVIEW_CONFIG_FILE=config-ebook.yml npm run pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ REVIEW_CONFIG_FILE=config-ebook.yml rake pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;または&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cd ReVIEW-Template/articles&#xA;$ review-pdfmaker config-ebook.yml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Docker環境でも以下のように指定できます。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ REVIEW_CONFIG_FILE=config-ebook.yml ./build-in-docker.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;紙版と電子版では以下のような違いがあります。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;紙版：印刷用に、トンボ、デジタルトンボを設置。いくつかの同人誌印刷所で要求事項となっているノドへの隠しノンブル、大扉からのアラビア数字通し。ハイパーリンクは無効化。表紙（cover）は無視。&lt;/li&gt; &#xA; &lt;li&gt;電子版：電子配布用に、仕上がり紙面サイズ。大扉からのアラビア数字通し。ハイパーリンク有効。表紙（cover）を中央合わせで配置。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;EPUB/Web出力用CSSファイルの編集方法&lt;/h3&gt; &#xA;&lt;p&gt;articles/ディレクトリ以下の各種*.scssファイルを編集し、&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./rebuild-css.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;コマンドでCSSファイルをビルドしてください。&lt;/p&gt; &#xA;&lt;h2&gt;過去のRe:VIEW 3・4・5依存プロジェクトを最新のRe:VIEWバージョンに移行する&lt;/h2&gt; &#xA;&lt;p&gt;Re:VIEW 3以降のプロジェクトは、review-updateコマンドで簡単に更新できます。&lt;/p&gt; &#xA;&lt;p&gt;既存のプロジェクトフォルダ内 (本リポジトリを使っている場合はarticlesフォルダ) で、review-updateコマンドを実行してください。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ review-update&#xA;** review-update はプロジェクトを 5.7.0 に更新します **&#xA;config.yml: &#39;review_version&#39; を &#39;5.0&#39; に更新しますか? [y]/n&#xA;プロジェクト/sty/review-base.sty は Re:VIEW バージョンのもの (/var/lib/gems/2.7.0/gems/review-5.7.0/templates/latex/review-jsbook/review-base.sty) で置き換えられます。本当に進めますか? [y]/n&#xA;プロジェクト/sty/review-jsbook.cls は Re:VIEW バージョンのもの (/var/lib/gems/2.7.0/gems/review-5.7.0/templates/latex/review-jsbook/review-jsbook.cls) で置き換えられます。本当に進めますか? [y]/n&#xA;完了しました。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;その後、articles/sty/reviewmacro.styとarticles/sty/techbooster-doujin-base.styを本リポジトリのファイルで上書きしてください。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TechBooster/ReVIEW-Template/master/articles/sty/reviewmacro.sty&#34;&gt;reviewmacro.sty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/TechBooster/ReVIEW-Template/master/articles/sty/techbooster-doujin-base.sty&#34;&gt;techbooster-doujin-base.sty&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;過去のRe:VIEW 2依存プロジェクトをRe:VIEW 5に移行する&lt;/h2&gt; &#xA;&lt;p&gt;Re:VIEW 2系向けの過去のTechBoosterテンプレートは、Re:VIEW 3以降とは互換性がありません。Re:VIEWは2から3以上への移行を支援する「review-update」というコマンドを提供していますが、TechBoosterテンプレートを使用しているプロジェクトは対象外となっています。&lt;/p&gt; &#xA;&lt;h3&gt;Re:VIEW 3以降の互換モードを使う&lt;/h3&gt; &#xA;&lt;p&gt;config.ymlで&lt;code&gt;review_version: 2.0&lt;/code&gt;としておけば、当面は互換モードによりRe:VIEW 3以降でも変わりなく動作します。ただし、一部のRe:VIEW 3以降固有の機能は利用できません。また、将来的に互換は破棄される可能性があります。&lt;/p&gt; &#xA;&lt;h3&gt;Re:VIEW 5のテンプレートに置き換える&lt;/h3&gt; &#xA;&lt;p&gt;Re:VIEW 3以降ではTeX関連のファイルが大きく変わっているため、Re:VIEW 2系のプロジェクトの既存のファイルをいったん退避し、必要に応じて設定を書き戻すという手順になります。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;事前にフォルダごと必ずバックアップを取っておいてください。&lt;/li&gt; &#xA; &lt;li&gt;layoutsフォルダをリネーム（たとえばlayouts-oldなど）します。&lt;/li&gt; &#xA; &lt;li&gt;styフォルダをリネーム（たとえばsty-oldなど）します。&lt;/li&gt; &#xA; &lt;li&gt;config.ymlファイルをリネーム（たとえばconfig.yml-oldなど）します。&lt;/li&gt; &#xA; &lt;li&gt;TechBoosterテンプレートのarticles/styフォルダをフォルダごとコピーします。&lt;/li&gt; &#xA; &lt;li&gt;TechBoosterテンプレートのarticles/config.ymlファイルをコピーします。&lt;/li&gt; &#xA; &lt;li&gt;TechBoosterテンプレートのlibフォルダをフォルダごとコピーします。&lt;/li&gt; &#xA; &lt;li&gt;TechBoosterテンプレートのRakefileファイルをコピーします。&lt;/li&gt; &#xA; &lt;li&gt;config.ymlに、カスタマイズしていた書名や著者名などを書き戻します。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;書き戻しではなくどうしても古いconfig.ymlの書き換えで対処したいという場合は、以下の点に注意してください。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;review_versionパラメータ：値を5.0にする必要があります。&lt;/li&gt; &#xA; &lt;li&gt;texstyleパラメータ：値を[&#34;reviewmacro&#34;]とします。&lt;/li&gt; &#xA; &lt;li&gt;texdocumentclassパラメータ：2つの引数の内容は大きく変わっています。&lt;/li&gt; &#xA; &lt;li&gt;texcommandパラメータ：オプションを指定していた場合、texoptionsパラメータに移設する必要があります。&lt;/li&gt; &#xA; &lt;li&gt;dvicommandパラメータ：オプションを指定していた場合、dvioptionsパラメータに移設する必要があります。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;layouts/layouts.tex.erbやsty/techbooster-doujin.styに何らかのカスタマイズを加えていた場合は、sty/review-custom.styに類似の実装をする必要があります。Re:VIEW 2系のTechBoosterテンプレートはマクロ定義時点から書き換える手法をとっていましたが、Re:VIEW 3系から&lt;code&gt;\renewcommand&lt;/code&gt;・&lt;code&gt;\reenvironment&lt;/code&gt;・&lt;code&gt;\def&lt;/code&gt;などの命令を使って既存のマクロ定義を再定義するというやり方に変わっています。&lt;/p&gt; &#xA;&lt;h3&gt;Re:VIEW 3以降の変更点について&lt;/h3&gt; &#xA;&lt;p&gt;Re:VIEW 3以降で変わったことの詳細については、以下を参照してください。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review570.html&#34;&gt;Re:VIEW 5.7 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review560.html&#34;&gt;Re:VIEW 5.6 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review550.html&#34;&gt;Re:VIEW 5.5 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review540.html&#34;&gt;Re:VIEW 5.4 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review530.html&#34;&gt;Re:VIEW 5.3 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review520.html&#34;&gt;Re:VIEW 5.2 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review510.html&#34;&gt;Re:VIEW 5.1 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review500.html&#34;&gt;Re:VIEW 5.0 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review420.html&#34;&gt;Re:VIEW 4.2 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review410.html&#34;&gt;Re:VIEW 4.1 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/releases/review400.html&#34;&gt;Re:VIEW 4.0 での変更点&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://review-knowledge-ja.readthedocs.io/ja/latest/latex/review3-latex.html&#34;&gt;Re:VIEW 3からのLaTeX処理&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Re:VIEW 2用のテンプレートの入手&lt;/h3&gt; &#xA;&lt;p&gt;何らかの理由でどうしてもRe:VIEW 2系のTechBoosterテンプレートが必要なときには、以下のリリースページから「review-2.4」リリースアーカイブファイルを利用してください。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TechBooster/ReVIEW-Template/releases&#34;&gt;https://github.com/TechBooster/ReVIEW-Template/releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;権利&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;設定ファイル、テンプレートなど制作環境（techbooster-doujin-base.styなど）はMITライセンスです &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;再配布などMITライセンスで定める範囲で権利者表記をおねがいします&lt;/li&gt; &#xA;   &lt;li&gt;本設定を使って生成した書籍は現段階のRe:VIEWではソフトウェアたりえません。したがってライセンスは発生しません（あとがきなどへの表記はあると嬉しいものの生成物での表記は不要です）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;articles/styにあるファイルには以下のライセンスが適用されています。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;review-jsbook.cls, review-base.sty, review-style.sty, review-custom.sty: MIT License&lt;/li&gt; &#xA;   &lt;li&gt;jumoline.sty: The LaTeX Project Public License&lt;/li&gt; &#xA;   &lt;li&gt;plistings.sty: MIT License&lt;/li&gt; &#xA;   &lt;li&gt;gentombow.sty: BSD License&lt;/li&gt; &#xA;   &lt;li&gt;jsbook.cls: BSD License&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>