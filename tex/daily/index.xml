<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-18T01:46:54Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kourgeorge/arxiv-style</title>
    <updated>2023-01-18T01:46:54Z</updated>
    <id>tag:github.com,2023-01-18:/kourgeorge/arxiv-style</id>
    <link href="https://github.com/kourgeorge/arxiv-style" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Latex style and template for paper preprints (based on NIPS style)&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Description:&lt;/h2&gt; &#xA;&lt;p&gt;The project hosts an aesthetic and simple LaTeX style suitable for &#34;preprint&#34; publications such as arXiv and bio-arXiv, etc. It is based on the &lt;a href=&#34;https://media.nips.cc/Conferences/NIPS2018/Styles/nips_2018.sty&#34;&gt;&lt;strong&gt;nips_2018.sty&lt;/strong&gt;&lt;/a&gt; style.&lt;/p&gt; &#xA;&lt;p&gt;This styling maintains the esthetic of NeurIPS but adding and changing features to make it (IMO) even better and more suitable for preprints. The result looks fairly different from NeurIPS style so that readers won&#39;t get confused to think that the preprint was published in NeurIPS.&lt;/p&gt; &#xA;&lt;h3&gt;Why NeurIPS?&lt;/h3&gt; &#xA;&lt;p&gt;Because the NeurIPS styling is a comfortable single column format that is very esthetic and convenient for reading.&lt;/p&gt; &#xA;&lt;h2&gt;Usage:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use Document class &lt;strong&gt;article&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;strong&gt;arxiv.sty&lt;/strong&gt; to the folder containing your tex file.&lt;/li&gt; &#xA; &lt;li&gt;add &lt;code&gt;\usepackage{arxiv}&lt;/code&gt; after &lt;code&gt;\documentclass{article}&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;The only packages used in the style file are &lt;strong&gt;geometry&lt;/strong&gt; and &lt;strong&gt;fancyheader&lt;/strong&gt;. Do not reimport them.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See &lt;strong&gt;template.tex&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project files:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;arxiv.sty&lt;/strong&gt; - the style file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;template.tex&lt;/strong&gt; - a sample template that uses the &lt;strong&gt;arxiv style&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;references.bib&lt;/strong&gt; - the bibliography source file for template.tex.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;template.pdf&lt;/strong&gt; - a sample output of the template file that demonstrated the design provided by the arxiv style.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Handling References when submitting to arXiv.org&lt;/h2&gt; &#xA;&lt;p&gt;The most convenient way to manage references is using an external BibTeX file and pointing to it from the main file. However, this requires running the &lt;a href=&#34;http://www.bibtex.org/&#34;&gt;bibtex&lt;/a&gt; tool to &#34;compile&#34; the &lt;code&gt;.bib&lt;/code&gt; file and create &lt;code&gt;.bbl&lt;/code&gt; file containing &#34;bibitems&#34; that can be directly inserted in the main tex file. However, unfortunately the arXiv Tex environment (&lt;a href=&#34;https://www.tug.org/texlive/&#34;&gt;Tex Live&lt;/a&gt;) do not do that. So easiest way when submitting to arXiv is to create a single self-contained .tex file that contains the references. This can be done by running the BibTeX command on your machine and insert the content of the generated &lt;code&gt;.bbl&lt;/code&gt; file into the &lt;code&gt;.tex&lt;/code&gt; file and commenting out the &lt;code&gt;\bibliography{references}&lt;/code&gt; that point to the external references file.&lt;/p&gt; &#xA;&lt;p&gt;Below are the commands that should be run in the project folder:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run &lt;code&gt;$ latex template&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;$ bibtex template&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A &lt;code&gt;template.bbl&lt;/code&gt; file will be generated (make sure it is there)&lt;/li&gt; &#xA; &lt;li&gt;Copy the &lt;code&gt;template.bbl&lt;/code&gt; file content to &lt;code&gt;template.tex&lt;/code&gt; into the &lt;code&gt;\begin{thebibliography}&lt;/code&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;Comment out the &lt;code&gt;\bibliography{references}&lt;/code&gt; command in &lt;code&gt;template.tex&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;You ready to submit to arXiv.org.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;General Notes:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;For help, comments, praises, bug reporting or change requests, you can contact the author at: kourgeorge/at/gmail.com.&lt;/li&gt; &#xA; &lt;li&gt;You can use, redistribute and do whatever with this project, however, the author takes no responsibility on whatever usage of this project.&lt;/li&gt; &#xA; &lt;li&gt;If you start another project based on this project, it would be nice to mention/link to this project.&lt;/li&gt; &#xA; &lt;li&gt;You are very welcome to contribute to this project.&lt;/li&gt; &#xA; &lt;li&gt;A good looking 2 column template can be found in &lt;a href=&#34;https://github.com/brenhinkeller/preprint-template.tex&#34;&gt;https://github.com/brenhinkeller/preprint-template.tex&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>slds-lmu/seminar_multimodal_dl</title>
    <updated>2023-01-18T01:46:54Z</updated>
    <id>tag:github.com,2023-01-18:/slds-lmu/seminar_multimodal_dl</id>
    <link href="https://github.com/slds-lmu/seminar_multimodal_dl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;https://slds-lmu.github.io/seminar_multimodal_dl/&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Multimodal Deep Learning&lt;/h1&gt; &#xA;&lt;p&gt;In the last few years, there have been several breakthroughs in the methodologies used in Natural Language Processing (NLP) as well as Computer Vision (CV). Beyond these improvements on single-modality models, large-scale multi-modal approaches have become a very active area of research.&lt;/p&gt; &#xA;&lt;p&gt;In this seminar, we reviewed these approaches and attempted to create a solid overview of the field, starting with the current state-of-the-art approaches in the two subfields of Deep Learning individually. Further, modeling frameworks are discussed where one modality is transformed into the other, as well as models in which one modality is utilized to enhance representation learning for the other. To conclude the second part, architectures with a focus on handling both modalities simultaneously are introduced. Finally, we also cover other modalities as well as general-purpose multi-modal models, which are able to handle different tasks on different modalities within one unified architecture. One interesting application (Generative Art) eventually caps off this booklet.&lt;/p&gt; &#xA;&lt;h2&gt;How this book came about&lt;/h2&gt; &#xA;&lt;p&gt;This book is the result of a student seminar for Master Statistics and Master Data Science at the LMU in the summer semester 2022. Each student in the seminar wrote about a specific chapter of the book to pass the seminar.&lt;/p&gt; &#xA;&lt;h2&gt;How to build the book&lt;/h2&gt; &#xA;&lt;p&gt;Step 0: Prerequisites&lt;/p&gt; &#xA;&lt;p&gt;Make sure you have git and R up and running on your computer.&lt;/p&gt; &#xA;&lt;p&gt;Step 1: Clone the repository to your machine&lt;/p&gt; &#xA;&lt;p&gt;With RStudio: &lt;a href=&#34;https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN&#34;&gt;https://support.rstudio.com/hc/en-us/articles/200532077-Version-Control-with-Git-and-SVN&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;With command-line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com/slds-lmu/seminar_multimodal_dl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Step 2: Install dependencies&lt;/p&gt; &#xA;&lt;p&gt;Start R in the project folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;install.packages(&#34;devtools&#34;)&#xA;devtools::install_dev_deps()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Step 3: Render the book (R commands)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;# HTML&#xA;bookdown::render_book(&#39;./&#39;, &#39;bookdown::gitbook&#39;)&#xA;# PDF&#xA;bookdown::render_book(&#39;./&#39;, &#39;bookdown::pdf_book&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>malteschmitz/rails-backbone</title>
    <updated>2023-01-18T01:46:54Z</updated>
    <id>tag:github.com,2023-01-18:/malteschmitz/rails-backbone</id>
    <link href="https://github.com/malteschmitz/rails-backbone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Presentation about modern web applications using Rails and Backbone.js in German.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modern Web Development with Rails and Backbone&lt;/h1&gt; &#xA;&lt;p&gt;Presentation about modern web applications using Rails and Backbone.js in German.&lt;/p&gt; &#xA;&lt;h1&gt;Moderne Webanwendungen mit Rails und Backbone.js&lt;/h1&gt; &#xA;&lt;p&gt;Wir halten auf der MetaNook 2012 den Vortrag &#34;Moderne Webanwendungen mit Rails und Backbone.js&#34;. Dieses Repository enthält den LaTeX-Quellcode des Vortrags. Weitere Informationen zur MetaNook unte &lt;a href=&#34;http://metameute.de/nook2012/&#34;&gt;http://metameute.de/nook2012/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Zusammenfassung&lt;/h2&gt; &#xA;&lt;p&gt;Für die Realisierung von Mehrbenutzersystem mit Datenbankanbindung existieren verschiedene Ansätze. Bei einer Desktopanwendung wird eine spezielle Software mit der Geschäftslogik und der GUI auf dem Client installiert. Die Kommunikation mit dem Server ist dabei auf den Austausch von Daten beschränkt. Bei klassischen Webanwendungen befindet sich die Geschäftslogik komplett auf dem Server, der auch die GUI in Form von HTML-Seiten generiert und an den Client überträgt. Der Nachteil dieser Lösung liegt darin, dass für jede Aktion des Anwenders die GUI vollständig neu übertragen werden muss.&lt;/p&gt; &#xA;&lt;p&gt;Dank JavaScript können moderne Webanwendungen die Vorteile beider Welten kombinieren. Die Geschäftslogik wird in einem RESTful Webservice gekapselt und auf dem Server durchgeführt. Auf dem Client wird nur ein Browser benötigt, der eine Single-Page-Application ausführt. Die GUI wird vollständig auf dem Client im Browser erzeugt, sodass die Kommunikation über das Netzwerk wieder auf die reinen Daten beschränkt bleibt.&lt;/p&gt; &#xA;&lt;p&gt;Im Rahmen unserer Fallstudie entwickeln wir eine Hotelverwaltungssoftware als moderne Webanwendung. In diesem Vortrag wollen wir die dafür durchgeführte Entwicklungsarbeit vorstellen und praktische Hinweise zur Realisierung von modernen Webanwendungen geben. Wir beginnen mit einer Einführung in Webanwendungen und Webservices und erläutern anschließend unsere Realisierung von Server und Client.&lt;/p&gt; &#xA;&lt;p&gt;Ruby on Rails erlaubt es sehr leicht, RESTful Webservices zu implementieren. Wir beschreiben die Grundideen von Rails und die Trennung von Model, View und Controller. Wir gehen insbesondere auf die spezielle Anforderungen im Bereich der Views zur Generierung von JSON und XML ein und erläutern die Realiserung und Validierung von one-to-many und many-to-many Relationen. Mit Backbone.js steht ein JavaScript-Framework zur Verfügung, dass es erlaubt, Collections und Models der REST-Schnittstelle einfach auf dem Client zu implementieren. Für die Erzeugung der GUI verwenden wir jQuery und ein eigenes Templates-System, dass die template-Funktion aus Underscore.js verwendet. Weiter erläutern wir den Erhalt der Browser-Historie und Lesezeichen Dank Routing und die Verwaltung von JavaScript-Abhängigkeiten mit Require.js.&lt;/p&gt; &#xA;&lt;h2&gt;Gliederung&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Webanwendungen &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Webanwendungen vs. Desktopanwendung&lt;/li&gt; &#xA;   &lt;li&gt;moderne Webanwendungen: Teile der Geschäftslogik und GUI im Client &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Daten statt HTML übertragen&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Server als RESTful Webservice mit Ruby on Rails&lt;/li&gt; &#xA;   &lt;li&gt;Client als Single-Page-Application mit JavaScript&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Webservice mit Rails 3.2 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Model-View-Controller-Realisierung in Rails&lt;/li&gt; &#xA;   &lt;li&gt;Rails kann REST&lt;/li&gt; &#xA;   &lt;li&gt;Verwendung der Responder aus Rails 3&lt;/li&gt; &#xA;   &lt;li&gt;Zurück zu MVC mit representative_view oder RABL &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Entkopplung der Repräsentation von den internen Datenstrukturen&lt;/li&gt; &#xA;     &lt;li&gt;Trennung von View und Controller&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Assoziationen zwischen Ressourcen &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;one-to-one und one-to-many mit Rails-Bordmitteln&lt;/li&gt; &#xA;     &lt;li&gt;Warum many-to-many nicht funktioniert&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Validierung der referenziellen Integrität&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Client mit Backbone.js &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;JavaScript aufbohren mit Underscore.js&lt;/li&gt; &#xA;   &lt;li&gt;DOM-Manipulation mit jQuery&lt;/li&gt; &#xA;   &lt;li&gt;REST-Client mit Backbone.js &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Collections realisieren Resourcen&lt;/li&gt; &#xA;     &lt;li&gt;Models realisieren Datenmodelle&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Browser-Historie und Lesezeichen Dank Routing&lt;/li&gt; &#xA;   &lt;li&gt;Navigation mit dem StateModel&lt;/li&gt; &#xA;   &lt;li&gt;HTML-Erzeugung Dank _.template und eigenem FormBuilder &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;innerHTML / $.html() ist der schnellste Weg&lt;/li&gt; &#xA;     &lt;li&gt;Browser sind gut im HTML parsen&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Abhängigkeiten auflösen mit Require.js&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Hier finden sich Folien und das zugehörige Skript des Vortrages als PDF-Dateien.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.mlte.de/downloads/rails-backbone.pdf&#34;&gt;Präsentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.mlte.de/downloads/rails-backbone-script.pdf&#34;&gt;Script-Version der Präsentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>