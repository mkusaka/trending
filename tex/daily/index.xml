<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-01T01:41:04Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uwdata/living-papers</title>
    <updated>2023-11-01T01:41:04Z</updated>
    <id>tag:github.com,2023-11-01:/uwdata/living-papers</id>
    <link href="https://github.com/uwdata/living-papers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Authoring tools for scholarly communication. Create interactive web pages or formal research papers from markdown source.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Living Papers&lt;/h1&gt; &#xA;&lt;p&gt;Authoring tools for scholarly communication. Create interactive web pages or formal research papers from markdown source. Living Papers is intended to be a &#34;language toolkit&#34; for parsing, transforming, and rendering documents.&lt;/p&gt; &#xA;&lt;p&gt;To get up and running quickly, use the &lt;a href=&#34;https://github.com/uwdata/living-papers-template/&#34;&gt;Living Papers project template&lt;/a&gt;. Then take a look at other &lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/examples&#34;&gt;example articles&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This repo is a research testbed for Living Papers development. There will be bugs. Contributions (issues, PRs, etc) are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;For more about Living Papers&#39; motivation and development please see the &lt;strong&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers-paper&#34;&gt;Living Papers UIST&#39;23 paper&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5-4wd3dVtEk&#34;&gt;overview video&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To cite Living Papers in research publication, please use the following citation data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{heer2023living,&#xA;  author = {Heer, Jeffrey and Conlen, Matthew and Devireddy, Vishal and Nguyen, Tu and Horowitz, Joshua},&#xA;  title = {Living Papers: A Language Toolkit for Augmented Scholarly Communication},&#xA;  year = {2023},&#xA;  url = {https://doi.org/10.1145/3586183.3606791},&#xA;  doi = {10.1145/3586183.3606791},&#xA;  booktitle = {Proceedings of the 36th Annual ACM Symposium on User Interface Software and Technology},&#xA;  articleno = {42},&#xA;  numpages = {13},&#xA;  series = {UIST &#39;23}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Pre-Requisites&lt;/h3&gt; &#xA;&lt;p&gt;Before working with Living Papers, set up your local environment:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://docs.npmjs.com/downloading-and-installing-node-js-and-npm&#34;&gt;Node.js and npm&lt;/a&gt; if you don&#39;t have them already. We recommend using a node version manager like &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt;. Node v16.17 or higher is recommended.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://pandoc.org/installing.html&#34;&gt;pandoc&lt;/a&gt;. You should be able to run &lt;code&gt;pandoc&lt;/code&gt; from the command line. A recent version of Pandoc (v2.18 or higher) is recommended.&lt;/li&gt; &#xA; &lt;li&gt;Install other software packages as needed:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use R code blocks, install &lt;a href=&#34;https://cloud.r-project.org/&#34;&gt;R&lt;/a&gt; along with the &lt;code&gt;knitr&lt;/code&gt; package and any other libraries you wish to use.&lt;/li&gt; &#xA; &lt;li&gt;To publish LaTeX / PDF output, install a TeX distribution such as &lt;a href=&#34;https://www.tug.org/texlive/&#34;&gt;TeX Live&lt;/a&gt;. You should be able to run &lt;code&gt;pdflatex&lt;/code&gt; and &lt;code&gt;bibtex&lt;/code&gt; from the command line.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage Instructions&lt;/h3&gt; &#xA;&lt;p&gt;To use Living Papers for a new publishing project, you can install the &lt;code&gt;@living-papers/cli&lt;/code&gt; npm package, which provides the &lt;code&gt;lpub&lt;/code&gt; utility to convert source to output documents.&lt;/p&gt; &#xA;&lt;p&gt;That said, we recommend copying the &lt;a href=&#34;https://github.com/uwdata/living-papers-template/&#34;&gt;project template repo&lt;/a&gt; for a pre-configured authoring setup.&lt;/p&gt; &#xA;&lt;h3&gt;Developer Instructions&lt;/h3&gt; &#xA;&lt;p&gt;Clone this monorepo, run &lt;code&gt;npm install&lt;/code&gt; to install JavaScript dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Once installed, you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run build&lt;/code&gt; to build the monorepo package exports.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run test&lt;/code&gt; to run test cases across monorepo packages.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npm run lint&lt;/code&gt; to lint source code across monorepo packages.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;npx lpub filename.md&lt;/code&gt; to compile a source file in the current directory.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/examples&#34;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt; folder contains example Living Papers articles. Within the folder for each example, run &lt;code&gt;npm run build&lt;/code&gt; to produce compiled output article(s). Be sure to run &lt;code&gt;npm run build&lt;/code&gt; at the monorepo level before trying to build examples.&lt;/p&gt; &#xA;&lt;h2&gt;Package Overview&lt;/h2&gt; &#xA;&lt;p&gt;This repository uses a &lt;a href=&#34;https://en.wikipedia.org/wiki/Monorepo&#34;&gt;monorepo&lt;/a&gt; organization. Here is an overview of the folder structure:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/examples&#34;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt;: Example Living Papers articles&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/packages&#34;&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt;: Primary Living Papers packages &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/packages/ast&#34;&gt;&lt;code&gt;ast&lt;/code&gt;&lt;/a&gt;: Abstract Syntax Tree (AST) manipulation&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/packages/cli&#34;&gt;&lt;code&gt;cli&lt;/code&gt;&lt;/a&gt;: Command line interface programs&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/packages/compiler&#34;&gt;&lt;code&gt;compiler&lt;/code&gt;&lt;/a&gt;: Article parser and compiler&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/packages/components&#34;&gt;&lt;code&gt;components&lt;/code&gt;&lt;/a&gt;: Web components for HTML output&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/packages/runtime&#34;&gt;&lt;code&gt;runtime&lt;/code&gt;&lt;/a&gt;: Reactive runtime for HTML output&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/packages/runtime-compiler&#34;&gt;&lt;code&gt;runtime-compiler&lt;/code&gt;&lt;/a&gt;: JavaScript parser/compiler for the reactive runtime&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/templates&#34;&gt;&lt;code&gt;templates&lt;/code&gt;&lt;/a&gt;: Article templates &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/templates/html&#34;&gt;&lt;code&gt;html&lt;/code&gt;&lt;/a&gt;: Built-in templates for HTML output&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/uwdata/living-papers/tree/main/templates/latex&#34;&gt;&lt;code&gt;latex&lt;/code&gt;&lt;/a&gt;: Built-in templates for LaTeX output&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>ice1000/multi-school-sop</title>
    <updated>2023-11-01T01:41:04Z</updated>
    <id>tag:github.com,2023-11-01:/ice1000/multi-school-sop</id>
    <link href="https://github.com/ice1000/multi-school-sop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A latex template for writing statement-of-purpose for many schools at the same time&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Multi-school SoP&lt;/h1&gt; &#xA;&lt;p&gt;A $\LaTeX$ template for writing statement-of-purpose for many schools at the same time.&lt;/p&gt; &#xA;&lt;p&gt;Note that this template is tested with a Linux system (including WSL) with TeX Live. It needs Perl 5 (preinstalled on most Linux distributions) and &lt;code&gt;pdflatex&lt;/code&gt; to work.&lt;/p&gt; &#xA;&lt;p&gt;You don&#39;t need any knowledge on Perl to use this template.&lt;/p&gt; &#xA;&lt;p&gt;You are called &#34;Nikola Tesla&#34; in the template, and you&#39;re responsible to change it to your name.&lt;/p&gt; &#xA;&lt;p&gt;The template has the following pre-built features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;\fullcite&lt;/code&gt; to include a citation in the body of the document,&lt;/li&gt; &#xA; &lt;li&gt;Palatino font,&lt;/li&gt; &#xA; &lt;li&gt;Based on &lt;code&gt;article&lt;/code&gt; but has smaller page margins.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You are encouraged to change it to fit your own preferences.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;It is pure pain to write $n$ different documents for $n$ schools, where:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Most of the contents are the same,&lt;/li&gt; &#xA; &lt;li&gt;Every document has a small portion of school-specific content,&lt;/li&gt; &#xA; &lt;li&gt;Whenever you want to make some small changes, you have to change all $n$ documents.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This template is designed to solve this problem, and you can even have a PDF contains all school-specific content (so you can send it to your senpais for review) and a PDF with no school-specific content.&lt;/p&gt; &#xA;&lt;p&gt;There will be $n+2$ PDFs generated.&lt;/p&gt; &#xA;&lt;h2&gt;Build and run&lt;/h2&gt; &#xA;&lt;p&gt;Go to the &lt;code&gt;src&lt;/code&gt; directory, and run &lt;code&gt;perl build-sop.pl&lt;/code&gt; to compile the documents.&lt;/p&gt; &#xA;&lt;p&gt;Currently, the template assumes you&#39;re applying to UPenn, UIUC, and U of T. It compiles to the following files:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;src/sop-penn.pdf&#xA;src/sop-uiuc.pdf&#xA;src/sop-uoft.pdf&#xA;src/sop-all.pdf&#xA;src/sop-null.pdf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As the name suggests, &lt;code&gt;sop-null.pdf&lt;/code&gt; contains no school-specific content, and &lt;code&gt;sop-all.pdf&lt;/code&gt; contains all school-specific content.&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;sop.tex&lt;/code&gt;, you can use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;\ifdefined\includePenn&#xA;Replace with UPenn-specific content here&#xA;\fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will only appear in &lt;code&gt;sop-all.pdf&lt;/code&gt; and &lt;code&gt;sop-penn.pdf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Adding a new school&lt;/h2&gt; &#xA;&lt;p&gt;You probably want to add more schools, here&#39;s how. Open &lt;code&gt;build-sop.pl&lt;/code&gt;, and you&#39;ll see this line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;my @schools = qw/Penn Uiuc UofT/;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can add more school names (no whitespace allowed), for instance if you want to apply to CMU, change it to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;my @schools = qw/Penn Uiuc UofT CMU/;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And now you can use &lt;code&gt;\ifdefined\includeCMU&lt;/code&gt; in &lt;code&gt;sop.tex&lt;/code&gt;, and it will only appear in &lt;code&gt;sop-all.pdf&lt;/code&gt; and &lt;code&gt;sop-cmu.pdf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that the bibliography is shared among all schools, and it will be compiled from the first element in your &lt;code&gt;@schools&lt;/code&gt; array. This means you don&#39;t want to have citations in your school-specific content, or it will mess up the bibliography generation. This is a limitation of the current implementation, but it is good for compilation speed.&lt;/p&gt;</summary>
  </entry>
</feed>