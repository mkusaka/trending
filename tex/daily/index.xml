<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-25T01:42:58Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>harvard-ml-courses/cs181-s24-homeworks</title>
    <updated>2024-01-25T01:42:58Z</updated>
    <id>tag:github.com,2024-01-25:/harvard-ml-courses/cs181-s24-homeworks</id>
    <link href="https://github.com/harvard-ml-courses/cs181-s24-homeworks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CS 181 Spring 2024 Homeworks&lt;/h1&gt; &#xA;&lt;p&gt;Homeworks will be released from this GitHub repository. The recommended way to download files is to clone this repository using&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/harvard-ml-courses/cs181-s24-homeworks.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then run &lt;code&gt;git pull&lt;/code&gt; to fetch the most recent updates. You can also click the green &lt;code&gt;Code&lt;/code&gt; button and then &lt;code&gt;Download ZIP&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1BHySWJvxphouMu7tVaXKcg0cptAbmOKlCTjVtOPCLWw/edit?usp=sharing&#34;&gt;See the course schedule here.&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please request clarifications through &lt;a href=&#34;https://edstem.org/us/courses/51511/discussion/&#34;&gt;our Ed discussion board&lt;/a&gt; under the corresponding label.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>OlssonF/NEON-forecast-challenge-workshop</title>
    <updated>2024-01-25T01:42:58Z</updated>
    <id>tag:github.com,2024-01-25:/OlssonF/NEON-forecast-challenge-workshop</id>
    <link href="https://github.com/OlssonF/NEON-forecast-challenge-workshop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Repository of materials for the tutorial &#39;Can you predict the future? Introduction to the NEON Forecasting Challenge&#39;.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NEON Forecast Challenge Workshop Pre-Workshop Instructions&lt;/h1&gt; &#xA;&lt;p&gt;This is a repository for materials to complete the NEON Ecological Forecasting Challenge workshop. The main branch focuses on forecasts for the aquatics theme forecast production. Select a different branch of the repository to complete the workshop for other theme forecasts.&lt;/p&gt; &#xA;&lt;p&gt;This workshop repository is a dynamic repository and may change in future iterations.&lt;/p&gt; &#xA;&lt;p&gt;The materials are split into three sections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Submit_forecast&lt;/code&gt; - want to get started with making and submitting forecasts to the Challenge - start here!&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Automate_forecasts&lt;/code&gt; - you&#39;ve made a model and submitted a forecast successfully? Automate your workflow to submit a new forecacst every day&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Analyse_scores&lt;/code&gt; - interested in knowing how different forecasts are performing within the Challenge? This is a brief introduction in how to access the scored forecasts and do some simple analyses.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Below are some pre-workshop instructions to make sure you are ready to go!&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Any questions, email &lt;a href=&#34;mailto:freyao@vt.edu&#34;&gt;freyao@vt.edu&lt;/a&gt; before the workshop!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;1. Setting up your R environment&lt;/h2&gt; &#xA;&lt;p&gt;R version 4.2 is required to run the code in this workshop. You should also check that your Rtools is up to date and compatible with R 4.2, see (&lt;a href=&#34;https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html&#34;&gt;https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The following packages need to be installed using the following code.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;install.packages(&#39;remotes&#39;)&#xA;install.packages(&#39;tidyverse&#39;) # collection of R packages for data manipulation, analysis, and visualisation&#xA;install.packages(&#39;lubridate&#39;) # working with dates and times&#xA;remotes::install_github(&#39;eco4cast/neon4cast&#39;) # package from NEON4cast challenge organisers to assist with forecast building and submission&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;2. Get the code&lt;/h2&gt; &#xA;&lt;p&gt;There are 3 options for getting the code locally so that you can run it, depending on your experience with Github/Git you can do one of the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fork (recommended)&lt;/strong&gt; the repository to your Github and then clone the repository from your Github repository to a local RStudio project. This will allow you to modify the scripts and push it back to your Github.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find the fork button in the top right of the webpage --&amp;gt; Create Fork. This will generate a copy of this repository in your Github.&lt;/li&gt; &#xA; &lt;li&gt;Then use the &amp;lt;&amp;gt; Code button to copy the HTTPS link (from you Github!).&lt;/li&gt; &#xA; &lt;li&gt;In RStudio, go to New Project --&amp;gt; Version Control --&amp;gt; Git.&lt;/li&gt; &#xA; &lt;li&gt;Paste the HTTPS link in the Repository URL space, and choose a suitable location for your local repository --&amp;gt; Create Project.&lt;/li&gt; &#xA; &lt;li&gt;Open the .Rmd file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Clone&lt;/strong&gt; the workshop repository to a local RStudio project. Your local workspace will be set up and you can commit changes locally but they won&#39;t be pushed back to the Github repository.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find the fork button in the top left of the webpage --&amp;gt; Create Fork.&lt;/li&gt; &#xA; &lt;li&gt;Then use the &amp;lt;&amp;gt; Code button to copy the HTTPS link.&lt;/li&gt; &#xA; &lt;li&gt;In RStudio go to New Project --&amp;gt; Version Control --&amp;gt; Git.&lt;/li&gt; &#xA; &lt;li&gt;Paste the HTTPS link in the Repository URL space, and choose a suitable location for your local repository --&amp;gt; Create Project.&lt;/li&gt; &#xA; &lt;li&gt;Open the .Rmd file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Download&lt;/strong&gt; the zip file of the repository code. You can save changes (without version control) locally.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Find the &amp;lt;&amp;gt; Code button --&amp;gt; Download ZIP.&lt;/li&gt; &#xA; &lt;li&gt;Unzip this to a location on your PC and open the &lt;code&gt;ESA2023_neon4cast_workshop.Rproj&lt;/code&gt; file in RStudio.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More information on forking and cloning in R can be found at &lt;a href=&#34;https://happygitwithr.com/fork-and-clone.html&#34;&gt;happygitwithr&lt;/a&gt;, a great resource to get you started using version control with RStudio.&lt;/p&gt; &#xA;&lt;p&gt;For the workshop you can follow along via the rmarkdown document (&lt;code&gt;Submit_forecast/NEON_forecast_challenge_workshop_aquatics.Rmd&lt;/code&gt;) or the md (&lt;code&gt;Submit_forecast/NEON_forecast_challenge_workshop_aquatics.md&lt;/code&gt;), both of which can be downloaded here or you can fork the whole repository.&lt;/p&gt; &#xA;&lt;h2&gt;Optional: Use Docker&lt;/h2&gt; &#xA;&lt;p&gt;Another option to running the materials locally is to use a Docker container that has all the packages pre-installed.&lt;/p&gt; &#xA;&lt;h3&gt;Installing Docker&lt;/h3&gt; &#xA;&lt;p&gt;Go to &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt; to install the relevant install for your platform (available for PC, Mac and Linux). Also see &lt;a href=&#34;https://docs.docker.com/desktop/&#34;&gt;https://docs.docker.com/desktop/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;NOTE:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you&#39;re running Windows, you will need WSL (Windows Subsystem for Linux)&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re running a Linux distribution, you may have to enable Viritualization on your computer (see &lt;a href=&#34;https://stackoverflow.com/questions/76646465/unable-to-launch-docker-desktop-on-ubuntu/76655270#76655270&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Running a docker container&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Launch Docker Desktop (either from the Command Line or by starting the GUI)&lt;/li&gt; &#xA; &lt;li&gt;At the command line run the following command which tells docker to &lt;code&gt;run&lt;/code&gt; the container with the name &lt;code&gt;eco4cast/rocker-neon4cast&lt;/code&gt; that has all the packages and libraries installed already. The &lt;code&gt;PASSWORD=yourpassword&lt;/code&gt; sets a simple password that you will use to open the container. The &lt;code&gt;-ti&lt;/code&gt; option starts both a terminal and an interactive session.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;docker run --rm -ti -e PASSWORD=yourpassword -p 8787:8787 eco4cast/rocker-neon4cast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This can take a few minutes to download and install. It will be quicker the next time you launch it.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Open up a web browser and navigate to &lt;code&gt;http://localhost:8787/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Enter the username: &lt;code&gt;rstudio&lt;/code&gt; and password: &lt;code&gt;yourpassword&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;You should see a R Studio interface with all the packages etc. pre-installed and ready to go.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You can close this localhost window (and then come back to it) but if you close the container from Docker (turn off your computer etc.) any changes will be lost unless you push them to Github or exported to your local environment.&lt;/p&gt; &#xA;&lt;p&gt;Then follow the instructions for Getting the Code above (&lt;code&gt;2. Get the Code&lt;/code&gt;).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>brigkAIR/SwarmDroneChallenge</title>
    <updated>2024-01-25T01:42:58Z</updated>
    <id>tag:github.com,2024-01-25:/brigkAIR/SwarmDroneChallenge</id>
    <link href="https://github.com/brigkAIR/SwarmDroneChallenge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository contains all the regulations for the2023 swarm drone challenge&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Swarm Drone Challenge Rulebook&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a Latex project that contains the rules for the Swarm Drone Challenge. If you are a participant of the swarm drone challenge feel free to open issues to discuss questions or fork this repository and create a pull request with your proposed rule changes. The document consists of a main file called sdc_regulations.tex that references the files &lt;code&gt;pages/technical.tex&lt;/code&gt; and &lt;code&gt;pages/competition_outline.tex&lt;/code&gt;. The file &lt;code&gt;technical.tex&lt;/code&gt; contains all rules regarding the technical implementation of the drone and the &lt;code&gt;competition_outline.tex&lt;/code&gt; file contains all the rules regarding the competition itself e.g. Flight Arena, Scoring.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started to contribute to this rulebook&lt;/h2&gt; &#xA;&lt;p&gt;To edit this document you can use any latex editor of your choice. If you are using VS Code and have &lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;Docker Desktop&lt;/a&gt; installed you can simply use the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&#34;&gt;Dev Containers&lt;/a&gt; plugin. This repository comes with a dev container configuration that contains the latex installation with all the dependencies you need.&lt;/p&gt; &#xA;&lt;h3&gt;1. Fork this repository&lt;/h3&gt; &#xA;&lt;p&gt;Create your own fork from this repository.&lt;/p&gt; &#xA;&lt;h3&gt;2. Clone your forked Reposotry&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt; git clone git@github.com:&amp;lt;YOUR-GITHUB-NAME&amp;gt;/SwarmDroneChallenge.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Open VS Code&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd SwarmDroneChallenge&#xA;code . &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;4. Reopen in Container&lt;/h3&gt; &#xA;&lt;p&gt;Press at the blue button in the left bottom corner and select &lt;code&gt;Reopen in Container&lt;/code&gt; from the menu. &lt;img src=&#34;https://raw.githubusercontent.com/brigkAIR/SwarmDroneChallenge/main/figures/VSCode_dev_containers.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5. Build pdf&lt;/h3&gt; &#xA;&lt;p&gt;Now you&#39;ll find a run button at the top that you can use to build the latex pdf as soon as you open a tex file. &lt;img src=&#34;https://raw.githubusercontent.com/brigkAIR/SwarmDroneChallenge/main/figures/VSCode_buildpdf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6. Add, Commit and Push&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;git add&#xA;git commit -m &#34;message that describe the changes that you made&#34;&#xA;git push origin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;7. Create Pull Request to BrigkAir Repository&lt;/h3&gt; &#xA;&lt;p&gt;Create a Pull Request to merge the changes in your forked repository with the brigkAir repository.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;As soon as a version is ready for release it will be published under &lt;a href=&#34;https://github.com/brigkAir/SwarmDroneChallenge/releases&#34;&gt;releases&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>