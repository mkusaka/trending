<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-14T01:43:43Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>th-nuernberg/thesis-template</title>
    <updated>2023-12-14T01:43:43Z</updated>
    <id>tag:github.com,2023-12-14:/th-nuernberg/thesis-template</id>
    <link href="https://github.com/th-nuernberg/thesis-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A LaTeX template for writing reports and theses.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Thesis Template&lt;/h1&gt; &#xA;&lt;p&gt;Basic template for reports, bachelor and master theses at the &lt;a href=&#34;https://www.th-nuernberg.de/&#34;&gt;Technische Hochschule Nürnberg Georg Simon Ohm&lt;/a&gt;. It is set up to be printed as a book including a coverpage.&lt;/p&gt; &#xA;&lt;h2&gt;Important!&lt;/h2&gt; &#xA;&lt;p&gt;You need to download, fill and save-as-pdf the official &lt;a href=&#34;https://intern.ohmportal.de/fileadmin/Gelenkte_Doks/Abt/SZS/SB/SB_0050_FO_Pruefungsrechtliche_Erklaerung_und_Erklaerung_zur_Veroeffentlichung_der_Abschlussarbeit_public.pdf&#34;&gt;statement and copyright form&lt;/a&gt;, in its most recent version. It will be included in the final &lt;code&gt;thesis.pdf&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;A few tips for writing your thesis:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create a branch for your thesis; this allows you to easily sync with upstream (this repository).&lt;/li&gt; &#xA; &lt;li&gt;Disable automatic hard line wrap (with newlines); use soft wrap instead. &lt;a href=&#34;https://stackoverflow.com/questions/319925/difference-between-hard-wrap-and-soft-wrap&#34;&gt;(What&#39;s that about?)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Write one sentence per line -- this makes for nice diffs in git.&lt;/li&gt; &#xA; &lt;li&gt;For capitalization of headlines etc., follow the &lt;a href=&#34;https://journals.ieeeauthorcenter.ieee.org/your-role-in-article-production/ieee-editorial-style-manual/&#34;&gt;IEEE Style Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use UTF-8 encoding on your files to make special characters wörk.&lt;/li&gt; &#xA; &lt;li&gt;Keep your literature up to date -- add references to your bib file as you read them.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other resources regarding your thesis&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://intern.ohmportal.de/institutionen/fakultaeten/informatik/studierende/infos-zum-studium/abschlussarbeiten/informationen-und-vorlagen/page.html&#34;&gt;Informationen und Vorlagen&lt;/a&gt; (German, Ohm intranet)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.in.th-nuernberg.de/Professors/Weber/Abschlussarbeit%20Methodik.pdf&#34;&gt;Wie schreibe ich eine Abschlussarbeit&lt;/a&gt; by Prof. Dr. Rainer Weber (German, Ohm intranet).&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>plain-plain-text/simple-cv</title>
    <updated>2023-12-14T01:43:43Z</updated>
    <id>tag:github.com,2023-12-14:/plain-plain-text/simple-cv</id>
    <link href="https://github.com/plain-plain-text/simple-cv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create a “simple” CV with Markdown and YAML that, via Pandoc, gets converted into a pdf and webpage.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;simple-cv&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/BPNaV5B.png&#34; alt=&#34;Simple-cv in action&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository lets one write an academic CV using Markdown. With the discrete Markdown files and a bit of information provided by &lt;code&gt;YAML&lt;/code&gt; files, it generates a CV in both &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;pdf&lt;/code&gt; forms that have similar content. Furthermore, it even allows you to host them on GitHub Pages. This project was inspired by my &lt;a href=&#34;http://cv.moacir.com&#34;&gt;own cv&lt;/a&gt;, which uses the same underlying logic.&lt;/p&gt; &#xA;&lt;p&gt;Demos:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plain-plain-text.github.io/simple-cv/&#34;&gt;http://plain-plain-text.github.io/simple-cv/ &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://plain-plain-text.github.io/simple-cv/H_W_Jones.pdf&#34;&gt;http://plain-plain-text.github.io/simple-cv/H_W_Jones.pdf &lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements/Assumptions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;You have used the command line before. The creation of the &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;pdf&lt;/code&gt; files is done with a shell script you run from the command line.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You generally know what Git is and how to stage, commit, and push.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You know the basics of the &lt;a href=&#34;https://learnxinyminutes.com/docs/yaml/&#34;&gt;YAML syntax&lt;/a&gt;. The repository as it exists here has examples of all the features in it, but it’s useful to know what YAML is, at least.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pandoc.org/&#34;&gt;Pandoc&lt;/a&gt; installed. The Pandoc people have an &lt;a href=&#34;https://pandoc.org/installing.html&#34;&gt;installation page&lt;/a&gt; that explains the process for various systems. For Macs, you can simply do &lt;code&gt;brew install pandoc&lt;/code&gt; if you have &lt;a href=&#34;http://brew.sh&#34;&gt;Homebrew&lt;/a&gt; installed, which you should.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A TeX engine of some sort. The folks at Pandoc &lt;a href=&#34;https://pandoc.org/installing.html&#34;&gt;have recommendations and instructions&lt;/a&gt; for different operating systems.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork this repository by clicking on the “Fork” link at the top of this page.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In your new, forked repository, enable GitHub pages:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Click on the “Settings” on your repository’s GitHub page.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Scroll down to “GitHub Pages” and choose “master branch /docs folder.”&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click “Save” beside that.&lt;/p&gt; &lt;p&gt;Now the sample CV should be visible at &lt;code&gt;http://GITHUBUSERNAME.github.io/simple-cv/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Your forked repository should now be cloned to your computer. GitHub &lt;a href=&#34;https://help.github.com/articles/fork-a-repo/&#34;&gt;provides extensive instructions&lt;/a&gt;, but your own method may vary. If you use Atom as your text editor (which is a good choice, especially for beginners), you can follow &lt;a href=&#34;https://the-javascripting-english-major.org/1-environment#s-link-atom-to-github&#34;&gt;the instructions I wrote for my JavaScript students on linking Atom to a GitHub repository&lt;/a&gt;, but you should note that the url you want to use is &lt;code&gt;https://github.com/GITHUBUSERNAME/simple-cv.git&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once the repository is forked to your GitHub account and cloned to your computer, you can start editing the YAML files in &lt;code&gt;metadata/&lt;/code&gt; and the Markdown files in &lt;code&gt;sections/&lt;/code&gt; as indicated below.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Editing&lt;/h2&gt; &#xA;&lt;p&gt;There are three things to edit in this repository.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;The data, which is simple information about yourself and about the CV you want, which is distributed among the &lt;code&gt;YAML&lt;/code&gt; files saved in &lt;code&gt;metadata/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Each section of your CV (education, publications, etc.) is its own Markdown file in &lt;code&gt;sections/&lt;/code&gt;. &lt;strong&gt;Note:&lt;/strong&gt; The processing script does not know about these files, so you need to inform the script about them by filling out the file &lt;code&gt;sections.txt&lt;/code&gt; with each file’s name on a separate line. This allows you to determine the order of the sections on the fly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The look and feel of both the &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;pdf&lt;/code&gt; versions of the document are managed by the two files in the &lt;code&gt;templates/&lt;/code&gt; directory. The &lt;a href=&#34;https://pandoc.org/MANUAL.html#templates&#34;&gt;Pandoc templating language&lt;/a&gt; is pretty straightforward, and the templates reveal how the data in &lt;code&gt;metadata/&lt;/code&gt; is incorporated into the templates. That said, just because the templating language is easy doesn’t mean the templates are. The &lt;code&gt;html&lt;/code&gt; file depends on the &lt;a href=&#34;http://getbootstrap.com&#34;&gt;Bootstrap&lt;/a&gt; framework, and the &lt;code&gt;pdf&lt;/code&gt; file depends on the rather expansive &lt;a href=&#34;https://ctan.org/pkg/memoir?lang=en&#34;&gt;&lt;code&gt;memoir&lt;/code&gt; LaTeX package&lt;/a&gt;. I have tried to make the defaults acceptable, aesthetically, but I leave fine tuning up to you.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When you’ve made your changes, you must run the shell script in command line:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sh process.sh&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have the &lt;a href=&#34;https://atom.io/packages/run-command&#34;&gt;&lt;code&gt;run-command&lt;/code&gt;&lt;/a&gt; package installed in Atom, you can simply type &lt;code&gt;ctrl-r&lt;/code&gt; and type in &lt;code&gt;sh process.rb&lt;/code&gt; in the little dialog box to process the files without the need of opening the command line or leaving Atom.&lt;/p&gt; &#xA;&lt;p&gt;The shell script produces new versions of the &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;pdf&lt;/code&gt; files, so you can subsequently stage, commit, and push, to make the files available online via GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Single source for both “paper” and web versions of your cv.&lt;/li&gt; &#xA; &lt;li&gt;Customizable sections that can be switched in and out or reordered just by changing the contents of &lt;code&gt;sections.txt&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Customizable styles for &lt;code&gt;html&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;pdf&lt;/code&gt; (fonts, etc.) via &lt;code&gt;YAML&lt;/code&gt; configuration files.&lt;/li&gt; &#xA; &lt;li&gt;Straightforward templates that allow for massive flexibility with comparatively little effort.&lt;/li&gt; &#xA; &lt;li&gt;Agnostic taxonomy of sections. If you don’t want to include your publications, say, don’t.&lt;/li&gt; &#xA; &lt;li&gt;Responsive &lt;code&gt;html&lt;/code&gt; page with dynamically generated navbar provided by &lt;a href=&#34;http://getbootstrap.com&#34;&gt;Bootstrap&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;URL support for digital projects, etc., in the &lt;code&gt;pdf&lt;/code&gt;, meaning readers can click on the &lt;code&gt;pdf&lt;/code&gt; to open websites.&lt;/li&gt; &#xA; &lt;li&gt;Dublin Core, Open Graph, and Twitter card metadata in the web version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;code&gt;metadata/&lt;/code&gt; &lt;code&gt;YAML&lt;/code&gt; files.&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;This section is liable to be out of date!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;format.yml&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This document holds all the configuration options shared in common between &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;pdf&lt;/code&gt; versions. documents as well as the &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;pdf&lt;/code&gt; versions on their own. These options become variables like &lt;code&gt;$format.title$&lt;/code&gt; in the templates. The templates use &lt;a href=&#34;https://pandoc.org/MANUAL.html#templates&#34;&gt;Pandoc’s templating language&lt;/a&gt;, which allows for, crucially, iteration and conditionals. The options are split up into three groups:&lt;/p&gt; &#xA;&lt;h4&gt;General options&lt;/h4&gt; &#xA;&lt;p&gt;These are mandatory:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;title&lt;/code&gt; this sets the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tag for the webpage and the metadata title for the pdf.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;author&lt;/code&gt;: This can be a collection or a single value of the author’s name.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;author-lastname-first&lt;/code&gt;: Dublin Core prefers the names to be with the family name first. Definitely surround this with quotes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mode&lt;/code&gt;: For the time being, this must be set to &lt;code&gt;markdown&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cv-sections&lt;/code&gt;: This &lt;code&gt;YAML&lt;/code&gt; collection stands in as the list of sections to the CV. Every section is its own Markdown page in the &lt;code&gt;sections/&lt;/code&gt; directory. The order in which they are listed here is the order in which they appear in the final documents&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;contact-information&lt;/code&gt;: The first section, “Contact Information,” isn’t created by a section above. Here is where you can set what the heading is.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;markers&lt;/code&gt;: Most of the CV is probably unordered lists. Here you can set what markers make up the first three levels deep on the list. Any sort of character should work for html, but some characters may break the pdf-template. I use &lt;code&gt;»&lt;/code&gt; for top level and &lt;code&gt;›&lt;/code&gt; for the rest. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;level-1&lt;/code&gt;: First level marker. Default is &lt;code&gt;•&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;level-2&lt;/code&gt;: Second level marker. Default is &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;level-3&lt;/code&gt;: Third level marker. Default is &lt;code&gt;*&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;pdf&lt;/code&gt; options&lt;/h4&gt; &#xA;&lt;p&gt;These options alert the &lt;code&gt;pdf&lt;/code&gt; template to make certain decisions in building the document&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;filename&lt;/code&gt;: The name of the resulting &lt;code&gt;pdf&lt;/code&gt; document (which is linked to from the &lt;code&gt;html&lt;/code&gt; page as well).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;footer&lt;/code&gt;: By default, a footer is added that includes the author(s) name(s) and the last modified date. One or both of those options can be suppressed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fonts&lt;/code&gt;: This lets you give the name of OpenType fonts for use in the document, but they must be in the &lt;code&gt;fonts/&lt;/code&gt; directory. See &lt;code&gt;fonts/FONTS-README.md&lt;/code&gt; for more details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;headings&lt;/code&gt;: One of two settings for the section headings. The default is &lt;code&gt;overlapped&lt;/code&gt;, which creates headings that jut out to the left a bit in comparison to the body. The only other option is &lt;code&gt;margin&lt;/code&gt;, which places the headings in their own boxes in the margin to create a nice effect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;smallcaps-headings&lt;/code&gt;: Whether the headers and name are in small caps or not.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bold-as-smallcaps&lt;/code&gt;: Text typed as &lt;code&gt;**bold**&lt;/code&gt; will appear as small caps instead. This is useful when your font (EB Garamond, say) does not have a bold face.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;papersize&lt;/code&gt;: Letter paper (8.5in x 11in) is the default, but any page size LaTeX understands works. &lt;code&gt;a4&lt;/code&gt; is the only other size I can imagine using for a CV…&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;typesize&lt;/code&gt;: How large the default text should be. The headings, etc., are all scaled in relation to this setting.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;left-margin&lt;/code&gt;: The left margin. Can be set in inches, centimeters, whatever. In the absence of a &lt;code&gt;right-margin&lt;/code&gt;, it stands in for both horizontal margins.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;right-margin&lt;/code&gt;: The right margin. Only needed if it’s different from the left margin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;top-margin&lt;/code&gt;: Should be a minimum of about .5in so that there is room at the bottom for the footer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bottom-margin&lt;/code&gt;: Unneeded unless the margin is different from the top margin. If this margin is large enough for the footer (.5in or so), then the top-margin can be made hilariously small.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;display-style&lt;/code&gt;: I created a default look, called &lt;code&gt;line&lt;/code&gt; that is based on the &lt;code&gt;resume&lt;/code&gt; package. However, any &lt;code&gt;memoir&lt;/code&gt; chapter style, as demonstrated in &lt;a href=&#34;http://texdoc.net/texmf-dist/doc/latex/memoir/memman.pdf&#34;&gt;10.5 of the Memoir manual&lt;/a&gt; can be used here. Reasonable values include: &lt;code&gt;bianchi&lt;/code&gt;, &lt;code&gt;bringhurst&lt;/code&gt;, &lt;code&gt;chappell&lt;/code&gt;, &lt;code&gt;crosshead&lt;/code&gt;, &lt;code&gt;demo2&lt;/code&gt;, &lt;code&gt;dowding&lt;/code&gt;, &lt;code&gt;lyhne&lt;/code&gt;, and &lt;code&gt;wilsondob&lt;/code&gt;. Some of these styles will clobber your font choices.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;html&lt;/code&gt; options&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;headshot-url&lt;/code&gt;: Some cultures expect a headshot in a CV. Here is where you tell Pandoc where to find it. Leaving it blank means no headshot. This feature does not yet work perfectly, so it is left off by default.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;lang&lt;/code&gt;: The language code for the CV. Default is &lt;code&gt;en&lt;/code&gt; because American hegemony.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fontawesome&lt;/code&gt;: Whether to use the &lt;a href=&#34;http://fontawesome.com&#34;&gt;Font Awesome&lt;/a&gt; icons.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;background-color&lt;/code&gt;: &lt;em&gt;Enclosed in &#34;&lt;/em&gt;, this is color recognizable by CSS, so, typically, either a hex value (“&lt;code&gt;#nnnnnn&lt;/code&gt;”), an rgb value (“&lt;code&gt;rgb(n, n, n)&lt;/code&gt;”), or an rgba value if you want to change the opacity (“&lt;code&gt;rgba(n, n, n)&lt;/code&gt;”). See &lt;a href=&#34;https://www.w3schools.com/colors/colors_picker.asp&#34;&gt;this color picker&lt;/a&gt; provided by W3Schools to handcraft your color choice.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;navbar&lt;/code&gt;: A set of settings regarding the navbar that is added by default. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;background&lt;/code&gt;: This option, set to &lt;code&gt;light&lt;/code&gt; by default, corresponds to Bootstrap’s &lt;a href=&#34;https://getbootstrap.com/docs/4.1/utilities/colors/#background-color&#34;&gt;semantic background colors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;text&lt;/code&gt;: &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;dark&lt;/code&gt;, this corresponds to the background, so it’s a bit counter intuitive. That is, pick &lt;code&gt;light&lt;/code&gt; if your background is light (though the text will be dark) and vice versa.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;position&lt;/code&gt;: By default, the navbar scrolls with the rest of the CV. The other options, &lt;code&gt;fixed-top&lt;/code&gt; and &lt;code&gt;fixed-bottom&lt;/code&gt;, change that behavior. The most correct one to use is &lt;code&gt;sticky-top&lt;/code&gt;, but that is not fully supported in all browsers yet.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;margin&lt;/code&gt;: If the navbar is fixed, then we need to push the content away from it to provide some padding. Here you can tell it how many pixels to push it away. Default is 20.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;background-color&lt;/code&gt;: This overrides the selection made for the navbar &lt;code&gt;background&lt;/code&gt; above. See &lt;code&gt;background-color&lt;/code&gt; above for information about picking colors.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fonts&lt;/code&gt;: Three separate font families are supported, one for the body text, one for the headings, and one for the navbar. If you only want one custom font throughout, set the &lt;code&gt;body&lt;/code&gt; font and comment our &lt;code&gt;headings&lt;/code&gt; and &lt;code&gt;navbar&lt;/code&gt;. Each of &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;headings&lt;/code&gt;, and &lt;code&gt;navbar&lt;/code&gt; needs three options: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: &lt;code&gt;serif&lt;/code&gt;, &lt;code&gt;sans-serif&lt;/code&gt;, or &lt;code&gt;monospace&lt;/code&gt;. This is the fallback should the preferred font not load.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;url&lt;/code&gt;: The URL for the font, like from &lt;a href=&#34;http://fonts.google.com&#34;&gt;Google&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;name&lt;/code&gt;: The name of the font for the CSS.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;colors&lt;/code&gt;: These allow adjusting the color values of the text. See &lt;code&gt;background-color&lt;/code&gt; above for information about picking colors. Each color value must be enclosed in quotes. These are &lt;em&gt;optional&lt;/em&gt;. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;body&lt;/code&gt;: The color of the main body text.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;headings&lt;/code&gt;: The color of the headings.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;display&lt;/code&gt;: The color of the display name.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;navbar-items&lt;/code&gt;: The color of the items in the navbar.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;links&lt;/code&gt;: These adjust the colors of links. &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;&lt;code&gt;regular&lt;/code&gt;: The color of the link text under regular circumstances.&lt;/li&gt; &#xA;       &lt;li&gt;&lt;code&gt;hover&lt;/code&gt;: The color of the link text when the mouse or finger hovers over it.&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;smallcaps-headings&lt;/code&gt;: Whether the headers and name are in small caps or not.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;bold-as-smallcaps&lt;/code&gt;: Text typed as &lt;code&gt;**bold**&lt;/code&gt; will appear as small caps instead. This is useful when your font (EB Garamond, say) does not have a bold face.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;keywords&lt;/code&gt;: A list of keywords for SEO like this even works.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;last-modified&lt;/code&gt;: As with the &lt;code&gt;pdf&lt;/code&gt;, this triggers a “last modified” widget to appear at the top right corner of the page.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;meta-title&lt;/code&gt;: The title used in the metadata on Twitter or Facebook.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;canonical-url&lt;/code&gt;: The canonical URL for the site.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;date-created&lt;/code&gt;: A date when the CV was &lt;em&gt;created&lt;/em&gt;, as opposed to last &lt;em&gt;modified&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: A short description of the CV.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;og-image&lt;/code&gt;: This gives a few settings to embed an image in the metadata for sharing on Twitter or Facebook. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;url&lt;/code&gt;: The URL of the image&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: Its type. Probably &lt;code&gt;image/jpeg&lt;/code&gt; or &lt;code&gt;image/png&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: Its height.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: Its width.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;personal.yml&lt;/h3&gt; &#xA;&lt;h2&gt;Sections&lt;/h2&gt; &#xA;&lt;p&gt;The sections are all separate Markdown files in the &lt;code&gt;sections/&lt;/code&gt; directory. They can be called whatever, but the file names must correspond with the &lt;code&gt;cv-sections&lt;/code&gt; collection in &lt;code&gt;metadata/format.yml&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Each section should begin with a &lt;code&gt;## Header&lt;/code&gt;. Failure to do so will cause problems in both the &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;pdf&lt;/code&gt; versions of the CV. The text of the header can be whatever.&lt;/p&gt; &#xA;&lt;p&gt;The Markdown files can then be written however you want. A list, a narrative, things with links, whatever is expected in your field and aligned with your fantasies.&lt;/p&gt; &#xA;&lt;h2&gt;Rationale&lt;/h2&gt; &#xA;&lt;p&gt;Being able to update both my online and “paper” CV at once has been a goal for over a decade. Luckily, Pandoc has stepped in to make that process simpler. This project used to be a complicated and very brittle system using MultiMarkDown and shell script. This all works, in my opinion, more simply.&lt;/p&gt; &#xA;&lt;h2&gt;Features to Add&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;YAML mode that gets rid of Markdown completely&lt;/li&gt; &#xA; &lt;li&gt;BibTeX support&lt;/li&gt; &#xA; &lt;li&gt;Europass support&lt;/li&gt; &#xA; &lt;li&gt;Sass integration with Bootstrap.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>