<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-13T01:36:22Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kokkos/kokkos-tutorials</title>
    <updated>2025-06-13T01:36:22Z</updated>
    <id>tag:github.com,2025-06-13:/kokkos/kokkos-tutorials</id>
    <link href="https://github.com/kokkos/kokkos-tutorials" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tutorials for the Kokkos C++ Performance Portability Programming Ecosystem&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://avatars2.githubusercontent.com/u/10199860?s=200&amp;amp;v=4&#34; alt=&#34;Kokkos&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kokkos Tutorials&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains tutorials for the Kokkos C++ programming model (github.com/kokkos/kokkos).&lt;/p&gt; &#xA;&lt;h2&gt;The Kokkos Lectures&lt;/h2&gt; &#xA;&lt;p&gt;We are currently running &lt;strong&gt;The Kokkos Lectures&lt;/strong&gt; - an extended version of our &lt;strong&gt;Intro-Full&lt;/strong&gt; Tutorial, spanning 8 modules. For information on that, Slides and Recordings visit: &lt;a href=&#34;https://github.com/kokkos/kokkos-tutorials/wiki/Kokkos-Lecture-Series&#34;&gt;The Kokkos Lectures Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Other Tutorial Compilations&lt;/h2&gt; &#xA;&lt;p&gt;Tutorials in the &lt;strong&gt;Intro-Short&lt;/strong&gt; directory cover&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;simple data parallel patterns and policies&lt;/li&gt; &#xA; &lt;li&gt;multidimensional array views&lt;/li&gt; &#xA; &lt;li&gt;execution and memory spaces&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Tutorials in the &lt;strong&gt;Intro-Full&lt;/strong&gt; directory cover&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;simple data parallel patterns and policies&lt;/li&gt; &#xA; &lt;li&gt;multidimensional array views&lt;/li&gt; &#xA; &lt;li&gt;execution and memory spaces&lt;/li&gt; &#xA; &lt;li&gt;thread safety and atomic operations&lt;/li&gt; &#xA; &lt;li&gt;hierarchical data parallel patterns&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building the Tutorials&lt;/h1&gt; &#xA;&lt;p&gt;All the tutorial folders can be built using CMake.&lt;/p&gt; &#xA;&lt;h2&gt;CMake&lt;/h2&gt; &#xA;&lt;p&gt;CMake can build against an installed Kokkos library or download one automatically using &lt;code&gt;FetchContent&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Without any Kokkos already installed, from an exercise directory, one can run the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cmake -B build_dir # -DKokkos_* options&#xA;cmake --build build_dir&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kokkos options are described in &lt;a href=&#34;https://kokkos.org/kokkos-core-wiki/keywords.html&#34;&gt;CMake options&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example, OpenMP CPU exercises can be built as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cmake -B build_openmp -DKokkos_ENABLE_OPENMP=ON&#xA;cmake --build build_openmp&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Mac, if OpenMP is not available, one can use the Threads backend:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cmake -B build_threads -DKokkos_ENABLE_THREADS=ON&#xA;cmake --build build_threads&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For a NVIDIA gpu, using gpu arch autodetection:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cmake -B build_cuda -DKokkos_ENABLE_CUDA=ON&#xA;cmake --build build_cuda&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To pass an already installed Kokkos library, you can use classical CMake variables, such as &lt;code&gt;Kokkos_ROOT&lt;/code&gt;, or &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>