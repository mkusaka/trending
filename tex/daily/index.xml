<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-26T01:57:22Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uzh-rpg/agilicious</title>
    <updated>2022-06-26T01:57:22Z</updated>
    <id>tag:github.com,2022-06-26:/uzh-rpg/agilicious</id>
    <link href="https://github.com/uzh-rpg/agilicious" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Agile flight done right!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://www.seekpng.com/png/full/286-2863187_coming-soon-banner-png.png&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;h1&gt;Agilicious: Open-Source and Open-Hardware Agile Quadrotor for Vision-Based Flight&lt;/h1&gt; &#xA; &lt;br&gt; &#xA; &lt;b&gt;Agile flight done right!&lt;/b&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://github.com/uzh-rpg/agilicious/workflows/CLANG_CI/badge.svg?branch=master&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/uzh-rpg/agilicious/workflows/clang_format/badge.svg?branch=master&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/17403970/174497361-aa212d77-7036-4f36-840d-c48cab492ac2.gif&#34; width=&#34;700&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/21340299/174775412-9595e3ed-7ef9-403b-ab08-0dbe4126243f.gif&#34; width=&#34;350&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/21340299/174776470-3a505384-c01e-4759-9173-973aa2bff27f.gif&#34; width=&#34;350&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/21340299/174776626-9c0912ac-ed38-4470-a3cf-d8b80dff4e99.gif&#34; width=&#34;350&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/21340299/174776748-87c4d27c-2dd0-4aec-9b4c-64fdab4d5c14.gif&#34; width=&#34;350&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/ScienceRobotics22_Foehn.pdf&#34;&gt;Read the Paper!&lt;/a&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.youtube.com/watch?v=fNYxPLyJ5YY&#34;&gt;Watch the full Video!&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;strong&gt;Agilicious&lt;/strong&gt; is a co-designed hardware and software framework tailored to autonomous, agile quadrotor flight, which has been developed and used since 2016 at the &lt;a href=&#34;http://rpg.ifi.uzh.ch/&#34;&gt;Robotics and Perception Group (RPG)&lt;/a&gt; of the University of Zurich. Agilicious is described in this &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/ScienceRobotics22_Foehn.pdf&#34;&gt;Science Robotics 2022 paper&lt;/a&gt;. It is completely open-source and open-hardware and supports both model-based and neural-network-based controllers. Also, it provides high thrust-to-weight and torque-to-inertia ratios for agility, onboard vision sensors, GPU-accelerated compute hardware for real-time perception and neural-network inference, a real-time flight controller, and a versatile software stack. In contrast to existing frameworks, Agilicious offers a unique combination of flexible software and high-performance hardware. Agilicious has been used in over 30 scientific papers at our lab, including trajectory tracking for drone racing scenarios at up to 5g and 70km/h (&lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/ScienceRobotics21_Foehn.pdf&#34;&gt;SciRob21_Foehn&lt;/a&gt;, &lt;a href=&#34;https://youtu.be/ZPI8U1uSJUs&#34;&gt;Video&lt;/a&gt;), vision-based acrobatic flight (&lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/RSS20_Kaufmann.pdf&#34;&gt;RSS20 Kaufmann&lt;/a&gt;, &lt;a href=&#34;https://youtu.be/2N_wKXQ6MXA&#34;&gt;Video&lt;/a&gt;), obstacle avoidance in both structured and unstructured environments using solely onboard perception (&lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/Loquercio21_Science.pdf&#34;&gt;SciRob21_Loquercio&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=m89bNn6RFoQ&#34;&gt;Video&lt;/a&gt;), and hardware-in-the-loop simulation in virtual-reality environments. Thanks to its versatility, we believe that Agilicious supports the next generation of scientific and industrial quadrotor research. The full list of publications using Agilicious can be found &lt;a href=&#34;https://rpg.ifi.uzh.ch/aggressive_flight.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;p&gt;If you use the code in the academic context, please cite:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Philipp Foehn, Elia Kaufmann, Angel Romero, Robert Penicka, Sihao Sun, Leonard Bauersfeld, Thomas Laengle, Giovanni Cioffi, Yunlong Song, Antonio Loquercio, Davide Scaramuzza, &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/ScienceRobotics22_Foehn.pdf&#34;&gt;&#34;Agilicious: Open-Source and Open-Hardware Agile Quadrotor for Vision-Based Flight&#34;&lt;/a&gt;, AAAS Science Robotics, 2022, &lt;a href=&#34;https://www.youtube.com/watch?v=fNYxPLyJ5YY&#34;&gt;Video&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/miscellaneous/references/Foehn2022science.bib&#34;&gt;Bibtex&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, please cite the following papers for the specific extensions you make use of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sihao Sun, Angel Romero, Philipp Foehn, Elia Kaufmann, Davide Scaramuzza, &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/Arxiv21_MPC_Sun.pdf&#34;&gt;&#34;A Comparative Study of Nonlinear MPC and Differential-Flatness-based Control for Quadrotor Agile Flight&#34;&lt;/a&gt;, IEEE Transactions on Robotics, 2022, &lt;a href=&#34;https://www.youtube.com/watch?v=XpuRpKHp_Bk&#34;&gt;Video&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/miscellaneous/references/Sun2022tro.bib&#34;&gt;Bibtex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Philipp Foehn, Angel Romero, Davide Scaramuzza, &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/ScienceRobotics21_Foehn.pdf&#34;&gt;&#34;Time-Optimal Planning for Quadrotor Waypoint Flight&#34;&lt;/a&gt;, Science Robotics, 2021, &lt;a href=&#34;https://youtu.be/ZPI8U1uSJUs&#34;&gt;Video&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/miscellaneous/references/Foehn2021Science.bib&#34;&gt;Bibtex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Antonio Loquercio, Elia Kaufmann, Rene Ranftl, Mark Müller, Vladlen Koltun, Davide Scaramuzza, &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/Loquercio21_Science.pdf&#34;&gt;&#34;Learning High-Speed Flight in the Wild&#34;&lt;/a&gt;, Science Robotics, 2021, &lt;a href=&#34;https://www.youtube.com/watch?v=m89bNn6RFoQ&#34;&gt;Video&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/miscellaneous/references/Loquercio2021Science.bib&#34;&gt;Bibtex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Leonard Bauersfeld, Elia Kaufmann, Philipp Foehn, Sihao Sun, Davide Scaramuzza, &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/RSS21_Bauersfeld.pdf&#34;&gt;&#34;NeuroBEM: Hybrid Aerodynamic Quadrotor Model&#34;&lt;/a&gt;, RSS: Robotics, Science, and Systems, 2021, &lt;a href=&#34;https://youtu.be/Nze1wlfmzTQ&#34;&gt;Video&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/miscellaneous/references/Bauersfeld2021rss.bib&#34;&gt;Bibtex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Elia Kaufmann, Antonio Loquercio, Rene Ranftl, Mark Müller, Vladlen Koltun, Davide Scaramuzza, &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/RSS20_Kaufmann.pdf&#34;&gt;&#34;Deep Drone Acrobatics&#34;&lt;/a&gt;, RSS: Robotics, Science, and Systems, 2020, &lt;a href=&#34;https://youtu.be/2N_wKXQ6MXA&#34;&gt;Video&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/miscellaneous/references/Kaufmann2020rss.bib&#34;&gt;Bibtex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Matthias Faessler, Antonio Franchi, Davide Scaramuzza, &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/RAL18_Faessler.pdf&#34;&gt;&#34;Differential Flatness of Quadrotor Dynamics Subject to Rotor Drag for Accurate Tracking of High-Speed Trajectories&#34;&lt;/a&gt;, IEEE Robotics and Automation Letters, 2018, &lt;a href=&#34;https://youtu.be/VIQILwcM5PA&#34;&gt;Video&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/miscellaneous/references/Faessler18ral.bib&#34;&gt;Bibtex&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;What&#39;s in it for you?&lt;/h1&gt; &#xA;&lt;p&gt;Agilicious is split in two parts, &lt;em&gt;agilib&lt;/em&gt; and &lt;em&gt;agiros&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;agilib&lt;/em&gt; contains base classes and module implementations providing the base functionality necessary for agile flight. It contains controllers, estimators, and logic, but with minimal dependencies (mainly &lt;a href=&#34;http://eigen.tuxfamily.org/index.php?title=Main_Page&#34;&gt;Eigen&lt;/a&gt;). It allows users to integrate Agilicious into their own infrastructure and can easily be extended with new modules. Meanwhile, &lt;em&gt;agiros&lt;/em&gt; provides bindings to common &lt;a href=&#34;https://www.ros.org&#34;&gt;ROS&lt;/a&gt; interfaces, which make it easy and quick to set up and get flying, both in simulation and real world.&lt;/p&gt; &#xA;&lt;p&gt;In summary, this library offers the following modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pipelines provide a modular way to combine controllers, estimators, reference trajectories into a complete control system. It is posible to create multiple pipelines and switch between them at runtime, allowing rapid prototyping.&lt;/li&gt; &#xA; &lt;li&gt;Controllers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Model Predictive Control descred in &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/IROS18_Falanga.pdf&#34;&gt;Falanga IROS&#39;18&lt;/a&gt; and &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/Arxiv21_MPC_Sun.pdf&#34;&gt;Sun TRO&#39;22&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Incremental Nonlinear Dynamic Inversion described in &lt;a href=&#34;https://ieeexplore.ieee.org/document/9160894&#34;&gt;Sun TRO&#39;20&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Geometric Control described in &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/Arxiv21_MPC_Sun.pdf&#34;&gt;Sun TRO&#39;22&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Cascaded PID similar to &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/RAL18_Faessler.pdf&#34;&gt;Faessler RAL&#39;18&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Estimators &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A standard EKF using a pose estimate and propagating with IMU measurements.&lt;/li&gt; &#xA;   &lt;li&gt;An EKF that uses a constant acceleration model and the Pose + IMU measurements.&lt;/li&gt; &#xA;   &lt;li&gt;A feedthrough module that provides a simple way to pipe in your own estimate sources.&lt;/li&gt; &#xA;   &lt;li&gt;A mock estimator that can corrupt an estimate with noise and bias to simulate real-world properties.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;References &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Hover&lt;/li&gt; &#xA;   &lt;li&gt;Velocity Commands&lt;/li&gt; &#xA;   &lt;li&gt;Sampled Trajectories&lt;/li&gt; &#xA;   &lt;li&gt;Polynomial Trajectories&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Samplers &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Time-based sampling along a given reference.&lt;/li&gt; &#xA;   &lt;li&gt;Positional sampling along a given reference which allows to robustly handle large disturbances.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Bridges &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ethz-asl/rotors_simulator&#34;&gt;RotorS&lt;/a&gt; interface&lt;/li&gt; &#xA;   &lt;li&gt;Serial bridge to interface with our own flight control software&lt;/li&gt; &#xA;   &lt;li&gt;Serial bridge to interface through &lt;a href=&#34;https://www.lairdconnect.com&#34;&gt;LAIRD&lt;/a&gt; wireless modules.&lt;/li&gt; &#xA;   &lt;li&gt;Serial bridge to interface with &lt;a href=&#34;https://betaflight.com&#34;&gt;BetaFlight controllers&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Pilot which handles all logic and interfacing.&lt;/li&gt; &#xA; &lt;li&gt;Guard A safety guard implementation that can use a secondary estimate (e.g. motion capture) and take over if some criteria are invalidated. The guard can use a secondary pipeline configuration without relying on the user-defined modules. This allows for rapid prototyping with a virtual &#34;safety net&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Simulator A sophisticated and configurable simulation that runs magnitudes faster than real time and optionally provides aerodynamic BEM models as described in &lt;a href=&#34;https://rpg.ifi.uzh.ch/docs/RSS21_Bauersfeld.pdf&#34;&gt;Bauersfeld RSS&#39;21&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;The code is licensed under GPLv3. The official license file can be found &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/LICENSE&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For commercial use, please contact sdavide [at] ifi [dot] uzh [dot] ch&lt;/p&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;If you use ROS, simply clone agilicious into your &lt;code&gt;catkin&lt;/code&gt; workspace and &lt;code&gt;catkin build&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Create new catkin workspace.&#xA;cd catkin_ws/src&#xA;&#xA;git clone https://github.com/catkin/catkin_simple&#xA;git clone git@github.com:uzh-rpg/agilicious.git&#xA;&#xA;catkin build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to use the library standalone, you can always&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd agilib/build&#xA;cmake ..&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is highly recommended to run agilicious inside a docker container, instructions are available &lt;a href=&#34;https://raw.githubusercontent.com/uzh-rpg/agilicious/main/miscellaneous/how_to_docker.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Launch your first simulation:&lt;/h2&gt; &#xA;&lt;p&gt;For launching simulations you need ROS. Once your compilation using &lt;code&gt;catkin build&lt;/code&gt; has been successful, you can then source your catkin workspace and launch two different types of simulation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Agisim simulation, by running the command &lt;code&gt;roslaunch agiros agisim.launch&lt;/code&gt;. This simulation environment has been written by us and supports different levels of complexity. These levels of complexity can be configured in the file &lt;code&gt;agiros/agiros/parameters/simulation.yaml&lt;/code&gt;, where, for example, if we would comment the lines with &#34;ModelRotorSimple&#34; and uncomment the lines with &#34;ModelRotorBEM&#34;, then a BEM simulation will be launched.&lt;/li&gt; &#xA; &lt;li&gt;Gazebo RotorS simulation, by running the command &lt;code&gt;roslaunch agiros simulation.launch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These simulation environments allow the user to test their code by offering a user friendly GUI. The simplest task would be a &#34;Go to pose&#34;, which can directly be executed by pressing buttons in the GUI. More complex maneuvers can also be performed, like trajectory tracking. For this, the trajectory can be loaded from a &lt;code&gt;.csv&lt;/code&gt; file&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/21340299/174614805-ece87b54-f6a0-460c-8b33-06cb253161aa.png&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;How do I change the characteristics of my simulation?&lt;/h3&gt; &#xA;&lt;p&gt;Everything is structured in &lt;code&gt;.yaml&lt;/code&gt; files. The most important of these &lt;code&gt;.yaml&lt;/code&gt; files is the so-called &#34;Pilot&#34; file. For example, when launching the Agisim simulation, the &lt;code&gt;agiros/agiros/parameters/simple_sim_pilot.yaml&lt;/code&gt; file is used. Here, the user can define which controller to use, which estimator to use, which quadrotor model to use, etc. If one were to change the mass of the quadrotor, for example, one would in this case need to modify the &lt;code&gt;agiros/agiros/parameters/quads/kingfisher.yaml&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;For documentation, we now use &lt;a href=&#34;https://www.doxygen.nl/index.html&#34;&gt;Doxygen&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;At the moment, the documentation files are not provided and have to be built locally:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install doxygen &lt;code&gt;sudo apt install doxygen&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run doxygen in the root folder &lt;code&gt;agilicious/&lt;/code&gt; by simply issuing the &lt;code&gt;doxygen&lt;/code&gt; command.&lt;/li&gt; &#xA; &lt;li&gt;Open the documentation in your favourite browser by clicking &lt;code&gt;agilicious/docs/html/index.html&lt;/code&gt;!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;Strictly necessary dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Eigen Library: &lt;a href=&#34;http://eigen.tuxfamily.org/index.php?title=Main_Page&#34;&gt;http://eigen.tuxfamily.org/index.php?title=Main_Page&lt;/a&gt; This is absolutely necessary for building the core library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Dependencies to use all provides functionalities&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Acado: &lt;a href=&#34;https://acado.github.io&#34;&gt;https://acado.github.io&lt;/a&gt; Framework for our MPC implementations.&lt;/li&gt; &#xA; &lt;li&gt;qpOASES: &lt;a href=&#34;https://github.com/coin-or/qpOASES&#34;&gt;https://github.com/coin-or/qpOASES&lt;/a&gt; Solver used by Acado.&lt;/li&gt; &#xA; &lt;li&gt;ROS VRPN Client: &lt;a href=&#34;http://wiki.ros.org/vrpn_client_ros&#34;&gt;http://wiki.ros.org/vrpn_client_ros&lt;/a&gt; This client can be used to fly within motion capture systems. Install with &lt;code&gt;sudo apt install ros-${ROS_DISTRO}-vrpn-client-ros&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Google Test: &lt;a href=&#34;https://github.com/google/googletest&#34;&gt;https://github.com/google/googletest&lt;/a&gt; For unit tests and continuous integration.&lt;/li&gt; &#xA; &lt;li&gt;Google Benchmark: &lt;a href=&#34;https://github.com/google/benchmark&#34;&gt;https://github.com/google/benchmark&lt;/a&gt; For optional micro-benchmarking.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>acl-org/acl-style-files</title>
    <updated>2022-06-26T01:57:22Z</updated>
    <id>tag:github.com,2022-06-26:/acl-org/acl-style-files</id>
    <link href="https://github.com/acl-org/acl-style-files" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official style files for papers submitted to venues of the Association for Computational Linguistics&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;*ACL Paper Styles&lt;/h1&gt; &#xA;&lt;p&gt;This directory contains the latest LaTeX and Word templates for *ACL conferences.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions for authors&lt;/h2&gt; &#xA;&lt;p&gt;Paper submissions to *ACL conferences must use the official ACL style templates.&lt;/p&gt; &#xA;&lt;p&gt;The LaTeX style files are available&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;as an &lt;a href=&#34;https://www.overleaf.com/read/crtcwgxzjskr&#34;&gt;Overleaf template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;in this repository, in the &lt;a href=&#34;https://github.com/acl-org/acl-style-files/raw/master/latex&#34;&gt;&lt;code&gt;latex&lt;/code&gt;&lt;/a&gt; subdirectory&lt;/li&gt; &#xA; &lt;li&gt;as a &lt;a href=&#34;https://github.com/acl-org/acl-style-files/archive/refs/tags/2021-12.zip&#34;&gt;.zip file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;as a &lt;a href=&#34;https://github.com/acl-org/acl-style-files/archive/refs/tags/2021-12.tar.gz&#34;&gt;.tar.gz file&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://github.com/acl-org/acl-style-files/raw/master/latex/acl_latex.tex&#34;&gt;&lt;code&gt;latex/acl_latex.tex&lt;/code&gt;&lt;/a&gt; for an example.&lt;/p&gt; &#xA;&lt;p&gt;The Microsoft Word template is available in this repository at &lt;a href=&#34;https://github.com/acl-org/acl-style-files/raw/master/word/acl.docx&#34;&gt;&lt;code&gt;word/acl.docx&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please follow the paper formatting guidelines general to *ACL conferences:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://acl-org.github.io/ACLPUB/formatting.html&#34;&gt;Paper formatting guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Authors may not modify these style files or use templates designed for other conferences.&lt;/p&gt; &#xA;&lt;h2&gt;Instructions for publications chairs&lt;/h2&gt; &#xA;&lt;p&gt;To adapt the style files for your conference, please fork this repository and make necessary changes. Minimally, you&#39;ll need to update the name of the conference and rename the files.&lt;/p&gt; &#xA;&lt;p&gt;If you make improvements to the templates that should be propagated to future conferences, please submit a pull request. Thank you in advance!&lt;/p&gt; &#xA;&lt;p&gt;In older versions of the templates, authors were asked to fill in the START submission ID so that it would be stamped at the top of each page of the anonymized version. This is no longer needed, because it is now possible to do this stamping automatically within START. Currently, the way to do this is for the program chair to email &lt;a href=&#34;mailto:support@softconf.com&#34;&gt;support@softconf.com&lt;/a&gt; and request it.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>krr-up/bibliography</title>
    <updated>2022-06-26T01:57:22Z</updated>
    <id>tag:github.com,2022-06-26:/krr-up/bibliography</id>
    <link href="https://github.com/krr-up/bibliography" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📚 BibTeX bibliography files of all papers referenced by the group&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bibliography&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;BibTeX bibliography files of all papers referenced by the group&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;These instructions will make all BibTeX files in this repository available to BibTeX on your machine.&lt;/p&gt; &#xA;&lt;p&gt;The following commands will first locate or create the directory where your TeX installation expects BibTeX files. This repository will then be cloned to that location.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ mkdir -p $(kpsewhich -var-value=TEXMFHOME)/bibtex/bib&#xA;$ cd &#34;$_&#34;&#xA;$ git clone https://github.com/krr-up/bibliography.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you prefer, you can clone the repository to another location and then create a symbolic link to the path TeX expects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd &amp;lt;preferred location&amp;gt;&#xA;$ git clone https://github.com/krr-up/bibliography.git&#xA;$ mkdir -p $(kpsewhich -var-value=TEXMFHOME)/bibtex/bib&#xA;$ ln -s &amp;lt;preferred location&amp;gt;/bibliography &#34;$_&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, you can use the bibliography in your LaTeX file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;\bibliography{krr,procs}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing New BibTeX Entries&lt;/h2&gt; &#xA;&lt;p&gt;Before creating new BibTeX entries, &lt;strong&gt;check whether they are already contained&lt;/strong&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/krr-up/bibliography/master/krr.bib&#34;&gt;krr.bib&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/krr-up/bibliography/master/procs.bib&#34;&gt;procs.bib&lt;/a&gt;. If not, add the new entries to &lt;a href=&#34;https://raw.githubusercontent.com/krr-up/bibliography/master/krr.bib&#34;&gt;krr.bib&lt;/a&gt; and &lt;strong&gt;open a pull request.&lt;/strong&gt; Please make sure that new BibTeX entries are &lt;strong&gt;in line with the &lt;a href=&#34;https://raw.githubusercontent.com/krr-up/bibliography/master/#guidelines-for-new-bibtex-entries&#34;&gt;guidelines&lt;/a&gt;&lt;/strong&gt; below. We will then review and merge your pull request in a timely fashion.&lt;/p&gt; &#xA;&lt;h2&gt;Guidelines for New BibTeX Entries&lt;/h2&gt; &#xA;&lt;h3&gt;BibTeX Keys&lt;/h3&gt; &#xA;&lt;p&gt;BibTeX keys must &lt;strong&gt;only contain ASCII characters.&lt;/strong&gt; Depending on the number of authors, BibTeX keys should be chosen as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;1 author:&lt;/strong&gt; &lt;code&gt;[author][year][a-z]&lt;/code&gt; (author’s &lt;em&gt;full&lt;/em&gt; last name)&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;example: &lt;code&gt;lierler08a&lt;/code&gt; for a 2008 paper by Y. Lierler&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;2 authors:&lt;/strong&gt; &lt;code&gt;[author 1][author 2][year][a-z]&lt;/code&gt; (authors’ last names shortened to the &lt;em&gt;first 3 letters&lt;/em&gt;)&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;example: &lt;code&gt;rantin06a&lt;/code&gt; for a 2006 paper by S. Ranise and C. Tinelli&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;3+ authors:&lt;/strong&gt; &lt;code&gt;[author 1]...[author n][year][a-z]&lt;/code&gt; (authors’ last names shortened to the &lt;em&gt;first 2 letters&lt;/em&gt;)&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;example: &lt;code&gt;lirasm98a&lt;/code&gt; for a 1998 paper by X. Liu and C. Ramakrishnan and S. Smolka&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As the &lt;strong&gt;&lt;code&gt;[year]&lt;/code&gt;&lt;/strong&gt; field, use the &lt;em&gt;last 2 digits&lt;/em&gt; of the publication year.&lt;/p&gt; &#xA;&lt;p&gt;For the &lt;strong&gt;&lt;code&gt;[a-z]&lt;/code&gt;&lt;/strong&gt; suffix, &lt;code&gt;a&lt;/code&gt; should be selected by default. Should the resulting BibTeX key already exist, change the suffix to &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, and so on until you obtain a &lt;strong&gt;unique BibTeX key.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For &lt;strong&gt;proceedings&lt;/strong&gt; (mainly in &lt;a href=&#34;https://raw.githubusercontent.com/krr-up/bibliography/master/procs.bib&#34;&gt;procs.bib&lt;/a&gt;), use the following format instead:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;[acronym][year]&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;example: &lt;code&gt;lpnmr09&lt;/code&gt; for &lt;em&gt;Proceedings of the Tenth International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR’09)&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;BibTeX Entries&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;code&gt;{&lt;/code&gt; instead of &lt;code&gt;&#34;&lt;/code&gt; as the &lt;strong&gt;field delimiter.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{marlyn07a,&#xA;  author = {J. Marques-Silva and I. Lynce},&#xA;  title = {Towards Robust {CNF} Encodings of Cardinality Constraints},&#xA;  pages = {483-497},&#xA;  crossref = {cp07}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In the &lt;code&gt;author&lt;/code&gt; and &lt;code&gt;editor&lt;/code&gt; fields, &lt;strong&gt;abbreviate first names&lt;/strong&gt; to the &lt;em&gt;first letter&lt;/em&gt; and omit additional first names. Spell out last names.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;example: &lt;code&gt;author = {M. Gebser and B. Kaufmann and T. Schaub}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;In the &lt;code&gt;title&lt;/code&gt; field, &lt;strong&gt;enclose capital letters&lt;/strong&gt; (other than the first letter) that must not be converted to lowercase letters by &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;examples: &lt;code&gt;{SAT}&lt;/code&gt;, &lt;code&gt;{P}etri Nets&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For proceedings with more than one reference, please use &lt;strong&gt;&lt;code&gt;crossref&lt;/code&gt;s&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;example: &lt;code&gt;crossref = {aaai17}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;strong&gt;Conference or workshop titles&lt;/strong&gt; should almost always start with “Proceedings of the …”&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;example:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@proceedings{aaai17,&#xA;  editor = {P. Satinder and S. Markovitch},&#xA;  title = {Proceedings of the Thirty-first National Conference on Artificial Intelligence (AAAI&#39;17)},&#xA;  booktitle = {Proceedings of the Thirty-first National Conference on Artificial Intelligence (AAAI&#39;17)},&#xA;  publisher = {AAAI Press},&#xA;  year = {2017}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Don’t abbreviate &lt;strong&gt;journal names.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;example: &lt;code&gt;ACM Transactions on Computational Logic&lt;/code&gt; but not &lt;code&gt;ACM Trans. on Comp. Log.&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Use the &lt;strong&gt;strings&lt;/strong&gt; defined in &lt;a href=&#34;https://raw.githubusercontent.com/krr-up/bibliography/master/krr.bib&#34;&gt;krr.bib&lt;/a&gt; for journal names.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;example: &lt;code&gt;@string{lncs = {Lecture Notes in Computer Science}}&lt;/code&gt; for use in BibTex entries as &lt;code&gt;series = lncs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Use LaTeX commands for &lt;strong&gt;special characters&lt;/strong&gt; in all fields avoiding unnecessary braces but putting them around the command.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;example: &lt;code&gt;J. P{\&#34;a}tynen&lt;/code&gt; but neither &lt;code&gt;J. Pätynen&lt;/code&gt;, &lt;code&gt;J. P\&#34;atynen&lt;/code&gt;, &lt;code&gt;J. P\&#34;{a}tynen&lt;/code&gt;, nor &lt;code&gt;J. P{\&#34;{a}}tynen&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Use &lt;code&gt;-&lt;/code&gt; rather than &lt;code&gt;--&lt;/code&gt; for &lt;strong&gt;hyphens&lt;/strong&gt; in the pages, volume, and number fields. Don’t terminate field contents with &lt;code&gt;.&lt;/code&gt;. The bibliography style and BibTeX will sort it out uniformly.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;example: &lt;code&gt;pages = {203-208}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Autoformatting&lt;/h3&gt; &#xA;&lt;p&gt;Always run the &lt;a href=&#34;https://raw.githubusercontent.com/krr-up/bibliography/master/bibfmt.py&#34;&gt;bibfmt&lt;/a&gt; script to format entries:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./bibfmt.py format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The script takes care of sorting, indenting, replacing unicode characters, and spacing. Nevertheless, &lt;strong&gt;always&lt;/strong&gt; check the result of the script. Especially, when pasting contents from external sources (like titles of PDFs) make sure that special characters like ligatures were replaced correctly.&lt;/p&gt; &#xA;&lt;p&gt;The script requires at least Python 3.6 and the &lt;a href=&#34;https://github.com/sciunto-org/python-bibtexparser&#34;&gt;bibtexparser&lt;/a&gt; 1.2 module. It is quite easy to setup with anaconda:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# install anaconda&#xA;wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh&#xA;bash Miniconda3-latest-Linux-x86_64.sh&#xA;# I recommend not to let the installer modify the bashrc but rather add a line&#xA;# like this manually:&#xA;#   source &amp;lt;install-prefix&amp;gt;/conda/etc/profile.d/conda.sh&#xA;&#xA;# setup environment&#xA;conda create -n bib python=3.8 pip&#xA;conda activate bib&#xA;pip install bibtexparser&#xA;&#xA;# run bibfmt&#xA;conda activate bib&#xA;python bibfmt.py format&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>