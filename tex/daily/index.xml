<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-29T01:35:38Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>TJ-CSCCG/tongji-undergrad-thesis</title>
    <updated>2024-05-29T01:35:38Z</updated>
    <id>tag:github.com,2024-05-29:/TJ-CSCCG/tongji-undergrad-thesis</id>
    <link href="https://github.com/TJ-CSCCG/tongji-undergrad-thesis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📄 同济大学本科生毕业设计论文模板 | Tongji University Undergraduate Thesis Template | Overleaf / Mac / Linux / Windows / Workshop / Docker&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;📄&lt;/span&gt; 同济大学本科生毕业设计论文模板（理工类）&lt;/h1&gt; &#xA;&lt;p&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/TJ-CSCCG/tongji-undergrad-thesis/master/README-EN.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;样例展示&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] 完整样例可见 &lt;a href=&#34;https://github.com/TJ-CSCCG/tongji-undergrad-thesis/discussions/21&#34;&gt;模板输出样例展示（完整版）&lt;/a&gt;、&lt;a href=&#34;https://github.com/TJ-CSCCG/tongji-undergrad-thesis/releases&#34;&gt;Release 页&lt;/a&gt; 中 &#34;Assets&#34; 下的 pdf 下载链接或 &lt;a href=&#34;https://www.overleaf.com/latex/templates/tongji-university-undergraduate-thesis-template/tfvdvyggqybn.pdf&#34;&gt;Overleaf 模版 PDF&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;以下依次展示 “封面”、“中文摘要”、“目录”、“主要内容”、“参考文献” 与 “谢辞”。&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://media.githubusercontent.com/media/TJ-CSCCG/TJCS-Images/tongji-undergrad-thesis/preview/main_page-0001.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://media.githubusercontent.com/media/TJ-CSCCG/TJCS-Images/tongji-undergrad-thesis/preview/main_page-0002.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://media.githubusercontent.com/media/TJ-CSCCG/TJCS-Images/tongji-undergrad-thesis/preview/main_page-0004.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://media.githubusercontent.com/media/TJ-CSCCG/TJCS-Images/tongji-undergrad-thesis/preview/main_page-0005.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://media.githubusercontent.com/media/TJ-CSCCG/TJCS-Images/tongji-undergrad-thesis/preview/main_page-0010.jpg&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://media.githubusercontent.com/media/TJ-CSCCG/TJCS-Images/tongji-undergrad-thesis/preview/main_page-0011.jpg&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;h3&gt;在线使用&lt;/h3&gt; &#xA;&lt;h4&gt;通过 Overleaf 模板直接使用&lt;/h4&gt; &#xA;&lt;p&gt;您可以通过以下链接访问我们的 Overleaf 模板并使用：&lt;a href=&#34;https://www.overleaf.com/latex/templates/tongji-university-undergraduate-thesis-template/tfvdvyggqybn&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Overleaf-TJ--CSCCG%2Ftongji--undergrad--thesis-green&#34; alt=&#34;svg of overleaf-tongjithesis&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] 在使用 Overleaf 模板时，请检查编译器和主入口的设置：&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;将 &lt;code&gt;main.tex&lt;/code&gt; 文件设为主入口文件，而不是项目中的其他 &lt;code&gt;.tex&lt;/code&gt; 文件（尤其是 &lt;code&gt;tongjithesis.cls&lt;/code&gt; 或 &lt;code&gt;tongjithesis.sty&lt;/code&gt;）；&lt;/li&gt; &#xA;  &lt;li&gt;推荐使用 &lt;code&gt;XeLaTeX&lt;/code&gt; 和 &lt;code&gt;LuaLaTeX&lt;/code&gt; 编译器，本模板不支持某些编译器（如 &lt;code&gt;pdfLaTeX&lt;/code&gt;）。&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;在 Overleaf 上导入本仓库&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;通过本仓库主页项目文件列表上方的 &lt;code&gt;Code | Download ZIP&lt;/code&gt; 下载本仓库；&lt;/li&gt; &#xA; &lt;li&gt;打开 &lt;a href=&#34;https://www.overleaf.com/&#34;&gt;Overleaf&lt;/a&gt;；&lt;/li&gt; &#xA; &lt;li&gt;通过拖拽下载的 &lt;code&gt;zip&lt;/code&gt; 文件上传至 Overleaf。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;在 GitHub Actions 中编译&lt;/h4&gt; &#xA;&lt;p&gt;项目以 &lt;code&gt;.github/workflows/*.yaml&lt;/code&gt; 配置了 GitHub Actions，push 代码到 fork 仓库或 template-generated 仓库均可触发测试。可通过 commit 对应的 workflow run 中的 &lt;code&gt;Summary | Artifacts&lt;/code&gt; 获得多平台构建产物。&lt;/p&gt; &#xA;&lt;p&gt;（通过勾选 &lt;code&gt;Settings | Actions | General | Allow all actions and reusable workflows&lt;/code&gt; 打开 GitHub Actions）&lt;/p&gt; &#xA;&lt;h3&gt;本地使用&lt;/h3&gt; &#xA;&lt;h4&gt;安装 $\TeX$ 发行版&lt;/h4&gt; &#xA;&lt;p&gt;我们建议参照&lt;a href=&#34;https://tug.org/texlive/quickinstall.html&#34;&gt;官方快速安装指南&lt;/a&gt;安装 TeX Live（Windows、Linux）或 MacTeX（macOS）。&lt;/p&gt; &#xA;&lt;h4&gt;支持代码高亮&lt;/h4&gt; &#xA;&lt;p&gt;本模板通过引入 &lt;code&gt;minted&lt;/code&gt; 宏包支持代码高亮。&lt;code&gt;minted&lt;/code&gt; 宏包需要 Python 环境支持，因此您需要安装 Python 并使用 &lt;code&gt;pip&lt;/code&gt; 安装 &lt;code&gt;Pygments&lt;/code&gt;。此后，需要将装有 &lt;code&gt;Pygments&lt;/code&gt; 的 Python 路径添加到环境变量 &lt;code&gt;PATH&lt;/code&gt; 中，或者按照下面的说明配置，使得 $\LaTeX$ 能够正确调用 &lt;code&gt;minted&lt;/code&gt; 宏包。&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;不想将此 Python 路径添加到环境变量 `PATH` 中？&lt;/summary&gt; &#xA; &lt;p&gt;可以在 &lt;code&gt;main.tex&lt;/code&gt; 文件中添加重定向 &lt;code&gt;minted&lt;/code&gt; 宏包的 Python 路径：&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;\renewcommand{\MintedPython}{/path/to/your/python}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;若您不需要代码高亮，请将 &lt;code&gt;minted&lt;/code&gt; 宏包相关内容注释掉。&lt;/p&gt; &#xA;&lt;h4&gt;构建项目&lt;/h4&gt; &#xA;&lt;p&gt;因为本模版的文件结构较为复杂，我们不推荐直接使用 TeX Live 自带的 &lt;code&gt;latexmk&lt;/code&gt; 等命令进行编译。&lt;/p&gt; &#xA;&lt;p&gt;我们推荐使用命令行构建项目。进一步地，我们也支持通过 VS Code 的 LaTeX Workshop 插件，在一个完整的 UI 环境中构建项目。&lt;/p&gt; &#xA;&lt;h5&gt;通过命令行&lt;/h5&gt; &#xA;&lt;h6&gt;Makefile (Linux/macOS)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;make all                # compile main.pdf&#xA;make ENGINE=$ENGINE all # use $ENGINE(where $ENGINE=-xelatex or -lualatex) to compile main.pdf&#xA;make clean              # rm intermediate files&#xA;make cleanall           # rm all intermediate files (including .pdf)&#xA;make wordcount          # wordcount&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h6&gt;Batchfile (Windows)&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;.\make.bat                # the same to &#34;make.bat thesis&#34;&#xA;.\make.bat thesis         # compile main.pdf&#xA;.\make.bat thesis $ENGINE # use $ENGINE (where $ENGINE=-xelatex or -lualatex) to compile main.pdf&#xA;.\make.bat clean          # clean all work files by latexmk -c&#xA;.\make.bat cleanall       # clean all work files and main.pdf by latexmk -C&#xA;.\make.bat wordcount      # wordcount&#xA;.\make.bat help           # read the manual&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;通过 VS Code 及 LaTeX Workshop 插件&lt;/h5&gt; &#xA;&lt;h6&gt;配置 VS Code&lt;/h6&gt; &#xA;&lt;p&gt;在 VS Code 中安装 LaTeX Workshop 插件，然后打开本项目根目录。&lt;/p&gt; &#xA;&lt;h6&gt;通过 Workshop 提供的功能编译项目&lt;/h6&gt; &#xA;&lt;p&gt;因为我们已经在 &lt;code&gt;.vscode/settings.json&lt;/code&gt; 中配置了 LaTeX Workshop 插件，所以您只需要：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;选中 &lt;code&gt;main.tex&lt;/code&gt; 文件；&lt;/li&gt; &#xA; &lt;li&gt;点击左侧边栏中带有 $\TeX$ 图标的按钮；&lt;/li&gt; &#xA; &lt;li&gt;点击 &lt;code&gt;Build LaTeX project&lt;/code&gt; 列表中的 &lt;code&gt;Recipe: latexmk (xelatex)&lt;/code&gt; 编译 &lt;code&gt;.pdf&lt;/code&gt; 文件。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;或者，LaTeX Workshop 插件会在您保存文件时自动编译。&lt;/p&gt; &#xA;&lt;h5&gt;在 Docker 中使用&lt;/h5&gt; &#xA;&lt;p&gt;详细使用方法见 &lt;a href=&#34;https://github.com/TJ-CSCCG/tongji-undergrad-thesis-env&#34;&gt;tongji-undergrad-thesis-env&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;其他功能&lt;/h3&gt; &#xA;&lt;h4&gt;双面打印版&lt;/h4&gt; &#xA;&lt;p&gt;如果您需要使用双面打印版，请在 &lt;code&gt;main.tex&lt;/code&gt; 中将第 1 行的&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;\documentclass[oneside]{tongjithesis}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;修改为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;\documentclass[twoside]{tongjithesis}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;即可。&lt;/p&gt; &#xA;&lt;h4&gt;渲染生僻字&lt;/h4&gt; &#xA;&lt;p&gt;由于本模版默认使用 Fandol 字体，对于姓名、专有名词等生僻字的支持可能不够完善。我们在本模版 GitHub 仓库的 &lt;a href=&#34;https://github.com/TJ-CSCCG/tongji-undergrad-thesis/tree/fonts&#34;&gt;&lt;code&gt;fonts&lt;/code&gt;&lt;/a&gt; 分支中提供了 Adobe 字体集，您可以下载、安装这些字体，然后在 &lt;code&gt;style/tongjithesis.cls&lt;/code&gt; 中将&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;\LoadClass[UTF8,a4paper,fontset=fandol]{ctexart}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;修改为&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;\LoadClass[UTF8,a4paper,fontset=adobe]{ctexart}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;这样修改后，LaTeX 将使用 Adobe 字体集来渲染文档。您可以在模板文档的 1.2.1 小节 “测试生僻字” 中查看具体效果。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] 将 Adobe 字体文件放置在项目根目录下并在 &lt;code&gt;main.tex&lt;/code&gt; 中指定字体路径的方式并不总是有效。因此，我们建议您将 Adobe 字体文件安装到系统字体目录中。&lt;/p&gt; &#xA; &lt;p&gt;经测试，在 Overleaf 项目的根目录下放置 Adobe 字体文件，并只在使用 LuaLaTeX 编译的方式是有效的，但这种方式可能会导致编译速度变慢。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;如何为该项目贡献代码？&lt;/h2&gt; &#xA;&lt;p&gt;还请查看 &lt;a href=&#34;https://raw.githubusercontent.com/TJ-CSCCG/tongji-undergrad-thesis/master/CONTRIBUTING.md/#how-to-pull-request&#34;&gt;How to pull request&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;开源协议&lt;/h2&gt; &#xA;&lt;p&gt;该项目使用 &lt;a href=&#34;https://www.latex-project.org/lppl/lppl-1-3c/&#34;&gt;LPPL-1.3c 许可证&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;%% tongji-undergrad-thesis&#xA;%% Copyright 2023 TJ-CSCCG&#xA;%&#xA;% This work may be distributed and/or modified under the&#xA;% conditions of the LaTeX Project Public License, either version 1.3&#xA;% of this license or (at your option) any later version.&#xA;% The latest version of this license is in&#xA;%   http://www.latex-project.org/lppl.txt&#xA;% and version 1.3 or later is part of all distributions of LaTeX&#xA;% version 2003/12/01 or later.&#xA;%&#xA;% This work has the LPPL maintenance status &#34;maintained&#34;.&#xA;%&#xA;% This Current Maintainer of this work is R. Lin.&#xA;%&#xA;% This work consists of all the *.tex, *.cls, *.cfg, and *.sty files in&#xA;%   https://github.com/TJ-CSCCG/tongji-undergrad-thesis&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;项目历史&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;该项目起源于 &lt;a href=&#34;https://github.com/YukuanHu&#34;&gt;YukuanHU&lt;/a&gt; 的本科毕业设计论文，论文于 2019.05.24 上传；&lt;/li&gt; &#xA; &lt;li&gt;2021.05.09 起，&lt;a href=&#34;https://github.com/ganler&#34;&gt;ganler&lt;/a&gt; 以上述项目为基础，增强其功能（项目结构与平台适配）并开始维护新项目。&lt;/li&gt; &#xA; &lt;li&gt;2022.05.12 起，&lt;a href=&#34;https://github.com/skyleaworlder&#34;&gt;skyleaworlder&lt;/a&gt; 开始贡献本项目，并将其整合进 &lt;a href=&#34;http://github.com/TJ-CSCCG&#34;&gt;TJ-CSCCG&lt;/a&gt;，并持续对该项目进行更新和改进，目前已经成为一个完善的本科毕业论文模板。&lt;/li&gt; &#xA; &lt;li&gt;2023.04 起，&lt;a href=&#34;https://github.com/RizhongLin&#34;&gt;RizhongLin&lt;/a&gt; 开始贡献本项目，并负责项目的维护和更新。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;我们非常感谢以上贡献者的付出，他们的工作为更多同学提供了方便和帮助。&lt;/p&gt; &#xA;&lt;p&gt;在使用本模板时，如果您觉得本项目对您的毕业设计或论文有所帮助，我们希望您可以在您的致谢部分感谢并致以敬意。&lt;/p&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;我们从顶尖高校的优秀开源项目中学到了很多：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sjtug/SJTUThesis&#34;&gt;sjtug/SJTUThesis&lt;/a&gt;: makefile &amp;amp; batchfile&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stone-zeng/fduthesis&#34;&gt;stone-zeng/fduthesis&lt;/a&gt;: workflows&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;联系方式&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Python&#xA;[&#xA;    f&#39;jiawei#@$.edu&#39;.replace(&#39;#&#39;, &#39;6&#39;).replace(&#39;$&#39;, &#39;illinois&#39;),&#xA;    f&#39;jgli22@$.edu.cn&#39;.replace(&#39;$&#39;, &#39;m.fudan&#39;),&#xA;    f&#39;rizhong.lin@$.%&#39;.replace(&#39;$&#39;, &#39;epfl&#39;).replace(&#39;%&#39;, &#39;ch&#39;),&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>