<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-26T01:48:09Z</updated>
  <subtitle>Daily Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jdavis/latex-homework-template</title>
    <updated>2022-08-26T01:48:09Z</updated>
    <id>tag:github.com,2022-08-26:/jdavis/latex-homework-template</id>
    <link href="https://github.com/jdavis/latex-homework-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎓📄 The LaTeX file that I used as the base for all my homework in university.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;latex-homework-template&lt;/h1&gt; &#xA;&lt;p&gt;The LaTeX file that I use as the base for all my homeworks in university. You should follow &lt;a href=&#34;https://twitter.com/jldavis&#34;&gt;me on Twitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Here are just a few features of this homework template.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Title page.&lt;/li&gt; &#xA; &lt;li&gt;Problem markers.&lt;/li&gt; &#xA; &lt;li&gt;Configurable problem numbers (see the last 3 problems for an example).&lt;/li&gt; &#xA; &lt;li&gt;Some commonly used math macros.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;The Cover Page:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jdavis/latex-homework-template/master/images/latex1.png&#34; alt=&#34;Cover page&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Big Oh Example Problem:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jdavis/latex-homework-template/master/images/latex2.png&#34; alt=&#34;Example problems 1&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Automata &amp;amp; Pseudocode Problems:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jdavis/latex-homework-template/master/images/latex3.png&#34; alt=&#34;Example problems 2&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Statistics Problem:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jdavis/latex-homework-template/master/images/latex4.png&#34; alt=&#34;Example problems 3&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Proof Problem:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jdavis/latex-homework-template/master/images/latex5.png&#34; alt=&#34;Example problems 4&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Adjustable Problem Numbers&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/jdavis/latex-homework-template/master/images/latex6.png&#34; alt=&#34;Example problem numbering&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;First you&#39;ll need LaTeX. Instructions on obtaining it can be found here: &lt;a href=&#34;http://latex-project.org/ftp.html&#34;&gt;http://latex-project.org/ftp.html&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compiling from the command line will look like the following:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ latexmk homework.tex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Or you can use &lt;a href=&#34;http://pages.uoregon.edu/koch/texshop/&#34;&gt;TeXShop&lt;/a&gt; or a similar native client to typeset the LaTeX file.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;When first starting with LaTeX, I came across &lt;a href=&#34;http://www.latextemplates.com/template/programming-coding-assignment&#34;&gt;this template&lt;/a&gt; and used it as a base for starting my template. As you can see, it is pretty similar.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is distributed under the MIT license. For more info, read the &lt;a href=&#34;https://raw.githubusercontent.com/jdavis/latex-homework-template/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file distributed with the source code.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>matloff/TidyverseSkeptic</title>
    <updated>2022-08-26T01:48:09Z</updated>
    <id>tag:github.com,2022-08-26:/matloff/TidyverseSkeptic</id>
    <link href="https://github.com/matloff/TidyverseSkeptic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An opinionated view of the Tidyverse &#34;dialect&#34; of the R language.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Teaching R in a Kinder, Gentler, More Effective Manner:&lt;/h1&gt; &#xA;&lt;h1&gt;Teach Base-R, Not Just the Tidyverse&lt;/h1&gt; &#xA;&lt;h2&gt;Author: Prof. Norm Matloff, University of California, Davis&lt;/h2&gt; &#xA;&lt;h1&gt;Table of contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#preliminaries&#34;&gt;Preliminaries&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#the-main-issue-is-how-to-teach-r-learners-to-do-data-analysis&#34;&gt;The main issue is how to teach R learners to do data analysis&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#note-on-ggplot2-re-marketing&#34;&gt;Note on ggplot2 re marketing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#the-purist-r-teachers-prts&#34;&gt;The Purist R Teachers (PRTs)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#rstudioposit&#34;&gt;RStudio/Posit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#kudos-to-rstudio-but-they-took-a-wrong-turn&#34;&gt;Kudos to RStudio, but they took a wrong turn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#teachability-overview--the-tidy-approach-is-overly-complicated-and-undergeneralizable&#34;&gt;Teachability overview--the Tidy approach is overly complicated and undergeneralizable&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#it-doesnt-have-to-be-either-orteach-a-mix-of-base-r-and-tidy&#34;&gt;It doesn&#39;t have to be Either Or;teach a mix of base-R and Tidy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#dogmatic-teaching-is-harmful-to-students&#34;&gt;Dogmatic teaching is harmful to students&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#no-dollar-sign-no-brackets-no-loops-even-no-lm&#34;&gt;No dollar sign, no brackets, no loops, even no lm()&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#insistence-on-loyalty&#34;&gt;Insistence on &#34;loyalty&#34;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#dplyr-or-bust&#34;&gt;&#34;dplyr or bust&#34;&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#tidy-as-an-obstacle-to-r-statistical-methods&#34;&gt;Tidy as an obstacle to R statistical methods&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#poor-readability-unnecessary-cognitive-overload&#34;&gt;Poor readability, unnecessary cognitive overload&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#tidy-obstacles-to-debugging&#34;&gt;Tidy obstacles to debugging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#should-we-teach-using-pipes-or-functional-composition--neither&#34;&gt;Should we teach using pipes or functional composition? Neither!&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#other-issues&#34;&gt;Other Issues&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#ggplot2-versus-the-tidyverse&#34;&gt;ggplot2 versus the Tidyverse&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#tidyverse-testimonials&#34;&gt;Tidyverse &#34;testimonials&#34;&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#use-of-functional-programming&#34;&gt;Use of functional programming&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#rstudio-and-other-prominent-r-developers-use-base-r-themselves&#34;&gt;RStudio and other prominent R developers use base-R themselves&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#where-are-we-now-and-where-should-we-be-going&#34;&gt;Where are we now, and where should we be going?&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#tidy-as-pop-culture&#34;&gt;Tidy as pop culture&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#parochialism-polemics-snd-problems&#34;&gt;Parochialism, polemics snd problems&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#some-room-for-optimism&#34;&gt;Some room for optimism&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/#rstudio-as-a-public-benefit-corporation-holds-the-key&#34;&gt;RStudio, as a Public Benefit Corporation, holds the key&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I teach in the Computer Science Dept. at UC Davis, where I formerly was a Professor of Statistics. I am an award-winning textbook author, and am also the recipient of university awards for teaching and public service.&lt;/p&gt; &#xA;&lt;p&gt;Specifically in terms of R, I have been an R user and developer since near the beginning, having used R&#39;s predecessor S before that. I&#39;ve published several books that use R, and have served as the Editor-in-Chief of the &lt;em&gt;R Journal&lt;/em&gt;, as well as Associate Editor for the &lt;em&gt;Journal of Statistical Software&lt;/em&gt;. My R tutorial for beginners, &lt;a href=&#34;https://github.com/matloff/fasteR&#34;&gt;fasteR&lt;/a&gt;, has become my most popular GitHub repo, with 500 GitHub stars.&lt;/p&gt; &#xA;&lt;p&gt;But it goes far beyond that; I really am intensely interested in how people learn, from children to middle-aged adults. Among other things, I&#39;ve taught English As a Second Language to working-class adults from China, and have taught a short course on probability to sixth-graders.&lt;/p&gt; &#xA;&lt;p&gt;See my &lt;a href=&#34;https://heather.cs.ucdavis.edu/matloff.html&#34;&gt;full bio&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Preliminaries&lt;/h1&gt; &#xA;&lt;h2&gt;The main issue is how to teach R learners to do data analysis&lt;/h2&gt; &#xA;&lt;p&gt;Note that in discussing teaching in this essay, I am taking the target audience here to be &lt;strong&gt;nonprogrammers&lt;/strong&gt; who wish to use R for data analysis. The focus is not on what R style should be used by package designers.&lt;/p&gt; &#xA;&lt;h2&gt;Note on ggplot2 re marketing&lt;/h2&gt; &#xA;&lt;p&gt;RStudio&#39;s presentation of &lt;strong&gt;ggplot2&lt;/strong&gt; as part of the Tidyverse is misleading. That package predates Tidy, and the package is widely used by both base-R advocates and Tidy proponents alike. RStudio&#39;s marketing of Tidy as including &lt;strong&gt;ggplot2&lt;/strong&gt; only came later.&lt;/p&gt; &#xA;&lt;p&gt;This is important, since many who praise Tidy cite &lt;strong&gt;ggplot2&lt;/strong&gt; as their first reason for being pro-Tidy in teaching. This obfuscates the real problems with Tidy as I see them:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;focus on &lt;strong&gt;dplyr&lt;/strong&gt;, &lt;strong&gt;purrr&lt;/strong&gt; and pipes, and&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;a ban/near ban on the use of loops, the &#39;$&#39; sign, brackets&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;More details later in this document, in the section &lt;a href=&#34;https://raw.githubusercontent.com/matloff/TidyverseSkeptic/master/README.md#ggplot2-versus-the-tidyverse&#34;&gt;ggplot2 versus the Tidyverse&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;The Purist R Teachers (PRTs)&lt;/h2&gt; &#xA;&lt;p&gt;I believe that R learners should be taught both base-R and Tidy. Many R teachers feel the same way. But are some who:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Refuse to teach any base-R.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ban the use of $, [, loops, the apply() family and so on.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Treat &lt;strong&gt;dplyr&lt;/strong&gt; as the go-to tool for almost any R action, including challenging ones, ignoring that base-R might lead to a simpler solution.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I&#39;ll refer to these instructors as Purist R Teacher (PRTs).&lt;/p&gt; &#xA;&lt;p&gt;The PRTs are common in the US, less so abroad, as RStudio&#39;s main promotion of Tidy has been in the US.&lt;/p&gt; &#xA;&lt;h2&gt;RStudio/Posit&lt;/h2&gt; &#xA;&lt;p&gt;In summer 2022, the RStudio corporation changed its name to Posit, to signal a broader scope than just R. I believe this will be a win-win-win-win for the firm, and both the R and Python communities.&lt;/p&gt; &#xA;&lt;p&gt;The name of the IDE will continue to be RStudio. For easy recognition, I&#39;ll use that name to refer to both the company and the IDE.&lt;/p&gt; &#xA;&lt;h1&gt;Kudos to RStudio, but they took a wrong turn&lt;/h1&gt; &#xA;&lt;p&gt;(As of July 2022, RStudio changed its name to Posit, but in this document I will use the original, more familiar name.)&lt;/p&gt; &#xA;&lt;p&gt;I like and admire the RStudio people, including the Tidyverse originator, Hadley Wickham, and have always supported them, both privately and &lt;a href=&#34;https://matloff.wordpress.com/2018/02/22/xie-yihui-r-superstar-and-mensch/&#34;&gt;publicly&lt;/a&gt;. They and I have been interacting from the beginning, when the firm consisted only of founder JJ Allaire and ace developer Joe Cheng. I highly praise the firm to my students, and I use and recommend Hadley&#39;s (NON-Tidyverse) packages &lt;strong&gt;ggplot2&lt;/strong&gt; and &lt;strong&gt;stringr&lt;/strong&gt;. On occasion his &lt;strong&gt;devtools&lt;/strong&gt; has been an absolute lifesaver for me. Hadley was the internal reviewer for my book, &lt;em&gt;The Art of R Programming&lt;/em&gt;, and I was one of the internal reviewers for Hadley&#39;s &lt;em&gt;Advanced R&lt;/em&gt; (2nd. ed.). RStudio&#39;s &lt;strong&gt;Quarto&lt;/strong&gt; package is an exciting new development for the R community.&lt;/p&gt; &#xA;&lt;p&gt;Nevertheless, I believe that &lt;strong&gt;RStudio took a wrong turn when it decided to promote the Tidyverse&lt;/strong&gt; for beginning learners who have no prior coding background. Tidy makes it more difficult for noncoders to learn R, and leaves them less able to use it productively. As someone who is passionate about teaching and a longtime R enthusiast, this is quite troubling to me. Hence the document you are now reading.&lt;/p&gt; &#xA;&lt;h1&gt;Teachability overview--the Tidy approach is overly complicated and undergeneralizable&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Again, my focus here is on teaching R to those with little or no coding background. I am &lt;em&gt;not&lt;/em&gt; discussing teaching Computer Science students.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tidy was consciously designed to equip learners with just a small set of R tools. The students learn a few &lt;strong&gt;dplyr&lt;/strong&gt; verbs well, but that equips them to do much less with R than a standard R beginners course would teach. That leaves the learners less equipped to put R to practical use, compared to &#34;graduates&#34; of standard base-R courses.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Thus the &#34;testimonials&#34; in which Tidy teachers of R claim great success are misleading. The &#34;success&#34; is due to watering down the material (and conflation with &lt;strong&gt;ggplot2&lt;/strong&gt;). The students learn to mimic a few example patterns and may be happy, but they are not equipped to go further.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Tidyers&#39; refusal to teach the &#39;$&#39; operator, and the de-emphasis of, or even complete lack of coverage of, R vectors, is a major handicap for Tidy &#34;graduates&#34; to making use of most of R&#39;s statistical functions and statistical packages.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tidy&#39;s is too abstract for beginners, due to the philosophy of functional programming (FP). The latter is popular with many sophisticated computer scientists, but is difficult even for computer science students. Tidy is thus unsuited as the initial basis of instruction for nonprogrammer students of R. FP should be limited and brought in gradually. The same statement applies to base-R&#39;s own FP functions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The Tidy FP philosophy replaces straightforward, easily grasped, loops with abstract use of functions. Since functions are the most difficult aspect for noncoder R learners, FP is clearly not the right path for such learners. Indeed, even many Tidy advocates concede that it is in various senses often more difficult to write Tidy code than base-R. Hadley says, for instance, &#34;it may take a while to wrap your head around [FP].&#34;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A major problem with Tidy for R beginners is cognitive overload: The basic operations contain myriad variants. Though of course one need not learn them all, one needs some variants even for simple operations, e.g. pipes on functions of more than one argument.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The obsession among many Tidyers that one must avoid writing loops, the &#39;$&#39; operator, brackets and so on often results in obfuscated code. Once one goes beyond the simple &lt;strong&gt;mutate/select/filter/summarize&lt;/strong&gt; level, Tidy programming can be of low readability.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tidy advocates also concede that debugging Tidy code is difficult, especially in the case of pipes. Yet noncoder learners are the ones who make the most mistakes, so it makes no sense to have them use a coding style that makes it difficult to track down their errors.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Note once again, that in discussing teaching, I am taking the target audience here to be &lt;strong&gt;nonprogrammers&lt;/strong&gt; who wish to use R for data analysis. Eventually, they may wish to make use of FP, but at the crucial beginning stage, keep it simple, little or no fancy stuff.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In summary, Tidy uses unnecessarily complicated machinery, an obvious drawback for teaching beginners, and yet only equips students to perform a narrow set of operations. It would be like teaching English As a Second Language as follows: The instructor teaches the students to say &#34;Good Morning,&#34; by providing them with a template like,&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It is my fervent wish that you find your morning unusually fulfilling.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The students would be told to substitute &lt;em&gt;morning&lt;/em&gt; with &lt;em&gt;afternoon&lt;/em&gt; or &lt;em&gt;evening&lt;/em&gt;. But they would have no idea what the other words mean, and it would not generalize much. The students may even rave about these English &#34;lessons,&#34; but they won&#39;t have learned much at all.&lt;/p&gt; &#xA;&lt;h1&gt;Examples&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Case study: delayed learning (I)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s look at an example in my online R tutorial, &lt;a href=&#34;http://github.com/matloff/fasteR&#34;&gt;&lt;strong&gt;fasteR&lt;/strong&gt;&lt;/a&gt;. Consider, for instance, an innocuous line like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; hist(Nile)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;i.e. drawing a simple histogram of R&#39;s built-in Nile River dataset.&lt;/p&gt; &#xA;&lt;p&gt;This is in the very first lesson in my tutorial. Easy! By contrast, the Tidy crowd forbids use of base-R plots, insisting on using &lt;strong&gt;ggplot2&lt;/strong&gt;. I also prefer &lt;strong&gt;ggplot2&lt;/strong&gt; to base-R graphics (though again it should not be considered part of the Tidyverse), but here we have a much more important goal--to give students an actual useful application of R right from the start. Tidy greatly impedes that goal.&lt;/p&gt; &#xA;&lt;p&gt;To be Tidy the instructor would have to do something like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; library(ggplot2)&#xA;&amp;gt; dn &amp;lt;- data.frame(Nile)&#xA;&amp;gt; ggplot(dn) + geom_histogram(aes(Nile),dn)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here the instructor would have a ton of things to explain -- packages, data frames, &lt;strong&gt;ggplot()&lt;/strong&gt;, the &lt;strong&gt;aes&lt;/strong&gt; argument, the role of the &#39;+&#39; (it&#39;s not addition here) and so on -- and thus she could definitely NOT present it in the first lesson.&lt;/p&gt; &#xA;&lt;p&gt;(Things would be simpler for Tidy instructors if they were to use &lt;strong&gt;qplot()&lt;/strong&gt; in the &lt;strong&gt;ggplot2&lt;/strong&gt; package, but as far as I know, few if any Tidy courses do this.)&lt;/p&gt; &#xA;&lt;p&gt;Also in my very first lesson, I do&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; mean(Nile[80:100])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;printing the mean Nile River flow during a certain range of years. Incredibly, not only would this NOT be in a first lesson with Tidy, the students in a Tidy course may actually &lt;em&gt;never&lt;/em&gt; learn how to do this. Typical Tidyers don&#39;t consider vectors very important for learners, let alone vector subscipts.&lt;/p&gt; &#xA;&lt;p&gt;As a concrete example of this Tidy point of view, consider the book &lt;em&gt;Getting Started with R&lt;/em&gt;, by Beckerman &lt;em&gt;et al&lt;/em&gt;, Oxford University Press, second edition, 2017. The book makes a point of being &lt;a href=&#34;https://twitter.com/GSwithR/status/996830294367002625&#34;&gt;&#34;Tidyverse compliant&#34;&lt;/a&gt;. In 231 pages, vectors are mentioned just briefly, with no coverage of subscripts.&lt;/p&gt; &#xA;&lt;p&gt;In other words, &lt;strong&gt;even after one lesson, the base-R learner would be way ahead of her Tidy counterparts.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Case study: delayed learning (II)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;A researcher tweeted in December 2019 that an introductory statistics book by Peter Dalgaard is &#34;now obsolete,&#34; because it uses base-R rather than Tidy. Think of what an &#34;update&#34; to use of Tidy would involve, how much extra complexity it would impose on the students. Here is an early lesson from the book:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; thue2 &amp;lt;- subset(thuesen,blood.glucose &amp;lt; 7)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This could easily be in the base-R instructor&#39;s second lesson, if not the first. For Tidy, though, this would have to be changed to&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; library(dplyr)&#xA;&amp;gt; thue2 &amp;lt;- thue2 %&amp;gt;% filter(blood.glucose &amp;lt; 7)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here the instructor would first have to teach the pipe operator &#39;%&amp;gt;%&#39;, again extra complexity. And in so doing, she would probably emphasize the &#34;left to right&#34; flow of pipes, but the confused students would then wonder why, after that left-to-right flow, there is suddenly a right-to-left flow, with the &#39;&amp;lt;-&#39;. (For some reason, the Tidy people don&#39;t seem to use R&#39;s &#39;-&amp;gt;&#39; op.)&lt;/p&gt; &#xA;&lt;p&gt;Again, the Tidyverse is simply too complex for R learners without coding background. &lt;strong&gt;It slows down their learning process.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Case study: tapply() (I)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;One of the most commonly-used functions in base-R is &lt;strong&gt;tapply()&lt;/strong&gt;. It&#39;s quite easy to teach beginners, by presenting its call form to them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tapply(what to split, how to split it, what to apply to the resulting chunks)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;However, for some reason Tidy advocates deeply resent this function. Indeed, for many of them, &lt;strong&gt;tapply()&lt;/strong&gt; epitomizes what&#39;s wrong with base-R.&lt;/p&gt; &#xA;&lt;p&gt;Indeed, when the Tidyverse was first developed, Prof. Roger Peng gave a thoughtful keynote talk, &lt;em&gt;Teaching R to New Users--from tapply to the Tidyverse&lt;/em&gt;, also presented as &lt;a href=&#34;https://simplystatistics.org/posts/2018-07-12-use-r-keynote-2018/&#34;&gt;a Web page&lt;/a&gt;. Actually, &lt;strong&gt;tapply()&lt;/strong&gt; is not mentioned in Dr. Peng&#39;s talk or in the printed version, but the title says it all: One should teach Tidy, not &lt;strong&gt;tapply()&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Surprisingly, though, in making his comparison of Tidy to base-R, his base-R example is &lt;strong&gt;aggregate()&lt;/strong&gt;, not &lt;strong&gt;tapply()&lt;/strong&gt;. The complexity of &lt;strong&gt;aggregate()&lt;/strong&gt; function makes for an unfair comparison, a straw man; &lt;strong&gt;tapply()&lt;/strong&gt; is much simpler, and perfect for R beginners, and thus the proper comparison.&lt;/p&gt; &#xA;&lt;p&gt;Here is an example from the Peng talk, using the built-in R dataset &lt;strong&gt;airquality&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;group_by(airquality, Month) %&amp;gt;% &#xA;   summarize(o3 = mean(Ozone, na.rm = TRUE))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is the base-R version offered by Dr. Peng:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;aggregate(airquality[, “Ozone”], &#xA;      list(Month = airquality[, “Month”]), &#xA;      mean, na.rm = TRUE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Indeed, that base-R code would be difficult for R beginners. But here is the far easier base-R code, using &lt;strong&gt;tapply()&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;aq &amp;lt;- na.omit(airquality)&#xA;tapply(aq$Ozone,aq$Month,mean)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Both the Tidy and &lt;strong&gt;tapply()&lt;/strong&gt; code are simple. Both are easily grasped by beginners. After being presented with some examples, beginners have no trouble using either of them in a new setting of similar type. The Tidy version requires two function calls rather than one for base-R. But again, both versions are simple (and the &lt;strong&gt;tapply()&lt;/strong&gt; one is a bit more cluttered), so let&#39;s call it a tie. But is it certainly not the case that the Tidy version is &lt;em&gt;easier to learn&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Note re tapply(): the workhorse of base-R&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Above and below, several examples use the &lt;strong&gt;tapply()&lt;/strong&gt; function. Some who have read this essay have objected that &lt;strong&gt;tapply()&lt;/strong&gt; is an advanced, esoteric R function, thus inappropriate for the beginners-oriented theme here. This is what they were taught, but actually it is exactly the opposite. &lt;strong&gt;The tapply() function is the workhorxe of base-R.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;For example, consider the &lt;strong&gt;ggplot2&lt;/strong&gt; package, written by the ()later) inventor of the tidyverse, Hadley Wickham. Hadley calls &lt;strong&gt;tapply()&lt;/strong&gt; 7 times in the &lt;strong&gt;ggplot2&lt;/strong&gt; code!&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Case study: tapply() (II)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Of course, one can find instances in which each approach, base-R and Tidy, is simpler to use than the other. Indeed, I have strongly advocated that noncoder R learners should pick up some of both. (Much more on this point below.) But I think it&#39;s worth repeating how simple it is for R learners to solve many basic problems using &lt;strong&gt;tapply()&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Consider this example that I like to use to motivate linear regression models. We wish to predict human weight from height, and to show approximate linearity, we plot mean weight against height. The dataset, &lt;strong&gt;mlb&lt;/strong&gt;, is from my &lt;strong&gt;regtools&lt;/strong&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;Base-R:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;htsAndWts &amp;lt;- tapply(mlb$Weight,mlb$Height,mean)        &#xA;plot(htsAndWts)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tidy (plus &lt;strong&gt;ggplot2&lt;/strong&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mlb %&amp;gt;% &#xA;group_by(Height) %&amp;gt;% &#xA;summarize(weights = mean(Weight)) %&amp;gt;%              &#xA;ggplot(aes(x=Height,y=weights)) + geom_point()                &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Two major &lt;strong&gt;dplyr&lt;/strong&gt; functions, pipes, and a somewhat sophisticated usage of &lt;strong&gt;ggplot2&lt;/strong&gt;! It would be out of the question to use this example early in a Tidy course, far too much machinery to cover. But easy to do so in a course using base-R, in the first or second lesson. That should be the goal, empowering students to work on real problems, early on.&lt;/p&gt; &#xA;&lt;h1&gt;It doesn&#39;t have to be Either Or;teach a mix of base-R and Tidy&lt;/h1&gt; &#xA;&lt;p&gt;Regarding the &#34;purity&#34; view in the &lt;em&gt;Educator&#39;s Perspective&lt;/em&gt; article, opposed to mixing Tidy and base-R in teaching: I did suggest a mixed approach to RStudio founder and CEO JJ Allaire when we met in 2019. Unfortunately, JJ did not like the idea either, on the grounds that RStudio should not be telling people how to teach. But of course, that is exactly what RStudio has been doing in promoting Tidy.&lt;/p&gt; &#xA;&lt;p&gt;An overly rigid, &#34;pure&#34; approach simply doesn&#39;t make sense. Why deprive R learners of simple tools that would ease their burden -- whether from Tidy or base-R?&lt;/p&gt; &#xA;&lt;p&gt;One of the authors of the &lt;em&gt;Educator&#39;s Perspective&lt;/em&gt; article has a nice &lt;a href=&#34;https://github.com/mine-cetinkaya-rundel/teach-ds-to-new-user&#34;&gt;presentation&lt;/a&gt; on teaching data science, in which she makes a side-by-side comparison of base-R and Tidy code. One of the examples is on recoding variables:&lt;/p&gt; &#xA;&lt;p&gt;base-R:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars$transmission &amp;lt;-&#xA; ifelse(mtcars$am == 0, &#34;automatic&#34;, &#34;manual&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Tidy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars &amp;lt;- mtcars %&amp;gt;%&#xA; mutate(&#xA;    transmission =&#xA;    case_when(&#xA;       am == 0 ~ &#34;automatic&#34;,&#xA;       am == 1 ~ &#34;manual&#34;&#xA;    )&#xA; )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Her point seems to be that although base-R does well here, if recoding &lt;strong&gt;gear&lt;/strong&gt; rather than &lt;strong&gt;am&lt;/strong&gt;, the base-R method is cumbersome. It is indeed -- but due to her choosing to use nested calls to &lt;strong&gt;ifelse()&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Tidy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars &amp;lt;- mtcars %&amp;gt;%&#xA; mutate(&#xA;   gear_char =&#xA;   case_when(&#xA;     gear == 3 ~ &#34;three&#34;,&#xA;     gear == 4 ~ &#34;four&#34;,&#xA;     gear == 5 ~ &#34;five&#34;&#xA;   )&#xA; )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;base R&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars$gear_char &amp;lt;-&#xA; ifelse(mtcars$gear == 3,&#xA;   &#34;three&#34;,&#xA;   ifelse(mtcars$gear == 4,&#xA;   &#34;four&#34;,&#xA;   &#34;five&#34;)&#xA; )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;But a mixed base-R/Tidy approach, combining &#39;$&#39; with the &lt;strong&gt;dplyr&lt;/strong&gt; function &lt;strong&gt;case_when()&lt;/strong&gt;, is simpler and more intuitive than either her base-R or Tidy versions::&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars$gear_char &amp;lt;- &#xA;   case_when(&#xA;      mtcars$gear == 3 ~ &#39;three&#39;,&#xA;      mtcars$gear == 4 ~ &#39;four&#39;,&#xA;      mtcars$gear == 5 ~ &#39;five&#39;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;No pipe, no &lt;strong&gt;mutate()&lt;/strong&gt;, no reassignment. Just the bare minimum, much easier to understand.&lt;/p&gt; &#xA;&lt;h1&gt;Dogmatic teaching is harmful to students&lt;/h1&gt; &#xA;&lt;p&gt;Most people, on most issues, avoid extremes. But some teachers of R have gone polemic, with dogmatic calls for &#34;purity,&#34; with a Tidy-only approach.&lt;/p&gt; &#xA;&lt;p&gt;I&#39;ll take as my examples here &lt;a href=&#34;https://escholarship.org/uc/item/7kk4d922&#34;&gt;an article by Tidy advocates&lt;/a&gt; &lt;em&gt;An Educator&#39;s Perspective of the Tidyverse,&lt;/em&gt; as it is very detailed and articulate. But their viewpoint is now commonplace in the US.&lt;/p&gt; &#xA;&lt;h2&gt;No dollar sign, no brackets, no loops, even no lm()&lt;/h2&gt; &#xA;&lt;p&gt;The PRT Tidyers believe that two of the most basic operations in R, the $ sign and bracketing, are harmful. For instance, consider an example in &lt;em&gt;Educator&#39;s Perspective&lt;/em&gt;.*&lt;/p&gt; &#xA;&lt;p&gt;The dataset is loan data available in the &lt;strong&gt;openintro&lt;/strong&gt; package. Here is the Tidy code to preprocess the data:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;loans &amp;lt;- openintro::loans_full_schema %&amp;gt;%&#xA;   mutate(&#xA;         homeownership = str_to_title(homeownership),&#xA;         bankruptcy = if_else(public_record_bankrupt &amp;gt;= 1, &#34;Yes&#34;, &#34;No&#34;)&#xA;         ) %&amp;gt;%&#xA;   filter(annual_income &amp;gt;= 10)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In base-R:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;loans &amp;lt;- openintro::loans_full_schema&#xA;loans$bankruptcy &amp;lt;- ifelse(loans$public_record_bankrupt &amp;gt;= 1, &#34;Yes&#34;, &#34;No&#34;)&#xA;subset(loans,annual_income &amp;gt;= 10)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;One should not conflate conciseness with clarity. But here the base-R code is both more concise &lt;em&gt;and&lt;/em&gt; more straightforward. The Tidyers might even agree, except that they would object to the code&#39;s usage of &#39;$&#39;. As the article puts it:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When using base R the variables in that data frame are commonly accessed with the $ operator (e.g., loans$loan amount to access the variable called loan amount in the data frame loans). Often, students are tempted to access the loan amount variable in this example by referring to it simply as loan amount and not specifying the name of the data frame in which it lives. This results in a frustrating error: object &#39;loan amount&#39; not found.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The simple solution to this &#34;problem&#34; is to explain it to students, and have them watch for it. It would be impossible to have students avoid all possible errors, and again, this one is easy to remedy with proper advance warning.&lt;/p&gt; &#xA;&lt;p&gt;And the argument &#34;Coding style X often results in errors by beginners, so we should replace X by other machinery&#34; of course works both ways. A common error among Tidy beginners is failure to reassign the result of something like &lt;strong&gt;mutate()&lt;/strong&gt;. The above argument would imply that the base-R approach of simply tacking on the new variable to the given data frame is superior, as we did in the code above,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;loans$bankruptcy &amp;lt;- ifelse(loans$public_record_bankrupt &amp;gt;= 1, &#34;Yes&#34;, &#34;No&#34;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As to brackets, Tidy essentially ignores vectors. Consider the following base-R code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(5,12,13,1)&#xA;x[x &amp;gt; 8]&#xA;# or, if preferred:&#xA;subset(x, x &amp;gt; 8)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Probably the simplest way to do this in Tidy would be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(5,12,13,1)&#xA;data.frame(x=x) %&amp;gt;% filter(x &amp;gt; 8)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s a lot of machinery to implement one little vector operation -- conversion to a data frame, pipes, &lt;strong&gt;filter()&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Consider this very simple example: Say we wish to add to the &lt;strong&gt;mtcars&lt;/strong&gt; data a column consisting of the horsepower-to-weight ratio.&lt;/p&gt; &#xA;&lt;p&gt;In base-R, it is extremely simple:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;   mtcars$hwratio &amp;lt;- mtcars$hp / mtcars$wt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Want to add a column to a data frame? Hey, just add it!&lt;/p&gt; &#xA;&lt;p&gt;But in Tidy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;   mtcars %&amp;gt;% mutate(hwratio=hp/wt) -&amp;gt; mtcars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Still not terribly complex, but again we&#39;re invoking some machinery -- piping, a function call, and reassigning to the original data frame.&lt;/p&gt; &#xA;&lt;p&gt;The Tidyers oppose teaching loops to beginners, on the grounds that loop coding is error-prone. That is open to debate, but the point is that loops are easier to debug; the sophisticated machinery that Tidyers want in lieu of loops, FP, is NOT easy to debug (more on this below). Here the Tidyers&#39; &#34;cure is worse than the disease.&#34;.&lt;/p&gt; &#xA;&lt;p&gt;The article is so purist that it even recommends against teaching &lt;strong&gt;lm()&lt;/strong&gt;. Use &lt;strong&gt;broom&lt;/strong&gt;, they say. What&#39;s next, a Tidy wrapper for &lt;strong&gt;sqrt()&lt;/strong&gt;?&lt;/p&gt; &#xA;&lt;h2&gt;Insistence on &#34;loyalty&#34;&lt;/h2&gt; &#xA;&lt;p&gt;It is disappointing that the PRT Tidyers wish to replace base-R, rather than supplement it.&lt;/p&gt; &#xA;&lt;p&gt;One of the most troubling aspects of the Tidy movement is their rigidity and insistence on &#34;loyalty.&#34; An illuminating example is in &lt;a href=&#34;https://arxiv.org/abs/2108.03510&#34;&gt;an early preprint version&lt;/a&gt; of the above-cited &lt;em&gt;Educator&#39;s Perspective&lt;/em&gt; article (downloaded from the Wayback Machine, August 10, 2021 version of the file), which states,&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;...one thing we have learned is that when we teach the tidyverse consistently, the presence of base R patterns (e.g., using square brackets to select columns instead of dplyr::select()) stands out. An assignment completed entirely with base R syntax (in a class where tidyverse is being used) could signal a student who is less engaged with the overall learning materials for the course.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;(This passage is not in the final published version.)&lt;/p&gt; &#xA;&lt;p&gt;Why would we deprive R learners of very simple, direct and effective tools like the base-R one above? Just for the sake of Tidy &#34;purity,&#34; implicit in the above quoted passage?&lt;/p&gt; &#xA;&lt;p&gt;Students who are taught the Tidy version of the above and then are shown the base-R one will say, &#34;Wow! That&#39;s much easier. Thanks for the shortcut.&#34; And I can guarantee, a few would say, &#34;Why didn&#39;t you tell us this way in the first place?&#34;&lt;/p&gt; &#xA;&lt;p&gt;This brings me to my next point.&lt;/p&gt; &#xA;&lt;p&gt;The &#34;naughty kids&#34; aspect in the above quote,&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;An assignment completed entirely with base R syntax (in a class where tidyverse is being used) could signal a student who is less engaged with the overall learning materials for the course.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;sounds a bit authoritarian, and I&#39;ve seen consequences. For instance, one R learner proudly displayed on Twitter some code she had managed to write, but she guiltily apologized for using a loop.&lt;/p&gt; &#xA;&lt;p&gt;What is also intriguing about the above quote on &#34;naughty kids&#34; is its seeming implication that such a student&#39;s use of base-R would be &#34;taking the easy way out.&#34; But doesn&#39;t that mean base-R is easier?&lt;/p&gt; &#xA;&lt;p&gt;Notably, the article dismisses the notion of teaching a mix of base-R and Tidy, which is my recommendation. They claim this would &#34;confuse&#34; students. But functions are functions are functions; there is nothing conceptually different about Tidy functions. Look at the example we discussed above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars$gear_char &amp;lt;- &#xA;   case_when(&#xA;      mtcars$gear == 3 ~ &#39;three&#39;,&#xA;      mtcars$gear == 4 ~ &#39;four&#39;,&#xA;      mtcars$gear == 5 ~ &#39;five&#39;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We have the base-R &#39;$&#39; and the Tidy &lt;strong&gt;case_when()&lt;/strong&gt;. They flow together naturally, no concept clash, nothing to get confused about.&lt;/p&gt; &#xA;&lt;h2&gt;&#34;dplyr or bust&#34;&lt;/h2&gt; &#xA;&lt;p&gt;The Tidyers become so focused on Tidy that they try to solve every problem by using that tool. The result is seen in &#34;How do I...?&#34; queries in Twitter, Stack Overflow and so on.&lt;/p&gt; &#xA;&lt;p&gt;In many cases, the problem has a simple and direct base-R solution, but those who submit the queries are either so weak in base-R, or too fixated on &lt;strong&gt;dplyr&lt;/strong&gt;, that they are incapable of taking that easier path.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Case study: Hadley and tapply()&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;As noted earlier, many who learned R from a Tidyer are surprised to learn that &lt;strong&gt;ggplot2&lt;/strong&gt; makes liberal use of &lt;strong&gt;tapply()&lt;/strong&gt;. It shouldn&#39;t be surprising, as &lt;strong&gt;ggplot2&lt;/strong&gt; is pre-Tidy, but many of the more PRT Tidyers have portrayed &lt;strong&gt;tapply()&lt;/strong&gt; as the epitome of &#34;What&#39;s wrong with R.&#34;&lt;/p&gt; &#xA;&lt;p&gt;The tragic error of the &#34;&lt;strong&gt;dplyr&lt;/strong&gt; or bust&#34; obsession is shown in the following Twitter exchange.&lt;/p&gt; &#xA;&lt;p&gt;David Robinson, a well-known Tidy advocate, &lt;a href=&#34;https://twitter.com/drob/status/766294758696357888?language=en&#34;&gt;tweeted&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;dplyr #rstats pattern I use constantly:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;%&amp;gt;% group_by(...) %&amp;gt;% mutate(n = n()) %&amp;gt;% ungroup()&lt;/p&gt; &#xA; &lt;p&gt;Do others? Would a shortcut be helpful?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Hadley replied, in &lt;a href=&#34;https://twitter.com/hadleywickham/status/766301706103554048&#34;&gt;the same thread&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[use] or ave() vs tapply()&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;An R Core member, commenting on this phenomenon (but not this incident) cited a saying, &#34;Sometimes the followers are holier than the prophet.&#34;&lt;/p&gt; &#xA;&lt;h1&gt;Tidy as an obstacle to R statistical methods&lt;/h1&gt; &#xA;&lt;p&gt;As noted above, some PRT Tidyers even oppose teaching &lt;strong&gt;lm()&lt;/strong&gt;. Instead, they recommend using the &lt;strong&gt;broom&lt;/strong&gt; wrapper. The wrapper is indeed useful, but students need to learn the basics. And of course, it is unreasonable to ask that the hundreds of R statistical operations, and the thousands of packages, all have Tidy wrappers.&lt;/p&gt; &#xA;&lt;p&gt;Consider the Tidyers&#39; opposition to teaching the &#39;$&#39; and brackets operations. This is an obvious impediment to using R&#39;s statistical operations.&lt;/p&gt; &#xA;&lt;p&gt;Most of the R statistical functions return S3 objects, i.e. lists, accessible via &#39;$&#39;. Similarly, statistical operations in R are mainly vector- and matrix-oriented. (A matrix is a special case of a vector.) I would find it difficult to teach a course in linear regression, principal components, log-linear models and so on to students who did not have solid prior experience with &#39;$&#39; and vectors.&lt;/p&gt; &#xA;&lt;p&gt;Thus we immediately see a problem with Tidy: It creates a barrier to use of R as a statistical tool by Tidy &#34;graduates.&#34;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://clauswilke.com/blog/2020/09/07/pca-tidyverse-style/&#34;&gt;Here&lt;/a&gt; is an example of bridging the gap between Tidy and statistics, by Claus Wilke, who begins by reporting, &#34;I’ve finally figured out how to perform a PCA using the tidyverse.&#34; His word &#34;finally&#34; shows that there is indeed a gap. His answer is to use the &lt;strong&gt;broom&lt;/strong&gt; package. As it was, even that package did not quite work, he said, though the development version did. And what about the thousands of CRAN packages that return S3 objects? Is &lt;strong&gt;broom&lt;/strong&gt; going to provide a Tidy interface to each one? That of course would be unrealistic.&lt;/p&gt; &#xA;&lt;p&gt;A fundamental problem, from my point of view, is that the RStudio people are not primarily statisticians. Their focus is on developing software, primarily for data wrangling and graphics. They do this quite well, but they are not the types who sit around debating, for example, the propriety of p-values. Statistics is not foremost on their radar screens, and this sad gap between Tidy and statistics is a result.&lt;/p&gt; &#xA;&lt;h1&gt;Poor readability, unnecessary cognitive overload&lt;/h1&gt; &#xA;&lt;p&gt;As noted, R courses using the Tidyverse often do rather little beyond their canonical &lt;em&gt;data %&amp;gt;% group_by %&amp;gt;% mutate %&amp;gt;% summarize&lt;/em&gt; paradigm. That leaves the learners less equipped to put R to practical use, compared to &#34;graduates&#34; of standard base-R courses.&lt;/p&gt; &#xA;&lt;p&gt;Even more important, once one gets past that simple paradigm, Tidy runs into real problems.&lt;/p&gt; &#xA;&lt;p&gt;Again, let&#39;s use an &lt;strong&gt;mtcars&lt;/strong&gt; example taken from &lt;a href=&#34;https://towardsdatascience.com/functional-programming-in-r-with-purrr-469e597d0229&#34;&gt;an online tutorial&lt;/a&gt;. Here the goal is to regress miles per gallon against weight, calculating R&lt;sup&gt;2&lt;/sup&gt; for each cylinder group. Here&#39;s the Tidy solution, from the online help page for &lt;strong&gt;map()&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars %&amp;gt;%&#xA;  split(.$cyl) %&amp;gt;%&#xA;  map(~ lm(mpg ~ wt, data = .)) %&amp;gt;%&#xA;  map(summary) %&amp;gt;%&#xA;  map_dbl(&#34;r.squared&#34;)&#xA;&#xA;#  output&#xA;4         6         8 &#xA;0.5086326 0.4645102 0.4229655&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are several major points to note here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The R learner here must learn two different FP map functions for this particular example. This is an excellent example of Tidy&#39;s cognitive overload problem. Actually, the Tidyverse FP package, &lt;strong&gt;purrr&lt;/strong&gt;, has 52 different map functions! (See below.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;That &#34;Tidy&#34; code is a nightmare to read. For instance, the first &#39;~&#39; in that first map call is highly nonintuitive. This is starkly counter to the Tidyers&#39; claim that Tidy is more intuitive and English-like.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tidy, in its obsession to avoid R&#39;s standard &#39;$&#39; symbol, is causing all kinds of chaos and confusion here.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The hapless student would naturally ask, &#34;Where does that expression &#39;summary&#39; come from?&#34; It would appear that &lt;strong&gt;map()&lt;/strong&gt; is being called on a nonexistent variable, &lt;strong&gt;summary&lt;/strong&gt;. In actuality, base-R&#39;s &lt;strong&gt;summary()&lt;/strong&gt; function is being called on the previous computation behind the scenes. Again, highly nonintuitive, and NOT stated in the online help page.&lt;/p&gt; &#xA;&lt;p&gt;The poor student is further baffled by the call to &lt;strong&gt;map_dbl()&lt;/strong&gt;. Where did that &#39;r.squared&#39; come from? Again, Tidy is hiding the fact that &lt;strong&gt;summary()&lt;/strong&gt; yields an S3 object with component &lt;strong&gt;r.squared&lt;/strong&gt;. Yes, sometimes it is helpful to hide the details, but not if it confuses beginners.&lt;/p&gt; &#xA;&lt;p&gt;The fact is, &lt;strong&gt;R beginners would be much better off writing a loop here, avoiding the conceptually more challenging FP.&lt;/strong&gt; But even if the instructor believes the beginner &lt;em&gt;must&lt;/em&gt; learn FP, the base-R version is far easier:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;lmr2 &amp;lt;- function(mtcSubset) {&#xA;   lmout &amp;lt;- lm(mpg ~ wt,data=mtcSubset)&#xA;   summary(lmout)$r.squared&#xA;}&#xA;u &amp;lt;- split(mtcars,mtcars$cyl)&#xA;sapply(u,lmr2)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here &lt;strong&gt;lmr2()&lt;/strong&gt; is defined explicitly, as opposed to the Tidy version, with its inscrutable &#39;~&#39; within the &lt;strong&gt;map()&lt;/strong&gt; call.&lt;/p&gt; &#xA;&lt;p&gt;In a &lt;a href=&#34;https://twitter.com/dgkeyes/status/1200532987000971264&#34;&gt;Twitter discussion&lt;/a&gt; of the above example, a Tidy advocate protested that the above &lt;strong&gt;purrr&lt;/strong&gt; code was not appropriate for learners:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Sure, but my original tweet was about teaching newbies. Your example is not really relevant to that because it&#39;s about a VERY complex concept.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Exactly my point! &lt;strong&gt;Newbies should write this as a plain loop, NOT using purrr&lt;/strong&gt; or even base-R&#39;s FP constructs. Then it won&#39;t be advanced at all.&lt;/p&gt; &#xA;&lt;p&gt;But the Tidy promoters don&#39;t want learners to use loops. So the instructor using Tidy simply would avoid giving students such an example, whereas it would be easy for the base-R instructor to do so.&lt;/p&gt; &#xA;&lt;p&gt;Granted, loops can lose their clarity if they are nested. This can be ameliorated by using good comment lines and indenting, but it&#39;s fine to use functions---not in FP format, but simply as calls. For learners, Use the format&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;for (outer loop specs) {&#xA;   ...&#xA;   w &amp;lt;- f(whatever)&#xA;   ...&#xA;}&#xA;&#xA;f &amp;lt;- function(something) &#xA;{&#xA;#  the work of what would have been the inner loop goes here&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;rather than say, one of the &lt;strong&gt;apply()&lt;/strong&gt; or &lt;strong&gt;purrr&lt;/strong&gt; functions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Again, there is a serious problem of cognitive overload.&lt;/strong&gt; Tidyverse students are being asked to learn a much larger volume of material. This is ironic, in that the goal in developing Tidy for teaching was to limit a course to just a few verbs. The problem is that the verbs have dozens of variants. This is clearly bad pedagogy.&lt;/p&gt; &#xA;&lt;p&gt;Tidy advocates say the uniformity of interface in all those functions makes learning them easier. Uniform &lt;em&gt;syntax&lt;/em&gt; is nice, yes, but the fact remains that users must learn the &lt;em&gt;semantics&lt;/em&gt; of the functions, i.e. what operations they perform. What, for example, is the difference between &lt;strong&gt;summarize()&lt;/strong&gt;, &lt;strong&gt;summarize_each()&lt;/strong&gt;, &lt;strong&gt;summarize_at()&lt;/strong&gt; and &lt;strong&gt;summarize_if()&lt;/strong&gt;? Under which circumstances should each be used? The user must sift through this.&lt;/p&gt; &#xA;&lt;p&gt;As Matt Dowle, creator of &lt;strong&gt;data.table&lt;/strong&gt;, &lt;a href=&#34;https://twitter.com/MattDowle/status/1142001162230489088&#34;&gt;pointed out&lt;/a&gt; about &lt;strong&gt;dplyr&lt;/strong&gt;,&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It isn&#39;t one function &lt;strong&gt;mutate&lt;/strong&gt; that you combine in a pipe. It&#39;s &lt;strong&gt;mutate&lt;/strong&gt;, &lt;strong&gt;mutate_&lt;/strong&gt;, &lt;strong&gt;mutate_all&lt;/strong&gt;, &lt;strong&gt;mutate_at&lt;/strong&gt;, &lt;strong&gt;mutate_each&lt;/strong&gt;, &lt;strong&gt;mutate_each_&lt;/strong&gt;, &lt;strong&gt;mutate_if&lt;/strong&gt;, &lt;strong&gt;transmute&lt;/strong&gt;, &lt;strong&gt;transmute_&lt;/strong&gt;, &lt;strong&gt;transmute_all&lt;/strong&gt;, &lt;strong&gt;transmute_at&lt;/strong&gt; and &lt;strong&gt;transmute_if&lt;/strong&gt;. And you&#39;re telling me [because of consistency of the user interfaces] you don&#39;t need a manual to learn all those?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Having a common syntax thus does not compensate for this dizzying complexity.&lt;/p&gt; &#xA;&lt;p&gt;And students who need to go further will find a daunting task. See &lt;a href=&#34;https://www.r-bloggers.com/the-tidyverse-curse&#34;&gt;&#34;The Tidyverse Curse&#34;&lt;/a&gt;, in which the author says &lt;em&gt;inter alia&lt;/em&gt; that he uses &#34;only&#34; 60 Tidyverse functions -- 60! The &#34;star&#34; of the Tidyverse, &lt;strong&gt;dplyr&lt;/strong&gt;, consists of 263 functions.&lt;/p&gt; &#xA;&lt;p&gt;While a user initially need not use more than a small fraction of those 263 functions, the high complexity is clear. Every time a user needs some variant of an operation, she must sift through those hundreds of functions for one suited to her current need.&lt;/p&gt; &#xA;&lt;p&gt;By contrast, if the user knows base-R (not difficult), she can handle any situation with just a few simple operations. The old adage applies: &#34;Give a man a fish, and he can eat for a day. Teach him how to fish, and he can eat for a lifetime.&#34;&lt;/p&gt; &#xA;&lt;p&gt;Note that the above example uses the &#34;dot notation,&#34; used when the output of a pipe is fed into a multi-argument function. Here is the &lt;a href=&#34;https://magrittr.tidyverse.org/reference/pipe.html&#34;&gt;advice&lt;/a&gt; given at the official Tidyverse site:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Placing lhs elsewhere in rhs call&lt;/p&gt; &#xA; &lt;p&gt;Often you will want lhs to the rhs call at another position than the first. For this purpose you can use the dot (.) as placeholder. For example, y %&amp;gt;% f(x, .) is equivalent to f(x, y) and z %&amp;gt;% f(x, y, arg = .) is equivalent to f(x, y, arg = z).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This phrasing is likely beyond the comprehension of many R beginners. Seeing a few examples would help them, of course. but it is yet another example of how Tidy causes cognitive overload for learners.&lt;/p&gt; &#xA;&lt;h1&gt;Tidy obstacles to debugging&lt;/h1&gt; &#xA;&lt;p&gt;Here is an example from &lt;em&gt;Text Mining with R&lt;/em&gt;, by Julia Silge of RStudio, and David Robinson. It&#39;s a great introduction to the text analysis field, and I myself have found the book useful.&lt;/p&gt; &#xA;&lt;p&gt;This example, which may be found &lt;a href=&#34;https://cran.r-project.org/web/packages/tidytext/vignettes/tidytext.html&#34;&gt;here&lt;/a&gt;, is a bit more involved than the previous ones, and thus better illustrates my concerns about debugging Tidy code. Courses that teach using Tidy do very well for simple examples; this one is more complex, possibly in terms of writing the code, and definitely in terms of debugging.&lt;/p&gt; &#xA;&lt;p&gt;Debugging is something I&#39;ve given a fair amount of thought to. I even wrote a book on it, &lt;em&gt;The Art of Debugging&lt;/em&gt; (NSP, 2008). As noted earlier, noncoder R learners are the ones most in need of debugging skills, as they make the most errors. Thus the example here is of high importance.&lt;/p&gt; &#xA;&lt;p&gt;The R package &lt;strong&gt;janeaustenr&lt;/strong&gt; brings in full corpuses of six Austen novels:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#xA;&amp;gt; library(janeaustenr)&#xA;&amp;gt; books &amp;lt;- austen_books()&#xA;&amp;gt; str(books)&#xA;Classes ‘tbl_df’, ‘tbl’ and &#39;data.frame&#39;:       73422 obs. of  2 variables:&#xA;$ text: chr  &#34;SENSE AND SENSIBILITY&#34; &#34;&#34; &#34;by Jane Austen&#34; &#34;&#34; ...&#xA;$ book: Factor w/ 6 levels &#34;Sense &amp;amp; Sensibility&#34;,..: 1 1 1 1 1 1 1 1 1 1 ...&#xA;...&#xA;&amp;gt; books$text[22225]&#xA;[1] &#34;drink to our good journey.&#34;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The authors&#39; first goal is to put all the books together, one row per line of a book, with line and chapter number. Here are a couple of typical rows in the desired result:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&#34;children, the old Gentleman&#39;s days were comfort… Sense &amp;amp; Sens…    25       1&#xA;...&#xA;&#34;As we went along, Kitty and I drew up the blind… Pride &amp;amp; Prej…  7398      39&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is the solution given by the authors:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;original_books &amp;lt;- austen_books() %&amp;gt;%&#xA;   group_by(book) %&amp;gt;%&#xA;      mutate(line = row_number(),&#xA;         chapter = cumsum(str_detect(text, regex(&#34;^chapter [\\divxlc]&#34;,&#xA;               ignore_case = TRUE)))) %&amp;gt;%&#xA;         ungroup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A base-R version within reach of R beginners would begin with &lt;strong&gt;split()&lt;/strong&gt;, to group by books, followed by loop over books. A more advanced base-R coder might use FP, first with &lt;strong&gt;lapply()&lt;/strong&gt; and then with &lt;strong&gt;Reduce()&lt;/strong&gt; to concatenate the data frames.&lt;/p&gt; &#xA;&lt;p&gt;The R beginners version may be unfancy, even old-fashioned, but again suitable for beginners -- especially from the point of view of debugging, a key point for noncoder R learners, as noted, and my main point in this section. Even the base-R FP version would be quite debuggable (providing the function called by &lt;strong&gt;lapply()&lt;/strong&gt; is named).&lt;/p&gt; &#xA;&lt;p&gt;By contrast, this example epitomizes the problems with debugging Tidy code. Suppose, for instance, that the user had accidentally typed &#39;sum&#39; rather than &#39;cumsum&#39; in the above code. The output would look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;&amp;gt; original_books&#xA;   text                    book                 line chapter&#xA;   &amp;lt;chr&amp;gt;                   &amp;lt;fct&amp;gt;               &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt;&#xA; 1 &#34;SENSE AND SENSIBILITY&#34; Sense &amp;amp; Sensibility     1      50&#xA; 2 &#34;&#34;                      Sense &amp;amp; Sensibility     2      50&#xA; 3 &#34;by Jane Austen&#34;        Sense &amp;amp; Sensibility     3      50&#xA; 4 &#34;&#34;                      Sense &amp;amp; Sensibility     4      50&#xA; 5 &#34;(1811)&#34;                Sense &amp;amp; Sensibility     5      50&#xA; 6 &#34;&#34;                      Sense &amp;amp; Sensibility     6      50&#xA; 7 &#34;&#34;                      Sense &amp;amp; Sensibility     7      50&#xA; 8 &#34;&#34;                      Sense &amp;amp; Sensibility     8      50&#xA; 9 &#34;&#34;                      Sense &amp;amp; Sensibility     9      50&#xA;10 &#34;CHAPTER 1&#34;             Sense &amp;amp; Sensibility    10      50&#xA;   with 73,412 more rows&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &#39;chapter column&#39; should read 1, not 50. But there is not error message, hence no clue as to what the problem might be.&lt;/p&gt; &#xA;&lt;p&gt;If the code had not used pipes, one could use the R &lt;strong&gt;debug()&lt;/strong&gt; or &lt;strong&gt;browser()&lt;/strong&gt; functions, or the RStudio IDE debugging tool. Even use of &lt;strong&gt;print()&lt;/strong&gt; statements, which I do not recommend in general, would still be effective of the code had been nonpiped. (Details below in the special section on pipes.) But it won&#39;t work in the Tidy, i.e. piped, version.&lt;/p&gt; &#xA;&lt;p&gt;For instance, consider the code&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;debug(group_by)&#xA;mtcars %&amp;gt;% group_by(cyl)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This produces&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;debugging in: group_by(., cyl)&#xA;debug: {&#xA;    UseMethod(&#34;group_by&#34;)&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dealing with this is far beyond the skillset of R beginners.&lt;/p&gt; &#xA;&lt;p&gt;Pipes are fundamentally unsuitable for use of debugging tools, and even just using &lt;strong&gt;print()&lt;/strong&gt; statements is impossible.&lt;/p&gt; &#xA;&lt;p&gt;One partial remedy is the clever &lt;strong&gt;pipecleaner&lt;/strong&gt; package for debugging pipes. It works only up to a point, and is probably a bit too involved for R beginners. Most signifcantly, the package writeup also notes that&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Occasionally it is necessary to restructure code from a piped to an unpiped form.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This makes it clear that pipes (both the Magrittr pipes in Tidy, and that later native pipes added to base-R), were simply not designed with debugging in mind. As the package author says, sometimes the only solution is to convert the code to ordinary unpiped form. (The package has an aid for this.)&lt;/p&gt; &#xA;&lt;h1&gt;Should we teach using pipes or functional composition? Neither!&lt;/h1&gt; &#xA;&lt;p&gt;Pipes play a central role in the Tidy paradigm. According to the Tidy advocates, the claimed alternative--function composition--is confusing for those without coding background. That point is debatable, but once again, the Tidy people are presenting us with a false choice, pipes or function composition.&lt;/p&gt; &#xA;&lt;p&gt;There is a &#34;third way&#34;--breaking a sequence of function calls into separate, intermediate results. In other words, instead of&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;y &amp;lt;- h(g(f(x)))  # functional composition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;y &amp;lt;- x %&amp;gt;% f %&amp;gt;% g %&amp;gt;% h  # pipes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;write&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;a &amp;lt;- f(x)&#xA;b &amp;lt;- g(a)&#xA;y &amp;lt;- h(b)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Tidyers do sometimes mention this Third Way, but immediately dismiss it. Hadley, for instance, in &lt;em&gt;R for Data Science&lt;/em&gt; feels that it creates &#34;cluttered&#34; code. Well, OK, each person has his/her own aesthetic values, but really that should pale in comparison to code writability, readability and debuggability.&lt;/p&gt; &#xA;&lt;p&gt;For example, consider the Jane Austen novels example above.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;original_books &amp;lt;- austen_books() %&amp;gt;%&#xA;   group_by(book) %&amp;gt;%&#xA;      mutate(line = row_number(),&#xA;         chapter = cumsum(str_detect(text, regex(&#34;^chapter [\\divxlc]&#34;,&#xA;               ignore_case = TRUE)))) %&amp;gt;%&#xA;         ungroup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A non-piped version (but still using &lt;strong&gt;dplyr&lt;/strong&gt;) would be, say,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;austens &amp;lt;- austen_books() &#xA;booksGrouped &amp;lt;- tibble(group_by(austens,book))&#xA;chapterNumbers &amp;lt;- &#xA;   cumsum(str_detect(booksGrouped$text, regex(&#34;^chapter [\\divxlc]&#34;,&#xA;               ignore_case = TRUE)))&#xA;mutated &amp;lt;- mutate(booksGrouped,line = row_number(),chapter=chapterNumbers)&#xA;original_books &amp;lt;- ungroup(mutated)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, suppose the user had accidentally typed &#39;sum&#39; instead of &#39;cumsum&#39;. In the unpiped version, the user could run this code one line at a time, pausing to check the result at each step, either via a debugging tool or just using &lt;strong&gt;print()&lt;/strong&gt;. She would quickly determine that the line in which &lt;strong&gt;chapterNumbers&lt;/strong&gt; is assigned is the culprit. This is the essence of debugging--first narrow down where the error arises.&lt;/p&gt; &#xA;&lt;p&gt;As noted, one could not do this with the piped version. Indeed, the user would likely convert to the non-piped version for debugging!&lt;/p&gt; &#xA;&lt;p&gt;So why not do this in the first place? I assert that it would be easier to write nonpipe code to begin with. During the writing of the code, the breaking down the overall action into simple intermediate steps make it easier for the author to plan out the trajectory of the code. Each intermediate step allows the author to &#34;catch one&#39;s breath.&#34;&lt;/p&gt; &#xA;&lt;p&gt;For the same reasons, I assert that such code is easier to &lt;em&gt;write&lt;/em&gt; and &lt;em&gt;debug&lt;/em&gt;, but also easier for others to &lt;em&gt;read&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Isn&#39;t this worth a little bit of clutter?&lt;/p&gt; &#xA;&lt;p&gt;Even I, with several decades of programming experience in numerous languages, almost never use functional composition (other than a nesting depth of 2). Nor do I use pipes. I use separate intermediate statements, as discussed above. It&#39;s just clearer. And yes, worth the bit of clutter!&lt;/p&gt; &#xA;&lt;h1&gt;Other Issues&lt;/h1&gt; &#xA;&lt;h2&gt;ggplot2 versus the Tidyverse&lt;/h2&gt; &#xA;&lt;p&gt;I wrote at the outset of this document that &lt;strong&gt;ggplot2&lt;/strong&gt; (GGP2) should not be considered part of the Tidyverse. I&#39;ll go into detail below, but first, why does it matter?&lt;/p&gt; &#xA;&lt;p&gt;The answer is that, among the many people I&#39;ve interacted with regarding Tidy, often the first reaaon they cite for liking Tidy is the ease with which one can code nice graphics. I fully agree that GGP2 is excellent, and I use and teach it myself -- but it&#39;s not the Tidyverse. My point, then, is they are endorsing Tidy because of something that is not part of Tidy. Indeed, GGP2 is widely used by base-R and Tidy advocates alike.&lt;/p&gt; &#xA;&lt;p&gt;RStudio is a business. Its job, rightly so, is to promote its product, which in a broad sense is R. All of RStudio&#39;s revenue comes from services involving R, and the more R users there are, the better for RStudio. (And by the way, also the better for us longtime R advocates; RStudio has done a superb job of expanding the number of R users.)&lt;/p&gt; &#xA;&lt;p&gt;RStudio genuinely believed that Tidy would facilitate the usage of R. The GGP2 package had been enormously popular well before Tidy came along. Clearly, RStudio saw that, and thus saw that a good way to sell the Tidyverse was to include the popular GGP2 in the definition of Tidy. The message was, I believe, &#34;Look how much easier it is do graphics in Tidy vs. in base-R.&#34;&lt;/p&gt; &#xA;&lt;p&gt;GGP2 does make things easier. But it is misleading to speak of GGP2 as justification for using the Tidyverse, especially in teaching. A listing of the chronology clarifies the matter:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The GGP2 package was Hadley Wickham&#39;s PhD project, which implemented Lee Wilkinson&#39;s &lt;em&gt;grammar of graphics&lt;/em&gt; ideas. Hadley completed his dissertation in 2008, well before Tidy.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hadley introduced the Tidy concept in his &lt;a href=&#34;https://www.jstatsoft.org/v59/i10/paper&#34;&gt;2014 paper&lt;/a&gt;, with a very specific, crisp definition: Each variable forms a column, each observation forms a row (EVCEOR). Of course, there was nothing new here, as most of base-R assumes EVCEOR format. Indeed, Hadley put the base-R workhorse function, &lt;strong&gt;plot()&lt;/strong&gt;, on an equal footing with GGP2:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Most graphical tools in R are input-tidy, including the base plot() function, the lattice family of plots (Sarkar 2008) and ggplot2 (Wickham 2009).&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As Hadley&#39;s packages (and RStudio) gained popularity, the term &lt;em&gt;Hadleyverse&lt;/em&gt; became used to describe his collection of projects. He demurred, though, and suggested the term &lt;em&gt;Tidyverse&lt;/em&gt; in his 2016 useR! conference keynote.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Even the Tidy advocacy article cited earlier, &lt;em&gt;An Educator&#39;s Perspective&lt;/em&gt;, notes that GGP2 was only brought under the Tidy &#34;umbrella&#34; later on:&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Many of the core packages in the tidyverse were originally developed independently to address specific phases of the data science cycle, and subsequently came together under the tidyverse umbrella in 2016 (Smith 2016)...&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;p&gt;(The Smith citation lists GGP2 and &lt;strong&gt;purrr&lt;/strong&gt;.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;As noted above, there is nothing especially &#34;Tidy-ish&#34; about GGP2. It is no more EVCEOR-ish than the base-R &lt;strong&gt;plot()&lt;/strong&gt; (and most of base-R). It does not use pipes. (Hadley has said if he designed GGP2 today, he would base it on pipes.) It does not use FP.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Again, GGP2 is a wonderful package. RStudio has the right to define the Tidyverse however they feel appropriate. But RStudio&#39;s naming freedom does not justify burdening and handicapping R learners with Tidy, i.e. FP, &lt;strong&gt;dplyr&lt;/strong&gt;, &lt;strong&gt;purrr&lt;/strong&gt; and so on.&lt;/p&gt; &#xA;&lt;h2&gt;Tidyverse &#34;testimonials&#34;&lt;/h2&gt; &#xA;&lt;p&gt;There has been no study of Tidy advocates&#39; teachability claim, and indeed designing a proper &#34;randomized clinical trials&#34; study would be very difficult if not impossible. (My arguments in this document merely appeal to common sense, again no data.) But many Tidy teachers report great success with the approach.&lt;/p&gt; &#xA;&lt;p&gt;One major issue with this &#34;success&#34; (aside from the improper conflation of Tidy with GGP2) is that Tidy R courses are scaled down in scope, compared to the base-R ones. A typical Tidy R course does not equip students to do much in R (whether, base or Tidy). They teach a few &lt;strong&gt;dplyr&lt;/strong&gt; verbs, a few GGP2 calls, and provide examples that the students can mimic. Much time is spent on the RS IDE and R Markdown. Students emerge with a false sense of empowerment.&lt;/p&gt; &#xA;&lt;p&gt;Professor Peng, in his aforementioned keynote address, agrees but feels this is a good thing:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[Tidy] allowed a relatively small set of tools to provide a wide range of operations when it came to data wrangling. The opinionated nature of the tools naturally limited somewhat the flexibility of how things could be done. But this reduced complexity was what made the tools so appealing to new users. There were just fewer things to learn.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Teacher and students alike are happy, but misleadingly so.&lt;/p&gt; &#xA;&lt;p&gt;It doesn&#39;t have to be that way. As shown in this essay, Tidy is in many ways more &lt;em&gt;difficult&lt;/em&gt; for noncoder learners of R, contrary to the above quote&#39;s message, &#34;Well, they learn less but at least it is easier for them.&#34;&lt;/p&gt; &#xA;&lt;p&gt;Many Tidyers say that students actually prefer the Tidy paradigm. But in many educational contexts, students lack &#34;the big picture.&#34; Take the Jane Austen books example presented earlier in both piped and nonpiped versions, with a bug. If a group of Tidy &#34;graduates&#34; were given both versions, with half the graduates assigned to find the bug in the piped code and the other half told to find the bug in nonpiped code, it&#39;s a safe bet that the second group of graduates would be more successful and happier. As noted, the first group would likely resort to &#34;unpiping&#34; the code (which by the way may introduce further bugs), and I assert, would have a newfound respect for nonpiped code.&lt;/p&gt; &#xA;&lt;h2&gt;Use of functional programming&lt;/h2&gt; &#xA;&lt;p&gt;If there is one aspect of the Tidy-vs.-base-R debate that in my opinion demonstrates the problem with Tidy, it&#39;s that Tidy advocates want R beginners to avoid loops. Indeed, those advocates may not even teach loops at all in a basic course.&lt;/p&gt; &#xA;&lt;p&gt;The Tidyers want R beginners to use functional programming (FP) instead of loops. But even they agree that the concept of functions is one of the hardest for beginners to learn. &lt;strong&gt;Thus it makes no sense to force beginners to use a the tough concept of FP in lieu of the much more natural loops approach.&lt;/strong&gt; FP does have its place, but it should be taught as an advanced topic.&lt;/p&gt; &#xA;&lt;p&gt;An anti-loops mentality has become the Tidy advocates&#39; test of whether one is a &#34;true believer&#34; in the Tidy philosophy. I&#39;ve seen Twitter posts in which R learners actually apologize for using loops.&lt;/p&gt; &#xA;&lt;p&gt;It is worth noting that top university Computer Science Departments have shifted away from teaching their introductory programming courses using the FP paradigm, in favor of the more traditional Python, as they deem FP to be more abstract and challenging.&lt;/p&gt; &#xA;&lt;p&gt;An interesting discussion of the topic is in &lt;a href=&#34;https://www-ps.informatik.uni-kiel.de/~mh/reports/fdpe02/papers/paper15.ps.gz&#34;&gt;Charavarty and Keller&lt;/a&gt;. Though they support using FP in introductory programming classes for CS majors, the authors&#39; goals are antithetical to those of R learners. The authors list three goals, one of which is to teach theoretical computer science, certainly not desirable for teaching R in general, let alone for teaching R to those with no coding experience. They also concede that a key concept in FP, &lt;em&gt;recursion&lt;/em&gt;, is a &#34;signficant obstacle&#34; even for CS students.&lt;/p&gt; &#xA;&lt;p&gt;If FP is tough for CS students, it makes no sense to have nonprogrammer learners of R use it.&lt;/p&gt; &#xA;&lt;p&gt;Even Hadley, in &lt;em&gt;R for Data Science&lt;/em&gt;, says:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The idea of passing a function to another function is extremely powerful idea, and it’s one of the behaviours that makes R a functional programming language. It might take you a while to wrap your head around the idea, but it’s worth the investment.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Actually, most non-FP languages allow passing one function to another, but yes it is a powerful tool, worth the investment of time -- &lt;em&gt;for the experienced R programmer&lt;/em&gt;. But again, it&#39;s wrong to force nonprogrammer learners of R to &#34;wrap their heads around&#34; FP.&lt;/p&gt; &#xA;&lt;h1&gt;RStudio and other prominent R developers use base-R themselves&lt;/h1&gt; &#xA;&lt;p&gt;An old TV commercial urged viewers to &#34;Drive the car Ferrari drives&#34;---followed by a shot of Enzo Ferrari getting into his everyday work car, a little Fiat. This is actually similar to the situation with prominent R software.&lt;/p&gt; &#xA;&lt;p&gt;All the breathless claims that Tidy is more modern and clearer, whilc base-R is old-fashioned and unclear, fly in the face of the fact that RStudio developers, and authors of other prominent R packages, tend to write in base-R, not Tidy. And &lt;em&gt;all&lt;/em&gt; of them use some base-R instead of the corresponding Tidy constructs.&lt;/p&gt; &#xA;&lt;p&gt;Here are some interesting numbers:&lt;/p&gt; &#xA;&lt;table border=&#34;1&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;package&lt;/td&gt; &#xA;   &lt;td&gt;*apply() calls&lt;/td&gt; &#xA;   &lt;td&gt;mutate() calls&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;brms&lt;/td&gt; &#xA;   &lt;td&gt;333&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;broom&lt;/td&gt; &#xA;   &lt;td&gt;38&lt;/td&gt; &#xA;   &lt;td&gt;58&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;datapasta&lt;/td&gt; &#xA;   &lt;td&gt;31&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;forecast&lt;/td&gt; &#xA;   &lt;td&gt;82&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;future&lt;/td&gt; &#xA;   &lt;td&gt;71&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ggplot2&lt;/td&gt; &#xA;   &lt;td&gt;78&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;glmnet&lt;/td&gt; &#xA;   &lt;td&gt;92&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gt&lt;/td&gt; &#xA;   &lt;td&gt;112&lt;/td&gt; &#xA;   &lt;td&gt;87&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;knitr&lt;/td&gt; &#xA;   &lt;td&gt;73&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;naniar&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;44&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;parsnip&lt;/td&gt; &#xA;   &lt;td&gt;45&lt;/td&gt; &#xA;   &lt;td&gt;33&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;purrr&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rmarkdown&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;RSQLite&lt;/td&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tensorflow&lt;/td&gt; &#xA;   &lt;td&gt;32&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tidymodels&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tidytext&lt;/td&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tsibble&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VIM&lt;/td&gt; &#xA;   &lt;td&gt;117&lt;/td&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt; &lt;/p&gt; &#xA;&lt;p&gt;Striking numbers to those who learned R via a tidyverse course. In particular, &lt;strong&gt;mutate()&lt;/strong&gt; is one of the very first verbs one learns in a Tidy course, &lt;strong&gt;yet &lt;strong&gt;mutate()&lt;/strong&gt; is used &lt;strong&gt;0 times&lt;/strong&gt; in most of the above packages.&lt;/strong&gt; And even in the packages in which this function is called a lot, they also have plenty of calls to base-R *&lt;strong&gt;apply()&lt;/strong&gt;, functions which Tidy is supposed to replace.&lt;/p&gt; &#xA;&lt;p&gt;In a Twitter discussion of an earlier version of this essay, various reasons were offered for why package authors do use at least some base-R. Many discussants speculated that a common reason is desire to avoid &#34;package bloat.&#34; I believe that in at least some cases, an author simply felt that the base-R construct was the most convenient.&lt;/p&gt; &#xA;&lt;p&gt;Again, the reader should note that this essay is not about what R style package writers should use. As stated above,&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that in discussing teaching in this essay, I am taking the target audience here to be &lt;strong&gt;nonprogrammers&lt;/strong&gt; who wish to use R for data analysis. The focus is not on what R style should be used by package designers.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The purpose of including the above table is to assure R learners, that in spite of being told by some R teachers that base-R is useless, it in fact is used in some of their favorite R packages!&lt;/p&gt; &#xA;&lt;h1&gt;Where are we now, and where should we be going?&lt;/h1&gt; &#xA;&lt;h2&gt;Tidy as pop culture&lt;/h2&gt; &#xA;&lt;p&gt;Due to a catchy name, a charismatic developer, the Bandwagon Effect, and highly aggressive marketing by a dominant commercial entity, Tidy now dominates the R world.&lt;/p&gt; &#xA;&lt;p&gt;It has even brought a &#34;pop culture&#34; to R. One prominent Tidy advocate (and coauthor of the &lt;em&gt;Educator Perspective&lt;/em&gt; article) even sells &lt;a href=&#34;https://twitter.com/ameliamn/status/1214995483577520131&#34;&gt;&#34;Tidy merchandise&#34;&lt;/a&gt; -- bags, mugs, and shoes. A popular Tidy Tuesday series has arisen on Twitter. At times, it has even veered into the realm of cult. There are many who equate Hadley Wickham with R itself. He is treated like a rock star by R &#34;groupies.&#34; What a difference from the staid R community of yore! We who have been in R since the early days applaud RStudio for spreading the word, but it has come at major costs to the well-being of the language.&lt;/p&gt; &#xA;&lt;h2&gt;Parochialism, polemics snd problems&lt;/h2&gt; &#xA;&lt;p&gt;Putting the hero worship aside, at the very least one can say that many if not most in that huge Tidy following view R to consist mainly as&lt;/p&gt; &#xA;&lt;p&gt;R = dplyr + ggplot2 + RStudio IDE + Rmarkdown&lt;/p&gt; &#xA;&lt;p&gt;As noted, an article on the teaching of R argues against teaching a mix of base-R and Tidy to beginners, and RStudio founder JJ Allaire has refused to recommend teaching a mix.&lt;/p&gt; &#xA;&lt;p&gt;To us longtime R advocates, this is a tragic irony. On the one hand, again RStudio is to be congratulated for greatly increasing the worldwide count of R users. But the tragedy is that those users tend to be ill-equipped to actually &lt;em&gt;use&lt;/em&gt; R productively, compared to &#34;graduates&#34; of standard base-R courses -- and &lt;em&gt;without&lt;/em&gt; Tidy being easier to learn.&lt;/p&gt; &#xA;&lt;p&gt;The danger of being wrapped up in hoopla and crusade, of course, is that one can lose sight of reality. In my view, this is what has happened with Tidy.&lt;/p&gt; &#xA;&lt;p&gt;Equally important is the impact on the R language itself. In his aforementioned keynote address, Prof. Peng asked,&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;It will be interesting to see how things evolve, and whether the community can sustain multiple ways of programming. I think that it can, but that&#39;s my opinion.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;I am indeed worried that R will split into two different &#34;dialects. Though Peng&#39;s speculation may be correct if one views R strictly as a programming language, R is a &lt;em&gt;statistical tool&lt;/em&gt;. As explained earlier in this document, Tidy is at odds with the most R statistical packages. Though packages like &lt;strong&gt;broom&lt;/strong&gt; might be developed to bridge the gap in some specific instances, there obviously are far too many packages for this to be realistic. It is here that the divide between the Tidy and base-R worlds may be mostly keenly manifest.&lt;/p&gt; &#xA;&lt;p&gt;Sadly, that divide has occasionally become personal. For instance, there was harsh public criticism from some in RStudio and the firm&#39;s allies, toward the base-R-favoring R/Finance Conference in 2018, accusing the conference organizers of being insensitive to gender diversity. In my view, this was quite &lt;a href=&#34;https://matloff.wordpress.com/2019/05/18/r-finance-1-year-later/&#34;&gt;unfair&lt;/a&gt;, and it was my first exposure to a bitter base/Tidy divide. It was also my first real exposure to Twitter. Shortly after the conference, an RStudio employee asked me, &#34;What do you think of the tweetstorm about the conference?&#34;, total news to me. I was shocked by the vitriol.&lt;/p&gt; &#xA;&lt;p&gt;Some in RStudio have Twitter-blocked some of the Tidy critics, abruptly ending frank but civil conversation. In my case, one major RStudio developer &lt;a href=&#34;https://twitter.com/romain_francois/status/1140860812837445632?s=19&#34;&gt;made quite a show of it&lt;/a&gt;, tweeting a screen shot in which &#34;You have blocked this user&#34; is repeated dozens of times. There was also tension between RStudio and Matt Dowle, author of &lt;strong&gt;data.table&lt;/strong&gt;, a technically superior competitor to &lt;strong&gt;dplyr&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Some room for optimism&lt;/h2&gt; &#xA;&lt;p&gt;But the good news is that both sides have been making attempts at reconciliation. Especially notable is that the R Core Group, a body that controls the development of base-R, recently added a native pipe to the language. I doubt many in that group actually use it, but it is an impressive olive branch. The R Foundation now includes a number of pro-Tidy members.&lt;/p&gt; &#xA;&lt;p&gt;RStudio, including Hadley, has also made various conciliatory public remarks. Indeed, my meeting with RStudio CEO JJ Allaire in 2019 came at JJ&#39;s suggestion. Around that time, JJ also met with Matt Dowle. Also in 2019, RStudio stopped viewing &lt;strong&gt;data.table&lt;/strong&gt; as a rival, and announced the release of &lt;strong&gt;dtplyr&lt;/strong&gt;, a Tidy-syntax front end to &lt;strong&gt;dplyr&lt;/strong&gt;. Since &lt;strong&gt;data.table&lt;/strong&gt; is much faster on large datasets than &lt;strong&gt;dplyr&lt;/strong&gt;, this was a win-win for the entire R community.&lt;/p&gt; &#xA;&lt;p&gt;Hopefully we will be seeing more of these positive trends in the coming years. As I explained in that meeting with JJ, the best form of reconciliation on RStudio&#39;s part would be to encourage instructors in the Tidy community to teach a mixture of Tidy and base-R.&lt;/p&gt; &#xA;&lt;p&gt;It should be noncontroversial that R learners should be given a choice of tools, and that they themselves should decide what is the best one to use in any given setting. And if for example some thus-empowered useR feels that&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars$hwratio &amp;lt;- mtcars$hp / mtcars$wt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;is more convenient than&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars %&amp;gt;% mutate(hwratio=hp/wt) -&amp;gt; mtcars&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;so be it. There will be other cases in which the graduates of mixed instruction find the Tidy solution more appealing. Rest assured, Tidy is here to stay.&lt;/p&gt; &#xA;&lt;h2&gt;RStudio, as a Public Benefit Corporation, holds the key&lt;/h2&gt; &#xA;&lt;p&gt;One very important event is that RStudio changed status to a Public Benefit Corporation (PBC), which it &lt;a href=&#34;https://www.rstudio.com/blog/rstudio-pbc/&#34;&gt;announced&lt;/a&gt; in 2019.&lt;/p&gt; &#xA;&lt;p&gt;In my opinion, in spite of various actions the firm might point to that are aimed at the public good, &lt;strong&gt;RStudio has not lived up to its status as a PBC.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;I was shocked to find in 2022 how expensive the RStudio conference is, reportedly &lt;a href=&#34;https://twitter.com/fishiintheC/status/1553001832166969344&#34;&gt;US $1500&lt;/a&gt;. Though there were probably some registration types that we cheaper than this, this fee is exhorbitant. RStudio is a commercial entity, and the conference promotes its product. Given this status, I had assumed the conference would be free, maybe a small nominal fee. As a PBC, RStudio is legally committed to the public good. Instead, the fee more evokes &#34;Charge what the traffic will bear&#34; than &#34;public good.&#34;&lt;/p&gt; &#xA;&lt;p&gt;And as a PBC, and as a commercial entity that dominates a pre-existing open source product, RStudio should take a good, hard, dispassionate look at what is best for R learners. The firm should move beyond using misleading testimonials to rationalize its rigid stance.&lt;/p&gt; &#xA;&lt;p&gt;I thus renew the suggestion I made to JJ in 2019, and &lt;strong&gt;ask that RStudio recommend to the Tidy teaching community that they teach a mixture of Tidy and base-R.&lt;/strong&gt; The firm&#39;s transtioning to a broader, less R-focused copy under the name Posit makes this even more important.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CTSRD-CHERI/cheri-specification</title>
    <updated>2022-08-26T01:48:09Z</updated>
    <id>tag:github.com,2022-08-26:/CTSRD-CHERI/cheri-specification</id>
    <link href="https://github.com/CTSRD-CHERI/cheri-specification" rel="alternate"></link>
    <summary type="html">&lt;p&gt;CHERI ISA Specification&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>