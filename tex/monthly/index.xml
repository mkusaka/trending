<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-01T02:24:32Z</updated>
  <subtitle>Monthly Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lervag/vimtex</title>
    <updated>2023-02-01T02:24:32Z</updated>
    <id>tag:github.com,2023-02-01:/lervag/vimtex</id>
    <link href="https://github.com/lervag/vimtex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VimTeX: A modern Vim and neovim filetype plugin for LaTeX files.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VimTeX&lt;/h1&gt; &#xA;&lt;p&gt;VimTeX is a modern &lt;a href=&#34;http://www.vim.org/&#34;&gt;Vim&lt;/a&gt; and &lt;a href=&#34;https://neovim.io/&#34;&gt;Neovim&lt;/a&gt; filetype and syntax plugin for LaTeX files.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitter.im/vimtex-chat/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/vimtex-chat/community.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/lervag/vimtex/workflows/CI%20tests/badge.svg?sanitize=true&#34; alt=&#34;CI tests&#34;&gt; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=5N4MFVXN7U8NW&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;!-- DON&#39;T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#quick-start&#34;&gt;Quick Start&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#tutorial&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#documentation&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#screenshots&#34;&gt;Screenshots&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#gifs&#34;&gt;GIFs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#other-relevant-plugins&#34;&gt;Other relevant plugins&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#linting-and-syntax-checking&#34;&gt;Linting and syntax checking&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#snippets-and-templates&#34;&gt;Snippets and templates&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#tag-navigation&#34;&gt;Tag navigation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#alternatives&#34;&gt;Alternatives&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#vimtex-on-the-web&#34;&gt;VimTeX on the Web&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;VimTeX requires Vim version 8.0.1453 or Neovim version 0.4.3. The requirements were updated in July 2020 after the release of VimTeX 1.0. If you are stuck on older versions of Vim or Neovim, then you should not use the most recent version of VimTeX, but instead remain at the v1.0 tag.&lt;/p&gt; &#xA;&lt;p&gt;Some features require external tools. For example, the default compiler backend relies on &lt;a href=&#34;http://users.phys.psu.edu/~collins/software/latexmk-jcc/&#34;&gt;latexmk&lt;/a&gt;. Users are encouraged to read the requirements section in the &lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/doc/vimtex.txt&#34;&gt;documentation&lt;/a&gt; (&lt;code&gt;:h vimtex-requirements&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;If you use &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt; or &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;, then add one of the following lines to your &lt;code&gt;vimrc&lt;/code&gt; file, correspondingly:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; vim-plug&#xA;Plug &#39;lervag/vimtex&#39;&#xA;&#xA;&#34; packer.nvim&#xA;use &#39;lervag/vimtex&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or use some other plugin manager:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gmarik/vundle&#34;&gt;vundle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shougo/neobundle.vim&#34;&gt;neobundle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-pathogen&#34;&gt;pathogen&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Many plugin managers provide mechanisms to lazy load plugins. Please don&#39;t use this for VimTeX! VimTeX is already lazy loaded by virtue of being a filetype plugin and by using the autoload mechanisms. There is therefore nothing to gain by forcing VimTeX to lazily load through the plugin manager. In fact, doing it will &lt;em&gt;break&lt;/em&gt; the inverse-search mechanism, which relies on a &lt;em&gt;global&lt;/em&gt; command (&lt;code&gt;:VimtexInverseSearch&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;If you use the new package feature in Vim, please note the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make sure to read and understand the package feature: &lt;code&gt;:help package&lt;/code&gt;!&lt;/li&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;/pack/foo/start&lt;/code&gt; subdirectory to make sure the filetype plugin is automatically loaded for the &lt;code&gt;tex&lt;/code&gt; filetypes.&lt;/li&gt; &#xA; &lt;li&gt;Helptags are not generated automatically. Run &lt;code&gt;:helptags&lt;/code&gt; to generate them.&lt;/li&gt; &#xA; &lt;li&gt;Please note that by default Vim puts custom &lt;code&gt;/start/&lt;/code&gt; plugin directories at the end of the &lt;code&gt;&amp;amp;runtimepath&lt;/code&gt;. This means the built in filetype plugin is loaded, which prevents VimTeX from loading. See &lt;a href=&#34;https://github.com/lervag/vimtex/issues/1413&#34;&gt;#1413&lt;/a&gt; for two suggested solutions to this. To see which scripts are loaded and in which order, use &lt;code&gt;:scriptnames&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For more information on how to use the Vim native package solution, see &lt;a href=&#34;https://vi.stackexchange.com/questions/9522/what-is-the-vim8-package-feature-and-how-should-i-use-it&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://shapeshed.com/vim-packages/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;After installing VimTeX, you should edit your &lt;code&gt;.vimrc&lt;/code&gt; file or &lt;code&gt;init.vim&lt;/code&gt; file to configure VimTeX to your liking. Users should read the documentation to learn the various configuration possibilities, but the below is a simple overview of some of the main aspects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; This is necessary for VimTeX to load properly. The &#34;indent&#34; is optional.&#xA;&#34; Note that most plugin managers will do this automatically.&#xA;filetype plugin indent on&#xA;&#xA;&#34; This enables Vim&#39;s and neovim&#39;s syntax-related features. Without this, some&#xA;&#34; VimTeX features will not work (see &#34;:help vimtex-requirements&#34; for more&#xA;&#34; info).&#xA;syntax enable&#xA;&#xA;&#34; Viewer options: One may configure the viewer either by specifying a built-in&#xA;&#34; viewer method:&#xA;let g:vimtex_view_method = &#39;zathura&#39;&#xA;&#xA;&#34; Or with a generic interface:&#xA;let g:vimtex_view_general_viewer = &#39;okular&#39;&#xA;let g:vimtex_view_general_options = &#39;--unique file:@pdf\#src:@line@tex&#39;&#xA;&#xA;&#34; VimTeX uses latexmk as the default compiler backend. If you use it, which is&#xA;&#34; strongly recommended, you probably don&#39;t need to configure anything. If you&#xA;&#34; want another compiler backend, you can change it as follows. The list of&#xA;&#34; supported backends and further explanation is provided in the documentation,&#xA;&#34; see &#34;:help vimtex-compiler&#34;.&#xA;let g:vimtex_compiler_method = &#39;latexrun&#39;&#xA;&#xA;&#34; Most VimTeX mappings rely on localleader and this can be changed with the&#xA;&#34; following line. The default is usually fine and is the symbol &#34;\&#34;.&#xA;let maplocalleader = &#34;,&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If the compiler or the viewer doesn&#39;t start properly, one may type &lt;code&gt;&amp;lt;localleader&amp;gt;li&lt;/code&gt; to view the system commands that were executed to start them. To inspect the compiler output, use &lt;code&gt;&amp;lt;localleader&amp;gt;lo&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;The following video shows how to use VimTeX&#39;s main features (credits: &lt;a href=&#34;https://github.com/DustyTopology&#34;&gt;@DustyTopology&lt;/a&gt; from &lt;a href=&#34;https://github.com/lervag/vimtex/issues/1946#issuecomment-846345095&#34;&gt;#1946&lt;/a&gt;). The example LaTeX file used in the video is available under &lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/test/example-quick-start/main.tex&#34;&gt;&lt;code&gt;test/example-quick-start/main.tex&lt;/code&gt;&lt;/a&gt; and it may be instructive to copy the file and play with it to learn some of these basic functions.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/66584581/119213849-1b7d4080-ba77-11eb-8a31-7ff7b9a4a020.mp4&#34;&gt;https://user-images.githubusercontent.com/66584581/119213849-1b7d4080-ba77-11eb-8a31-7ff7b9a4a020.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tutorial&lt;/h3&gt; &#xA;&lt;p&gt;Both new and experienced users are also encouraged to read the third-party article &lt;a href=&#34;https://www.ejmastnak.com/tutorials/vim-latex/vimtex.html&#34;&gt;Getting started with the VimTeX plugin&lt;/a&gt;. The article covers VimTeX&#39;s core features and contains plenty of examples and high-resolution animations intended to help new users ease into working with the plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Users are of course &lt;em&gt;strongly&lt;/em&gt; encouraged to read the documentation, at least the introduction, to learn about the different features and possibilities provided by VimTeX (see &lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/doc/vimtex.txt&#34;&gt;&lt;code&gt;:h vimtex&lt;/code&gt;&lt;/a&gt;). Advanced users and potential developers may also be interested in reading the supplementary documents:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/DOCUMENTATION.md&#34;&gt;DOCUMENTATION.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;Here is an example of the syntax highlighting provided by VimTeX. The conceal feature is active on the right-hand side split. The example is made by @DustyTopology with the &lt;a href=&#34;https://github.com/arzg/vim-colors-xcode&#34;&gt;vim-colors-xcode&lt;/a&gt; colorscheme with some minor adjustments &lt;a href=&#34;https://github.com/lervag/vimtex/issues/1946#issuecomment-843674951&#34;&gt;described here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/lervag/vimtex-media/raw/main/img/syntax.png&#34; alt=&#34;Syntax example&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;GIFs&lt;/h3&gt; &#xA;&lt;p&gt;See the file &lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/VISUALS.md&#34;&gt;VISUALS.md&lt;/a&gt; for screencast-style GIFs demonstrating VimTeX&#39;s core motions, text-editing commands, and text objects.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Below is a list of features offered by VimTeX. The features are accessible as both commands and mappings. The mappings generally start with &lt;code&gt;&amp;lt;localleader&amp;gt;l&lt;/code&gt;, but if desired one can disable default mappings to define custom mappings. Nearly all features are enabled by default, but each feature may be disabled if desired. The two exceptions are code folding and formating, which are disabled by default and must be manually enabled.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Document compilation with &lt;a href=&#34;http://users.phys.psu.edu/~collins/software/latexmk-jcc/&#34;&gt;latexmk&lt;/a&gt;, &lt;a href=&#34;https://github.com/aclements/latexrun&#34;&gt;latexrun&lt;/a&gt;, &lt;a href=&#34;https://tectonic-typesetting.github.io&#34;&gt;tectonic&lt;/a&gt;, or &lt;a href=&#34;https://github.com/cereda/arara&#34;&gt;arara&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;LaTeX log parsing for quickfix entries using &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;internal method&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/stefanhepp/pplatex&#34;&gt;pplatex&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Compilation of selected part of document&lt;/li&gt; &#xA; &lt;li&gt;Support for several PDF viewers with forward search &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.mupdf.com/&#34;&gt;MuPDF&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://okular.kde.org/&#34;&gt;Okular&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://launchpad.net/qpdfview&#34;&gt;qpdfview&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://skim-app.sourceforge.net/&#34;&gt;Skim&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://www.sumatrapdfreader.org/free-pdf-reader.html&#34;&gt;SumatraPDF&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://pwmt.org/projects/zathura/&#34;&gt;Zathura&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Other viewers are supported through a general interface&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Completion of &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;citations&lt;/li&gt; &#xA;   &lt;li&gt;labels&lt;/li&gt; &#xA;   &lt;li&gt;commands&lt;/li&gt; &#xA;   &lt;li&gt;file names for figures, input/include, includepdf, includestandalone&lt;/li&gt; &#xA;   &lt;li&gt;glossary entries&lt;/li&gt; &#xA;   &lt;li&gt;package and documentclass names based on available &lt;code&gt;.sty&lt;/code&gt; and &lt;code&gt;.cls&lt;/code&gt; files&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Document navigation through &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;table of contents&lt;/li&gt; &#xA;   &lt;li&gt;table of labels&lt;/li&gt; &#xA;   &lt;li&gt;proper settings for &lt;code&gt;&#39;include&#39;&lt;/code&gt;, &lt;code&gt;&#39;includexpr&#39;&lt;/code&gt;, &lt;code&gt;&#39;suffixesadd&#39;&lt;/code&gt; and &lt;code&gt;&#39;define&#39;&lt;/code&gt;, which among other things &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;allow &lt;code&gt;:h include-search&lt;/code&gt; and &lt;code&gt;:h definition-search&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;give enhanced &lt;code&gt;gf&lt;/code&gt; command&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Easy access to (online) documentation of packages&lt;/li&gt; &#xA; &lt;li&gt;Word count (through &lt;code&gt;texcount&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Motions (&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/VISUALS.md#motion-commands&#34;&gt;link to GIF demonstrations&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Move between section boundaries with &lt;code&gt;[[&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;][&lt;/code&gt;, and &lt;code&gt;]]&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Move between environment boundaries with &lt;code&gt;[m&lt;/code&gt;, &lt;code&gt;[M&lt;/code&gt;, &lt;code&gt;]m&lt;/code&gt;, and &lt;code&gt;]M&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Move between math environment boundaries with &lt;code&gt;[n&lt;/code&gt;, &lt;code&gt;[N&lt;/code&gt;, &lt;code&gt;]n&lt;/code&gt;, and &lt;code&gt;]N&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Move between frame environment boundaries with &lt;code&gt;[r&lt;/code&gt;, &lt;code&gt;[R&lt;/code&gt;, &lt;code&gt;]r&lt;/code&gt;, and &lt;code&gt;]R&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Move between comment boundaries with &lt;code&gt;[*&lt;/code&gt; and &lt;code&gt;]*&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Move between matching delimiters with &lt;code&gt;%&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Text objects (&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/VISUALS.md#text-objects&#34;&gt;link to GIF demonstrations&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;ic ac&lt;/code&gt; Commands&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;id ad&lt;/code&gt; Delimiters&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ie ae&lt;/code&gt; LaTeX environments&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;i$ a$&lt;/code&gt; Math environments&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;iP aP&lt;/code&gt; Sections&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;im am&lt;/code&gt; Items&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Other mappings (&lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/VISUALS.md#deleting-surrounding-latex-content&#34;&gt;link to GIF demonstrations&lt;/a&gt;) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Delete the surrounding command, environment or delimiter with &lt;code&gt;dsc&lt;/code&gt;/&lt;code&gt;dse&lt;/code&gt;/&lt;code&gt;ds$&lt;/code&gt;/&lt;code&gt;dsd&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Change the surrounding command, environment or delimiter with &lt;code&gt;csc&lt;/code&gt;/&lt;code&gt;cse&lt;/code&gt;/&lt;code&gt;cs$&lt;/code&gt;/&lt;code&gt;csd&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle starred command or environment with &lt;code&gt;tsc&lt;/code&gt;/&lt;code&gt;tse&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle inline and displaymath with &lt;code&gt;ts$&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle between e.g. &lt;code&gt;()&lt;/code&gt; and &lt;code&gt;\left(\right)&lt;/code&gt; with &lt;code&gt;tsd&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle (inline) fractions with &lt;code&gt;tsf&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Close the current environment/delimiter in insert mode with &lt;code&gt;]]&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;\left ... \right)&lt;/code&gt; modifiers to surrounding delimiters with &lt;code&gt;&amp;lt;F8&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Insert new command with &lt;code&gt;&amp;lt;F7&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Convenient insert mode mappings for faster typing of e.g. maths&lt;/li&gt; &#xA;   &lt;li&gt;Context menu on citations (e.g. &lt;code&gt;\cite{...}&lt;/code&gt;) mapped to &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Improved folding (&lt;code&gt;:h &#39;foldexpr&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Improved indentation (&lt;code&gt;:h &#39;indentexpr&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Syntax highlighting &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A consistent core syntax specification&lt;/li&gt; &#xA;   &lt;li&gt;General syntax highlighting for several popular LaTeX packages&lt;/li&gt; &#xA;   &lt;li&gt;Nested syntax highlighting for several popular LaTeX packages&lt;/li&gt; &#xA;   &lt;li&gt;Highlight matching delimiters&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support for multi-file project packages &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://ctan.uib.no/macros/latex/contrib/import/import.pdf&#34;&gt;import&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://ctan.uib.no/macros/latex/contrib/subfiles/subfiles.pdf&#34;&gt;subfiles&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the documentation for a thorough introduction to VimTeX (e.g. &lt;code&gt;:h vimtex&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;Other relevant plugins&lt;/h2&gt; &#xA;&lt;p&gt;Even though VimTeX provides a lot of nice features for working with LaTeX documents, there are several features that are better served by other, dedicated plugins. For a more detailed listing of these, please see &lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/doc/vimtex.txt#L508&#34;&gt;&lt;code&gt;:help vimtex-and-friends&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Linting and syntax checking&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/w0rp/ale&#34;&gt;ale&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neomake/neomake&#34;&gt;neomake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vim-syntastic/syntastic&#34;&gt;syntastic&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Snippets and templates&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SirVer/ultisnips&#34;&gt;UltiSnips&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shougo/neosnippet.vim&#34;&gt;neosnippet&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Tag navigation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ludovicchabant/vim-gutentags&#34;&gt;vim-gutentags&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;p&gt;The following are some alternative LaTeX plugins for Vim:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://vim-latex.sourceforge.net&#34;&gt;LaTeX-Suite&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The main difference between VimTeX and LaTeX-Suite (aka vim-latex) is probably that VimTeX does not try to implement a full fledged IDE for LaTeX inside Vim. E.g.:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;VimTeX does not provide a full snippet feature, because this is better handled by &lt;a href=&#34;https://github.com/SirVer/ultisnips&#34;&gt;UltiSnips&lt;/a&gt; or &lt;a href=&#34;https://github.com/Shougo/neosnippet.vim&#34;&gt;neosnippet&lt;/a&gt; or similar snippet engines.&lt;/li&gt; &#xA;   &lt;li&gt;VimTeX builds upon Vim principles: It provides text objects for environments, inline math, it provides motions for sections and paragraphs&lt;/li&gt; &#xA;   &lt;li&gt;VimTeX uses &lt;code&gt;latexmk&lt;/code&gt;, &lt;code&gt;latexrun&lt;/code&gt;, &lt;code&gt;tectonic&lt;/code&gt; or &lt;code&gt;arara&lt;/code&gt; for compilation with a callback feature to get instant feedback on compilation errors&lt;/li&gt; &#xA;   &lt;li&gt;VimTeX is very modular: if you don&#39;t like a feature, you can turn it off.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jakewvincent/texmagic.nvim&#34;&gt;TexMagic.nvim&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&#34;A simple, lightweight Neovim plugin that facilitates LaTeX build engine selection via magic comments. It is designed with the TexLab LSP server&#39;s build functionality in mind, which at the time of this plugin&#39;s inception had to be specified in init.lua/init.vim and could not be set on a by-project basis.&#34;&lt;/p&gt; &lt;p&gt;This plugin should be combined with the TexLab LSP server, and it only works on neovim.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/LaTeX-Box-Team/LaTeX-Box&#34;&gt;LaTeX-Box&lt;/a&gt;&lt;/p&gt; &lt;p&gt;VimTeX currently has most of the features of LaTeX-Box, as well as some additional ones. See &lt;a href=&#34;https://raw.githubusercontent.com/lervag/vimtex/master/#features&#34;&gt;here&lt;/a&gt; for a relatively complete list of features.&lt;/p&gt; &lt;p&gt;One particular feature that LaTeX-Box has but VimTeX misses, is the ability to do single-shot compilation &lt;em&gt;with callback&lt;/em&gt;. This functionality was removed because it adds a lot of complexity for relatively little gain (IMHO).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;http://atp-vim.sourceforge.net&#34;&gt;AutomaticTexPlugin&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/xuhdev/vim-latex-live-preview&#34;&gt;vim-latex-live-preview&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more alternatives and more information and discussions regarding LaTeX plugins for Vim, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://vi.stackexchange.com/questions/2047/what-are-the-differences-between-latex-plugins&#34;&gt;What are the differences between LaTeX plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tex.stackexchange.com/questions/339/latex-editors-ides&#34;&gt;List of LaTeX editors (not only Vim)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;VimTeX on the Web&lt;/h2&gt; &#xA;&lt;p&gt;VimTeX users may be interested in reading &lt;a href=&#34;https://github.com/ejmastnak&#34;&gt;@ejmastnak&lt;/a&gt;&#39;s series on &lt;a href=&#34;https://www.ejmastnak.com/tutorials/vim-latex/intro.html&#34;&gt;Efficient LaTeX Using (Neo)Vim&lt;/a&gt;, which covers all the fundamentals of setting up a VimTeX-based LaTeX workflow, including usage of the VimTeX plugin, compilation, setting up forward and inverse search with a PDF reader, and Vimscript tools for user-specific customization.&lt;/p&gt; &#xA;&lt;p&gt;If you know of (or create) other up-to-date, high-quality guides to VimTeX&#39;s features on third-party websites, feel free to submit a pull request updating this section.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trigaten/Learn_Prompting</title>
    <updated>2023-02-01T02:24:32Z</updated>
    <id>tag:github.com,2023-02-01:/trigaten/Learn_Prompting</id>
    <link href="https://github.com/trigaten/Learn_Prompting" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Learn Prompting&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/learn_prompting&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url?label=Follow%20%40LearnPrompting&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2FLearnPrompting&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/7enStJXQzD&#34;&gt;&lt;img src=&#34;https://dcbadge.vercel.app/api/server/7enStJXQzD?compact=true&amp;amp;style=flat&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/website?down_message=offline%20%3A%28&amp;amp;up_message=learnprompting.org&amp;amp;url=https%3A%2F%2Flearnprompting.org&#34; alt=&#34;Website&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://learnprompting.org&#34;&gt;https://learnprompting.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This website is a free, open-source guide on prompt engineering. Contributions are welcome! Harsh criticism is welcome too!&lt;/p&gt; &#xA;&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; &#xA;&lt;p&gt;We welcome contributions in any form.&lt;/p&gt; &#xA;&lt;p&gt;We are actively looking for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;content suggestions&lt;/li&gt; &#xA; &lt;li&gt;content/art contributions&lt;/li&gt; &#xA; &lt;li&gt;typos :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Local Development&lt;/h2&gt; &#xA;&lt;p&gt;A bit of complexity is needed due to Docusaurus lacking ES6 module support&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ npm i&#xA;$ brew install nvm&#xA;$ export NVM_DIR=&#34;$([ -z &#34;${XDG_CONFIG_HOME-}&#34; ] &amp;amp;&amp;amp; printf %s &#34;${HOME}/.nvm&#34; || printf %s &#34;${XDG_CONFIG_HOME}/nvm&#34;)&#34;&#xA;[ -s &#34;$NVM_DIR/nvm.sh&#34; ] &amp;amp;&amp;amp; \. &#34;$NVM_DIR/nvm.sh&#34; # This loads nvm&#xA;$ nvm install-latest-npm&#xA;$ npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command starts a local development server and opens up a browser window. Most changes are reflected live without having to restart the server.&lt;/p&gt; &#xA;&lt;h2&gt;Cite&lt;/h2&gt; &#xA;&lt;p&gt;Use the provided Github citation in this repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jeffrey-xiao/papers</title>
    <updated>2023-02-01T02:24:32Z</updated>
    <id>tag:github.com,2023-02-01:/jeffrey-xiao/papers</id>
    <link href="https://github.com/jeffrey-xiao/papers" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;papers&lt;/h1&gt; &#xA;&lt;p&gt;A collection of academic papers, articles, and other resources that I plan to read or have read. The content has a focus on distributed systems.&lt;/p&gt; &#xA;&lt;p&gt;I have also included my notes on select resources to summarize important takeaways and to help me better understand the material.&lt;/p&gt; &#xA;&lt;h2&gt;Blog Posts and Online Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jepsen.io/consistency&#34;&gt;Consistency Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jepsen.io/analyses&#34;&gt;Jepsen Analyses&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aphyr.com/posts/313-strong-consistency-models&#34;&gt;Strong Consistency Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://christophermeiklejohn.com/distributed/systems/2013/07/12/readings-in-distributed-systems.html&#34;&gt;Readings in Distributed Systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying&#34;&gt;The Log: What every software engineering should know about real-time data&#39;s unifying abstraction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Consensus&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/unreliable-failure-detectors-for-reliable-distributed-systems.pdf&#34;&gt;Unreliable Failure Detectors for Reliable Distributed Systems&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Chandra, Tushar Deepak, and Sam Toueg. 1996. “Unreliable Failure Detectors for Reliable Distributed Systems.” &lt;em&gt;Journal of the ACM (JACM)&lt;/em&gt; 43 (2). ACM: 225–67.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/impossibility-of-distributed-consensus-with-one-faulty-process.pdf&#34;&gt;Impossibility of Distributed Consensus with One Faulty Process&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Fischer, Michael J, Nancy A Lynch, and Michael S Paterson. 1982. “Impossibility of Distributed Consensus with One Faulty Process.” MASSACHUSETTS INST OF TECH CAMBRIDGE LAB FOR COMPUTER SCIENCE.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/viewstamped-replication-a-new-primary-copy-method-to-support-highly-available-distributed-systems.pdf&#34;&gt;Viewstamped Replication: A New Primary Copy Method to Support Highly-Available Distributed Systems&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Oki, Brian M, and Barbara H Liskov. 1988. “Viewstamped Replication: A New Primary Copy Method to Support Highly-Available Distributed Systems.” In &lt;em&gt;Proceedings of the Seventh Annual Acm Symposium on Principles of Distributed Computing&lt;/em&gt;, 8–17. ACM.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/viewstamped-replication-revisited.pdf&#34;&gt;Viewstamped Replication Revisited&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Liskov, Barbara, and James Cowling. 2012. “Viewstamped Replication Revisited.”&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/the-part-time-parliament.pdf&#34;&gt;The Part Time Parliament&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Lamport, Leslie, and others. 1998. “The Part-Time Parliament.” &lt;em&gt;ACM Transactions on Computer Systems&lt;/em&gt; 16 (2): 133–69.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/paxos-made-simple.pdf&#34;&gt;Paxos Made Simple&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Lamport, Leslie, and others. 2001. “Paxos Made Simple.” &lt;em&gt;ACM Sigact News&lt;/em&gt; 32 (4): 18–25.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/paxos-made-live-an-engineering-perspective.pdf&#34;&gt;Paxos Made Live - An Engineering Perspective&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Chandra, Tushar D, Robert Griesemer, and Joshua Redstone. 2007. “Paxos Made Live: An Engineering Perspective.” In &lt;em&gt;Proceedings of the Twenty-Sixth Annual Acm Symposium on Principles of Distributed Computing&lt;/em&gt;, 398–407. ACM.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/flexible-paxos-quorum-intersection-revisited.pdf&#34;&gt;Flexible Paxos: Quorum Intersection Revisited&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Howard, Heidi, Dahlia Malkhi, and Alexander Spiegelman. 2016. “Flexible Paxos: Quorum Intersection Revisited.” &lt;em&gt;arXiv Preprint arXiv:1608.06696&lt;/em&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/zab-high-performance-broadcast-for-primary-backup-systems.pdf&#34;&gt;Zab: High-Performance Broadcast for Primary-Backup Systems&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Junqueira, Flavio P, Benjamin C Reed, and Marco Serafini. 2011. “Zab: High-Performance Broadcast for Primary-Backup Systems.” In &lt;em&gt;2011 Ieee/Ifip 41st International Conference on Dependable Systems &amp;amp; Networks (Dsn)&lt;/em&gt;, 245–56. IEEE.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/zookeepers-atomic-broadcast-protocol-theory-and-practice.pdf&#34;&gt;ZooKeeper&#39;s Atomic Broadcast Protocol: Theory and Practice&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Medeiros, André. 2012. “ZooKeeper’s Atomic Broadcast Protocol: Theory and Practice.” &lt;em&gt;Aalto University School of Science&lt;/em&gt; 20.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/viva-la-difference-paxos-vs-viewstamped-replication-vs-zab&#34;&gt;Vive la Différence: Paxos vs. Viewstamped Replication vs. Zab&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Van Renesse, Robbert, Nicolas Schiper, and Fred B Schneider. 2015. “Vive La Différence: Paxos Vs. Viewstamped Replication Vs. Zab.” &lt;em&gt;IEEE Transactions on Dependable and Secure Computing&lt;/em&gt; 12 (4). IEEE: 472–84.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/in-search-of-an-understandable-consensus-algorithm.pdf&#34;&gt;In Search of an Understandable Consensus Algorithm&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Ongaro, Diego, and John Ousterhout. 2014. “In Search of an Understandable Consensus Algorithm.” In &lt;em&gt;2014 {Usenix} Annual Technical Conference ({Usenix}{ATC} 14)&lt;/em&gt;, 305–19.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/consensus-bridging-theory-and-practice.pdf&#34;&gt;Consensus: Bridging Theory and Practice&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Ongaro, Diego. 2014. “Consensus: Bridging Theory and Practice.” PhD thesis, Stanford University.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/consensus/raft-refloated-do-we-have-consensus.pdf&#34;&gt;Raft Refloated: Do We Have Consensus?&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Howard, Heidi, Malte Schwarzkopf, Anil Madhavapeddy, and Jon Crowcroft. 2015. “Raft Refloated: Do We Have Consensus?” &lt;em&gt;Operating Systems Review&lt;/em&gt; 49 (1): 12–21.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Causality&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/causality/time-clocks-and-the-ordering-of-events-in-a-distributed-system.pdf&#34;&gt;Time, Clocks, and the Ordering of Events in a Distributed System&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Lamport, Leslie. 1978. “Time, Clocks, and the Ordering of Events in a Distributed System.” &lt;em&gt;Communications of the ACM&lt;/em&gt; 21 (7). ACM: 558–65.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/causality/timestamps-in-message-passing-systems-that-preserve-the-partial-ordering.pdf&#34;&gt;Timestamps in Message-Passing Systems That Preserve the Partial Ordering&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Fidge, Colin J. 1987. &lt;em&gt;Timestamps in Message-Passing Systems That Preserve the Partial Ordering&lt;/em&gt;. Australian National University. Department of Computer Science.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/causality/virtual-time-and-global-states-of-distributed-systems.pdf&#34;&gt;Virtual Time and Global States of Distributed Systems&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Mattern, Friedemann, and others. 1988. &lt;em&gt;Virtual Time and Global States of Distributed Systems&lt;/em&gt;. Citeseer.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/causality/logical-physical-clocks-and-consistent-snapshots-in-globally-distributed-databases.pdf&#34;&gt;Logical Physical Clocks and Consistent Snapshots in Globally Distributed Databases&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Demirbas, Murat, Marcelo Leone, Bharadwaj Avva, Deepak Madeppa, and Sandeep Kulkarni. 2014. “Logical Physical Clocks and Consistent Snapshots in Globally Distributed Databases.”&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/causality/the-bloom-clock.pdf&#34;&gt;The Bloom Clock&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Ramabaja, Lum. 2019. “The Bloom Clock.” &lt;em&gt;CoRR&lt;/em&gt; abs/1905.13064. &lt;a href=&#34;http://arxiv.org/abs/1905.13064&#34;&gt;http://arxiv.org/abs/1905.13064&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Consistency&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/brewers-conjecture-and-the-feasibility-of-consistent-available-partition-tolerant-web-services.pdf&#34;&gt;Brewer&#39;s Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Gilbert, Seth, and Nancy Lynch. 2002. “Brewer’s Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services.” &lt;em&gt;Acm Sigact News&lt;/em&gt; 33 (2). ACM: 51–59.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Data Structures&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/fast-set-operations-using-treaps.pdf&#34;&gt;Fast set operations using treaps&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Blelloch, Guy E, and Margaret Reid-Miller. 1998. “Fast Set Operations Using Treaps.” In &lt;em&gt;SPAA&lt;/em&gt;, 98:16–26.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/a-skip-list-cookbook.pdf&#34;&gt;A Skip List Cookbook&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Pugh, William. 1998. “A Skip List Cookbook.”&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/skip-lists-a-probabilistic-alternative-to-balanced-trees.pdf&#34;&gt;Skip Lists: A Probabilistic Alternative to Balanced Trees&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Pugh, William. 1990. “Skip Lists: A Probabilistic Alternative to Balanced Trees.” &lt;em&gt;Communications of the ACM&lt;/em&gt; 33 (6).&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/less-hashing-same-performance-building-a-better-bloom-filter.pdf&#34;&gt;Less hashing, same performance: Building a better Bloom filter&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Kirsch, Adam, and Michael Mitzenmacher. 2006. “Less Hashing, Same Performance: Building a Better Bloom Filter.” In &lt;em&gt;European Symposium on Algorithms&lt;/em&gt;, 456–67. Springer.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/advanced-bloom-filter-based-algorithms-for-efficient-approximate-data-de-duplication-in-streams.pdf&#34;&gt;Advanced bloom filter based algorithms for efficient approximate data de-duplication in streams&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Bera, Suman K, Sourav Dutta, Ankur Narang, and Souvik Bhattacherjee. 2012. “Advanced Bloom Filter Based Algorithms for Efficient Approximate Data de-Duplication in Streams.” &lt;em&gt;arXiv Preprint arXiv:1212.3964&lt;/em&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/cuckoo-filter-practically-better-than-bloom.pdf&#34;&gt;Cuckoo filter: Practically better than bloom&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Fan, Bin, Dave G Andersen, Michael Kaminsky, and Michael D Mitzenmacher. 2014. “Cuckoo Filter: Practically Better Than Bloom.” In &lt;em&gt;Proceedings of the 10th Acm International on Conference on Emerging Networking Experiments and Technologies&lt;/em&gt;, 75–88. ACM.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/dont-thrash-how-to-cache-your-hash-on-flash.pdf&#34;&gt;Don&#39;t thrash: how to cache your hash on flash&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Bender, Michael A, Martin Farach-Colton, Rob Johnson, Russell Kraner, Bradley C Kuszmaul, Dzejla Medjedovic, Pablo Montes, Pradeep Shetty, Richard P Spillane, and Erez Zadok. 2012. “Don’t Thrash: How to Cache Your Hash on Flash.” &lt;em&gt;Proceedings of the VLDB Endowment&lt;/em&gt; 5 (11). VLDB Endowment: 1627–37.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/an-improved-data-stream-summary-the-count-min-sketch-and-its-applications.pdf&#34;&gt;An improved data stream summary: the count-min sketch and its applications&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Cormode, Graham, and Shan Muthukrishnan. 2005. “An Improved Data Stream Summary: The Count-Min Sketch and Its Applications.” &lt;em&gt;Journal of Algorithms&lt;/em&gt; 55 (1). Elsevier: 58–75.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/a-general-purpose-counting-filter-making-every-bit-count.pdf&#34;&gt;A general-purpose counting filter: Making every bit count&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Pandey, Prashant, Michael A Bender, Rob Johnson, and Rob Patro. 2017. “A General-Purpose Counting Filter: Making Every Bit Count.” In &lt;em&gt;Proceedings of the 2017 Acm International Conference on Management of Data&lt;/em&gt;, 775–87. ACM.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/hyperloglog-the-analysis-of-a-near-optimal-cardinality-estimation-algorithm.pdf&#34;&gt;HyperLogLog: the analysis of a near-optimal cardinality estimation algorithm&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Flajolet, Philippe, Éric Fusy, Olivier Gandouet, and Frédéric Meunier. 2007. “Hyperloglog: The Analysis of a Near-Optimal Cardinality Estimation Algorithm.” In &lt;em&gt;Discrete Mathematics and Theoretical Computer Science&lt;/em&gt;, 137–56. Discrete Mathematics; Theoretical Computer Science.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/hyperloglog-in-practice-algorithmic-engineering-of-a-state-of-the-art-cardinality-estimation-algorithm.pdf&#34;&gt;HyperLogLog in practice: algorithmic engineering of a state of the art cardinality estimation algorithm&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Heule, Stefan, Marc Nunkesser, and Alexander Hall. 2013. “HyperLogLog in Practice: Algorithmic Engineering of a State of the Art Cardinality Estimation Algorithm.” In &lt;em&gt;Proceedings of the 16th International Conference on Extending Database Technology&lt;/em&gt;, 683–92. ACM.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/lsm-tree.pdf&#34;&gt;LSM Tree&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;O’Neil, Patrick, Edward Cheng, Dieter Gawlick, and Elizabeth O’Neil. 1996. “The Log-Structured Merge-Tree (Lsm-Tree).” &lt;em&gt;Acta Informatica&lt;/em&gt; 33 (4). Springer: 351–85.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/blsm-a-general-purpose-lsm-tree.pdf&#34;&gt;bLSM: A General Purpose LSM Tree&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Sears, Russell, and Raghu Ramakrishnan. 2012. “BLSM: A General Purpose Log Structured Merge Tree.” In &lt;em&gt;Proceedings of the 2012 Acm Sigmod International Conference on Management of Data&lt;/em&gt;, 217–28. ACM.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/a-comprehensive-study-of-convergent-and-commutative-replicated-data-types.pdf&#34;&gt;A Comprehensive Study of Convergent and Commutative Replicated Data Types&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Shapiro, Marc, Nuno Preguiça, Carlos Baquero, and Marek Zawirski. 2011. “A Comprehensive Study of Convergent and Commutative Replicated Data Types.” PhD thesis, Inria–Centre Paris-Rocquencourt; INRIA.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/data-structures/efficient-synchronization-of-state-based-crdts.pdf&#34;&gt;Efficient Synchronization of State-based CRDTs&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Enes, Vitor, Paulo Sérgio Almeida, Carlos Baquero, and João Leitão. 2018. “Efficient Synchronization of State-Based Crdts.” &lt;em&gt;arXiv Preprint arXiv:1803.02750&lt;/em&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;P2P&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/p2p/chord-a-scalable-peer-to-peer-lookup-service-for-internet-applications.pdf&#34;&gt;Chord: A Scalable Peer-to-peer Lookup Service for Internet Applications&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Stoica, Ion, Robert Morris, David Liben-Nowell, David R Karger, M Frans Kaashoek, Frank Dabek, and Hari Balakrishnan. 2003. “Chord: A Scalable Peer-to-Peer Lookup Protocol for Internet Applications.” &lt;em&gt;IEEE/ACM Transactions on Networking (TON)&lt;/em&gt; 11 (1). IEEE Press: 17–32.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/p2p/kademlia-a-peer-to-peer-information-system-based-on-the-xor-metric.pdf&#34;&gt;Kademlia: A Peer-to-peer Information System Based on the XOR Metric&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Maymounkov, Petar, and David Mazieres. 2002. “Kademlia: A Peer-to-Peer Information System Based on the Xor Metric.” In &lt;em&gt;International Workshop on Peer-to-Peer Systems&lt;/em&gt;, 53–65. Springer.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Systems&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/systems/dynamo-amazons-highly-available-key-value-store.pdf&#34;&gt;Dynamo: Amazon&#39;s Highly Available Key-value Store&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;DeCandia, Giuseppe, Deniz Hastorun, Madan Jampani, Gunavardhan Kakulapati, Avinash Lakshman, Alex Pilchin, Swaminathan Sivasubramanian, Peter Vosshall, and Werner Vogels. 2007. “Dynamo: Amazon’s Highly Available Key-Value Store.” In &lt;em&gt;ACM Sigops Operating Systems Review&lt;/em&gt;, 41:205–20. 6. ACM.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/systems/bigtable-a-distributed-storage-system-for-structured-data.pdf&#34;&gt;Bigtable: A Distributed Storage System for Structured Data&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Chang, Fay, Jeffrey Dean, Sanjay Ghemawat, Wilson C Hsieh, Deborah A Wallach, Mike Burrows, Tushar Chandra, Andrew Fikes, and Robert E Gruber. 2008. “Bigtable: A Distributed Storage System for Structured Data.” &lt;em&gt;ACM Transactions on Computer Systems (TOCS)&lt;/em&gt; 26 (2). ACM: 4.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/systems/cassandra-a-decentralized-structured-storage-system.pdf&#34;&gt;Cassandra - A Decentralized Structured Storage System&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Lakshman, Avinash, and Prashant Malik. 2010. “Cassandra: A Decentralized Structured Storage System.” &lt;em&gt;ACM SIGOPS Operating Systems Review&lt;/em&gt; 44 (2). ACM: 35–40.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/systems/kafka-a-distributed-messaging-system-for-log-processing.pdf&#34;&gt;Kafka: A Distributed Messaging System for Log Processing&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Kreps, Jay, Neha Narkhede, Jun Rao, and others. 2011. “Kafka: A Distributed Messaging System for Log Processing.” In &lt;em&gt;Proceedings of the Netdb&lt;/em&gt;, 1–7.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/systems/spanner-googles-globally-distributed-database.pdf&#34;&gt;Spanner: Google&#39;s Globally-Distributed Database&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Corbett, James C., Jeffrey Dean, Michael Epstein, Andrew Fikes, Christopher Frost, JJ Furman, Sanjay Ghemawat, et al. 2012. “Spanner: Google’s Globally-Distributed Database.” In &lt;em&gt;OSDI&lt;/em&gt;.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/systems/spanner-becoming-a-sql-system.pdf&#34;&gt;Spanner: Becoming a SQL System&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Bacon, David F., Nathan Bales, Nico Bruno, Brian F. Cooper, Adam Dickinson, Andrew Fikes, Campbell Fraser, et al. 2017. “Spanner: Becoming a Sql System.” In &lt;em&gt;Proc. SIGMOD 2017&lt;/em&gt;, 331–43.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/testing/an-analysis-of-network-partitioning-failures-in-cloud-systems.pdf&#34;&gt;An Analysis of Network-Partitioning Failures in Cloud Systems&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Alquraan, Ahmed, Hatem Takruri, Mohammed Alfatafta, and Samer Al-Kiswany. 2018. “An Analysis of Network-Partitioning Failures in Cloud Systems.” In &lt;em&gt;13th Usenix Symposium on Operating Systems Design and Implementation Osdi 18)&lt;/em&gt;, 51–68.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/testing/why-is-random-testing-effective-for-partition-tolerance-bugs.pdf&#34;&gt;Why Is Random Testing Effective for Partition Tolerance Bugs?&lt;/a&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Majumdar, Rupak, and Filip Niksic. 2017. “Why Is Random Testing Effective for Partition Tolerance Bugs?” &lt;em&gt;Proceedings of the ACM on Programming Languages&lt;/em&gt; 2 (POPL). ACM: 46.&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Textbooks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Operating Systems: Principles and Practice &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/textbooks/operating-systems-principles-and-practice-vol-1-kernels-and-processes.pdf&#34;&gt;Volume 1: Kernels and Processes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/textbooks/operating-systems-principles-and-practice-vol-2-concurrency.pdf&#34;&gt;Volume 2: Concurrency&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/textbooks/operating-systems-principles-and-practice-vol-3-memory-management.pdf&#34;&gt;Volume 3: Memory Management&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/textbooks/operating-systems-principles-and-practice-vol-4-persistent-storage.pdf&#34;&gt;Volume 4: Persistent Storage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/textbooks/designing-data-intensive-applications.pdf&#34;&gt;Designing Data-Intensive Applications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/textbooks/distributed-systems.pdf&#34;&gt;Distributed Systems&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://book.mixu.net/distsys&#34;&gt;Distributed Systems for Fun and Profit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.the-paper-trail.org/post/2014-08-09-distributed-systems-theory-for-the-distributed-systems-engineer&#34;&gt;Distributed Systems Theory for the Distributed Systems Engineer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/jeffrey-xiao/papers/master/textbooks/readings-in-database-systems.pdf&#34;&gt;Readings in Database Systems&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>