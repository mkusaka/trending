<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-01T02:23:28Z</updated>
  <subtitle>Monthly Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tuhdo/os01</title>
    <updated>2023-07-01T02:23:28Z</updated>
    <id>tag:github.com,2023-07-01:/tuhdo/os01</id>
    <link href="https://github.com/tuhdo/os01" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bootstrap yourself to write an OS from scratch. A book for self-learner.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=tuhdo1710%40gmail%2ecom&amp;amp;lc=VN&amp;amp;item_number=tuhdo&amp;amp;currency_code=USD&amp;amp;bn=PP%2dDonationsBF%3aDonate%2dPayPal%2dgreen%2esvg%3aNonHosted&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true&#34; alt=&#34;Donate&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://tuhdo.github.io/os01/&#34;&gt;Operating Systems: From 0 to 1&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;This book helps you gain the foundational knowledge required to write an operating system from scratch. Hence the title, 0 to 1.&lt;/p&gt; &#xA;&lt;p&gt;After completing this book, at the very least you will learn:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;How to write an operating system from scratch by reading hardware datasheets. In the real world, it works like that. You won&#39;t be able to consult Google for a quick answer.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A big picture of how each layer of a computer is related to the other, from hardware to software.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Write code independently. It&#39;s pointless to copy and paste code. Real learning happens when you solve problems on your own. Some examples are given to kick start, but most problems are yours to conquer. However, the solutions are available online for you to examine after giving it a good try.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linux as a development environment and how to use common tools for low-level programming.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;x86 assembly in-depth.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How a program is structured so that an operating system can run.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;How to debug a program running directly on hardware with gdb and QEMU.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Linking and loading on bare metal x86_64, with pure C. No standard library. No runtime overhead.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tuhdo/os01/raw/master/Operating_Systems_From_0_to_1.pdf&#34;&gt;Download the book&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;The pedagogy of the book&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You give a poor man a fish and you feed him for a day. You teach him to fish and you give him an occupation that will feed him for a lifetime.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This has been the guiding principle of the book when I was writing it. The book does not try to teach you everything, but enough to enable you to learn by yourself. The book itself, at this point, is quite &#34;complete&#34;: once you master part 1 and part 2 (which consist of 8 chapters), you can drop the book and learn by yourself. At this point, smart readers should be able to continue on their own. For example, they can continue their journeys on &lt;a href=&#34;http://wiki.osdev.org/Main_Page&#34;&gt;OSDev wiki&lt;/a&gt;; in fact, after you study everything in part 1 and part 2, you only meet the &lt;a href=&#34;http://wiki.osdev.org/Required_Knowledge&#34;&gt;minimum requirement&lt;/a&gt; by OSDev Wiki (well, not quite, the book actually goes deeper for the suggested topics). Or, if you consider developing an OS for fun is impractical, you can continue with a Linux-specific book, such as this free book &lt;a href=&#34;https://0xax.gitbooks.io/linux-insides/content/&#34;&gt;Linux Insides&lt;/a&gt;, or other popular Linux kernel books. The book tries hard to provide you a strong foundation, and that&#39;s why part 1 and part 2 were released first.&lt;/p&gt; &#xA;&lt;p&gt;The book teaches you core concepts, such as x86 Assembly, ELF, linking and debugging on bare metal, etc., but more importantly, where such information come from. For example, instead of just teaching x86 Assembly, it also teaches how to use reference manuals from Intel. Learning to read the official manuals is important because only the hardware manufacturers themselves understand how their hardware work. If you only learn from the secondary resources because it is easier, you will never gain a complete understanding of the hardware you are programming for. Have you ever read a book on Assembly, and wondered where all the information came from? How does the author know everything he says is correct? And how one seems to magically know so much about hardware programming? This book gives pointers to such questions.&lt;/p&gt; &#xA;&lt;p&gt;As an example, you should skim through chapter 4, &#34;x86 Assembly and C&#34;, to see how it makes use of the Intel manual, Volume 2. And in the process, it guides you how to use the official manuals.&lt;/p&gt; &#xA;&lt;p&gt;Part 3 is planned as a series of specifications that a reader will implement to complete each operating system component. It does not contain code aside from a few examples. Part 3 is just there to shorten the reader&#39;s time when reading the official manuals by giving hints where to read, explaining difficult concepts and how to use the manuals to debug. In short, the implementation is up to the reader to work on his or her own; the chapters are just like university assignments.&lt;/p&gt; &#xA;&lt;h1&gt;Prerequisites&lt;/h1&gt; &#xA;&lt;p&gt;Know some circuit concepts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Basic Concepts of Electricity: atoms, electrons, protons, neutrons, current flow.&lt;/li&gt; &#xA; &lt;li&gt;Ohm&#39;s law&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;However, if you know absolutely nothing about electricity, you can quickly learn it here: &lt;a href=&#34;http://www.allaboutcircuits.com/textbook/&#34;&gt;http://www.allaboutcircuits.com/textbook/&lt;/a&gt;, by reading chapter 1 and chapter 2.&lt;/p&gt; &#xA;&lt;p&gt;C programming. In particular:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Variable and function declarations/definitions&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;While and for loops&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Pointers and function pointers&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Fundamental algorithms and data structures in C&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Linux basics:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Know how to navigate directory with the command line&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Know how to invoke a command with options&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Know how to pipe output to another program&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Touch typing. Since we are going to use Linux, touch typing helps. I know typing speed does not relate to problem-solving, but at least your typing speed should be fast enough not to let it get it the way and degrade the learning experience.&lt;/p&gt; &#xA;&lt;p&gt;In general, I assume that the reader has basic C programming knowledge, and can use an IDE to build and run a program.&lt;/p&gt; &#xA;&lt;h1&gt;Status:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Part 1&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Chapter 1: Complete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 2: Complete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 3: Almost. Currently, the book relies on the Intel Manual for fully explaining x86 execution environment.&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 4: Complete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 5: Complete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 6: Complete&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Part 2&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Chapter 7: Complete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 8: Complete&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Part 3&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Chapter 9: Incomplete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 10: Incomplete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 11: Incomplete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 12: Incomplete&lt;/li&gt; &#xA;   &lt;li&gt;Chapter 13: Incomplete&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;... and future chapters not included yet ...&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In the future, I hope to expand part 3 to cover more than the first 2 parts. But for the time being, I will try to finish the above chapters first.&lt;/p&gt; &#xA;&lt;h1&gt;Sample OS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tuhdo/sample-os&#34;&gt;This repository&lt;/a&gt; is the sample OS of the book that is intended as a reference material for part 3. It covers 10 chapters of the &#34;System Programming Guide&#34; (Intel Manual Volume 3), along with a simple keyboard and video driver for input and output. However, at the moment, only the following features are implemented:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Protected mode.&lt;/li&gt; &#xA; &lt;li&gt;Creating and managing processes with TSS (Task State Structure).&lt;/li&gt; &#xA; &lt;li&gt;Interrupts&lt;/li&gt; &#xA; &lt;li&gt;LAPIC.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Paging and I/O are not yet implemented. I will try to implement it as the book progresses.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;If you find any grammatical issues, please report it using Github Issues. Or, if some sentence or paragraph is difficult to understand, feel free to open an issue with the following title format: &lt;code&gt;[page number][type] Descriptive Title&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example: &lt;code&gt;[pg.9][grammar] Incorrect verb usage&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;type&lt;/code&gt; can be one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Typo&lt;/code&gt;: indicates typing mistake.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Grammar&lt;/code&gt;: indicates incorrect grammar usage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Style&lt;/code&gt;: indicates a style improvement.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Content&lt;/code&gt;: indicates problems with the content.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Even better, you can make a pull request with the provided book source. The main content of the book is in the file &#34;Operating Systems: From 0 to 1.lyx&#34;. You can edit the .txt file, then I will integrate the changes manually. It is a workaround for now since Lyx can cause a huge diff which makes it impossible to review changes.&lt;/p&gt; &#xA;&lt;p&gt;The book is in development, so please bear with me if the English irritates you. I really appreciate it.&lt;/p&gt; &#xA;&lt;p&gt;Finally, if you like the project and if it is possible, please donate to help this project and keep it going.&lt;/p&gt; &#xA;&lt;h1&gt;Got questions?&lt;/h1&gt; &#xA;&lt;p&gt;If you have any question related to the material or the development of the book, feel free to &lt;a href=&#34;https://github.com/tuhdo/os01/issues/new&#34;&gt;open a Github issue&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>deedy/Deedy-Resume</title>
    <updated>2023-07-01T02:23:28Z</updated>
    <id>tag:github.com,2023-07-01:/deedy/Deedy-Resume</id>
    <link href="https://github.com/deedy/Deedy-Resume" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A one page , two asymmetric column resume template in XeTeX that caters to an undergraduate Computer Science student&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Deedy-Resume&lt;/h1&gt; &#xA;&lt;p&gt;A &lt;strong&gt;one-page&lt;/strong&gt;, &lt;strong&gt;two asymmetric column&lt;/strong&gt; resume template in &lt;strong&gt;XeTeX&lt;/strong&gt; that caters particularly to an &lt;strong&gt;undergraduate Computer Science&lt;/strong&gt; student. As of &lt;strong&gt;v1.2&lt;/strong&gt;, there is an option to choose from two templates:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;MacFonts&lt;/strong&gt; - uses fonts native to OSX - &lt;em&gt;Helvetica&lt;/em&gt;, &lt;em&gt;Helvetica Neue&lt;/em&gt; (and it&#39;s Light and Ultralight versions) and the CJK fonts &lt;em&gt;Heiti SC&lt;/em&gt;, and &lt;em&gt;Heiti TC&lt;/em&gt;. The EULA of these fonts prevents distribution on Open Source.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;OpenFonts&lt;/strong&gt; - uses free, open-source fonts that resemble the above - &lt;em&gt;Lato&lt;/em&gt; (and its various variants) and &lt;em&gt;Raleway&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;It is licensed under the Apache License 2.0.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Common LaTeX resume-builders such as &lt;a href=&#34;http://www.latextemplates.com/template/moderncv-cv-and-cover-letter&#34;&gt;&lt;strong&gt;moderncv&lt;/strong&gt;&lt;/a&gt; and the &lt;a href=&#34;https://github.com/afriggeri/cv&#34;&gt;&lt;strong&gt;friggeri-cv&lt;/strong&gt;&lt;/a&gt; look great if you&#39;re looking for a multi-page resume with numerous citations, but usually imperfect for making a thorough, single-page one. A lot of companies today search resumes based on &lt;a href=&#34;http://www.businessinsider.com/most-big-companies-have-a-tracking-system-that-scans-your-resume-for-keywords-2012-1&#34;&gt;keywords&lt;/a&gt; but at the same time require/prefer a one-page resume, especially for undergraduates.&lt;/p&gt; &#xA;&lt;p&gt;This template attempts to &lt;strong&gt;look clean&lt;/strong&gt;, highlight &lt;strong&gt;details&lt;/strong&gt;, be a &lt;strong&gt;single page&lt;/strong&gt;, and allow useful &lt;strong&gt;LaTeX templating&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;h3&gt;OpenFonts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deedydas/Deedy-Resume/master/OpenFonts/sample-image.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;MacFonts&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/deedydas/Deedy-Resume/master/MacFonts/sample-image.png&#34; alt=&#34;alt tag&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Compiles only with &lt;strong&gt;XeTeX&lt;/strong&gt; and required &lt;strong&gt;BibTex&lt;/strong&gt; for compiling publications and the .bib filetype.&lt;/li&gt; &#xA; &lt;li&gt;Uses fonts that are usually only available to &lt;strong&gt;Mac&lt;/strong&gt; users such as Helvetica Neue Light.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Availability&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;MacFonts version - &lt;a href=&#34;http://debarghyadas.com/resume/debarghya-das-resume.pdf&#34;&gt;as an online preview&lt;/a&gt; and &lt;a href=&#34;https://github.com/deedydas/Deedy-Resume/raw/master/MacFonts/deedy_resume.pdf&#34;&gt;as a direct download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenFonts version - &lt;a href=&#34;https://github.com/deedydas/Deedy-Resume/raw/master/OpenFonts/deedy_resume-openfont.pdf&#34;&gt;as a direct download&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Overleaf&lt;/strong&gt;.com (formerly &lt;strong&gt;WriteLatex&lt;/strong&gt;.com) (v1 fonts/colors changed) - &lt;a href=&#34;https://www.writelatex.com/templates/deedy-resume/sqdbztjjghvz#.U2H9Kq1dV18&#34;&gt;compilable online&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;ShareLatex&lt;/strong&gt;.com (v1 fonts changes) - &lt;a href=&#34;https://www.sharelatex.com/templates/cv-or-resume/deedy-resume&#34;&gt;compilable online&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;h3&gt;v1.2&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Added publications in place of societies.&lt;/li&gt; &#xA; &lt;li&gt;Collapsed a portion of education.&lt;/li&gt; &#xA; &lt;li&gt;Fixed a bug with alignment of overflowing long last updated dates on the top right.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;v1.1&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fixed several compilation bugs with \renewcommand&lt;/li&gt; &#xA; &lt;li&gt;Got Open-source fonts (Windows/Linux support)&lt;/li&gt; &#xA; &lt;li&gt;Added Last Updated&lt;/li&gt; &#xA; &lt;li&gt;Moved Title styling into .sty&lt;/li&gt; &#xA; &lt;li&gt;Commented .sty file.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Merge OpenFont and MacFonts as a single sty with options.&lt;/li&gt; &#xA; &lt;li&gt;Figure out a smoother way for the document to flow onto the next page.&lt;/li&gt; &#xA; &lt;li&gt;Add styling information for a &#34;Projects/Hacks&#34; section.&lt;/li&gt; &#xA; &lt;li&gt;Add location/address information&lt;/li&gt; &#xA; &lt;li&gt;Fix the hacky &#39;References&#39; omission outside the .cls file in the MacFonts version.&lt;/li&gt; &#xA; &lt;li&gt;Add various styling and section options and allow for multiple pages smoothly.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Known Issues:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Overflows onto second page if any column&#39;s contents are more than the vertical limit&lt;/li&gt; &#xA; &lt;li&gt;Hacky space on the first bullet point on the second column.&lt;/li&gt; &#xA; &lt;li&gt;Hacky redefinition of \refname to omit &#39;References&#39; text for publications in the MacFonts version.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2014 Debarghya Das&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>liuxinyu95/AlgoXY</title>
    <updated>2023-07-01T02:23:28Z</updated>
    <id>tag:github.com,2023-07-01:/liuxinyu95/AlgoXY</id>
    <link href="https://github.com/liuxinyu95/AlgoXY" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Book of Elementary Algorithms and Data structures&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Elementary Algorithms&lt;/h1&gt; &#xA;&lt;p&gt;Edition: $\displaystyle e = \sum \limits _{n=0}^{\infty }{\frac {1}{n!}} = 1 + {\frac {1}{1}}+{\frac {1}{1\cdot 2}}+{\frac {1}{1\cdot 2\cdot 3}}+\cdots = 2.718283$&lt;/p&gt; &#xA;&lt;p&gt;2023/06&lt;/p&gt; &#xA;&lt;p&gt;This book introduces about elementary algorithms and data structure. It includes side-by-side comparison about purely functional realization and their imperative counterpart, with 119 exercises and answers.&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/332938/95418499-442e4b00-096a-11eb-81b9-496020aa5f10.jpg&#34; width=&#34;400&#34;&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;p&gt;I am adding exercises and answers to the &lt;strong&gt;second edition&lt;/strong&gt; from 2023/03 (added 119 answers as of 2023/05). I wrote the first edition from 2009 to 2017, then rewrote from 2020 to 2023. The PDF can be downloaded for preview (&lt;a href=&#34;https://github.com/liuxinyu95/AlgoXY/files/11901255/algoxy-en.pdf&#34;&gt;EN&lt;/a&gt;, &lt;a href=&#34;https://github.com/liuxinyu95/AlgoXY/files/11901259/algoxy-zh-cn.pdf&#34;&gt;中文&lt;/a&gt;). The 1st edition in Chinese (&lt;a href=&#34;http://www.ituring.com.cn/book/1907&#34;&gt;中文&lt;/a&gt;) was published in 2017. I recently switched my focus to the Mathematics of programming, the new book is also available in (&lt;a href=&#34;https://github.com/liuxinyu95/unplugged&#34;&gt;github&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Preface&lt;/li&gt; &#xA; &lt;li&gt;Chapter 0, List;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 1, Binary Search Tree;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 2, Insertion sort;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 3, Red-black tree;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 4, AVL tree;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 5, Radix tree, Trie and Prefix Tree;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 6, B-Trees;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 7, Binary Heaps;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 8, Selection sort;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 9, Binomial heap, Fibonacci heap, and pairing heap;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 10, Queue;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 11, Sequence;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 12, Divide and conquer sort;&lt;/li&gt; &#xA; &lt;li&gt;Chapter 13, Search;&lt;/li&gt; &#xA; &lt;li&gt;Appendix and answers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;To build the book in PDF format from the sources, you need the following software pre-installed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TeXLive, The book is built with LuaLaTeX, to support both EN and CN.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install TeXLive&lt;/h3&gt; &#xA;&lt;p&gt;In Debian/Ubuntu like Linux environment, do &lt;strong&gt;NOT&lt;/strong&gt; install the TeXLive through apt-get. Go to TeXLive &lt;a href=&#34;https://tug.org/texlive/&#34;&gt;official site&lt;/a&gt; to download the setup script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl.zip&#xA;$ unzip install-tl.zip&#xA;$ cd install-tl&#xA;$ sudo ./install-tl -gui text -repository http://mirror.ctan.org/systems/texlive/tlnet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Windows, TeXLive provide a &lt;a href=&#34;https://tug.org/texlive/&#34;&gt;gui based installer&lt;/a&gt;, in Mac OS X, there&#39;s a &lt;a href=&#34;https://www.tug.org/mactex/&#34;&gt;MacTeX&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Others&lt;/h3&gt; &#xA;&lt;p&gt;You need the GNU make tool, in Debian/Ubuntu like Linux, it can be installed through the apt-get command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt-get install build-essential&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In Windows, you can install the MSYS for it. In Mac OS X, please install the developer tool from this command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ xcode-select --install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Font setting&lt;/h3&gt; &#xA;&lt;p&gt;The default build supports Linux, Mac OS X, and Windows. You can install additional font (like &lt;a href=&#34;https://github.com/notofonts/noto-cjk/&#34;&gt;Noto CJK&lt;/a&gt;) typesetting (see &lt;code&gt;prelude.sty&lt;/code&gt;). Some system fonts, e.g. STKaiti, were moved to &lt;code&gt;/System/Library/AssetsV2/com_apple_MobileAsset_Font7&lt;/code&gt; in Mac OS X, you need add the path to the local TeXLive configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo tlmgr conf texmf OSFONTDIR /System/Library/AssetsV2/com_apple_MobileAsset_Font7&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build the book PDF&lt;/h3&gt; &#xA;&lt;p&gt;enter the folder contains the book TeX manuscript, run&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will generate algoxy-en.pdf and algoxy-zh-cn.pdf. If you only need the Chinese version for example, you can run &lt;code&gt;make cn&lt;/code&gt; instead. Run &lt;code&gt;make force-cn&lt;/code&gt; or &lt;code&gt;make force-en&lt;/code&gt; to force build the book.&lt;/p&gt; &#xA;&lt;p&gt;--&lt;/p&gt; &#xA;&lt;p&gt;LIU Xinyu&lt;/p&gt;</summary>
  </entry>
</feed>