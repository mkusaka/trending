<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub TeX Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-22T02:03:51Z</updated>
  <subtitle>Weekly Trending of TeX in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>COPCSE-NTNU/thesis-NTNU</title>
    <updated>2023-01-22T02:03:51Z</updated>
    <id>tag:github.com,2023-01-22:/COPCSE-NTNU/thesis-NTNU</id>
    <link href="https://github.com/COPCSE-NTNU/thesis-NTNU" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An NTNU thesis LaTeX document class for bachelor, master, and PhD theses&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;thesis-NTNU&lt;/h1&gt; &#xA;&lt;p&gt;CoPCSE@NTNU – Community of Practice for Computer Science Education at the Norwegian University of Science and Technology – is an informal forum for lecturers in computer science and related fields across campuses and departments.&lt;/p&gt; &#xA;&lt;p&gt;The current repository provides a LaTeX thesis template that should in principle be applicable for theses at all study levels – bachelor, master and PhD. It is closely based on the standard LaTeX report document class with added packages and customisations. The purpose of the document provided in &lt;code&gt;thesis.tex&lt;/code&gt; is threefold. It should serve (i) as a description of the document class, (ii) as an example of how to use it, and (iii) as a thesis template.&lt;/p&gt; &#xA;&lt;p&gt;The template does not have any official status, and it is not a general NTNU-level requirement to use it. It replaces previous templates like &lt;a href=&#34;https://github.com/COPCSE-NTNU/bachelor-thesis-NTNU&#34;&gt;https://github.com/COPCSE-NTNU/bachelor-thesis-NTNU&lt;/a&gt; and &lt;a href=&#34;https://github.com/COPCSE-NTNU/master-theses-NTNU&#34;&gt;https://github.com/COPCSE-NTNU/master-theses-NTNU&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setting up&lt;/h2&gt; &#xA;&lt;p&gt;You can use the template with &lt;a href=&#34;http://overleaf.com&#34;&gt;Overleaf&lt;/a&gt;, and you are strongly encouraged to do so. The alternative is to install local copy of LaTeX on your laptop (not adviced, huge, difficult).&lt;/p&gt; &#xA;&lt;p&gt;You should &lt;strong&gt;fork&lt;/strong&gt; the CoPCSE repo so that you have your own files to edit and you can always merge with the upstream changes to the template, in case the template is updated.&lt;/p&gt; &#xA;&lt;h3&gt;Setup using Overleaf&lt;/h3&gt; &#xA;&lt;p&gt;There are two ways for setting up the &lt;a href=&#34;http://overleaf.com&#34;&gt;&lt;strong&gt;Overleaf&lt;/strong&gt;&lt;/a&gt; project with the template:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use the &lt;code&gt;.zip&lt;/code&gt; copy and upload.&lt;/li&gt; &#xA; &lt;li&gt;Fork the the CoPCSE repo so that you have your own files to edit.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building document locally&lt;/h3&gt; &#xA;&lt;p&gt;The template also provides a simple &lt;code&gt;Makefile&lt;/code&gt; which allows you to build the document locally. This requires that you have a LaTeX compiler, such as &lt;a href=&#34;https://www.tug.org/texlive/&#34;&gt;&lt;code&gt;texlive&lt;/code&gt;&lt;/a&gt;, installed locally, which has to provide the commands &lt;code&gt;pdflatex&lt;/code&gt; and &lt;code&gt;biber&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jzarnett/ece459</title>
    <updated>2023-01-22T02:03:51Z</updated>
    <id>tag:github.com,2023-01-22:/jzarnett/ece459</id>
    <link href="https://github.com/jzarnett/ece459" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ECE 459: Programming for Performance&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ece459&lt;/h1&gt; &#xA;&lt;p&gt;ECE 459: Programming for Performance&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>xiaoweiChen/CPP-20-STL-Cookbook</title>
    <updated>2023-01-22T02:03:51Z</updated>
    <id>tag:github.com,2023-01-22:/xiaoweiChen/CPP-20-STL-Cookbook</id>
    <link href="https://github.com/xiaoweiChen/CPP-20-STL-Cookbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;《C++20 STL Cookbook》的非专业个人翻译&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;C++20 STL Cookbook&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Leverage the latest features of the STL to solve real-world problems&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;使用STL的新特性来解决实际问题&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a&gt;&lt;img src=&#34;https://raw.githubusercontent.com/xiaoweiChen/CPP-20-STL-Cookbook/main/cover.png&#34; alt=&#34;C++20 STL Cookbook&#34; height=&#34;256px&#34; align=&#34;right&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;作者：Bill Weinman&lt;/li&gt; &#xA; &lt;li&gt;译者：陈晓伟&lt;/li&gt; &#xA; &lt;li&gt;首次发布时间：2022年5月27日(&lt;a href=&#34;https://www.amazon.com/20-STL-Cookbook-Leverage-real-world/dp/1803248718/ref=sr_1_3?keywords=Modern+CMake+for+C%2B%2B&amp;amp;qid=1661265799&amp;amp;s=books&amp;amp;sr=1-3&#34;&gt;来源&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;翻译是译者用自己的思想，换一种语言，对原作者想法的重新阐释。鉴于我的学识所限，误解和错译在所难免。如果你能买到本书的原版，且有能力阅读英文，请直接去读原文。因为与之相较，我的译文可能根本不值得一读。&lt;/p&gt; &#xA; &lt;p align=&#34;right&#34;&gt; — 云风，程序员修炼之道第2版译者&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;PDF可在本库的&lt;a href=&#34;https://github.com/xiaoweiChen/CPP-20-STL-Cookbook/releases&#34;&gt;Release页面&lt;/a&gt;获取。&lt;/p&gt; &#xA;&lt;h2&gt;本书概述&lt;/h2&gt; &#xA;&lt;p&gt;快速、高效和灵活是C++编程语言一直以来的特点，从而应用于行业的各个领域来解决许多问题。最新版本的C++ 20将改变开发者的编码方式，因为它带来了一系列支持应用程序快速部署的特性。这本书将帮助您以最优的方式使用STL。&lt;/p&gt; &#xA;&lt;p&gt;本书将从C++ 20中的新语言特性开始，帮助您理解该语言的机制和库特性，并了解它们是如何工作的。与其他书籍不同，C++ 20 STL Cookbook采用了一种特定于实现的问题解决方法，将帮助您快速克服障碍。您将学习核心STL概念，如容器、算法、实用程序类、Lambda表达式、迭代器等，学习的同时结合实践。本书是使用C++ STL及其最新功能的参考指南，可用来探索函数式编程和Lambda表达式中的前沿特性。&lt;/p&gt; &#xA;&lt;p&gt;阅读完这本书后，您将能够利用最新的C++特性，并节省时间和精力，同时可以优雅地使用STL解决实际问题。&lt;/p&gt; &#xA;&lt;h4&gt;关键特性&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;熟悉C++ 20的最新特性，并使用STL编写更好的代码&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;减少应用的开发时间，并支持更快的部署&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启动和使用新版本中引入的、更精简的STL功能&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;将会学到&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;理解新的语言特性和其可以解决的问题&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;用实际例子实现STL的通用特性&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;理解并发和同步的标准支持类&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用STL执行高效的内存管理&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用std::format实现格式化&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;使用STL方式处理字符串，而不是手工编写C风格的代码&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;适读人群&lt;/h2&gt; &#xA;&lt;p&gt;这本书是为中高级的C++开发者准备的，他们希望从C++ 20的标准模板库(C++的最新版本)中收益。开始阅读这本书前，必须具备编码和基本的C++知识。&lt;/p&gt; &#xA;&lt;h2&gt;作者简介&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Bill Weinman&lt;/strong&gt; 自从他在1971年16岁时拥有了他的第一台计算机以来，他一直在从事技术工作。自20世纪70年代初以来，一直用C和C++编程，为包括NASA、美国银行、施乐、IBM和美国海军在内的主要客户编写系统和应用程序。他还是一名电子工程师，曾为旅行者II号宇宙飞船、SAE的音频放大器和Altec Lansing的音响系统工作。&lt;/p&gt; &#xA;&lt;p&gt;自20世纪90年代中期以来，Weinman先生一直专注于写作和教学。他的书和课程涵盖了HTML、SQL、CGI、Python，当然还有C和C++。作为在线学习的早期贡献者，清晰、简洁的授课方式使他的课程在lynda和LinkedIn learning上很受欢迎。&lt;/p&gt; &#xA;&lt;p&gt;可以关注Bill的网站:bw.org。&lt;/p&gt; &#xA;&lt;h2&gt;审评者介绍&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vitalijs Vaznais&lt;/strong&gt; 出生在拉脱维亚的道格夫皮尔斯。他最喜欢的编程语言是C和C++，这两种语言他已经使用了26年(商业使用了24年)。他对这两种语言的最新变化/演变感到满意，并期待看到更多。&lt;/p&gt; &#xA;&lt;h2&gt;本书相关&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;github地址：&lt;a href=&#34;https://github.com/xiaoweiChen/CPP-20-STL-Cookbook&#34;&gt;https://github.com/xiaoweiChen/CPP-20-STL-Cookbook&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;译文的LaTeX 环境配置：&lt;a href=&#34;https://www.cnblogs.com/1625--H/p/11524968.html&#34;&gt;https://www.cnblogs.com/1625--H/p/11524968.html&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;禁用拼写检查：&lt;a href=&#34;https://blog.csdn.net/weixin_39278265/article/details/87931348&#34;&gt;https://blog.csdn.net/weixin_39278265/article/details/87931348&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;vscode中配置latex：&lt;a href=&#34;https://blog.csdn.net/Ruins_LEE/article/details/123555016&#34;&gt;https://blog.csdn.net/Ruins_LEE/article/details/123555016&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;原书示例：&lt;a href=&#34;https://github.com/PacktPublishing/CPP-20-STL-Cookbook&#34;&gt;https://github.com/PacktPublishing/CPP-20-STL-Cookbook&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>