<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub XSLT Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-01T01:56:39Z</updated>
  <subtitle>Monthly Trending of XSLT in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OpenSCAP/openscap</title>
    <updated>2022-09-01T01:56:39Z</updated>
    <id>tag:github.com,2022-09-01:/OpenSCAP/openscap</id>
    <link href="https://github.com/OpenSCAP/openscap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NIST Certified SCAP 1.2 toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenSCAP&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/OpenSCAP/openscap/actions&#34;&gt;&lt;img src=&#34;https://github.com/OpenSCAP/openscap/workflows/CI/badge.svg?branch=maint-1.3&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/OpenSCAP/openscap&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/3o5fnld1m98bo0so/branch/maint-1.3?svg=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/OpenSCAP/openscap&#34;&gt;&lt;img src=&#34;https://travis-ci.org/OpenSCAP/openscap.svg?branch=maint-1.3&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/OpenSCAP/openscap/context:cpp&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/cpp/g/OpenSCAP/openscap.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: C/C++&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/OpenSCAP/openscap/alerts/&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/OpenSCAP/openscap.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/OpenSCAP/openscap?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/OpenSCAP/openscap.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/OpenSCAP/openscap&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open Source Security Compliance Solution&lt;/p&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;oscap&lt;/code&gt; program is a command line tool that allows users to load, scan, validate, edit, and export SCAP documents.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Homepage of the project: &lt;a href=&#34;http://www.open-scap.org&#34;&gt;www.open-scap.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;User Manual: &lt;a href=&#34;https://raw.githubusercontent.com/OpenSCAP/openscap/maint-1.3/docs/manual/manual.adoc&#34;&gt;OpenSCAP User Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compilation, testing and debugging: &lt;a href=&#34;https://raw.githubusercontent.com/OpenSCAP/openscap/maint-1.3/docs/developer/developer.adoc&#34;&gt;OpenSCAP Developer Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For new contributors: &lt;a href=&#34;https://raw.githubusercontent.com/OpenSCAP/openscap/maint-1.3/docs/contribute/contribute.adoc&#34;&gt;How to contribute&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We welcome all contributions to the OpenSCAP project. If you would like to contribute, either by fixing existing issues or adding new features, please check out our &lt;a href=&#34;https://raw.githubusercontent.com/OpenSCAP/openscap/maint-1.3/docs/contribute/contribute.adoc&#34;&gt;contribution guide&lt;/a&gt; to get started. If you would like to discuss anything, ask questions, or if you need additional help getting started, you can either send a message to our FreeNode IRC channel, &lt;strong&gt;#openscap&lt;/strong&gt;, or to our &lt;a href=&#34;https://www.redhat.com/mailman/listinfo/open-scap-list&#34;&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Microsoft Windows Support&lt;/h2&gt; &#xA;&lt;p&gt;The Microsoft Windows support &lt;a href=&#34;https://raw.githubusercontent.com/OpenSCAP/openscap/maint-1.3/docs/windows.md&#34;&gt;is officially void&lt;/a&gt; as of Feb 1 2022.&lt;/p&gt; &#xA;&lt;h2&gt;Use cases&lt;/h2&gt; &#xA;&lt;h3&gt;SCAP Content Validation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The following example shows how to validate a given source data stream; all components within the data stream are validated (XCCDF, OVAL, OCIL, CPE, and possibly other components):&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;oscap ds sds-validate scap-ds.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Scanning&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To evaluate all definitions within the given OVAL Definition file, run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;oscap oval eval --results oval-results.xml scap-oval.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;where scap-oval.xml is the OVAL Definition file and oval-results.xml is the OVAL Result file.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To evaluate all definitions from the OVAL component that are part of a particular data stream within a SCAP data stream collection, run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;oscap oval eval --datastream-id ds.xml --oval-id xccdf.xml --results oval-results.xml scap-ds.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;where ds.xml is the given data stream, xccdf.xml is an XCCDF file specifying the OVAL component, oval-results.xml is the OVAL Result file, and scap-ds.xml is a file representing the SCAP data stream collection.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To evaluate a specific profile in an XCCDF file run this command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;oscap xccdf eval --profile Desktop --results xccdf-results.xml --cpe cpe-dictionary.xml scap-xccdf.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;where scap-xccdf.xml is the XCCDF document, Desktop is the selected profile from the XCCDF document, xccdf-results.xml is a file storing the scan results, and cpe-dictionary.xml is the CPE dictionary.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To evaluate a specific XCCDF benchmark that is part of a data stream within a SCAP data stream collection run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;oscap xccdf eval --datastream-id ds.xml --xccdf-id xccdf.xml --results xccdf-results.xml scap-ds.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;where scap-ds.xml is a file representing the SCAP data stream collection, ds.xml is the particular data stream, xccdf.xml is ID of the component-ref pointing to the desired XCCDF document, and xccdf-results.xml is a file containing the scan results.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Document generation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;without XCCDF rules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;oscap xccdf generate guide XCCDF-FILE &amp;gt; XCCDF-GUIDE-FILE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;with XCCDF rules&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;oscap xccdf generate guide --profile PROFILE XCCDF-FILE &amp;gt; XCCDF-GUIDE-FILE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;generate report from scanning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;oscap xccdf generate report XCCDF-RESULT-FILE &amp;gt; XCCDF-REPORT-FILE&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>boostorg/boostbook</title>
    <updated>2022-09-01T01:56:39Z</updated>
    <id>tag:github.com,2022-09-01:/boostorg/boostbook</id>
    <link href="https://github.com/boostorg/boostbook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Boost.org boostbook module&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>boostorg/docca</title>
    <updated>2022-09-01T01:56:39Z</updated>
    <id>tag:github.com,2022-09-01:/boostorg/docca</id>
    <link href="https://github.com/boostorg/docca" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Boost.Book XSLT C++ documentation system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;docca&lt;/h1&gt; &#xA;&lt;p&gt;Docca is a set of XSLT transformations which converts Doxygen XML extracted from Javadoc comments in C++ source code, into Boost.Quickbook output&lt;/p&gt; &#xA;&lt;p&gt;These scripts are used by &lt;a href=&#34;https://github.com/boostorg/beast/&#34;&gt;Boost.Beast&lt;/a&gt; to generate the reference. For example, this &lt;a href=&#34;https://github.com/boostorg/beast/raw/b7230f12f16fe7a9f7a1ece5be1f607c8552448a/include/boost/beast/core/buffers_cat.hpp#L68%5D&#34;&gt;Javadoc comment&lt;/a&gt; is extracted by Doxygen into an intermediate XML representation, then processed by the XSLT script via Saxon-HE to produce this &lt;a href=&#34;https://www.boost.org/doc/libs/1_71_0/libs/beast/doc/html/beast/ref/boost__beast__buffers_cat.html&#34;&gt;Boost.Quickbook page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The following Doxygen configuration settings must be set as indicated:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;DISTRIBUTE_GROUP_DOC = YES&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Distributed under the Boost Software License, Version 1.0. (See accompanying file &lt;a href=&#34;https://raw.githubusercontent.com/boostorg/docca/develop/LICENSE_1_0.txt&#34;&gt;LICENSE_1_0.txt&lt;/a&gt; or copy at &lt;a href=&#34;https://www.boost.org/LICENSE_1_0.txt&#34;&gt;https://www.boost.org/LICENSE_1_0.txt&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>