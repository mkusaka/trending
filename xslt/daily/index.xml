<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub XSLT Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-10T01:38:40Z</updated>
  <subtitle>Daily Trending of XSLT in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>alyf-de/eu_einvoice</title>
    <updated>2025-01-10T01:38:40Z</updated>
    <id>tag:github.com,2025-01-10:/alyf-de/eu_einvoice</id>
    <link href="https://github.com/alyf-de/eu_einvoice" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create and import e-invoices with ERPNext.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;European e-Invoice&lt;/h2&gt; &#xA;&lt;p&gt;Create and import e-invoices with ERPNext.&lt;/p&gt; &#xA;&lt;p&gt;In particular, this app supports reading and writing electronic invoices according to the UN/CEFACT Cross-Industry-Invoice (CII) standard in the following profiles:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;BASIC&lt;/li&gt; &#xA; &lt;li&gt;EN 16931&lt;/li&gt; &#xA; &lt;li&gt;EXTENDED&lt;/li&gt; &#xA; &lt;li&gt;XRECHNUNG&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All profiles except for &#34;XRECHNUNG&#34; can be embedded in a PDF file, known as ZUGFeRD or Factur-X.&lt;/p&gt; &#xA;&lt;p&gt;This app cannot read or write UBL invoices. It also does not provide any special way of sending or receiving e-invoices (e.g. Peppol). Instead, it focuses on the conversion between ERPNext&#39;s internal data model and the XML format of the above standards.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install this app using the &lt;a href=&#34;https://github.com/frappe/bench&#34;&gt;bench&lt;/a&gt; CLI:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd $PATH_TO_YOUR_BENCH&#xA;bench get-app https://github.com/alyf-de/eu_einvoice --branch $MAJOR_VERSION&#xA;bench install-app eu_einvoice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please use a branch (&lt;code&gt;MAJOR_VERSION&lt;/code&gt;) that matches the major version of ERPNext you are using. For example, &lt;code&gt;version-14&lt;/code&gt; or &lt;code&gt;version-15&lt;/code&gt;. If you are a developer contributing new features, you&#39;ll want to use the &lt;code&gt;develop&lt;/code&gt; branch instead.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;h3&gt;Code Lists&lt;/h3&gt; &#xA;&lt;p&gt;E-invoices rely on common codes that describe the content of the invoice. E.g. &#34;C62&#34; is used for the UOM &#34;One&#34; and &#34;ZZZ&#34; is used for a mutually agreed mode of payment.&lt;/p&gt; &#xA;&lt;p&gt;Common codes are part of a code list. You&#39;ll need to import the code lists and map the codes you need to the corresponding ERPNext entities. Please use the &#34;Import Genericode&#34; button in &lt;strong&gt;Code List&lt;/strong&gt; and paste the URL linked below.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Code List&lt;/th&gt; &#xA;   &lt;th&gt;Mapped DocType&lt;/th&gt; &#xA;   &lt;th&gt;Default Value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xrepository.de/api/xrepository/urn:xoev-de:xrechnung:codeliste:untdid.4461_3:technischerBestandteilGenericode&#34;&gt;UNTDID 4461 Payment means code&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;nbsp;Payment Terms Template, Mode of Payment&lt;/td&gt; &#xA;   &lt;td&gt;ZZZ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xrepository.de/api/xrepository/urn:xoev-de:kosit:codeliste:rec20_3:technischerBestandteilGenericode&#34;&gt;Codes for Units of Measure Used in International Trade&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;UOM&lt;/td&gt; &#xA;   &lt;td&gt;C62&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xrepository.de/api/xrepository/urn:xoev-de:kosit:codeliste:rec21_3:technischerBestandteilGenericode&#34;&gt;Codes for Passengers, Types of Cargo, Packages and Packaging Materials&lt;/a&gt; (optional)&lt;/td&gt; &#xA;   &lt;td&gt;UOM&lt;/td&gt; &#xA;   &lt;td&gt;C62&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xrepository.de/api/xrepository/urn:xoev-de:kosit:codeliste:untdid.5305_3:technischerBestandteilGenericode&#34;&gt;Codes for Duty Tax and Fee Categories&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Item Tax Template, Account, Tax Category, Sales Taxes and Charges Template&lt;/td&gt; &#xA;   &lt;td&gt;S&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.xrepository.de/api/xrepository/urn:xoev-de:kosit:codeliste:vatex_1:technischerBestandteilGenericode&#34;&gt;VAT exemption reason code list&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Item Tax Template, Account, Tax Category, Sales Taxes and Charges Template&lt;/td&gt; &#xA;   &lt;td&gt;vatex-eu-ae&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For example, let&#39;s say your standard &lt;strong&gt;Payment Terms Template&lt;/strong&gt; is &#34;Bank Transfer, 30 days&#34;. You&#39;ll need to find the suitable &lt;strong&gt;Common Code&lt;/strong&gt; for bank transfers within the &lt;strong&gt;Code List&lt;/strong&gt; &#34;UNTDID.4461&#34;. In this case, the code is &#34;58&#34;. Then you add a row to the &lt;em&gt;Applies To&lt;/em&gt; table, select &#34;Payment Terms Template&#34; as the &lt;em&gt;Link Document Type&lt;/em&gt; and &#34;Bank Transfer, 30 days&#34; as the &lt;em&gt;Link Name&lt;/em&gt;. If you now create an Invoice with this &lt;strong&gt;Payment Terms Template&lt;/strong&gt;, the eInvoice will contain the code &#34;58&#34; for the payment means, signalling that the payment should done via bank transfer.&lt;/p&gt; &#xA;&lt;p&gt;The retrieval of codes goes from the most specific to the most general. E.g. for determining the VAT type of a line item, we first look for a code using the specific item&#39;s &lt;em&gt;Item Tax Template&lt;/em&gt; and &lt;em&gt;Income Account&lt;/em&gt;, then fall back to the code for the invoice&#39;s &lt;em&gt;Tax Category&lt;/em&gt; or &lt;em&gt;Sales Taxes and Charges Template&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Buyer Reference (German: Leitweg-ID)&lt;/h3&gt; &#xA;&lt;p&gt;If you work with government customers or similar large organizations, you might need to specify their &lt;em&gt;Buyer Reference&lt;/em&gt; in the eInvoice. This is done by setting the &lt;em&gt;Buyer Reference&lt;/em&gt; field in the &lt;strong&gt;Sales Invoice&lt;/strong&gt;. You can already fill this field in the &lt;strong&gt;Customer&lt;/strong&gt; master data or the &lt;strong&gt;Sales Order&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Bank Details&lt;/h3&gt; &#xA;&lt;p&gt;If you want your eInvoice to contain bank details, you need to set up a &lt;strong&gt;Mode of Payment&lt;/strong&gt; of type &#34;Bank&#34;, link the company&#39;s corresponding &lt;strong&gt;Account&lt;/strong&gt; and create a &lt;strong&gt;Bank Account&lt;/strong&gt; for the same account.&lt;/p&gt; &#xA;&lt;p&gt;Then, you can map a &lt;strong&gt;Common Code&lt;/strong&gt; from &lt;strong&gt;Code List&lt;/strong&gt; &#34;UNTDID.4461&#34;, e.g. &#34;Credit Transfer&#34; (30) or &#34;SEPA Credit Transfer&#34; (58), to the &lt;strong&gt;Mode of Payment&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please note that the eInvoice standard only supports one payment means per invoice, so you should not specify multiple &lt;strong&gt;Modes of Payment&lt;/strong&gt; in the same invoice.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Sales Invoice&lt;/h3&gt; &#xA;&lt;p&gt;During validation of the &lt;strong&gt;Sales Invoice&lt;/strong&gt;, the potential eInvoice is created and validated against the schematron rules for the selected &lt;em&gt;E Invoice Profile&lt;/em&gt;, so that you can see any potential problems before submitting it.&lt;/p&gt; &#xA;&lt;p&gt;To download the XML file (XRechnung), open a &lt;strong&gt;Sales Invoice&lt;/strong&gt; and click on &#34;...&#34; &amp;gt; &#34;Download eInvoice&#34;.&lt;/p&gt; &#xA;&lt;p&gt;When you open the print preview of the &lt;strong&gt;Sales Invoice&lt;/strong&gt; and click on &#34;PDF&#34;, the generated PDF file will have the e-invoice XML embedded. An exception is the &lt;em&gt;E Invoice Profile&lt;/em&gt; &#34;XRECHNUNG&#34;, which is intended to be a plain XML file. In this case, the PDF will not have the XML embedded.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You can test both XML and PDF+XML files by re-importing them, using the &lt;strong&gt;E Invoice Import&lt;/strong&gt; DocType.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The following fields of the &lt;strong&gt;Sales Invoice&lt;/strong&gt; are currently considered for the eInvoice:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Invoice type (credit note, corrected invoice, commercial invoice)&lt;/li&gt; &#xA; &lt;li&gt;Invoice number&lt;/li&gt; &#xA; &lt;li&gt;Invoice date&lt;/li&gt; &#xA; &lt;li&gt;Due date&lt;/li&gt; &#xA; &lt;li&gt;From date&lt;/li&gt; &#xA; &lt;li&gt;To date&lt;/li&gt; &#xA; &lt;li&gt;Language&lt;/li&gt; &#xA; &lt;li&gt;Currency&lt;/li&gt; &#xA; &lt;li&gt;Company &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Phone No&lt;/li&gt; &#xA;   &lt;li&gt;Email&lt;/li&gt; &#xA;   &lt;li&gt;Fax&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Company Name&lt;/li&gt; &#xA; &lt;li&gt;Company Address &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Address Line 1&lt;/li&gt; &#xA;   &lt;li&gt;Address Line 2&lt;/li&gt; &#xA;   &lt;li&gt;Postcode&lt;/li&gt; &#xA;   &lt;li&gt;City&lt;/li&gt; &#xA;   &lt;li&gt;Country&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Company Contact Person &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Full Name&lt;/li&gt; &#xA;   &lt;li&gt;Email Address (takes precedence over Company &amp;gt; Email)&lt;/li&gt; &#xA;   &lt;li&gt;Phone (takes precedence over Company &amp;gt; Phone No)&lt;/li&gt; &#xA;   &lt;li&gt;Department&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Company Tax ID&lt;/li&gt; &#xA; &lt;li&gt;Customer Name&lt;/li&gt; &#xA; &lt;li&gt;Buyer Reference (fetched from &lt;strong&gt;Sales Order&lt;/strong&gt; or &lt;strong&gt;Customer&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Customer Address &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Address Line 1&lt;/li&gt; &#xA;   &lt;li&gt;Address Line 2&lt;/li&gt; &#xA;   &lt;li&gt;Postcode&lt;/li&gt; &#xA;   &lt;li&gt;City&lt;/li&gt; &#xA;   &lt;li&gt;Country&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Contact Email&lt;/li&gt; &#xA; &lt;li&gt;Contact Mobile (takes precedence over Contact Person &amp;gt; Phone)&lt;/li&gt; &#xA; &lt;li&gt;Contact Person &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Full Name&lt;/li&gt; &#xA;   &lt;li&gt;Phone&lt;/li&gt; &#xA;   &lt;li&gt;Department&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Customer&#39;s Purchase Order&lt;/li&gt; &#xA; &lt;li&gt;Customer&#39;s Purchase Order Date&lt;/li&gt; &#xA; &lt;li&gt;Customer&#39;s Tax ID&lt;/li&gt; &#xA; &lt;li&gt;Items: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Item Name&lt;/li&gt; &#xA;   &lt;li&gt;Description&lt;/li&gt; &#xA;   &lt;li&gt;Company&#39;s Item Code&lt;/li&gt; &#xA;   &lt;li&gt;Customer&#39;s Item Code&lt;/li&gt; &#xA;   &lt;li&gt;Delivery Note number and date&lt;/li&gt; &#xA;   &lt;li&gt;Sales Order number and date (added on document level, only if there is exactly one Sales Order)&lt;/li&gt; &#xA;   &lt;li&gt;Quantity + Unit&lt;/li&gt; &#xA;   &lt;li&gt;Rate&lt;/li&gt; &#xA;   &lt;li&gt;Net Amount&lt;/li&gt; &#xA;   &lt;li&gt;Amount&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Terms and Conditions Details (converted to markdown)&lt;/li&gt; &#xA; &lt;li&gt;Incoterm and named place&lt;/li&gt; &#xA; &lt;li&gt;Payment Schedule &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Mode of Payment -&amp;gt; Account -&amp;gt; Bank Account &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;IBAN&lt;/li&gt; &#xA;     &lt;li&gt;Bank &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt;SWIFT Number&lt;/li&gt; &#xA;      &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Description&lt;/li&gt; &#xA;   &lt;li&gt;Due date&lt;/li&gt; &#xA;   &lt;li&gt;Amount&lt;/li&gt; &#xA;   &lt;li&gt;Discount Type (must be &#34;Percentage&#34;)&lt;/li&gt; &#xA;   &lt;li&gt;Discount&lt;/li&gt; &#xA;   &lt;li&gt;Discount Date&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Sales Taxs and Charges &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The &lt;em&gt;Charge Type&lt;/em&gt; &#34;Actual&#34; is used as logistics or service charges. It is only supported by the eInvoice profiles &#34;EXTENDED&#34; and &#34;XRECHNUNG&#34;. If you want to add VAT for the service charge, you need to add a &lt;em&gt;Charge Type&lt;/em&gt; &#34;On Previous Row Amount&#34; or &#34;On Previous Row Total&#34; immediately after the service charge.&lt;/li&gt; &#xA;   &lt;li&gt;For &lt;em&gt;Charge Type&lt;/em&gt; &#34;On Net Total&#34;, the taxable amount is calculated as &lt;code&gt;tax_amount / rate * 100&lt;/code&gt;, if the rate is available in the tax row or in the corresponding Account [1].&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;em&gt;Charge Type&lt;/em&gt; &#34;On Item Quantity&#34; is not supported.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Total&lt;/li&gt; &#xA; &lt;li&gt;Net Total&lt;/li&gt; &#xA; &lt;li&gt;Total Taxes and Charges&lt;/li&gt; &#xA; &lt;li&gt;Grand Total&lt;/li&gt; &#xA; &lt;li&gt;Total Advance&lt;/li&gt; &#xA; &lt;li&gt;Outstanding Amount&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;[1] The correct taxable amount is only available starting from ERPNext v16. For earlier versions we currently have to approximate it, which comes with a small error margin.&lt;/p&gt; &#xA;&lt;p&gt;Document-level discounts are currently not supported, because the e invoice standard requires much more information than just the discount amount (e.g. the reason and applicable VAT rate).&lt;/p&gt; &#xA;&lt;h3&gt;Purchase Invoice&lt;/h3&gt; &#xA;&lt;p&gt;To import a new eInvoice, create a new &lt;strong&gt;E Invoice Import&lt;/strong&gt; and upload the XML or PDF file.&lt;/p&gt; &#xA;&lt;p&gt;We extract the E-Invoice Profile and validate the XML against the corresponding schematron rules.&lt;/p&gt; &#xA;&lt;p&gt;A correct eInvoice will look like this:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alyf-de/eu_einvoice/develop/img/correct_import.png&#34; alt=&#34;Correct eInvoice&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A problematic eInvoice will look like this. You can see the validation errors in the &lt;em&gt;Validation Details&lt;/em&gt; section:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/alyf-de/eu_einvoice/develop/img/incorrect_import.png&#34; alt=&#34;Problematic eInvoice&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It is still possible to import an invoice, even if there are formal validation errors.&lt;/p&gt; &#xA;&lt;p&gt;Taxes are mapped to &#34;Actual&#34; charges in the &lt;strong&gt;Purchase Invoice&lt;/strong&gt;, so that ERPNext does not try to recalculate them.&lt;/p&gt; &#xA;&lt;p&gt;You can find XML files for testing in the following repositories:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ConnectingEurope/eInvoicing-EN16931/tree/master/cii/examples&#34;&gt;EN16931&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://projekte.kosit.org/xrechnung/xrechnung-testsuite/-/tree/master/src/test/business-cases/standard?ref_type=heads&#34;&gt;XRechnung&lt;/a&gt; (files ending in &lt;code&gt;_uncefact.xml&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Add your custom logic&lt;/h2&gt; &#xA;&lt;p&gt;This app provides hooks to add custom logic to the eInvoice creation process:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;before_einvoice_generation&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Called right before the eInvoice is generated. The hook function receives the &lt;strong&gt;Sales Invoice&lt;/strong&gt; as an argument and can modify it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;after_einvoice_generation&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Called right after the eInvoice is generated. The hook function receives the &lt;strong&gt;Sales Invoice&lt;/strong&gt; and the generated eInvoice as arguments.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, your &lt;code&gt;myapp/hooks.py&lt;/code&gt; could look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;doc_events = {&#xA;&#x9;&#34;Sales Invoice&#34;: {&#xA;&#x9;&#x9;&#34;before_einvoice_generation&#34;: &#34;myapp.einvoice.before_einvoice_generation&#34;,&#xA;&#x9;&#x9;&#34;after_einvoice_generation&#34;: &#34;myapp.einvoice.after_einvoice_generation&#34;,&#xA;&#x9;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And your &lt;code&gt;myapp/einvoice.py&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from typing import TYPE_CHECKING&#xA;&#xA;if TYPE_CHECKING:&#xA;    from drafthorse.models.document import Document&#xA;    from erpnext.accounts.doctype.sales_invoice.sales_invoice import SalesInvoice&#xA;&#xA;&#xA;def before_einvoice_generation(doc: &#34;SalesInvoice&#34;, event: str):&#xA;    &#34;&#34;&#34;Modify the Sales Invoice object before generating the eInvoice.&#34;&#34;&#34;&#xA;    doc.customer_name = &#34;Special Customer Name&#34;&#xA;&#xA;&#xA;def after_einvoice_generation(doc: &#34;SalesInvoice&#34;, event: str, einvoice: &#34;Document&#34;):&#xA;    &#34;&#34;&#34;Modify the generated eInvoice after it was created.&#34;&#34;&#34;&#xA;    einvoice.trade.agreement.buyer.name = doc.customer_name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] These methods are also triggered during the &lt;code&gt;validate&lt;/code&gt; event of the &lt;strong&gt;Sales Invoice&lt;/strong&gt;. In this case, if you change the Sales Invoice object, these changes will be saved to the database.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;External validation&lt;/h2&gt; &#xA;&lt;p&gt;You can upload an XML invoice file to &lt;a href=&#34;https://www.itb.ec.europa.eu/invoice/upload&#34;&gt;https://www.itb.ec.europa.eu/invoice/upload&lt;/a&gt; and validate it as &#34;CII Invoice CML&#34;. Please use the &lt;em&gt;E Invoice Profile&lt;/em&gt; &#34;EN 16931&#34; for generating your invoice.&lt;/p&gt; &#xA;&lt;p&gt;E-invoices according to the &#34;XRECHNUNG&#34; profile can be validated at &lt;a href=&#34;https://erechnungsvalidator.service-bw.de&#34;&gt;https://erechnungsvalidator.service-bw.de&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;This app uses &lt;code&gt;pre-commit&lt;/code&gt; for code formatting and linting. Please &lt;a href=&#34;https://pre-commit.com/#installation&#34;&gt;install pre-commit&lt;/a&gt; and enable it for this repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd apps/eu_einvoice&#xA;pre-commit install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Pre-commit is configured to use the following tools for checking and formatting your code:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ruff&lt;/li&gt; &#xA; &lt;li&gt;eslint&lt;/li&gt; &#xA; &lt;li&gt;prettier&lt;/li&gt; &#xA; &lt;li&gt;pyupgrade&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CI&lt;/h3&gt; &#xA;&lt;p&gt;This app can use GitHub Actions for CI. The following workflows are configured:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CI: Installs this app and runs unit tests on every push to &lt;code&gt;develop&lt;/code&gt; branch.&lt;/li&gt; &#xA; &lt;li&gt;Linters: Runs &lt;a href=&#34;https://github.com/frappe/semgrep-rules&#34;&gt;Frappe Semgrep Rules&lt;/a&gt; and &lt;a href=&#34;https://pypi.org/project/pip-audit/&#34;&gt;pip-audit&lt;/a&gt; on every pull request.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/drafthorse/&#34;&gt;drafthorse&lt;/a&gt; by Raphael Michel, released under the Apache License 2.0&lt;/p&gt; &lt;p&gt;Used to create and parse XML invoices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/factur-x/&#34;&gt;factur-x&lt;/a&gt; by Alexis de Lattre, released unser a BSD License&lt;/p&gt; &lt;p&gt;Used to extract XML data from PDF files, and to create PDF files with embedded XML.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/saxonche/&#34;&gt;SaxonC&lt;/a&gt; by Saxonica&lt;/p&gt; &lt;p&gt;Used for XSL transformation (validate XML against schematron).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lxml/lxml&#34;&gt;lxml&lt;/a&gt; by Infrae&lt;/p&gt; &lt;p&gt;Used for general XML parsing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/schxslt/schxslt&#34;&gt;SchXslt&lt;/a&gt; by David Maus&lt;/p&gt; &lt;p&gt;Used to convert Schematron files to XSL.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to the following companies for sponsoring the initial development of this app:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;aepfel+birnen IT GmbH&lt;/li&gt; &#xA; &lt;li&gt;axessio Hausverwaltung GmbH&lt;/li&gt; &#xA; &lt;li&gt;Burkhard Baumsteigtechnik GmbH &amp;amp; Co. KG&lt;/li&gt; &#xA; &lt;li&gt;DriveCon GmbH&lt;/li&gt; &#xA; &lt;li&gt;ibb testing gmbh&lt;/li&gt; &#xA; &lt;li&gt;itsdave GmbH&lt;/li&gt; &#xA; &lt;li&gt;iXGate UG&lt;/li&gt; &#xA; &lt;li&gt;Kautenburger IT GmbH&lt;/li&gt; &#xA; &lt;li&gt;MERECS Engineering GmbH&lt;/li&gt; &#xA; &lt;li&gt;Royal Software GmbH&lt;/li&gt; &#xA; &lt;li&gt;voidsy GmbH&lt;/li&gt; &#xA; &lt;li&gt;… and many more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] We only list companies that have explicitly agreed to have their name published here. If you want to be listed here too, please send us a short note by email.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (C) 2024 ALYF GmbH&lt;/p&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or(at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see &lt;a href=&#34;https://www.gnu.org/licenses/&#34;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>