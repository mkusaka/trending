<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub XSLT Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-01T01:42:45Z</updated>
  <subtitle>Daily Trending of XSLT in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sul-dlss/gis-robot-suite</title>
    <updated>2024-04-01T01:42:45Z</updated>
    <id>tag:github.com,2024-04-01:/sul-dlss/gis-robot-suite</id>
    <link href="https://github.com/sul-dlss/gis-robot-suite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Robots for GIS accessioning and delivery&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/sul-dlss/gis-robot-suite&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/sul-dlss/gis-robot-suite.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/sul-dlss/gis-robot-suite&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/sul-dlss/gis-robot-suite/badges/gpa.svg?sanitize=true&#34; alt=&#34;Code Climate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codeclimate.com/github/sul-dlss/&#34;&gt;&lt;img src=&#34;https://codeclimate.com/github/sul-dlss/gis-robot-suite/badges/coverage.svg?sanitize=true&#34; alt=&#34;Code Climate Test Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://badge.fury.io/gh/sul-dlss%2Fgis-robot-suite&#34;&gt;&lt;img src=&#34;https://badge.fury.io/gh/sul-dlss%2Fgis-robot-suite.svg?sanitize=true&#34; alt=&#34;GitHub version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GIS-Robot-Suite&lt;/h2&gt; &#xA;&lt;p&gt;Robot code for accessioning and delivery of GIS resources.&lt;/p&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;p&gt;These robots require several dependencies needed to perform the GIS workflow steps. These are often shelled out to using &lt;code&gt;system&lt;/code&gt; calls.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gdal.org/&#34;&gt;GDAL&lt;/a&gt; Needed for geospatial tasks. For local development, this can be installed with brew.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;xsltproc&lt;/code&gt; and &lt;code&gt;xmllint&lt;/code&gt; for transforming XML files&lt;/li&gt; &#xA; &lt;li&gt;rsync also used as part of the robot process and is needed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;GIS data has its own set of names, standards and conventions that can be difficult for newcomers. To better understand some of these please see the &lt;a href=&#34;https://geo4libcamp.org/glossary/&#34;&gt;Geo4LibCamp Glossary&lt;/a&gt; as well as the following article which describes the initial goals for supporting GIS in SDR:&lt;/p&gt; &#xA;&lt;p&gt;Kim Durante &amp;amp; Darren Hardy (2015) Discovery, Management, and Preservation of Geospatial Data Using Hydra, Journal of Map &amp;amp; Geography Libraries, 11:2, 123-154, DOI: &lt;a href=&#34;https://doi.org/10.1080/15420353.2015.1041630&#34;&gt;10.1080/15420353.2015.1041630&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;gis-robot-suite&lt;/em&gt; services two workflows: &lt;em&gt;gisAssemblyWF&lt;/em&gt; and &lt;em&gt;gisDeliveryWF&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;gisAssemblyWF&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;extract-iso19139-metadata&lt;/code&gt; :: Transform ISO 19139 metadata from ArcCatalog metadata&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extract-iso19110-metadata&lt;/code&gt; :: Transform ISO 19110metadata from ArcCatalog metadata&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extract-fgdc-metadata&lt;/code&gt; :: Transform FGDC metadata from ArcCatalog metadata&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;generate-tag&lt;/code&gt; :: Apply Geo tag to object&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;generate-descriptive&lt;/code&gt; :: Convert ISO 19139 into Cocina descriptive&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;assign-placenames&lt;/code&gt; :: Insert linked data into MODS record from gazetteer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;extract-boundingbox&lt;/code&gt; :: Extract bounding box from data for Cocina descriptive&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;generate-structural&lt;/code&gt; :: Generate structural metadata and update the Cocina data store accordingly&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;finish-gis-assembly-workflow&lt;/code&gt; :: Finalize assembly workflow to prepare for assembly/delivery/discovery (validity check)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;start-delivery-workflow&lt;/code&gt; :: Kickstart the GIS delivery workflow at gisDeliveryWF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;code&gt;gisDeliveryWF&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;load-vector&lt;/code&gt; :: Load vector data into PostGIS database&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;load-raster&lt;/code&gt; :: Load raster into GeoTIFF data store&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;load-geoserver&lt;/code&gt; :: Load layers into GeoServer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;reset-geowebcache&lt;/code&gt; :: Reset GeoWebCache for the layer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;finish-gis-delivery-workflow&lt;/code&gt; :: Connect to public and restricted GeoServers to verify layer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;reload-geoserver&lt;/code&gt; :: Automatically reload the GeoServer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;metadata-cleanup&lt;/code&gt; :: Remove the staging druid tree for the working druid&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;start-accession-workflow&lt;/code&gt; :: Start accessionWF&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Data Wrangling&lt;/h1&gt; &#xA;&lt;h2&gt;Step 1: Preparing for stage&lt;/h2&gt; &#xA;&lt;p&gt;The file system structure will initially look like the following (see &lt;a href=&#34;https://consul.stanford.edu/x/C5xSC&#34;&gt;Consul page&lt;/a&gt; for a description) where the source input files for the shapefiles are all hard links to reduce space requirements: This is &lt;em&gt;pre-stage&lt;/em&gt; when preparing the data for upload to globus.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zv925hd6723/&#xA;  OGWELLS.dbf&#xA;  OGWELLS.prj&#xA;  OGWELLS.shp&#xA;  OGWELLS.shp.xml&#xA;  OGWELLS.shx&#xA;  preview.jpg&#xA;  index_map.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;index_map.json&lt;/code&gt; is optional.&lt;/p&gt; &#xA;&lt;h2&gt;Step 2: Assembly&lt;/h2&gt; &#xA;&lt;p&gt;Then at the end of GIS assembly processing -- see above prior to accessioning -- it will look like this in the workspace:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;zv/&#xA;  925/&#xA;    hd/&#xA;      6723/&#xA;        zv925hd6723/&#xA;          content/&#xA;            preview.jpg&#xA;            index_map.json&#xA;            layer-iso19110.xml&#xA;            layer-iso19139.xml&#xA;            layer-fgdc.xml&#xA;            layer.shp.xml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;content/index_map.json&lt;/code&gt; is optional.&lt;/p&gt; &#xA;&lt;h1&gt;Reset Process (for QA/Stage)&lt;/h1&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;None ðŸ™‚&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;gis-robot-suite&#39;s only data store is the shared robots Redis. Nothing needs to be done with this, since all robots will be quieted and the queues cleared as part of the larger reset process.&lt;/li&gt; &#xA; &lt;li&gt;Nothing special needs to be kept in terms of APOs, other than what the integration tests use (saving and reseeding that is already tracked elsewhere in the overall SDR reset process). Same for agreements and collections.&lt;/li&gt; &#xA; &lt;li&gt;Earthworks: we expect/hope that the unpublish step of the overall SDR reset plan will take care of removing old Earthworks data, but we are not sure whether Earthworks responds to unpublish, so that is yet to be tested on our first QA/stage SDR reset attempt (planned for Sept 2023).&lt;/li&gt; &#xA; &lt;li&gt;We have checked with the main user of gis-robot-suite, and have confirmed that there is no test data that needs to be kept in stage or QA across resets.&lt;/li&gt; &#xA; &lt;li&gt;While gis-robot-suite connects to a geoserver database, that is maintained as part of the Access portfolio, and resetting it is outside the scope of an Infrastructure portfolio SDR reset.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Steps&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Delete all content under the directories pointed to by the following shared_configs settings for the given env (note: double-check the actual settings values, the examples are valid for stage and QA as of Aug 2023):&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Settings.geohydra.stage&lt;/code&gt; (e.g. &lt;code&gt;&#39;/var/geomdtk/current/stage&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Settings.geohydra.workspace&lt;/code&gt; (e.g. &lt;code&gt;&#39;/var/geomdtk/current/workspace&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Settings.geohydra.tmpdir&lt;/code&gt; (e.g. &lt;code&gt;&#39;/var/geomdtk/current/tmp&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Settings.geohydra.geotiff.dir&lt;/code&gt; (e.g. &lt;code&gt;&#39;/var/geoserver/local/raster/geotiff&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Settings.geohydra.opengeometadata.dir&lt;/code&gt; (e.g. &lt;code&gt;&#39;/var/geomdtk/current/export/opengeometadata/edu.stanford.purl&#39;&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Done.&lt;/p&gt;</summary>
  </entry>
</feed>