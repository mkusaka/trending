<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub XSLT Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-12T01:46:23Z</updated>
  <subtitle>Daily Trending of XSLT in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>objectionary/speco</title>
    <updated>2023-03-12T01:46:23Z</updated>
    <id>tag:github.com,2023-03-12:/objectionary/speco</id>
    <link href="https://github.com/objectionary/speco" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Object Specialization for EO Programs&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;logo&#34; src=&#34;https://www.objectionary.com/cactus.svg?sanitize=true&#34; height=&#34;100px&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elegantobjects.org&#34;&gt;&lt;img src=&#34;https://www.elegantobjects.org/badge.svg?sanitize=true&#34; alt=&#34;EO principles respected here&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.rultor.com/p/objectionary/speco&#34;&gt;&lt;img src=&#34;http://www.rultor.com/b/objectionary/speco&#34; alt=&#34;DevOps By Rultor.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;&lt;img src=&#34;https://www.elegantobjects.org/intellij-idea.svg?sanitize=true&#34; alt=&#34;We recommend IntelliJ IDEA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/objectionary/speco/actions/workflows/mvn.yml&#34;&gt;&lt;img src=&#34;https://github.com/objectionary/speco/actions/workflows/mvn.yml/badge.svg?branch=master&#34; alt=&#34;mvn&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.0pdd.com/p?name=objectionary/speco&#34;&gt;&lt;img src=&#34;http://www.0pdd.com/svg?name=objectionary/speco&#34; alt=&#34;PDD status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/objectionary/speco&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/objectionary/speco/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/org.eolang/speco&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.eolang/speco.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hitsofcode.com/view/github/objectionary/speco&#34;&gt;&lt;img src=&#34;https://hitsofcode.com/github/objectionary/speco&#34; alt=&#34;Hits-of-Code&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/tokei/lines/github/objectionary/speco&#34; alt=&#34;Lines of code&#34;&gt; &lt;a href=&#34;https://github.com/objectionary/speco/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Specialization of objects in EO programs.&lt;/p&gt; &#xA;&lt;p&gt;SPECO is a tool that is aimed to be launched on the EO program converted to a collection of .xmir files, which has undergone modifications performed by &lt;a href=&#34;https://github.com/objectionary/aoi&#34;&gt;AOI&lt;/a&gt; tool.&lt;/p&gt; &#xA;&lt;p&gt;Consider the following EO program:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[] &amp;gt; cat&#xA;  [] &amp;gt; talk&#xA;    QQ.io.stdout &amp;gt; @&#xA;      &#34;Meow!&#34;&#xA;&#xA;[] &amp;gt; dog&#xA;  [] &amp;gt; talk&#xA;    QQ.io.stdout &amp;gt; @&#xA;      &#34;Woof!&#34;&#xA;  [] &amp;gt; eat&#xA;    QQ.io.stdout &amp;gt; @&#xA;      &#34;I am eating&#34;&#xA;&#xA;[x] &amp;gt; pet1&#xA;  x.talk &amp;gt; @&#xA;&#xA;[x] &amp;gt; pet2&#xA;  seq &amp;gt; @&#xA;    x.talk&#xA;    x.eat&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following block in the .xmir file of this program will be generated after AOI launch:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;aoi&amp;gt;&#xA;    &amp;lt;obj fqn=&#34;pet1.x&#34;&amp;gt;&#xA;       &amp;lt;inferred&amp;gt;&#xA;          &amp;lt;obj fqn=&#34;cat&#34;/&amp;gt;&#xA;          &amp;lt;obj fqn=&#34;dog&#34;/&amp;gt;&#xA;       &amp;lt;/inferred&amp;gt;&#xA;    &amp;lt;/obj&amp;gt;&#xA;    &amp;lt;obj fqn=&#34;pet2.x&#34;&amp;gt;&#xA;       &amp;lt;inferred&amp;gt;&#xA;          &amp;lt;obj fqn=&#34;dog&#34;/&amp;gt;&#xA;       &amp;lt;/inferred&amp;gt;&#xA;    &amp;lt;/obj&amp;gt;&#xA;&amp;lt;/aoi&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As we can see, object &lt;code&gt;x&lt;/code&gt; from &lt;code&gt;pet1&lt;/code&gt; is only used with its &lt;code&gt;talk&lt;/code&gt; attribute, therefore it can either be an instance of &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;dog&lt;/code&gt;. Whereas &lt;code&gt;x&lt;/code&gt; located &lt;code&gt;pet2&lt;/code&gt; is used with both &lt;code&gt;talk&lt;/code&gt; and &lt;code&gt;eat&lt;/code&gt;, which lets us determine that &lt;code&gt;x&lt;/code&gt; can only be an instance of &lt;code&gt;dog&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Right now object &lt;code&gt;pet1&lt;/code&gt; has only one implementation, which looks like below in xmir format. It does not give any hints on what object &lt;code&gt;x&lt;/code&gt; may be in this context.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;o abstract=&#34;&#34; line=&#34;20&#34; name=&#34;pet1&#34; pos=&#34;0&#34;&amp;gt;&#xA;   &amp;lt;o line=&#34;20&#34; name=&#34;x&#34; pos=&#34;1&#34;/&amp;gt;&#xA;   &amp;lt;o base=&#34;x&#34; line=&#34;21&#34; pos=&#34;2&#34;/&amp;gt;&#xA;   &amp;lt;o base=&#34;.talk&#34; line=&#34;21&#34; name=&#34;@&#34; pos=&#34;3&#34;/&amp;gt;&#xA;&amp;lt;/o&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;SPECO makes it obvious what &lt;code&gt;x&lt;/code&gt; is in the provided context. For example, it will turn object &lt;code&gt;pet1&lt;/code&gt; into these two declarations of objects &lt;code&gt;pet1_spec_x=cat&lt;/code&gt; and &lt;code&gt;pet1_spec_x=dog&lt;/code&gt;, which are specific for &lt;code&gt;cat&lt;/code&gt; and &lt;code&gt;dog&lt;/code&gt; correspondingly.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;o abstract=&#34;&#34; line=&#34;20&#34; name=&#34;pet1_spec_x=cat&#34; pos=&#34;0&#34;&amp;gt;&#xA;   &amp;lt;o line=&#34;20&#34; name=&#34;x&#34; pos=&#34;1&#34; spec=&#34;cat&#34;/&amp;gt;&#xA;   &amp;lt;o base=&#34;x&#34; line=&#34;21&#34; pos=&#34;2&#34;/&amp;gt;&#xA;   &amp;lt;o base=&#34;.talk&#34; line=&#34;21&#34; name=&#34;@&#34; pos=&#34;3&#34;/&amp;gt;&#xA;&amp;lt;/o&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;o abstract=&#34;&#34; line=&#34;20&#34; name=&#34;pet1_spec_x=dog&#34; pos=&#34;0&#34;&amp;gt;&#xA;   &amp;lt;o line=&#34;20&#34; name=&#34;x&#34; pos=&#34;1&#34; spec=&#34;dog&#34;/&amp;gt;&#xA;   &amp;lt;o base=&#34;x&#34; line=&#34;21&#34; pos=&#34;2&#34;/&amp;gt;&#xA;   &amp;lt;o base=&#34;.talk&#34; line=&#34;21&#34; name=&#34;@&#34; pos=&#34;3&#34;/&amp;gt;&#xA;&amp;lt;/o&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It will generate a collection of modified .xmir files as an output.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Build the app locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -jar speco.jar --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run a transformation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ java -jar speco.jar --source=&amp;lt;input&amp;gt; --target=&amp;lt;output&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or use make command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make trans&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Fork repository, make changes, send us a pull request. We will review your changes and apply them to the &lt;code&gt;master&lt;/code&gt; branch shortly, provided they don&#39;t violate our quality standards. To avoid frustration, before sending us your pull request please run full Maven build:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mvn clean install -Pqulice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will need Maven 3.3+ and Java 8+.&lt;/p&gt;</summary>
  </entry>
</feed>