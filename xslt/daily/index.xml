<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub XSLT Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-05T01:38:36Z</updated>
  <subtitle>Daily Trending of XSLT in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>objectionary/dejump</title>
    <updated>2022-11-05T01:38:36Z</updated>
    <id>tag:github.com,2022-11-05:/objectionary/dejump</id>
    <link href="https://github.com/objectionary/dejump" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Replaces all GOTO objects in EO program with semantically equivalent ones but without GOTO&lt;/p&gt;&lt;hr&gt;&lt;img alt=&#34;logo&#34; src=&#34;https://www.objectionary.com/cactus.svg?sanitize=true&#34; height=&#34;100px&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elegantobjects.org&#34;&gt;&lt;img src=&#34;https://www.elegantobjects.org/badge.svg?sanitize=true&#34; alt=&#34;EO principles respected here&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;&lt;img src=&#34;https://www.elegantobjects.org/intellij-idea.svg?sanitize=true&#34; alt=&#34;We recommend IntelliJ IDEA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/objectionary/dejump/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/objectionary/dejump/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;mvn-linux&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.0pdd.com/p?name=objectionary/dejump&#34;&gt;&lt;img src=&#34;http://www.0pdd.com/svg?name=objectionary/dejump&#34; alt=&#34;PDD status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hitsofcode.com/github/objectionary/dejump/view?branch=master&#34;&gt;&lt;img src=&#34;https://hitsofcode.com/github/objectionary/dejump?branch=master&#34; alt=&#34;Hits-of-Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://img.shields.io/tokei/lines/github/objectionary/dejump&#34;&gt;&lt;img src=&#34;https://img.shields.io/tokei/lines/github/objectionary/dejump&#34; alt=&#34;Lines of code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/objectionary/dejump/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Takes as an input a program in &lt;a href=&#34;https://www.eolang.org/&#34;&gt;EO&lt;/a&gt; and converts it to a semantically equivalent program, excluding the use of &lt;code&gt;goto&lt;/code&gt; object. The input data is a program in &lt;code&gt;.eo&lt;/code&gt;/&lt;code&gt;.xmir&lt;/code&gt; format, as the output the program returns &lt;code&gt;.eo&lt;/code&gt;/&lt;code&gt;.xmir&lt;/code&gt; respectively.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To use this program, the first step is to download the JAR. Then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ java -jar dejump-0.0.0-jar-with-dependencies.jar --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An application has a CLI (Command line interface), which appears as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: dejump [-hV] [--eo] &amp;lt;file&amp;gt;&#xA;Replaces objects GOTO with semantically equivalent&#xA;      &amp;lt;file&amp;gt;      Absolute path of file to transform&#xA;      --eo        treat input file as EO program (not XMIR)&#xA;  -h, --help      Show this help message and exit.&#xA;  -V, --version   Print version information and exit.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Depending on the input file format, the output file format will be similar. By default, the input file format is &lt;code&gt;.xmir&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In the directory that contains the file passed as a parameter, a new directory &lt;code&gt;generated&lt;/code&gt; is created, in which, after the program is executed, the transformed file will be located.&lt;/p&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;For the following &lt;code&gt;.eo&lt;/code&gt;-code, which appears at &lt;code&gt;temp/example.eo&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[] &amp;gt; example&#xA;  memory 0 &amp;gt; x&#xA;  goto &amp;gt; @&#xA;    [g]&#xA;      seq &amp;gt; @&#xA;        x.write (x.plus 1)&#xA;        if.&#xA;          x.eq 5&#xA;          g.forward x&#xA;          QQ.io.stdout &#34;Again\n&#34;&#xA;        g.backward&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After the application is executed, the file &lt;code&gt;temp/generated/example_transformed.eo&lt;/code&gt; will be created:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[] &amp;gt; example&#xA;  memory 0 &amp;gt; x&#xA;  seq &amp;gt; @&#xA;    flag_fwd.write -1&#xA;    flag_bwd.write 0&#xA;    while. &amp;gt; g_rem!&#xA;      or.&#xA;        flag_fwd.eq -1&#xA;        flag_bwd.eq 0&#xA;      [i]&#xA;        seq &amp;gt; @&#xA;          flag_fwd.write 0&#xA;          flag_bwd.write 1&#xA;          seq&#xA;            x.write (x.plus 1)&#xA;            if.&#xA;              x.eq 5&#xA;              flag_fwd.write 2&#xA;              QQ.io.stdout &#34;Again\n&#34;&#xA;            if.&#xA;              flag_fwd.eq 0&#xA;              flag_bwd.write 0&#xA;              TRUE&#xA;    if.&#xA;      flag_fwd.eq 2&#xA;      x&#xA;      g_rem&#xA;  memory -1 &amp;gt; flag_fwd&#xA;  memory 0 &amp;gt; flag_bwd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;You will need JDK 11+ and Maven 3.8+. Clone the repo and run the build like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ mvn clean install -Pqulice&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are &lt;code&gt;.eo&lt;/code&gt; files in &lt;a href=&#34;https://github.com/objectionary/dejump/tree/master/src/test/eo/org/eolang/dejump&#34;&gt;&lt;code&gt;src/test/eo/org/eolang/dejump&lt;/code&gt;&lt;/a&gt;, which you can edit or add your own source there. There are the following build steps that process these files:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;At &lt;code&gt;generate-test-sources&lt;/code&gt; Maven phase, &lt;code&gt;gmavenplus-plugin&lt;/code&gt; takes all &lt;code&gt;.eo&lt;/code&gt; sources and generates new ones. The files that it generates are not just &lt;code&gt;.eo&lt;/code&gt; programs, but EO tests, which combine the code originally taken from original EO programs with the EO code generated. Thus, for &lt;code&gt;src/test/eo/org/eolang/dejump/alpha.eo&lt;/code&gt; a modified EO source will be saved into &lt;code&gt;target/eo-after/process_alpha-test.eo&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;At &lt;code&gt;process-test-sources&lt;/code&gt; phase, &lt;code&gt;eo-maven-plugin&lt;/code&gt; process generated &lt;code&gt;.eo&lt;/code&gt; files from &lt;code&gt;target/eo-after&lt;/code&gt; directory and runs them as junit-tests.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>