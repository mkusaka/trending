<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub XSLT Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-03T01:38:26Z</updated>
  <subtitle>Daily Trending of XSLT in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MyCoRe-Org/mir</title>
    <updated>2022-12-03T01:38:26Z</updated>
    <id>tag:github.com,2022-12-03:/MyCoRe-Org/mir</id>
    <link href="https://github.com/MyCoRe-Org/mir" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MyCoRe/MODS Institutional Repository&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MIR &lt;a href=&#34;https://travis-ci.org/MyCoRe-Org/mir&#34;&gt;&lt;img src=&#34;https://travis-ci.org/MyCoRe-Org/mir.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/MyCoRe-Org/mir/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=MyCoRe-Org/mir&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/edf89bf4bb564a56b74aeb3d3e6474a4&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;MIR (acronym for MyCoRe/MODS Institutional Repository) is an open source repository software that is build upon &lt;a href=&#34;https://github.com/MyCoRe-Org/mycore&#34;&gt;MyCoRe&lt;/a&gt; and &lt;a href=&#34;http://www.loc.gov/standards/mods/&#34;&gt;MODS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation instructions for developer&lt;/h2&gt; &#xA;&lt;p&gt;Detailed instructions for application usage you can find on &lt;a href=&#34;https://www.mycore.de/documentation/apps/mir/mir_install/&#34;&gt;MIR Documentation site&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This guide addresses developers. Thats why you run it in &#39;dev&#39; profile!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;run &lt;code&gt;mvn clean install -am -pl mir-webapp&lt;/code&gt; in mir folder&lt;/li&gt; &#xA; &lt;li&gt;add profile &lt;code&gt;dev&lt;/code&gt; to your &lt;code&gt;.m2/settings.xml&lt;/code&gt; including path to solr home and solr data&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    &amp;lt;profile&amp;gt;&#xA;      &amp;lt;id&amp;gt;dev&amp;lt;/id&amp;gt;&#xA;      &amp;lt;activation&amp;gt;&#xA;        &amp;lt;activeByDefault&amp;gt;true&amp;lt;/activeByDefault&amp;gt;&#xA;      &amp;lt;/activation&amp;gt;&#xA;      &amp;lt;properties&amp;gt;&#xA;        &amp;lt;mir.solr.home&amp;gt;${user.home}/.mycore/dev-mir/data/solr&amp;lt;/mir.solr.home&amp;gt;&#xA;        &amp;lt;mir.solr.data.dir&amp;gt;${user.home}/.mycore/dev-mir/data/solr/data&amp;lt;/mir.solr.data.dir&amp;gt;&#xA;      &amp;lt;/properties&amp;gt;&#xA;    &amp;lt;/profile&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;initialize solr configuration using &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;to start solr, go to mir-webapp&lt;/li&gt; &#xA; &lt;li&gt;install solr with the command: &lt;code&gt;mvn -Pdev solr-runner:copyHome&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run solr with the command: &lt;code&gt;mvn -Pdev solr-runner:start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;stop solr with the command: &lt;code&gt;mvn -Pdev solr-runner:stop&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;update solr with the command: &lt;code&gt;mvn -Pdev solr-runner:stop solr-runner:copyHome solr-runner:start&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;to starting up a servlet container in development environment go back to mir folder&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;mvn install -am -pl mir-webapp &amp;amp;&amp;amp; mvn -Pdev -Dtomcat org.codehaus.cargo:cargo-maven2-plugin:run -pl mir-webapp&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Installation hangs while generating secret&lt;br&gt; There is entropy missing for GPG key generation. For ubuntu eg. you can use rng-tools:&lt;br&gt; &lt;code&gt;apt-get install rng-tools&lt;/code&gt;&lt;br&gt; &lt;code&gt;rngd -r /dev/urandom&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Can&#39;t export using bibtex button on metadata page&lt;br&gt; install &lt;a href=&#34;https://sourceforge.net/projects/bibutils/&#34;&gt;bibutils&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;How can I use MyCoRe command line interface (not WebCLI)?&lt;br&gt; &lt;code&gt;mir-cli/target/appassembler/bin/mir.sh&lt;/code&gt;&lt;br&gt; Set &lt;code&gt;JAVA_OPTS&lt;/code&gt; environment variable to &lt;code&gt;-DMCR.DataPrefix=dev&lt;/code&gt; before running.&lt;/li&gt; &#xA; &lt;li&gt;How can I get more than one connection to h2?&lt;br&gt; add &lt;code&gt;;AUTO_SERVER=TRUE&lt;/code&gt; in jdbc url (configured in persistence.xml)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;&lt;code&gt;mir&lt;/code&gt; Docker-Container&lt;/h2&gt; &#xA;&lt;p&gt;The docker container has its own install script which uses the environment variables.&lt;/p&gt; &#xA;&lt;h3&gt;Environment Variables&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Default, required&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SOLR_URL&lt;/td&gt; &#xA;   &lt;td&gt;none, required&lt;/td&gt; &#xA;   &lt;td&gt;The URL to the SOLR Server. Same as MCR.Solr.ServerURL in mycore.properties.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SOLR_CORE&lt;/td&gt; &#xA;   &lt;td&gt;mir&lt;/td&gt; &#xA;   &lt;td&gt;The name of the Solr main core. Same as MCR.Solr.Core.main.Name in mycore.properties.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SOLR_CLASSIFICATION_CORE&lt;/td&gt; &#xA;   &lt;td&gt;mir-classifications&lt;/td&gt; &#xA;   &lt;td&gt;The name of the Solr classification core. Same as MCR.Solr.Core.classification.Name in mycore.properties.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JDBC_NAME&lt;/td&gt; &#xA;   &lt;td&gt;none, required&lt;/td&gt; &#xA;   &lt;td&gt;The username for the Database authentication. Same as javax.persistence.jdbc.user in persistence.xml.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JDBC_PASSWORD&lt;/td&gt; &#xA;   &lt;td&gt;none, required&lt;/td&gt; &#xA;   &lt;td&gt;The password for the Database authentication. Same as javax.persistence.jdbc.password in persistence.xml.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JDBC_DRIVER&lt;/td&gt; &#xA;   &lt;td&gt;none, required&lt;/td&gt; &#xA;   &lt;td&gt;The driver for the Database. Same as javax.persistence.jdbc.driver in persistence.xml. If you use org.postgresql.Driver, org.mariadb.jdbc.Driver, org.hsqldb.jdbcDriver, org.h2.Driver or com.mysql.jdbc.Driver the right database drivers get downloaded by the installer script.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JDBC_URL&lt;/td&gt; &#xA;   &lt;td&gt;none, required&lt;/td&gt; &#xA;   &lt;td&gt;The schema for the Database. Same as hibernate.default_schema in persistence.xml.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;APP_CONTEXT&lt;/td&gt; &#xA;   &lt;td&gt;mir&lt;/td&gt; &#xA;   &lt;td&gt;The url context in which the app lives. (The .war will be renamed to the $APP_CONTEXT.war)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MCR_CONFIG_DIR&lt;/td&gt; &#xA;   &lt;td&gt;/mcr/home/&lt;/td&gt; &#xA;   &lt;td&gt;The location for the home directory. Same as the MCR.ConfigDir .&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MCR_DATA_DIR&lt;/td&gt; &#xA;   &lt;td&gt;/mcr/data/&lt;/td&gt; &#xA;   &lt;td&gt;The location for the data directory. Same as MCR.datadir in mycore.properties.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XMX&lt;/td&gt; &#xA;   &lt;td&gt;1g&lt;/td&gt; &#xA;   &lt;td&gt;The value of the -Xmx parameter for Tomcat.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XMS&lt;/td&gt; &#xA;   &lt;td&gt;1g&lt;/td&gt; &#xA;   &lt;td&gt;The value of the -Xms parameter for Tomcat.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Mount Points&lt;/h3&gt; &#xA;&lt;p&gt;The paths in &lt;code&gt;MCR_CONFIG_DIR&lt;/code&gt; and &lt;code&gt;MCR_DATA_DIR&lt;/code&gt; should be mountet. Default values are /mcr/home/ and /mcr/data/.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;code&gt;mir-solr&lt;/code&gt; Docker-Container&lt;/h2&gt; &#xA;&lt;p&gt;The docker container creates the required solr cores if they do not exist.&lt;/p&gt; &#xA;&lt;h3&gt;Mount Points&lt;/h3&gt; &#xA;&lt;p&gt;The path &lt;code&gt;/var/solr/data&lt;/code&gt; should be mounted, it contains all persistent data.&lt;/p&gt; &#xA;&lt;h2&gt;Docker-Compose&lt;/h2&gt; &#xA;&lt;p&gt;There is an &lt;a href=&#34;https://raw.githubusercontent.com/MyCoRe-Org/mir/2022.06.x/docker-compose.yml&#34;&gt;example docker-compose.yml&lt;/a&gt; which can be used for local development. The ports and other settings can be changed in the &lt;a href=&#34;https://raw.githubusercontent.com/MyCoRe-Org/mir/2022.06.x/.env&#34;&gt;.env file&lt;/a&gt;. You can use the commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mvn clean install -Pdev -Dtomcat clean install &amp;amp;&amp;amp; docker-compose up --build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There is another &lt;a href=&#34;https://raw.githubusercontent.com/MyCoRe-Org/mir/2022.06.x/docker-compose.prod.yml&#34;&gt;example docker-compose.prod.yml&lt;/a&gt; which uses prebuild images which are stored at &lt;a href=&#34;https://hub.docker.com/u/mycoreorg&#34;&gt;dockerhub&lt;/a&gt;. You can start them with the commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose -f docker-compose.prod.yml up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s strongly recommended to add a reverse proxy like Apache or Nginx in front.&lt;/p&gt; &#xA;&lt;h2&gt;Git-Style-Guide&lt;/h2&gt; &#xA;&lt;p&gt;For the moment see &lt;a href=&#34;https://github.com/agis-/git-style-guide&#34;&gt;agis-:Git-Style-Guide&lt;/a&gt; and use it with the following exceptions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Subject to commits is in form: &lt;code&gt;{JIRA-Ticket} {Ticket summary} {Commit summary}&lt;/code&gt;, like &lt;code&gt;MIR-526 Git-Migration add .travis.yml&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Branch name to work on a ticket is in form: &lt;code&gt;issues/{JIRA-Ticket}-{Ticket_Summary}&lt;/code&gt;, like &lt;code&gt;issues/MIR-526-Git_Migration&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Stay tuned for more information. &lt;span&gt;🙇&lt;/span&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>polystat/far</title>
    <updated>2022-12-03T01:38:26Z</updated>
    <id>tag:github.com,2022-12-03:/polystat/far</id>
    <link href="https://github.com/polystat/far" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Find-a-Reverse (FaR) analyzer module for Polystat&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://www.polystat.org/logo.svg?sanitize=true&#34; height=&#34;92px&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.elegantobjects.org&#34;&gt;&lt;img src=&#34;https://www.elegantobjects.org/badge.svg?sanitize=true&#34; alt=&#34;EO principles respected here&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.rultor.com/p/polystat/far&#34;&gt;&lt;img src=&#34;http://www.rultor.com/b/polystat/far&#34; alt=&#34;DevOps By Rultor.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;&lt;img src=&#34;https://www.elegantobjects.org/intellij-idea.svg?sanitize=true&#34; alt=&#34;We recommend IntelliJ IDEA&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/polystat/far/actions/workflows/mvn.yml&#34;&gt;&lt;img src=&#34;https://github.com/polystat/far/actions/workflows/mvn.yml/badge.svg?sanitize=true&#34; alt=&#34;CI checks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.0pdd.com/p?name=polystat/far&#34;&gt;&lt;img src=&#34;http://www.0pdd.com/svg?name=polystat/far&#34; alt=&#34;PDD status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/polystat/far&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/polystat/far/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.javadoc.io/doc/org.polystat/far&#34;&gt;&lt;img src=&#34;http://www.javadoc.io/badge/org.polystat/far.svg?sanitize=true&#34; alt=&#34;Javadoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/polystat/far/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-green.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/org.polystat/far&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.polystat/far.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hitsofcode.com/view/github/polystat/far&#34;&gt;&lt;img src=&#34;https://hitsofcode.com/github/polystat/far&#34; alt=&#34;Hits-of-Code&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/tokei/lines/github/polystat/far&#34; alt=&#34;Lines of code&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is an experimental analyzer for Polystat.&lt;/p&gt;</summary>
  </entry>
</feed>