<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub XSLT Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-11T01:44:48Z</updated>
  <subtitle>Daily Trending of XSLT in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cardonabits/haxo-hw</title>
    <updated>2023-09-11T01:44:48Z</updated>
    <id>tag:github.com,2023-09-11:/cardonabits/haxo-hw</id>
    <link href="https://github.com/cardonabits/haxo-hw" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Haxophone, an electronic musical instrument that resembles a saxophone&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;!-- toc --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#what-is-a-haxophone&#34;&gt;What is a haxophone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#project-goals&#34;&gt;Project Goals&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#goals&#34;&gt;Goals&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#non-goals&#34;&gt;Non-Goals&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#how-does-it-work&#34;&gt;How does it work?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#mechanical-design&#34;&gt;Mechanical Design&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#electrical-design&#34;&gt;Electrical Design&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#keyboard&#34;&gt;Keyboard&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#audio-amplifier&#34;&gt;Audio Amplifier&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#pinout&#34;&gt;Pinout&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#toolsstack&#34;&gt;Tools/Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#software&#34;&gt;Software&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#manufacturing&#34;&gt;Manufacturing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#bill-of-materials&#34;&gt;Bill of Materials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#assembly-instructions&#34;&gt;Assembly Instructions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#todo-list&#34;&gt;TODO list&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#license-and-contributions&#34;&gt;License and Contributions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- tocstop --&gt; &#xA;&lt;h2&gt;What is a haxophone&lt;/h2&gt; &#xA;&lt;p&gt;A haxophone is an electronic musical instrument that resembles a saxophone. It is designed to be an inexpensive and fully customizable travel saxophone. You will never get the same expressiveness or depth of sound of a real saxophone. But with a haxophone you should be able to play alone or with friends wherever you might be. The mechanical keys and unique ergonomics give it a different kind of satisfying feel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/676181/133919454-f654cb48-cca9-4b6e-bcb5-27de6ea2deb8.mp4&#34;&gt;https://user-images.githubusercontent.com/676181/133919454-f654cb48-cca9-4b6e-bcb5-27de6ea2deb8.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The design is fully open, software and hardware. This means that you can make it your own, from changing the type of key switches to making your own note and instrument mappings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/images/haxophone-main.png&#34; alt=&#34;Haxophone Prototype v0.5&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/images/haxophone-black.png&#34; alt=&#34;Haxophone Prototype v0.5&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project Goals&lt;/h2&gt; &#xA;&lt;h3&gt;Goals&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Build a travel saxophone that is fun and satisfying to play.&lt;/li&gt; &#xA; &lt;li&gt;Build an instrument with the same fingering as a saxophone so that muscle memory developed on the haxophone is directly transferrable to your main horn.&lt;/li&gt; &#xA; &lt;li&gt;Keep the cost low, below $100 USD.&lt;/li&gt; &#xA; &lt;li&gt;Easy to manufacture.&lt;/li&gt; &#xA; &lt;li&gt;Keep the design simple, sturdy and repairable to minimize maintenance cost. Using widely available and battle-tested mechanical keys from computer keyboards is one example of this principle in use.&lt;/li&gt; &#xA; &lt;li&gt;Fully hackable and customizable.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Non-Goals&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;A haxophone is not designed to be a saxophone replacement.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How does it work?&lt;/h2&gt; &#xA;&lt;p&gt;The haxophone is designed as a HAT (Hardware Attached on Top) for the Raspberry Pi family of single-board computers.&lt;/p&gt; &#xA;&lt;p&gt;The haxophone HAT is a special type of keyboard laid out in the same way as saxophones are. It also includes a mouthpiece and a pressure sensor to detect breath intensity. The HAT also includes an audio amplifier so it does not rely on the amplifier that is built into the &lt;a href=&#34;https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/&#34;&gt;Raspberry Pi 3&lt;/a&gt; and &lt;a href=&#34;https://www.raspberrypi.org/products/raspberry-pi-4-model-b/&#34;&gt;Raspberry Pi 4&lt;/a&gt;. Because of that, the HAT will also work with the least expensive of the Pi&#39;s, the &lt;a href=&#34;https://www.raspberrypi.org/products/raspberry-pi-zero/&#34;&gt;Raspberry Pi Zero&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/images/block-diagram.png&#34; alt=&#34;Block Diagram&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The software that runs on the Raspberry Pi is:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jcard0na/haxo-rs&#34;&gt;haxo-rs&lt;/a&gt;: This is the driver that detects key presses, breath and converts it into notes. It&#39;s written in Rust, and compiled on the Raspberry Pi into a native application.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/FluidSynth/fluidsynth&#34;&gt;fluidsynth&lt;/a&gt;: This is the synthesizer software that will convert notes into sounds.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Mechanical Design&lt;/h2&gt; &#xA;&lt;p&gt;In order to keep costs down, the HAT PCB (printed circuit board) is an integral part of the physical structure of the Haxophone. This means that key switches, thumb rests, mouthpiece and the Raspberry Pi are all attached directly to the PCB. The side keys (left palm and right knuckle keys) are mounted on smaller PCBs and attached to the main PCB via right angle metal brackets. This smaller PCBs are detachable pannels from the design. This brings down the manufacturing cost.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/images/renders.png&#34; alt=&#34;renders&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/images/haxophone-pcb.png&#34; alt=&#34;renders&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For improved ergonomics, a few parts are designed to be 3D printed. These are the mouthpiece neck, the left thumb rest, and the right thumb rest, that also incorporates a strap hook. The source 3D models for those parts are included in the repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/images/3dparts.png&#34; alt=&#34;3dparts&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Electrical Design&lt;/h2&gt; &#xA;&lt;p&gt;The haxophone hat is comprised of three subsystems: a keyboard, a pressure sensor and an audio amplifier.&lt;/p&gt; &#xA;&lt;h3&gt;Keyboard&lt;/h3&gt; &#xA;&lt;p&gt;The keyboard is organized as a 3x8 matrix. The diagram below shows the mapping from saxophone keys to keyboard column/row values.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/images/fingering-matrix.png&#34; alt=&#34;matrix&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that due to PCB size constraints, a design decision was made to not include a high F# key. This key is not present in all saxophones, as that note can be played using alternate fingerings with other keys. The most common mappings of the high F# are already configured on the haxophone. If you are used to a less common configuration, the software is easy to extend.&lt;/p&gt; &#xA;&lt;p&gt;Also note that at the moment the matrix is not completely used: keys (col 0, row 7) and (col 2, row 3) are unused.&lt;/p&gt; &#xA;&lt;h3&gt;Audio Amplifier&lt;/h3&gt; &#xA;&lt;p&gt;The haxophone HAT includes an audio amplifier and a 3.5mm mini-jack. This allows connecting the haxophone to headphones or to an external amplifier.&lt;/p&gt; &#xA;&lt;h3&gt;Pinout&lt;/h3&gt; &#xA;&lt;p&gt;The diagram below shows how the HAT connects to the Raspberry Pi. The keyboard matrix uses discrete GPIOs, the pressure sensor uses I2C and the audio amplifier, I2S.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/images/hat-pinout.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can refer to the diagram below from Raspberry Pi Spy if you need to locate those pins on the Raspberry Pi header. &lt;img src=&#34;https://www.raspberrypi-spy.co.uk/wp-content/uploads/2012/06/Raspberry-Pi-GPIO-Header-with-Photo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Tools/Stack&lt;/h2&gt; &#xA;&lt;p&gt;The circuit board is designed with awesome &lt;a href=&#34;https://www.kicad.org/&#34;&gt;Kicad&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All 3D models are designed with &lt;a href=&#34;https://www.freecadweb.org/&#34;&gt;Freecad&lt;/a&gt;, the open source 3D parametric modeler.&lt;/p&gt; &#xA;&lt;p&gt;The code is written in &lt;a href=&#34;https://www.rust-lang.org&#34;&gt;Rust&lt;/a&gt; just for the pleasure and reliability of it.&lt;/p&gt; &#xA;&lt;h2&gt;Software&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/jcard0na/haxo-rs&#34;&gt;haxo-rs&lt;/a&gt; for details about the software.&lt;/p&gt; &#xA;&lt;h2&gt;Manufacturing&lt;/h2&gt; &#xA;&lt;p&gt;The circuit boards were manufactured by JLPCB, who also assembled the surface mount parts.&lt;/p&gt; &#xA;&lt;h2&gt;Bill of Materials&lt;/h2&gt; &#xA;&lt;p&gt;The table below shows the main parts required to build a full Haxophone. Prices are rough estimates based on purchases made for prototypes. Shipping costs or taxes not included.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Qty&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Part Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Manufacturer&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;MPN&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Supplier&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Estimated cost USD (at quantity 5)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Partially-assembled Haxo HAT PCB (small SMD parts populated)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Several&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$15&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Differential pressure SMD sensor&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NXP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MPXV7007DP&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Arrow&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;del&gt;$10&lt;/del&gt; Post-Covid: $24&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Set of 3D printed parts&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Several&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$4&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;30cm Food grade Silicon Tube ID:3mm/OD:6mm&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;JUNZHIDA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Amazon&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Tactile-feedback 5-pin mechanical switches&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Cherry MX&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MX-Brown&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Banggood&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$11&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;22&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Keycaps For Mechanical Keyboards&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://esckeyboard.com/&#34;&gt;Many options!&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4-pin 0.1in Pin Header Con Right Angle&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Samtec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TSW-102-25-T-D-RA&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Arrow&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;2&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4-pin 0.1in Pin Socket Con Straight&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TE Connectivity&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;215309-2&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Arrow&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;40-pin 0.1in Pin Header Connector&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TE Connectivity&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;2-535542-0&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Arrow&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;6&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Mounting Bracket L-shape&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Keystone&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;612&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Mouser&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$1.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;18&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4-40 1/4 screws and nuts stainless&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Keystone&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;9900, 4694&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Mouser&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;4&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;M2/7mm machine screws flat head stainless&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Master-Carr&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;92010A003&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Master-Carr&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$0.5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;3&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;7/16in aluminum spacers&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Fascomp&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;FC1636-440-A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Mouser&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Sax Mouthpiece + Reed&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Bring your own (but optional)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Neck Strap&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;Bring your own (but optional)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Raspberry Pi Zero&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Broadcom&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Raspberry Pi Zero&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Many&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;16 GB SD Card&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Many&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;N/A&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Many&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;$6&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;del&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/del&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;del&gt;&lt;strong&gt;$73&lt;/strong&gt;&lt;/del&gt; (Pre-Covid)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;strong&gt;$97&lt;/strong&gt; (Post-Covid)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Assembly Instructions&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/docs/assembly.md&#34;&gt;Assembly Guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;TODO list&lt;/h2&gt; &#xA;&lt;p&gt;If you would like to help claim one of &lt;a href=&#34;https://github.com/jcard0na/haxo-hw/issues&#34;&gt;the open issues&lt;/a&gt; or &lt;a href=&#34;https://github.com/jcard0na/haxo-hw/issues/new/choose&#34;&gt;create a new one&lt;/a&gt; for yourself. If you prefer to stay in software land, head out to &lt;a href=&#34;https://github.com/jcard0na/haxo-rs/issues&#34;&gt;the software issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License and Contributions&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/LICENSE&#34;&gt;License&lt;/a&gt;. We&#39;ll gladly accept contributions via Pull Requests. Contributions are accepted under the same &lt;a href=&#34;https://raw.githubusercontent.com/cardonabits/haxo-hw/main/LICENSE&#34;&gt;License&lt;/a&gt; of the project, as captured in &lt;a href=&#34;https://docs.github.com/en/github/site-policy/github-terms-of-service#6-contributions-under-repository-license&#34;&gt;github&#39;s terms of service&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you plan to contribute a major feature or improvement, consider posting your proposed design as an issue before implementing it.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gonzos.net/projects&#34;&gt;Ben Gonzales&lt;/a&gt; has been a great source of inspiration and encouragement. His &lt;a href=&#34;https://gonzos.net/projects/midi-wind-controller-building-my-own/&#34;&gt;midi-Sax&lt;/a&gt; is a great project worth checking out.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>erasmus-without-paper/ewp-specs-api-iias</title>
    <updated>2023-09-11T01:44:48Z</updated>
    <id>tag:github.com,2023-09-11:/erasmus-without-paper/ewp-specs-api-iias</id>
    <link href="https://github.com/erasmus-without-paper/ewp-specs-api-iias" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Specifications of EWP&#39;s Interinstitutional Agreements API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Interinstitutional Agreements API&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-management#statuses&#34;&gt;What is the status of this document?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://developers.erasmuswithoutpaper.eu/&#34;&gt;See the index of all other EWP Specifications&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Summary&lt;/h2&gt; &#xA;&lt;p&gt;This document describes the &lt;strong&gt;Interinstitutional Agreements API&lt;/strong&gt;. This API allows partners to compare their copies of interinstitutional Erasmus+ mobility agreements with each other, which makes it easier to spot errors. This API is complementary with the &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-api-iias-approval&#34;&gt;Interinstitutional Agreements Approval API&lt;/a&gt; where HEIs can approve agreements they exchange via the IIAs API.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;As part of the EWP project, we have &lt;a href=&#34;https://github.com/erasmus-without-paper/general-issues/issues/12&#34;&gt;thoroughly discussed&lt;/a&gt; &lt;a href=&#34;https://github.com/erasmus-without-paper/general-issues/issues/12#issuecomment-229931282&#34;&gt;many options&lt;/a&gt; of how to design the functionality of synchronizing IIAs between different HEIs. The IIAs API is the final result.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;It is distributed&lt;/strong&gt;. Agreements (IIAs) are stored and hosted &lt;strong&gt;only&lt;/strong&gt; by the institutions involved in these agreements. If the institutions use the IIA Manager (part of the Dashboard), their agreements are stored in the Dashboard repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;All partners are equal&lt;/strong&gt;. There is no &#34;master&#34; of the agreement. Since all partners of a single IIA are allowed to serve their copies of this IIA, therefore &lt;em&gt;multiple conflicting copies of a single IIA may exist in the network&lt;/em&gt;. These conflicts are not resolved by the system itself, but our APIs allow partners to discover such conflicts early (so that they may fix them by themselves).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;No history of changes.&lt;/strong&gt; This API will serve only a single copy of the agreement (with no history of previous versions). This copy should be the copy which is &lt;strong&gt;currently in use&lt;/strong&gt; by the HEI which is serving the API.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Important rules&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Electronic versions of IIAs should model their former paper equivalents in a straightforward manner.&lt;/li&gt; &#xA; &lt;li&gt;Two HEIs sign one or several IIAs with one or several cooperation conditions.&lt;/li&gt; &#xA; &lt;li&gt;Specifications support IIAs with many cooperation conditions and each node in the network must be able to handle such IIAs to achieve this goal.&lt;/li&gt; &#xA; &lt;li&gt;Both copies of the same IIA stored in both partners&#39; systems must be presented to each other as exactly one IIA having the same number of corresponding cooperation conditions.&lt;/li&gt; &#xA; &lt;li&gt;Partners should exchange identifiers of their copies of the IIA to match these copies respectively in their systems.&lt;/li&gt; &#xA; &lt;li&gt;Regardless of whether a field is mandatory in the API, if it is present in the IIA of one HEI it is highly recommended having it in the matched IIA of the partner HEI.&lt;/li&gt; &#xA; &lt;li&gt;Providers are free to implement their local solutions to best support the needs of their customers but under the condition that the general principle expressed in the points above is maintained.&lt;/li&gt; &#xA; &lt;li&gt;Termination of an IIA, which has been mutually approved, should be treated as an agreement modification if any exchanges already took place. Otherwise, it should be treated as termination of the whole agreement.&lt;/li&gt; &#xA; &lt;li&gt;To modify an IIA which has been mutually approved, HEIs SHOULD take a snapshot of the last approved version to be able to revert to it if they don&#39;t conclude a new approved version of the agreement.&lt;/li&gt; &#xA; &lt;li&gt;An IIA that has not been mutually approved can be deleted by removing it from the EWP network. Such IIA MUST not be present in any of the IIA endpoints and an IIA CNR MUST be sent (see &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-architecture#client-part-sending-notifications&#34;&gt;CNR client part section&lt;/a&gt;). An IIA can be removed from the EWP network only if it is permanently deleted. Identifiers of the deleted objects MUST NOT be reused for new IIAs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Fact sheet information&lt;/h3&gt; &#xA;&lt;p&gt;If you compare our IIA XSDs to the &lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/resources&#34;&gt;official IIA template&lt;/a&gt; from the European Commission, for years 2021-20[29], you may notice that many fields seem to be missing in our XSDs. This is because we have decided to include many fields in the &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-api-institutions&#34;&gt;Institutions API&lt;/a&gt; and the &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-api-factsheet&#34;&gt;Factsheet API&lt;/a&gt; instead. That is why both of the mentioned APIs MUST be implemented to use this API.&lt;/p&gt; &#xA;&lt;p&gt;Based on the &lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/resources&#34;&gt;official IIA template&lt;/a&gt; from the European Commission for years 2021-20[29], we follow the following rules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;General information that is part of Higher Education Institutions’ profile and made publicly available to students is part of the &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-api-institutions&#34;&gt;Institutions API&lt;/a&gt; (and - in some cases - &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-api-ounits&#34;&gt;Organizational Units API&lt;/a&gt;) and the &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-api-factsheet&#34;&gt;Factsheet API&lt;/a&gt;. The general information can be updated without formal approval of the partner.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Data on the terms of agreement that needs to be approved by both partners is part of this API. The approval is done in the &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-api-iias-approval&#34;&gt;IIAs Approval API&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Business requirements and processes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/resources/mandatory_business_requirements_IIA.pdf&#34;&gt;Business requirements and processes&lt;/a&gt; document clarifies the requirements for the technical solutions developed under EWP and in the local implementation that should adequately support the business processes related to the approval of IIAs at Higher Education Institutions.&lt;/p&gt; &#xA;&lt;h3&gt;IIA hash calculation&lt;/h3&gt; &#xA;&lt;p&gt;As of IIA version 7 each agreement contains an &lt;code&gt;iia-hash&lt;/code&gt; element that replaces the &lt;code&gt;conditions-hash&lt;/code&gt; element used in previous versions of this API.&lt;/p&gt; &#xA;&lt;p&gt;To calculate the new hash an IIA get response XML has to be transformed using the appropriate XSLT template provided:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/resources/xsltKit/transform_version_6.xsl&#34;&gt;XSLT template for IIA version 6&lt;/a&gt;,&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/resources/xsltKit/transform_version_7.xsl&#34;&gt;XSLT template for IIA version 7&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can test these transformations using the provided &lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/resources/xsltKit/XsltTest.java&#34;&gt;Java class&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may need to find the right XSLT processor for these templates to work. For Java &lt;a href=&#34;http://www.java2s.com/example/jar/s/download-saxonhe9518jar-file.html&#34;&gt;Saxon-HE-9.5.1-8.jar&lt;/a&gt; processor works, the previous versions fail. For more details please go to &lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/resources/xsltKit&#34;&gt;XSLT kit resources&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;This version of this API uses &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-sec-intro/tree/stable-v2&#34;&gt;standard EWP Authentication and Security, Version 2&lt;/a&gt;. Server implementers choose which security methods they support by declaring them in their Manifest API entry.&lt;/p&gt; &#xA;&lt;h2&gt;Endpoints and functionality to be implemented&lt;/h2&gt; &#xA;&lt;p&gt;Server implementers MUST:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implement the &lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/endpoints/get.md&#34;&gt;&lt;code&gt;get&lt;/code&gt; endpoint&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Implement the &lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/endpoints/index.md&#34;&gt;&lt;code&gt;index&lt;/code&gt; endpoint&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Implement the &lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/endpoints/stats.md&#34;&gt;&lt;code&gt;stats&lt;/code&gt; endpoint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Put the URLs of these endpoints in their &lt;a href=&#34;https://github.com/erasmus-without-paper/ewp-specs-api-discovery&#34;&gt;manifest file&lt;/a&gt;, as described in &lt;a href=&#34;https://raw.githubusercontent.com/erasmus-without-paper/ewp-specs-api-iias/stable-v7/manifest-entry.xsd&#34;&gt;manifest-entry.xsd&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The details on each of these endpoints are described on separate pages of this API specification (use the links above).&lt;/p&gt; &#xA;&lt;p&gt;Implementers also MUST implement a Notification Sender for Interinstitutional Agreement objects. That means that an EWP host will &lt;em&gt;try&lt;/em&gt; to deliver notifications to all Interinstitutional Agreement CNR APIs implemented throughout the EWP Network whenever related agreement objects are updated.&lt;/p&gt; &#xA;&lt;h2&gt;Data model entities involved in the response&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;IIA&lt;/li&gt; &#xA; &lt;li&gt;IIA Partner&lt;/li&gt; &#xA; &lt;li&gt;Cooperation Condition&lt;/li&gt; &#xA; &lt;li&gt;Coordinator&lt;/li&gt; &#xA; &lt;li&gt;Person&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>