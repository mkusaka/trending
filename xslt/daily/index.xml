<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub XSLT Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-28T03:03:16Z</updated>
  <subtitle>Daily Trending of XSLT in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SoftwareAG/sagdevops-ci-assets</title>
    <updated>2022-07-28T03:03:16Z</updated>
    <id>tag:github.com,2022-07-28:/SoftwareAG/sagdevops-ci-assets</id>
    <link href="https://github.com/SoftwareAG/sagdevops-ci-assets" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Software AG DevOps library to support assets CI (continuous integration) with webMethods 9.x and 10.0. Work together with https://github.com/SoftwareAG/webmethods-sample-project-layout&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sagdevops-ci-assets&lt;/h1&gt; &#xA;&lt;p&gt;Software AG DevOps library to support assets CI (continuous integration) with webMethods 9.x and 10.0. Works together with &lt;a href=&#34;https://github.com/SoftwareAG/webmethods-sample-project-layout&#34;&gt;webMethods sample project layout&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;sagdevops-ci-assets is a library that easily enables CI for your webMethods projects. You can setup your infrastructure in minutes and then deploy flowlessly on your test service while also checking the quality by running all tests uploaded your version control.&lt;/p&gt; &#xA;&lt;h2&gt;Set-up&lt;/h2&gt; &#xA;&lt;h3&gt;webMethods Installation&lt;/h3&gt; &#xA;&lt;p&gt;Prepare your webMethods installation - your build server can contain only a plain IntegrationServer with Deployer. Keep the server plain - there is no need for designer or database connection. Your test server can be more complex as CI will execute unit and integration tests against it. The build and the test server must reach each other over http so that the deployment and the testing can be performed.&lt;/p&gt; &#xA;&lt;h3&gt;CI Library&lt;/h3&gt; &#xA;&lt;p&gt;Download the library on your build server by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/SoftwareAG/sagdevops-ci-assets.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Edit the &lt;em&gt;System.properties&lt;/em&gt; to correspond to your inftrastucture - deployerHost is the machine where your Deployer is running(normally the build server) where targetHost is your test server - where the packages will be deployed and tested.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Notice&lt;/em&gt; change the path the Deployer if you&#39;re not using the &lt;em&gt;default&lt;/em&gt; Integration Server instance.&lt;/p&gt; &#xA;&lt;h3&gt;Build/CI Environment&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;On your build server set-up the default java on PATH to be the JDK that comes with your webMethods installation ${SAG_HOME}/jvm/jvm/bin/java&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On your build server install Jenkins CI Server and run it with the same user that run your webMethods processes. The CI can work also with other CI server, but for the reference implementation we&#39;ve chosen Jenkins.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In Jenkins-&amp;gt;Manage Jenkins-&amp;gt;Configure System-&amp;gt;EnvironmentVariables define the following environment variables:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;SAG_CI_HOME = path_to_th_sagdevops-ci-assets on the local file system.&lt;/li&gt; &#xA; &lt;li&gt;SAG_HOME = path_to_your_local_webmethods_installation&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Use slash &#34;/&#34; as path separator. Example: &#34;C:/SoftwareAG&#34;, instead of &#34;C:\SoftwareAG&#34;.&lt;/p&gt; &#xA;&lt;h3&gt;Jenkins Pipeline Job&lt;/h3&gt; &#xA;&lt;p&gt;In Jenkins, create a new item from type pipeline. Give it a &lt;strong&gt;unique name&lt;/strong&gt; as we use the job name as identifier further down the process. Scroll down the page to the pipeline definition and choose &lt;em&gt;Pipeline definition from SCM&lt;/em&gt;. Choose git as system and give the url of the webmethods-sample-project-layout - &lt;em&gt;&lt;a href=&#34;https://github.com/SoftwareAG/webmethods-sample-project-layout.git&#34;&gt;https://github.com/SoftwareAG/webmethods-sample-project-layout.git&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;This sample project contains two pre-created pipeline definitions - Jenkinsfile.win and Jenkinsfile.unix that run on the respective operating systems. Type in the correct file in respect of you build server OS.&lt;/p&gt; &#xA;&lt;p&gt;Those pipeline definition are orchestrating all steps around the build, deploy and the test on your server. If the all environment variables are set correctly you should not change anything here.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;After your pipeline job is set-up, trigger it. It will download the pipeline description automatically, then checkout the sources, build the core, deploy the code and run tests. Whenever a developer checks in new IS packages and Tests those will be automatically deployed and all new tests will be executed. For this to work, the structure defined here &lt;em&gt;&lt;a href=&#34;https://github.com/SoftwareAG/webmethods-sample-project-layout.git&#34;&gt;https://github.com/SoftwareAG/webmethods-sample-project-layout.git&lt;/a&gt;&lt;/em&gt; has followed.&lt;/p&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;p&gt;The wM Test Suite tests will have to be places in a directory a &lt;em&gt;setup&lt;/em&gt; directory inside the test project, so that it can be picked up by the test executor.&lt;/p&gt; &#xA;&lt;h1&gt;Authors&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;mailto:Henning.Waack@softwareag.com&#34;&gt;Henning Waack&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;mailto:Angel.tcholtchev@softwareag.com&#34;&gt;Angel Tcholtchev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;These tools are provided as-is and without warranty or support. They do not constitute part of the Software AG product suite. Users are free to use, fork and modify them, subject to the license agreement. While Software AG welcomes contributions, we cannot guarantee to include every contribution in the master project.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;For more information you can Ask a Question in the &lt;a href=&#34;https://tech.forums.softwareag.com/tags/c/forum/1/webMethods&#34;&gt;TECHcommunity Forums&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can find additional information in the &lt;a href=&#34;https://tech.forums.softwareag.com/tag/webmethods&#34;&gt;Software AG TECHcommunity&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Contact us at &lt;a href=&#34;mailto:technologycommunity@softwareag.com?subject=Github/SoftwareAG&#34;&gt;TECHcommunity&lt;/a&gt; if you have any questions.&lt;/p&gt;</summary>
  </entry>
</feed>