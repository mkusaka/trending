<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-11-11T01:32:22Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>OXY2DEV/markview.nvim</title>
    <updated>2024-11-11T01:32:22Z</updated>
    <id>tag:github.com,2024-11-11:/OXY2DEV/markview.nvim</id>
    <link href="https://github.com/OXY2DEV/markview.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚òÑÔ∏è Highly customisable markdown(latex &amp; inline html) previewer for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚ú® markview.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/ae3d2912-65d4-4dd7-a8bb-614c4406c4e3&#34;&gt;https://github.com/user-attachments/assets/ae3d2912-65d4-4dd7-a8bb-614c4406c4e3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- It is not possible to use GitHub links for videos, so we have to manually upload this --&gt; &#xA;&lt;p&gt;A highly-customisable &amp;amp; feature rich markdown previewer inside Neovim.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/OXY2DEV/markview.nvim/wiki&#34;&gt;üìñ Wiki page&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/OXY2DEV/markview.nvim/main/#-usage-examples&#34;&gt;üéÆ Usage examples&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/OXY2DEV/markview.nvim/wiki/Extras&#34;&gt;üîã Extras&lt;/a&gt; | &lt;a href=&#34;https://github.com/OXY2DEV/markview.nvim/wiki/Presets&#34;&gt;üß© Presets&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Headings&#34; src=&#34;https://github.com/OXY2DEV/markview.nvim/raw/images/Dev/Headings.jpg&#34; width=&#34;75%&#34;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&#34;Inline&#34; src=&#34;https://github.com/OXY2DEV/markview.nvim/raw/images/Dev/Inline.jpg&#34; width=&#34;75%&#34;&gt; &lt;img alt=&#34;Block&#34; src=&#34;https://github.com/OXY2DEV/markview.nvim/raw/images/Dev/Blocks.jpg&#34; width=&#34;75%&#34;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&#34;Tables&#34; src=&#34;https://github.com/OXY2DEV/markview.nvim/raw/images/Dev/Tables.jpg&#34; width=&#34;75%&#34;&gt; &lt;img alt=&#34;LaTeX&#34; src=&#34;https://github.com/OXY2DEV/markview.nvim/raw/images/Dev/LaTeX.jpg&#34; width=&#34;75%&#34;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/p&gt; &#xA;&lt;h2&gt;ü™∑ Features&lt;/h2&gt; &#xA;&lt;p&gt;Markdown renderer,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Block quote support with custom &lt;code&gt;callouts/alertd&lt;/code&gt;. Supports &lt;strong&gt;callout titles&lt;/strong&gt; too.&lt;/li&gt; &#xA; &lt;li&gt;Checkbox with custom &lt;code&gt;states&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Code blocks. Also supports &lt;strong&gt;info strings&lt;/strong&gt; added before the code blocks.&lt;/li&gt; &#xA; &lt;li&gt;Footnotes.&lt;/li&gt; &#xA; &lt;li&gt;Headings(both atx &amp;amp; setext).&lt;/li&gt; &#xA; &lt;li&gt;Horizontal rules.&lt;/li&gt; &#xA; &lt;li&gt;Inline codes.&lt;/li&gt; &#xA; &lt;li&gt;Links(hyperlinks, image links &amp;amp; email).&lt;/li&gt; &#xA; &lt;li&gt;List items(&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;n.&lt;/code&gt; &amp;amp; &lt;code&gt;n)&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Tables. Supports content alignment, pre-defined column widths and rendering other markdown &amp;amp; html syntaxes inside of table cells.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;HTML renderer,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTML elements(only inline ones). Also supports defining styles for custom tags.&lt;/li&gt; &#xA; &lt;li&gt;HTML entities. Supports 242 entities(as of last edit).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;LaTeX renderer,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Inline LaTeX support.&lt;/li&gt; &#xA; &lt;li&gt;LaTeX block supoort.&lt;/li&gt; &#xA; &lt;li&gt;LaTeX symbols support. supports 1000+ symbol names.&lt;/li&gt; &#xA; &lt;li&gt;Font commamd support. Currently supports: &lt;code&gt;\mathbfit&lt;/code&gt;, &lt;code&gt;\mathcal&lt;/code&gt;, &lt;code&gt;\mathfrak&lt;/code&gt;, &lt;code&gt;\mathbb&lt;/code&gt;, &lt;code&gt;\mathsfbf&lt;/code&gt;, &lt;code&gt;\mathsfit&lt;/code&gt;, &lt;code&gt;\mathsfbfit&lt;/code&gt;, &lt;code&gt;\mathtt&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Subscripts &amp;amp; superscripts&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Others,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hybrid mode, for previewing &amp;amp; editing.&lt;/li&gt; &#xA; &lt;li&gt;Split view, for showing preview in a split.&lt;/li&gt; &#xA; &lt;li&gt;Presets, for easy customisation.&lt;/li&gt; &#xA; &lt;li&gt;Tree-sitter injections, supports overwrites too!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Extras,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Heading level cycler.&lt;/li&gt; &#xA; &lt;li&gt;Checkbox toggler &amp;amp; cycler.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim version &lt;code&gt;&amp;gt;=0.10.1&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Tree-sitter parsers: &lt;code&gt;markdown&lt;/code&gt;, &lt;code&gt;markdown_inline&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Nerd font.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Optional,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Tree-sitter parsers: &lt;code&gt;latex&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvim-tree/nvim-web-deviconso&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Any modern unicode font.&lt;/li&gt; &#xA; &lt;li&gt;A tree-sitter supported colorscheme.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üß≠ Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;markview.nvim&lt;/code&gt; can be installed via your favourite plugin manager!&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] If you have manually installed the parsers then you don&#39;t need &lt;code&gt;nvim-treesitter&lt;/code&gt;. Just make sure the parsers are loaded before this plugin.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üí§ Lazy.nvim&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] It is not recommended to &lt;strong&gt;lazy load&lt;/strong&gt; this plugin.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;OXY2DEV/markview.nvim&#34;,&#xA;    lazy = false,      -- Recommended&#xA;    -- ft = &#34;markdown&#34; -- If you decide to lazy-load anyway&#xA;&#xA;    dependencies = {&#xA;        &#34;nvim-treesitter/nvim-treesitter&#34;,&#xA;        &#34;nvim-tree/nvim-web-devicons&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;ü¶† Mini.deps&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local MiniDeps = require(&#34;mini.deps&#34;);&#xA;&#xA;MiniDeps.add({&#xA;    source = &#34;OXY2DEV/markview.nvim&#34;,&#xA;&#xA;    depends = {&#xA;        &#34;nvim-treesitter/nvim-treesitter&#34;,&#xA;        &#34;nvim-tree/nvim-web-devicons&#34;&#xA;    }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üåí Rocks.nvim&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;code&gt;Luarocks&lt;/code&gt; may receive updates a bit later as the release is done after fixing any potential bug(s).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;:Rocks install markview.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üëæ GitHub releases&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Releases may be slow to update as they are done after fixing potential bug(s).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;Current version: v25.0.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üåÉ Dev branch&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] &lt;code&gt;dev&lt;/code&gt; branch may remain out-dated for an indefinite period of time. It is NOT meant for general use.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;New features are usually done on the &lt;a href=&#34;&#34;&gt;dev branch&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;p&gt;So, If you are curious about them, try this branch out!&lt;/p&gt; &#xA;&lt;h2&gt;üí° Configuration options&lt;/h2&gt; &#xA;&lt;p&gt;The configuration table is too large to fit here.&lt;/p&gt; &#xA;&lt;p&gt;Go check the &lt;a href=&#34;&#34;&gt;wiki page&lt;/a&gt; or see &lt;code&gt;:h markview.nvim-configuration&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s all the main options,&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    -- Buffer types to ignore&#xA;    buf_ignore = { &#34;nofile&#34; },&#xA;    -- Delay, in miliseconds&#xA;    -- to wait before a redraw occurs(after an event is triggered)&#xA;    debounce = 50,&#xA;    -- Filetypes where the plugin is enabled&#xA;    filetypes = { &#34;markdown&#34;, &#34;quarto&#34;, &#34;rmd&#34; },&#xA;    -- Highlight groups to use&#xA;    -- &#34;dynamic&#34; | &#34;light&#34; | &#34;dark&#34;&#xA;    highlight_groups = &#34;dynamic&#34;,&#xA;    -- Modes where hybrid mode is enabled&#xA;    hybrid_modes = nil,&#xA;    -- Tree-sitter query injections&#xA;    injections = {},&#xA;    -- Initial plugin state,&#xA;    -- true = show preview&#xA;    -- falss = don&#39;t show preview&#xA;    initial_state = true,&#xA;    -- Max file size that is rendered entirely&#xA;    max_file_length = 1000,&#xA;    -- Modes where preview is shown&#xA;    modes = { &#34;n&#34;, &#34;no&#34;, &#34;c&#34; },&#xA;    -- Lines from the cursor to draw when the&#xA;    -- file is too big&#xA;    render_distance = 100,&#xA;    -- Window configuration for split view&#xA;    split_conf = {},&#xA;&#xA;    -- Rendering related configuration&#xA;    block_quotes = {},&#xA;    callbacks = {},&#xA;    checkboxes = {},&#xA;    code_blocks = {},&#xA;    escaped = {},&#xA;    footnotes = {},&#xA;    headings = {},&#xA;    horizontal_rules = {},&#xA;    html = {},&#xA;    inline_codes = {},&#xA;    latex = {},&#xA;    links = {},&#xA;    list_items = {},&#xA;    tables = {}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üëÄ Commands&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;markview.nvim&lt;/code&gt; has a single command &lt;code&gt;:Markview&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;When used without any &lt;code&gt;subcommands&lt;/code&gt;, it toggles the plugin.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Available subcommands,&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;toggleAll&lt;/li&gt; &#xA; &lt;li&gt;enableAll&lt;/li&gt; &#xA; &lt;li&gt;disableAll&lt;/li&gt; &#xA; &lt;li&gt;toggle {n}&lt;/li&gt; &#xA; &lt;li&gt;enable {n}&lt;/li&gt; &#xA; &lt;li&gt;disable {n}&lt;/li&gt; &#xA; &lt;li&gt;hybridToggle&lt;/li&gt; &#xA; &lt;li&gt;hybridEnable&lt;/li&gt; &#xA; &lt;li&gt;hybridDisable&lt;/li&gt; &#xA; &lt;li&gt;splitToggle {n}&lt;/li&gt; &#xA; &lt;li&gt;splitEnable {n}&lt;/li&gt; &#xA; &lt;li&gt;splitDisable {n}&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Subcommands that end with &lt;code&gt;{n}&lt;/code&gt; can also take a buffer id. If a buffer id isn&#39;t provided then the current buffer&#39;s id is used. Completion for buffer id is also provided by the plugin.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Additional command(s),&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MarkOpen&lt;/code&gt;, Opens the link under cursor, falls back to &lt;strong&gt;vim.ui.open()&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üé® Highlight groups&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;Light&#34; src=&#34;https://github.com/OXY2DEV/markview.nvim/raw/images/Dev/light.gif&#34; width=&#34;75%&#34;&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;img alt=&#34;Dark&#34; src=&#34;https://github.com/OXY2DEV/markview.nvim/raw/images/Dev/dark.gif&#34; width=&#34;75%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Highlight groups defined by the plugin are given below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Block quotes&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewBlockQuoteWarn&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewBlockQuoteSpecial&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewBlockQuoteNote&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewBlockQuoteDefault&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewBlockQuoteOk&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewBlockQuoteError&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Checkboxes&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewCheckboxCancelled&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewCheckboxChecked&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewCheckboxPending&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewCheckboxProgress&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewCheckboxUnchecked&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewCheckboxStriked&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Code blocks &amp;amp; Inline codes&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewInlineCode&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewCodeInfo&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewCode&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Code block icons(Internal icon provider)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon1Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon1Fg&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon2&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon2Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon2Fg&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon3&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon3Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon3Fg&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon4&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon4Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon4Fg&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon5&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon5Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon5Fg&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon6&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon6Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewIcon6Fg&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Headings&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading1Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading2Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading2&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading3Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading3&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading4Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading4&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading5Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading5&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading6Sign&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHeading6&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Horizontal rules&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient1&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient2&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient3&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient4&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient5&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient6&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient7&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient8&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient9&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewGradient10&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;LaTeX&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewLatexSubscript&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewLatexSuperscript&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;List items&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewListItemStar&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewListItemPlus&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewListItemMinus&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Links&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewEmail&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewImageLink&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewHyperlink&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tables&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewTableHeader&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewTableBorder&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewTableAlignCenter&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewTableAlignLeft&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;MarkviewTableAlignRight&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üéÆ Usage examples&lt;/h2&gt; &#xA;&lt;p&gt;Don&#39;t forget to check out the &lt;a href=&#34;https://github.com/OXY2DEV/markview.nvim/wiki&#34;&gt;wiki&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h3&gt;üåü Hybrid mode&lt;/h3&gt; &#xA;&lt;p&gt;Hybrid mode can be used by just modifying the &lt;code&gt;hybrid_modes&lt;/code&gt; option.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;markview&#34;).setup({&#xA;    hybrid_modes = { &#34;n&#34; }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Tip] You can toggle &lt;code&gt;hybrid mode&lt;/code&gt; via &lt;code&gt;:Markview hybridToggle&lt;/code&gt;!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üåü Split view&lt;/h3&gt; &#xA;&lt;p&gt;You can show previews in a split!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;:Markview splitToggle&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üåü Foldable headings&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;tree-sitter&lt;/code&gt; injections for folding text!&lt;/p&gt; &#xA;&lt;p&gt;You first need to modify the fold method and the expression used for folding text.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.o.foldmethod = &#34;expr&#34;;&#xA;vim.o.foldexpr= &#34;nvim_treesitter#foldexpr()&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Note] You might want to set this using the &lt;code&gt;on_enable&lt;/code&gt; callback of the plugin, if you don&#39;t want this in other filetypes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Now, we create a query to fold the headings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;markview&#34;).setup({&#xA;    injections = {&#xA;        languages = {&#xA;            markdown = {&#xA;                --- This disables other&#xA;                --- injected queries!&#xA;                overwrite = true,&#xA;                query = [[&#xA;                    (section&#xA;                        (atx_headng) @injections.mkv.fold&#xA;                        (#set! @fold))&#xA;                ]]&#xA;            }&#xA;        }&#xA;    }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here&#39;s a bit of explanation on what the text does.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-query&#34;&gt;; Matches any section of text that starts with&#xA;; a heading.&#xA;(section&#xA;    (atx_headng) @injections.mkv.fold&#xA;    ; This folds the section!&#xA;    (#set! fold))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally, you can use a foldtext plugin tp change what is shown! For example, I can use &lt;a href=&#34;https://www.github.com/OXY2DEV/foldtext.nvim&#34;&gt;foldtext.nvim&lt;/a&gt; for this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local def = require(&#34;foldtext&#34;).configuration;&#xA;local handler = function (_, buf)&#xA;    local ln = table.concat(vim.fn.getbufline(buf, vim.v.foldstart));&#xA;    local markers = ln:match(&#34;^%s*([#]+)&#34;);&#xA;    local heading_txt = ln:match(&#34;^%s*[#]+(.+)$&#34;);&#xA;&#xA;    local icons = {&#xA;        &#34;Û∞é§&#34;, &#34;Û∞é©&#34;, &#34;Û∞é™&#34;, &#34;Û∞éÆ&#34;, &#34;Û∞é±&#34;, &#34;Û∞éµ&#34;&#xA;    }&#xA;&#xA;    return {&#xA;        icons[vim.fn.strchars(markers or &#34;&#34;)] .. heading_txt,&#xA;        &#34;MarkviewHeading&#34; .. vim.fn.strchars(markers or &#34;&#34;);&#xA;    }&#xA;end&#xA;local spaces = function (_, buf)&#xA;    local ln = table.concat(vim.fn.getbufline(buf, vim.v.foldstart));&#xA;    local markers = ln:match(&#34;^%s*([#]+)&#34;);&#xA;    local heading_txt = ln:match(&#34;^%s*[#]+(.+)$&#34;);&#xA;&#xA;    return {&#xA;        string.rep(&#34; &#34;, vim.o.columns - vim.fn.strchars(heading_txt) - 1),&#xA;        &#34;MarkviewHeading&#34; .. vim.fn.strchars(markers or &#34;&#34;);&#xA;    }&#xA;end&#xA;&#xA;require(&#34;foldtext&#34;).setup({&#xA;    custom = vim.list_extend(def, {&#xA;        {&#xA;            ft = { &#34;markdown&#34; },&#xA;            config = {&#xA;                { type = &#34;indent&#34; },&#xA;                {&#xA;                    type = &#34;custom&#34;,&#xA;                    handler = handler&#xA;                },&#xA;                {&#xA;                    type = &#34;custom&#34;,&#xA;                    handler = spaces&#xA;                }&#xA;            }&#xA;        }&#xA;    });&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!--&#xA;    vim:nospell:&#xA;--&gt;</summary>
  </entry>
</feed>