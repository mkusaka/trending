<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-03T01:34:01Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>miversen33/sunglasses.nvim</title>
    <updated>2023-11-03T01:34:01Z</updated>
    <id>tag:github.com,2023-11-03:/miversen33/sunglasses.nvim</id>
    <link href="https://github.com/miversen33/sunglasses.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Put on your shades so you only see what you care about&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sunglasses.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Put on your shades so you only see what you care about&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Lazy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lazy&#34;).setup({&#34;miversen33/sunglasses.nvim&#34;, config = true})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Super Lazy&lt;/h4&gt; &#xA;&lt;p&gt;If you want, you can lazy load sunglasses, tied to the UIEnter event. By default though, sunglasses already does most of its &#34;work&#34; after this event fires so you aren&#39;t really gaining much by lazy loading sunglasses.&lt;/p&gt; &#xA;&lt;p&gt;But I am not here to stop you from getting every last millisecond shaved off your startup time so here ya go&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lazy&#34;).setup({&#34;miversen33/sunglasses.nvim&#34;, config = true, event = &#34;UIEnter&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Pictures&lt;/h2&gt; &#xA;&lt;p&gt;&lt;sup&gt;&lt;/sup&gt;Feel to submit a pr to add more images to this. At least until I get tired of updating it&lt;sub&gt;&lt;/sub&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pictures are worth a thousand words (or however many are in your buffers ;) )&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vscode.nvim&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Mofiqul/vscode.nvim&#34;&gt;Theme&lt;/a&gt; &lt;a href=&#34;https://github.com/miversen33/miversen-dotfiles/raw/713b446f5665dd471f76da5fa28a726d1315dbf8/editors/nvim/lua/plugins/ui/&#34;&gt;Dotfiles&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Shaded&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/4f77977e-6d01-4d18-9525-cee012fb69fa&#34; alt=&#34;vscode.nvim shaded&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;SHADE&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tinted&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/35c7948e-d163-490a-a063-887ba7674168&#34; alt=&#34;vscode.nvim tinted&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;TINT&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;NOSYNTAX&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/61aec001-eecd-4cda-a969-4708c7343e99&#34; alt=&#34;vscode.nvim nosyntax&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;NOSYNTAX&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Catppuccin&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/catppuccin/nvim&#34;&gt;Theme&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Shaded&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/686f0745-d01e-4074-8ba7-fdf6873347bf&#34; alt=&#34;catppuccin shaded&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;NOSYNTAX&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tinted&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/df0ef0db-7068-4d10-bace-a6980f7624c0&#34; alt=&#34;catppuccin tinted&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;TINT&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;NOSYNTAX&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/c90754fc-75de-499b-8e65-118102b5250f&#34; alt=&#34;catppuccin nosyntax&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;NOSYNTAX&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;TokyoNight&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Shaded&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/ac2a4be6-6af4-42d1-ba90-148e9420d508&#34; alt=&#34;tokyonight shaded&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;SHADE&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Tinted&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/24c286eb-19f6-488f-a65b-1d0e06d5cfe2&#34; alt=&#34;tokyonight tinted&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;TINT&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;NOSYNTAX&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/miversen33/sunglasses.nvim/assets/2640668/f0ea28ae-4474-417d-9ecc-06d5749a163a&#34; alt=&#34;tokyonight nosyntax&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Config: https://github.com/miversen33&#xA;{&#xA;    filter_type = &#34;NOSYNTAX&#34;,&#xA;    filter_percent = .65&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Able to be used with &lt;strong&gt;any&lt;/strong&gt; neovim &lt;em&gt;or&lt;/em&gt; vim theme&lt;/li&gt; &#xA; &lt;li&gt;Works with Sessions&lt;/li&gt; &#xA; &lt;li&gt;Works with Transparent buffers&lt;/li&gt; &#xA; &lt;li&gt;Easy to Setup&lt;/li&gt; &#xA; &lt;li&gt;Easy to Customize&lt;/li&gt; &#xA; &lt;li&gt;No external dependencies&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Only a minimal amount of shenanigans happening!&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Currently only supports neovim 0.9 newer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Sunglasses has sane defaults (as shown below) and therefore doesn&#39;t require configuration to get started. However, if you would like below is the list of defaults and changes that can be applied to them&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;local sunglasses_defaults = {&#xA;    filter_percent = 0.65,&#xA;    filter_type = &#34;SHADE&#34;,&#xA;    log_level = &#34;ERROR&#34;,&#xA;    refresh_timer = 5,&#xA;    excluded_filetypes = {&#xA;        &#34;dashboard&#34;,&#xA;        &#34;lspsagafinder&#34;,&#xA;        &#34;packer&#34;,&#xA;        &#34;checkhealth&#34;,&#xA;        &#34;mason&#34;,&#xA;        &#34;NvimTree&#34;,&#xA;        &#34;neo-tree&#34;,&#xA;        &#34;plugin&#34;,&#xA;        &#34;lazy&#34;,&#xA;        &#34;TelescopePrompt&#34;,&#xA;        &#34;alpha&#34;,&#xA;        &#34;toggleterm&#34;,&#xA;        &#34;sagafinder&#34;,&#xA;        &#34;better_term&#34;,&#xA;        &#34;fugitiveblame&#34;,&#xA;        &#34;starter&#34;,&#xA;        &#34;NeogitPopup&#34;,&#xA;        &#34;NeogitStatus&#34;,&#xA;        &#34;DiffviewFiles&#34;,&#xA;        &#34;DiffviewFileHistory&#34;,&#xA;        &#34;DressingInput&#34;,&#xA;        &#34;spectre_panel&#34;,&#xA;        &#34;zsh&#34;,&#xA;        &#34;registers&#34;,&#xA;        &#34;startuptime&#34;,&#xA;        &#34;OverseerList&#34;,&#xA;        &#34;Navbuddy&#34;,&#xA;        &#34;noice&#34;,&#xA;        &#34;notify&#34;,&#xA;        &#34;saga_codeaction&#34;,&#xA;        &#34;sagarename&#34;&#xA;    },&#xA;    excluded_highlights = {&#xA;        &#34;WinSeparator&#34;,&#xA;        {&#34;lualine_.*&#34;, glob = true},&#xA;    }&#xA;}&#xA;&#xA;-- The above table will is the default configuration.&#xA;-- If you do not wish to set any configuration options, you can simply&#xA;-- pass nil into your setup&#xA;require(&#34;sunglasses&#34;).setup()&#xA;-- Or you can provide your own values. Please configure your&#xA;-- options by looking at each option available and setting it&#xA;require(&#34;sunglasses&#34;).setup({&#xA;    filter_percent = 0.65,&#xA;    filter_type = &#34;SHADE&#34;,&#xA;    log_level = &#34;ERROR&#34;,&#xA;    refresh_timer = 5,&#xA;    excluded_filetypes = {&#xA;        &#34;dashboard&#34;,&#xA;        &#34;lspsagafinder&#34;,&#xA;        &#34;packer&#34;,&#xA;        &#34;checkhealth&#34;,&#xA;        &#34;mason&#34;,&#xA;        &#34;NvimTree&#34;,&#xA;        &#34;neo-tree&#34;,&#xA;        &#34;plugin&#34;,&#xA;        &#34;lazy&#34;,&#xA;        &#34;TelescopePrompt&#34;,&#xA;        &#34;alpha&#34;,&#xA;        &#34;toggleterm&#34;,&#xA;        &#34;sagafinder&#34;,&#xA;        &#34;better_term&#34;,&#xA;        &#34;fugitiveblame&#34;,&#xA;        &#34;starter&#34;,&#xA;        &#34;NeogitPopup&#34;,&#xA;        &#34;NeogitStatus&#34;,&#xA;        &#34;DiffviewFiles&#34;,&#xA;        &#34;DiffviewFileHistory&#34;,&#xA;        &#34;DressingInput&#34;,&#xA;        &#34;spectre_panel&#34;,&#xA;        &#34;zsh&#34;,&#xA;        &#34;registers&#34;,&#xA;        &#34;startuptime&#34;,&#xA;        &#34;OverseerList&#34;,&#xA;        &#34;Navbuddy&#34;,&#xA;        &#34;noice&#34;,&#xA;        &#34;notify&#34;,&#xA;        &#34;saga_codeaction&#34;,&#xA;        &#34;sagarename&#34;&#xA;    },&#xA;    excluded_highlights = {&#xA;        &#34;WinSeparator&#34;,&#xA;        {&#34;lualine_.*&#34;, glob = true},&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Config.filter_percent&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Default: .65&lt;/p&gt; &#xA;&lt;p&gt;This is the percentage to modify inactive buffer&#39;s highlights. This value must be between 0 and 1 and is clamped as such. An example of how to use this is as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;local sunglasses_options = {&#xA;    filter_percent = 0.65&#xA;}&#xA;&#xA;require(&#34;sunglasses&#34;).setup(sunglasses_options)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Config.filter_type&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Version Updated: 0.2.01&lt;br&gt; Default: &#34;SHADE&#34;&lt;/p&gt; &#xA;&lt;p&gt;This is the kind of filter to apply to inactive buffers. Valid filter_types are&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;SHADE&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;TINT&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;NOSYNTAX&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;SHADE&lt;/h4&gt; &#xA;&lt;p&gt;Darkens the inactive buffer&#39;s highlights&lt;/p&gt; &#xA;&lt;h4&gt;TINT&lt;/h4&gt; &#xA;&lt;p&gt;Brightens the inactive buffers highlights&lt;/p&gt; &#xA;&lt;h4&gt;NOSYNTAX&lt;/h4&gt; &#xA;&lt;p&gt;Disables syntax highlighting on the inactive buffer.&lt;/p&gt; &#xA;&lt;p&gt;An example of how to use this is as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;local sunglasses_options = {&#xA;    filter_type = &#34;SHADE&#34;&#xA;}&#xA;&#xA;require(&#34;sunglasses&#34;).setup(sunglasses_options)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Config.log_level&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Default: &#34;ERROR&#34;&lt;/p&gt; &#xA;&lt;p&gt;This is the level to filter all logs against. This means that logs with a level under &#34;ERROR&#34; will not be written to the file. If you are looking to submit a bug report, please set this to a lower level.&lt;/p&gt; &#xA;&lt;p&gt;Your sunglasses log can be located with the following command&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;print(vim.fn.stdpath(&#39;log&#39;) .. &#39;/sunglasses.log&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Below are a list of valid log levels (in filter order). Anything lower than the level in this list will be filtered at that level. As an example, with a level of &#34;ERROR&#34; (the default), logs of level &#34;WARNING&#34; will be filtered&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;CRITICAL&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;ERROR&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;WARNING&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;INFO&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;DEBUG&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;TRACE&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;TRACE2&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;TRACE3&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;**** Be aware, any of the trace levels will very quickly produce lots of logs&lt;/p&gt; &#xA;&lt;p&gt;An example of how to set this is as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;local sunglasses_options = {&#xA;    filter_level = &#34;ERROR&#34;&#xA;}&#xA;require(&#34;sunglasses&#34;).setup(sunglasses_options)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Config.refresh_timer&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Default: 5&lt;/p&gt; &#xA;&lt;p&gt;This tells sunglasses how often (in seconds) to refresh its internal highlights cache. This is how sunglasses is able to deal with highlight groups that are dynamically created over time.&lt;/p&gt; &#xA;&lt;p&gt;An example of how to set this is as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;local sunglasses_options = {&#xA;    refresh_timer = 5&#xA;}&#xA;require(&#34;sunglasses&#34;).setup(refresh_timer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Config.excluded_filetypes&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;{&#xA;    &#34;dashboard&#34;,&#xA;    &#34;lspsagafinder&#34;,&#xA;    &#34;packer&#34;,&#xA;    &#34;checkhealth&#34;,&#xA;    &#34;mason&#34;,&#xA;    &#34;NvimTree&#34;,&#xA;    &#34;neo-tree&#34;,&#xA;    &#34;plugin&#34;,&#xA;    &#34;lazy&#34;,&#xA;    &#34;TelescopePrompt&#34;,&#xA;    &#34;alpha&#34;,&#xA;    &#34;toggleterm&#34;,&#xA;    &#34;sagafinder&#34;,&#xA;    &#34;better_term&#34;,&#xA;    &#34;fugitiveblame&#34;,&#xA;    &#34;starter&#34;,&#xA;    &#34;NeogitPopup&#34;,&#xA;    &#34;NeogitStatus&#34;,&#xA;    &#34;DiffviewFiles&#34;,&#xA;    &#34;DiffviewFileHistory&#34;,&#xA;    &#34;DressingInput&#34;,&#xA;    &#34;spectre_panel&#34;,&#xA;    &#34;zsh&#34;,&#xA;    &#34;registers&#34;,&#xA;    &#34;startuptime&#34;,&#xA;    &#34;OverseerList&#34;,&#xA;    &#34;Navbuddy&#34;,&#xA;    &#34;noice&#34;,&#xA;    &#34;notify&#34;,&#xA;    &#34;saga_codeaction&#34;,&#xA;    &#34;sagarename&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is a list of filetypes to be excluded when shading inactive windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are making changes to this table, consider submitting a PR to&lt;/strong&gt; &lt;strong&gt;update it for everyone instead!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;An example of how to set this is as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;local sunglasses_options = {&#xA;    excluded_filetypes = {&#xA;        &#34;lazy&#34;&#xA;    }&#xA;}&#xA;require(&#34;sunglasses&#34;).setup(sunglasses_options)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Config.excluded_highlights&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;{&#xA;    &#34;WinSeparator&#34;,&#xA;    {&#34;lualine_.*&#34;, glob = true},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is a list of highlights to exclude modifying on inactive windows.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you are making changes to this table, consider submitting a PR to&lt;/strong&gt; &lt;strong&gt;update it for everyone instead!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Entries in this table can be either a string or a table (as shown above). If its a string, it is treated as the exact name of the highlight to exclude. If it is in table form (and has the &lt;code&gt;glob = true&lt;/code&gt; value in the table), then it is treated as a glob in which all highlights that &lt;em&gt;match&lt;/em&gt; the glob are excluded.&lt;/p&gt; &#xA;&lt;p&gt;You may be wondering why lualine is included here. It seems that vim will apply the namespace highlight to lualine in the event that all other windows in the tabpage are already in that namespace. That makes lualine look super weird, so this fixes that.&lt;/p&gt; &#xA;&lt;p&gt;An example of how to set this is as follows&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua&#xA;local sunglasses_options = {&#xA;    excluded_highlights = {&#xA;        &#34;WinSeparator&#34;&#xA;    }&#xA;}&#xA;require(&#34;sunglasses&#34;).setup(sunglasses_options)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;h3&gt;:SunglassesOn&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Valid Args: false, true&lt;br&gt; Related: &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassesoff&#34;&gt;SunglassesOff&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command SunglassesOn will shade the buffer your cursor is currently in.&lt;/p&gt; &#xA;&lt;p&gt;If true is passed with the command, this will force shade the buffer. This means that if the filetype of the buffer is marked as excluded, the buffer will still be shaded. This force is only temporary however. In general this means that if a window contains an excluded filetype and you force shade it, the shade will only last until the next time sunglasses attempts to shade the buffer, in which case it will not be shaded.&lt;/p&gt; &#xA;&lt;h3&gt;:SunglassesOff&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Related: &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglasseson&#34;&gt;SunglassesOn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command SunglassesOff will unshade the buffer your cursor is currently in.&lt;/p&gt; &#xA;&lt;h3&gt;:SunglassesEnable&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Related: &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassesdisable&#34;&gt;SunglassesDisable&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command SunglassesEnable will shade all inactive buffers (while obeying excluded filetypes)&lt;/p&gt; &#xA;&lt;h3&gt;:SunglassesDisable&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Related: &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassesenable&#34;&gt;SunglassesEnable&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command SunglassesDisable will unshade all buffers&lt;/p&gt; &#xA;&lt;h3&gt;:SunglassesRefresh&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.1&lt;br&gt; Related: &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#configrefreshtimer&#34;&gt;Config.refresh_timer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command to manually refresh the highlight groups modified by sunglasses. Note, sunglasses by default refreshes its highlights based on &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#configrefreshtimer&#34;&gt;Config.refresh_timer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;:SunglassesPause&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.2&lt;br&gt; Related: &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassesresume&#34;&gt;SunglassesResume&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassesdisable&#34;&gt;SunglassesDisable&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassesoff&#34;&gt;SunglassesOff&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command to manually exclude the window under the cursor from Sunglasses Auto Adjuster. This does &lt;em&gt;not&lt;/em&gt; persist through sessions&lt;/p&gt; &#xA;&lt;h3&gt;:SunglassesResume&lt;/h3&gt; &#xA;&lt;p&gt;Version Added: 0.2&lt;br&gt; Related: &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassespause&#34;&gt;SunglassesPause&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassesenable&#34;&gt;SunglassesEnable&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglasseson&#34;&gt;SunglassesOn&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Command to manually unexclude (note, not the same as &#34;include&#34;) the window under the cursor, allowing Sunglasses Auto Adjuster to continue adjusting it on window leave.&lt;/p&gt; &#xA;&lt;p&gt;Why is unexclude not the same as include? Well include would suggest that the window under the cursor will now be shaded on window leave, which is not the case. For that, you will need &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglasseson&#34;&gt;SunglassesOn&lt;/a&gt;. This simply undoes the pause set by &lt;a href=&#34;https://raw.githubusercontent.com/miversen33/sunglasses.nvim/main/#sunglassespause&#34;&gt;SunglassesPause&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sunjon/Shade.nvim&#34;&gt;Shade.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/levouh/tint.nvim&#34;&gt;tint.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/nvim&#34;&gt;catppuccin/nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>boltlessengineer/smart-tab.nvim</title>
    <updated>2023-11-03T01:34:01Z</updated>
    <id>tag:github.com,2023-11-03:/boltlessengineer/smart-tab.nvim</id>
    <link href="https://github.com/boltlessengineer/smart-tab.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easily jump to the end of current node.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;smart-tab.nvim&lt;/h1&gt; &#xA;&lt;p&gt;simple plugin implements smart-tab feature from &lt;a href=&#34;https://helix-editor.com/news/release-23-10-highlights/#smart-tab&#34;&gt;Helix 23.10&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Smart Tab is a new feature bound to the tab key in the default keymap. When you press tab and the line to the left of the cursor isn&#39;t all whitespace, the cursor will jump to the end of the syntax tree&#39;s parent node.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;This is useful in languages like Nix for adding semicolons at the end of an attribute set or jumping to the end of a block in a C-like language&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Note for differences&lt;/h2&gt; &#xA;&lt;p&gt;I haven&#39;t used or looked inside helix&#39;s implementation. I just borrowed the idea, so behavior might differ from Helix&#39;s. Let me know if you have any suggestions for improvement.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;smart-tab&#39;).setup({&#xA;    -- default options:&#xA;    -- list of tree-sitter node types to filter&#xA;    skips = { &#34;string_content&#34; },&#xA;    -- default mapping, set `false` if you don&#39;t want automatic mapping&#xA;    mapping = &#34;&amp;lt;tab&amp;gt;&#34;,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manual Keymap&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.keymap.set(&#34;i&#34;, &#34;&amp;lt;tab&amp;gt;&#34;, &#34;&amp;lt;plug&amp;gt;(smart-tab)&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;NOTE: this won&#39;t fallback to &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; on blank line&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Press &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; on insert mode.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If cursor is at non-blank line, cursor jumps to end of the current node&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;If current node type is in &lt;code&gt;skips&lt;/code&gt;, cursor jumps to end of it&#39;s parrent node&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;If cursor is at blank line, literal &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; is inserted&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Examples&lt;/h3&gt; &#xA;&lt;p&gt;Normal smart-tab.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;let obj = {&#xA;    key = 1,| // &amp;lt;- press &amp;lt;tab&amp;gt; here&#xA;}&#xA;let obj = {&#xA;    key = 1,&#xA;}| // &amp;lt;- cursor moves to here&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Smart tab with skipping some node types.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;let str = &#34;abc|de&#34;&#xA;//            ^ press &amp;lt;tab&amp;gt; here&#xA;let str = &#34;abcde&#34;|&#xA;//               ^ cursor moves to here (skipping `string_content` node)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can still insert &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; on blank line.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;let example3 = {&#xA;| // &amp;lt;- press &amp;lt;tab&amp;gt; in blank line&#xA;}&#xA;let example3 = {&#xA;    | // literal `&amp;lt;tab&amp;gt;` is inserted&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>