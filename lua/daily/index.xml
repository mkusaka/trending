<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-14T01:52:22Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CallMeDaddyBro/EthicalPixel-Admin</title>
    <updated>2022-06-14T01:52:22Z</updated>
    <id>tag:github.com,2022-06-14:/CallMeDaddyBro/EthicalPixel-Admin</id>
    <link href="https://github.com/CallMeDaddyBro/EthicalPixel-Admin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;EthicalPixel Admin menu&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>glepnir/dashboard-nvim</title>
    <updated>2022-06-14T01:52:22Z</updated>
    <id>tag:github.com,2022-06-14:/glepnir/dashboard-nvim</id>
    <link href="https://github.com/glepnir/dashboard-nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;vim dashboard&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;30&#34; width=&#34;0px&#34;&gt; Fancy And Fastest Start Screen Plugin of Neovim &lt;img src=&#34;https://raw.githubusercontent.com/catppuccin/catppuccin/main/assets/misc/transparent.png&#34; height=&#34;30&#34; width=&#34;0px&#34;&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/glepnir/nvim/stargazers&#34;&gt; &lt;img alt=&#34;Stargazers&#34; src=&#34;https://img.shields.io/github/stars/glepnir/dashboard-nvim?style=for-the-badge&amp;amp;logo=starship&amp;amp;color=c678dd&amp;amp;logoColor=d9e0ee&amp;amp;labelColor=282a36&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/glepnir/nvim/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/glepnir/dashboard-nvim?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;color=f0c062&amp;amp;logoColor=d9e0ee&amp;amp;labelColor=282a36&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/glepnir/dashboard-nvim/contributors&#34;&gt; &lt;img alt=&#34;Contributors&#34; src=&#34;https://img.shields.io/github/contributors/glepnir/dashboard-nvim?style=for-the-badge&amp;amp;logo=opensourceinitiative&amp;amp;color=abcf84&amp;amp;logoColor=d9e0ee&amp;amp;labelColor=282a36&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/41671631/173181227-dd8f46c3-0aae-444a-b2e8-fe8ed592e28f.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Packer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;packer.use {&#39;glepnir/dashboard-nvim&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Option&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local db = require(&#39;dashboard&#39;)&#xA;db.custom_header  -- type can be nil,table or function(must be return table in function)&#xA;                  -- if not config will use default banner&#xA;db.custom_center  -- table type and in this table you can set icon,desc,shortcut,action keywords. desc must be exist and type is string&#xA;                  -- icon type is nil or string&#xA;                  -- shortcut type is nil or string also like icon&#xA;                  -- action type can be string or function or nil.&#xA;                  -- if you don&#39;t need any one of icon shortcut action ,you can ignore it.&#xA;db.custom_footer  -- type can be nil,table or function(must be return table in function)&#xA;db.preview_file_Path    -- string type &#xA;db.preview_file_height  -- string type&#xA;db.preview_file_width   -- string type&#xA;db.preview_command      -- string type&#xA;db.hide_statusline      -- boolean default is true.it will hide statusline in dashboard buffer and auto open in other buffer&#xA;db.hide_tabline         -- boolean default is true.it will hide tabline in dashboard buffer and auto open in other buffer&#xA;&#xA;-- example of db.custom_center for new lua coder,the value of nil mean if you&#xA;-- don&#39;t need this filed you can not write it&#xA;db.custom_center = {&#xA;  { icon = &#39;some icon&#39; desc = &#39;some description here&#39; } --correct if you don&#39;t action filed&#xA;  { desc = &#39;some description here&#39; }                    --correct if you don&#39;t action and icon filed&#xA;  { desc = &#39;some description here&#39; action = &#39;Telescope find files&#39;} --correct if you don&#39;t icon filed&#xA;}&#xA;&#xA;-- Highlight Group&#xA;DashboardHeader DashboardCenter DashboardCenterIcon DashboardShortCut DashboardFooter&#xA;&#xA;-- Command&#xA;&#xA;DahboardNewFile  -- if you like use `enew` to create file,Please use this command,it&#39;s wrap enew and restore the statsuline and tabline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ascii Header Examples&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;ve collected some header texts in the &lt;a href=&#34;https://github.com/glepnir/dashboard-nvim/wiki/Ascii-Header-Text&#34;&gt;wiki&lt;/a&gt;. You can view previews of them &lt;a href=&#34;https://github.com/glepnir/dashboard-nvim/wiki/Header-Preview&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;How to achieve the dashboard like in the screenshot?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;You need install &lt;code&gt;lolcat&lt;/code&gt; and pass it this Ascii logo (Thanks &lt;a href=&#34;https://github.com/sunjon&#34;&gt;@sunjon&lt;/a&gt;, which you can find &lt;a href=&#34;https://github.com/glepnir/dashboard-nvim/wiki/Ascii-Header-Text&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;  local home = os.getenv(&#39;HOME&#39;)&#xA;  local db = require(&#39;dashboard&#39;)&#xA;  db.preview_command = &#39;cat | lolcat -F 0.3&#39;&#xA;  db.preview_file_path = home .. &#39;/.config/nvim/static/neovim.cat&#39;&#xA;  db.preview_file_height = 12&#xA;  db.preview_file_width = 80&#xA;  db.custom_center = {&#xA;      {icon = &#39;Ôë§  &#39;,&#xA;      desc = &#39;Recently laset session                  &#39;,&#xA;      shortcut = &#39;SPC s l&#39;,&#xA;      action =&#39;SessionLoad&#39;},&#xA;      {icon = &#39;Ôú°  &#39;,&#xA;      desc = &#39;Recently opened files                   &#39;,&#xA;      action =  &#39;DashboardFindHistory&#39;,&#xA;      shortcut = &#39;SPC f h&#39;},&#xA;      {icon = &#39;ÔÖú  &#39;,&#xA;      desc = &#39;Find  File                              &#39;,&#xA;      action = &#39;Telescope find_files find_command=rg,--hidden,--files&#39;,&#xA;      shortcut = &#39;SPC f f&#39;},&#xA;      {icon = &#39;Ôêì  &#39;,&#xA;      desc =&#39;File Browser                            &#39;,&#xA;      action =  &#39;Telescope file_browser&#39;,&#xA;      shortcut = &#39;SPC f b&#39;},&#xA;      {icon = &#39;ÔÜö  &#39;,&#xA;      desc = &#39;Find  word                              &#39;,&#xA;      aciton = &#39;DashboardFindWord&#39;,&#xA;      shortcut = &#39;SPC f w&#39;},&#xA;      {icon = &#39;Ôê•  &#39;,&#xA;      desc = &#39;Open Personal dotfiles                  &#39;,&#xA;      action = &#39;Telescope dotfiles path=&#39; .. home ..&#39;/.dotfiles&#39;,&#xA;      shortcut = &#39;SPC f d&#39;},&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;How to work with indentLine plugin?&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you installed some indentline plugin. you need to set it to ignore the filetype &lt;code&gt;dashboard&lt;/code&gt;. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;vim.g.indentLine_fileTypeExclude = { &#39;dashboard&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or in a &lt;code&gt;plugins.lua&lt;/code&gt; config context:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#34;lukas-reineke/indent-blankline.nvim&#34;,&#xA;  config = function()&#xA;    require(&#34;indent_blankline&#34;).setup { filetype_exclude = { &#34;dashboard&#34; }&#xA;    }&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/bobbyhub&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PayPal-00457C?style=for-the-badge&amp;amp;logo=paypal&amp;amp;logoColor=white&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to support my work financially, buy me a drink through &lt;a href=&#34;https://paypal.me/bobbyhub&#34;&gt;paypal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>EdenEast/nightfox.nvim</title>
    <updated>2022-06-14T01:52:22Z</updated>
    <id>tag:github.com,2022-06-14:/EdenEast/nightfox.nvim</id>
    <link href="https://github.com/EdenEast/nightfox.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶äA highly customizable theme for vim and neovim with support for lsp, treesitter and a variety of plugins.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Nightfox&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/edeneast/nightfox.nvim/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/edeneast/nightfox.nvim?colorA=192330&amp;amp;colorB=719cd6&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/edeneast/nightfox.nvim/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/edeneast/nightfox.nvim?colorA=192330&amp;amp;colorB=dbc074&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/edeneast/nightfox.nvim/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/edeneast/nightfox.nvim?colorA=192330&amp;amp;colorB=81b29a&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/edeneast/nightfox.nvim?colorA=192330&amp;amp;colorB=9d79d6&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A highly customizable theme for vim and neovim with support for lsp, treesitter and a variety of plugins. &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt;Nightfox&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/2746374/158456286-9e3ee657-60e6-49d8-b85e-dcab285b31c3.png&#34; alt=&#34;nightfox&#34; style=&#34;border-radius:1%&#34;&gt; &#xA; &lt;h3&gt;Dayfox&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/2746374/158456281-e8a968c0-e282-4943-b919-3d8454ca0529.png&#34; alt=&#34;dayfox&#34; style=&#34;border-radius:1%&#34;&gt; &#xA; &lt;h3&gt;Dawnfox&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/2746374/158456278-c5d656de-c445-44b8-9813-9fc91ffbce4c.png&#34; alt=&#34;dawnfox&#34; style=&#34;border-radius:1%&#34;&gt; &#xA; &lt;h3&gt;Duskfox&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/2746374/158456284-b6ff583f-c0bb-417c-b2d5-60b8364049a7.png&#34; alt=&#34;duskfox&#34; style=&#34;border-radius:1%&#34;&gt; &#xA; &lt;h3&gt;Nordfox&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/2746374/158456289-eee096df-7ea7-4161-9199-808fdba58e06.png&#34; alt=&#34;nordfox&#34; style=&#34;border-radius:1%&#34;&gt; &#xA; &lt;h3&gt;Terafox&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/2746374/160268126-cd417690-3660-4a04-9040-183c35f127f7.png&#34; alt=&#34;terafox&#34; style=&#34;border-radius:1%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Tabline is &lt;a href=&#34;https://github.com/nanozuki/tabby.nvim&#34;&gt;tabby.nvim&lt;/a&gt; and statusline is &lt;a href=&#34;https://github.com/feline-nvim/feline.nvim&#34;&gt;feline.nvim&lt;/a&gt;. You can find my config for &lt;a href=&#34;https://github.com/EdenEast/nyx/raw/573ff3f22da95c00ec71a094b3e1ec166c0afcdd/config/.config/nvim/lua/eden/modules/ui/tabby.lua&#34;&gt;tabby&lt;/a&gt; and &lt;a href=&#34;https://github.com/EdenEast/nyx/raw/573ff3f22da95c00ec71a094b3e1ec166c0afcdd/config/.config/nvim/lua/eden/modules/ui/feline/init.lua&#34;&gt;feline&lt;/a&gt; here as well as the auto generated &lt;a href=&#34;https://github.com/EdenEast/nyx/raw/573ff3f22da95c00ec71a094b3e1ec166c0afcdd/config/.config/nvim/lua/eden/modules/ui/colors.lua&#34;&gt;highlight&lt;/a&gt; groups here.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Notice ‚ÑπÔ∏è&lt;/h2&gt; &#xA;&lt;p&gt;Nightfox has recently been &lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim/pull/77&#34;&gt;rewritten&lt;/a&gt; and has depricated most of the previous interface. If you are not ready to update yet you can point your package manager to use the tag &lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim/tree/v1.0.0&#34;&gt;&lt;code&gt;v1.0.0&lt;/code&gt;&lt;/a&gt; for the mean time.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Plugin Managers&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use { &#34;EdenEast/nightfox.nvim&#34;, tag = &#34;v1.0.0&#34; } -- Packer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;EdenEast/nightfox.nvim&#39;, { &#39;tag&#39;: &#39;v1.0.0&#39; } &#34; Vim-Plug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Changes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nightfox.load()&lt;/code&gt; has been removed in favour of setting colorschemes using the builtin &lt;code&gt;:colorscheme&lt;/code&gt; command&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nightfox.setup()&lt;/code&gt; function now takes configuration options as an optional key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fox&lt;/code&gt; has been removed in favour of setting colorschemes using the builtin &lt;code&gt;:colorscheme&lt;/code&gt; command&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;transparent&lt;/code&gt; has been moved to &lt;code&gt;options.transparent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;terminal_color&lt;/code&gt; has been moved to &lt;code&gt;options.terminal_color&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;alt_nc&lt;/code&gt; has been moved to &lt;code&gt;options.dim_inactive&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;styles&lt;/code&gt; has been moved to &lt;code&gt;options.styles&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;inverse&lt;/code&gt; has been moved to &lt;code&gt;options.inverse&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;colors&lt;/code&gt; has been replaced with the concept of &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#palettes&#34;&gt;palettes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hlgroups&lt;/code&gt; has been replaced with the concept of &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#customize-palettes-and-groups&#34;&gt;groups&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Color Migration table&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;V1 color&lt;/th&gt; &#xA;    &lt;th&gt;V2 palette&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bg&lt;/td&gt; &#xA;    &lt;td&gt;bg1&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bg_alt&lt;/td&gt; &#xA;    &lt;td&gt;bg0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bg_sidebar&lt;/td&gt; &#xA;    &lt;td&gt;bg0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bg_float&lt;/td&gt; &#xA;    &lt;td&gt;bg0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bg_popup&lt;/td&gt; &#xA;    &lt;td&gt;bg0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bg_highlight&lt;/td&gt; &#xA;    &lt;td&gt;bg3&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bg_visual&lt;/td&gt; &#xA;    &lt;td&gt;sel0&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;bg_search&lt;/td&gt; &#xA;    &lt;td&gt;sel1&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;fg&lt;/td&gt; &#xA;    &lt;td&gt;fg1&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;fg_alt&lt;/td&gt; &#xA;    &lt;td&gt;fg2&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;fg_gutter&lt;/td&gt; &#xA;    &lt;td&gt;fg3&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support both vim and neovim&lt;/li&gt; &#xA; &lt;li&gt;Highly configurable with template overriding&lt;/li&gt; &#xA; &lt;li&gt;Support for multiple &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#supported-plugins&#34;&gt;plugins&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#status-lines&#34;&gt;status lines&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;And many others should &#34;just work&#34;!&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#compile&#34;&gt;Compile&lt;/a&gt; user&#39;s configuration&lt;/li&gt; &#xA; &lt;li&gt;Export &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#color-lib&#34;&gt;Color&lt;/a&gt; library utility&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#interactive&#34;&gt;Interactive&lt;/a&gt; live config realoading&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.5 &lt;strong&gt;or&lt;/strong&gt; Vim 8.2 with lua &amp;gt;= 5.2&lt;/li&gt; &#xA; &lt;li&gt;True color support&lt;/li&gt; &#xA; &lt;li&gt;Undercurl terminal support (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note for MacOS: The default &lt;code&gt;terminal&lt;/code&gt; does not support &lt;code&gt;true color&lt;/code&gt;. Use either &lt;code&gt;Iterm2&lt;/code&gt; or &lt;a href=&#34;https://gist.github.com/XVilka/8346728#terminal-emulators&#34;&gt;another&lt;/a&gt; terminal that supports true color.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Download with your favorite package manager.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use &#34;EdenEast/nightfox.nvim&#34; -- Packer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;EdenEast/nightfox.nvim&#39; &#34; Vim-Plug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Simply set the colorscheme with the builtin command &lt;code&gt;:colorscheme&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;colorscheme nightfox&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd(&#34;colorscheme nightfox&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;There is no need to call &lt;code&gt;setup&lt;/code&gt; if you don&#39;t require to change the default options and settings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Default options&#xA;require(&#39;nightfox&#39;).setup({&#xA;  options = {&#xA;    -- Compiled file&#39;s destination location&#xA;    compile_path = vim.fn.stdpath(&#34;cache&#34;) .. &#34;/nightfox&#34;,&#xA;    compile_file_suffix = &#34;_compiled&#34;, -- Compiled file suffix&#xA;    transparent = false,    -- Disable setting background&#xA;    terminal_colors = true, -- Set terminal colors (vim.g.terminal_color_*) used in `:terminal`&#xA;    dim_inactive = false,   -- Non focused panes set to alternative background&#xA;    styles = {              -- Style to be applied to different syntax groups&#xA;      comments = &#34;NONE&#34;,    -- Value is any valid attr-list value `:help attr-list`&#xA;      conditionals = &#34;NONE&#34;,&#xA;      constants = &#34;NONE&#34;,&#xA;      functions = &#34;NONE&#34;,&#xA;      keywords = &#34;NONE&#34;,&#xA;      numbers = &#34;NONE&#34;,&#xA;      operators = &#34;NONE&#34;,&#xA;      strings = &#34;NONE&#34;,&#xA;      types = &#34;NONE&#34;,&#xA;      variables = &#34;NONE&#34;,&#xA;    },&#xA;    inverse = {             -- Inverse highlight for different types&#xA;      match_paren = false,&#xA;      visual = false,&#xA;      search = false,&#xA;    },&#xA;    modules = {             -- List of various plugins and additional options&#xA;      -- ...&#xA;    },&#xA;  }&#xA;})&#xA;&#xA;-- setup must be called before loading&#xA;vim.cmd(&#34;colorscheme nightfox&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you would like to change any of the default options above you only have to define the options that change. If an option is not present in your options table the default option will be used. For example if chaning the styles of certain syntax is the only desired change then your options table would look like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;nightfox&#39;).setup({&#xA;  options = {&#xA;    styles = {&#xA;      comments = &#34;italic&#34;,&#xA;      keywords = &#34;bold&#34;,&#xA;      types = &#34;italic,bold&#34;,&#xA;    }&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To see a detailed explanation of nightfox&#39;s config settings consult either the builtin help &lt;code&gt;:help nightfox&lt;/code&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/usage.md&#34;&gt;Usage&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Modules&lt;/h3&gt; &#xA;&lt;p&gt;Nightfox&#39;s modules store configuration information for various plugins and other neovim modules. To enable a module either set the module to &lt;code&gt;true&lt;/code&gt; or if the module has additional configuration information set &lt;code&gt;enable&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To see a list of modules check, see &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/usage.md#module&#34;&gt;Usage&lt;/a&gt; or &lt;code&gt;:help&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;h3&gt;Customize palettes and groups&lt;/h3&gt; &#xA;&lt;p&gt;You can change the color &lt;code&gt;palette&lt;/code&gt; and the highlight &lt;code&gt;group&lt;/code&gt; of nightfox. Here is a brief example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Palettes are the base color defines of a colorscheme.&#xA;-- You can override these palettes for each colorscheme defined by nightfox.&#xA;local palettes = {&#xA;  -- Everything defined under `all` will be applied to each style.&#xA;  all = {&#xA;    -- Each palette defines these colors:&#xA;    --   black, red, green, yellow, blue, magenta, cyan, white, orange, pink&#xA;    --&#xA;    -- These colors have 3 shades: base, bright, and dim&#xA;    --&#xA;    -- Defining just a color defines it&#39;s base color&#xA;    red = &#34;#ff0000&#34;,&#xA;  },&#xA;  nightfox = {&#xA;    -- A specific style&#39;s value will be used over the `all`&#39;s value&#xA;    red = &#34;#c94f6d&#34;,&#xA;  },&#xA;  dayfox = {&#xA;    -- Defining multiple shades is done by passing a table&#xA;    blue = { base = &#34;#4d688e&#34;, bright = &#34;#4e75aa&#34;, dim = &#34;#485e7d&#34; },&#xA;  },&#xA;  nordfox = {&#xA;    -- A palette also defines the following:&#xA;    --   bg0, bg1, bg2, bg3, bg4, fg0, fg1, fg2, fg3, sel0, sel1, comment&#xA;    --&#xA;    -- These are the different foreground and background shades used by the theme.&#xA;    -- The base bg and fg is 1, 0 is normally the dark alternative. The others are&#xA;    -- incrementally lighter versions.&#xA;    bg1 = &#34;#2e3440&#34;,&#xA;&#xA;    -- sel is different types of selection colors.&#xA;    sel0 = &#34;#3e4a5b&#34;, -- Popup bg, visual selection bg&#xA;    sel1 = &#34;#4f6074&#34;, -- Popup sel bg, search bg&#xA;&#xA;    -- comment is the definition of the comment color.&#xA;    comment = &#34;#60728a&#34;,&#xA;  },&#xA;}&#xA;&#xA;-- Spec&#39;s (specifications) are a mapping of palettes to logical groups that will be&#xA;-- used by the groups. Some examples of the groups that specs map would be:&#xA;--   - syntax groups (functions, types, keywords, ...)&#xA;--   - diagnostic groups (error, warning, info, hints)&#xA;--   - git groups (add, removed, changed)&#xA;--&#xA;-- You can override these just like palettes&#xA;local specs = {&#xA;  -- As with palettes, the values defined under `all` will be applied to every style.&#xA;  all = {&#xA;    syntax = {&#xA;      -- Specs allow you to define a value using either a color or template. If the string does&#xA;      -- start with `#` the string will be used as the path of the palette table. Defining just&#xA;      -- a color uses the base version of that color.&#xA;      keyword = &#34;magenta&#34;,&#xA;&#xA;      -- Adding either `.bright` or `.dim` will change the value&#xA;      conditional = &#34;magenta.bright&#34;,&#xA;      number = &#34;orange.dim&#34;,&#xA;    },&#xA;    git = {&#xA;      -- A color define can also be used&#xA;      changed = &#34;#f4a261&#34;,&#xA;    },&#xA;  },&#xA;  nightfox = {&#xA;    syntax = {&#xA;      -- As with palettes, a specific style&#39;s value will be used over the `all`&#39;s value.&#xA;      operator = &#34;orange&#34;,&#xA;    },&#xA;  },&#xA;}&#xA;&#xA;-- Groups are the highlight group definitions. The keys of this table are the name of the highlight&#xA;-- groups that will be overridden. The value is a table with the following values:&#xA;--   - fg, bg, style, sp, link,&#xA;--&#xA;-- Just like `spec` groups support templates. This time the template is based on a spec object.&#xA;local groups = {&#xA;  -- As with specs and palettes, the values defined under `all` will be applied to every style.&#xA;  all = {&#xA;    -- If `link` is defined it will be applied over any other values defined&#xA;    Whitespace = { link = &#34;Comment&#34; }&#xA;&#xA;    -- Specs are used for the template. Specs have their palette&#39;s as a field that can be accessed&#xA;    IncSearch = { bg = &#34;palette.cyan&#34; },&#xA;  },&#xA;  nightfox = {&#xA;    -- As with specs and palettes, a specific style&#39;s value will be used over the `all`&#39;s value.&#xA;    PmenuSel = { bg = &#34;#73daca&#34;, fg = &#34;bg0&#34; },&#xA;  },&#xA;}&#xA;&#xA;require(&#34;nightfox&#34;).setup({ palettes = palettes, specs = specs, groups = groups })&#xA;&#xA;-- setup must be called before loading&#xA;vim.cmd(&#34;colorscheme nightfox&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To find the list of syntax highlight groups defined for vim use the help &lt;code&gt;:help group-name&lt;/code&gt; and &lt;code&gt;:help nvim-treesitter-highlights&lt;/code&gt; for treesitter. If you would also like to see how nightfox defines these highlight groups you can see &lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim/raw/main/lua/nightfox/group/syntax.lua&#34;&gt;syntax.lua&lt;/a&gt; for vim&#39;s syntax and &lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim/raw/main/lua/nightfox/group/modules/treesitter.lua&#34;&gt;treesitter.lua&lt;/a&gt; for treesitter. These files list out all all highlight groups and have a comment describing them. Another file to note is &lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim/raw/main/lua/nightfox/group/editor.lua&#34;&gt;editor.lua&lt;/a&gt; which is the highlight groups respncible for how vim looks (background, cursorline, tabline, etc...). To get the highlight group under your cursor see &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#syntax-highlight-groups&#34;&gt;here&lt;/a&gt; for more information&lt;/p&gt; &#xA;&lt;p&gt;To get more information check out &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/usage.md#configuration&#34;&gt;Usage&lt;/a&gt; or the help file &lt;code&gt;:help nightfox&lt;/code&gt; for more detailed information.&lt;/p&gt; &#xA;&lt;h3&gt;Custom template values&lt;/h3&gt; &#xA;&lt;p&gt;Nightfox&#39;s &lt;code&gt;palettes&lt;/code&gt; and &lt;code&gt;specs&lt;/code&gt; can be extended with your own values. This is useful for users that want to distinguish a spec value being used for multiple group definitions. This is best understood with an example:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;bg0&lt;/code&gt; is used as the dark alternative background color. This is used in multiple areas (non-current file, status line, normal float, etc...). If you would like to have the inactive color diffferent then the float / statusline color you can define your own value in the &lt;code&gt;specs&lt;/code&gt; table.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;nightfox&#34;).setup({&#xA;  palettes = {&#xA;    -- Custom duskfox with black background&#xA;    duskfox = {&#xA;      bg1 = &#34;#000000&#34;, -- Black background&#xA;      bg0 = &#34;#1d1d2b&#34;, -- Alt backgrounds (floats, statusline, ...)&#xA;      bg3 = &#34;#121820&#34;, -- 55% darkened from stock&#xA;      sel0 = &#34;#131b24&#34;, -- 55% darkened from stock&#xA;    },&#xA;  },&#xA;  specs = {&#xA;    all = {&#xA;      inactive = &#34;bg0&#34;, -- Default value for other styles&#xA;    },&#xA;    duskfox = {&#xA;      inactive = &#34;#090909&#34;, -- Slightly lighter then black background&#xA;    },&#xA;  },&#xA;  groups = {&#xA;    all = {&#xA;      NormalNC = { fg = &#34;fg1&#34;, bg = &#34;inactive&#34; }, -- Non-current windows&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Api&lt;/h2&gt; &#xA;&lt;p&gt;Nightfox exposes some Api&#39;s and utility classes that let you fetch data from nightfox.&lt;/p&gt; &#xA;&lt;h3&gt;Palettes&lt;/h3&gt; &#xA;&lt;p&gt;You can get the palettes used by each colorscheme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Returns a table with each colorscheme and the palette associated with it&#xA;local palettes = require(&#39;nightfox.palette&#39;).load()&#xA;&#xA;-- Returns the palette of the specified colorscheme&#xA;local palette = require(&#39;nightfox.palette&#39;).load(&#34;nightfox&#34;)&#xA;&#xA;print(vim.inspect(palette.red))&#xA;-- {&#xA;--   base = &#34;#c94f6d&#34;,&#xA;--   bright = &#34;#d16983&#34;,&#xA;--   dim = &#34;#ab435d&#34;,&#xA;-- }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/usage.md#palette&#34;&gt;Usage&lt;/a&gt; for more information on palettes.&lt;/p&gt; &#xA;&lt;h3&gt;Specs&lt;/h3&gt; &#xA;&lt;p&gt;You can get the spec used by each colorscheme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Returns a table with each colorscheme and the spec associated with it&#xA;local specs require(&#39;nightfox.spec&#39;).load()&#xA;&#xA;-- Returns the spec of the specified colorscheme&#xA;local spec = require(&#39;nightfox.spec&#39;).load(&#34;nightfox&#34;)&#xA;&#xA;print(vim.inspect(spec.git))&#xA;-- {&#xA;--   add = &#34;#81b29a&#34;,&#xA;--   changed = &#34;#dbc074&#34;,&#xA;--   removed = &#34;#c94f6d&#34;&#xA;-- }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/usage.md#spec&#34;&gt;Usage&lt;/a&gt; for more information on specs.&lt;/p&gt; &#xA;&lt;h3&gt;Color lib&lt;/h3&gt; &#xA;&lt;p&gt;Nightfox uses a color library internally to manipulate colors. You can use this library as well.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local palette = require(&#39;nightfox.palette&#39;).load(&#39;nightfox&#39;)&#xA;local Color = require(&#34;nightfox.lib.color&#34;)&#xA;&#xA;local bg = Color.from_hex(palette.bg1)&#xA;local red = Color.from_hex(&#34;#ff0000&#34;)&#xA;&#xA;-- Blend the bg with red. The blend factor is from 0 to 1&#xA;-- with 0 being full bg and 1 being full red&#xA;local red_bg = bg:blend(red, 0.2)&#xA;&#xA;print(red_bg:to_css())&#xA;-- &#34;#471c26&#34;&#xA;&#xA;-- Brighten bg by adding 10 to the value of the color as a hsv&#xA;local alt_bg = bg:brighten(10)&#xA;print(vim.inspect(alt_bg:to_hsv()))&#xA;-- {&#xA;--   hue = 213.91304347826,&#xA;--   saturation = 47.916666666667,&#xA;--   value = 28.823529411765&#xA;-- }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are a lot of useful functions to manipulate and work with colors in different color spaces. See &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/usage.md#color&#34;&gt;Usage&lt;/a&gt; for more information on &lt;code&gt;Color&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compile&lt;/h2&gt; &#xA;&lt;p&gt;Nightfox is a highly customizable and configurable colorscheme. There are endless ways to customize nightfox. This does however come at the cost of complexity and execution time. Nightfox can pre compute the results of your configuration and store the results in a compiled lua file. After nightfox use these precached values to set it&#39;s highlights.&lt;/p&gt; &#xA;&lt;p&gt;By default nightfox writes the compiled results into the system&#39;s &lt;code&gt;cache&lt;/code&gt; directory. On unix this is &lt;code&gt;$XDG_CACHE_HOME/nvim/nightfox&lt;/code&gt; and on windows this is &lt;code&gt;%localappdata%\\Temp\\nvim\\nightfox&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Nightfox provides functions to work with the nightfox compiler.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local nightfox = require(&#39;nightfox&#39;)&#xA;&#xA;-- Create/update the compile files&#xA;nightfox.compile()&#xA;&#xA;-- Delete compiled files&#xA;nightfox.clean()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Nightfox provides the following commands that wrap these functions above:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;:NightfoxCompile&#xA;:NightfoxClean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Interactive&lt;/h2&gt; &#xA;&lt;p&gt;Nightfox makes it easy to make changes to its config and see the results. For this nightfox exposes the command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;NightfoxInteractive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will attach an autocmd to the current buffer that executes on &lt;code&gt;BufferWritePost&lt;/code&gt;. The autocmd will clear nightfox&#39;s internal state and re-source it&#39;s config from the newly saved file. It will then reset the colorscheme.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2746374/163106922-aa7a2f40-0c67-4aed-addc-5c4444c3a814.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;There are a few things to note:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enabling interactive mode will clean any &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/#compile&#34;&gt;compiled&lt;/a&gt; files.&lt;/li&gt; &#xA; &lt;li&gt;This requires executing &lt;code&gt;luafile&lt;/code&gt; on the current file. Any syntax errors will throw errors.&lt;/li&gt; &#xA; &lt;li&gt;If you are using packer and have nightfox&#39;s config in a &lt;code&gt;config = function() end&lt;/code&gt; block, this will not work as packer would require to be re-compiled and the compiled file sourced.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stevearc/aerial.nvim&#34;&gt;aerial.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/romgrk/barbar.nvim&#34;&gt;barbar.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-dap-ui&#34;&gt;nvim-dap-ui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/dashboard-nvim&#34;&gt;dashboard-nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lambdalisue/fern.vim&#34;&gt;fern.vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/j-hui/fidget.nvim&#34;&gt;fidget.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/airblade/vim-gitgutter&#34;&gt;vim-gitgutter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lambdalisue/glyph-palette.vim&#34;&gt;glyph-palette.vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phaazon/hop.nvim&#34;&gt;hop.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RRethy/vim-illuminate&#34;&gt;vim-illuminate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggandor/lightspeed.nvim&#34;&gt;lightspeed.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/lspsaga.nvim&#34;&gt;lspsaga.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simrat39/lsp-trouble.nvim&#34;&gt;lsp-trouble.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mvllow/modes.nvim&#34;&gt;modes.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TimUntersberger/neogit&#34;&gt;neogit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;neo-tree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim-notify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-tree.lua&#34;&gt;nvim-tree.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rlane/pounce.nvim&#34;&gt;pounce.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/justinmk/vim-sneak&#34;&gt;vim-sneak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simrat39/symbols-outline.nvim&#34;&gt;symbols-outline.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/p00f/nvim-ts-rainbow&#34;&gt;nvim-ts-rainbow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;which-key.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Status lines&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;Lualine&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Lualine checks the value of &lt;code&gt;vim.g.colors_name&lt;/code&gt; (set when using &lt;code&gt;:colorscheme&lt;/code&gt; command) to determine the theme to load. Set your colorscheme before calling setup.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd(&#34;colorscheme nightfox&#34;)&#xA;require(&#39;lualine&#39;).setup({ ... })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/itchyny/lightline.vim&#34;&gt;Lightline&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Lightline check the value of &lt;code&gt;vim.g.lightline.colorscheme&lt;/code&gt;. It is not depend on the value of &lt;code&gt;:colorscheme&lt;/code&gt; command, Please set it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd(&#34;colorscheme nightfox&#34;)&#xA;vim.g.lightline = { colorscheme = &#34;nightfox&#34; } -- Or the name of colorscheme you use&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Syntax highlight groups&lt;/h2&gt; &#xA;&lt;p&gt;This section will help you determine what highlight group is being applied to a piece of syntax. These sections will output the highlight group for the value under the cursor.&lt;/p&gt; &#xA;&lt;h4&gt;Treesitter highlighting&lt;/h4&gt; &#xA;&lt;p&gt;If treesitter is the highlighting method for the language in question you can use the command: &lt;code&gt;:TSHighlightCapturesUnderCursor&lt;/code&gt;. This command comes from the treesitter &lt;a href=&#34;https://github.com/nvim-treesitter/playground#show-treesitter-and-syntax-highlight-groups-under-the-cursor&#34;&gt;playground&lt;/a&gt; plugin. Make sure you have this installed as well as &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Vim highlighting&lt;/h4&gt; &#xA;&lt;p&gt;Add this vimscript function to your configuration.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;vimscript highlight function&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; plugin/syntax.vim&#xA;&#xA;&#34; Output the highlight group under the cursor&#xA;&#34;&#xA;&#34; This function will output the entire stack of hightlight groups being applied. The stack is&#xA;&#34; outputted in the correct order from top to bottom. Vim will walk through the stack from top to&#xA;&#34; bottom and apply the first defined highlight group found.&#xA;function! SynStack()&#xA;  for i1 in synstack(line(&#34;.&#34;), col(&#34;.&#34;))&#xA;    let i2 = synIDtrans(i1)&#xA;    let n1 = synIDattr(i1, &#34;name&#34;)&#xA;    let n2 = synIDattr(i2, &#34;name&#34;)&#xA;    echo n1 &#34;-&amp;gt;&#34; n2&#xA;  endfor&#xA;endfunction&#xA;&#xA;&#34; You can also create a convenience mapping&#xA;map &amp;lt;F2&amp;gt; &amp;lt;cmd&amp;gt;call SynStack()&amp;lt;cr&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Extra&lt;/h2&gt; &#xA;&lt;p&gt;There are &lt;a href=&#34;https://raw.githubusercontent.com/EdenEast/nightfox.nvim/main/extra&#34;&gt;extra&lt;/a&gt; configuration files for the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;alacritty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fishshell.com/&#34;&gt;fish&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iterm2.com/index.html&#34;&gt;iterm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sw.kovidgoyal.net/kitty/overview/#configuring-kitty&#34;&gt;kitty&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://konsole.kde.org/&#34;&gt;konsole&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;tmux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wezfurlong.org/wezterm/config/appearance.html#defining-a-color-scheme-in-a-separate-file&#34;&gt;wezterm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/Terminal&#34;&gt;windows terminal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/X_resources&#34;&gt;xresources&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/nvim/&#34;&gt;catppuccin&lt;/a&gt; (integration/modules)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rose-pine/nvim&#34;&gt;rose-pine&lt;/a&gt; (dawnfox/duskfox)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coolers.co&#34;&gt;coolers&lt;/a&gt; (useful color information and palette tool)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.colorhexa.com/&#34;&gt;colorhexa&lt;/a&gt; (detailed color information)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TimUntersberger/neogit/raw/b688a2c/lua/neogit/lib/color.lua&#34;&gt;neogit&lt;/a&gt; (base for color lib)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;References&lt;/h2&gt; &#xA;&lt;p&gt;Some themes were inspired by wallpapers.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Nordfox&lt;/summary&gt; &#xA; &lt;img src=&#34;https://i.imgur.com/LzJYkpS.jpeg&#34; alt=&#34;nordfox_reference&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Terafox&lt;/summary&gt; &#xA; &lt;img src=&#34;https://torako.wakarimasen.moe/file/torako/wg/image/1622/83/1622838138777.jpg&#34; alt=&#34;terafox_reference&#34;&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>