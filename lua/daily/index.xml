<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-07T01:33:58Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iONDegen/ps-inventory</title>
    <updated>2024-02-07T01:33:58Z</updated>
    <id>tag:github.com,2024-02-07:/iONDegen/ps-inventory</id>
    <link href="https://github.com/iONDegen/ps-inventory" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Project-Sloth&#39;s FiveM Inventory System Redesigned to Look Like NoPixel 4.0&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ps-inventory&lt;/h1&gt; &#xA;&lt;p&gt;Project-Sloth&#39;s FiveM Inventory System Redesigned to Look Like and Feel like NoPixel 4.0&lt;/p&gt; &#xA;&lt;p&gt;I removed the item images for my own sanity while uploading the changes. So please use your own item images&lt;/p&gt; &#xA;&lt;h1&gt;Credit where Credit is Due&lt;/h1&gt; &#xA;&lt;h1&gt;Thanks to loljoshie for originally creating the lj-inventory we&#39;ve all come to love.&lt;/h1&gt; &#xA;&lt;h1&gt;Thanks to ok1ez and the project sloth dev team for continuing lj-inventory&#39;s existence with keeping it up to date and maintaining it as ps-inventory.&lt;/h1&gt; &#xA;&lt;h1&gt;Thanks to root_ for making the items actually droppable with their respective props.&lt;/h1&gt; &#xA;&lt;h1&gt;Thanks to the Project Sloth Community. Without the support on the first version this release wouldn&#39;t be possible.&lt;/h1&gt; &#xA;&lt;h1&gt;Importing&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;ve downloaded the previous version, I&#39;ve included descriptions / tags above all the UI Changes i&#39;ve made so you can easily convert over but below will be certain snippets if you&#39;d like to add things yourself without inspecting the code.&lt;/p&gt; &#xA;&lt;h1&gt;Personal Information Snippet&lt;/h1&gt; &#xA;&lt;p&gt;-- Client-Side LUA --&lt;/p&gt; &#xA;&lt;p&gt;QBCore.Functions.TriggerCallback(&#39;inventory:server:ConvertQuality&#39;, function(data) inventory = data.inventory other = data.other SendNUIMessage({ action = &#34;open&#34;, inventory = inventory, slots = Config.MaxInventorySlots, other = other, maxweight = Config.MaxInventoryWeight, Ammo = PlayerAmmo, maxammo = Config.MaximumAmmoValues, Name = PlayerData.charinfo.firstname ..&#34; &#34;.. PlayerData.charinfo.lastname ..&#34; - [&#34;.. GetPlayerServerId(PlayerId()) ..&#34;]&#34;, pName = PlayerData.charinfo.firstname .. PlayerData.charinfo.lastname, pNumber = PlayerData.charinfo.phone, pCID = PlayerData.citizenid, pID = GetPlayerServerId(PlayerId()), })&lt;/p&gt; &#xA;&lt;p&gt;QBCore.Functions.TriggerCallback(&#39;inventory:server:ConvertQuality&#39;, function(data) inventory = data.inventory other = data.other SendNUIMessage({ action = &#34;open&#34;, inventory = inventory, slots = Config.MaxInventorySlots, other = other, maxweight = Config.MaxInventoryWeight, Ammo = PlayerAmmo, maxammo = Config.MaximumAmmoValues, Name = PlayerData.charinfo.firstname ..&#34; &#34;.. PlayerData.charinfo.lastname ..&#34; - [&#34;.. GetPlayerServerId(PlayerId()) ..&#34;]&#34;, pName = PlayerData.charinfo.firstname .. PlayerData.charinfo.lastname, pNumber = PlayerData.charinfo.phone, pCID = PlayerData.citizenid, pID = GetPlayerServerId(PlayerId()), })&lt;/p&gt; &#xA;&lt;p&gt;-- HTML --&lt;/p&gt; &#xA;&lt;div class=&#34;player-name-title&#34;&gt; &#xA; &lt;span class=&#34;name-info-title&#34;&gt;Name : &lt;/span&gt;&#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;player-name&#34;&gt; &#xA; &lt;span class=&#34;name-info&#34;&gt;Player-Name&lt;/span&gt;&#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;phone-number-title&#34;&gt; &#xA; &lt;span class=&#34;phone-number-info&#34;&gt;Phone Number : &lt;/span&gt;&#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;phone-number&#34;&gt; &#xA; &lt;span class=&#34;phone-number&#34;&gt;Player-Phone-Number&lt;/span&gt;&#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;player-id-title&#34;&gt; &#xA; &lt;span class=&#34;player-id-info&#34;&gt;State ID : &lt;/span&gt;&#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;player-id&#34;&gt; &#xA; &lt;span class=&#34;player-id&#34;&gt;Player-State-ID&lt;/span&gt;&#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;citizen-id-title&#34;&gt; &#xA; &lt;span class=&#34;citizen-id-info&#34;&gt;Citizen ID : &lt;/span&gt;&#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;citizen-id&#34;&gt; &#xA; &lt;span class=&#34;citizen-id&#34;&gt;Player-Citizen-ID&lt;/span&gt;&#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;ply-number-line&#34;&gt;&lt;/div&gt; &#xA;&lt;div class=&#34;phone-number-line&#34;&gt;&lt;/div&gt; &#xA;&lt;div class=&#34;player-id-line&#34;&gt;&lt;/div&gt; &#xA;&lt;div class=&#34;citizen-id-line&#34;&gt;&lt;/div&gt; &#xA;&lt;p&gt;-- JS --&lt;/p&gt; &#xA;&lt;p&gt;$(&#34;.player-name-title&#34;).html(&#39;Name&#39;); $(&#34;.player-name&#34;).html(data.pName); $(&#34;.phone-number-title&#34;).html(&#39;Phone Number&#39;); $(&#34;.phone-number&#34;).html(data.pNumber); $(&#34;.player-id-title&#34;).html(&#39;State ID&#39;); $(&#34;.player-id&#34;).html(data.pID); $(&#34;.citizen-id-title&#34;).html(&#39;Citizen ID&#39;); $(&#34;.citizen-id&#34;).html(data.pCID);&lt;/p&gt; &#xA;&lt;p&gt;-- CSS --&lt;/p&gt; &#xA;&lt;p&gt;.ply-number-line { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; background-color: rgb(137, 245, 169) !important; border: 1px solid rgba(55, 55, 55, 1); box-shadow: 0 0 1vh rgba(0, 0, 0, 0.3); top: 75%; margin-left: 6%; height: 5.6vh; width: 0.7vh; }&lt;/p&gt; &#xA;&lt;p&gt;.player-name-title { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.6vh; color: rgb(160, 160, 160); top: 73.5%; margin-left: 6%; font-weight: 300; }&lt;/p&gt; &#xA;&lt;p&gt;.player-name { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.95vh; color: white; top: 75%; margin-left: 6%; font-weight: 300; }&lt;/p&gt; &#xA;&lt;p&gt;.phone-number-line { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; background-color: rgb(214, 137, 245) !important; border: 1px solid rgba(55, 55, 55, 1); box-shadow: 0 0 1vh rgba(0, 0, 0, 0.3); top: 75%; margin-left: 17.5%; height: 5.6vh; width: 0.7vh; }&lt;/p&gt; &#xA;&lt;p&gt;.phone-number-title { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.6vh; color: rgb(160, 160, 160); top: 73.5%; margin-left: 17.5%; font-weight: 300; }&lt;/p&gt; &#xA;&lt;p&gt;.phone-number { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.95vh; color: white; top: 75%; margin-left: 17.5%; font-weight: 300; }&lt;/p&gt; &#xA;&lt;p&gt;.player-id-line { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; background-color: rgb(137, 232, 245) !important; border: 1px solid rgba(55, 55, 55, 1); box-shadow: 0 0 1vh rgba(0, 0, 0, 0.3); top: 85%; margin-left: 6%; height: 5.6vh; width: 0.7vh; }&lt;/p&gt; &#xA;&lt;p&gt;.player-id-title { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.6vh; color: rgb(160, 160, 160); top: 83.5%; margin-left: 6%; font-weight: 300; }&lt;/p&gt; &#xA;&lt;p&gt;.player-id { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.95vh; color: white; top: 85%; margin-left: 6%; font-weight: 300; }&lt;/p&gt; &#xA;&lt;p&gt;.citizen-id-line { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; background-color: rgb(245, 207, 137) !important; border: 1px solid rgba(55, 55, 55, 1); box-shadow: 0 0 1vh rgba(0, 0, 0, 0.3); top: 85%; margin-left: 17.5%; height: 5.6vh; width: 0.7vh; }&lt;/p&gt; &#xA;&lt;p&gt;.citizen-id-title { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.6vh; color: rgb(160, 160, 160); top: 83.5%; margin-left: 17.5%; font-weight: 300; }&lt;/p&gt; &#xA;&lt;p&gt;.citizen-id { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.95vh; color: white; top: 85%; margin-left: 17.5%; font-weight: 300; }&lt;/p&gt; &#xA;&lt;h1&gt;Basic Damage / Health Snippet&lt;/h1&gt; &#xA;&lt;p&gt;-- Client-Side LUA --&lt;/p&gt; &#xA;&lt;p&gt;local stress = 0&lt;/p&gt; &#xA;&lt;p&gt;RegisterNetEvent(&#39;hud:client:UpdateStress&#39;, function(newStress) -- Add this event with adding stress elsewhere stress = newStress end)&lt;/p&gt; &#xA;&lt;p&gt;QBCore.Functions.TriggerCallback(&#39;inventory:server:ConvertQuality&#39;, function(data) inventory = data.inventory other = data.other SendNUIMessage({ action = &#34;open&#34;, inventory = inventory, slots = Config.MaxInventorySlots, other = other, maxweight = Config.MaxInventoryWeight, Ammo = PlayerAmmo, maxammo = Config.MaximumAmmoValues, Name = PlayerData.charinfo.firstname ..&#34; &#34;.. PlayerData.charinfo.lastname ..&#34; - [&#34;.. GetPlayerServerId(PlayerId()) ..&#34;]&#34;, pName = PlayerData.charinfo.firstname .. PlayerData.charinfo.lastname, pNumber = PlayerData.charinfo.phone, pCID = PlayerData.citizenid, pID = GetPlayerServerId(PlayerId()), pStress = stress, pHealth = 200 - GetEntityHealth(PlayerPedId()), })&lt;/p&gt; &#xA;&lt;p&gt;QBCore.Functions.TriggerCallback(&#39;inventory:server:ConvertQuality&#39;, function(data) inventory = data.inventory other = data.other SendNUIMessage({ action = &#34;open&#34;, inventory = inventory, slots = Config.MaxInventorySlots, other = other, maxweight = Config.MaxInventoryWeight, Ammo = PlayerAmmo, maxammo = Config.MaximumAmmoValues, Name = PlayerData.charinfo.firstname ..&#34; &#34;.. PlayerData.charinfo.lastname ..&#34; - [&#34;.. GetPlayerServerId(PlayerId()) ..&#34;]&#34;, pName = PlayerData.charinfo.firstname .. PlayerData.charinfo.lastname, pNumber = PlayerData.charinfo.phone, pCID = PlayerData.citizenid, pID = GetPlayerServerId(PlayerId()), pStress = stress, pHealth = 200 - GetEntityHealth(PlayerPedId()), })&lt;/p&gt; &#xA;&lt;p&gt;-- JS -- $(&#34;.skull-damage&#34;).html(&#39;Stress : &#39;); $(&#34;.skull-damage-title&#34;).html(data.pStress);&lt;/p&gt; &#xA;&lt;p&gt;$(&#34;.body-damage&#34;).html(&#39;Damage : &#39;); $(&#34;.body-damage-title&#34;).html(data.pDamage + &#34;%&#34;);&lt;/p&gt; &#xA;&lt;p&gt;-- HTML --&lt;/p&gt; &#xA;&lt;!-- Player Body Image --&gt; &#xA;&lt;div class=&#34;player-body-container&#34;&gt; &#xA; &lt;div class=&#34;player-body&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/iONDegen/ps-inventory/main/inventory_images/body.png&#34; alt=&#34;player-body&#34; style=&#34;width:198px;height:428px;&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- Player Damage--&gt; &#xA;&lt;div class=&#34;skull-damage-container&#34;&gt; &#xA; &lt;div class=&#34;skull-damage&#34;&gt;&lt;/div&gt; &#xA; &lt;div class=&#34;skull-damage-title&#34;&gt;&lt;/div&gt; &#xA; &lt;div class=&#34;skull-damage-line&#34;&gt;&lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;body-damage-container&#34;&gt; &#xA; &lt;div class=&#34;body-damage&#34;&gt;&lt;/div&gt; &#xA; &lt;div class=&#34;body-damage-title&#34;&gt;&lt;/div&gt; &#xA; &lt;div class=&#34;body-damage-line&#34;&gt;&lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;-- CSS --&lt;/p&gt; &#xA;&lt;p&gt;/* Player Body */ .player-body-container { position: absolute; bottom: 27.8%; margin: 0 auto; left: -65%; right: 0; text-align: center; width: 15%; height: 55%; padding: 10%; }&lt;/p&gt; &#xA;&lt;p&gt;.player-body { position: absolute; bottom: 48%; margin: 0 auto; left: -23%; right: 0; text-align: center; width: 15%; height: 45%; }&lt;/p&gt; &#xA;&lt;p&gt;/* Player Body &amp;amp; Health */ #player-damage-container { position: absolute; display: none; user-select: none; width: 100%; height: 100%; }&lt;/p&gt; &#xA;&lt;p&gt;.skull-damage-title { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.35vh; color: white; top: 20.5%; margin-left: 22%; font-weight: 300; opacity: 0; transition: opacity 0.5s; z-index: 1; }&lt;/p&gt; &#xA;&lt;p&gt;.skull-damage { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.35vh; color: white; top: 20.5%; margin-left: 20%; font-weight: 300; opacity: 0; transition: opacity 0.5s; z-index: 1; }&lt;/p&gt; &#xA;&lt;p&gt;.skull-damage-line { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; background-color: rgb(255, 255, 255) !important; border: 1px solid rgba(55, 55, 55, 1); box-shadow: 0 0 1vh rgba(0, 0, 0, 0.3); top: 20.5%; margin-left: 23%; height: 7.6vh; width: 0.2vh; rotate: 90deg; opacity: 0; transition: opacity 0.5s; z-index: 1; }&lt;/p&gt; &#xA;&lt;p&gt;.skull-damage-container:hover .skull-damage, .skull-damage-container:hover .skull-damage-title, .skull-damage-container:hover .skull-damage-line { opacity: 1; }&lt;/p&gt; &#xA;&lt;p&gt;.body-damage-title { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.35vh; color: white; top: 28%; margin-left: 13%; font-weight: 300; opacity: 0; transition: opacity 0.5s; z-index: 1; }&lt;/p&gt; &#xA;&lt;p&gt;.body-damage { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; padding: 1%; font-size: 1.35vh; color: white; top: 28%; margin-left: 10.5%; font-weight: 300; opacity: 0; transition: opacity 0.5s; z-index: 1; }&lt;/p&gt; &#xA;&lt;p&gt;.body-damage-line { overflow: hidden; position: absolute; font-family: &#39;Oswald&#39;, sans-serif; background-color: rgb(255, 255, 255) !important; border: 1px solid rgba(55, 55, 55, 1); box-shadow: 0 0 1vh rgba(0, 0, 0, 0.3); top: 28%; margin-left: 13.5%; height: 7.6vh; width: 0.2vh; rotate: 90deg; opacity: 0; transition: opacity 0.5s; z-index: 1; }&lt;/p&gt; &#xA;&lt;p&gt;.body-damage-container:hover .body-damage, .body-damage-container:hover .body-damage-title, .body-damage-container:hover .body-damage-line { opacity: 1; }&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Almo7aya/openingh.nvim</title>
    <updated>2024-02-07T01:33:58Z</updated>
    <id>tag:github.com,2024-02-07:/Almo7aya/openingh.nvim</id>
    <link href="https://github.com/Almo7aya/openingh.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open file or project in GitHub for neovim written in lua&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;openingh.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Opens the current file or project page in GitHub.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Made%20with%20Lua-blueviolet.svg?style=for-the-badge&amp;amp;logo=lua&#34; alt=&#34;Lua&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/almo7aya/openingh.nvim?style=for-the-badge&#34; alt=&#34;GitHub release (latest by date)&#34;&gt; &lt;a href=&#34;https://github.com/Almo7aya/openingh.nvim/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/almo7aya/openingh.nvim/lint.yml?style=for-the-badge&#34; alt=&#34;lint with luacheck&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/almo7aya/openingh.nvim/ci.yml?label=TESTS&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Workflow Status&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Features&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Supports macOS, Linux, Windows and WSL&lt;/li&gt; &#xA;   &lt;li&gt;Works with detached HEAD and supports checked out branches or forks&lt;/li&gt; &#xA;   &lt;li&gt;Automatically selects the correct line number on the file page&lt;/li&gt; &#xA;   &lt;li&gt;Supports GitHub, GitHub Enterprise, GitLab, and Bitbucket&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Demo&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Almo7aya/openingh.nvim/main/gifs/demo.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim 0.7.2+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h4&gt;Example with Packer&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;wbthomason/packer.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- init.lua&#xA;require(&#34;packer&#34;).startup(function()&#xA;  use &#34;almo7aya/openingh.nvim&#34;&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:OpenInGHRepo&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Opens the project&#39;s git repository page in GitHub.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:OpenInGHFile&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Opens the current file page in GitHub. This command supports ranges.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:OpenInGHFileLines&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Opens the current file page in GitHub. This command supports ranges.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Registers&lt;/h2&gt; &#xA;&lt;p&gt;All of the commands above optionally take a register, e.g. &lt;code&gt;:OpenInGHFileLines+&lt;/code&gt;. In this case, the URL will not be opened in the browser, but put into the register given. This is especially useful if you&#39;re running neovim on a remote machine, but want to open the URL locally.&lt;/p&gt; &#xA;&lt;h2&gt;Priority&lt;/h2&gt; &#xA;&lt;p&gt;At first, this plugin try to identify the page url based on the current branch you are working in, and if it fails then switches its base to commit.&lt;/p&gt; &#xA;&lt;p&gt;This behavior can be inverted via bang &lt;code&gt;!&lt;/code&gt;, e.g. &lt;code&gt;:OpenInGHFile!&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Since commit based url tends to have long durablity compared to branch based one, it can be useful in some situation. It won&#39;t be affected by subsequent commits, branch deletion after merge, and so on.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can call the commands directly or define mappings them:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- for repository page&#xA;vim.api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;gr&#34;, &#34;:OpenInGHRepo &amp;lt;CR&amp;gt;&#34;, { silent = true, noremap = true })&#xA;&#xA;-- for current file page&#xA;vim.api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;gf&#34;, &#34;:OpenInGHFile &amp;lt;CR&amp;gt;&#34;, { silent = true, noremap = true })&#xA;vim.api.nvim_set_keymap(&#34;v&#34;, &#34;&amp;lt;Leader&amp;gt;gf&#34;, &#34;:OpenInGHFileLines &amp;lt;CR&amp;gt;&#34;, { silent = true, noremap = true })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support the current file cursor position&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support visual mode to open a file in range selection&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support other version control websites&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to open an issue or a pull request if you have any suggestions or improvements&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Almo7aya/openingh.nvim/main/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lewis6991/nvim-test</title>
    <updated>2024-02-07T01:33:58Z</updated>
    <id>tag:github.com,2024-02-07:/lewis6991/nvim-test</id>
    <link href="https://github.com/lewis6991/nvim-test" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Test framework for Neovim plugins&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-test&lt;/h1&gt; &#xA;&lt;p&gt;Testing framework for Neovim plugins.&lt;/p&gt; &#xA;&lt;p&gt;Adapted directly from &lt;a href=&#34;https://github.com/neovim/neovim/tree/master/test&#34;&gt;https://github.com/neovim/neovim/tree/master/test&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support integration with LuaCov&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://luarocks.org/&#34;&gt;Luarocks&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.lua.org/versions.html#5.1&#34;&gt;Lua5.1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;MacOS or Linux&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Usage: nvim-test [OPTIONS] [--] [BUSTED_ARGS]&#xA;ARGUMENTS:&#xA;  BUSTED_ARGS                     Arguments passed directly to busted.&#xA;&#xA;OPTIONS:&#xA;  --runner_version [NVIM_VERSION] Which version of Nvim to run as the test runner&#xA;                                  (Default 0.9.5)&#xA;  --target_version [NVIM_VERSION] Which version of Nvim to run tests under&#xA;                                  (Default 0.9.5)&#xA;  --clean                         Redownload test collateral.&#xA;  --init                          Initialize nvim-test. Do not run tests.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- links --&gt; &#xA;&lt;h2&gt;Example&lt;/h2&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;Makefile&lt;/code&gt; with the contents:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-make&#34;&gt;nvim-test:&#xA;&#x9;git clone https://github.com/lewis6991/nvim-test&#xA;&#x9;nvim-test/bin/nvim-test --init&#xA;&#xA;.PHONY: test&#xA;test: nvim-test&#xA;&#x9;nvim-test/bin/nvim-test test \&#xA;&#x9;&#x9;--lpath=$(PWD)/lua/?.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add a test file &lt;code&gt;test/mytest_spec.lua&lt;/code&gt; with the format:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local helpers = require(&#39;nvim-test.helpers&#39;)&#xA;local exec_lua = helpers.exec_lua&#xA;local eq = helpers.eq&#xA;&#xA;describe(&#39;my tests&#39;, function()&#xA;  before_each(function()&#xA;    helpers.clear()&#xA;&#xA;    -- Make plugin available&#xA;    exec_lua(&#39;package.path = ...&#39;, package.path)&#xA;  end)&#xA;&#xA;  it(&#39;run a test&#39;, function()&#xA;    eq(true, exec_lua[[&#xA;        return require(&#39;myplugin&#39;).foo()&#xA;    ]])&#xA;  end)&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then to run tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;nvim-test/bin/nvim-test test \&#xA;        --lpath=.../nvim-test/example/lua/?.lua&#xA;-------- Global test environment setup.&#xA;-------- Running tests from test/mytest_spec.lua&#xA;RUN       my tests run a test: 1.14 ms OK&#xA;-------- 1 test from test/mytest_spec.lua (11.97 ms total)&#xA;&#xA;-------- Global test environment teardown.&#xA;======== 1 test from 1 test file ran. (12.13 ms total)&#xA;PASSED   1 test.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/lewis6991/nvim-test/main/example&#34;&gt;example&lt;/a&gt; for more details.&lt;/p&gt;</summary>
  </entry>
</feed>