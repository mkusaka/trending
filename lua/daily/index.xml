<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-29T01:38:32Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lukas-reineke/headlines.nvim</title>
    <updated>2023-07-29T01:38:32Z</updated>
    <id>tag:github.com,2023-07-29:/lukas-reineke/headlines.nvim</id>
    <link href="https://github.com/lukas-reineke/headlines.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This plugin adds horizontal highlights for text filetypes, like markdown, orgmode, and neorg.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Headlines.nvim&lt;/h1&gt; &#xA;&lt;p&gt;This plugin adds highlights for text filetypes, like &lt;code&gt;markdown&lt;/code&gt;, &lt;code&gt;orgmode&lt;/code&gt;, and &lt;code&gt;neorg&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Background highlighting for headlines&lt;/li&gt; &#xA; &lt;li&gt;Background highlighting for code blocks&lt;/li&gt; &#xA; &lt;li&gt;Whole window separator for horizontal line&lt;/li&gt; &#xA; &lt;li&gt;Bar for Quotes&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Treesitter grammar needs to be installed for the languages.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Use your favourite plugin manager to install.&lt;/p&gt; &#xA;&lt;h4&gt;Example with Packer&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;wbthomason/packer.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- init.lua&#xA;require(&#34;packer&#34;).startup(&#xA;    function()&#xA;        use {&#xA;            &#39;lukas-reineke/headlines.nvim&#39;,&#xA;            after = &#39;nvim-treesitter&#39;,&#xA;            config = function()&#xA;                require(&#39;headlines&#39;).setup()&#xA;            end,&#xA;        }&#xA;    end&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example with Plug&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;junegunn/vim-plug&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; init.vim&#xA;call plug#begin(&#39;~/.vim/plugged&#39;)&#xA;Plug &#39;lukas-reineke/headlines.nvim&#39;&#xA;call plug#end()&#xA;&#xA;lua &amp;lt;&amp;lt; EOF&#xA;require(&#34;headlines&#34;).setup()&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Example with Lazy&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;folke/lazy.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- init.lua&#xA;require(&#39;lazy&#39;).setup({&#xA;    {&#xA;        &#39;lukas-reineke/headlines.nvim&#39;,&#xA;        dependencies = &#34;nvim-treesitter/nvim-treesitter&#34;,&#xA;        config = true, -- or `opts = {}`&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To configure headlines.nvim pass a config table into the setup function.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Default config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;headlines&#34;).setup {&#xA;    markdown = {&#xA;        query = vim.treesitter.parse_query(&#xA;            &#34;markdown&#34;,&#xA;            [[&#xA;                (atx_heading [&#xA;                    (atx_h1_marker)&#xA;                    (atx_h2_marker)&#xA;                    (atx_h3_marker)&#xA;                    (atx_h4_marker)&#xA;                    (atx_h5_marker)&#xA;                    (atx_h6_marker)&#xA;                ] @headline)&#xA;&#xA;                (thematic_break) @dash&#xA;&#xA;                (fenced_code_block) @codeblock&#xA;&#xA;                (block_quote_marker) @quote&#xA;                (block_quote (paragraph (inline (block_continuation) @quote)))&#xA;            ]]&#xA;        ),&#xA;        headline_highlights = { &#34;Headline&#34; },&#xA;        codeblock_highlight = &#34;CodeBlock&#34;,&#xA;        dash_highlight = &#34;Dash&#34;,&#xA;        dash_string = &#34;-&#34;,&#xA;        quote_highlight = &#34;Quote&#34;,&#xA;        quote_string = &#34;â”ƒ&#34;,&#xA;        fat_headlines = true,&#xA;        fat_headline_upper_string = &#34;â–ƒ&#34;,&#xA;        fat_headline_lower_string = &#34;ðŸ¬‚&#34;,&#xA;    },&#xA;    rmd = {&#xA;        query = vim.treesitter.parse_query(&#xA;            &#34;markdown&#34;,&#xA;            [[&#xA;                (atx_heading [&#xA;                    (atx_h1_marker)&#xA;                    (atx_h2_marker)&#xA;                    (atx_h3_marker)&#xA;                    (atx_h4_marker)&#xA;                    (atx_h5_marker)&#xA;                    (atx_h6_marker)&#xA;                ] @headline)&#xA;&#xA;                (thematic_break) @dash&#xA;&#xA;                (fenced_code_block) @codeblock&#xA;&#xA;                (block_quote_marker) @quote&#xA;                (block_quote (paragraph (inline (block_continuation) @quote)))&#xA;            ]]&#xA;        ),&#xA;        treesitter_language = &#34;markdown&#34;,&#xA;        headline_highlights = { &#34;Headline&#34; },&#xA;        codeblock_highlight = &#34;CodeBlock&#34;,&#xA;        dash_highlight = &#34;Dash&#34;,&#xA;        dash_string = &#34;-&#34;,&#xA;        quote_highlight = &#34;Quote&#34;,&#xA;        quote_string = &#34;â”ƒ&#34;,&#xA;        fat_headlines = true,&#xA;        fat_headline_upper_string = &#34;â–ƒ&#34;,&#xA;        fat_headline_lower_string = &#34;ðŸ¬‚&#34;,&#xA;    },&#xA;    norg = {&#xA;        query = vim.treesitter.parse_query(&#xA;            &#34;norg&#34;,&#xA;            [[&#xA;                [&#xA;                    (heading1_prefix)&#xA;                    (heading2_prefix)&#xA;                    (heading3_prefix)&#xA;                    (heading4_prefix)&#xA;                    (heading5_prefix)&#xA;                    (heading6_prefix)&#xA;                ] @headline&#xA;&#xA;                (weak_paragraph_delimiter) @dash&#xA;                (strong_paragraph_delimiter) @doubledash&#xA;&#xA;                ([(ranged_tag&#xA;                    name: (tag_name) @_name&#xA;                    (#eq? @_name &#34;code&#34;)&#xA;                )&#xA;                (ranged_verbatim_tag&#xA;                    name: (tag_name) @_name&#xA;                    (#eq? @_name &#34;code&#34;)&#xA;                )] @codeblock (#offset! @codeblock 0 0 1 0))&#xA;&#xA;                (quote1_prefix) @quote&#xA;            ]]&#xA;        ),&#xA;        headline_highlights = { &#34;Headline&#34; },&#xA;        codeblock_highlight = &#34;CodeBlock&#34;,&#xA;        dash_highlight = &#34;Dash&#34;,&#xA;        dash_string = &#34;-&#34;,&#xA;        doubledash_highlight = &#34;DoubleDash&#34;,&#xA;        doubledash_string = &#34;=&#34;,&#xA;        quote_highlight = &#34;Quote&#34;,&#xA;        quote_string = &#34;â”ƒ&#34;,&#xA;        fat_headlines = true,&#xA;        fat_headline_upper_string = &#34;â–ƒ&#34;,&#xA;        fat_headline_lower_string = &#34;ðŸ¬‚&#34;,&#xA;    },&#xA;    org = {&#xA;        query = vim.treesitter.parse_query(&#xA;            &#34;org&#34;,&#xA;            [[&#xA;                (headline (stars) @headline)&#xA;&#xA;                (&#xA;                    (expr) @dash&#xA;                    (#match? @dash &#34;^-----+$&#34;)&#xA;                )&#xA;&#xA;                (block&#xA;                    name: (expr) @_name&#xA;                    (#eq? @_name &#34;SRC&#34;)&#xA;                ) @codeblock&#xA;&#xA;                (paragraph . (expr) @quote&#xA;                    (#eq? @quote &#34;&amp;gt;&#34;)&#xA;                )&#xA;            ]]&#xA;        ),&#xA;        headline_highlights = { &#34;Headline&#34; },&#xA;        codeblock_highlight = &#34;CodeBlock&#34;,&#xA;        dash_highlight = &#34;Dash&#34;,&#xA;        dash_string = &#34;-&#34;,&#xA;        quote_highlight = &#34;Quote&#34;,&#xA;        quote_string = &#34;â”ƒ&#34;,&#xA;        fat_headlines = true,&#xA;        fat_headline_upper_string = &#34;â–ƒ&#34;,&#xA;        fat_headline_lower_string = &#34;ðŸ¬‚&#34;,&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change any setting, pass a table with that option. Or add a completely new filetype. You can turn off highlighting by removing that part from the query, or setting highlight to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;headlines&#34;).setup {&#xA;    markdown = {&#xA;        headline_highlights = false,&#xA;    },&#xA;    yaml = {&#xA;        query = vim.treesitter.parse_query(&#xA;            &#34;yaml&#34;,&#xA;            [[&#xA;                (&#xA;                    (comment) @dash&#xA;                    (#match? @dash &#34;^# ---+$&#34;)&#xA;                )&#xA;            ]]&#xA;        ),&#xA;        dash_highlight = &#34;Dash&#34;,&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please see &lt;code&gt;:help headlines.txt&lt;/code&gt; for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;All screenshots use &lt;a href=&#34;https://github.com/lukas-reineke/onedark.nvim&#34;&gt;my custom onedark color scheme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Simple org file&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd [[highlight Headline1 guibg=#1e2718]]&#xA;vim.cmd [[highlight Headline2 guibg=#21262d]]&#xA;vim.cmd [[highlight CodeBlock guibg=#1c1c1c]]&#xA;vim.cmd [[highlight Dash guibg=#D19A66 gui=bold]]&#xA;&#xA;require(&#34;headlines&#34;).setup {&#xA;    org = {&#xA;        headline_highlights = { &#34;Headline1&#34;, &#34;Headline2&#34; },&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img width=&#34;900&#34; src=&#34;https://user-images.githubusercontent.com/12900252/152090098-f0fe7ad5-efea-42d9-b3d7-a4bfd6391189.png&#34; alt=&#34;Screenshot&#34;&gt;</summary>
  </entry>
</feed>