<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-12T01:45:35Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nvim-telescope/telescope-file-browser.nvim</title>
    <updated>2022-08-12T01:45:35Z</updated>
    <id>tag:github.com,2022-08-12:/nvim-telescope/telescope-file-browser.nvim</id>
    <link href="https://github.com/nvim-telescope/telescope-file-browser.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;File Browser extension for telescope.nvim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;telescope-file-browser.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;telescope-file-browser.nvim&lt;/code&gt; is a file browser extension for telescope.nvim. It supports synchronized creation, deletion, renaming, and moving of files and folders powered by &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt; and &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Demo&lt;/h1&gt; &#xA;&lt;p&gt;The demo shows multi-selecting files across various folders and then moving them to the lastly entered directory. More examples can be found in the &lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/issues/53&#34;&gt;showcase issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/39233597/149016073-6fcc9383-a761-422b-be40-17d4b854cd3c.gif&#34; alt=&#34;Demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;packer&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use { &#34;nvim-telescope/telescope-file-browser.nvim&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Vim-Plug&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;Plug &#39;nvim-telescope/telescope-file-browser.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Optional Dependencies&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;telescope-file-browser&lt;/code&gt; optionally levers &lt;a href=&#34;https://github.com/sharkdp/fd&#34;&gt;fd&lt;/a&gt; if installed for more faster and async browsing, most noticeable in larger repositories.&lt;/p&gt; &#xA;&lt;h1&gt;Setup and Configuration&lt;/h1&gt; &#xA;&lt;p&gt;You can configure the &lt;code&gt;telescope-file-browser&lt;/code&gt; like any other &lt;code&gt;telescope.nvim&lt;/code&gt; picker. Please see &lt;code&gt;:h telescope-file-browser.picker&lt;/code&gt; for the full set of options dedicated to the picker. Unless otherwise stated, you can pass these options either to your configuration at extension setup or picker startup. For instance, you of course can map &lt;code&gt;theme&lt;/code&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/nvim-telescope/telescope-file-browser.nvim/master/#remappings&#34;&gt;mappings&lt;/a&gt; as you are used to from &lt;code&gt;telescope.nvim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- You don&#39;t need to set any of these options.&#xA;-- IMPORTANT!: this is only a showcase of how you can set default options!&#xA;require(&#34;telescope&#34;).setup {&#xA;  extensions = {&#xA;    file_browser = {&#xA;      theme = &#34;ivy&#34;,&#xA;      -- disables netrw and use telescope-file-browser in its place&#xA;      hijack_netrw = true,&#xA;      mappings = {&#xA;        [&#34;i&#34;] = {&#xA;          -- your custom insert mode mappings&#xA;        },&#xA;        [&#34;n&#34;] = {&#xA;          -- your custom normal mode mappings&#xA;        },&#xA;      },&#xA;    },&#xA;  },&#xA;}&#xA;-- To get telescope-file-browser loaded and working with telescope,&#xA;-- you need to call load_extension, somewhere after setup function:&#xA;require(&#34;telescope&#34;).load_extension &#34;file_browser&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;telescope-file-browser&lt;/code&gt; as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_set_keymap(&#xA;  &#34;n&#34;,&#xA;  &#34;&amp;lt;space&amp;gt;fb&#34;,&#xA;  &#34;:Telescope file_browser&#34;,&#xA;  { noremap = true }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can also access the picker as a function via &lt;code&gt;require &#34;telescope&#34;.extensions.file_browser.file_browser&lt;/code&gt; natively in lua.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The documentation of &lt;code&gt;telescope-file-browser&lt;/code&gt; can be be accessed from within Neovim via:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;strong&gt;What&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Vimdoc&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;strong&gt;Comment&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Introduction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.nvim&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Picker options&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.picker.file_browser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;For &lt;code&gt;extension&lt;/code&gt; setup&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Actions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.actions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Explore mappable actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Finders&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.finders&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lower level for customization&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The documentation can be easily explored via &lt;code&gt;:Telescope help_tags&lt;/code&gt;. Search for &lt;code&gt;fb_actions&lt;/code&gt;, for instance, nicely lists available actions from within vimdocs. Very much recommended!&lt;/p&gt; &#xA;&lt;p&gt;Please make sure to consult the docs prior to raising issues for asking questions.&lt;/p&gt; &#xA;&lt;h2&gt;Workflow&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;telescope-file-browser.nvim&lt;/code&gt; unifies a &lt;code&gt;file_browser&lt;/code&gt; and a &lt;code&gt;folder_browser&lt;/code&gt; into a single &lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/raw/master/lua/telescope/_extensions/file_browser/finders.lua&#34;&gt;finder&lt;/a&gt; that can be toggled between:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;file_browser&lt;/code&gt;: finds files and folders in the (currently) selected folder (denoted as &lt;code&gt;path&lt;/code&gt;, default: &lt;code&gt;cwd&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;folder_browser&lt;/code&gt;: swiftly fuzzy find folders from &lt;code&gt;cwd&lt;/code&gt; downwards to switch folders for the &lt;code&gt;file_browser&lt;/code&gt; (i.e. set &lt;code&gt;path&lt;/code&gt; to selected folder)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Within a single session, &lt;code&gt;path&lt;/code&gt; always refers to the folder the &lt;code&gt;file_browser&lt;/code&gt; is currently in and changes by selecting folders from within the &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;folder_browser&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to open the &lt;code&gt;file_browser&lt;/code&gt; from within the folder of your current buffer, you should pass &lt;code&gt;path = &#34;%:p:h&#34;&lt;/code&gt; to the &lt;code&gt;opts&lt;/code&gt; table of the picker (Vimscript: &lt;code&gt;:Telescope file_browser path=%:p:h&lt;/code&gt;) or to the extension setup configuration. Strings passed to &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;cwd&lt;/code&gt; are expanded automatically.&lt;/p&gt; &#xA;&lt;p&gt;By default, the &lt;code&gt;folder_browser&lt;/code&gt; always launches from &lt;code&gt;cwd&lt;/code&gt;, but it can be configured to launch from &lt;code&gt;path&lt;/code&gt; via passing the &lt;code&gt;cwd_to_path = true&lt;/code&gt; to picker &lt;code&gt;opts&lt;/code&gt; table or at extension setup. The former corresponds to a more project-centric file browser workflow, whereas the latter typically facilitates file and folder browsing across the entire file system.&lt;/p&gt; &#xA;&lt;p&gt;In practice, it mostly affects how you navigate the file system in multi-hop scenarios, for instance, when moving files from varying folders into a separate folder. The default works well in projects from which the &lt;code&gt;folder_browser&lt;/code&gt; can easily reach any folder. &lt;code&gt;cwd_to_path = true&lt;/code&gt; would possibly require returning to parent directories or &lt;code&gt;cwd&lt;/code&gt; intermittently. However, if you move deeply through the file system, launching the &lt;code&gt;folder_browser&lt;/code&gt; from &lt;code&gt;cwd&lt;/code&gt; every time is tedious. Hence, it can be configured to follow &lt;code&gt;path&lt;/code&gt; instead.&lt;/p&gt; &#xA;&lt;p&gt;In general, &lt;code&gt;telescope-file-browser.nvim&lt;/code&gt; intends to enable any workflow without comprise via opting in as virtually any component can be overriden.&lt;/p&gt; &#xA;&lt;h2&gt;Multi-Selections&lt;/h2&gt; &#xA;&lt;p&gt;One distinct difference to &lt;code&gt;telescope.nvim&lt;/code&gt; is that multi-selections are preserved between browsers.&lt;/p&gt; &#xA;&lt;p&gt;Hence, whenever you (de-)select a file or folder within &lt;code&gt;{file, folder}_browser&lt;/code&gt;, respectively, this change persists across browsers (in a single session). Eventually, some means to inspect multi-selections will be provided natively (see &lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/pull/48&#34;&gt;PR&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h2&gt;File System Operations&lt;/h2&gt; &#xA;&lt;p&gt;Note: &lt;code&gt;path&lt;/code&gt; corresponds to the folder the &lt;code&gt;file_browser&lt;/code&gt; is currently in.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Batch renaming or moving files with path inter-dependencies are not resolved! For instance, moving a folder somewhere while moving another file into the original folder in later order within same action will fail.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Action (incl. GIF)&lt;/th&gt; &#xA;   &lt;th&gt;Docs&lt;/th&gt; &#xA;   &lt;th&gt;Comment&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/issues/53#issuecomment-1010221098&#34;&gt;creation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.actions.create&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create file or folder (with trailing OS separator) at &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;file_browser&lt;/code&gt;) or at selected directory (&lt;code&gt;folder_browser&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/issues/53#issuecomment-1010298556&#34;&gt;copying&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.actions.copy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Supports copying current selection &amp;amp; multi-selections to &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;file_browser&lt;/code&gt;) or selected directory (&lt;code&gt;folder_browser&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/issues/53#issuecomment-1010301465&#34;&gt;moving&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.actions.move&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move multi-selected files to &lt;code&gt;path&lt;/code&gt; (&lt;code&gt;file_browser&lt;/code&gt;) or selected directory (&lt;code&gt;folder_browser&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/issues/53#issuecomment-1010315578&#34;&gt;removing&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.actions.remove&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Remove (multi-)selected files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/issues/53#issuecomment-1010323053&#34;&gt;renaming&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;:h telescope-file-browser.actions.rename&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rename (multi-)selected files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Mappings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;telescope-file-browser.nvim&lt;/code&gt; comes with a lot of default mappings for discoverability. You can use &lt;code&gt;telescope&lt;/code&gt;&#39;s &lt;code&gt;which_key&lt;/code&gt; (insert mode: &lt;code&gt;&amp;lt;C-/&amp;gt;&lt;/code&gt;, normal mode: &lt;code&gt;?&lt;/code&gt;) to list mappings attached to your picker.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;path&lt;/code&gt; denotes the folder the &lt;code&gt;file_browser&lt;/code&gt; is currently in&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fb_actions&lt;/code&gt; refers to the table of provided &lt;code&gt;telescope-file-browser.actions&lt;/code&gt; accessible via &lt;code&gt;require &#34;telescope&#34;.extensions.file_browser.actions&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Insert / Normal&lt;/th&gt; &#xA;   &lt;th&gt;fb_actions&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;A-c&amp;gt;/c&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create&lt;/td&gt; &#xA;   &lt;td&gt;Create file/folder at current &lt;code&gt;path&lt;/code&gt; (trailing path separator creates folder)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;S-CR&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create_from_prompt&lt;/td&gt; &#xA;   &lt;td&gt;Create and open file/folder from prompt (trailing path separator creates folder)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;A-r&amp;gt;/r&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;rename&lt;/td&gt; &#xA;   &lt;td&gt;Rename multi-selected files/folders&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;A-m&amp;gt;/m&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;move&lt;/td&gt; &#xA;   &lt;td&gt;Move multi-selected files/folders to current &lt;code&gt;path&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;A-y&amp;gt;/y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;copy&lt;/td&gt; &#xA;   &lt;td&gt;Copy (multi-)selected files/folders to current &lt;code&gt;path&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;A-d&amp;gt;/d&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove&lt;/td&gt; &#xA;   &lt;td&gt;Delete (multi-)selected files/folders&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-o&amp;gt;/o&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;open&lt;/td&gt; &#xA;   &lt;td&gt;Open file/folder with default system application&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-g&amp;gt;/g&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;goto_parent_dir&lt;/td&gt; &#xA;   &lt;td&gt;Go to parent directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-e&amp;gt;/e&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;goto_home_dir&lt;/td&gt; &#xA;   &lt;td&gt;Go to home directory&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-w&amp;gt;/w&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;goto_cwd&lt;/td&gt; &#xA;   &lt;td&gt;Go to current working directory (cwd)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-t&amp;gt;/t&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;change_cwd&lt;/td&gt; &#xA;   &lt;td&gt;Change nvim&#39;s cwd to selected folder/file(parent)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-f&amp;gt;/f&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;toggle_browser&lt;/td&gt; &#xA;   &lt;td&gt;Toggle between file and folder browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-h&amp;gt;/h&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;toggle_hidden&lt;/td&gt; &#xA;   &lt;td&gt;Toggle hidden files/folders&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-s&amp;gt;/s&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;toggle_all&lt;/td&gt; &#xA;   &lt;td&gt;Toggle all entries ignoring &lt;code&gt;./&lt;/code&gt; and &lt;code&gt;../&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;code&gt;fb_actions.create_from_prompt&lt;/code&gt; requires that your terminal recognizes these keycodes (e.g. kitty). See &lt;code&gt;:h tui-input&lt;/code&gt; for more information.&lt;/p&gt; &#xA;&lt;h4&gt;Remappings&lt;/h4&gt; &#xA;&lt;p&gt;As part of the &lt;a href=&#34;https://raw.githubusercontent.com/nvim-telescope/telescope-file-browser.nvim/master/#setup-and-configuration&#34;&gt;setup&lt;/a&gt;, you can remap actions as you like. The default mappings can also be found in this &lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/raw/master/lua/telescope/_extensions/file_browser.lua&#34;&gt;file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local fb_actions = require &#34;telescope&#34;.extensions.file_browser.actions&#xA;-- mappings in file_browser extension of telescope.setup&#xA;...&#xA;      mappings = {&#xA;        [&#34;i&#34;] = {&#xA;          -- remap to going to home directory&#xA;          [&#34;&amp;lt;C-h&amp;gt;&#34;] = fb_actions.goto_home_dir&#xA;          [&#34;&amp;lt;C-x&amp;gt;&#34;] = function(prompt_bufnr)&#xA;            -- your custom function&#xA;          end&#xA;        },&#xA;        [&#34;n&#34;] = {&#xA;          -- unmap toggling `fb_actions.toggle_browser`&#xA;          f = false,&#xA;        },&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/raw/master/lua/telescope/_extensions/file_browser/actions.lua&#34;&gt;fb_actions&lt;/a&gt; for a list of native actions and inspiration on how to write your own custom action. As additional reference, &lt;code&gt;plenary&lt;/code&gt;&#39;s &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim/raw/master/lua/plenary/path.lua&#34;&gt;Path&lt;/a&gt; library powers a lot of the built-in actions.&lt;/p&gt; &#xA;&lt;p&gt;For more information on &lt;code&gt;telescope&lt;/code&gt; actions and remappings, see also the &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim#default-mappings&#34;&gt;upstream documentation&lt;/a&gt; and associated vimdocs at &lt;code&gt;:h telescope.defaults.mappings&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additional information can also be found in &lt;code&gt;telescope&lt;/code&gt;&#39;s &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim/raw/master/developers.md&#34;&gt;developer documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Exports&lt;/h2&gt; &#xA;&lt;p&gt;The extension exports the following attributes via &lt;code&gt;:lua require &#34;telescope&#34;.extensions.file_browser&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Export&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;file_browser&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;main picker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;actions&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;file browser actions for e.g. remapping&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;finder&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;file, folder, and unified finder for user customization&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;_picker&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unconfigured equivalent of &lt;code&gt;file_browser&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Roadmap &amp;amp; Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please see the associated &lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim/issues/3&#34;&gt;issue&lt;/a&gt; on more immediate open &lt;code&gt;TODOs&lt;/code&gt; for &lt;code&gt;telescope-file-browser.nvim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;That said, the primary work surrounds on enabling users to tailor the extension to their individual workflow, primarily through opting in and possibly overriding specific components.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Rimmuru/Rimurus-2T1-Scripts</title>
    <updated>2022-08-12T01:45:35Z</updated>
    <id>tag:github.com,2022-08-12:/Rimmuru/Rimurus-2T1-Scripts</id>
    <link href="https://github.com/Rimmuru/Rimurus-2T1-Scripts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Container for all my 2t1 scripts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rimurus-2T1-Scripts&lt;/h1&gt; &#xA;&lt;p&gt;Container for all my 2take1 scripts&lt;/p&gt; &#xA;&lt;p&gt;Currently inlcudes:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Rimmuru/Rimurus-2T1-Scripts/tree/main/Rimurus%20Scripts/Rimurus%20Menu&#34;&gt;Rimurus Menu&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Rimmuru/Rimurus-2T1-Scripts/tree/main/Rimurus%20Scripts/Rimurus%20Toolkit&#34;&gt;Rimurus Toolkit&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Rimmuru/Rimurus-2T1-Scripts/tree/main/Rimurus%20Scripts/LuaUI&#34;&gt;LuaUI&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Rimmuru/Rimurus-2T1-Scripts/tree/main/Rimurus%20Scripts/FuelMod&#34;&gt;Realistic FuelMod&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Rimmuru/Rimurus-2T1-Scripts/total.svg?sanitize=true&#34; alt=&#34;Github All Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Rimmuru/Rimurus-2T1-Scripts?style=flat-square&#34; alt=&#34;tt&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;br&gt; Early access builds here:&lt;br&gt; &lt;a href=&#34;https://discord.gg/Z9z3q8taKa&#34;&gt;Discord&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>folke/zen-mode.nvim</title>
    <updated>2022-08-12T01:45:35Z</updated>
    <id>tag:github.com,2022-08-12:/folke/zen-mode.nvim</id>
    <link href="https://github.com/folke/zen-mode.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🧘 Distraction-free coding for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🧘 Zen Mode&lt;/h1&gt; &#xA;&lt;p&gt;Distraction-free coding for Neovim &amp;gt;= 0.5&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/118454007-b7d8c900-b6ac-11eb-8263-015a8d929644.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;opens the current buffer in a new full-screen floating window&lt;/li&gt; &#xA; &lt;li&gt;doesn&#39;t mess with existing window layouts / splits&lt;/li&gt; &#xA; &lt;li&gt;works correctly with other floating windows, like LSP hover, WhichKey, ...&lt;/li&gt; &#xA; &lt;li&gt;you can dynamically change the window size&lt;/li&gt; &#xA; &lt;li&gt;realigns when the editor or Zen window is resized&lt;/li&gt; &#xA; &lt;li&gt;optionally shade the backdrop of the Zen window&lt;/li&gt; &#xA; &lt;li&gt;always hides the status line&lt;/li&gt; &#xA; &lt;li&gt;optionally hide the number column, sign column, fold column, ...&lt;/li&gt; &#xA; &lt;li&gt;highly customizable with lua callbacks &lt;code&gt;on_open&lt;/code&gt;, &lt;code&gt;on_close&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;plugins: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;disable gitsigns&lt;/li&gt; &#xA;   &lt;li&gt;hide &lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;tmux&lt;/a&gt; status line&lt;/li&gt; &#xA;   &lt;li&gt;increase &lt;a href=&#34;https://sw.kovidgoyal.net/kitty/&#34;&gt;Kitty&lt;/a&gt; font-size&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zen Mode&lt;/strong&gt; is automatically closed when a new non-floating window is opened&lt;/li&gt; &#xA; &lt;li&gt;works well with plugins like &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt; to open a new buffer inside the Zen window&lt;/li&gt; &#xA; &lt;li&gt;close the Zen window with &lt;code&gt;:ZenMode&lt;/code&gt;, &lt;code&gt;:close&lt;/code&gt; or &lt;code&gt;:quit&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚡️ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.5.0 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;❗ &lt;strong&gt;Zen Mode&lt;/strong&gt; uses the new &lt;code&gt;z-index&lt;/code&gt; option for floating windows&lt;/li&gt; &#xA;   &lt;li&gt;❗ only builds &lt;strong&gt;newer than May 15, 2021&lt;/strong&gt; are supported&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/twilight.nvim&#34;&gt;Twilight&lt;/a&gt; is optional to dim inactive portions of your code&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;use {&#xA;  &#34;folke/zen-mode.nvim&#34;,&#xA;  config = function()&#xA;    require(&#34;zen-mode&#34;).setup {&#xA;      -- your configuration comes here&#xA;      -- or leave it empty to use the default settings&#xA;      -- refer to the configuration section below&#xA;    }&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Vim Script&#xA;Plug &#39;folke/zen-mode.nvim&#39;&#xA;&#xA;lua &amp;lt;&amp;lt; EOF&#xA;  require(&#34;zen-mode&#34;).setup {&#xA;    -- your configuration comes here&#xA;    -- or leave it empty to use the default settings&#xA;    -- refer to the configuration section below&#xA;  }&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚙️ Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Zen Mode&lt;/strong&gt; comes with the following defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  window = {&#xA;    backdrop = 0.95, -- shade the backdrop of the Zen window. Set to 1 to keep the same as Normal&#xA;    -- height and width can be:&#xA;    -- * an absolute number of cells when &amp;gt; 1&#xA;    -- * a percentage of the width / height of the editor when &amp;lt;= 1&#xA;    -- * a function that returns the width or the height&#xA;    width = 120, -- width of the Zen window&#xA;    height = 1, -- height of the Zen window&#xA;    -- by default, no options are changed for the Zen window&#xA;    -- uncomment any of the options below, or add other vim.wo options you want to apply&#xA;    options = {&#xA;      -- signcolumn = &#34;no&#34;, -- disable signcolumn&#xA;      -- number = false, -- disable number column&#xA;      -- relativenumber = false, -- disable relative numbers&#xA;      -- cursorline = false, -- disable cursorline&#xA;      -- cursorcolumn = false, -- disable cursor column&#xA;      -- foldcolumn = &#34;0&#34;, -- disable fold column&#xA;      -- list = false, -- disable whitespace characters&#xA;    },&#xA;  },&#xA;  plugins = {&#xA;    -- disable some global vim options (vim.o...)&#xA;    -- comment the lines to not apply the options&#xA;    options = {&#xA;      enabled = true,&#xA;      ruler = false, -- disables the ruler text in the cmd line area&#xA;      showcmd = false, -- disables the command in the last line of the screen&#xA;    },&#xA;    twilight = { enabled = true }, -- enable to start Twilight when zen mode opens&#xA;    gitsigns = { enabled = false }, -- disables git signs&#xA;    tmux = { enabled = false }, -- disables the tmux statusline&#xA;    -- this will change the font size on kitty when in zen mode&#xA;    -- to make this work, you need to set the following kitty options:&#xA;    -- - allow_remote_control socket-only&#xA;    -- - listen_on unix:/tmp/kitty&#xA;    kitty = {&#xA;      enabled = false,&#xA;      font = &#34;+4&#34;, -- font size increment&#xA;    },&#xA;  },&#xA;  -- callback where you can add custom code when the Zen window opens&#xA;  on_open = function(win)&#xA;  end,&#xA;  -- callback where you can add custom code when the Zen window closes&#xA;  on_close = function()&#xA;  end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Usage&lt;/h2&gt; &#xA;&lt;p&gt;Toggle &lt;strong&gt;Zen Mode&lt;/strong&gt; with &lt;code&gt;:ZenMode&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively you can start &lt;strong&gt;Zen Mode&lt;/strong&gt; with the &lt;code&gt;Lua&lt;/code&gt; API and pass any additional options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;zen-mode&#34;).toggle({&#xA;  window = {&#xA;    width = .85 -- width will be 85% of the editor width&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Visual Studio Code &lt;a href=&#34;https://code.visualstudio.com/docs/getstarted/userinterface#_zen-mode&#34;&gt;Zen Mode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Emacs &lt;a href=&#34;https://github.com/joostkremers/writeroom-mode&#34;&gt;writeroom-mode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>