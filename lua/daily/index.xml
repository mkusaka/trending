<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-23T01:35:28Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LEGO/kong-aws-request-signing</title>
    <updated>2022-09-23T01:35:28Z</updated>
    <id>tag:github.com,2022-09-23:/LEGO/kong-aws-request-signing</id>
    <link href="https://github.com/LEGO/kong-aws-request-signing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Plugin that enables the secure use of AWS Lambdas as upstreams in Kong using Lambda URLs&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;KONG-AWS-REQUEST-SIGNING&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LEGO/kong-aws-request-signing/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/LEGO/kong-aws-request-signing/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;About&lt;/h3&gt; &#xA;&lt;p&gt;This plugin will sign a request with AWS SIGV4 and temporary credentials from &lt;code&gt;sts.amazonaws.com&lt;/code&gt; requested using an OAuth token.&lt;/p&gt; &#xA;&lt;p&gt;It enables the secure use of AWS Lambdas as upstreams in Kong using &lt;a href=&#34;https://aws.amazon.com/blogs/aws/announcing-aws-lambda-function-urls-built-in-https-endpoints-for-single-function-microservices/&#34;&gt;Lambda URLs&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;At the same time it drives down cost and complexity by excluding the AWS API Gateway and allowing to use AWS Lambdas directly.&lt;/p&gt; &#xA;&lt;p&gt;The required AWS setup to make the plugin work with your Lambda HTTPS endpoint is described below.&lt;/p&gt; &#xA;&lt;h3&gt;Plugin configuration parameters:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;aws_assume_role_arn - ARN of the IAM role that the plugin will try to assume&#xA;type = &#34;string&#34;&#xA;required = true&#xA;&#xA;&#xA;aws_assume_role_name - Name of the role above.&#xA;type = &#34;string&#34;&#xA;required = true&#xA;&#xA;&#xA;aws_region - AWS region where your Lambda is deployed to&#xA;type = &#34;string&#34;&#xA;required = true&#xA;&#xA;&#xA;aws_service - AWS Service you are trying to access (lambda)&#xA;type = &#34;string&#34;&#xA;required = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;AWS Setup required&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You have a &lt;a href=&#34;https://eu-west-1.console.aws.amazon.com/lambda/home?region=eu-west-1#&#34;&gt;Lambda function&lt;/a&gt; deployed with &lt;code&gt;Function URL&lt;/code&gt; enabled and Auth type : &lt;code&gt;AWS_IAM&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Show image&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/29011940/183050407-553a5ea9-f746-4baa-8b41-3a88b852ec4b.png&#34; alt=&#34;Lambda example&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Your OpenID Connect provider is added to &lt;a href=&#34;https://us-east-1.console.aws.amazon.com/iamv2/home?region=us-east-1#/identity_providers&#34;&gt;AWS IAM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;You have a role with &lt;code&gt;arn:aws:iam::aws:policy/AWSLambda_FullAccess&lt;/code&gt; permision and the trust relationship below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Show JSON&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;Version&#34;: &#34;2012-10-17&#34;,&#xA;    &#34;Statement&#34;: [&#xA;        {&#xA;            &#34;Effect&#34;: &#34;Allow&#34;,&#xA;            &#34;Principal&#34;: {&#xA;                &#34;Federated&#34;: &#34;${arn_of_the_open_id_connect_provider_step_1}&#34;&#xA;            },&#xA;            &#34;Action&#34;: &#34;sts:AssumeRoleWithWebIdentity&#34;,&#xA;            &#34;Condition&#34;: {&#xA;                &#34;StringEquals&#34;: {&#xA;                    &#34;${the_open_id_connect_provider_step_1}:aud&#34;: &#34;${audience_of_the_lambda_given_by_your_open_id_provider}&#34;&#xA;                }&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;So if your provider is &lt;code&gt;https://sts.windows.net/organization.onmicrosoft.com/&lt;/code&gt; and your app identity is &lt;code&gt;app_identity_1&lt;/code&gt;, the trust relationship above will look like:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Show JSON&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;Version&#34;: &#34;2012-10-17&#34;,&#xA;    &#34;Statement&#34;: [&#xA;        {&#xA;            &#34;Effect&#34;: &#34;Allow&#34;,&#xA;            &#34;Principal&#34;: {&#xA;                &#34;Federated&#34;: &#34;arn:aws:iam::300000000000:oidc-provider/sts.windows.net/organization.onmicrosoft.com/&#34;&#xA;            },&#xA;            &#34;Action&#34;: &#34;sts:AssumeRoleWithWebIdentity&#34;,&#xA;            &#34;Condition&#34;: {&#xA;                &#34;StringEquals&#34;: {&#xA;                    &#34;sts.windows.net/organization.onmicrosoft.com/:aud&#34;: &#34;app_identity_1&#34;&#xA;                }&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;About the code and differences from &lt;a href=&#34;https://github.com/Kong/kong/raw/master/kong/plugins/aws-lambda&#34;&gt;Kong Lambda Plugin&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Some of the code was reused from &lt;a href=&#34;https://github.com/Kong/kong/raw/master/kong/plugins/aws-lambda&#34;&gt;Kong Lambda Plugin&lt;/a&gt; specifically the &lt;a href=&#34;https://github.com/Kong/kong/raw/master/kong/plugins/aws-lambda/v4.lua&#34;&gt;SIGV4 creation&lt;/a&gt; code and some parts for &lt;a href=&#34;https://github.com/Kong/kong/raw/master/kong/plugins/aws-lambda/iam-sts-credentials.lua&#34;&gt;getting the temporary credentials from AWS STS&lt;/a&gt;. There are some considerable differences that will be outlined below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Unlike Kong-Lambda This plugin does not perform the Lambda invocation. But only signs the request coming from the consumer which Kong then forwards to the upstream that it is configured in the service that the plugin is bound to.&lt;/li&gt; &#xA; &lt;li&gt;The plugin works only with temporary credentials that are fetched from &lt;code&gt;sts.amazonaws.com&lt;/code&gt; using &lt;a href=&#34;https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html#API_AssumeRoleWithWebIdentity_RequestParameters&#34;&gt;AssumeRoleWithWebIdentity&lt;/a&gt;, this requires some configuration in AWS which can be found above.&lt;/li&gt; &#xA; &lt;li&gt;This plugin has a low priority and is compatible with the rest of Kong plugins because as mentioned above, it only performs SIGV4 on the request and then appends the necessary headers to be authorized in AWS.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Open Source Attribution&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kong/kong&#34;&gt;Kong&lt;/a&gt; : &lt;a href=&#34;https://github.com/Kong/kong/raw/master/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/openresty/lua-resty-string&#34;&gt;lua-resty-string&lt;/a&gt; : &lt;a href=&#34;https://github.com/openresty/lua-resty-string#copyright-and-license&#34;&gt;BSD License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lunarmodules/Penlight&#34;&gt;Penlight&lt;/a&gt; : &lt;a href=&#34;https://github.com/lunarmodules/Penlight/raw/master/LICENSE.md&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fffonion/lua-resty-openssl&#34;&gt;lua-resty-openssl&lt;/a&gt; : &lt;a href=&#34;https://github.com/fffonion/lua-resty-openssl/raw/master/LICENSE&#34;&gt;BSD 2-Clause &#34;Simplified&#34; License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ledgetech/lua-resty-http&#34;&gt;lua-resty-http&lt;/a&gt; : &lt;a href=&#34;https://github.com/ledgetech/lua-resty-http/raw/master/LICENSE&#34;&gt;BSD 2-Clause &#34;Simplified&#34; License &lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mpx/lua-cjson&#34;&gt;lua-cjson&lt;/a&gt; : &lt;a href=&#34;https://github.com/mpx/lua-cjson/raw/master/LICENSE&#34;&gt;MIT License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LEGO/kong-aws-request-signing/raw/main/LICENSE&#34;&gt;Modified Apache 2.0 (Section 6)&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>msolefonte/vco</title>
    <updated>2022-09-23T01:35:28Z</updated>
    <id>tag:github.com,2022-09-23:/msolefonte/vco</id>
    <link href="https://github.com/msolefonte/vco" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Victory Conditions Overhaul for Total War: Warhammer III&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2858059010&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?style=for-the-badge&amp;amp;url=https%3A%2F%2Fshieldsio-steam-workshop.jross.me%2F2858059010%2Fsubscriptions-text&#34; alt=&#34;Steam Workshop Subscribers&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2858059010&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?style=for-the-badge&amp;amp;url=https%3A%2F%2Fshieldsio-steam-workshop.jross.me%2F2858059010%2Ffavourites-text&#34; alt=&#34;Steam Workshop Favorites&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Victory Conditions Overhaul&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://GitHub.com/msolefonte/vco/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/msolefonte/vco.svg?style=flat&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/wolfylpdc&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint.svg?url=https%3A%2F%2Fshieldsio-patreon.vercel.app%2Fapi%3Fusername%3Dwolfylpdc%26type%3Dpatrons&amp;amp;style=flat&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/msolefonte/vco/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/msolefonte/vco?style=flat&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://steamcommunity.com/workshop/filedetails/?id=2858059010&#34;&gt;Steam Workshop Mod Link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Victory Conditions Overhaul mod for Total War: Warhammer III.&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Victory Conditions Overhaul introduces a major rework of the default victory conditions. It rejects the classic idea of short and long campaigns and proposes a new concept based on completing &lt;strong&gt;routes&lt;/strong&gt;. A route is a campaign on its own, customly tailored for each faction and lord, and completing it will be enough to achieve a victory and unlock the achievements.&lt;/p&gt; &#xA;&lt;p&gt;All factions have three routes available, each one with a tone. They are mean to be short and completed around 50-70 turns. You can start anywhere, but you do not have to stop there: we consider completing one route equals a Short Victory, completing two equals a Long one, and you already got it with the Ultimate. Furthermore, &lt;strong&gt;compelting a route will reward you with tailored and loreful benefits&lt;/strong&gt; that will help you keep the campaign ongoing.&lt;/p&gt; &#xA;&lt;h2&gt;New Features&lt;/h2&gt; &#xA;&lt;p&gt;Victory Conditions Overhaul 5 does not only introduce new routes for Immortal Empires, but also long-time requested features. This includes, but is is not limited, to the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Unification&lt;/strong&gt; between the framework and the main mod: You will not need two mods anymore. In the close future the rest of the submods will be merged into this one.&lt;/li&gt; &#xA; &lt;li&gt;Native support for &lt;strong&gt;Multiplayer&lt;/strong&gt;. Yes, finally you will be able to play your customly tailored multiplayer campaigns.&lt;/li&gt; &#xA; &lt;li&gt;Collaboration with &lt;strong&gt;Legendary Lore&lt;/strong&gt;. Now, completing certain evens will trigger small bits of lore. Custom rewards and missions also include some text to make them feel loreful.&lt;/li&gt; &#xA; &lt;li&gt;Custom tailored &lt;strong&gt;rewards after completing a route&lt;/strong&gt;. You secured a trade route? Your economy is boosted. You unfied your empire? Your citizens are happier. You honored your gods? They will help you back.&lt;/li&gt; &#xA; &lt;li&gt;The mod still works as a &lt;strong&gt;framework&lt;/strong&gt;. Feel free to create submods or your own custom routes!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;As a user&lt;/h3&gt; &#xA;&lt;p&gt;Subscribe and enjoy.&lt;/p&gt; &#xA;&lt;h3&gt;As a developer&lt;/h3&gt; &#xA;&lt;p&gt;To create a submod you have to create a &lt;code&gt;.pack&lt;/code&gt; file composed by two things: the framework loader and the victory conditions. First of all, you have to decide a name for your mod. This name does not have the be the same that the one you use in the &lt;code&gt;.pack&lt;/code&gt; file or the Steam Workshop, but has to be consistent along the mod. In this guide, we are going to call it &lt;code&gt;your-mod-name&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;The framework loader&lt;/h4&gt; &#xA;&lt;p&gt;Once decided, you have to create a script named &lt;code&gt;&amp;lt;your-mod-name&amp;gt;.lua&lt;/code&gt; and place it in the &lt;code&gt;script/campaign/mod/&lt;/code&gt; folder. The content of that script has to be the following one:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local vco = core:get_static_object(&#34;vco&#34;);&#xA;&#xA;vco:disable_default_campaigns();&#xA;cm:add_first_tick_callback(function() vco:trigger_custom_missions(&#34;&amp;lt;your-mod-name&amp;gt;&#34;) end);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;The factions folders&lt;/h4&gt; &#xA;&lt;p&gt;Then, you have to create the folder &lt;code&gt;src/script/&amp;lt;your-mod-name&amp;gt;&lt;/code&gt; and place there a folder for each faction you want to mod. Inside that folder, create one new folder for each campaign you want to cover. The name has to be the campaign key. An example of this would be &lt;code&gt;main_warhammer&lt;/code&gt; or &lt;code&gt;wh3_main_chaos&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now, next folder name has to be the key of the faction, which can be checked in the table &lt;code&gt;factions&lt;/code&gt;, available at Dave. For example, the folder name for The Golden Order has to be &lt;code&gt;wh2_dlc13_emp_golden_order&lt;/code&gt;. Finally, inside of it, you have to create a &lt;code&gt;missions.lua&lt;/code&gt; file where all the victory conditions are going to be placed.&lt;/p&gt; &#xA;&lt;p&gt;All in all, to add new victory conditions to The Golder Order Immortal Empires campaign, you have to create these files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;script/campaign/mod/&amp;lt;your-mod-name&amp;gt;.lua&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;script/&amp;lt;your-mod-name&amp;gt;/main_warhammer/wh2_dlc13_emp_golden_order/missions.lua&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;The objectives script&lt;/h4&gt; &#xA;&lt;p&gt;Now, inside of each &lt;code&gt;missions.lua&lt;/code&gt;, you have to export a list of missions, which is an array of strings in the default &lt;code&gt;victory_objectives.txt&lt;/code&gt; format. Here goes one simple example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local missions = {&#xA;&#x9;[[&#xA; &#x9;&#x9;mission&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;victory_type vco_victory_type_alternative_2_threat_elimination;&#xA;&#x9;&#x9;&#x9;key wh_main_short_victory;&#xA;&#x9;&#x9;&#x9;issuer CLAN_ELDERS;&#xA;&#x9;&#x9;&#x9;primary_objectives_and_payload&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;objective&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;type CONTROL_N_PROVINCES_INCLUDING;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;total 2;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;override_text mission_text_text_wh_main_objective_override_empire_sylvania;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;province wh_main_eastern_sylvania;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;province wh_main_western_sylvania;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;objective&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;type DESTROY_FACTION;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;faction wh_main_vmp_vampire_counts;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;faction wh_main_vmp_schwartzhafen;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;confederation_valid;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;payload&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;game_victory;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;]]&#xA;};&#xA;&#xA;return missions;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As the missions interfaces are changing constantly, as I keep adding new options. You can find the list in this framework under the path &lt;code&gt;src/db/victory_types_tables/vco&lt;/code&gt;. It is important to understand that only one type of each can be available at the same time per faction, so, if you own multiple submods that add, for example, a Long Victory condition, one is going to override the other.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;p&gt;The FAQ can be found &lt;a href=&#34;https://www.github.com/msolefonte/tww2-vco2-framework/docs/faq.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to add issues or to create pull requests. Help is always welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://semver.org/&#34;&gt;SemVer&lt;/a&gt; is used for versioning. For the changelog, see &lt;a href=&#34;https://raw.githubusercontent.com/msolefonte/vco/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Marc Solé Fonte&lt;/strong&gt;: &lt;em&gt;Initial work&lt;/em&gt; - &lt;a href=&#34;https://github.com/msolefonte&#34;&gt;msolefonte&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Oh_Man[TFE]&lt;/strong&gt;: &lt;em&gt;Added new routes and introduced new lore blocks&lt;/em&gt; - &lt;a href=&#34;https://steamcommunity.com/profiles/76561197972445688/&#34;&gt;Oh_Man[TFE]&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Vindico&lt;/strong&gt;: &lt;em&gt;Added new routes&lt;/em&gt; - &lt;a href=&#34;https://github.com/MichaelBrown08&#34;&gt;MichaelBrown08&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the Apache License, Version 2.0 - see the &lt;a href=&#34;https://raw.githubusercontent.com/msolefonte/vco/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Special thanks to all the users that have supported the development economically.&lt;/li&gt; &#xA; &lt;li&gt;Special thanks to all the modders of the &lt;strong&gt;Da Modding Den&lt;/strong&gt; Discord for their knowledge and experience.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>nvim-telescope/telescope-live-grep-args.nvim</title>
    <updated>2022-09-23T01:35:28Z</updated>
    <id>tag:github.com,2022-09-23:/nvim-telescope/telescope-live-grep-args.nvim</id>
    <link href="https://github.com/nvim-telescope/telescope-live-grep-args.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Live grep with args&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Telescope live grep args&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://api.reuse.software/info/github.com/nvim-telescope/telescope-live-grep-args.nvim&#34;&gt;&lt;img src=&#34;https://api.reuse.software/badge/github.com/nvim-telescope/telescope-live-grep-args.nvim&#34; alt=&#34;REUSE status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Live grep args picker for &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nvim-telescope/telescope-live-grep-args.nvim/master/img/telescope-live-grep-args.nvim.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What it does&lt;/h2&gt; &#xA;&lt;p&gt;It enables passing arguments to the grep command, &lt;code&gt;rg&lt;/code&gt; examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;foo&lt;/code&gt; → press &lt;code&gt;&amp;lt;C-k&amp;gt;&lt;/code&gt; → &lt;code&gt;&#34;foo&#34; &lt;/code&gt; → &lt;code&gt;&#34;foo&#34; -tmd&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;--no-ignore foo&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&#34;foo bar&#34; bazdir&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Find the full &lt;a href=&#34;https://github.com/BurntSushi/ripgrep/raw/master/GUIDE.md&#34;&gt;ripgrep guide&lt;/a&gt; here to find out what is possible.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Packer&lt;/summary&gt; Add `telescope-live-grep-args.nvim` as `telescope.nvim` dependency, e.g.: &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#34;nvim-telescope/telescope.nvim&#34;,&#xA;  requires = {&#xA;    { &#34;nvim-telescope/telescope-live-grep-args.nvim&#34; },&#xA;  },&#xA;  config = function()&#xA;    require(&#34;telescope&#34;).load_extension(&#34;live_grep_args&#34;)&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Other&lt;/summary&gt; Once live grep args is available as lua module, load the extension: &#xA; &lt;pre&gt;&lt;code&gt;require(&#34;telescope&#34;).load_extension(&#34;live_grep_args&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Map live grep args:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;fg&#34;, &#34;:lua require(&#39;telescope&#39;).extensions.live_grep_args.live_grep_args()&amp;lt;CR&amp;gt;&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Call live grep args:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:lua require(&#34;telescope&#34;).extensions.live_grep_args.live_grep_args()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Mappings&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Mappings&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-k&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quote prompt, e.g. &lt;code&gt;foo&lt;/code&gt; → &lt;code&gt;&#34;foo&#34; &lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Grep argument examples&lt;/h3&gt; &#xA;&lt;p&gt;(Some examples are ripgrep specific)&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Prompt&lt;/th&gt; &#xA;   &lt;th&gt;Args&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;foo bar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foo bar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search for „foo bar“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;foo bar&#34; baz&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foo bar&lt;/code&gt;, &lt;code&gt;baz&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search for „foo bar“ in dir „baz“&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;--no-ignore &#34;foo bar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;--no-ignore&lt;/code&gt;, &lt;code&gt;foo bar&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search for „foo bar“ ignoring ignores&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&#34;foo&#34; ../other-project&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foo&lt;/code&gt;, &lt;code&gt;../other-project&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search for „foo“ in &lt;code&gt;../other-project&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If the prompt value does not begin with &lt;code&gt;&#39;&lt;/code&gt;, &lt;code&gt;&#34;&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; the entire prompt is treated as a single argument. This behaviour can be turned off by setting the &lt;code&gt;auto_quoting&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local telescope = require(&#34;telescope&#34;)&#xA;local lga_actions = require(&#34;telescope-live-grep-args.actions&#34;)&#xA;&#xA;telescope.setup {&#xA;  extensions = {&#xA;    live_grep_args = {&#xA;      auto_quoting = true, -- enable/disable auto-quoting&#xA;      -- override default mappings&#xA;      -- default_mappings = {},&#xA;      mappings = { -- extend mappings&#xA;        i = {&#xA;          [&#34;&amp;lt;C-k&amp;gt;&#34;] = lga_actions.quote_prompt(),&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Mapping recipes:&lt;/h3&gt; &#xA;&lt;p&gt;This table provides some mapping ideas:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Mapped function&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;actions.quote_prompt()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quote prompt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foo&lt;/code&gt; → &lt;code&gt;&#34;foo&#34;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;actions.quote_prompt({ postfix = &#39; --iglob &#39; })&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quote prompt and add &lt;code&gt;--iglob&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foo&lt;/code&gt; → &lt;code&gt;&#34;foo&#34; --iglob &lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;actions.quote_prompt({ postfix = &#39; -t&#39; })&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quote prompt and add &lt;code&gt;-t&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foo&lt;/code&gt; → &lt;code&gt;&#34;foo&#34; -t&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Running the tests&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt; next to this repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;make test&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Based on the idea of this &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim/pull/670&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>