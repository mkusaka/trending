<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-04T01:39:15Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cappyzawa/trim.nvim</title>
    <updated>2023-03-04T01:39:15Z</updated>
    <id>tag:github.com,2023-03-04:/cappyzawa/trim.nvim</id>
    <link href="https://github.com/cappyzawa/trim.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This plugin trims trailing whitespace and lines.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;trim.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cappyzawa/trim.nvim/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/cappyzawa/trim.nvim.svg?sanitize=true&#34; alt=&#34;GitHub release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/cappyzawa/trim.nvim/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/cappyzawa/trim.nvim.svg?sanitize=true&#34; alt=&#34;GitHub&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin trims trailing whitespace and lines.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Neovim v0.7.0+&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to install&lt;/h2&gt; &#xA;&lt;h3&gt;Lazy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lazy&#34;).setup({&#xA;  &#34;cappyzawa/trim.nvim&#34;,&#xA;  opts = {}&#xA;}, opt)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Packer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;  &#34;cappyzawa/trim.nvim&#34;,&#xA;  config = function()&#xA;    require(&#34;trim&#34;).setup({})&#xA;  end&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- default config&#xA;local default_config = {&#xA;  ft_blocklist = {},&#xA;  patterns = {},&#xA;  trim_on_write = true,&#xA;  trim_trailing = true,&#xA;  trim_last_line = true,&#xA;  trim_first_line = true,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;trim&#39;).setup({&#xA;  -- if you want to ignore markdown file.&#xA;  -- you can specify filetypes.&#xA;  ft_blocklist = {&#34;markdown&#34;},&#xA;&#xA;  -- if you want to remove multiple blank lines&#xA;  patterns = {&#xA;    [[%s/\(\n\n\)\n\+/\1/]],   -- replace multiple blank lines with a single line&#xA;  },&#xA;&#xA;  -- if you want to disable trim on write by default&#xA;  trim_on_write = false,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;:TrimToggle&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Toggle trim on save.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;:Trim&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Trim the buffer right away.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bmos/FG-PFRPG-Encumbrance-Penalties</title>
    <updated>2023-03-04T01:39:15Z</updated>
    <id>tag:github.com,2023-03-04:/bmos/FG-PFRPG-Encumbrance-Penalties</id>
    <link href="https://github.com/bmos/FG-PFRPG-Encumbrance-Penalties" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This extension enhances functionality related to carrying capacity and weight/armor encumbrance.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/bmos/FG-PFRPG-Encumbrance-Penalties/actions/workflows/create-ext.yml&#34;&gt;&lt;img src=&#34;https://github.com/bmos/FG-PFRPG-Encumbrance-Penalties/actions/workflows/create-ext.yml/badge.svg?sanitize=true&#34; alt=&#34;Build FG-Usable File&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bmos/FG-PFRPG-Encumbrance-Penalties/actions/workflows/luacheck.yml&#34;&gt;&lt;img src=&#34;https://github.com/bmos/FG-PFRPG-Encumbrance-Penalties/actions/workflows/luacheck.yml/badge.svg?sanitize=true&#34; alt=&#34;Luacheck&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Encumbrance Penalties&lt;/h1&gt; &#xA;&lt;p&gt;This extension enhances functionality related to carrying capacity and weight/armor encumbrance.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update carrying capacities when strength-modifying effects are applied/changed/removed. Currently supported: &#39;STR: N&#39; (3.5E ONLY - increases strength score and carrying capacity), &#39;CARRY: N&#39; (increases strength score only for calculating carrying capacity), &#39;CARRYMULT: N&#39; (multiplies carrying capacity such as for ant haul).&lt;/li&gt; &#xA; &lt;li&gt;Automate encumbrance penalties based on total weight and current carrying capacity. The penalties are now colored to indicate their source. Red is for encumbrance based on weight and black is for armor.&lt;/li&gt; &#xA; &lt;li&gt;Auto-change speed based on weight encumbrance, some supported conditions, and SPEED: N effects. Ignore speed penalties from armor or encumbrance for Slow and Steady trait.&lt;/li&gt; &#xA; &lt;li&gt;Include the &lt;a href=&#34;https://www.d20pfsrd.com/traits/combat-traits/armor-expert/&#34;&gt;Armor Expert trait&lt;/a&gt;, &lt;a href=&#34;https://www.d20pfsrd.com/traits/combat-traits/muscle-of-the-society/&#34;&gt;Muscle of the Society trait&lt;/a&gt;, and &lt;a href=&#34;https://www.d20pfsrd.com/classes/Core-Classes/Fighter/#Armor_Training_Ex&#34;&gt;Armor Training fighter class feature&lt;/a&gt; in carry capacity and armor calculations.&lt;/li&gt; &#xA; &lt;li&gt;Automate &lt;a href=&#34;https://www.aonprd.com/ClassDisplay.aspx?ItemName=Barbarian&#34;&gt;barbarian&#39;s Fast Movement&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Compatibility and Instructions&lt;/h1&gt; &#xA;&lt;p&gt;This extension has been tested with &lt;a href=&#34;https://www.fantasygrounds.com/home/FantasyGroundsUnity.php&#34;&gt;FantasyGrounds Unity&lt;/a&gt; 4.3.3 (2023-02-23).&lt;/p&gt;</summary>
  </entry>
</feed>