<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-16T01:37:36Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>echasnovski/mini.ai</title>
    <updated>2023-03-16T01:37:36Z</updated>
    <id>tag:github.com,2023-03-16:/echasnovski/mini.ai</id>
    <link href="https://github.com/echasnovski/mini.ai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim Lua plugin to extend and create `a`/`i` textobjects. Part of &#39;mini.nvim&#39; library.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/echasnovski/media/raw/main/mini.nvim/logo/logo_ai.png&#34; style=&#34;width: 100%&#34;&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/echasnovski/mini.nvim&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h3&gt;Extend and create &lt;code&gt;a&lt;/code&gt;/&lt;code&gt;i&lt;/code&gt; textobjects&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It enhances some builtin textobjects (like &lt;code&gt;a(&lt;/code&gt;, &lt;code&gt;a)&lt;/code&gt;, &lt;code&gt;a&#39;&lt;/code&gt;, and more), creates new ones (like &lt;code&gt;a*&lt;/code&gt;, &lt;code&gt;a&amp;lt;Space&amp;gt;&lt;/code&gt;, &lt;code&gt;af&lt;/code&gt;, &lt;code&gt;a?&lt;/code&gt;, and more), and allows user to create their own (like based on treesitter, and more).&lt;/li&gt; &#xA; &lt;li&gt;Supports dot-repeat, &lt;code&gt;v:count&lt;/code&gt;, different search methods, consecutive application, and customization via Lua patterns or functions.&lt;/li&gt; &#xA; &lt;li&gt;Has builtins for brackets, quotes, function call, argument, tag, user prompt, and any punctuation/digit/whitespace character.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See more details in &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.ai/main/#features&#34;&gt;Features&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.ai/main/doc/mini-ai.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;⦿ This is a part of &lt;a href=&#34;https://github.com/echasnovski/mini.nvim&#34;&gt;mini.nvim&lt;/a&gt; library. Please use &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/README.md&#34;&gt;this link&lt;/a&gt; if you want to mention this module.&lt;/p&gt; &#xA;&lt;p&gt;⦿ All contributions (issues, pull requests, discussions, etc.) are done inside of &#39;mini.nvim&#39;.&lt;/p&gt; &#xA;&lt;p&gt;⦿ See the repository page to learn about common design principles and configuration recipes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want to help this project grow but don&#39;t know where to start, check out &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/CONTRIBUTING.md&#34;&gt;contributing guides of &#39;mini.nvim&#39;&lt;/a&gt; or leave a Github star for &#39;mini.nvim&#39; project and/or any its standalone Git repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/24854248/181909691-b6f6b677-c37f-468f-85db-8eb8b1e1314e.mp4&#34;&gt;https://user-images.githubusercontent.com/24854248/181909691-b6f6b677-c37f-468f-85db-8eb8b1e1314e.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizable creation of &lt;code&gt;a&lt;/code&gt;/&lt;code&gt;i&lt;/code&gt; textobjects using Lua patterns and functions. Supports: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Dot-repeat.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;v:count&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Different search methods (see help for &lt;code&gt;MiniAi.config&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Consecutive application (update selection without leaving Visual mode).&lt;/li&gt; &#xA;   &lt;li&gt;Aliases for multiple textobjects.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Comprehensive builtin textobjects (see more in help for &lt;code&gt;MiniAi-textobject-builtin&lt;/code&gt;): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Balanced brackets (with and without whitespace) plus alias.&lt;/li&gt; &#xA;   &lt;li&gt;Balanced quotes plus alias.&lt;/li&gt; &#xA;   &lt;li&gt;Function call.&lt;/li&gt; &#xA;   &lt;li&gt;Argument.&lt;/li&gt; &#xA;   &lt;li&gt;Tag.&lt;/li&gt; &#xA;   &lt;li&gt;Derived from user prompt.&lt;/li&gt; &#xA;   &lt;li&gt;Default for punctuation, digit, or whitespace single character.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Motions for jumping to left/right edge of textobject.&lt;/li&gt; &#xA; &lt;li&gt;Set of specification generators to tweak some builtin textobjects (see help for &lt;code&gt;MiniAi.gen_spec&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Treesitter textobjects (through &lt;code&gt;MiniAi.gen_spec.treesitter()&lt;/code&gt; helper).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This plugin can be installed as part of &#39;mini.nvim&#39; library (&lt;strong&gt;recommended&lt;/strong&gt;) or as a standalone Git repository.&lt;/p&gt; &#xA;&lt;p&gt;There are two branches to install from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;main&lt;/code&gt; (default, &lt;strong&gt;recommended&lt;/strong&gt;) will have latest development version of plugin. All changes since last stable release should be perceived as being in beta testing phase (meaning they already passed alpha-testing and are moderately settled).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt; will be updated only upon releases with code tested during public beta-testing phase in &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here are code snippets for some common installation methods (use only one):&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;folke/lazy.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.nvim&#39;, version = false },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.nvim&#39;, version = &#39;*&#39; },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.ai&#39;, version = false },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.ai&#39;, version = &#39;*&#39; },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;wbthomason/packer.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.nvim&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.ai&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.ai&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;junegunn/vim-plug&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.ai&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.ai&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: don&#39;t forget to call &lt;code&gt;require(&#39;mini.ai&#39;).setup()&lt;/code&gt; to enable its functionality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: if you are on Windows, there might be problems with too long file paths (like &lt;code&gt;error: unable to create file &amp;lt;some file name&amp;gt;: Filename too long&lt;/code&gt;). Try doing one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable corresponding git global config value: &lt;code&gt;git config --system core.longpaths true&lt;/code&gt;. Then try to reinstall.&lt;/li&gt; &#xA; &lt;li&gt;Install plugin in other place with shorter path.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Default config&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- No need to copy this inside `setup()`. Will be used automatically.&#xA;{&#xA;  -- Table with textobject id as fields, textobject specification as values.&#xA;  -- Also use this to disable builtin textobjects. See |MiniAi.config|.&#xA;  custom_textobjects = nil,&#xA;&#xA;  -- Module mappings. Use `&#39;&#39;` (empty string) to disable one.&#xA;  mappings = {&#xA;    -- Main textobject prefixes&#xA;    around = &#39;a&#39;,&#xA;    inside = &#39;i&#39;,&#xA;&#xA;    -- Next/last variants&#xA;    around_next = &#39;an&#39;,&#xA;    inside_next = &#39;in&#39;,&#xA;    around_last = &#39;al&#39;,&#xA;    inside_last = &#39;il&#39;,&#xA;&#xA;    -- Move cursor to corresponding edge of `a` textobject&#xA;    goto_left = &#39;g[&#39;,&#xA;    goto_right = &#39;g]&#39;,&#xA;  },&#xA;&#xA;  -- Number of lines within which textobject is searched&#xA;  n_lines = 50,&#xA;&#xA;  -- How to search for object (first inside current line, then inside&#xA;  -- neighborhood). One of &#39;cover&#39;, &#39;cover_or_next&#39;, &#39;cover_or_prev&#39;,&#xA;  -- &#39;cover_or_nearest&#39;, &#39;next&#39;, &#39;previous&#39;, &#39;nearest&#39;.&#xA;  search_method = &#39;cover_or_next&#39;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Similar plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wellle/targets.vim&#34;&gt;wellle/targets.vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter-textobjects&#34;&gt;nvim-treesitter/nvim-treesitter-textobjects&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kana/vim-textobj-user&#34;&gt;kana/vim-textobj-user&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>AstroNvim/user_example</title>
    <updated>2023-03-16T01:37:36Z</updated>
    <id>tag:github.com,2023-03-16:/AstroNvim/user_example</id>
    <link href="https://github.com/AstroNvim/user_example" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An example user configuration with a split up structure&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AstroNvim User Configuration Example&lt;/h1&gt; &#xA;&lt;p&gt;A user configuration template for &lt;a href=&#34;https://github.com/AstroNvim/AstroNvim&#34;&gt;AstroNvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🛠️ Installation&lt;/h2&gt; &#xA;&lt;h4&gt;Make a backup of your current nvim and shared folder&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mv ~/.config/nvim ~/.config/nvim.bak&#xA;mv ~/.local/share/nvim ~/.local/share/nvim.bak&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Clone AstroNvim&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/AstroNvim/AstroNvim ~/.config/nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Create a new user repository from this template&lt;/h4&gt; &#xA;&lt;p&gt;Press the &#34;Use this template&#34; button above to create a new repository to store your user configuration.&lt;/p&gt; &#xA;&lt;p&gt;You can also just clone this repository directly if you do not want to track your user configuration in GitHub.&lt;/p&gt; &#xA;&lt;h4&gt;Clone the repository&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/&amp;lt;your_user&amp;gt;/&amp;lt;your_repository&amp;gt; ~/.config/nvim/lua/user&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Start Neovim&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;nvim&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>