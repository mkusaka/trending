<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-20T01:38:03Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JoosepAlviste/palenightfall.nvim</title>
    <updated>2023-01-20T01:38:03Z</updated>
    <id>tag:github.com,2023-01-20:/JoosepAlviste/palenightfall.nvim</id>
    <link href="https://github.com/JoosepAlviste/palenightfall.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üåë Neovim theme inspired by material palenight.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üåë Palenightfall&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9450943/132907523-7033ec1d-281e-418c-907c-1f2de2d4b7c6.png&#34; alt=&#34;&#34;&gt;&lt;/h2&gt; &#xA;&lt;p&gt;A Neovim theme inspired by material palenight. I&#39;ve used the &lt;a href=&#34;https://github.com/kaicataldo/material.vim&#34;&gt;material palenight&lt;/a&gt; theme for a long time and have made many adjustments to it in my config. I thought that it would make sense to turn this into an actual theme.&lt;/p&gt; &#xA;&lt;p&gt;Here are some differences from the material themes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Darker&lt;/strong&gt;: A darker background color&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easier on the eyes&lt;/strong&gt;: Much less red and brown&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Smaller and simpler codebase&lt;/strong&gt;: A single theme since I only used the palenight variant&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.5.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install with your favorite plugin manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use &#39;JoosepAlviste/palenightfall.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;p&gt;In Vimscript:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;colorscheme palenightfall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or in Lua:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;palenightfall&#39;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Any colors and highlights can be overridden in Lua with the &lt;code&gt;setup&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;palenightfall&#39;).setup({&#xA;  color_overrides = {&#xA;    cyan = &#39;#fff0000&#39;,&#xA;  },&#xA;  highlight_overrides = {&#xA;    -- Check the exact highlight configuration format from the code&#xA;    Normal = { fg = &#39;#ff0000&#39; },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are also explicit functions for overriding either the colors or the highlights:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;palenightfall&#39;).configure_colors({&#xA;  cyan = &#39;#fff0000&#39;,&#xA;})&#xA;require(&#39;palenightfall&#39;).configure_highlights({&#xA;  Normal = { fg = &#39;#ff0000&#39; },&#xA;})&#xA;&#xA;-- Make sure to call `.setup()` *after* configuration&#xA;require(&#39;palenightfall&#39;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can access the colors if you would like to use them in your own customizations:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local colors = require(&#39;palenightfall&#39;).colors&#xA;&#xA;require(&#39;palenightfall&#39;).setup({&#xA;  highlight_overrides = {&#xA;    Normal = { fg = colors.cyan },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;More screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9450943/140811276-b794f2d5-4a43-49ea-887b-6b84db9483db.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9450943/140811459-5a021aff-9cf6-46b1-8ef1-d88a5e972d10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9450943/140811822-8e71bfc4-8fea-4f22-b777-a3e85aebf3aa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9450943/140811912-748e3f9e-222a-4367-ba4e-8a2a0797844a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/9450943/140812274-c8d6f376-9819-4d14-b893-0197ba6616f8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>timm/tested</title>
    <updated>2023-01-20T01:38:03Z</updated>
    <id>tag:github.com,2023-01-20:/timm/tested</id>
    <link href="https://github.com/timm/tested" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The best way to test &#34;it&#34; is to watch someone else try to break &#34;it&#34;.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;small&gt;&lt;/small&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;small&gt;&amp;nbsp; &lt;a name=&#34;top&#34;&gt;&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;&#xA;&lt;small&gt; &#xA; &lt;table&gt;&#xA;  &lt;tbody&gt;&#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timm/tested/main/README.md#top&#34;&gt;home&lt;/a&gt; &lt;/td&gt;&#xA;    &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/timm/tested/main/ROADMAP.md&#34;&gt;roadmap&lt;/a&gt; &lt;/td&gt;&#xA;    &lt;td&gt;&lt;a href=&#34;http:github.com/timm/tested/issues&#34;&gt;issues&lt;/a&gt; &lt;/td&gt;&#xA;    &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/timm/tested/main/LICENSE.md&#34;&gt;¬©2022,2023&lt;/a&gt; by &lt;a href=&#34;http://menzies.us&#34;&gt;tim menzies&lt;/a&gt; &lt;/td&gt;&#xA;   &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA; &lt;/table&gt;&lt;/small&gt; &#xA;&lt;img align=&#34;center&#34; width=&#34;600&#34; src=&#34;https://raw.githubusercontent.com/timm/tested/main/docs/img/banner.png&#34;&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p&gt; &lt;img src=&#34;https://img.shields.io/badge/task-ai-blueviolet&#34;&gt;&lt;a href=&#34;https://github.com/timm/tested/actions/workflows/tests.yml&#34;&gt; &lt;img src=&#34;https://github.com/timm/tested/actions/workflows/tests.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/language-lua-orange&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/purpose-teaching-yellow&#34;&gt; &lt;a href=&#34;https://zenodo.org/badge/latestdoi/569981645&#34;&gt; &lt;img src=&#34;https://zenodo.org/badge/569981645.svg?sanitize=true&#34; alt=&#34;DOI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- table&gt;&#xA;&lt;tr&gt;&lt;td&gt;Study guide &lt;/td&gt;&lt;td&gt;Sub-term&#xA;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;data &lt;/td&gt;&lt;td&gt;&#xA;data: row (a.k.a. example, instance);&#xA;column (a.k.a. attribute, feature)&#xA;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;learning type &lt;/td&gt;&lt;td&gt;&#xA;unsupervised or semi-supervised or supervised;&lt;br&gt;&#xA;instance or model-based&lt;br&gt;&#xA;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;algorothm &lt;/td&gt;&lt;td&gt;&#xA;decision tree learning;&#xA;clustering;&#xA;FASTMAP (and cosine rule)&lt;br&gt;&#xA;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;accountability &lt;/td&gt;&lt;td&gt;&#xA;logging, watched, presence&lt;br&gt;&#xA;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;multi-objective reasoning &lt;/td&gt;&lt;td&gt;&#xA;domination, Pareto frontier, Zitzler predicate&lt;br&gt;&#xA;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;misc &lt;/td&gt;&lt;td&gt;&#xA;stakeholder,&#xA;manifold, labelling cost, curse of dimensionality, explanation&#xA;&lt;/td&gt;&lt;/tr&gt;&#xA;&lt;/table --&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;TESTED is a semi-supervised, multi-objective, model-based explanation system. The code is a refactoring of decades of work by dozens of Ph.D. students.&lt;/p&gt; &#xA;&lt;p&gt;TESTED assumes that the best way to test &#34;it&#34; is to watch someone else (specifically, stakeholders [^stake]) try to break &#34;it&#34;. TESTED lets people explore more and fix more (but sampling less around a system).&lt;/p&gt; &#xA;&lt;p&gt;TESTED is not a pretty GUI. Rather, it is a programming toolkit that shows that these kinds of tools are (very) simple to build. For example, everything here is just a few hundred lines of LUA (or less). And all of that code shares the same similar structures (so once you can code on tool, you can code much of the others).&lt;/p&gt; &#xA;&lt;p&gt;[^stake]: Definition: &#34;Stakeholders&#34; are individuals or organizations having a right, share, claim, or interest in a system or in its possession of characteristics that meet their needs and expectations &lt;a href=&#34;https://www.iso.org/standard/63711.html&#34;&gt;(ISO/IEC/IEEE 2015)&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;p&gt;So what is TESTED really about?&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;is it about how to reconfigure broken things to make them better?&lt;/li&gt; &#xA; &lt;li&gt;is it about requirements engineering?&lt;/li&gt; &#xA; &lt;li&gt;is it about software engineering?&lt;/li&gt; &#xA; &lt;li&gt;is it about configuration?&lt;/li&gt; &#xA; &lt;li&gt;is it about data mining?&lt;/li&gt; &#xA; &lt;li&gt;is it about testing?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To which the answer is &#34;yes&#34;. All these things share the same underlying methods and challenges. Which means tools built for one of these tasks can help the other [^duo][^abduction].&lt;/p&gt; &#xA;&lt;p&gt;TESTED aims to support &#34;stakeholder testing&#34;. This is a kind of black box tested aimed at offering a big picture summary of some code, not just for the developers, but also for those that have to use the software. More than just acceptance testing (which is usually some contractual thing), stakeholder testing aims to measure then mitigate problems with the system. That is, normal testing just finds bugs while stakeholder testing finds gradients along which the system can slip up or down to better or worse behavior&lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;p&gt;Install Lua:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install lua       # on max os/x&#xA;lua -v                 # TESTED needs at least LUA version 5.3&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check-out this repo&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/timm/tested&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check your installation&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cd tested/src&#xA;lua 101.lua -g all # should show one crash and several passes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;What is TESTED??&lt;/h1&gt; &#xA;&lt;p&gt;When people like me (i.e. a developer) write software that is used by other people (i.e. the stakeholders), those other people should be able to verify that the built software is right, and validate that the right software is being built.&lt;/p&gt; &#xA;&lt;p&gt;Such &#34;stakeholder testing&#34; is challenging since, often, stakeholders may not understand everything about what goes on inside the code. Hence stakeholder testing needs special kinds of tools that helps helps humans find the best things or fix the worst things; without having to offer too much information on each thing.&lt;/p&gt; &#xA;&lt;p&gt;The central claim of TESTED is that these: &lt;strong&gt;tools are surprisingly easy to build&lt;/strong&gt;. To say that another way:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;people can (and should) understand AI systems;&lt;/li&gt; &#xA; &lt;li&gt;then use those systems to build a better world.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Every tool is less than a few hundred lines of LUA code and all those tools share most of the same internal structure. Students can learn this simpler approach to AI as a set of weekly homeworks where they recode the tools in any language at all (except LUA). Then, for graduate students, they can also do a final four week project where they try to improve on a stakeholder testing tool called &#34;fishing&#34;, provided in this kit.&lt;/p&gt; &#xA;&lt;p&gt;(Just an aside, the way I do homeworks is that every week, everyone has to submit something, even if it is broken. Homeworks can get submitted multiple times so I grade them &#34;2&#34; (for &#34;good&#34;); &#34;1&#34; (for &#34;invited to resubmit&#34;); &#34;0&#34; (for &#34;bad&#34; or &#34;no submission&#34;.)&lt;/p&gt; &#xA;&lt;h2&gt;What is &#34;STAKEHOLDER TESTING&#34;&lt;/h2&gt; &#xA;&lt;p&gt;Better methods for better searching for better solutions is important. There are too many examples of terrible software solutions. For example:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Amazon had to scrap an automated recruiting tool as it was found to be &lt;a href=&#34;https://reut.rs/2Od9fPr&#34;&gt;biased against women&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A widely used face recognition software was found to be biased against &lt;a href=&#34;https://news.mit.edu/2018/study-finds-gender-skin-type-bias-artificial-intelligence-systems-0212&#34;&gt;dark-skinned women&lt;/a&gt; and &lt;a href=&#34;https://www.nytimes.com/2020/06/24/technology/facial-recognition-arrest.html&#34;&gt;dark-skinned men&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Google Translate, the most popular translation engine in the world, &lt;a href=&#34;https://science.sciencemag.org/content/356/6334/183&#34;&gt;shows gender bias&lt;/a&gt;. ‚ÄúShe is an engineer, He is a nurse‚Äù is translated into Turkish and then again into English becomes ‚ÄúHe is an engineer, She is a nurse‚Äù [5].&lt;/li&gt; &#xA; &lt;li&gt;Chapter six of Safiya Noble‚Äôs book Algorithms of Oppression [^noble] tells the sad tale of how a design quirk of Yelp ruined a small business: As one of Noble‚Äôs interviewees put it &#34;Black people don‚Äôt ‚Äòcheck in‚Äô and let people know where they‚Äôre at when they sit in my (hair dressing salon). They already feel like they are being hunted; they aren&#39;t going to tell the Man where they are&#34;. Hence, that salon fell in the Yelp ratings (losing customers) since its patrons rarely pressed the ‚Äúchecked-in‚Äù button.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For our purposes, the important point of the Noble example is this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if software designers had been more intentional about soliciting feedback from the Black community...&lt;/li&gt; &#xA; &lt;li&gt;then they could have changed how check-ins are weighted in the overall Yelp rating system.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As to the other examples, in each case there was some discriminatory effect which was easy to detect and repair [^joy]], but developers just failed to test for those biases.&lt;/p&gt; &#xA;&lt;p&gt;There is a solution to all these problems&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;if a small group of people build software for the larger community&lt;/li&gt; &#xA; &lt;li&gt;they need to listen more to the concerns of the larger community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For that to work, the smaller group of developers have to admit the larger group into their design processes‚Äì either via&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;changing the reward structures such that there are inducements for the few to listen to the many (e.g. by better government legislation or professional standards); or&lt;/li&gt; &#xA; &lt;li&gt;inclusion practices that admits the broader community into the developer community, or by&lt;/li&gt; &#xA; &lt;li&gt;review practices where the developers can take better and faster feedback from the community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The first two of these points requires major organization changes. This repository is more about the third point which can we said another way: from an ethical perspective, it is good practice to give software to stakeholders and let them try to break it.&lt;/p&gt; &#xA;&lt;p&gt;[^noble]: Noble, Safiya Umoja. &#34;Algorithms of oppression.&#34; Algorithms of Oppression. New York University Press, 2018. [^joy]: Chakraborty, Joymallya, Suvodeep Majumder, and Tim Menzies. &#34;Bias in machine learning software: why? how? what to do?.&#34; Foundations of Software Engineering, 2021&lt;/p&gt; &#xA;&lt;p&gt;[^abduction]: For more on the mysterious machine that runs deep within testing, SE, requirements engineering, configuration, etc, see &lt;a href=&#34;https://menzies.us/pdf/96abkl.pdf&#34;&gt;my Ph.D. thesis&lt;/a&gt;. In summary, by the time you can test &#34;it&#34; then you can also exercise &#34;it&#34;; i.e. properly designed, a good test engine is also a good execution engine. For years I tried coding all this up in a logical framework. Then I found ways to use data mining for very faster, scalable, approximate reasoning. So now I offer my private theory-of-everything in a procedural framework, embedded with some data mining tools. Specifically, data miners divide a space and optimizers tell you how to jump around that space.&lt;/p&gt; &#xA;&lt;p&gt;[^duo]: &lt;a href=&#34;https://arxiv.org/pdf/1812.01550.pdf&#34;&gt;Better Software Analytics via &#34;DUO&#34;: Data Mining Algorithms Using/Used-by Optimizers&lt;/a&gt; Amritanshu Agrawal, Tim Menzies, Leandro L. Minku, Markus Wagner, and Zhe Yu. 2020. Empirical Softw. Engg. 25, 3 (May 2020), 2099‚Äì2136. &lt;a href=&#34;https://doi.org/10.1007/s10664-020-09808-9&#34;&gt;https://doi.org/10.1007/s10664-020-09808-9&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>