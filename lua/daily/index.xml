<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-23T01:40:56Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>qbcore-framework/qb-weapons</title>
    <updated>2022-08-23T01:40:56Z</updated>
    <id>tag:github.com,2022-08-23:/qbcore-framework/qb-weapons</id>
    <link href="https://github.com/qbcore-framework/qb-weapons" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Weapon Logic Script For QB-Core ðŸ”«&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;qb-weapons&lt;/h1&gt; &#xA;&lt;p&gt;Weapon Logic Script For QB-Core&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;QBCore Framework&#xA;Copyright (C) 2021 Joshua Eger&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>RRethy/vim-illuminate</title>
    <updated>2022-08-23T01:40:56Z</updated>
    <id>tag:github.com,2022-08-23:/RRethy/vim-illuminate</id>
    <link href="https://github.com/RRethy/vim-illuminate" rel="alternate"></link>
    <summary type="html">&lt;p&gt;illuminate.vim - (Neo)Vim plugin for automatically highlighting other uses of the word under the cursor using either LSP, Tree-sitter, or regex matching.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Overview&lt;/h1&gt; &#xA;&lt;p&gt;Vim plugin for automatically highlighting other uses of the word under the cursor using either LSP, Tree-sitter, or regex matching.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/mSG0nwAHDt3Fl7WyoL/giphy.gif&#34; alt=&#34;gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Quickstart&lt;/h1&gt; &#xA;&lt;p&gt;Just install the plugin and things will work &lt;em&gt;just work&lt;/em&gt;, no configuration needed.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll also get &lt;code&gt;&amp;lt;a-n&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;a-p&amp;gt;&lt;/code&gt; as keymaps to move between references and &lt;code&gt;&amp;lt;a-i&amp;gt;&lt;/code&gt; as a textobject for the reference illuminated under the cursor.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- default configuration&#xA;require(&#39;illuminate&#39;).configure({&#xA;    -- providers: provider used to get references in the buffer, ordered by priority&#xA;    providers = {&#xA;        &#39;lsp&#39;,&#xA;        &#39;treesitter&#39;,&#xA;        &#39;regex&#39;,&#xA;    },&#xA;    -- delay: delay in milliseconds&#xA;    delay = 100,&#xA;    -- filetype_overrides: filetype specific overrides.&#xA;    -- The keys are strings to represent the filetype while the values are tables that&#xA;    -- supports the same keys passed to .configure except for filetypes_denylist and filetypes_allowlist&#xA;    filetype_overrides = {},&#xA;    -- filetypes_denylist: filetypes to not illuminate, this overrides filetypes_allowlist&#xA;    filetypes_denylist = {&#xA;        &#39;dirvish&#39;,&#xA;        &#39;fugitive&#39;,&#xA;    },&#xA;    -- filetypes_allowlist: filetypes to illuminate, this is overriden by filetypes_denylist&#xA;    filetypes_allowlist = {},&#xA;    -- modes_denylist: modes to not illuminate, this overrides modes_allowlist&#xA;    modes_denylist = {},&#xA;    -- modes_allowlist: modes to illuminate, this is overriden by modes_denylist&#xA;    modes_allowlist = {},&#xA;    -- providers_regex_syntax_denylist: syntax to not illuminate, this overrides providers_regex_syntax_allowlist&#xA;    -- Only applies to the &#39;regex&#39; provider&#xA;    -- Use :echom synIDattr(synIDtrans(synID(line(&#39;.&#39;), col(&#39;.&#39;), 1)), &#39;name&#39;)&#xA;    providers_regex_syntax_denylist = {},&#xA;    -- providers_regex_syntax_allowlist: syntax to illuminate, this is overriden by providers_regex_syntax_denylist&#xA;    -- Only applies to the &#39;regex&#39; provider&#xA;    -- Use :echom synIDattr(synIDtrans(synID(line(&#39;.&#39;), col(&#39;.&#39;), 1)), &#39;name&#39;)&#xA;    providers_regex_syntax_allowlist = {},&#xA;    -- under_cursor: whether or not to illuminate under the cursor&#xA;    under_cursor = true,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Highlight Groups&lt;/h1&gt; &#xA;&lt;h4&gt;IlluminatedWordText&lt;/h4&gt; &#xA;&lt;p&gt;Default highlight group used for references if no kind information is available.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;hi def IlluminatedWordText gui=underline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;IlluminatedWordRead&lt;/h4&gt; &#xA;&lt;p&gt;Highlight group used for references of kind read.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;hi def IlluminatedWordRead gui=underline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;IlluminatedWordWrite&lt;/h4&gt; &#xA;&lt;p&gt;Highlight group used for references of kind write.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;hi def IlluminatedWordWrite gui=underline&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Commands&lt;/h1&gt; &#xA;&lt;h4&gt;:IlluminatePause&lt;/h4&gt; &#xA;&lt;p&gt;Globally pause vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;:IlluminateResume&lt;/h4&gt; &#xA;&lt;p&gt;Globally resume vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;:IlluminateToggle&lt;/h4&gt; &#xA;&lt;p&gt;Globally toggle the pause/resume for vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;:IlluminatePauseBuf&lt;/h4&gt; &#xA;&lt;p&gt;Buffer-local pause of vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;:IlluminateResumeBuf&lt;/h4&gt; &#xA;&lt;p&gt;Buffer-local resume of vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;:IlluminateToggleBuf&lt;/h4&gt; &#xA;&lt;p&gt;Buffer-local toggle of the pause/resume for vim-illuminate.&lt;/p&gt; &#xA;&lt;h1&gt;Functions&lt;/h1&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).configure(config)&lt;/h4&gt; &#xA;&lt;p&gt;Override the default configuration with &lt;code&gt;config&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).pause()&lt;/h4&gt; &#xA;&lt;p&gt;Globally pause vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).resume()&lt;/h4&gt; &#xA;&lt;p&gt;Globally resume vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).toggle()&lt;/h4&gt; &#xA;&lt;p&gt;Globally toggle the pause/resume for vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).toggle_buf()&lt;/h4&gt; &#xA;&lt;p&gt;Buffer-local toggle of the pause/resume for vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).pause_buf()&lt;/h4&gt; &#xA;&lt;p&gt;Buffer-local pause of vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).resume_buf()&lt;/h4&gt; &#xA;&lt;p&gt;Buffer-local resume of vim-illuminate.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).freeze_buf()&lt;/h4&gt; &#xA;&lt;p&gt;Freeze the illumination on the buffer, this won&#39;t clear the highlights.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).unfreeze_buf()&lt;/h4&gt; &#xA;&lt;p&gt;Unfreeze the illumination on the buffer.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).goto_next_reference()&lt;/h4&gt; &#xA;&lt;p&gt;Move the cursor to the closest references after the cursor which it is not currently on. Wraps the buffer if on the last reference.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).goto_prev_reference()&lt;/h4&gt; &#xA;&lt;p&gt;Move the cursor to the closest references before the cursor which it is not currently on. Wraps the buffer if on the first reference.&lt;/p&gt; &#xA;&lt;h4&gt;require(&#39;illuminate&#39;).textobj_select()&lt;/h4&gt; &#xA;&lt;p&gt;Selects the reference the cursor is currently on for use as a text-object.&lt;/p&gt; &#xA;&lt;h1&gt;Vim Users&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This section is deprecated for Neovim users, Neovim users can use the newer version of the plugin. Neovim users can force this old version of the plugin by adding &lt;code&gt;let g:Illuminate_useDeprecated = 1&lt;/code&gt; to their &lt;code&gt;init.vim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Illuminate will delay before highlighting, this is not lag, it is to avoid the jarring experience of things illuminating too fast. This can be controlled with &lt;code&gt;g:Illuminate_delay&lt;/code&gt; (which is default to 0 milliseconds):&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Delay only works for Vim8 and Neovim.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Time in milliseconds (default 0)&#xA;let g:Illuminate_delay = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Illuminate will by default highlight the word under the cursor to match the behaviour seen in Intellij and VSCode. However, to make it not highlight the word under the cursor, use the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Don&#39;t highlight word under cursor (default: 1)&#xA;let g:Illuminate_highlightUnderCursor = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default illuminate will highlight all words the cursor passes over, but for many languages, you will only want to highlight certain highlight-groups. You can determine the highlight-group of a symbol under your cursor with &lt;code&gt;:echo synIDattr(synID(line(&#34;.&#34;), col(&#34;.&#34;), 1), &#34;name&#34;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can define which highlight groups you want the illuminating to apply to. This can be done with a dict mapping a filetype to a list of highlight-groups in your vimrc such as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:Illuminate_ftHighlightGroups = {&#xA;      \ &#39;vim&#39;: [&#39;vimVar&#39;, &#39;vimString&#39;, &#39;vimLineComment&#39;,&#xA;      \         &#39;vimFuncName&#39;, &#39;vimFunction&#39;, &#39;vimUserFunc&#39;, &#39;vimFunc&#39;]&#xA;      \ }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A blacklist of highlight groups can also be setup by adding the suffix &lt;code&gt;:blacklist&lt;/code&gt; to the filetype. However, if the whitelist for that filetype already exists, it will override the blacklist.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:Illuminate_ftHighlightGroups = {&#xA;      \ &#39;vim:blacklist&#39;: [&#39;vimVar&#39;, &#39;vimString&#39;, &#39;vimLineComment&#39;,&#xA;      \         &#39;vimFuncName&#39;, &#39;vimFunction&#39;, &#39;vimUserFunc&#39;, &#39;vimFunc&#39;]&#xA;      \ }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;illuminate can also be disabled for various filetypes using the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:Illuminate_ftblacklist = [&#39;nerdtree&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can enable it only for certain filetypes with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:Illuminate_ftwhitelist = [&#39;vim&#39;, &#39;sh&#39;, &#39;python&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default the highlighting will be done with the highlight-group &lt;code&gt;CursorLine&lt;/code&gt; since that is in my opinion the nicest. It can however be overridden using the following (use standard Vim highlighting syntax): Note: It must be in an autocmd to get around a weird Neovim behaviour.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;augroup illuminate_augroup&#xA;    autocmd!&#xA;    autocmd VimEnter * hi link illuminatedWord CursorLine&#xA;augroup END&#xA;&#xA;augroup illuminate_augroup&#xA;    autocmd!&#xA;    autocmd VimEnter * hi illuminatedWord cterm=underline gui=underline&#xA;augroup END&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Lastly, you can also specify a specific highlight for the word under the cursor so it differs from all other matches using the following higlight group:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;augroup illuminate_augroup&#xA;    autocmd!&#xA;    autocmd VimEnter * hi illuminatedCurWord cterm=italic gui=italic&#xA;augroup END&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>qbcore-framework/qb-inventory</title>
    <updated>2022-08-23T01:40:56Z</updated>
    <id>tag:github.com,2022-08-23:/qbcore-framework/qb-inventory</id>
    <link href="https://github.com/qbcore-framework/qb-inventory" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Slot Based Inventory System Used With QB-Core ðŸŽ’&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;qb-inventory&lt;/h1&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;QBCore Framework&#xA;Copyright (C) 2021 Joshua Eger&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-core&#34;&gt;qb-core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-logs&#34;&gt;qb-logs&lt;/a&gt; - For logging transfer and other history&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-traphouse&#34;&gt;qb-traphouse&lt;/a&gt; - Trap house system for qbcore&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-radio&#34;&gt;qb-radio&lt;/a&gt; - Radio system for communication&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-drugs&#34;&gt;qb-drugs&lt;/a&gt; - Drugs and Weed Planting System&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-shops&#34;&gt;qb-shops&lt;/a&gt; - Needed in order to add shops&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/GR0MDFN.png&#34; alt=&#34;General&#34;&gt; &lt;img src=&#34;https://i.imgur.com/C6gAOWi.png&#34; alt=&#34;ID Card&#34;&gt; &lt;img src=&#34;https://i.imgur.com/RbCvHJb.png&#34; alt=&#34;Weapon&#34;&gt; &lt;img src=&#34;https://i.imgur.com/7Da7UEX.png&#34; alt=&#34;Shop&#34;&gt; &lt;img src=&#34;https://i.imgur.com/peONaL9.png&#34; alt=&#34;Crafting&#34;&gt; &lt;img src=&#34;https://i.imgur.com/LjDEYWa.png&#34; alt=&#34;Glovebox&#34;&gt; &lt;img src=&#34;https://i.imgur.com/IoGYZbv.png&#34; alt=&#34;Trunk&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Item crafting&lt;/li&gt; &#xA; &lt;li&gt;Weapon attachment crafting&lt;/li&gt; &#xA; &lt;li&gt;Stashes (Personal and/or Shared)&lt;/li&gt; &#xA; &lt;li&gt;Vehicle Trunk &amp;amp; Glovebox&lt;/li&gt; &#xA; &lt;li&gt;Weapon serial number&lt;/li&gt; &#xA; &lt;li&gt;Shops&lt;/li&gt; &#xA; &lt;li&gt;Item Drops&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the script and put it in the &lt;code&gt;[qb]&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Import &lt;code&gt;qb-inventory.sql&lt;/code&gt; in your database&lt;/li&gt; &#xA; &lt;li&gt;Add the following code to your server.cfg/resouces.cfg&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;ensure qb-core&#xA;ensure qb-logs&#xA;ensure qb-inventory&#xA;ensure qb-traphouse&#xA;ensure qb-radio&#xA;ensure qb-drugs&#xA;ensure qb-shops&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Config = {}&#xA;&#xA;Config.UseTarget = GetConvar(&#39;UseTarget&#39;, &#39;false&#39;) == &#39;true&#39; -- Use qb-target interactions (don&#39;t change this, go to your server.cfg and add `setr UseTarget true` to use this and just that from true to false or the other way around)&#xA;&#xA;Config.MaxInventoryWeight = 120000 -- Max weight a player can carry (default 120kg, written in grams)&#xA;Config.MaxInventorySlots = 41 -- Max inventory slots for a player&#xA;&#xA;Config.CleanupDropTime = 15 * 60 -- How many seconds it takes for drops to be untouched before being deleted&#xA;Config.MaxDropViewDistance = 12.5 -- The distance in GTA Units that a drop can be seen&#xA;Config.UseItemDrop = false -- This will enable item object to spawn on drops instead of markers&#xA;Config.ItemDropObject = `prop_nigel_bag_pickup` -- if Config.UseItemDrop is true, this will be the prop that spawns for the item&#xA;&#xA;Config.VendingObjects = {&#xA;    &#34;prop_vend_soda_01&#34;,&#xA;    &#34;prop_vend_soda_02&#34;,&#xA;    &#34;prop_vend_water_01&#34;&#xA;}&#xA;&#xA;Config.BinObjects = {&#xA;    &#34;prop_bin_05a&#34;,&#xA;}&#xA;&#xA;Config.CraftingObject = `prop_toolchest_05`&#xA;&#xA;Config.VendingItem = {&#xA;    [1] = {&#xA;        name = &#34;kurkakola&#34;,&#xA;        price = 4,&#xA;        amount = 50,&#xA;        info = {},&#xA;        type = &#34;item&#34;,&#xA;        slot = 1,&#xA;    },&#xA;    [2] = {&#xA;        name = &#34;water_bottle&#34;,&#xA;        price = 4,&#xA;        amount = 50,&#xA;        info = {},&#xA;        type = &#34;item&#34;,&#xA;        slot = 2,&#xA;    },&#xA;}&#xA;&#xA;Config.CraftingItems = {&#xA;    [1] = {&#xA;        name = &#34;lockpick&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 22,&#xA;            [&#34;plastic&#34;] = 32,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 1,&#xA;        threshold = 0,&#xA;        points = 1,&#xA;    },&#xA;    [2] = {&#xA;        name = &#34;screwdriverset&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 30,&#xA;            [&#34;plastic&#34;] = 42,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 2,&#xA;        threshold = 0,&#xA;        points = 2,&#xA;    },&#xA;    [3] = {&#xA;        name = &#34;electronickit&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 30,&#xA;            [&#34;plastic&#34;] = 45,&#xA;            [&#34;aluminum&#34;] = 28,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 3,&#xA;        threshold = 0,&#xA;        points = 3,&#xA;    },&#xA;    [4] = {&#xA;        name = &#34;radioscanner&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;electronickit&#34;] = 2,&#xA;            [&#34;plastic&#34;] = 52,&#xA;            [&#34;steel&#34;] = 40,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 4,&#xA;        threshold = 0,&#xA;        points = 4,&#xA;    },&#xA;    [5] = {&#xA;        name = &#34;gatecrack&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 10,&#xA;            [&#34;plastic&#34;] = 50,&#xA;            [&#34;aluminum&#34;] = 30,&#xA;            [&#34;iron&#34;] = 17,&#xA;            [&#34;electronickit&#34;] = 2,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 5,&#xA;        threshold = 110,&#xA;        points = 5,&#xA;    },&#xA;    [6] = {&#xA;        name = &#34;handcuffs&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 36,&#xA;            [&#34;steel&#34;] = 24,&#xA;            [&#34;aluminum&#34;] = 28,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 6,&#xA;        threshold = 160,&#xA;        points = 6,&#xA;    },&#xA;    [7] = {&#xA;        name = &#34;repairkit&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 32,&#xA;            [&#34;steel&#34;] = 43,&#xA;            [&#34;plastic&#34;] = 61,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 7,&#xA;        threshold = 200,&#xA;        points = 7,&#xA;    },&#xA;    [8] = {&#xA;        name = &#34;pistol_ammo&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 50,&#xA;            [&#34;steel&#34;] = 37,&#xA;            [&#34;copper&#34;] = 26,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 8,&#xA;        threshold = 250,&#xA;        points = 8,&#xA;    },&#xA;    [9] = {&#xA;        name = &#34;ironoxide&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;iron&#34;] = 60,&#xA;            [&#34;glass&#34;] = 30,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 9,&#xA;        threshold = 300,&#xA;        points = 9,&#xA;    },&#xA;    [10] = {&#xA;        name = &#34;aluminumoxide&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;aluminum&#34;] = 60,&#xA;            [&#34;glass&#34;] = 30,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 10,&#xA;        threshold = 300,&#xA;        points = 10,&#xA;    },&#xA;    [11] = {&#xA;        name = &#34;armor&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;iron&#34;] = 33,&#xA;            [&#34;steel&#34;] = 44,&#xA;            [&#34;plastic&#34;] = 55,&#xA;            [&#34;aluminum&#34;] = 22,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 11,&#xA;        threshold = 350,&#xA;        points = 11,&#xA;    },&#xA;    [12] = {&#xA;        name = &#34;drill&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;iron&#34;] = 50,&#xA;            [&#34;steel&#34;] = 50,&#xA;            [&#34;screwdriverset&#34;] = 3,&#xA;            [&#34;advancedlockpick&#34;] = 2,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 12,&#xA;        threshold = 1750,&#xA;        points = 12,&#xA;    },&#xA;}&#xA;&#xA;Config.AttachmentCraftingLocation = vector3(88.91, 3743.88, 40.77)&#xA;&#xA;Config.AttachmentCrafting = {&#xA;    [&#34;items&#34;] = {&#xA;        [1] = {&#xA;            name = &#34;pistol_extendedclip&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 140,&#xA;                [&#34;steel&#34;] = 250,&#xA;                [&#34;rubber&#34;] = 60,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 1,&#xA;            threshold = 0,&#xA;            points = 1,&#xA;        },&#xA;        [2] = {&#xA;            name = &#34;pistol_suppressor&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 165,&#xA;                [&#34;steel&#34;] = 285,&#xA;                [&#34;rubber&#34;] = 75,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 2,&#xA;            threshold = 10,&#xA;            points = 2,&#xA;        },&#xA;        [3] = {&#xA;            name = &#34;smg_extendedclip&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 190,&#xA;                [&#34;steel&#34;] = 305,&#xA;                [&#34;rubber&#34;] = 85,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 3,&#xA;            threshold = 25,&#xA;            points = 3,&#xA;        },&#xA;        [4] = {&#xA;            name = &#34;microsmg_extendedclip&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 205,&#xA;                [&#34;steel&#34;] = 340,&#xA;                [&#34;rubber&#34;] = 110,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 4,&#xA;            threshold = 50,&#xA;            points = 4,&#xA;        },&#xA;        [5] = {&#xA;            name = &#34;smg_drum&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 230,&#xA;                [&#34;steel&#34;] = 365,&#xA;                [&#34;rubber&#34;] = 130,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 5,&#xA;            threshold = 75,&#xA;            points = 5,&#xA;        },&#xA;        [6] = {&#xA;            name = &#34;smg_scope&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 255,&#xA;                [&#34;steel&#34;] = 390,&#xA;                [&#34;rubber&#34;] = 145,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 6,&#xA;            threshold = 100,&#xA;            points = 6,&#xA;        },&#xA;        [7] = {&#xA;            name = &#34;assaultrifle_extendedclip&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 270,&#xA;                [&#34;steel&#34;] = 435,&#xA;                [&#34;rubber&#34;] = 155,&#xA;                [&#34;smg_extendedclip&#34;] = 1,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 7,&#xA;            threshold = 150,&#xA;            points = 7,&#xA;        },&#xA;        [8] = {&#xA;            name = &#34;assaultrifle_drum&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 300,&#xA;                [&#34;steel&#34;] = 469,&#xA;                [&#34;rubber&#34;] = 170,&#xA;                [&#34;smg_extendedclip&#34;] = 2,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 8,&#xA;            threshold = 200,&#xA;            points = 8,&#xA;        },&#xA;    }&#xA;}&#xA;&#xA;BackEngineVehicles = {&#xA;    [`ninef`] = true,&#xA;    [`adder`] = true,&#xA;    [`vagner`] = true,&#xA;    [`t20`] = true,&#xA;    [`infernus`] = true,&#xA;    [`zentorno`] = true,&#xA;    [`reaper`] = true,&#xA;    [`comet2`] = true,&#xA;    [`comet3`] = true,&#xA;    [`jester`] = true,&#xA;    [`jester2`] = true,&#xA;    [`cheetah`] = true,&#xA;    [`cheetah2`] = true,&#xA;    [`prototipo`] = true,&#xA;    [`turismor`] = true,&#xA;    [`pfister811`] = true,&#xA;    [`ardent`] = true,&#xA;    [`nero`] = true,&#xA;    [`nero2`] = true,&#xA;    [`tempesta`] = true,&#xA;    [`vacca`] = true,&#xA;    [`bullet`] = true,&#xA;    [`osiris`] = true,&#xA;    [`entityxf`] = true,&#xA;    [`turismo2`] = true,&#xA;    [`fmj`] = true,&#xA;    [`re7b`] = true,&#xA;    [`tyrus`] = true,&#xA;    [`italigtb`] = true,&#xA;    [`penetrator`] = true,&#xA;    [`monroe`] = true,&#xA;    [`ninef2`] = true,&#xA;    [`stingergt`] = true,&#xA;    [`surfer`] = true,&#xA;    [`surfer2`] = true,&#xA;    [`gp1`] = true,&#xA;    [`autarch`] = true,&#xA;    [`tyrant`] = true&#xA;}&#xA;&#xA;Config.MaximumAmmoValues = {&#xA;    [&#34;pistol&#34;] = 250,&#xA;    [&#34;smg&#34;] = 250,&#xA;    [&#34;shotgun&#34;] = 200,&#xA;    [&#34;rifle&#34;] = 250,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>