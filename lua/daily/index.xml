<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-16T01:36:02Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nvim-tree/nvim-tree.lua</title>
    <updated>2022-10-16T01:36:02Z</updated>
    <id>tag:github.com,2022-10-16:/nvim-tree/nvim-tree.lua</id>
    <link href="https://github.com/nvim-tree/nvim-tree.lua" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A file explorer tree for neovim written in lua&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A File Explorer For Neovim Written In Lua&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/nvim-tree/nvim-tree.lua/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;149&#34; height=&#34;484&#34; src=&#34;https://user-images.githubusercontent.com/17254073/195207026-f3434ba1-dc86-4c48-8ab3-b2efc3b85227.png&#34;&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;149&#34; height=&#34;484&#34; src=&#34;https://user-images.githubusercontent.com/17254073/195207023-7b709e35-7f10-416b-aafb-5bb61268c7d3.png&#34;&gt; &#xA;&lt;p&gt;Automatic updates&lt;/p&gt; &#xA;&lt;p&gt;File type icons&lt;/p&gt; &#xA;&lt;p&gt;Git integration&lt;/p&gt; &#xA;&lt;p&gt;Diagnostics integration: LSP and COC&lt;/p&gt; &#xA;&lt;p&gt;(Live) filtering&lt;/p&gt; &#xA;&lt;p&gt;Cut, copy, paste, rename, delete, create&lt;/p&gt; &#xA;&lt;p&gt;Highly customisable&lt;/p&gt; &#xA;&lt;br clear=&#34;left&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matrix.to/#/#nvim-tree:matrix.org&#34;&gt;Join us on matrix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/wiki/Installing-Neovim&#34;&gt;neovim &amp;gt;=0.7.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt; is optional and used to display file icons. It requires a &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;patched font&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Install with &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;nvim-tree/nvim-web-devicons&#39; &#34; optional, for file icons&#xA;Plug &#39;nvim-tree/nvim-tree.lua&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;nvim-tree/nvim-tree.lua&#39;,&#xA;  requires = {&#xA;    &#39;nvim-tree/nvim-web-devicons&#39;, -- optional, for file icons&#xA;  },&#xA;  tag = &#39;nightly&#39; -- optional, updated every week. (see issue #1193)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Setup should be run in a lua file or in a lua heredoc &lt;a href=&#34;https://neovim.io/doc/user/lua.html&#34;&gt;:help lua-heredoc&lt;/a&gt; if using in a vim file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- examples for your init.lua&#xA;&#xA;-- disable netrw at the very start of your init.lua (strongly advised)&#xA;vim.g.loaded_netrw = 1&#xA;vim.g.loaded_netrwPlugin = 1&#xA;&#xA;-- empty setup using defaults&#xA;require(&#34;nvim-tree&#34;).setup()&#xA;&#xA;-- OR setup with some options&#xA;require(&#34;nvim-tree&#34;).setup({&#xA;  sort_by = &#34;case_sensitive&#34;,&#xA;  view = {&#xA;    adaptive_size = true,&#xA;    mappings = {&#xA;      list = {&#xA;        { key = &#34;u&#34;, action = &#34;dir_up&#34; },&#xA;      },&#xA;    },&#xA;  },&#xA;  renderer = {&#xA;    group_empty = true,&#xA;  },&#xA;  filters = {&#xA;    dotfiles = true,&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For complete list of available configuration options see &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree-setup&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each option is documented in &lt;code&gt;:help nvim-tree.OPTION_NAME&lt;/code&gt;. Nested options can be accessed by appending &lt;code&gt;.&lt;/code&gt;, for example &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree.view.mappings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree-commands&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Basic commands:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;:NvimTreeToggle&lt;/code&gt; Open or close the tree. Takes an optional path argument.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;:NvimTreeFocus&lt;/code&gt; Open the tree if it is closed, and then focus on the tree.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;:NvimTreeFindFile&lt;/code&gt; Move the cursor in the tree for the current buffer, opening folders if needed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;:NvimTreeCollapse&lt;/code&gt; Collapses the nvim-tree recursively.&lt;/p&gt; &#xA;&lt;h2&gt;Api&lt;/h2&gt; &#xA;&lt;p&gt;nvim-tree exposes a public api; see &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree-api&lt;/a&gt;. This is a stable non breaking api.&lt;/p&gt; &#xA;&lt;h2&gt;Mappings&lt;/h2&gt; &#xA;&lt;p&gt;nvim-tree comes with number of mappings; for default mappings please see &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree-default-mappings&lt;/a&gt;, for way of configuring mappings see &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree-mappings&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;g?&lt;/code&gt; toggles help, showing all the mappings and their actions.&lt;/p&gt; &#xA;&lt;h2&gt;Tips &amp;amp; tricks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can add a directory by adding a &lt;code&gt;/&lt;/code&gt; at the end of the paths, entering multiple directories &lt;code&gt;BASE/foo/bar/baz&lt;/code&gt; will add directory foo, then bar and add a file baz to it.&lt;/li&gt; &#xA; &lt;li&gt;You can update window options for the tree by setting &lt;code&gt;require&#34;nvim-tree.view&#34;.View.winopts.MY_OPTION = MY_OPTION_VALUE&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;toggle&lt;/code&gt; has a second parameter which allows to toggle without focusing the explorer (&lt;code&gt;require&#34;nvim-tree&#34;.toggle(false, true)&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;You can allow nvim-tree to behave like vinegar, see &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree-vinegar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you &lt;code&gt;:set nosplitright&lt;/code&gt;, the files will open on the left side of the tree, placing the tree window in the right side of the file you opened.&lt;/li&gt; &#xA; &lt;li&gt;You can automatically close the tab/vim when nvim-tree is the last window in the tab: &lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua/discussions/1115&#34;&gt;https://github.com/nvim-tree/nvim-tree.lua/discussions/1115&lt;/a&gt;. WARNING: this can catastrophically fail: &lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua/issues/1368&#34;&gt;https://github.com/nvim-tree/nvim-tree.lua/issues/1368&lt;/a&gt;. This will not be added to nvim-tree and the team will not provide support / assistance with this, due to complexities in vim event timings and side-effects.&lt;/li&gt; &#xA; &lt;li&gt;Hide the &lt;code&gt;.git&lt;/code&gt; folder: &lt;code&gt;filters = { custom = { &#34;^.git$&#34; } }&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree.filters.custom&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To disable the display of icons see &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree.renderer.icons.show&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h2&gt;Diagnostic Logging&lt;/h2&gt; &#xA;&lt;p&gt;You may enable diagnostic logging to &lt;code&gt;$XDG_CACHE_HOME/nvim/nvim-tree.log&lt;/code&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree.log&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;netrw Keeps Popping Up&lt;/h2&gt; &#xA;&lt;p&gt;Eagerly disable netrw. See &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/doc/nvim-tree-lua.txt&#34;&gt;:help nvim-tree.disable_netrw&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Performance Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you are experiencing performance issues with nvim-tree.lua, you can enable profiling in the logs. It is advisable to enable git logging at the same time, as that can be a source of performance problems.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;log = {&#xA;  enable = true,&#xA;  truncate = true,&#xA;  types = {&#xA;    git = true,&#xA;    profile = true,&#xA;  },&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please attach &lt;code&gt;$XDG_CACHE_HOME/nvim/nvim-tree.log&lt;/code&gt; if you raise an issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Performance Tips:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;If you are using fish as an editor shell (which might be fixed in the future), try set &lt;code&gt;shell=/bin/bash&lt;/code&gt; in your vim config. Alternatively, you can &lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua/issues/549#issuecomment-1127394585&#34;&gt;prevent fish from loading interactive configuration in a non-interactive shell&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Try manually running the git command (see the logs) in your shell e.g. &lt;code&gt;git --no-optional-locks status --porcelain=v1 --ignored=matching -u&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Huge git repositories may timeout after the default &lt;code&gt;git.timeout&lt;/code&gt; of 400ms. Try increasing that in your setup if you see &lt;code&gt;[git] job timed out&lt;/code&gt; in the logs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Try temporarily disabling git integration by setting &lt;code&gt;git.enable = false&lt;/code&gt; in your setup.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;PRs are always welcome. See &lt;a href=&#34;https://raw.githubusercontent.com/nvim-tree/nvim-tree.lua/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Help Wanted&lt;/h3&gt; &#xA;&lt;p&gt;Developers with the following environments:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Apple macOS&lt;/li&gt; &#xA; &lt;li&gt;Windows &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;WSL&lt;/li&gt; &#xA;   &lt;li&gt;msys&lt;/li&gt; &#xA;   &lt;li&gt;powershell&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Help triaging, diagnosing and fixing issues specific to those environments is needed, as the nvim-tree developers do not have access to or expertise in these environments.&lt;/p&gt; &#xA;&lt;p&gt;Let us know you&#39;re interested by commenting on issues and raising PRs.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua/wiki/Showcases&#34;&gt;Showcases&lt;/a&gt; wiki page for examples of user&#39;s configurations with sources.&lt;/p&gt; &#xA;&lt;p&gt;Please add your own!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MaximumADHD/sm64-roblox</title>
    <updated>2022-10-16T01:36:02Z</updated>
    <id>tag:github.com,2022-10-16:/MaximumADHD/sm64-roblox</id>
    <link href="https://github.com/MaximumADHD/sm64-roblox" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A port of Super Mario 64&#39;s movement code into Roblox Luau.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sm64-roblox&lt;/h1&gt; &#xA;&lt;p&gt;A port of Super Mario 64&#39;s movement code into Roblox Luau (in &lt;code&gt;--!strict&lt;/code&gt; mode), hosted as a &lt;a href=&#34;https://rojo.space&#34;&gt;rojo&lt;/a&gt; project.&lt;br&gt; Based on the SM64 decompilation project hosted at: &lt;a href=&#34;https://github.com/n64decomp/sm64&#34;&gt;https://github.com/n64decomp/sm64&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;I wanted to make this public as a curiousity for anyone who wanted to know how I pulled it off. It &lt;strong&gt;does not include any animations, sounds, or assets from Nintendo&lt;/strong&gt;. I do provide some of the scripts I used when I originally ported animations from the SM64 ROM into R15 Roblox avatars, but any future public version of this project from me will use commissioned assets that I have permission to use.&lt;/p&gt; &#xA;&lt;p&gt;Original game is hosted here:&lt;br&gt; &lt;a href=&#34;https://www.roblox.com/games/10238956318/funny-64-bit-platformer&#34;&gt;https://www.roblox.com/games/10238956318/funny-64-bit-platformer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Terms of Use&lt;/h2&gt; &#xA;&lt;p&gt;You &lt;em&gt;may&lt;/em&gt; use this in your game &lt;strong&gt;as long as you provide credit&lt;/strong&gt; to me and the SM64 Decompilation Project. I would &lt;strong&gt;NOT&lt;/strong&gt; advise using it as a foundation for a platformer since it&#39;s very rigidly tied to the 30hz physics simulation code of Super Mario 64. It&#39;s weirdly programmed and not very intuitive to build off of.&lt;/p&gt; &#xA;&lt;p&gt;No animations or sounds are provided by default, so you&#39;ll have to substitute those appropriately. It&#39;s not a trivial task.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>folke/neodev.nvim</title>
    <updated>2022-10-16T01:36:02Z</updated>
    <id>tag:github.com,2022-10-16:/folke/neodev.nvim</id>
    <link href="https://github.com/folke/neodev.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;💻 Neovim setup for init.lua and plugin development with full signature help, docs and completion for the nvim lua API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;💻 neodev.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Neovim setup for init.lua and plugin development with full signature help, docs and completion for the nvim lua API.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/118822916-6af02080-b86d-11eb-9990-942fe9b55541.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/118823099-9115c080-b86d-11eb-9a68-521c6cb9905a.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatically configures &lt;strong&gt;lua-language-server&lt;/strong&gt; for your &lt;strong&gt;Neovim&lt;/strong&gt; config, &lt;strong&gt;Neovim&lt;/strong&gt; runtime and plugin directories&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki/Annotations&#34;&gt;Annotations&lt;/a&gt; for completion, hover and signatures of: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Vim functions&lt;/li&gt; &#xA;   &lt;li&gt;Neovim api functions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;vim.opt&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/luvit/luv&#34;&gt;vim.loop&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;properly configures the &lt;code&gt;require&lt;/code&gt; path.&lt;/li&gt; &#xA; &lt;li&gt;adds all plugins in &lt;code&gt;opt&lt;/code&gt; and &lt;code&gt;start&lt;/code&gt; to the workspace so you get completion for all installed plugins&lt;/li&gt; &#xA; &lt;li&gt;properly configure the vim runtime&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚡️ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.7.0&lt;/li&gt; &#xA; &lt;li&gt;completion plugin like &lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use &#34;folke/neodev.nvim&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;folke/neodev.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;⚙️ Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;neodev&lt;/strong&gt; comes with the following defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  library = {&#xA;    enabled = true, -- when not enabled, neodev will not change any settings to the LSP server&#xA;    -- these settings will be used for your Neovim config directory&#xA;    runtime = true, -- runtime path&#xA;    types = true, -- full signature, docs and completion of vim.api, vim.treesitter, vim.lsp and others&#xA;    plugins = true, -- installed opt or start plugins in packpath&#xA;    -- you can also specify the list of plugins to make available as a workspace library&#xA;    -- plugins = { &#34;nvim-treesitter&#34;, &#34;plenary.nvim&#34;, &#34;telescope.nvim&#34; },&#xA;  },&#xA;  setup_jsonls = true, -- configures jsonls to provide completion for project specific .luarc.json files&#xA;  -- for your Neovim config directory, the config.library settings will be used as is&#xA;  -- for plugin directories (root_dirs having a /lua directory), config.library.plugins will be disabled&#xA;  -- for any other directory, config.library.enabled will be set to false&#xA;  override = function(root_dir, options) end,&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Setup&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;neodev&lt;/strong&gt; will &lt;strong&gt;ONLY&lt;/strong&gt; change the &lt;strong&gt;sumneko_lua&lt;/strong&gt; settings for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;your Neovim config directory&lt;/li&gt; &#xA; &lt;li&gt;your Neovim runtime directory&lt;/li&gt; &#xA; &lt;li&gt;any plugin directory (this is an lsp root_dir that contains a &lt;code&gt;/lua&lt;/code&gt; directory)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For any other &lt;code&gt;root_dir&lt;/code&gt;, &lt;strong&gt;neodev&lt;/strong&gt; will &lt;strong&gt;NOT&lt;/strong&gt; change any settings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- IMPORTANT: make sure to setup neodev BEFORE lspconfig&#xA;require(&#34;neodev&#34;).setup({&#xA;  -- add any options here, or leave empty to use the default settings&#xA;})&#xA;&#xA;-- then setup your lsp server as usual&#xA;local lspconfig = require(&#39;lspconfig&#39;)&#xA;&#xA;-- example to setup sumneko and enable call snippets&#xA;lspconfig.sumneko_lua.setup({&#xA;  settings = {&#xA;    Lua = {&#xA;      completion = {&#xA;        callSnippet = &#34;Replace&#34;&#xA;      }&#xA;    }&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example for setting up &lt;strong&gt;neodev&lt;/strong&gt; that overrides the settings for &lt;code&gt;/etc/nixos&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- You can override the default detection using the override function&#xA;-- EXAMPLE: If you want a certain directory to be configured differently, you can override its settings&#xA;require(&#34;neodev&#34;).setup({&#xA;  override = function(root_dir, library)&#xA;    if require(&#34;neodev.util&#34;).has_file(root_dir, &#34;/etc/nixos&#34;) then&#xA;      library.enabled = true&#xA;      library.plugins = true&#xA;    end&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;❓ How?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Neovim&lt;/strong&gt; includes a &lt;a href=&#34;https://github.com/neovim/neovim/raw/master/scripts/gen_vimdoc.py&#34;&gt;script&lt;/a&gt; to generate the nvim docs. That script also creates message pack files containing all the API metadata in a structured way. Unfortunately these files are not packaged in the releases.&lt;/p&gt; &#xA;&lt;p&gt;Using the message pack files, I converted all the API data to &lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki/EmmyLua-Annotations&#34;&gt;EmmyLua annotations&lt;/a&gt; and make them available for the &lt;a href=&#34;https://github.com/sumneko/lua-language-server&#34;&gt;Sumneko LSP&lt;/a&gt; as a workspace library.&lt;/p&gt;</summary>
  </entry>
</feed>