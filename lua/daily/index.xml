<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-19T01:40:48Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ErichDonGubler/lsp_lines.nvim</title>
    <updated>2023-03-19T01:40:48Z</updated>
    <id>tag:github.com,2023-03-19:/ErichDonGubler/lsp_lines.nvim</id>
    <link href="https://github.com/ErichDonGubler/lsp_lines.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GitHub mirror of https://git.sr.ht/~whynothugo/lsp_lines.nvim to work around Windows issues with `packer.nvim`.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lsp_lines.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;lsp_lines&lt;/code&gt; is a simple neovim plugin that renders diagnostics using virtual lines on top of the real line of code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ErichDonGubler/lsp_lines.nvim/main/screenshot.png&#34; alt=&#34;A screenshot of the plugin in action&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Font is &lt;a href=&#34;https://github.com/tonsky/FiraCode&#34;&gt;Fira Code&lt;/a&gt;, a classic. Theme is &lt;a href=&#34;https://github.com/folke/tokyonight.nvim&#34;&gt;tokyonight.nvim&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Background&lt;/h1&gt; &#xA;&lt;p&gt;LSPs provide lots of useful diagnostics for code (typically: errors, warnings, linting). By default they&#39;re displayed using virtual text at the end of the line which is in many cases good enough, but often there&#39;s more than one diagnostic per line. It&#39;s also quite common to have more than one diagnostic per line, but again, there&#39;s no handy way to read the whole thing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;lsp_lines&lt;/code&gt; solves this issue.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;With packer.nvim&lt;/h2&gt; &#xA;&lt;p&gt;Using packer.nvim (this should probably be registered &lt;em&gt;after&lt;/em&gt; &lt;code&gt;lspconfig&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;  &#34;https://git.sr.ht/~whynothugo/lsp_lines.nvim&#34;,&#xA;  config = function()&#xA;    require(&#34;lsp_lines&#34;).setup()&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;With git&lt;/h2&gt; &#xA;&lt;p&gt;You can algo just clone the repo into neovim&#39;s plug-in directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p $HOME/.local/share/nvim/site/pack/plugins/start/&#xA;cd $HOME/.local/share/nvim/site/pack/plugins/start/&#xA;git clone git@git.sr.ht:~whynothugo/lsp_lines.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then in &lt;code&gt;init.lua&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;require(&#34;lsp_lines&#34;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;p&gt;It&#39;s recommended to also remove the regular virtual text diagnostics to avoid pointless duplication:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Disable virtual_text since it&#39;s redundant due to lsp_lines.&#xA;vim.diagnostic.config({&#xA;  virtual_text = false,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;This plugin&#39;s functionality can be disabled with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.diagnostic.config({ virtual_lines = false })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And it can be re-enabled via:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.diagnostic.config({ virtual_lines = true })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;A helper is also provided to toggle, which is convenient for mappings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.keymap.set(&#xA;  &#34;&#34;,&#xA;  &#34;&amp;lt;Leader&amp;gt;l&#34;,&#xA;  require(&#34;lsp_lines&#34;).toggle,&#xA;  { desc = &#34;Toggle lsp_lines&#34; }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discussion or patches: ~whynothugo/lsp_lines.nvim@lists.sr.ht&lt;/li&gt; &#xA; &lt;li&gt;Bugs / Issues: &lt;a href=&#34;https://todo.sr.ht/~whynothugo/lsp_lines.nvim&#34;&gt;https://todo.sr.ht/~whynothugo/lsp_lines.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tips: &lt;a href=&#34;https://ko-fi.com/whynothugo&#34;&gt;https://ko-fi.com/whynothugo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;p&gt;It would be nice to show connecting lines when there&#39;s relationship between diagnostics (as is the case with &lt;code&gt;rust_analyzer&lt;/code&gt;). Oh perhaps surface them via hover().&lt;/p&gt; &#xA;&lt;h1&gt;Licence&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the ISC licence. See LICENCE for more details.&lt;/p&gt;</summary>
  </entry>
</feed>