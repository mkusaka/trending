<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-28T01:39:23Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ycjyy/ycjyy</title>
    <updated>2023-07-28T01:39:23Z</updated>
    <id>tag:github.com,2023-07-28:/ycjyy/ycjyy</id>
    <link href="https://github.com/ycjyy/ycjyy" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Config files for my GitHub profile.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>sourcegraph/sg.nvim</title>
    <updated>2023-07-28T01:39:23Z</updated>
    <id>tag:github.com,2023-07-28:/sourcegraph/sg.nvim</id>
    <link href="https://github.com/sourcegraph/sg.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The official Sourcegraph/Cody plugin for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;sg.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Status&lt;/strong&gt;: Beta&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sourcegraph/sg.nvim/master/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sourcegraph/sg.nvim/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sourcegraph/sg.nvim/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;sg.nvim is a plugin focused on bringing many of the features of sourcegraph.com into Neovim.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To configure logging in:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Log in on your Sourcegraph instance.&lt;/li&gt; &#xA; &lt;li&gt;Click your user menu in the top right, then select Settings &amp;gt; Access tokens.&lt;/li&gt; &#xA; &lt;li&gt;Create your access token, and then run &lt;code&gt;:SourcegraphLogin&lt;/code&gt; in your neovim editor after installation.&lt;/li&gt; &#xA; &lt;li&gt;Type in the link to your Sourcegraph instance (for example: &lt;code&gt;https://sourcegraph.com&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;And then paste in your access token.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;An alternative to this is to use the environment variables specified for &lt;a href=&#34;https://github.com/sourcegraph/src-cli#log-into-your-sourcegraph-instance&#34;&gt;src-cli&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can check that you&#39;re logged in by then running &lt;code&gt;:checkhealth sg&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;p&gt;Requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;nvim 0.9 or nvim nightly&lt;/li&gt; &#xA; &lt;li&gt;Cargo to build (pre-built binary/dylibs options to come)&lt;/li&gt; &#xA; &lt;li&gt;Node.js &amp;gt;= 18.17.0 (LTS) at runtime for &lt;a href=&#34;https://raw.githubusercontent.com/sourcegraph/sg.nvim/master/dist/cody-agent.js&#34;&gt;&lt;code&gt;cody-agent.js&lt;/code&gt; - sourcegraph&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;lazy.nvim&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Use your favorite package manager to install, for example in lazy.nvim&#xA;return {&#xA;  {&#xA;    &#34;sourcegraph/sg.nvim&#34;,&#xA;    dependencies = { &#34;nvim-lua/plenary.nvim&#34; },&#xA;&#xA;    -- If you have a recent version of lazy.nvim, you don&#39;t need to add this!&#xA;    build = &#34;nvim -l build/init.lua&#34;,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;packer.nvim&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Packer.nvim, also make sure to install nvim-lua/plenary.nvim&#xA;use { &#39;sourcegraph/sg.nvim&#39;, run = &#39;nvim -l build/init.lua&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;code&gt;vim-plug&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimrc&#34;&gt;&#34; Using vim-plug&#xA;Plug &#39;sourcegraph/sg.nvim&#39;, { &#39;do&#39;: &#39;nvim -l build/init.lua&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;After installation, run &lt;code&gt;:checkhealth sg&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;(Nix instructions at the end of the readme)&lt;/p&gt; &#xA;&lt;h2&gt;Configuration:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Sourcegraph configuration. All keys are optional&#xA;require(&#34;sg&#34;).setup {&#xA;  -- Pass your own custom attach function&#xA;  --    If you do not pass your own attach function, then the following maps are provide:&#xA;  --        - gd -&amp;gt; goto definition&#xA;  --        - gr -&amp;gt; goto references&#xA;  on_attach = your_custom_lsp_attach_function&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Example mapping for doing searches from within neovim (may change) using telescope.&#xA;&#34; (requires telescope.nvim to be installed)&#xA;nnoremap &amp;lt;space&amp;gt;ss &amp;lt;cmd&amp;gt;lua require(&#39;sg.extensions.telescope&#39;).fuzzy_search_results()&amp;lt;CR&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Demos:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Latest Demo: &lt;a href=&#34;https://youtu.be/j5sfHG3z3ao&#34;&gt;Alpha Release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Short clip of cross repository jump to definition: &lt;a href=&#34;https://clips.twitch.tv/AmazonianSullenSwordBloodTrail-l8H5WKEd8sNpEdIT&#34;&gt;Clip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Demo v2: &lt;a href=&#34;https://www.youtube.com/watch?v=RCyBnAx-4Q4&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Demo v1: &lt;a href=&#34;https://youtu.be/iCdsD6MiLQs&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;p&gt;Cody:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Chat interface and associated commands&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Autocompletions, prompted&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Autocompletions, suggested&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sourcegraph Browsing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Read files: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Directly from sourcegraph links: &lt;code&gt;:edit &amp;lt;sourcegraph url&amp;gt;&lt;/code&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;sg.nvim&lt;/code&gt; will automatically add protocols for handling &lt;code&gt;https://sourcegraph.com/*&lt;/code&gt; links.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Directly from buffer names: &lt;code&gt;:edit sg://github.com/tjdevries/sam.py/-/src/sam.py&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use &lt;code&gt;:SourcegraphLink&lt;/code&gt; to get a link for the location under your cursor&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Reading non-files: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Repository roots&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Folders &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Expand Folders&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Unexpand Folders&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Open file from folder&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Use builtin LSP client to connect to SG &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Goto Definition&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Goto References &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &amp;lt;20 references&lt;/li&gt; &#xA;     &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; kind of broken right now for lots of references&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Basic Search &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; literal, regexp and structural search support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;code&gt;type:symbol&lt;/code&gt; support&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; repo support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Advanced Search Features &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Autocompletion&lt;/li&gt; &#xA;   &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Memory of last searches&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;More? Make an issue with something you&#39;re missing :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Nix(OS)&lt;/h3&gt; &#xA;&lt;p&gt;The project is packaged as a &lt;a href=&#34;https://nixos.wiki/wiki/Flakes&#34;&gt;Nix Flake&lt;/a&gt;. Consume it as you normally would. In your Nix configuration, &lt;em&gt;make sure&lt;/em&gt; that sg-nvim is included &lt;em&gt;both&lt;/em&gt; as a Neovim plugin &lt;em&gt;and&lt;/em&gt; as an environment/user package (because &lt;code&gt;sg-lsp&lt;/code&gt; needs to be on your PATH).&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://nixos.wiki/wiki/Neovim&#34;&gt;Neovim guide on NixOS wiki&lt;/a&gt; for more details on configuration See &lt;a href=&#34;https://github.com/willruggiano/neovim.drv&#34;&gt;gh:willruggiano/neovim.drv&lt;/a&gt; for a practical configuration.&lt;/p&gt; &#xA;&lt;p&gt;For Nix contributors and maintainers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Feel free to &lt;code&gt;nix flake update&lt;/code&gt; every once in a while to make sure &lt;code&gt;flake.lock&lt;/code&gt; is up-to-date&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Minimal &lt;code&gt;sg.nvim&lt;/code&gt;-integrated neovim package for testing and example&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Integrate &lt;code&gt;sg.nvim&lt;/code&gt; + Cody onto &lt;a href=&#34;https://github.com/NixOS/nixpkgs/tree/fe2fb24a00ec510d29ccd4e36af72a0c55d81ec0/pkgs/applications/editors/vim/plugins&#34;&gt;nixpkgs:vimPlugins&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You will also need to add the built &lt;code&gt;.cdylib&lt;/code&gt; onto &lt;code&gt;package.cpath&lt;/code&gt;. Here is one example using &lt;a href=&#34;https://github.com/willruggiano/neovim.nix&#34;&gt;gh:willruggiano/neovim.nix&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nix&#34;&gt;sg = let&#xA;  system = &#34;x86_64-linux&#34;;&#xA;  package = inputs.sg-nvim.packages.${system}.default;&#xA;in {&#xA;  inherit package;&#xA;  init = pkgs.writeTextFile {&#xA;    name = &#34;sg.lua&#34;;&#xA;    text = &#39;&#39;&#xA;      return function()&#xA;        package.cpath = package.cpath .. &#34;;&#34; .. &#34;${package}/lib/?.so;${package}/lib/?.dylib&#34;&#xA;      end&#xA;    &#39;&#39;;&#xA;  };&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>