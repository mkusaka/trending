<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-09T01:35:35Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>naps62/pair-gpt.nvim</title>
    <updated>2022-12-09T01:35:35Z</updated>
    <id>tag:github.com,2022-12-09:/naps62/pair-gpt.nvim</id>
    <link href="https://github.com/naps62/pair-gpt.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;an #openAI powered pair programming partner&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;pair GPT - Neovim plugin&lt;/h1&gt; &#xA;&lt;p&gt;A GPT-assisted pair programming partner for Neovim.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Write code from text prompts&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/gIXsFqG3ZDVhVFRkpIkBipz9I&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/gIXsFqG3ZDVhVFRkpIkBipz9I.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Refactor existing code&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/0IrC8uV5aHt4kXnfJK273Hcez&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/0IrC8uV5aHt4kXnfJK273Hcez.svg?sanitize=true&#34; alt=&#34;asciicast&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;You need an account for &lt;a href=&#34;https://openai.com/api/&#34;&gt;OpenAI&#39;s API&lt;/a&gt;. Check out the &lt;a href=&#34;https://openai.com/api/pricing/&#34;&gt;pricing page&lt;/a&gt; to see how far you can go with the free plan (spoiler alert: should be more than enough to take this plugin out for a testdrive).&lt;/p&gt; &#xA;&lt;p&gt;Export the API key as an environment variable. Add this to your &lt;code&gt;.bashrc&lt;/code&gt; / &lt;code&gt;.zshrc&lt;/code&gt; / etc:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;export OPENAI_API_KEY=xxxxxxxxxxxxxxx&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo install --git https://github.com/naps62/pair-gpt.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install the plugin: with &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; with vim-plug:&#xA;Plug &#39;naps62/pair-gpt.nvim&#39;&#xA;&#xA;&#34; with packer:&#xA;use { &#39;naps62/pair-gpt.nvim&#39;,&#xA;  config = function()&#xA;    require(&#39;pair-gpt&#39;).setup()&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setup should be included in a lua file or in a lua heredoc &lt;a href=&#34;https://neovim.io/doc/user/lua.html&#34;&gt;:help lua-heredoc&lt;/a&gt; if using in a vim file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- examples for your init.lua&#xA;&#xA;-- empty setup using defaults&#xA;-- can be done directly via packer&#39;s config option, as seen above&#xA;require(&#34;pair-gpt.nvim&#34;).setup()&#xA;&#xA;-- OR setup with some options&#xA;require(&#34;pair-gpt.nvim&#34;).setup({&#xA;  bin = &#34;pair-gpt&#34;,&#xA;  model = &#34;text-davinci-001&#34;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Open a file with your editor. ensure filetype detection is live (this plugin uses that to pass down to the bot). The full list of commands is below. Note that all commands that work on a visual range also fallback to the current line the cursor is in.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;type&lt;/th&gt; &#xA;   &lt;th&gt;description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:PairGPTWrite&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;range&lt;/td&gt; &#xA;   &lt;td&gt;writes code based on a text prompt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:PairGPTRefactor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;range&lt;/td&gt; &#xA;   &lt;td&gt;attempts to refactor the selected code (or current line)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:PairGPTExplain&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;range&lt;/td&gt; &#xA;   &lt;td&gt;writes a comment above the code with a natural-text explanation of what it does&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>vLxve/qb-uwuplushies</title>
    <updated>2022-12-09T01:35:35Z</updated>
    <id>tag:github.com,2022-12-09:/vLxve/qb-uwuplushies</id>
    <link href="https://github.com/vLxve/qb-uwuplushies" rel="alternate"></link>
    <summary type="html">&lt;p&gt;plushes that use a holding animation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;qb-uwuplushies&lt;/h1&gt; &#xA;&lt;h1&gt;Dependencies&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework&#34;&gt;qbcore&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TayMcKenzieNZ/rpemotes&#34;&gt;Rpemotes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add images to your inventory! inventory\html\images then drag and drop them.&lt;/li&gt; &#xA; &lt;li&gt;Add the items below to qb-core\shared\items.lua&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language---&#34;&gt;[&#39;uwupurpleplush&#39;] = {[&#34;name&#34;] = &#34;uwupurpleplush&#34;, [&#34;label&#34;] = &#34;Purple Plush&#34;, [&#34;weight&#34;] = 200, [&#34;type&#34;] = &#34;item&#34;, [&#34;image&#34;] = &#34;uwupurpleplush.png&#34;, [&#34;unique&#34;] = false, [&#34;useable&#34;] = true, [&#34;shouldClose&#34;] = true, [&#34;combinable&#34;] = nil, [&#34;description&#34;] = &#34;A purple UwU plush&#34;},     &#xA;[&#39;uwugreenplush&#39;] = {[&#34;name&#34;] = &#34;uwugreenplush&#34;, [&#34;label&#34;] = &#34;Green Plush&#34;, [&#34;weight&#34;] = 200, [&#34;type&#34;] = &#34;item&#34;, [&#34;image&#34;] = &#34;uwugreenplush.png&#34;, [&#34;unique&#34;] = false, [&#34;useable&#34;] = true, [&#34;shouldClose&#34;] = true, [&#34;combinable&#34;] = nil, [&#34;description&#34;] = &#34;A green UwU plush&#34;},     &#xA;[&#39;uwublueplush&#39;] = {[&#34;name&#34;] = &#34;uwublueplush&#34;, [&#34;label&#34;] = &#34;Blue Plush&#34;, [&#34;weight&#34;] = 200, [&#34;type&#34;] = &#34;item&#34;, [&#34;image&#34;] = &#34;uwublueplush.png&#34;, [&#34;unique&#34;] = false, [&#34;useable&#34;] = true, [&#34;shouldClose&#34;] = true, [&#34;combinable&#34;] = nil, [&#34;description&#34;] = &#34;A blue UwU plush&#34;},    &#xA;[&#39;uwubrownplush&#39;] = {[&#34;name&#34;] = &#34;uwubrownplush&#34;, [&#34;label&#34;] = &#34;Brown Plush&#34;, [&#34;weight&#34;] = 200, [&#34;type&#34;] = &#34;item&#34;, [&#34;image&#34;] = &#34;uwubrownplush.png&#34;, [&#34;unique&#34;] = false, [&#34;useable&#34;] = true, [&#34;shouldClose&#34;] = true, [&#34;combinable&#34;] = nil, [&#34;description&#34;] = &#34;A brown UwU plush&#34;},     &#xA;[&#39;uwuyellowplush&#39;] = {[&#34;name&#34;] = &#34;uwuyellowplush&#34;, [&#34;label&#34;] = &#34;Yellow Plush&#34;, [&#34;weight&#34;] = 200, [&#34;type&#34;] = &#34;item&#34;, [&#34;image&#34;] = &#34;uwuyellowplush.png&#34;, [&#34;unique&#34;] = false, [&#34;useable&#34;] = true, [&#34;shouldClose&#34;] = true, [&#34;combinable&#34;] = nil, [&#34;description&#34;] = &#34;A yellow UwU plush&#34;},     &#xA;[&#39;uwuredplush&#39;] = {[&#34;name&#34;] = &#34;uwuredplush&#34;, [&#34;label&#34;] = &#34;Red Plush&#34;, [&#34;weight&#34;] = 200, [&#34;type&#34;] = &#34;item&#34;, [&#34;image&#34;] = &#34;uwuredplush.png&#34;, [&#34;unique&#34;] = false, [&#34;useable&#34;] = true, [&#34;shouldClose&#34;] = true, [&#34;combinable&#34;] = nil, [&#34;description&#34;] = &#34;A red UwU plush&#34;},     &#xA;[&#39;uwugreenrareplush&#39;] = {[&#34;name&#34;] = &#34;uwugreenrareplush&#34;, [&#34;label&#34;] = &#34;Rare Green Plush&#34;, [&#34;weight&#34;] = 200, [&#34;type&#34;] = &#34;item&#34;, [&#34;image&#34;] = &#34;uwugreenrareplush.png&#34;, [&#34;unique&#34;] = false, [&#34;useable&#34;] = true, [&#34;shouldClose&#34;] = true, [&#34;combinable&#34;] = nil, [&#34;description&#34;] = &#34;A rare green UwU plush&#34;},     &#xA;[&#39;uwupinkrareplush&#39;] = {[&#34;name&#34;] = &#34;uwupinkrareplush&#34;, [&#34;label&#34;] = &#34;Rare Pink Plush&#34;, [&#34;weight&#34;] = 200, [&#34;type&#34;] = &#34;item&#34;, [&#34;image&#34;] = &#34;uwupinkrareplush.png&#34;, [&#34;unique&#34;] = false, [&#34;useable&#34;] = true, [&#34;shouldClose&#34;] = true, [&#34;combinable&#34;] = nil, [&#34;description&#34;] = &#34;A rare pink UwU plush&#34;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Preview&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medal.tv/games/gta-v/clips/L2kPRekDn0007/d1337KC8OeIz?invite=cr-MSxhVGgsMTg1MzkyMTUs&#34;&gt;Video&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;someone with plushie images LUL&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join my &lt;a href=&#34;https://discord.gg/dvBfdbc66B&#34;&gt;discord&lt;/a&gt; for support!&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>chrisgrieser/nvim-genghis</title>
    <updated>2022-12-09T01:35:35Z</updated>
    <id>tag:github.com,2022-12-09:/chrisgrieser/nvim-genghis</id>
    <link href="https://github.com/chrisgrieser/nvim-genghis" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Convenience file operations for neovim, written in lua.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-genghis&lt;/h1&gt; &#xA;&lt;p&gt;Convenience file operations for neovim, written in lua.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt; Previously, &#34;genghis&#34; was spelled wrong at various places, including the GitHub-URL and the package name. &lt;span&gt;🙈&lt;/span&gt; By fixing that, the repo-address and package name have changed. Sorry for the inconvenience!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;!--toc:start--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chrisgrieser/nvim-genghis/main/#how-is-this-different-from-vimeunuch&#34;&gt;How is this different from &lt;code&gt;vim.eunuch&lt;/code&gt;?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chrisgrieser/nvim-genghis/main/#installation-and-setup&#34;&gt;Installation and setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chrisgrieser/nvim-genghis/main/#available-commands&#34;&gt;Available commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chrisgrieser/nvim-genghis/main/#why-that-name&#34;&gt;Why that name&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/chrisgrieser/nvim-genghis/main/#about-me&#34;&gt;About me&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!--toc:end--&gt; &#xA;&lt;h2&gt;How is this different from &lt;code&gt;vim.eunuch&lt;/code&gt;?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Written 100% in lua.&lt;/li&gt; &#xA; &lt;li&gt;Uses only vim-commands or lua os-modules, so it has no dependencies and works on every platform.&lt;/li&gt; &#xA; &lt;li&gt;Makes use of up-to-date nvim features like &lt;code&gt;vim.ui.input&lt;/code&gt; or &lt;code&gt;vim.notify&lt;/code&gt;. This means you can get nicer input fields via plugins like &lt;a href=&#34;https://github.com/stevearc/dressing.nvim&#34;&gt;dressing.nvim&lt;/a&gt;, and nicer confirmation notices with plugins like &lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim-notify&lt;/a&gt;, if they are installed and setup.&lt;/li&gt; &#xA; &lt;li&gt;Some small improvements like automatically keeping the extensions when no extension is given, or moving to the trash instead of removing files.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation and setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Recommended (Packer)&#xA;use {&#34;chrisgrieser/nvim-genghis&#34;, requires = &#34;stevearc/dressing.nvim&#34;}&#xA;&#xA;-- if you do not care about nice input fields&#xA;use &#34;chrisgrieser/nvim-genghis&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;nvim-genghis&lt;/code&gt; (and &lt;code&gt;dressign.nvim&lt;/code&gt;) require no &lt;code&gt;.setup()&lt;/code&gt; function. Just create keybindings for the commands you want to use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local keymap = vim.keymap.set&#xA;local genghis = require(&#34;genghis&#34;)&#xA;keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;yp&#34;, genghis.copyFilepath)&#xA;keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;yn&#34;, genghis.copyFilename)&#xA;keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;cx&#34;, genghis.chmodx)&#xA;keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;rf&#34;, genghis.renameFile)&#xA;keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;nf&#34;, genghis.createNewFile)&#xA;keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;yf&#34;, genghis.duplicateFile)&#xA;keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;df&#34;, function () genghis.trashFile{trashLocation = &#34;your/path&#34;} end) -- default: &#39;$HOME/.Trash&#39;.&#xA;keymap(&#34;x&#34;, &#34;&amp;lt;leader&amp;gt;x&#34;, genghis.moveSelectionToNewFile)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available commands&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.copyFilepath&lt;/code&gt;: Copy the absolute file path. When &lt;code&gt;clipboard=&#34;unnamed[plus]&#34;&lt;/code&gt; has been set, copies to the &lt;code&gt;+&lt;/code&gt; register, otherwise to &lt;code&gt;&#34;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.copyFilename&lt;/code&gt;: Copy the file name. When &lt;code&gt;clipboard=&#34;unnamed[plus]&#34;&lt;/code&gt; has been set, copies to the &lt;code&gt;+&lt;/code&gt; register, otherwise to &lt;code&gt;&#34;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.chmodx&lt;/code&gt;: Makes current file executable. Equivalent to &lt;code&gt;chmod +x&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.renameFile&lt;/code&gt;: Rename the current file. If no extension is provided, keeps the current file extension.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.createNewFile&lt;/code&gt;: Create a new file. If no extension is provided, uses the extension of the current file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.duplicateFile&lt;/code&gt;: Duplicate the current file. If no extension is provided, uses the current file extension.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.trashFile{trashLocation = &#34;your/path/&#34;}&lt;/code&gt;: Move the current file the trash location. Defaults to location is &lt;code&gt;$HOME/.Trash/&lt;/code&gt;. ⚠️ Any existing file in the trash location with the same name is overwritten, making that file irretrievable.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.moveSelectionToNewFile&lt;/code&gt;: Prompts for a new file name and moves the current selection to that new file. Note that this is a Visual Line Mode command; the selection is moved linewise.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why that name&lt;/h2&gt; &#xA;&lt;p&gt;A nod to &lt;a href=&#34;https://github.com/tpope/vim-eunuch&#34;&gt;vim.eunuch&lt;/a&gt; - as opposed to childless eunuchs, it is said that Genghis Khan &lt;a href=&#34;https://allthatsinteresting.com/genghis-khan-children&#34;&gt;has fathered thousands of children&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- vale Google.FirstPerson = NO --&gt; &#xA;&lt;h2&gt;About me&lt;/h2&gt; &#xA;&lt;p&gt;In my day job, I am a sociologist studying the social mechanisms underlying the digital economy. For my PhD project, I investigate the governance of the app economy and how software ecosystems manage the tension between innovation and compatibility. If you are interested in this subject, feel free to get in touch.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Profiles&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discordapp.com/users/462774483044794368/&#34;&gt;Discord&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://chris-grieser.de/&#34;&gt;Academic Website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chrisgrieser/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/pseudo_meta&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.researchgate.net/profile/Christopher-Grieser&#34;&gt;ResearchGate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/christopher-grieser-ba693b17a/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;This is my first neovim plugin, so suggestions for improvements are welcome.&lt;/p&gt;</summary>
  </entry>
</feed>