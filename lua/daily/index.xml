<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-02T01:32:26Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Ramilito/kubectl.nvim</title>
    <updated>2024-10-02T01:32:26Z</updated>
    <id>tag:github.com,2024-10-02:/Ramilito/kubectl.nvim</id>
    <link href="https://github.com/Ramilito/kubectl.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kubectl.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Processes kubectl outputs to enable vim-like navigation in a buffer for your cluster.&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/user-attachments/assets/2243c9d8-0808-4734-92aa-7612496c920b&#34; width=&#34;1700px&#34;&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Navigate your cluster in a buffer, using hierarchy where possible (backspace for up, enter for down) e.g. root -&amp;gt; deplyoment -&amp;gt; pod -&amp;gt; container &lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/2243c9d8-0808-4734-92aa-7612496c920b&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Colored output and smart highlighting&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/f42fa62c-0ddc-4733-9a83-b9d55b4745a1&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Floating windows for contextual stuff such as logs, description, containers..&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/899cb923-e038-4822-890b-d88466797d52&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Completion&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/f6d5d38a-2b1d-4262-9c15-0587277e2b7a&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Run custom commands e.g &lt;code&gt;:Kubectl get endpoints&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/3162ef16-4730-472b-95f8-4bdc2948647f&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Change context using cmd &lt;code&gt;:Kubectx context-name&lt;/code&gt; or the context view&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/bca7c827-4207-47d2-b828-5dc6caab005a&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Exec into containers&lt;/summary&gt; &#xA; &lt;sub&gt;In the pod view, select a pod by pressing &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt; and then again &lt;code&gt;&amp;lt;cr&amp;gt;&lt;/code&gt; on the container you want to exec into&lt;/sub&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/ffb9cfb1-8e75-4917-88f5-477a443669a9&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Sort by headers&lt;/summary&gt; &#xA; &lt;sub&gt;By moving the cursor to anywhere in a column and pressing &lt;code&gt;gs&lt;/code&gt;&lt;/sub&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/918038d4-60ed-4d7a-a20d-8d9e57fd1be9&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Tail logs&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/8a1f59fb-59f2-4093-a479-8900940edfc9&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Diff view: &lt;code&gt;:Kubectl diff (path)&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/52662db4-698b-4059-a5a2-2c9ddfe8d146&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Port forward&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/9dec1bb8-b65c-4b5a-a8fe-4ca26c93ab43&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Aliases (fallback view)&lt;/summary&gt; &#xA; &lt;sub&gt;A fallback view that directs custom resources and has basic functionality such desc, edit, del&lt;/sub&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/6d5bbb82-bc42-4ab4-9f9d-a40b1e7f0286&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Overview&lt;/summary&gt; &#xA; &lt;img src=&#34;https://github.com/user-attachments/assets/cb1f46be-fcc0-4a6d-9d1e-ffcd5bdb32b3&#34; width=&#34;700px&#34;&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Required Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;kubectl&lt;/li&gt; &#xA; &lt;li&gt;curl&lt;/li&gt; &#xA; &lt;li&gt;neovim &amp;gt;= 0.10&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Optional Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ramilito/kubediff&#34;&gt;kubediff&lt;/a&gt; or &lt;a href=&#34;https://github.com/will133/vim-dirdiff&#34;&gt;DirDiff&lt;/a&gt; (If you want to use the diff feature)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://helm.sh/docs/intro/install/&#34;&gt;Helm&lt;/a&gt; (for helm view)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return {&#xA;  {&#xA;    &#34;ramilito/kubectl.nvim&#34;,&#xA;    config = function()&#xA;      require(&#34;kubectl&#34;).setup()&#xA;    end,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚å®Ô∏è Keymaps&lt;/h2&gt; &#xA;&lt;p&gt;We expose open, close and toggle to bind against:&lt;/p&gt; &#xA;&lt;h4&gt;Toggle&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;k&#34;, &#39;&amp;lt;cmd&amp;gt;lua require(&#34;kubectl&#34;).toggle()&amp;lt;cr&amp;gt;&#39;, { noremap = true, silent = true })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also override the plugin&#39;s keymaps using the &lt;code&gt;&amp;lt;Plug&amp;gt;&lt;/code&gt; mappings:&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Default Mappings&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- default mappings&#xA;local group = vim.api.nvim_create_augroup(&#34;kubectl_mappings&#34;, { clear = false })&#xA;vim.api.nvim_create_autocmd(&#34;FileType&#34;, {&#xA;  group = group,&#xA;  pattern = &#34;k8s_*&#34;,&#xA;  callback = function(ev)&#xA;    local k = vim.keymap.set&#xA;    local opts = { buffer = ev.buf }&#xA;&#xA;    -- Global&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.help)&#34;, &#34;g?&#34;, opts) -- Help float&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.refresh)&#34;, &#34;gr&#34;, opts) -- Refresh view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.sort)&#34;, &#34;gs&#34;, opts) -- Sort by column&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.delete)&#34;, &#34;gD&#34;, opts) -- Delete resource&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.describe)&#34;, &#34;gd&#34;, opts) -- Describe resource&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.edit)&#34;, &#34;ge&#34;, opts) -- Edit resource&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.filter_label)&#34;, &#34;&amp;lt;C-l&amp;gt;&#34;, opts) -- Filter labels&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.go_up)&#34;, &#34;&amp;lt;BS&amp;gt;&#34;, opts) -- Go back to previous view&#xA;    k(&#34;v&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.filter_term)&#34;, &#34;&amp;lt;C-f&amp;gt;&#34;, opts) -- Filter selected text&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.select)&#34;, &#34;&amp;lt;CR&amp;gt;&#34;, opts) -- Resource select action (different on each view)&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.tab)&#34;, &#34;&amp;lt;Tab&amp;gt;&#34;, opts) -- Tab completion (ascending, when applicable)&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.shift_tab)&#34;, &#34;&amp;lt;Tab&amp;gt;&#34;, opts) -- Tab completion (descending, when applicable)&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.quit)&#34;, &#34;&#34;, opts) -- Close view (when applicable)&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.kill)&#34;, &#34;gk&#34;, opts) -- Pod/portforward kill&#xA;&#xA;    -- Views&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.alias_view)&#34;, &#34;&amp;lt;C-a&amp;gt;&#34;, opts) -- Aliases view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.contexts_view)&#34;, &#34;&amp;lt;C-x&amp;gt;&#34;, opts) -- Contexts view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.filter_view)&#34;, &#34;&amp;lt;C-f&amp;gt;&#34;, opts) -- Filter view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.namespace_view)&#34;, &#34;&amp;lt;C-n&amp;gt;&#34;, opts) -- Namespaces view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.portforwards_view)&#34;, &#34;gP&#34;, opts) -- Portforwards view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_deployments)&#34;, &#34;1&#34;, opts) -- Deployments view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_pods)&#34;, &#34;2&#34;, opts) -- Pods view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_configmaps)&#34;, &#34;3&#34;, opts) -- ConfigMaps view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_secrets)&#34;, &#34;4&#34;, opts) -- Secrets view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_services)&#34;, &#34;5&#34;, opts) -- Services view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_ingresses)&#34;, &#34;6&#34;, opts) -- Ingresses view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_api_resources)&#34;, &#34;&#34;, opts) -- API-Resources view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_clusterrolebinding)&#34;, &#34;&#34;, opts) -- ClusterRoleBindings view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_crds)&#34;, &#34;&#34;, opts) -- CRDs view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_cronjobs)&#34;, &#34;&#34;, opts) -- CronJobs view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_daemonsets)&#34;, &#34;&#34;, opts) -- DaemonSets view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_events)&#34;, &#34;&#34;, opts) -- Events view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_helm)&#34;, &#34;&#34;, opts) -- Helm view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_jobs)&#34;, &#34;&#34;, opts) -- Jobs view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_nodes)&#34;, &#34;&#34;, opts) -- Nodes view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_overview)&#34;, &#34;&#34;, opts) -- Overview view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_pv)&#34;, &#34;&#34;, opts) -- PersistentVolumes view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_pvc)&#34;, &#34;&#34;, opts) -- PersistentVolumeClaims view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_sa)&#34;, &#34;&#34;, opts) -- ServiceAccounts view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_top_nodes)&#34;, &#34;&#34;, opts) -- Top view for nodes&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.view_top_pods)&#34;, &#34;&#34;, opts) -- Top view for pods&#xA;&#xA;    -- Deployment/DaemonSet actions&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.rollout_restart)&#34;, &#34;grr&#34;, opts) -- Rollout restart&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.scale)&#34;, &#34;gss&#34;, opts) -- Scale workload&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.set_image)&#34;, &#34;gi&#34;, opts) -- Set image (only if 1 container)&#xA;&#xA;    -- Pod/Container logs&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.logs)&#34;, &#34;gl&#34;, opts) -- Logs view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.history)&#34;, &#34;gh&#34;, opts) -- Change logs --since= flag&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.follow)&#34;, &#34;f&#34;, opts) -- Follow logs&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.wrap)&#34;, &#34;gw&#34;, opts) -- Toggle wrap log lines&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.prefix)&#34;, &#34;gp&#34;, opts) -- Toggle container name prefix&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.timestamps)&#34;, &#34;gt&#34;, opts) -- Toggle timestamps prefix&#xA;&#xA;    -- Node actions&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.cordon)&#34;, &#34;gC&#34;, opts) -- Cordon node&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.uncordon)&#34;, &#34;gU&#34;, opts) -- Uncordon node&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.drain)&#34;, &#34;gR&#34;, opts) -- Drain node&#xA;&#xA;    -- Top actions&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.top_nodes)&#34;, &#34;gn&#34;, opts) -- Top nodes&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.top_pods)&#34;, &#34;gp&#34;, opts) -- Top pods&#xA;&#xA;    -- CronJob/Job actions&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.suspend_job)&#34;, &#34;gx&#34;, opts) -- only for CronJob&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.create_job)&#34;, &#34;gc&#34;, opts) -- Create Job from CronJob or Job&#xA;&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.portforward)&#34;, &#34;gp&#34;, opts) -- Pods/Services portforward&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.browse)&#34;, &#34;gx&#34;, opts) -- Ingress view&#xA;    k(&#34;n&#34;, &#34;&amp;lt;Plug&amp;gt;(kubectl.yaml)&#34;, &#34;gy&#34;, opts) -- Helm view&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  log_level = vim.log.levels.INFO,&#xA;  auto_refresh = {&#xA;    enabled = true,&#xA;    interval = 300, -- milliseconds&#xA;  },&#xA;  diff = {&#xA;    bin = &#34;kubediff&#34; -- or any other binary&#xA;  },&#xA;  kubectl_cmd = { cmd = &#34;kubectl&#34;, env = {}, args = {} },&#xA;  namespace = &#34;All&#34;,&#xA;  namespace_fallback = {}, -- If you have limited access you can list all the namespaces here&#xA;  hints = true,&#xA;  context = true,&#xA;  alias = {&#xA;    apply_on_select_from_history = true,&#xA;    max_history = 5,&#xA;  },&#xA;  filter = {&#xA;    apply_on_select_from_history = true,&#xA;    max_history = 10,&#xA;  },&#xA;  float_size = {&#xA;    -- Almost fullscreen:&#xA;    -- width = 1.0,&#xA;    -- height = 0.95, -- Setting it to 1 will cause bottom to be cutoff by statuscolumn&#xA;&#xA;    -- For more context aware size:&#xA;    width = 0.9,&#xA;    height = 0.8,&#xA;&#xA;    -- Might need to tweak these to get it centered when float is smaller&#xA;    col = 10,&#xA;    row = 5,&#xA;  },&#xA;  obj_fresh = 5, -- highlight if creation newer than number (in minutes)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üé® Colors&lt;/h2&gt; &#xA;&lt;p&gt;The plugin uses the following highlight groups:&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Highlight Groups&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Name&lt;/th&gt; &#xA;    &lt;th&gt;Default&lt;/th&gt; &#xA;    &lt;th&gt;Color&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlHeader&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#569CD6&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=C586C0&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlWarning&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#D19A66&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=D19A66&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlError&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#D16969&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=D16969&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlInfo&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#608B4E&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=608B4E&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlDebug&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#DCDCAA&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=DCDCAA&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlSuccess&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#4EC9B0&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=4EC9B0&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlPending&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#C586C0&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=C586C0&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlDeprecated&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#D4A5A5&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=D4A5A5&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlExperimental&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#CE9178&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=CE9178&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlNote&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#9CDCFE&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=9CDCFE&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlGray&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ fg = &#34;#666666&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=666666&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlPselect&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ bg = &#34;#3e4451&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=3e4451&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlPmatch&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ link = &#34;KubectlWarning&#34; }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://www.thecolorapi.com/id?format=svg&amp;amp;named=false&amp;amp;hex=D19A66&#34; width=&#34;20&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;KubectlUnderline&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ underline = true }&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;üöÄ Performance&lt;/h2&gt; &#xA;&lt;h3&gt;Startup&lt;/h3&gt; &#xA;&lt;p&gt;The setup function only adds ~1ms to startup. We use kubectl proxy and curl to reduce latency.&lt;/p&gt; &#xA;&lt;h3&gt;Efficient Resource Monitoring&lt;/h3&gt; &#xA;&lt;p&gt;We leverage the Kubernetes Informer to efficiently monitor resource updates.&lt;/p&gt; &#xA;&lt;p&gt;By using the &lt;code&gt;resourceVersion&lt;/code&gt;, we avoid fetching all resources in each loop.&lt;/p&gt; &#xA;&lt;p&gt;Instead, the Informer provides only the changes, significantly reducing overhead and improving performance.&lt;/p&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Versioning&lt;/h2&gt; &#xA;&lt;p&gt;As we advance to &lt;code&gt;v1.0.0&lt;/code&gt;, our primary goal is to maintain the stability of the plugin and minimize any breaking changes. We are committed to providing a reliable and consistent user experience.&lt;/p&gt; &#xA;&lt;h2&gt;üí™üèº Motivation&lt;/h2&gt; &#xA;&lt;p&gt;This plugins main purpose is to browse the kubernetes state using vim like navigation and keys, similar to oil.nvim for file browsing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mistweaverco/kulala.nvim</title>
    <updated>2024-10-02T01:32:26Z</updated>
    <id>tag:github.com,2024-10-02:/mistweaverco/kulala.nvim</id>
    <link href="https://github.com/mistweaverco/kulala.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A minimal ü§è HTTP-client üêº interface üñ•Ô∏è for Neovim ‚ù§Ô∏è.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mistweaverco/kulala.nvim/main/logo.svg?sanitize=true&#34; alt=&#34;Kulala Logo&#34;&gt;&lt;/p&gt; &#xA; &lt;h1&gt;kulala.nvim&lt;/h1&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Made%20with%20Lua-blueviolet.svg?style=for-the-badge&amp;amp;logo=lua&#34; alt=&#34;Lua&#34;&gt; &lt;a href=&#34;https://github.com/mistweaverco/kulala.nvim/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/mistweaverco/kulala.nvim?style=for-the-badge&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/QyVQmfY4Rt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join-7289da?style=for-the-badge&amp;amp;logo=discord&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://kulala.mwco.app/docs/getting-started/requirements&#34;&gt;Requirements&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/mistweaverco/kulala.nvim/main/#install&#34;&gt;Install&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://kulala.mwco.app/docs/usage/&#34;&gt;Usage&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://kulala.mwco.app/docs/usage/http-file-spec&#34;&gt;HTTP File Spec&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt;A minimal REST-Client Interface for Neovim.&lt;/p&gt; &#xA; &lt;p&gt;Kulala is swahili for &#34;rest&#34; or &#34;relax&#34;.&lt;/p&gt; &#xA; &lt;p&gt;It allows you to make HTTP requests from within Neovim.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/mistweaverco/kulala.nvim/assets/1384938/d3b1e6a6-b91d-4572-a4f0-8a9aa26696d9&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Requires Neovim 0.10.0+ and cURL.&lt;/p&gt; &#xA; &lt;p&gt;See &lt;a href=&#34;https://kulala.mwco.app/docs/getting-started/requirements&#34;&gt;requirements&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Via &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{ &#39;mistweaverco/kulala.nvim&#39;, opts = {} },&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] &lt;code&gt;opts&lt;/code&gt; needs to be at least an empty table &lt;code&gt;{}&lt;/code&gt; and can&#39;t be completely omitted.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://kulala.mwco.app/docs/getting-started/configuration-options&#34;&gt;configuration options&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Honorable mentions&lt;/h2&gt; &#xA;&lt;h3&gt;rest.nvim&lt;/h3&gt; &#xA;&lt;p&gt;For getting this project started.&lt;/p&gt; &#xA;&lt;p&gt;This project was heaviliy inspired by the idea of having a REST client in Neovim.&lt;/p&gt; &#xA;&lt;p&gt;The actual state of &lt;a href=&#34;https://github.com/rest-nvim/rest.nvim&#34;&gt;rest.nvim&lt;/a&gt; as archived kicked off the development of kulala.nvim.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] The project has been &lt;a href=&#34;https://github.com/rest-nvim/rest.nvim/issues/398#issue-2442747909&#34;&gt;un-archived&lt;/a&gt; again, so check it out if you&#39;re looking for an alternative.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;curl.nvim&lt;/h3&gt; &#xA;&lt;p&gt;If you want a simple scratchpad for making HTTP requests, check out &lt;a href=&#34;https://github.com/oysandvik94/curl.nvim&#34;&gt;curl.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s very different to this project, but it&#39;s a great tool for making HTTP requests from within Neovim and maybe just your cup of tea.&lt;/p&gt; &#xA;&lt;h3&gt;httpbin.org&lt;/h3&gt; &#xA;&lt;p&gt;For providing a great service for testing HTTP requests and making it in all the kulala examples.&lt;/p&gt; &#xA;&lt;p&gt;Thanks for making it easy to test and develop this plugin.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ruifm/gitlinker.nvim</title>
    <updated>2024-10-02T01:32:26Z</updated>
    <id>tag:github.com,2024-10-02:/ruifm/gitlinker.nvim</id>
    <link href="https://github.com/ruifm/gitlinker.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A lua neovim plugin to generate shareable file permalinks (with line ranges) for several git web frontend hosts. Inspired by tpope/vim-fugitive&#39;s :GBrowse&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gitlinker.nvim&lt;/h1&gt; &#xA;&lt;p&gt;A lua &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;neovim&lt;/a&gt; plugin to generate shareable file permalinks (with line ranges) for several git web frontend hosts. Inspired by &lt;a href=&#34;https://github.com/tpope/vim-fugitive&#34;&gt;tpope/vim-fugitive&lt;/a&gt;&#39;s &lt;code&gt;:GBrowse&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example of a permalink: &lt;a href=&#34;https://github.com/neovim/neovim/raw/2e156a3b7d7e25e56b03683cc6228c531f4c91ef/src/nvim/main.c#L137-L156&#34;&gt;https://github.com/neovim/neovim/blob/2e156a3b7d7e25e56b03683cc6228c531f4c91ef/src/nvim/main.c#L137-L156&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Personally, I use this all the time to easily share code locations with my co-workers.&lt;/p&gt; &#xA;&lt;h2&gt;Supported git web hosts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com&#34;&gt;github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com&#34;&gt;gitlab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://try.gitea.io&#34;&gt;gitea&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bitbucket.org&#34;&gt;bitbucket&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gogs.io&#34;&gt;gogs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.zx2c4.com/cgit&#34;&gt;cgit&lt;/a&gt; (includes &lt;a href=&#34;https://git.kernel.org&#34;&gt;git.kernel.org&lt;/a&gt; and &lt;a href=&#34;http://git.savannah.gnu.org&#34;&gt;git.savannah.gnu.org&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://launchpad.net&#34;&gt;launchpad&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://repo.or.cz&#34;&gt;repo.or.cz&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;You can easily configure support for more hosts&lt;/strong&gt; by defining your own host callbacks. It&#39;s even easier if your host is just an enterprise/self-hosted github/gitlab/gitea/gogs/cgit instance since you can just use the same callbacks that already exist in gitlinker! See &lt;a href=&#34;https://raw.githubusercontent.com/ruifm/gitlinker.nvim/master/#callbacks&#34;&gt;callbacks&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install it like any other vim plugin, just make sure &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt; is also installed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;    &#39;ruifm/gitlinker.nvim&#39;,&#xA;    requires = &#39;nvim-lua/plenary.nvim&#39;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;nvim-lua/plenary.nvim&#39;&#xA;Plug &#39;ruifm/gitlinker.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA; &lt;li&gt;neovim 0.5&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;In your &lt;code&gt;init.lua&lt;/code&gt; or in a lua-here-doc in your &lt;code&gt;init.vim&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require&#34;gitlinker&#34;.setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;buffer url with (optional line range)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;By default, the following mappings are defined:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gy&lt;/code&gt; for normal and visual mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When used, it will copy the generated url to your clipboard and print it in &lt;code&gt;:messages&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In normal mode, it will add the current line number to the url&lt;/li&gt; &#xA; &lt;li&gt;In visual mode , it will add the line range of the visual selection to the url&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;To disable the default mappings&lt;/strong&gt; just set &lt;code&gt;mappings = nil&lt;/code&gt; in the &lt;code&gt;setup()&lt;/code&gt; function (see &lt;a href=&#34;https://raw.githubusercontent.com/ruifm/gitlinker.nvim/master/#Configuration&#34;&gt;Configuration&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;If you want to disable mappings and set them on your own, the function you are looking for is &lt;code&gt;require&#34;gitlinker&#34;.get_buf_range_url(mode, user_opts)&lt;/code&gt; where:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;mode&lt;/code&gt; is the either &lt;code&gt;&#34;n&#34;&lt;/code&gt; (normal) or &lt;code&gt;&#34;v&#34;&lt;/code&gt; (visual)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;user_opts&lt;/code&gt; is a table of options that override the ones set in &lt;code&gt;setup()&lt;/code&gt; (see &lt;a href=&#34;https://raw.githubusercontent.com/ruifm/gitlinker.nvim/master/#Configuration&#34;&gt;Configuration&lt;/a&gt;). Because it just overrides, you do not need to pass this parameter, only if you want to change something.&lt;/p&gt; &lt;p&gt;Example for setting extra mappings for an alternative &lt;code&gt;action_callback&lt;/code&gt; (in this case, open in browser):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_set_keymap(&#39;n&#39;, &#39;&amp;lt;leader&amp;gt;gb&#39;, &#39;&amp;lt;cmd&amp;gt;lua require&#34;gitlinker&#34;.get_buf_range_url(&#34;n&#34;, {action_callback = require&#34;gitlinker.actions&#34;.open_in_browser})&amp;lt;cr&amp;gt;&#39;, {silent = true})&#xA;vim.api.nvim_set_keymap(&#39;v&#39;, &#39;&amp;lt;leader&amp;gt;gb&#39;, &#39;&amp;lt;cmd&amp;gt;lua require&#34;gitlinker&#34;.get_buf_range_url(&#34;v&#34;, {action_callback = require&#34;gitlinker.actions&#34;.open_in_browser})&amp;lt;cr&amp;gt;&#39;, {})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Repo home page url&lt;/h3&gt; &#xA;&lt;p&gt;For convenience, the function &lt;code&gt;require&#34;gitlinker&#34;.get_buf_range_url(mode, user_opts)&lt;/code&gt; allows one to generate the url for the repository homepage. You can map it like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_set_keymap(&#39;n&#39;, &#39;&amp;lt;leader&amp;gt;gY&#39;, &#39;&amp;lt;cmd&amp;gt;lua require&#34;gitlinker&#34;.get_repo_url()&amp;lt;cr&amp;gt;&#39;, {silent = true})&#xA;vim.api.nvim_set_keymap(&#39;n&#39;, &#39;&amp;lt;leader&amp;gt;gB&#39;, &#39;&amp;lt;cmd&amp;gt;lua require&#34;gitlinker&#34;.get_repo_url({action_callback = require&#34;gitlinker.actions&#34;.open_in_browser})&amp;lt;cr&amp;gt;&#39;, {silent = true})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And use &lt;code&gt;&amp;lt;leader&amp;gt;gY&lt;/code&gt; to copy the repo&#39;s homepage to your clipboard or &lt;code&gt;&amp;lt;leader&amp;gt;gB&lt;/code&gt; to open it in your browser.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;To configure &lt;code&gt;gitlinker.nvim&lt;/code&gt;, call &lt;code&gt;require&#34;gitlinker&#34;.setup(config)&lt;/code&gt; in your &lt;code&gt;init.lua&lt;/code&gt; or in a lua-here-doc in your &lt;code&gt;init.vim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s all the options with their defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require&#34;gitlinker&#34;.setup({&#xA;  opts = {&#xA;    remote = nil, -- force the use of a specific remote&#xA;    -- adds current line nr in the url for normal mode&#xA;    add_current_line_on_normal_mode = true,&#xA;    -- callback for what to do with the url&#xA;    action_callback = require&#34;gitlinker.actions&#34;.copy_to_clipboard,&#xA;    -- print the url after performing the action&#xA;    print_url = true,&#xA;  },&#xA;  callbacks = {&#xA;        [&#34;github.com&#34;] = require&#34;gitlinker.hosts&#34;.get_github_type_url,&#xA;        [&#34;gitlab.com&#34;] = require&#34;gitlinker.hosts&#34;.get_gitlab_type_url,&#xA;        [&#34;try.gitea.io&#34;] = require&#34;gitlinker.hosts&#34;.get_gitea_type_url,&#xA;        [&#34;codeberg.org&#34;] = require&#34;gitlinker.hosts&#34;.get_gitea_type_url,&#xA;        [&#34;bitbucket.org&#34;] = require&#34;gitlinker.hosts&#34;.get_bitbucket_type_url,&#xA;        [&#34;try.gogs.io&#34;] = require&#34;gitlinker.hosts&#34;.get_gogs_type_url,&#xA;        [&#34;git.sr.ht&#34;] = require&#34;gitlinker.hosts&#34;.get_srht_type_url,&#xA;        [&#34;git.launchpad.net&#34;] = require&#34;gitlinker.hosts&#34;.get_launchpad_type_url,&#xA;        [&#34;repo.or.cz&#34;] = require&#34;gitlinker.hosts&#34;.get_repoorcz_type_url,&#xA;        [&#34;git.kernel.org&#34;] = require&#34;gitlinker.hosts&#34;.get_cgit_type_url,&#xA;        [&#34;git.savannah.gnu.org&#34;] = require&#34;gitlinker.hosts&#34;.get_cgit_type_url&#xA;  },&#xA;-- default mapping to call url generation with action_callback&#xA;  mappings = &#34;&amp;lt;leader&amp;gt;gy&#34;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When configuring &lt;code&gt;gitlinker.nvim&lt;/code&gt;, &lt;strong&gt;you don&#39;t need to copy-paste the above, you just need to override/add what you want.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;callbacks&lt;/h3&gt; &#xA;&lt;p&gt;Besides the already configured hosts in the &lt;code&gt;callbacks&lt;/code&gt; table, one can add support for other git web hosts or self-hosted and enterprise instances.&lt;/p&gt; &#xA;&lt;p&gt;In the key, place a string with the hostname and in value a callback function that constructs the url and receives:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;url_data = {&#xA;  host = &#34;&amp;lt;host.tld&amp;gt;&#34;,&#xA;  port = &#34;3000&#34; or nil,&#xA;  repo = &#34;&amp;lt;user/repo&amp;gt;&#34;,&#xA;  rev = &#34;&amp;lt;commit sha&amp;gt;&#34;,&#xA;  file = &#34;&amp;lt;path/to/file/from/repo/root&amp;gt;&#34;,&#xA;  lstart = 42, -- the line start of the selected range / current line&#xA;  lend = 57, -- the line end of the selected range&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;port&lt;/code&gt; will always be &lt;code&gt;nil&lt;/code&gt; except when the remote URI configured locally is http(s) &lt;strong&gt;and specifies a port&lt;/strong&gt; (e.g.&amp;nbsp;&lt;code&gt;http://localhost:3000/user/repo.git&lt;/code&gt;), in which case the generated url permalink also needs the right port.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;lstart&lt;/code&gt; and &lt;code&gt;lend&lt;/code&gt; can be &lt;code&gt;nil&lt;/code&gt; in case normal mode was used or &lt;code&gt;opts.add_current_line_on_normal_mode = false&lt;/code&gt;. Do not forget to check for that in your callback.&lt;/p&gt; &#xA;&lt;p&gt;As an example, here is the callback for github (&lt;strong&gt;you don&#39;t need this, it&#39;s already builtin&lt;/strong&gt;, it&#39;s just an example):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;callbacks = {&#xA;  [&#34;github.com&#34;] = function(url_data)&#xA;      local url = require&#34;gitlinker.hosts&#34;.get_base_https_url(url_data) ..&#xA;        url_data.repo .. &#34;/blob/&#34; .. url_data.rev .. &#34;/&#34; .. url_data.file&#xA;      if url_data.lstart then&#xA;        url = url .. &#34;#L&#34; .. url_data.lstart&#xA;        if url_data.lend then url = url .. &#34;-L&#34; .. url_data.lend end&#xA;      end&#xA;      return url&#xA;    end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to add support for your company&#39;s gitlab instance:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;callbacks = {&#xA;  [&#34;git.seriouscompany.com&#34;] = require&#34;gitlinker.hosts&#34;.get_gitlab_type_url&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is my personal configuration for my personal self-hosted gitea instance for which the &lt;code&gt;host&lt;/code&gt; is a local one (since I can only access it from my LAN) and but the web interface is public:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;callbacks = {&#xA;  [&#34;192.168.1.2&#34;] = function(url_data)&#xA;      url_data.host = &#34;git.ruimarques.xyz&#34;&#xA;      return&#xA;          require&#34;gitlinker.hosts&#34;.get_gitea_type_url(url_data)&#xA;    end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: The keys in &lt;code&gt;callbacks&lt;/code&gt; table are actually interpreted as lua regexes. If your url contains magic lua character such as &lt;code&gt;-&lt;/code&gt;, it needs to be escaped as &lt;code&gt;%-&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If &lt;code&gt;remote = nil&lt;/code&gt; (default), the relevant remote will be auto-detected. If you have multiple git remotes configured and want to use a specific one (e.g.&amp;nbsp;&lt;code&gt;myfork&lt;/code&gt;), do &lt;code&gt;remote = &#34;myfork&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;add_current_line_on_normal_mode&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If &lt;code&gt;true&lt;/code&gt;, when invoking the mapping/command in normal mode, it adds the current line to the url.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;action_callback&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A function that receives a url string and decides which action to take. By default set to &lt;code&gt;require&#34;gitlinker.actions&#34;.copy_to_clipboard&lt;/code&gt; which copies to generated url to your system clipboard.&lt;/p&gt; &#xA;&lt;p&gt;An alternative callback &lt;code&gt;require&#34;gitlinker.actions&#34;.open_in_browser&lt;/code&gt; is provided which opens the url in your preferred browser using &lt;code&gt;xdg-open&lt;/code&gt; (linux only).&lt;/p&gt; &#xA;&lt;p&gt;You can define your own action callback.&lt;/p&gt; &#xA;&lt;p&gt;For example, to copy the url over a remote SSH session with an &lt;a href=&#34;https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Operating-System-Commands&#34;&gt;OSC52&lt;/a&gt;-compatible terminal, you can integrate gitlinker with &lt;a href=&#34;https://github.com/ojroques/vim-oscyank&#34;&gt;ojroques/vim-oscyank&lt;/a&gt; and use its &lt;code&gt;OSCYankString&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require&#39;gitlinker&#39;.setup{&#xA;  opts = {&#xA;    action_callback = function(url)&#xA;      -- yank to unnamed register&#xA;      vim.api.nvim_command(&#39;let @&#34; = \&#39;&#39; .. url .. &#39;\&#39;&#39;)&#xA;      -- copy to the system clipboard using OSC52&#xA;      vim.fn.OSCYankString(url)&#xA;    end,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For the above setup, make sure that &lt;a href=&#34;https://github.com/ojroques/vim-oscyank&#34;&gt;ojroques/vim-oscyank&lt;/a&gt; is also installed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;print_url&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If &lt;code&gt;true&lt;/code&gt;, then print the url before performing the configured action.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Do you want to add support for another git web host?&lt;/li&gt; &#xA; &lt;li&gt;Another action callback?&lt;/li&gt; &#xA; &lt;li&gt;Fix a bug?&lt;/li&gt; &#xA; &lt;li&gt;Improve performance?&lt;/li&gt; &#xA; &lt;li&gt;Refactor?&lt;/li&gt; &#xA; &lt;li&gt;Improve docs?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All contributions are welcome, feel free to open a pull request.&lt;/p&gt; &#xA;&lt;p&gt;Please read &lt;a href=&#34;https://raw.githubusercontent.com/ruifm/gitlinker.nvim/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for general contributing guidelines for this project.&lt;/p&gt;</summary>
  </entry>
</feed>