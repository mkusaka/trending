<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-16T01:37:47Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tullamods/Bagnon</title>
    <updated>2022-09-16T01:37:47Z</updated>
    <id>tag:github.com,2022-09-16:/tullamods/Bagnon</id>
    <link href="https://github.com/tullamods/Bagnon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Single window displays for you items&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;http://jaliborc.com/images/addons/large/bagnon/watsup.jpg&#34; alt=&#34;Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.curseforge.com/wow/addons/bagnon/files&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/install-curseforge-484266&#34; alt=&#34;Install&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.patreon.com/jaliborc&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/donate-patreon-ff4d42&#34; alt=&#34;Patreon&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tullamods/Wildpants/wiki&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/read-wiki-blue&#34; alt=&#34;Wiki&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Bagnon &lt;span&gt;ðŸ‘œ&lt;/span&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Bagnon is the most popular replacement of the World of Warcraft bag interface, designed to help the player find items as quickly and easily as possible.&lt;/p&gt; &#xA;&lt;p&gt;It organizes all bags into a single window, highlights important items and helps you find them using a search engine. It supports the inventory, bank, void storage and guild bank, which can be viewed at any time, from anywhere and from any character.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Renewed-Scripts/Renewed-Weaponscarry</title>
    <updated>2022-09-16T01:37:47Z</updated>
    <id>tag:github.com,2022-09-16:/Renewed-Scripts/Renewed-Weaponscarry</id>
    <link href="https://github.com/Renewed-Scripts/Renewed-Weaponscarry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A resource that allows you to add weapon on players back and allow them to carry certain items as props.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Renewed Weapons and Carry Script&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://ko-fi.com/FjamZoo&#34; target=&#34;_blank&#34;&gt;&lt;img height=&#34;35&#34; style=&#34;border:0px;height:46px;&#34; src=&#34;https://az743702.vo.msecnd.net/cdn/kofi3.png?v=0&#34; border=&#34;0&#34; alt=&#34;Buy Me a Coffee at ko-fi.com&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/P3RMrbwA8n&#34;&gt;Renewed Discord&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Description&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to Renewed Weapons and Carry Script, this script allows user to define Player slots when it comes to weapons / items on the players back along with a few other features such as.&lt;/p&gt; &#xA;&lt;p&gt;Carrying items that can affect how the player reacts such as stopping them from sprint, getting in vehicles and much more!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://streamable.com/deh7tk&#34;&gt;Preview&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How to install&lt;/h1&gt; &#xA;&lt;p&gt;Step 3 and 4 are skippable if you do not use qb-apartments or dont use qb-apartments with routing buckets&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the latest version of the script&lt;/li&gt; &#xA; &lt;li&gt;Extract the files to your server root directory&lt;/li&gt; &#xA; &lt;li&gt;Head over to your qb-apartments and add this &lt;code&gt;exports[&#39;Renewed-Weaponscarry&#39;]:toggleProps()&lt;/code&gt; to line 256 right under Wait(250) in the function EnterApartment&lt;/li&gt; &#xA; &lt;li&gt;Now scroll down till you find &lt;code&gt;local function LeaveApartment&lt;/code&gt; and past this right under it around line 317 &lt;code&gt;exports[&#39;Renewed-Weaponscarry&#39;]:toggleProps()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add the following line to your server.cfg file &lt;code&gt;ensure Renewed-Weaponscarry&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ENJOY!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Additional Information // Exports&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exports[&#34;Renewed-Weaponscarry&#34;]:GetPlayerCarryItems()&lt;/code&gt; - Returns a table of all the items the player is carrying&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exports[&#34;Renewed-Weaponscarry&#34;]:toggleProps()&lt;/code&gt; - Toggles the props for the player and wont load them untill they are toggled back on OR if they are in their apartments&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exports[&#34;Renewed-Weaponscarry&#34;]:refreshProps()&lt;/code&gt; - Refreshes the props for the player toggle this at at the END of your refreshskin events to make sure the props get removed and refreshed the proper way&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exports[&#34;Renewed-Weaponscarry&#34;]:isCarryingObject()&lt;/code&gt; - Returns true if the player is carrying an any item&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exports[&#34;Renewed-Weaponscarry&#34;]:makeObjectBusy(item, toggle)&lt;/code&gt; - This acts as if the particular item was removed or used by the player, this is useful for items that can be used multiple times such as a fishing rod, this would allow the player to when they start using the rod for it to be removed on the back untill they are done using it&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exports[&#34;Renewed-Weaponscarry&#34;]:carryProp(item)&lt;/code&gt; - Acts as if the player was given x item to carry, this DOES NOT work with weapons on back ONLY CARRYABLE items&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exports[&#34;Renewed-Weaponscarry&#34;]:removeProp(item)&lt;/code&gt; - Acts as if x item was removed from the player, this DOES NOT work with weapons on back ONLY CARRYABLE items&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exports[&#34;Renewed-Weaponscarry&#34;]:isCarryingAnObject(item)&lt;/code&gt; - Returns true if the players is carrying a specific item&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;How to add new Items&lt;/h1&gt; &#xA;&lt;p&gt;Here&#39;s everything you need to know about adding new items to the script&lt;/p&gt; &#xA;&lt;h2&gt;Creating a new Player Slot&lt;/h2&gt; &#xA;&lt;p&gt;First off you would need to create a new player slot, this is done by adding a new line to the &lt;code&gt;local PlayerSlots&lt;/code&gt; table, here&#39;s an example of how it would look like&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;    [6] = { -- More contraband that will be on a player somewhere&#xA;        [1] = {bone = 24817, x = -0.38, y = -0.24, z = 0.15, xr = 0.0, yr = 92.0, zr = -13.0},&#xA;        [2] = {bone = 24817, x = -0.37, y = -0.24, z = 0.15, xr = 0.0, yr = 92.0, zr = 13.0},&#xA;    },&#xA;&#xA;    x = the x position of the Players Slot, y = y etc. you get the idea.&#xA;    It can be quite hard to get the actual placements I have used this one and I would highly recommend it&#xA;    https://forum.cfx.re/t/paid-dev-tool-prop-attach-to-ped-tool/4782266&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that this is actually not real placements just a showcase of how its done&lt;/p&gt; &#xA;&lt;h2&gt;Adding a new Weapon&lt;/h2&gt; &#xA;&lt;p&gt;Here you must have have a PlayerSlot thats ready and defined heres an example of how to add a new weapon, in this case I will use player slot number 1 which is used for bigger weapons that should stick out of the players back.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;    [&#34;weapon_rpg&#34;] = { model = &#34;w_lr_rpg&#34;, hash = joaat(&#34;w_lr_rpg&#34;), tier = 1},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The name in the brackets is the actual name of the weapon thats in your shared. The model name is the name of the model of the gun in this case I found a RPG model. The hash is the hash of the weapon, and the tier is the player slot it should be in, in this case 1&lt;/p&gt; &#xA;&lt;p&gt;If the prop for some reason do not fit the slot you can add a custom offset by adding x = smt or y = smt or z = smt or xr = smt or yr = smt or zr = smt, just depends on how the rotation of the item you are trying to add is different from the other items in the slot.&lt;/p&gt; &#xA;&lt;h2&gt;Adding a new Carryable Item&lt;/h2&gt; &#xA;&lt;p&gt;Here&#39;s how you add a new item to be Carryable, in this demonstration I used a oil barrel that can be used to whatever you would want or just as a cool prop to hold.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;    [&#34;oil_barrel&#34;] = { carry = true, model = &#34;prop_barrel_exp_01a&#34;, bone = 28422, x = 0.01, y = -0.27, z =  0.27, xr = 3.0, yr = 0.0, zr = 0.0, blockAttack = true, blockCar = true, blockRun = true, dict = &#34;anim@heists@box_carry@&#34;, anim = &#34;idle&#34; },&#xA;&#xA;    If an item you want to carry then make sure it says carry = true.&#xA;    The model is the model of the item you want to carry, in this case I used a oil barrel.&#xA;    The bone is the bone you want the item to be attached to, in this case I used the bone 28422&#xA;    the xyr and xr yr zr are all the cordinates and rotations which you can find by using the tool above.&#xA;    blockAttack = true means that the player will not be able to attack while carrying this item&#xA;    blockCar = true means that the player will not be able to get in a vehicle while carrying this item&#xA;    blockRun = true means that the player will not be able to run or jump while carrying this item&#xA;    dict = Optional. If not set, will request the default directory&#xA;    anim = Optional. If not set, will play the default animation. If set to &#34;none&#34;, will not play an animation.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Misc Information.&lt;/h3&gt; &#xA;&lt;p&gt;How to locate the different props I normally use this website: &lt;a href=&#34;https://forge.plebmasters.de/&#34;&gt;https://forge.plebmasters.de/&lt;/a&gt; For bones its either trial or error with the tool above or you can use this website: &lt;a href=&#34;https://wiki.rage.mp/index.php?title=Bones&#34;&gt;https://wiki.rage.mp/index.php?title=Bones&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>koreader/koreader-base</title>
    <updated>2022-09-16T01:37:47Z</updated>
    <id>tag:github.com,2022-09-16:/koreader/koreader-base</id>
    <link href="https://github.com/koreader/koreader-base" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Base framework offering a Lua scriptable environment for creating document readers&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;koreader-base &lt;a href=&#34;https://circleci.com/gh/koreader/koreader-base&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/koreader/koreader-base.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;This is the base framework for creating document readers like KOReader, an e-ink device oriented reader application for various document formats.&lt;/p&gt; &#xA;&lt;p&gt;It uses the MuPDF library (see &lt;a href=&#34;http://mupdf.com/&#34;&gt;http://mupdf.com/&lt;/a&gt;), djvulibre library, CREngine library, libk2pdfopt library and it is scripted using Lua (see &lt;a href=&#34;http://www.lua.org/&#34;&gt;http://www.lua.org/&lt;/a&gt;). To gain good speed at that, it uses the LuaJIT compiler.&lt;/p&gt; &#xA;&lt;p&gt;It all started as the KindlePDFviewer application, which has since been greatly enhanced and now reflects this in having a new name, KOReader.&lt;/p&gt; &#xA;&lt;p&gt;The code is distributed under the GNU AGPL v3 license (read the &lt;a href=&#34;https://raw.githubusercontent.com/koreader/koreader-base/master/COPYING&#34;&gt;COPYING&lt;/a&gt; file).&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Follow these steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;automatically fetch thirdparty sources with Makefile:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;make sure you have &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;wget&lt;/code&gt;, &lt;code&gt;unzip&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;svn&lt;/code&gt; installed&lt;/li&gt; &#xA;   &lt;li&gt;run &lt;code&gt;make fetchthirdparty&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;run &lt;code&gt;make TARGET=kindlepw2&lt;/code&gt; For Kindle models &amp;gt;= Paperwhite 2.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;run &lt;code&gt;make TARGET=kindle&lt;/code&gt; For Kindle models &amp;gt;= Kindle 4 &amp;lt; Paperwhite 2.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;run &lt;code&gt;make TARGET=kindle-legacy&lt;/code&gt; for Kindle DXG/2/3 devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=kobo&lt;/code&gt; for Kobo devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=pocketbook&lt;/code&gt; for PocketBook devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=cervantes&lt;/code&gt; for BQ Cervantes devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=android&lt;/code&gt; for Android devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=win32&lt;/code&gt; for Windows.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=generic-arm&lt;/code&gt; for generic ARM devices.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=ubuntu-touch&lt;/code&gt; for Ubuntu Touch.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=appimage&lt;/code&gt; for the desktop AppImage.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make TARGET=debian&lt;/code&gt;, &lt;code&gt;debian-armel&lt;/code&gt; or &lt;code&gt;debian-armhf&lt;/code&gt; for a Debian package.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make KODEBUG=1&lt;/code&gt; to build with debugging symbols.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;or run &lt;code&gt;make&lt;/code&gt; for the emulator on Linux.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Use ccache&lt;/h2&gt; &#xA;&lt;p&gt;Ccache can speed up recompilation by caching previous compilations and detecting when the same compilation is being repeated. In other words, it will decrease build time when the sources have already been built. Ccache support has been added to KOReader&#39;s build system. Before using it, you will need to install a ccache in your system.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;in Ubuntu use:&lt;code&gt;sudo apt-get install ccache&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;in Fedora use:&lt;code&gt;sudo yum install ccache&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;install from source: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;get latest ccache source from &lt;a href=&#34;http://ccache.samba.org/download.html&#34;&gt;http://ccache.samba.org/download.html&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;unarchieve the source package in a directory&lt;/li&gt; &#xA;   &lt;li&gt;cd to that directory and use:&lt;code&gt;./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;to disable ccache, use &lt;code&gt;export USE_NO_CCACHE=1&lt;/code&gt; before make.&lt;/li&gt; &#xA; &lt;li&gt;for more detail about ccache. visit:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://ccache.samba.org&#34;&gt;http://ccache.samba.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Device emulation&lt;/h1&gt; &#xA;&lt;p&gt;The code also features a device emulation. You need SDL headers and library for this. It allows to develop on a standard PC and saves precious development time. It might also create a suboptimal desktop PDF viewer, depending on your view.&lt;/p&gt; &#xA;&lt;p&gt;If you are using Fedora Core Linux, run &lt;code&gt;yum install SDL2 SDL2-devel&lt;/code&gt;. If you are using Debian or Ubuntu, install the &lt;code&gt;libsdl2-dev&lt;/code&gt; package.&lt;/p&gt; &#xA;&lt;p&gt;By default, the build system builds in &#34;emulation mode&#34;, so following is all you need to build the emulator:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The emulator uses 800x600 as the default resolution. It can be changed at runtime by changing the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;EMULATE_READER_W=746 EMULATE_READER_H=1024&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The emulator uses a default DPI of 160. This can also be changed with an environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;EMULATE_READER_DPI=300&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;KOReader supports &#34;viewports&#34;, i.e. displaying only in a rectangular excerpt of the screen. This is useful on devices where the framebuffer is larger than the area that is actually visible. In order to simulate such a viewport using the emulator, specify a specially crafted environment variable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;EMULATE_READER_VIEWPORT=&#34;{x=50,w=600,y=10,h=680}&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also simulate e-ink refresh with the emulator. When active, only refreshed areas of the screen are actually updated and you also get a visual inverse flash feedback. In order to activate that mode, set an environment variable to the number of milliseconds you want the flash to endure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;EMULATE_READER_FLASH=100&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>