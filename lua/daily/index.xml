<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-14T01:36:43Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JoeSzymkowiczFiveM/qb-chameleonpaint</title>
    <updated>2022-10-14T01:36:43Z</updated>
    <id>tag:github.com,2022-10-14:/JoeSzymkowiczFiveM/qb-chameleonpaint</id>
    <link href="https://github.com/JoeSzymkowiczFiveM/qb-chameleonpaint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A simple Fivem script to paint vehicles with the chameleon paint codes, introduced in a recent DLC.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;A simple script to use an item to apply chameleon paint to vehicles in fivem. I haven&#39;t seen much discussion about the chameleon paint affects added in a recent DLC, so thought I would make very simple script to show how these new vehicle color indexes are applied. I have added a simple inventory icon for this item, and you must move &lt;code&gt;spraypaint.ogg&lt;/code&gt; to your &lt;code&gt;interactsound&lt;/code&gt; resource. I&#39;m sure more can be done with this like adding indexes to &lt;code&gt;qb-customs&lt;/code&gt; or adding job dependancy, but I will leave that to all of you to do. Hope this helps.&lt;/p&gt; &#xA;&lt;p&gt;The meta and texture files found in the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;stream&lt;/code&gt; folders must be present for this to work.&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MrZedo/Cameleon-Color&#34;&gt;MrZedo&lt;/a&gt; Used information and assets found in this repo to implement the primary effect.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-core&#34;&gt;qb-core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For the colors to work you must be in GameBuild 2545 or 2699&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Preview&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://streamable.com/oes8d9&#34;&gt;https://streamable.com/oes8d9&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Shared items example&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;[&#39;chameleonpaint_161&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_161&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Monochrome Spray&#39;, &#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_162&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_162&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Night &amp;amp; Day Spray&#39;, &#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_163&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_163&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;The Verlierer Spray&#39;, &#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_164&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_164&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Sprunk Extreme Spray&#39;, &#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_165&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_165&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Vice City Spray&#39;, &#x9;&#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_166&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_166&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Synthwave Nights Spray&#39;, &#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_167&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_167&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Four Seasons Spray&#39;, &#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_168&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_168&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Maisonette 9 Throwback Spray&#39;, &#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_169&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_169&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Bubblegum Spray&#39;, &#x9;&#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_170&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_170&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Full Rainbow Spray&#39;, &#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_171&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_171&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Sunset Spray&#39;, &#x9;&#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_172&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_172&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;The Seven Spray&#39;, &#x9;&#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_173&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_173&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Kamen Rider Spray&#39;, &#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_174&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_174&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Chromatic Aberration Spray&#39;, &#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_175&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_175&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Its Christmas! Spray&#39;, &#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&#x9;[&#39;chameleonpaint_176&#39;] &#x9;&#x9;&#x9; = {[&#39;name&#39;] = &#39;chameleonpaint_176&#39;, &#x9;&#x9;&#x9;[&#39;label&#39;] = &#39;Temperature Spray&#39;, &#x9;&#x9;&#x9;&#x9;[&#39;weight&#39;] = 2000, &#x9;&#x9;[&#39;type&#39;] = &#39;item&#39;, &#x9;&#x9;[&#39;image&#39;] = &#39;chameleonpaint.png&#39;, &#x9;[&#39;unique&#39;] = false, &#x9;&#x9;[&#39;useable&#39;] = true, &#x9;[&#39;shouldClose&#39;] = true,&#x9;   [&#39;combinable&#39;] = nil,   [&#39;description&#39;] = &#39;A fancy spray for your ride.&#39;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Discord&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.discord.gg/projectsloth&#34;&gt;https://www.discord.gg/projectsloth&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>games50/pong</title>
    <updated>2022-10-14T01:36:43Z</updated>
    <id>tag:github.com,2022-10-14:/games50/pong</id>
    <link href="https://github.com/games50/pong" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Atari&#39;s 1972 classic, implemented in Lua with LÖVE&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>olimorris/onedarkpro.nvim</title>
    <updated>2022-10-14T01:36:43Z</updated>
    <id>tag:github.com,2022-10-14:/olimorris/onedarkpro.nvim</id>
    <link href="https://github.com/olimorris/onedarkpro.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎨 OneDarkPro theme for Neovim. Completely customisable colors, styles, highlights and filetype highlights&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/9512444/178539095-e17ee384-a9b9-49bc-8b76-f3711074c88c.png&#34; alt=&#34;OneDarkPro.nvim&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;OneDarkPro.nvim&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/olimorris/onedarkpro.nvim?color=c678dd&amp;amp;logoColor=e06c75&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/olimorris/onedarkpro.nvim?color=%23d19a66&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/olimorris/onedarkpro.nvim?color=%2361afef&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/olimorris/onedarkpro.nvim/Tests?label=tests&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Highly customisable Neovim colorscheme. With support for custom colors, styles and highlights by filetype&lt;br&gt; Inspired by VS Code&#39;s &lt;a href=&#34;https://github.com/Binaryify/OneDark-Pro&#34;&gt;One Dark Pro&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt;onedark&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/9512444/178539204-1b4b6b2a-653c-4ed3-b2e4-d0ebfda18c00.png&#34; alt=&#34;onedark&#34;&gt; &#xA; &lt;h3&gt;onelight&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/9512444/178539496-c98e2210-006d-4489-8f3d-eca9293f23bf.png&#34; alt=&#34;onelight&#34;&gt; &#xA; &lt;h3&gt;onedark vivid&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/9512444/178539827-0f376e2c-37bd-4f38-8aa2-1d3115557ddc.png&#34; alt=&#34;onedark vivid&#34;&gt; &#xA; &lt;h3&gt;onedark dark&lt;/h3&gt;&#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/9512444/178539884-b9377c3c-6754-49d2-ae8d-b1d29d90519a.png&#34; alt=&#34;onedark dark&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;&lt;span&gt;📖&lt;/span&gt; Table of Contents&#xA; &lt;!-- omit in toc --&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#sparkles-features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#zap-requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#package-installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#rocket-usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#wrench-configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#default-configuration&#34;&gt;Default configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-themes&#34;&gt;Configuring themes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-colors&#34;&gt;Configuring colors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-highlight-groups&#34;&gt;Configuring highlight groups&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-filetype-highlighting&#34;&gt;Configuring filetypes&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-plugins&#34;&gt;Configuring plugins&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-styles&#34;&gt;Configuring styles&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-options&#34;&gt;Configuring options&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-caching&#34;&gt;Configuring caching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#electric_plug-supported-plugins&#34;&gt;Supported Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#microscope-comparison-to-vs-codes-one-dark-pro&#34;&gt;Comparison to VS Code&#39;s One Dark Pro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#gift-extras&#34;&gt;Extras&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#question-faqs&#34;&gt;FAQs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#clap-credits&#34;&gt;Credits&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;✨&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Override default styles, colors and highlight groups&lt;/li&gt; &#xA; &lt;li&gt;Create custom highlight groups and even highlight groups by filetypes&lt;/li&gt; &#xA; &lt;li&gt;Cache your configuration to improve startup times&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;Treesitter&lt;/a&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Support for many &lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#electric_plug-supported-plugins&#34;&gt;popular plugins&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚡&lt;/span&gt; Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim 0.5+ (0.8+ for filetype highlights)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;termguicolors&lt;/code&gt; enabled for true color support&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;treesitter&lt;/code&gt; for full syntax highlighting&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;📦&lt;/span&gt; Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install with your package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use &#34;olimorris/onedarkpro.nvim&#34;    -- Packer&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;olimorris/onedarkpro.nvim&#39;   &#34; Vim-Plug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;🚀&lt;/span&gt; Usage&lt;/h2&gt; &#xA;&lt;p&gt;Use the built-in &lt;code&gt;:colorscheme&lt;/code&gt; command to load:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd(&#34;colorscheme onedarkpro&#34;)  -- Lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;colorscheme onedarkpro             &#34; Vimscript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔧&lt;/span&gt; Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Default configuration&lt;/h3&gt; &#xA;&lt;p&gt;A call to the &lt;code&gt;setup&lt;/code&gt; function is only required if you wish to change the default values listed below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;onedarkpro&#34;).setup({&#xA;  dark_theme = &#34;onedark&#34;, -- The default dark theme&#xA;  light_theme = &#34;onelight&#34;, -- The default light theme&#xA;  caching = false, -- Use caching for the theme?&#xA;  cache_path = vim.fn.expand(vim.fn.stdpath(&#34;cache&#34;) .. &#34;/onedarkpro/&#34;), -- The path to the cache directory&#xA;  colors = {}, -- Override default colors by specifying colors for &#39;onelight&#39; or &#39;onedark&#39; themes&#xA;  highlights = {}, -- Override default highlight and/or filetype groups&#xA;  filetypes = { -- Override which filetype highlight groups are loaded&#xA;      javascript = true,&#xA;      markdown = true,&#xA;      python = true,&#xA;      ruby = true,&#xA;      rust = true,&#xA;      toml = true,&#xA;      yaml = true,&#xA;  },&#xA;  plugins = { -- Override which plugin highlight groups are loaded&#xA;    -- See the Supported Plugins section for a list of available plugins&#xA;  },&#xA;  styles = { -- Choose from &#34;bold,italic,underline&#34;&#xA;      types = &#34;NONE&#34;, -- Style that is applied to types&#xA;      numbers = &#34;NONE&#34;, -- Style that is applied to numbers&#xA;      strings = &#34;NONE&#34;, -- Style that is applied to strings&#xA;      comments = &#34;NONE&#34;, -- Style that is applied to comments&#xA;      keywords = &#34;NONE&#34;, -- Style that is applied to keywords&#xA;      constants = &#34;NONE&#34;, -- Style that is applied to constants&#xA;      functions = &#34;NONE&#34;, -- Style that is applied to functions&#xA;      operators = &#34;NONE&#34;, -- Style that is applied to operators&#xA;      variables = &#34;NONE&#34;, -- Style that is applied to variables&#xA;      conditionals = &#34;NONE&#34;, -- Style that is applied to conditionals&#xA;      virtual_text = &#34;NONE&#34;, -- Style that is applied to virtual text&#xA;  },&#xA;  options = {&#xA;      bold = false, -- Use the colorscheme&#39;s opinionated bold styles?&#xA;      italic = false, -- Use the colorscheme&#39;s opinionated italic styles?&#xA;      underline = false, -- Use the colorscheme&#39;s opinionated underline styles?&#xA;      undercurl = false, -- Use the colorscheme&#39;s opinionated undercurl styles?&#xA;      cursorline = false, -- Use cursorline highlighting?&#xA;      transparency = false, -- Use a transparent background?&#xA;      terminal_colors = false, -- Use the colorscheme&#39;s colors for Neovim&#39;s :terminal?&#xA;      window_unfocused_color = false, -- When the window is out of focus, change the normal background?&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You only need to include values that you wish to change from the defaults!&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Configuring themes&lt;/h3&gt; &#xA;&lt;p&gt;Currently, there are four themes available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;onedark&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onelight&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onedark_vivid&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;onedark_dark&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A default theme can be set with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;theme = &#34;onedark_vivid&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If no value is specified, the colorscheme will use the value of the &lt;code&gt;dark_theme&lt;/code&gt; and/or &lt;code&gt;light_theme&lt;/code&gt; config option; with &lt;code&gt;vim.o.background&lt;/code&gt; being used to determine whether to use the dark or light theme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;dark_theme = &#34;onedark_dark&#34;,&#xA;light_theme = &#34;onelight&#34;,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For users who wish to have a light theme during daylight hours and a dark theme during the night, it is recommended to &lt;em&gt;not&lt;/em&gt; set a value for &lt;code&gt;theme&lt;/code&gt; and instead use the &lt;code&gt;dark_theme&lt;/code&gt; and &lt;code&gt;light_theme&lt;/code&gt; options.&lt;/p&gt; &#xA;&lt;h3&gt;Configuring colors&lt;/h3&gt; &#xA;&lt;p&gt;The colorscheme has a palette of 13 core colors alongside many additional ones which are used for menus and git diffs. These colors can be found in the &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/tree/main/lua/onedarkpro/themes&#34;&gt;themes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The default colors can be changed by specifying the name of the color and a new hex code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;colors = {&#xA;  red = &#34;#FF0000&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Specifying new colors&lt;/h4&gt; &#xA;&lt;p&gt;New colors may be created which will then be merged into a theme&#39;s color palette:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;colors = {&#xA;  my_new_red = &#34;#f44336&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Custom colors can also be referenced when creating custom highlight group overrides&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Specifying colors by theme&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s possible to override default colors within a theme such as the &lt;code&gt;bg&lt;/code&gt; color. This is a common question for those who wish to have a darker background than the default. Of course it would make sense to have different &lt;code&gt;bg&lt;/code&gt; colors for the &lt;code&gt;onedark&lt;/code&gt; and &lt;code&gt;onelight&lt;/code&gt; themes. This can be achieved by specifying the theme name as a table, followed by the color:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;colors = {&#xA;  onedark = {&#xA;    bg = &#34;#FFFF00&#34; -- yellow&#xA;  },&#xA;  onelight = {&#xA;    bg = &#34;#00FF00&#34; -- green&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring highlight groups&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/tree/main/lua/onedarkpro/highlights/editor.lua&#34;&gt;editor&lt;/a&gt;, &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/tree/main/lua/onedarkpro/highlights/syntax.lua&#34;&gt;syntax&lt;/a&gt;, &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/tree/main/lua/onedarkpro/highlights/filetypes&#34;&gt;filetype&lt;/a&gt; and &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/tree/main/lua/onedarkpro/highlights/plugins&#34;&gt;plugin&lt;/a&gt; files use a large array of highlight groups. There are three ways to customize or &lt;em&gt;override&lt;/em&gt; them:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Using specific hex colors:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;highlights = {&#xA;  Comment = { fg = &#34;#FF0000&#34;, bg = &#34;#FFFF00&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Referencing the name of colors:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;highlights = {&#xA;  Comment = { fg = &#34;${my_new_red}&#34; bg = &#34;${yellow}&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Linking to other highlight groups:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;highlights = {&#xA;  Comment = { link = &#34;Substitute&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring filetype highlighting&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note: Filetype highlighting only works in Neovim 0.8 and above&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The colorscheme supports opinionated highlighting for filetypes, just like the original VS Code theme. By default, all of the filetypes supported are loaded at runtime. The colorscheme currently has support for:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;javascript&lt;/li&gt; &#xA; &lt;li&gt;markdown&lt;/li&gt; &#xA; &lt;li&gt;python&lt;/li&gt; &#xA; &lt;li&gt;ruby&lt;/li&gt; &#xA; &lt;li&gt;rust&lt;/li&gt; &#xA; &lt;li&gt;toml&lt;/li&gt; &#xA; &lt;li&gt;yaml&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/raw/main/CONTRIBUTING.md&#34;&gt;Contributing&lt;/a&gt; guide if you would like add support for new filetypes.&lt;/p&gt; &#xA;&lt;p&gt;Specific filetypes can be disabled as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;filetypes = {&#xA;  markdown = false,&#xA;  ruby = false,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, all of the filetpes can be disabled at once:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;filetypes = {&#xA;  all = false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, all of the filetypes can be disabled with only a select few enabled:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;filetypes = {&#xA;  all = false&#xA;  markdown = true&#xA;  ruby = true,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Adding or modifying filetype highlights&lt;/h4&gt; &#xA;&lt;p&gt;It&#39;s likely that you&#39;ll wish to add additional filetype highlights or even change the defaults. This can be achieved by adding them as custom highlight groups in the colorscheme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;highlights = {&#xA;  [&#34;@field.yaml&#34;] = { fg = &#34;${blue}&#34;, style = &#34;italic&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the example above, we have set the &lt;code&gt;field&lt;/code&gt; treesitter highlight group to be blue, but only when the filetype is &lt;code&gt;yaml&lt;/code&gt;. More information can be found via &lt;code&gt;:h treesitter-highlight-groups&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To determine which highlight group to add or modify, see the &lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#question-faqs&#34;&gt;FAQ&lt;/a&gt; section for instructions on using Treesitter Playground.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The colorscheme&#39;s defaults can be found in the &lt;code&gt;/lua/onedarkpro/highlights/filetypes&lt;/code&gt; directory&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Configuring plugins&lt;/h3&gt; &#xA;&lt;p&gt;By default, all of the plugins supported by the theme are loaded at runtime. Specific plugins can be disabled as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;plugins = {&#xA;  native_lsp = false,&#xA;  polygot = false,&#xA;  treesitter = false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, all of the plugins can be disabled at once:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;plugins = {&#xA;  all = false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or, all of the plugins can be disabled with only a select few enabled:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;plugins = {&#xA;  all = false&#xA;  native_lsp = true,&#xA;  treesitter = true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For a full list of plugins supported, and their names, see the plugins &lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#electric_plug-supported-plugins&#34;&gt;section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Configuring styles&lt;/h3&gt; &#xA;&lt;p&gt;Within the colorscheme, collections of highlight groups have been grouped together into &lt;code&gt;styles&lt;/code&gt;. For users who use monospaced fonts with nice italics, this can go someway to enhancing the aesthetic of the colorscheme. These styles may be configured as shown in the example below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;styles = {&#xA;  types = &#34;NONE&#34;,&#xA;  numbers = &#34;NONE&#34;,&#xA;  strings = &#34;NONE&#34;,&#xA;  comments = &#34;italic&#34;,&#xA;  keywords = &#34;bold,italc&#34;,&#xA;  constants = &#34;NONE&#34;,&#xA;  functions = &#34;italic&#34;,&#xA;  operators = &#34;NONE&#34;,&#xA;  variables = &#34;NONE&#34;,&#xA;  conditionals = &#34;italic&#34;,&#xA;  virtual_text = &#34;NONE&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; See the &lt;a href=&#34;https://neovim.io/doc/user/api.html#nvim_set_hl()&#34;&gt;Neovim help&lt;/a&gt; for a full list of styles&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Configuring options&lt;/h3&gt; &#xA;&lt;h4&gt;Formatting&lt;/h4&gt; &#xA;&lt;p&gt;Alongside styles, the colorscheme enables additional formatting options; often used in combination with filetype highlighting. These can be turned on or off:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;options = {&#xA;  bold = true,&#xA;  italic = false,&#xA;  underline = false,&#xA;  undercurl = true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Transparency&lt;/h4&gt; &#xA;&lt;p&gt;The colorscheme supports transparent backgrounds:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;options = {&#xA;  transparency = true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By setting the transparency option to true, the &lt;code&gt;Normal&lt;/code&gt;, &lt;code&gt;Folded&lt;/code&gt;, &lt;code&gt;SignColumn&lt;/code&gt;, &lt;code&gt;Statusline&lt;/code&gt; and &lt;code&gt;Tabline&lt;/code&gt; groups will have &lt;code&gt;NONE&lt;/code&gt; as the background color. Additional transparency may be achieved by overriding more highlight groups.&lt;/p&gt; &#xA;&lt;h4&gt;Terminal Colors&lt;/h4&gt; &#xA;&lt;p&gt;The colorscheme supports changing the colors for Neovim&#39;s &lt;code&gt;:terminal&lt;/code&gt; to the current theme:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;options = {&#xA;  terminal_colors = true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Window Focus Color&lt;/h4&gt; &#xA;&lt;p&gt;The colorscheme supports changing the color of the main window in Neovim when the focus is lost. For example, when a &lt;code&gt;telescope&lt;/code&gt; or &lt;code&gt;packer&lt;/code&gt; pop up appears:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;options = {&#xA;  window_unfocused_color = true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This can be seen in the screenshots above where &lt;code&gt;nvim-tree&lt;/code&gt; is opened and out of focus&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Cursorline&lt;/h4&gt; &#xA;&lt;p&gt;Cursorline highlighting is supported in the colorscheme using a &lt;code&gt;cursorline&lt;/code&gt; color (which may of course be overridden). This can be enabled with the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;colors = {&#xA;  cursorline = &#34;#FF0000&#34; -- This is optional. The default cursorline color is based on the background&#xA;},&#xA;options = {&#xA;  cursorline = true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuring caching&lt;/h3&gt; &#xA;&lt;p&gt;To enable a faster load time, the colorscheme supports caching. This works by caching highlight groups to disk instead of processing them when Neovim starts. Initial testing suggests you may see a 3x improvement in the colorscheme&#39;s boot time if you have a complex configuration.&lt;/p&gt; &#xA;&lt;p&gt;Note that with caching enabled, if you change your theme config (e.g., custom highlights), you must reload your updated config and then regenerate the cache before your change will take effect.&lt;/p&gt; &#xA;&lt;p&gt;To enable caching:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;onedarkpro&#34;).setup({&#xA;  caching = true&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The default path to the cache is &lt;code&gt;~/.cache/nvim/onedarkpro/&lt;/code&gt;. This can be changed with the &lt;code&gt;cache_path&lt;/code&gt; config variable&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Generating a cache&lt;/h4&gt; &#xA;&lt;p&gt;A cache can be generated by running &lt;code&gt;:OnedarkproCache&lt;/code&gt;. The colorscheme will then detect if a cache is present when Neovim starts.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The cache will be automatically generated if &lt;code&gt;caching = true&lt;/code&gt; and no cache file is present; but it will not regenerate automatically&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To automatically re-generate the cache, an autocommand unique to your configuration should be used.&lt;/p&gt; &#xA;&lt;h4&gt;Cleaning a cache&lt;/h4&gt; &#xA;&lt;p&gt;A cache may be cleaned by running &lt;code&gt;:OnedarkproClean&lt;/code&gt;. This will remove the cache file from disk.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔌&lt;/span&gt; Supported Plugins&lt;/h2&gt; &#xA;&lt;p&gt;The colorscheme supports the following plugins:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stevearc/aerial.nvim&#34;&gt;aerial.nvim&lt;/a&gt; (&lt;code&gt;aerial&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/romgrk/barbar.nvim&#34;&gt;barbar.nvim&lt;/a&gt; (&lt;code&gt;barbar&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/copilot.vim&#34;&gt;Copilot.vim&lt;/a&gt; (&lt;code&gt;copilot&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/dashboard-nvim&#34;&gt;Dashboard&lt;/a&gt; (&lt;code&gt;dashboard&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt; (&lt;code&gt;gitsigns&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phaazon/hop.nvim&#34;&gt;Hop.nvim&lt;/a&gt; (&lt;code&gt;hop&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim/tree/lua&#34;&gt;Indent Blankline&lt;/a&gt; (&lt;code&gt;indentline&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/lspsaga.nvim&#34;&gt;lspsaga.nvim&lt;/a&gt; (&lt;code&gt;lsp_saga&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/chentau/marks.nvim&#34;&gt;marks.nvim&lt;/a&gt; (&lt;code&gt;marks&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-neotest/neotest&#34;&gt;Neotest&lt;/a&gt; (&lt;code&gt;neotest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;neo-tree&lt;/a&gt; (&lt;code&gt;neo_tree&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt; (&lt;code&gt;nvim_cmp&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mfussenegger/nvim-dap&#34;&gt;nvim-dap&lt;/a&gt; (&lt;code&gt;nvim_dap&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-dap-ui&#34;&gt;nvim-dap-ui&lt;/a&gt; (&lt;code&gt;nvim_dap_ui&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kevinhwang91/nvim-hlslens&#34;&gt;nvim-hlslens&lt;/a&gt; (&lt;code&gt;nvim_hlslens&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt; (&lt;code&gt;native_lsp&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SmiteshP/nvim-navic&#34;&gt;nvim-navic&lt;/a&gt; (&lt;code&gt;nvim_navic&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim-notify&lt;/a&gt; (&lt;code&gt;nvim_notify&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-tree.lua&#34;&gt;nvim-tree&lt;/a&gt; (&lt;code&gt;nvim_tree&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/p00f/nvim-ts-rainbow&#34;&gt;nvim-ts-rainbow&lt;/a&gt; (&lt;code&gt;nvim_ts_rainbow&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mrjones2014/op.nvim&#34;&gt;op.nvim&lt;/a&gt; (&lt;code&gt;op_nvim&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt; (&lt;code&gt;packer&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sheerun/vim-polyglot&#34;&gt;polygot&lt;/a&gt; (&lt;code&gt;polygot&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mhinz/vim-startify&#34;&gt;startify&lt;/a&gt; (&lt;code&gt;startify&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt; (&lt;code&gt;telescope&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/toggleterm.nvim&#34;&gt;toggleterm.nvim&lt;/a&gt; (&lt;code&gt;toggleterm&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;Treesitter&lt;/a&gt; (&lt;code&gt;treesitter&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;Trouble&lt;/a&gt; (&lt;code&gt;trouble&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/vim-ultest&#34;&gt;Vim Ultest&lt;/a&gt; (&lt;code&gt;vim_ultest&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;Which Key&lt;/a&gt; (&lt;code&gt;which_key&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔬&lt;/span&gt; Comparison to VS Code&#39;s One Dark Pro&lt;/h2&gt; &#xA;&lt;h3&gt;Python&#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/9512444/178540087-bda08b3c-fab3-422f-bcb2-46a521de4738.png&#34; alt=&#34;Comparison to VS Code - Python&#34;&gt; &#xA;&lt;h3&gt;React&#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/9512444/178540105-73dd2fa9-282b-4332-8bae-1ba26a8551cc.png&#34; alt=&#34;Comparison to VS Code - React&#34;&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; A greater likeness to Visual Studio Code can be achieved by using the theme&#39;s ability to &lt;a href=&#34;https://raw.githubusercontent.com/olimorris/onedarkpro.nvim/main/#configuring-filetype-highlight-groups&#34;&gt;customise highlight groups by filetype&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span&gt;🎁&lt;/span&gt; Extras&lt;/h2&gt; &#xA;&lt;h3&gt;Lualine&#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The colorscheme has Lualine support out of the box for all of its themes. This can be found in the &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/raw/main/lua/lualine/themes/onedarkpro.lua&#34;&gt;Lualine folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Terminal themes&#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The colorscheme comes with &lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;Alacritty&lt;/a&gt; and &lt;a href=&#34;https://github.com/kovidgoyal/kitty&#34;&gt;Kitty&lt;/a&gt; themes. These can be found in the &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/tree/main/extras&#34;&gt;extras&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h3&gt;Helpers&#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;Theme color tables&lt;/h4&gt; &#xA;&lt;p&gt;To enable the theme&#39;s colors to be extracted and used elsewhere in the Neovim config, a helper function, &lt;code&gt;get_colors()&lt;/code&gt;, has been included. This returns a table of the theme&#39;s current colors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local colors = require(&#34;onedarkpro&#34;).get_colors(vim.g.onedarkpro_theme)&#xA;print(colors.purple) -- #9a77cf&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The global variable &lt;code&gt;vim.g.onedarkpro_theme&lt;/code&gt; represents the currently loaded theme&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can also use the command &lt;code&gt;:OnedarkproColors&lt;/code&gt; to open a scratch buffer with the colors from the currently loaded theme. This then allows a colorizer plugin to highlight the colors.&lt;/p&gt; &#xA;&lt;h4&gt;Toggling between themes&lt;/h4&gt; &#xA;&lt;p&gt;To enable the easy switching between dark and light themes, the following helper function could be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;function ToggleTheme()&#xA;  if vim.o.background == &#34;dark&#34; then&#xA;    vim.o.background = &#34;light&#34;&#xA;  else&#xA;    vim.o.background = &#34;dark&#34;&#xA;  end&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Configuring styles/colors/highlight groups based on the theme&lt;/h4&gt; &#xA;&lt;p&gt;When configuring the colorscheme, it may be useful to apply different colors or styles depending on whether &lt;code&gt;onedark&lt;/code&gt; or &lt;code&gt;onelight&lt;/code&gt; is active. This can be achieved by applying a conditional in the configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;highlights = {&#xA;  TSField = {&#xA;    fg = (vim.o.background == &#34;dark&#34; and &#34;${red}&#34; or &#34;${green}&#34;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;❓&lt;/span&gt; FAQs&lt;/h2&gt; &#xA;&lt;h4&gt;I want to change X highlight group but I don&#39;t know what it is. How do I find out?&lt;/h4&gt; &#xA;&lt;p&gt;If you&#39;re using Treesitter then install &lt;a href=&#34;https://github.com/nvim-treesitter/playground&#34;&gt;Playground&lt;/a&gt; as this gives you access to the powerful &lt;code&gt;:TSHighlightCapturesUnderCursor&lt;/code&gt; command. This shows any treesitter or syntax highlight groups under the cursor.&lt;/p&gt; &#xA;&lt;h4&gt;I want to automatically generate the cache file. How do I do it?&lt;/h4&gt; &#xA;&lt;p&gt;This can be achieved by creating a &lt;code&gt;ColorScheme&lt;/code&gt; autocommand that runs the &lt;code&gt;:OnedarkproCache&lt;/code&gt; command. The author uses this to automatically generate a new cache file when a new theme is toggled.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;👏&lt;/span&gt; Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Contributors&#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to the following contributors for their work on the colorscheme:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mmirus&#34;&gt;mmirus&lt;/a&gt; - &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/commits?author=mmirus&#34;&gt;contributions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mrjones2014&#34;&gt;mrjones2014&lt;/a&gt; - &lt;a href=&#34;https://github.com/olimorris/onedarkpro.nvim/commits?author=mrjones2014&#34;&gt;contributions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Inspiration&#xA; &lt;!-- omit in toc --&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The following colorschemes were used as an inspiration:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Binaryify/OneDark-Pro&#34;&gt;One Dark Pro&lt;/a&gt; - The inspiration for this colorscheme&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim&#34;&gt;Nightfox&lt;/a&gt; - For the beautiful code base and structure&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/projekt0n/github-nvim-theme&#34;&gt;GitHub nvim theme&lt;/a&gt; - For the logo inspiration&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>