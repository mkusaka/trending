<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-16T01:32:04Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>SUSTech-data/wildfire.nvim</title>
    <updated>2023-08-16T01:32:04Z</updated>
    <id>tag:github.com,2023-08-16:/SUSTech-data/wildfire.nvim</id>
    <link href="https://github.com/SUSTech-data/wildfire.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;wildfire burns treesitter&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üî•Wildfire.nvim: Wildfire burns treesitterüå≤&lt;/h1&gt; &#xA;&lt;p&gt;A modern successor to &lt;a href=&#34;https://github.com/gcmt/wildfire.vim&#34;&gt;wildfire.vim&lt;/a&gt;, empowered with the superpower of treesitter.&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;table&gt; &#xA;  &lt;colgroup&gt; &#xA;   &lt;col style=&#34;width: 100%&#34;&gt; &#xA;  &lt;/colgroup&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr class=&#34;odd&#34;&gt; &#xA;    &lt;td style=&#34;text-align: center;&#34;&gt;&#xA;     &lt;div width=&#34;100.0%&#34; data-layout-align=&#34;center&#34; data-fig.extended=&#34;false&#34;&gt; &#xA;      &lt;p&gt;&lt;a href=&#34;https://asciinema.org/a/TKD1XZ85IAtN0m5JwlvinRIZP&#34;&gt;&lt;img src=&#34;https://asciinema.org/a/TKD1XZ85IAtN0m5JwlvinRIZP.svg?sanitize=true&#34; data-fig.extended=&#34;false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;      &lt;p&gt;Incremental and decremental selection&lt;/p&gt; &#xA;     &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;table&gt; &#xA;  &lt;colgroup&gt; &#xA;   &lt;col style=&#34;width: 50%&#34;&gt; &#xA;   &lt;col style=&#34;width: 50%&#34;&gt; &#xA;  &lt;/colgroup&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr class=&#34;odd&#34;&gt; &#xA;    &lt;td style=&#34;text-align: center;&#34;&gt;&#xA;     &lt;div width=&#34;50.0%&#34; data-layout-align=&#34;center&#34;&gt; &#xA;      &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SUSTech-data/wildfire.nvim/master/assets/count.gif&#34; data-fig.extended=&#34;false&#34; alt=&#34;Accelerate selection with count prefix&#34;&gt;&lt;/p&gt; &#xA;     &lt;/div&gt;&lt;/td&gt; &#xA;    &lt;td style=&#34;text-align: center;&#34;&gt;&#xA;     &lt;div width=&#34;50.0%&#34; data-layout-align=&#34;center&#34;&gt; &#xA;      &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SUSTech-data/wildfire.nvim/master/assets/quick.gif&#34; data-fig.extended=&#34;false&#34; alt=&#34;Quick selection (leverage by treehopper)&#34;&gt;&lt;/p&gt; &#xA;     &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;‚ö° Smartly select the &lt;strong&gt;inner&lt;/strong&gt; part of texts&lt;/li&gt; &#xA; &lt;li&gt;‚ö´ &lt;strong&gt;count prefix&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;üå≥ &lt;strong&gt;Treesitter Integration&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;I‚Äôve found that treesitter‚Äôs &lt;a href=&#34;https://www.reddit.com/r/neovim/comments/r10llx/the_most_amazing_builtin_feature_nobody_ever/&#34;&gt;&lt;code&gt;incremental_selection&lt;/code&gt;&lt;/a&gt; is particularly handy for text selection. It often allows for selecting the desired text with fewer keystrokes compared to a well-configured wildfire.vim, all without the need to set up intricate text objects.&lt;/p&gt; &#xA;&lt;p&gt;However, since treesitter relies solely on AST for incremental selection, it tends to be overly &lt;strong&gt;aggressive&lt;/strong&gt; for surrounds. In such case, I have to revert to using text objects for selection, which is annoyed and tripped me up in practical use.&lt;/p&gt; &#xA;&lt;p&gt;On the other hand, treesitter doesn‚Äôt support the &lt;code&gt;count prefix(vim.v.count)&lt;/code&gt;, which can make it somewhat cumbersome when dealing with longer ranges. Its implementation is also a bit buggy, as you might select an area within the same range(see below).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A picture is worth a thousand words&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SUSTech-data/wildfire.nvim/master/assets/comp.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The useage is almost the same as &lt;a href=&#34;https://github.com/gcmt/wildfire.vim&#34;&gt;wildfire.vim&lt;/a&gt; and &lt;a href=&#34;https://www.reddit.com/r/neovim/comments/r10llx/the_most_amazing_builtin_feature_nobody_ever/&#34;&gt;&lt;code&gt;incremental_selection&lt;/code&gt;&lt;/a&gt;, You can check out their introduction to get a sense of it.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CR&lt;/code&gt; Init selection and do incremental selection if you have initilized (so just keep pressing &lt;code&gt;CR&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BS&lt;/code&gt; Decremental selection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;NUM-CR&lt;/code&gt; Accelerate selection with count prefix.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This plugin offers a streamlined method for text selection, freeing you from the hassle of configuring and remembering intricate text objects. Plus, initiating this plugin with &lt;code&gt;CR&lt;/code&gt; seamlessly transitions you into visual mode. This means you can still harness the power of your preferred text objects without any extra keystrokes (like &lt;code&gt;v-i-b&lt;/code&gt; or &lt;code&gt;CR-i-b&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Beyond the basic actions such as yank(&lt;code&gt;CR&lt;/code&gt;), delete(&lt;code&gt;d&lt;/code&gt;), and change (&lt;code&gt;c&lt;/code&gt;), here are a few other awesome tricks up its sleeve:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;üìê Partially format with: textDocument/rangeFormatting&lt;/li&gt; &#xA; &lt;li&gt;üîç Narrow down regions using: &lt;a href=&#34;https://github.com/haolian9/nag.nvim&#34;&gt;nag.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;üñãÔ∏è Adding surrounding pairs via: &lt;a href=&#34;https://github.com/kylechui/nvim-surround&#34;&gt;nvim-surround&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;p&gt;This plugin embodies my endeavor to embrace the Helix-inspired select first method. The horizon is vast, and the possibilities limitless. Come, let‚Äôs explore the extent of what we can achieve together! üöÄ&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;sustech-data/wildfire.nvim&#34;,&#xA;    event = &#34;VeryLazy&#34;,&#xA;    dependencies = { &#34;nvim-treesitter/nvim-treesitter&#34; },&#xA;    config = function()&#xA;        require(&#34;wildfire&#34;).setup()&#xA;    end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;This plugin is modified based on the official implementation of treesitter, so you can configure it in a very similar manner.&lt;/p&gt; &#xA;&lt;p&gt;Currently you can only set unit width surround, refer to the default settings below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    surrounds = {&#xA;        { &#34;(&#34;, &#34;)&#34; },&#xA;        { &#34;{&#34;, &#34;}&#34; },&#xA;        { &#34;&amp;lt;&#34;, &#34;&amp;gt;&#34; },&#xA;        { &#34;[&#34;, &#34;]&#34; },&#xA;    },&#xA;    keymaps = {&#xA;        init_selection = &#34;&amp;lt;CR&amp;gt;&#34;,&#xA;        node_incremental = &#34;&amp;lt;CR&amp;gt;&#34;,&#xA;        node_decremental = &#34;&amp;lt;BS&amp;gt;&#34;,&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To disable a keymaps, set it to &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The quick selection havn‚Äôt support natively, but you can try it out by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;:lua require&#39;wildfire&#39;.init_selection()&amp;lt;CR&amp;gt;:lua require(&#39;tsht&#39;).nodes()&amp;lt;CR&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;which is powered by &lt;a href=&#34;https://github.com/mfussenegger/nvim-treehopper&#34;&gt;treehopper&lt;/a&gt;, &lt;a href=&#34;https://github.com/folke/flash.nvim/tree/main&#34;&gt;flash&lt;/a&gt; also provide similar things&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; init with count prefix&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Native quick selection support&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Advanced surround support (Any length)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Handle surround in node&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>