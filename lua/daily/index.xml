<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-25T01:40:04Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>utilyre/barbecue.nvim</title>
    <updated>2023-01-25T01:40:04Z</updated>
    <id>tag:github.com,2023-01-25:/utilyre/barbecue.nvim</id>
    <link href="https://github.com/utilyre/barbecue.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A VS Code like winbar for Neovim&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;barbecue.nvim&lt;/h1&gt; &#xA; &lt;p&gt;This is a VS Code like winbar that uses &lt;a href=&#34;https://github.com/SmiteshP/nvim-navic&#34;&gt;nvim-navic&lt;/a&gt; in order to get LSP context from your language server.&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/91974155/208309076-00b3d5e4-e0cc-4990-9f55-2877fca4baa2.mp4&#34;&gt;https://user-images.githubusercontent.com/91974155/208309076-00b3d5e4-e0cc-4990-9f55-2877fca4baa2.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;üñ±Ô∏è Jump to any context by &lt;em&gt;just&lt;/em&gt; clicking on it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üå≤ Have a deeply nested &lt;strong&gt;file-tree/context&lt;/strong&gt;? It&#39;s gonna get rid of the &lt;em&gt;less&lt;/em&gt; useful parts smartly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üìÇ &lt;em&gt;Easily&lt;/em&gt; tell where your file is located at by looking at your &lt;strong&gt;winbar&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üìú Put &lt;em&gt;whatever&lt;/em&gt; your heart desires in the &lt;strong&gt;custom section&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¨ Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/releases/latest&#34;&gt;NVIM v0.8+&lt;/a&gt;: Winbar support.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt;: Dependency of nvim-navic.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SmiteshP/nvim-navic&#34;&gt;nvim-navic&lt;/a&gt;: LSP &lt;code&gt;textDocument/documentSymbol&lt;/code&gt; provider.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt;: File icon provider. &lt;em&gt;(optional)&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Make sure barbecue loads &lt;em&gt;after&lt;/em&gt; your colorscheme.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local spec = {&#xA;  &#34;utilyre/barbecue.nvim&#34;,&#xA;  version = &#34;*&#34;,&#xA;  dependencies = {&#xA;    &#34;neovim/nvim-lspconfig&#34;,&#xA;    &#34;SmiteshP/nvim-navic&#34;,&#xA;    &#34;nvim-tree/nvim-web-devicons&#34;, -- optional dependency&#xA;  },&#xA;}&#xA;&#xA;function spec.config()&#xA;  require(&#34;barbecue&#34;).setup()&#xA;end&#xA;&#xA;return spec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;  &#34;utilyre/barbecue.nvim&#34;,&#xA;  tag = &#34;*&#34;,&#xA;  requires = {&#xA;    &#34;neovim/nvim-lspconfig&#34;,&#xA;    &#34;SmiteshP/nvim-navic&#34;,&#xA;    &#34;nvim-tree/nvim-web-devicons&#34;, -- optional dependency&#xA;  },&#xA;  after = &#34;nvim-web-devicons&#34;, -- keep this if you&#39;re using NvChad&#xA;  config = function()&#xA;    require(&#34;barbecue&#34;).setup()&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;p&gt;Barbecue will work right after &lt;a href=&#34;https://raw.githubusercontent.com/utilyre/barbecue.nvim/main/#-installation&#34;&gt;installation&lt;/a&gt;, but there are several things you should be aware of.&lt;/p&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Hide/Show/Toggle winbar&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Barbecue {hide,show,toggle}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Hide/Show/Toggle winbar (&lt;a href=&#34;https://github.com/utilyre/barbecue.nvim/raw/ca4339fe9470c6a71f7efb55a03049bbd2c98972/lua/barbecue/ui.lua#L164&#34;&gt;source&lt;/a&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;barbecue.ui&#34;).toggle([false|true])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update winbar in a single window (&lt;a href=&#34;https://github.com/utilyre/barbecue.nvim/raw/ca4339fe9470c6a71f7efb55a03049bbd2c98972/lua/barbecue/ui.lua#L122&#34;&gt;source&lt;/a&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;barbecue.ui&#34;).update([winnr])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to an entry by the given index (&lt;a href=&#34;https://github.com/utilyre/barbecue.nvim/raw/ca4339fe9470c6a71f7efb55a03049bbd2c98972/lua/barbecue/ui.lua#L176&#34;&gt;source&lt;/a&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;barbecue.ui&#34;).navigate(index --[[ negative values begin from the end ]], [winnr])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üç¥ Recipes&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Gain better performance when moving the cursor around&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- triggers CursorHold event faster&#xA;vim.opt.updatetime = 200&#xA;&#xA;require(&#34;barbecue&#34;).setup({&#xA;  create_autocmd = false, -- prevent barbecue from updating itself automatically&#xA;})&#xA;&#xA;vim.api.nvim_create_autocmd({&#xA;  &#34;WinScrolled&#34;,&#xA;  &#34;BufWinEnter&#34;,&#xA;  &#34;CursorHold&#34;,&#xA;  &#34;InsertLeave&#34;,&#xA;&#xA;  -- include these if you have set `show_modified` to `true`&#xA;  &#34;BufWritePost&#34;,&#xA;  &#34;TextChanged&#34;,&#xA;  &#34;TextChangedI&#34;,&#xA;}, {&#xA;  group = vim.api.nvim_create_augroup(&#34;barbecue#create_autocmd&#34;, {}),&#xA;  callback = function()&#xA;    require(&#34;barbecue.ui&#34;).update()&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Customize theme&lt;/p&gt; &lt;p&gt;You can pass a &lt;code&gt;theme&lt;/code&gt; table to the &lt;code&gt;setup&lt;/code&gt; function and override the default theme. This &lt;code&gt;theme&lt;/code&gt; table links each highlight to its value (value is the same type as &lt;code&gt;val&lt;/code&gt; parameter in &lt;code&gt;:help nvim_set_hl&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;barbecue&#34;).setup({&#xA;  theme = {&#xA;    -- this highlight is used to override other highlights&#xA;    -- you can take advantage of its `bg` and set a background throughout your winbar&#xA;    -- (e.g. basename will look like this: { fg = &#34;#c0caf5&#34;, bold = true })&#xA;    normal = { fg = &#34;#c0caf5&#34; },&#xA;&#xA;    -- these highlights correspond to symbols table from config&#xA;    ellipsis = { fg = &#34;#737aa2&#34; },&#xA;    separator = { fg = &#34;#737aa2&#34; },&#xA;    modified = { fg = &#34;#737aa2&#34; },&#xA;&#xA;    -- these highlights represent the _text_ of three main parts of barbecue&#xA;    dirname = { fg = &#34;#737aa2&#34; },&#xA;    basename = { bold = true },&#xA;    context = {},&#xA;&#xA;    -- these highlights are used for context/navic icons&#xA;    context_file = { fg = &#34;#ac8fe4&#34; },&#xA;    context_module = { fg = &#34;#ac8fe4&#34; },&#xA;    context_namespace = { fg = &#34;#ac8fe4&#34; },&#xA;    context_package = { fg = &#34;#ac8fe4&#34; },&#xA;    context_class = { fg = &#34;#ac8fe4&#34; },&#xA;    context_method = { fg = &#34;#ac8fe4&#34; },&#xA;    context_property = { fg = &#34;#ac8fe4&#34; },&#xA;    context_field = { fg = &#34;#ac8fe4&#34; },&#xA;    context_constructor = { fg = &#34;#ac8fe4&#34; },&#xA;    context_enum = { fg = &#34;#ac8fe4&#34; },&#xA;    context_interface = { fg = &#34;#ac8fe4&#34; },&#xA;    context_function = { fg = &#34;#ac8fe4&#34; },&#xA;    context_variable = { fg = &#34;#ac8fe4&#34; },&#xA;    context_constant = { fg = &#34;#ac8fe4&#34; },&#xA;    context_string = { fg = &#34;#ac8fe4&#34; },&#xA;    context_number = { fg = &#34;#ac8fe4&#34; },&#xA;    context_boolean = { fg = &#34;#ac8fe4&#34; },&#xA;    context_array = { fg = &#34;#ac8fe4&#34; },&#xA;    context_object = { fg = &#34;#ac8fe4&#34; },&#xA;    context_key = { fg = &#34;#ac8fe4&#34; },&#xA;    context_null = { fg = &#34;#ac8fe4&#34; },&#xA;    context_enum_member = { fg = &#34;#ac8fe4&#34; },&#xA;    context_struct = { fg = &#34;#ac8fe4&#34; },&#xA;    context_event = { fg = &#34;#ac8fe4&#34; },&#xA;    context_operator = { fg = &#34;#ac8fe4&#34; },&#xA;    context_type_parameter = { fg = &#34;#ac8fe4&#34; },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Get nvim-navic working with multiple tabs (&lt;a href=&#34;https://github.com/utilyre/barbecue.nvim/issues/35&#34;&gt;#35&lt;/a&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;barbecue&#34;).setup({&#xA;  attach_navic = false, -- prevent barbecue from automatically attaching nvim-navic&#xA;})&#xA;&#xA;require(&#34;lspconfig&#34;)[server].setup({&#xA;  -- ...&#xA;&#xA;  on_attach = function(client, bufnr)&#xA;    -- ...&#xA;&#xA;    if client.server_capabilities[&#34;documentSymbolProvider&#34;] then&#xA;      require(&#34;nvim-navic&#34;).attach(client, bufnr)&#xA;    end&#xA;&#xA;    -- ...&#xA;  end,&#xA;&#xA;  -- ...&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üö† Configuration&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to see default config&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  ---whether to show/use navic in the winbar&#xA;  ---@type boolean&#xA;  show_navic = true,&#xA;&#xA;  ---whether to attach navic to language servers automatically&#xA;  ---@type boolean&#xA;  attach_navic = true,&#xA;&#xA;  ---whether to create winbar updater autocmd&#xA;  ---@type boolean&#xA;  create_autocmd = true,&#xA;&#xA;  ---buftypes to enable winbar in&#xA;  ---@type string[]&#xA;  include_buftypes = { &#34;&#34; },&#xA;&#xA;  ---filetypes not to enable winbar in&#xA;  ---@type string[]&#xA;  exclude_filetypes = { &#34;gitcommit&#34;, &#34;toggleterm&#34; },&#xA;&#xA;  modifiers = {&#xA;    ---filename modifiers applied to dirname&#xA;    ---@type string&#xA;    dirname = &#34;:~:.&#34;,&#xA;&#xA;    ---filename modifiers applied to basename&#xA;    ---@type string&#xA;    basename = &#34;&#34;,&#xA;  },&#xA;&#xA;  ---returns a string to be shown at the end of winbar&#xA;  ---@type fun(bufnr: number): string&#xA;  custom_section = function() return &#34;&#34; end,&#xA;&#xA;  ---`auto` uses your current colorscheme&#39;s theme or generates a theme based on it&#xA;  ---`string` is the theme name to be used (theme should be located under `barbecue.theme` module)&#xA;  ---`barbecue.Theme` is a table that overrides the `auto` theme detection/generation&#xA;  ---@type &#34;auto&#34;|string|barbecue.Theme&#xA;  theme = &#34;auto&#34;,&#xA;&#xA;  ---whether to display path to file&#xA;  ---@type boolean&#xA;  show_dirname = true,&#xA;&#xA;  ---whether to replace file icon with the modified symbol when buffer is modified&#xA;  ---@type boolean&#xA;  show_modified = false,&#xA;&#xA;  symbols = {&#xA;    ---modification indicator&#xA;    ---@type string&#xA;    modified = &#34;‚óè&#34;,&#xA;&#xA;    ---truncation indicator&#xA;    ---@type string&#xA;    ellipsis = &#34;‚Ä¶&#34;,&#xA;&#xA;    ---entry separator&#xA;    ---@type string&#xA;    separator = &#34;Ó™∂&#34;,&#xA;  },&#xA;&#xA;  ---icons for different context entry kinds&#xA;  ---`false` to disable kind icons&#xA;  ---@type table&amp;lt;string, string&amp;gt;|false&#xA;  kinds = {&#xA;    File = &#34;Ó≠†&#34;,&#xA;    Module = &#34;Ó™ã&#34;,&#xA;    Namespace = &#34;Ó™ã&#34;,&#xA;    Package = &#34;Ó¨©&#34;,&#xA;    Class = &#34;Ó≠õ&#34;,&#xA;    Method = &#34;Ó™å&#34;,&#xA;    Property = &#34;Ó≠•&#34;,&#xA;    Field = &#34;Ó≠ü&#34;,&#xA;    Constructor = &#34;Ó≠õ&#34;,&#xA;    Enum = &#34;Ó™ï&#34;,&#xA;    Interface = &#34;Ó≠°&#34;,&#xA;    Function = &#34;Ó™å&#34;,&#xA;    Variable = &#34;Ó™à&#34;,&#xA;    Constant = &#34;Ó≠ù&#34;,&#xA;    String = &#34;ÓÆç&#34;,&#xA;    Number = &#34;Ó™ê&#34;,&#xA;    Boolean = &#34;Ó™è&#34;,&#xA;    Array = &#34;Ó™ä&#34;,&#xA;    Object = &#34;Ó¨è&#34;,&#xA;    Key = &#34;Ó™ì&#34;,&#xA;    Null = &#34;Ó™Ω&#34;,&#xA;    EnumMember = &#34;Ó≠û&#34;,&#xA;    Struct = &#34;Ó™ë&#34;,&#xA;    Event = &#34;Ó™Ü&#34;,&#xA;    Operator = &#34;Ó≠§&#34;,&#xA;    TypeParameter = &#34;Ó™í&#34;,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;üë• Contribution&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/utilyre/barbecue.nvim/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AlexvZyl/nordic.nvim</title>
    <updated>2023-01-25T01:40:04Z</updated>
    <id>tag:github.com,2023-01-25:/AlexvZyl/nordic.nvim</id>
    <link href="https://github.com/AlexvZyl/nordic.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Neovim colorscheme based on Nord, but Aurora &gt; Frost.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nordic.nvim&lt;/h1&gt; &#xA;&lt;p&gt;A Neovim colorscheme based on &lt;a href=&#34;https://www.nordtheme.com/&#34;&gt;Nord&lt;/a&gt;, but &lt;code&gt;Aurora&lt;/code&gt; &amp;gt; &lt;code&gt;Frost&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The idea behind this colorscheme is to use Nord, but add some darker colors and use &lt;code&gt;Aurora&lt;/code&gt; more prominently than Nord themes usually do.&lt;/p&gt; &#xA;&lt;h1&gt;‚ö†Ô∏è Status&lt;/h1&gt; &#xA;&lt;p&gt;This colorscheme is still in early development, so please do not hesitate if there is anything wrong or if you have any suggestions! Currently I am &lt;a href=&#34;https://en.wikipedia.org/wiki/Eating_your_own_dog_food&#34;&gt;dogfooding&lt;/a&gt; it to make sure I did not miss anything.&lt;/p&gt; &#xA;&lt;h1&gt;üì∑ Showcase&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Nvim-tree, lsp, bar-bar, lualine and treesitter:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/214236416-5cfe1638-e3f9-4f24-a330-489c341ce0fc.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Telescope&lt;/summary&gt; &#xA; &lt;p&gt;&lt;em&gt;Flat:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/213918343-a4daac04-9e98-4ba1-89f8-0e8eb4b73c10.png&#34; alt=&#34;image&#34;&gt; &lt;em&gt;Classic:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/213974295-c9381a16-6f02-49dd-88b3-64f03ef9d5c7.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Dashboard &amp;amp; which-key&lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/81622310/214096444-7b1c3b7c-59cc-4e71-be6d-8c30522cfe68.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;üé® Palette&lt;/h1&gt; &#xA;&lt;p&gt;TODO&lt;/p&gt; &#xA;&lt;h1&gt;üì¶ Installation&lt;/h1&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use &#39;AlexvZyl/nordic.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;AlexvZyl/nordic.nvim&#39;, { &#39;branch&#39;: &#39;main&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;üöÄ Usage&lt;/h1&gt; &#xA;&lt;p&gt;Using vim:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;colorscheme nordic&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using lua:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.colorscheme &#39;nordic&#39;&#xA;-- or&#xA;require &#39;nordic&#39; .load()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Using with &lt;code&gt;lualine&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require &#39;lualine&#39; .setup {&#xA;  options = {&#xA;    theme = &#39;nordic&#39;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get the palette in lua:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local palette = require &#39;nordic.colors&#39; &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;‚öôÔ∏è Configuration&lt;/h1&gt; &#xA;&lt;p&gt;Nordic will use the default values, unless &lt;code&gt;setup&lt;/code&gt; is called. Below is the default configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require &#39;nordic&#39; .setup {&#xA;  telescope = {&#xA;    -- Available styles: `classic`, `flat`.&#xA;    style = &#39;flat&#39;&#xA;  },&#xA;  -- These can contain anything that neovim understands.&#xA;  -- (fg, bg, italic, bold, etc.)&#xA;  syntax = {&#xA;    comments = {&#xA;      italic = true,&#xA;      bold = false&#xA;    },&#xA;    operators = {&#xA;      italic = false,&#xA;      bold = true&#xA;    },&#xA;    keywords = {&#xA;      italic = false,&#xA;      bold = true&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;üóíÔ∏è Supported Plugins&lt;/h1&gt; &#xA;&lt;p&gt;This is the list of currently supported plugins. I use these myself, if you want other plugins to be supported either open an issue or submit a PR!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/romgrk/barbar.nvim&#34;&gt;barbar.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mfussenegger/nvim-dap&#34;&gt;nvim-dap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-dap-ui&#34;&gt;nvim-dap-ui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/dashboard-nvim&#34;&gt;dashboard-nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim&#34;&gt;indent-blankline.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggandor/leap.nvim&#34;&gt;leap.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/lspsaga.nvim&#34;&gt;lspsaga.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua&#34;&gt;nvim-tree.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;trouble.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;which-key.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sindrets/diffview.nvim&#34;&gt;diffview.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;üéôÔ∏è Acknowledgements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/tokyonight.nvim&#34;&gt;folke/tokyonight&lt;/a&gt; served as an excellent example for a Neovim theme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim&#34;&gt;EdenEast/nightfox.nvim&lt;/a&gt; for bright &amp;amp; dim versions of the Nord palette.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>