<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-09T01:34:56Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kawre/leetcode.nvim</title>
    <updated>2023-12-09T01:34:56Z</updated>
    <id>tag:github.com,2023-12-09:/kawre/leetcode.nvim</id>
    <link href="https://github.com/kawre/leetcode.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Neovim plugin enabling you to solve LeetCode problems within Neovim.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;üö® &lt;strong&gt;leetcode.nvim is currently in the &lt;em&gt;alpha stage&lt;/em&gt; of development&lt;/strong&gt; üö®&lt;/p&gt; &#xA; &lt;hr&gt; &#xA; &lt;h1&gt;leetcode.nvim&lt;/h1&gt; &#xA; &lt;p&gt;üî• Solve &lt;a href=&#34;https://leetcode.com&#34;&gt;LeetCode&lt;/a&gt; problems within &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; üî•&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kawre/leetcode.nvim/assets/69250723/aee6584c-e099-4409-b114-123cb32b7563&#34;&gt;https://github.com/kawre/leetcode.nvim/assets/69250723/aee6584c-e099-4409-b114-123cb32b7563&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;üìå an intuitive dashboard for effortless navigation within &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üòç question description formatting for a better readability&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üìà &lt;a href=&#34;https://leetcode.com&#34;&gt;LeetCode&lt;/a&gt; profile statistics within &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üîÄ support for daily and random questions&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üíæ caching for optimized performance&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¨ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; &amp;gt;= 0.9.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim&#34;&gt;nui.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt; &lt;em&gt;&lt;strong&gt;(optional, but highly recommended)&lt;/strong&gt;&lt;/em&gt; used for formatting the question description. Make sure to install the parser for &lt;code&gt;html&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim-notify&lt;/a&gt; &lt;em&gt;&lt;strong&gt;(optional)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.nerdfonts.com&#34;&gt;Nerd Font&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt; &lt;em&gt;&lt;strong&gt;(optional)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;kawre/leetcode.nvim&#34;,&#xA;    build = &#34;:TSUpdate html&#34;,&#xA;    dependencies = {&#xA;        &#34;nvim-telescope/telescope.nvim&#34;,&#xA;        &#34;nvim-lua/plenary.nvim&#34;, -- required by telescope&#xA;        &#34;MunifTanjim/nui.nvim&#34;,&#xA;&#xA;        -- optional&#xA;        &#34;nvim-treesitter/nvim-treesitter&#34;,&#xA;        &#34;rcarriga/nvim-notify&#34;,&#xA;        &#34;nvim-tree/nvim-web-devicons&#34;,&#xA;    },&#xA;    opts = {&#xA;        -- configuration goes here&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;To see full configuration types see &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/lua/leetcode/config/template.lua&#34;&gt;template.lua&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;‚öôÔ∏è default configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    ---@type string&#xA;    arg = &#34;leetcode.nvim&#34;,&#xA;&#xA;    ---@type lc.lang&#xA;    lang = &#34;cpp&#34;,&#xA;&#xA;    cn = { -- leetcode.cn&#xA;        enabled = false, ---@type boolean&#xA;        translator = true, ---@type boolean&#xA;        translate_problems = true, ---@type boolean&#xA;    },&#xA;&#xA;    ---@type string&#xA;    directory = vim.fn.stdpath(&#34;data&#34;) .. &#34;/leetcode/&#34;,&#xA;&#xA;    ---@type boolean&#xA;    logging = true,&#xA;&#xA;    cache = {&#xA;        update_interval = 60 * 60 * 24 * 7, ---@type integer 7 days&#xA;    },&#xA;&#xA;    console = {&#xA;        open_on_runcode = true, ---@type boolean&#xA;&#xA;        dir = &#34;row&#34;, ---@type lc.direction&#xA;&#xA;        size = { ---@type lc.size&#xA;            width = &#34;90%&#34;,&#xA;            height = &#34;75%&#34;,&#xA;        },&#xA;&#xA;        result = {&#xA;            size = &#34;60%&#34;, ---@type lc.size&#xA;        },&#xA;&#xA;        testcase = {&#xA;            virt_text = true, ---@type boolean&#xA;&#xA;            size = &#34;40%&#34;, ---@type lc.size&#xA;        },&#xA;    },&#xA;&#xA;    description = {&#xA;        position = &#34;left&#34;, ---@type lc.position&#xA;&#xA;        width = &#34;40%&#34;, ---@type lc.size&#xA;&#xA;        show_stats = true, ---@type boolean&#xA;    },&#xA;&#xA;    hooks = {&#xA;        ---@type fun()[]&#xA;        LeetEnter = {},&#xA;&#xA;        ---@type fun(question: { lang: string })[]&#xA;        LeetQuestionNew = {},&#xA;    },&#xA;&#xA;    ---@type boolean&#xA;    image_support = false, -- setting this to `true` will disable question description wrap&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;arg&lt;/h3&gt; &#xA;&lt;p&gt;Argument for &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type string&#xA;arg = &#34;leetcode.nvim&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;small&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#-usage&#34;&gt;usage&lt;/a&gt; for more info&lt;/small&gt;&lt;/p&gt; &#xA;&lt;h3&gt;lang&lt;/h3&gt; &#xA;&lt;p&gt;Language to start your session with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type lc.lang&#xA;lang = &#34;cpp&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;cn&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://leetcode.cn&#34;&gt;leetcode.cn&lt;/a&gt; instead of &lt;a href=&#34;https://leetcode.com&#34;&gt;leetcode.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;cn = { -- leetcode.cn&#xA;    enabled = false, ---@type boolean&#xA;    translator = true, ---@type boolean&#xA;    translate_problems = true, ---@type boolean&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;directory&lt;/h3&gt; &#xA;&lt;p&gt;Where to store &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt; data&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type string&#xA;directory = vim.fn.stdpath(&#34;data&#34;) .. &#34;/leetcode/&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;logging&lt;/h3&gt; &#xA;&lt;p&gt;Whether to log &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt; status notifications&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type boolean&#xA;logging = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;hooks&lt;/h3&gt; &#xA;&lt;p&gt;List of functions that get executed on specified event&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;hooks = {&#xA;    ---@type fun()[]&#xA;    LeetEnter = {},&#xA;&#xA;    ---@type fun(question: { lang: string })[]&#xA;    LeetQuestionNew = {},&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;image support&lt;/h3&gt; &#xA;&lt;p&gt;Whether to render question description images using &lt;a href=&#34;https://github.com/3rd/image.nvim&#34;&gt;image.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type boolean&#xA;image_support = false, -- setting this to `true` will disable question description wrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìã Commands&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;Leet&lt;/code&gt; opens menu dashboard&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;menu&lt;/code&gt; same as &lt;code&gt;Leet&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;console&lt;/code&gt; opens console pop-up for currently opened question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;info&lt;/code&gt; opens a pop-up containing information about the currently opened question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;tabs&lt;/code&gt; opens a picker with all currently opened question tabs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;lang&lt;/code&gt; opens a picker to change the language of the current question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;run&lt;/code&gt; run currently opened question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;test&lt;/code&gt; same as &lt;code&gt;Leet run&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;submit&lt;/code&gt; submit currently opened question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;random&lt;/code&gt; opens a random question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;daily&lt;/code&gt; opens the question of today&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#leet-list&#34;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; opens a problemlist picker&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;desc&lt;/code&gt; toggle question description&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;toggle&lt;/code&gt; same as &lt;code&gt;Leet desc&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;stats&lt;/code&gt; toggle description stats visibility&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;update&lt;/code&gt; opens a prompt to enter a new cookie&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;delete&lt;/code&gt; sign-out&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;update&lt;/code&gt; updates cache&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;code&gt;Leet list&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Can take optional arguments. To stack argument values separate them by a &lt;code&gt;,&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Leet list status=&amp;lt;status&amp;gt; difficulty=&amp;lt;difficulty&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;p&gt;This plugin is meant to be used within a &lt;strong&gt;fresh&lt;/strong&gt; &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; instance. Meaning that to launch &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt; you &lt;strong&gt;have&lt;/strong&gt; to pass &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#arg&#34;&gt;&lt;code&gt;arg&lt;/code&gt;&lt;/a&gt; as the &lt;em&gt;first and &lt;strong&gt;only&lt;/strong&gt;&lt;/em&gt; &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; argument&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nvim leetcode.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Switching between questions&lt;/h3&gt; &#xA;&lt;p&gt;To switch between questions, use &lt;code&gt;Leet tabs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sign In&lt;/h3&gt; &#xA;&lt;p&gt;It is &lt;strong&gt;required&lt;/strong&gt; to be &lt;strong&gt;signed-in&lt;/strong&gt; to use &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kawre/leetcode.nvim/assets/69250723/b7be8b95-5e2c-4153-8845-4ad3abeda5c3&#34;&gt;https://github.com/kawre/leetcode.nvim/assets/69250723/b7be8b95-5e2c-4153-8845-4ad3abeda5c3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üç¥ Recipes&lt;/h2&gt; &#xA;&lt;h3&gt;lazy loading&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;proper lazy loading with &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local leet_arg = &#34;leetcode.nvim&#34;&#xA;&#xA;return {&#xA;    &#34;kawre/leetcode.nvim&#34;,&#xA;    ...&#xA;    lazy = leet_arg ~= vim.fn.argv()[1],&#xA;    opts = {&#xA;        arg = leet_arg,&#xA;    },&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚úÖ Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;[x] CN version&lt;/li&gt; &#xA; &lt;li&gt;[x] Statistics menu page&lt;/li&gt; &#xA; &lt;li&gt;[ ] Docs&lt;/li&gt; &#xA; &lt;li&gt;[x] Hints pop-up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üôå Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Dhanus3133/Leetbuddy.nvim&#34;&gt;Leetbuddy.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/goolord/alpha-nvim&#34;&gt;alpha-nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>antosha417/nvim-lsp-file-operations</title>
    <updated>2023-12-09T01:34:56Z</updated>
    <id>tag:github.com,2023-12-09:/antosha417/nvim-lsp-file-operations</id>
    <link href="https://github.com/antosha417/nvim-lsp-file-operations" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim plugin that adds support for file operations using built-in LSP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-lsp-file-operations&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;nvim-lsp-file-operations&lt;/code&gt; is a Neovim plugin that adds support for file operations using built-in &lt;a href=&#34;https://neovim.io/doc/user/lsp.html&#34;&gt;LSP support&lt;/a&gt;. This plugin works by subscribing to events emitted by &lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua&#34;&gt;nvim-tree&lt;/a&gt; and &lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;neo-tree&lt;/a&gt;. But other integrations are possible.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_willRenameFiles&#34;&gt;workspace/WillRename&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;WillRename requests supported in couple lsp-servers and allows to automagically apply some refactorings while you moving files around. Currently tested with &lt;a href=&#34;https://scalameta.org/metals/&#34;&gt;metals&lt;/a&gt;, &lt;a href=&#34;https://rust-analyzer.github.io/&#34;&gt;rust-analyzer&lt;/a&gt; and &lt;a href=&#34;https://github.com/typescript-language-server/typescript-language-server&#34;&gt;typescript-language-server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/14187674/211327507-39f21a74-0a43-43f0-ba3e-91109125286c.mp4&#34;&gt;https://user-images.githubusercontent.com/14187674/211327507-39f21a74-0a43-43f0-ba3e-91109125286c.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you have usecases for any other operations please open an issue.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Using &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h4&gt;For Nvim-tree Users&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;antosha417/nvim-lsp-file-operations&#39;,&#xA;  requires = {&#xA;    &#34;nvim-lua/plenary.nvim&#34;,&#xA;    &#34;nvim-tree/nvim-tree.lua&#34;,&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For Neo-tree Users&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;antosha417/nvim-lsp-file-operations&#39;,&#xA;  requires = {&#xA;    &#34;nvim-lua/plenary.nvim&#34;,&#xA;    &#34;nvim-neo-tree/neo-tree.nvim&#34;,&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Note that the config function will let you skip the setup step.&lt;/p&gt; &#xA;&lt;h4&gt;For Nvim-tree Users&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return {&#xA;  {&#xA;    &#34;antosha417/nvim-lsp-file-operations&#34;,&#xA;    dependencies = {&#xA;      &#34;nvim-lua/plenary.nvim&#34;,&#xA;      &#34;nvim-tree/nvim-tree.lua&#34;,&#xA;    },&#xA;    config = function()&#xA;      require(&#34;lsp-file-operations&#34;).setup()&#xA;    end,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;For Neo-tree Users&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return {&#xA;  {&#xA;    &#34;antosha417/nvim-lsp-file-operations&#34;,&#xA;    dependencies = {&#xA;      &#34;nvim-lua/plenary.nvim&#34;,&#xA;      &#34;nvim-neo-tree/neo-tree.nvim&#34;,&#xA;    },&#xA;    config = function()&#xA;      require(&#34;lsp-file-operations&#34;).setup()&#xA;    end,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that the order that the plugins load in is important, neo-tree must load before nvim-lsp-file-operations for it to work, so nvim-lsp-file-operations depends on neo-tree and not the other way around.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lsp-file-operations&#34;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This is equivalent to:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lsp-file-operations&#34;).setup {&#xA;  -- used to see debug logs in file `vim.fn.stdpath(&#34;cache&#34;) .. lsp-file-operations.log`&#xA;  debug = false,&#xA;  -- how long to wait (in milliseconds) for file rename information before cancelling&#xA;  timeout_ms = 10000,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;PRs are always welcome.&lt;/p&gt;</summary>
  </entry>
</feed>