<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-05T01:36:30Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ziontee113/icon-picker.nvim</title>
    <updated>2024-01-05T01:36:30Z</updated>
    <id>tag:github.com,2024-01-05:/ziontee113/icon-picker.nvim</id>
    <link href="https://github.com/ziontee113/icon-picker.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is a Neovim plugin that helps you pick Nerd Font Icons, Symbols &amp; Emojis&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;icon-picker.nvim&lt;/h1&gt; &#xA;&lt;p&gt;icon-picker.nvim is a Neovim plugin that helps you pick ùë®ùïÉùöª Font Characters, Symbols Œ£, Nerd Font Icons Óò´ &amp;amp; Emojis ‚ú®&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/102876811/174574267-d38861f2-cd11-416f-81b8-93ff115fe6b5.mp4&#34;&gt;https://user-images.githubusercontent.com/102876811/174574267-d38861f2-cd11-416f-81b8-93ff115fe6b5.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/102876811/174574279-37d4dc95-3fa3-41e2-881c-4c89860bbe22.mp4&#34;&gt;https://user-images.githubusercontent.com/102876811/174574279-37d4dc95-3fa3-41e2-881c-4c89860bbe22.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/102876811/174749829-de1f8ab6-bd5a-4c5e-87db-78c3b5c96d49.png&#34; alt=&#34;Pick Symbol Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/102876811/174749842-4802bd94-d517-4e53-942a-53351646f5cc.png&#34; alt=&#34;Alt Font Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h4&gt;This plugin utilizes &lt;code&gt;vim.ui.select()&lt;/code&gt;, so you&#39;re gonna need something like &lt;a href=&#34;https://github.com/stevearc/dressing.nvim&#34;&gt;dressing.nvim&lt;/a&gt; and a fuzzy finder like &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt; or &lt;a href=&#34;https://github.com/ibhagwan/fzf-lua&#34;&gt;fzf-lua&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;For Lazy&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;ziontee113/icon-picker.nvim&#34;,&#xA;    config = function()&#xA;        require(&#34;icon-picker&#34;).setup({ disable_legacy_commands = true })&#xA;&#xA;        local opts = { noremap = true, silent = true }&#xA;&#xA;        vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;i&#34;, &#34;&amp;lt;cmd&amp;gt;IconPickerNormal&amp;lt;cr&amp;gt;&#34;, opts)&#xA;        vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;y&#34;, &#34;&amp;lt;cmd&amp;gt;IconPickerYank&amp;lt;cr&amp;gt;&#34;, opts) --&amp;gt; Yank the selected icon into register&#xA;        vim.keymap.set(&#34;i&#34;, &#34;&amp;lt;C-i&amp;gt;&#34;, &#34;&amp;lt;cmd&amp;gt;IconPickerInsert&amp;lt;cr&amp;gt;&#34;, opts)&#xA;    end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Packer&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use &#34;stevearc/dressing.nvim&#34;&#xA;use({&#xA;  &#34;ziontee113/icon-picker.nvim&#34;,&#xA;  config = function()&#xA;    require(&#34;icon-picker&#34;).setup({&#xA;      disable_legacy_commands = true&#xA;    })&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For Vim Plug&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Plug &#39;stevearc/dressing.nvim&#39;&#xA;Plug &#39;ziontee113/icon-picker.nvim&#39;&#xA;&#xA;lua &amp;lt;&amp;lt; EOF&#xA;require(&#34;icon-picker&#34;).setup({ disable_legacy_commands = true })&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h3&gt;Sample Config (new):&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local opts = { noremap = true, silent = true }&#xA;&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;i&#34;, &#34;&amp;lt;cmd&amp;gt;IconPickerNormal&amp;lt;cr&amp;gt;&#34;, opts)&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;y&#34;, &#34;&amp;lt;cmd&amp;gt;IconPickerYank&amp;lt;cr&amp;gt;&#34;, opts) --&amp;gt; Yank the selected icon into register&#xA;vim.keymap.set(&#34;i&#34;, &#34;&amp;lt;C-i&amp;gt;&#34;, &#34;&amp;lt;cmd&amp;gt;IconPickerInsert&amp;lt;cr&amp;gt;&#34;, opts)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Available Commands:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;IconPickerNormal&lt;/code&gt; - Pick Icon and insert it to the buffer (normal mode)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IconPickerInsert&lt;/code&gt; - Pick Icon and insert it to the buffer (insert mode)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;IconPickerYank&lt;/code&gt; - Pick Icon and yank it to register (will not input to buffer)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can cherry pick the Icon source to your preference using arguments, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:IconPickerInsert alt_font symbols&#xA;:IconPickerInsert nerd_font emoji&#xA;:IconPickerInsert nerd_font&#xA;:IconPickerInsert emoji nerd_font alt_font symbols&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Available arguments for the &lt;code&gt;IconPicker&lt;/code&gt; commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;alt_font&lt;/li&gt; &#xA; &lt;li&gt;emoji&lt;/li&gt; &#xA; &lt;li&gt;html_colors&lt;/li&gt; &#xA; &lt;li&gt;nerd_font&lt;/li&gt; &#xA; &lt;li&gt;nerd_font_v3 (if you&#39;re using Nerd Fonts version 3 and above)&lt;/li&gt; &#xA; &lt;li&gt;symbols&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I personally use &lt;code&gt;&amp;lt;C-i&amp;gt;&lt;/code&gt; for &lt;code&gt;IconPickerInsert&lt;/code&gt;. If you also want to map &lt;code&gt;&amp;lt;C-I&amp;gt;&lt;/code&gt; and can&#39;t do it, you can check out my quick guide to solve that on YouTube: &lt;a href=&#34;https://www.youtube.com/watch?v=lHBD6pdJ-Ng&#34;&gt;Enable Special Keyboard Combinations in Alacritty / Kitty for Neovim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Sample Config (legacy):&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local opts = { noremap = true, silent = true }&#xA;&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;i&#34;, &#34;&amp;lt;cmd&amp;gt;PickEverything&amp;lt;cr&amp;gt;&#34;, opts)&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;&amp;lt;Leader&amp;gt;y&#34;, &#34;&amp;lt;cmd&amp;gt;PickEverythingYank&amp;lt;cr&amp;gt;&#34;, opts)&#xA;vim.keymap.set(&#34;i&#34;, &#34;&amp;lt;C-i&amp;gt;&#34;, &#34;&amp;lt;cmd&amp;gt;PickEverythingInsert&amp;lt;cr&amp;gt;&#34;, opts)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h4&gt;Available Commands:&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Normal Mode: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickEverything&lt;/code&gt; (Nerd Font Icons &amp;amp; Emojis &amp;amp; Alt Font &amp;amp; Symbols)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickIcons&lt;/code&gt; (Nerd Font Icons &amp;amp; Emojis)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickEmoji&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickNerd&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickNerdV3&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickSymbols&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickAltFont&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickAltFontAndSymbols&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Normal Mode (yank): These commands will Yank the selected icon into register &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickEverythingYank&lt;/code&gt; (Nerd Font Icons &amp;amp; Emojis &amp;amp; Alt Font &amp;amp; Symbols)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickIconsYank&lt;/code&gt; (Nerd Font Icons &amp;amp; Emojis)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickEmojiYank&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickNerdYank&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickNerdV3Yank&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickSymbolsYank&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickAltFontYank&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickAltFontAndSymbolsYank&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Insert Mode: &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickEverythingInsert&lt;/code&gt; (Nerd Font Icons &amp;amp; Emojis &amp;amp; Alt Font &amp;amp; Symbols)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickIconsInsert&lt;/code&gt; (Nerd Font Icons &amp;amp; Emojis)&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickEmojiInsert&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickNerdInsert&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickNerdV3Insert&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickSymbolsInsert&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickAltFontInsert&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;code&gt;PickAltFontAndSymbolsInsert&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;You can use &lt;code&gt;:help &lt;/code&gt; to see the details for any of those commands. Example: &lt;code&gt;:help PickAltFont&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Todo:&lt;/h2&gt; &#xA;&lt;p&gt;Fine tune the Insert Mode experience.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;If you run into issues or come up with an awesome idea, please feel free to open an issue or PR.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks To&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/mcauley-penney&#34;&gt;@mcauley-penney&lt;/a&gt; for the amazing &lt;a href=&#34;https://github.com/ziontee113/icon-picker.nvim/pull/3&#34;&gt;#3&lt;/a&gt; &lt;span&gt;üî•&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/logan-connolly&#34;&gt;@logan-connolly&lt;/a&gt; for adding Yank commands &lt;a href=&#34;https://github.com/ziontee113/icon-picker.nvim/pull/7&#34;&gt;#7&lt;/a&gt; &lt;span&gt;üëç&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/KaminoU&#34;&gt;@KaminoU&lt;/a&gt; for adding HTML Color Picker &lt;a href=&#34;https://github.com/ziontee113/icon-picker.nvim/pull/14&#34;&gt;#14&lt;/a&gt; &lt;span&gt;üëç&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/Snxwman&#34;&gt;@Snxwman&lt;/a&gt; for adding Nerd Fonts V3 icon list generator &lt;a href=&#34;https://github.com/ziontee113/icon-picker.nvim/pull/21&#34;&gt;#21&lt;/a&gt; &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is licensed under MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/ziontee113/icon-picker.nvim/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>HakonHarnes/img-clip.nvim</title>
    <updated>2024-01-05T01:36:30Z</updated>
    <id>tag:github.com,2024-01-05:/HakonHarnes/img-clip.nvim</id>
    <link href="https://github.com/HakonHarnes/img-clip.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Effortlessly embed images into any markup language, like LaTeX, Markdown or Typst.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üì∏ img-clip.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Effortlessly embed images into any markup language, like LaTeX, Markdown or Typst.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/HakonHarnes/img-clip.nvim/assets/89907156/db364ae2-f966-43d2-8f15-34654e03e0f4&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Paste images &lt;strong&gt;directly&lt;/strong&gt; from the system &lt;strong&gt;clipboard&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Drag and drop&lt;/strong&gt; images from your web browser or file explorer to embed them.&lt;/li&gt; &#xA; &lt;li&gt;Embed images as &lt;strong&gt;files&lt;/strong&gt;, &lt;strong&gt;URLs&lt;/strong&gt;, or directly as &lt;strong&gt;Base64&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Configurable templates&lt;/strong&gt; with cursor positioning and figure labels.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Default templates&lt;/strong&gt; for widely-used markup languages like LaTeX, Markdown and Typst.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-compatibility&lt;/strong&gt; with Linux, Windows, and MacOS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See these features in action in the &lt;a href=&#34;https://raw.githubusercontent.com/HakonHarnes/img-clip.nvim/main/#demonstration&#34;&gt;demonstration section&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linux:&lt;/strong&gt; &lt;a href=&#34;https://github.com/astrand/xclip&#34;&gt;xclip&lt;/a&gt; (x11) or &lt;a href=&#34;https://github.com/bugaevc/wl-clipboard&#34;&gt;wl-clipboard&lt;/a&gt; (wayland).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MacOS:&lt;/strong&gt; &lt;a href=&#34;https://github.com/jcsalterego/pngpaste&#34;&gt;pngpaste&lt;/a&gt; (optional, but recommended).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Windows:&lt;/strong&gt; No requirements.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‚ö†Ô∏è Run &lt;code&gt;:checkhealth img-clip&lt;/code&gt; after installation to ensure requirements are satisfied.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return {&#xA;  &#34;HakonHarnes/img-clip.nvim&#34;,&#xA;  event = &#34;BufEnter&#34;,&#xA;  opts = {&#xA;    -- add options here&#xA;    -- or leave it empty to use the default settings&#xA;  },&#xA;  keys = {&#xA;    -- suggested keymap&#xA;    { &#34;&amp;lt;leader&amp;gt;p&#34;, &#34;&amp;lt;cmd&amp;gt;PasteImage&amp;lt;cr&amp;gt;&#34;, desc = &#34;Paste clipboard image&#34; },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;The plugin comes with the following commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;PasteImage&lt;/code&gt; Inserts the image from the clipboard into the document.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Consider binding &lt;code&gt;PasteImage&lt;/code&gt; to something like &lt;code&gt;&amp;lt;leader&amp;gt;p&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;p&gt;You can also use the Lua equivalent, which allows you to override your configuration by passing the options directly to the function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;img-clip&#34;).pasteImage({ use_absolute_path = false, file_name = &#34;image.png&#34; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;The plugin comes with the following defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  default = {&#xA;    debug = false, -- enable debug mode&#xA;    dir_path = &#34;assets&#34;, -- directory path to save images to, can be relative (cwd or current file) or absolute&#xA;    file_name = &#34;%Y-%m-%d-%H-%M-%S&#34;, -- file name format (see lua.org/pil/22.1.html)&#xA;    url_encode_path = false, -- encode spaces and special characters in file path&#xA;    use_absolute_path = false, -- expands dir_path to an absolute path&#xA;    relative_to_current_file = false, -- make dir_path relative to current file rather than the cwd&#xA;    prompt_for_file_name = true, -- ask user for file name before saving, leave empty to use default&#xA;    show_dir_path_in_prompt = false, -- show dir_path in prompt when prompting for file name&#xA;    use_cursor_in_template = true, -- jump to cursor position in template after pasting&#xA;    insert_mode_after_paste = true, -- enter insert mode after pasting the markup code&#xA;    embed_image_as_base64 = false, -- paste image as base64 string instead of saving to file&#xA;    max_base64_size = 10, -- max size of base64 string in KB&#xA;    template = &#34;$FILE_PATH&#34;, -- default template&#xA;&#xA;    drag_and_drop = {&#xA;      enabled = true, -- enable drag and drop mode&#xA;      insert_mode = false, -- enable drag and drop in insert mode&#xA;      copy_images = false, -- copy images instead of using the original file&#xA;      download_images = true, -- download images and save them to dir_path instead of using the URL&#xA;    },&#xA;  },&#xA;&#xA;  -- file-type specific options&#xA;  -- any options that are passed here will override the default config&#xA;  -- for instance, setting use_absolute_path = true for markdown will&#xA;  -- only enable that for this particular file type&#xA;  -- the key (e.g. &#34;markdown&#34;) is the filetype (output of &#34;set filetype?&#34;)&#xA;&#xA;  markdown = {&#xA;    url_encode_path = true,&#xA;    template = &#34;![$CURSOR]($FILE_PATH)&#34;,&#xA;&#xA;    drag_and_drop = {&#xA;      download_images = false,&#xA;    },&#xA;  },&#xA;&#xA;  html = {&#xA;    template = &#39;&amp;lt;img src=&#34;$FILE_PATH&#34; alt=&#34;$CURSOR&#34;&amp;gt;&#39;,&#xA;  },&#xA;&#xA;  tex = {&#xA;    template = [[&#xA;\begin{figure}[h]&#xA;  \centering&#xA;  \includegraphics[width=0.8\textwidth]{$FILE_PATH}&#xA;  \caption{$CURSOR}&#xA;  \label{fig:$LABEL}&#xA;\end{figure}&#xA;    ]],&#xA;  },&#xA;&#xA;  typst = {&#xA;    template = [[&#xA;#figure(&#xA;  image(&#34;$FILE_PATH&#34;, width: 80%),&#xA;  caption: [$CURSOR],&#xA;) &amp;lt;fig-$LABEL&amp;gt;&#xA;    ]],&#xA;  },&#xA;&#xA;  rst = {&#xA;    template = [[&#xA;.. image:: $FILE_PATH&#xA;   :alt: $CURSOR&#xA;   :width: 80%&#xA;    ]],&#xA;  },&#xA;&#xA;  asciidoc = {&#xA;    template = &#39;image::$FILE_PATH[width=80%, alt=&#34;$CURSOR&#34;]&#39;,&#xA;  },&#xA;&#xA;  org = {&#xA;    template = [=[&#xA;#+BEGIN_FIGURE&#xA;[[file:$FILE_PATH]]&#xA;#+CAPTION: $CURSOR&#xA;#+NAME: fig:$LABEL&#xA;#+END_FIGURE&#xA;    ]=],&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;p&gt;The options can be configured as either static values (e.g. &#34;assets&#34;), or by dynamically generating them through functions. For example, to set the &lt;code&gt;dir_path&lt;/code&gt; to match the name of the currently opened file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;dir_path = function()&#xA;  return vim.fn.expand(&#34;%:t:r&#34;)&#xA;end,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;File types&lt;/h3&gt; &#xA;&lt;p&gt;The options can also be scoped to specific file types. In the default configuration the templates for the &lt;code&gt;markdown&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;tex&lt;/code&gt; ..., files override the template defined in the global settings. Any option can be added under the specific file type, not just the template. For instance, if you only want to use absolute file paths for LaTeX, then:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;tex = {&#xA;  use_absolute_path = true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;File type-specific options are determined by the &lt;em&gt;file type&lt;/em&gt; (see &lt;code&gt;:help filetype&lt;/code&gt;). You can override settings for any file type by specifying it as the key in your configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;&amp;lt;filetype&amp;gt; = { -- obtained from &#34;set filetype?&#34;&#xA;  -- add opts here&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Templates&lt;/h3&gt; &#xA;&lt;p&gt;Templates in the plugin use placeholders that are dynamically replaced with the correct values at runtime. For available placeholders, see the following table and the &lt;a href=&#34;https://raw.githubusercontent.com/HakonHarnes/img-clip.nvim/main/#demonstration&#34;&gt;demonstration&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Placeholder&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;$FILE_NAME&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File name, including its extension.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;image.png&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;$FILE_NAME_NO_EXT&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File name, excluding its extension.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;image&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;$FILE_PATH&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;File path.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;/path/to/image.png&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;$LABEL&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Figure label, generated from the file name, converted to lower-case and with spaces replaced by dashes.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;the-image&lt;/code&gt; (from &lt;code&gt;the image.png&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;$CURSOR&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Indicates where the cursor will be placed after insertion if &lt;code&gt;use_cursor_in_template&lt;/code&gt; is true.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Drag and drop&lt;/h2&gt; &#xA;&lt;p&gt;The drag and drop feature enables users to drag images from the web browser or file explorer into the terminal to automatically embed them, in &lt;strong&gt;normal mode&lt;/strong&gt;. For this to work correctly, the following is required by the terminal emulator:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The terminal emulator must paste the file path or URL to the image when it is dropped into the terminal.&lt;/li&gt; &#xA; &lt;li&gt;The text must be inserted in &lt;a href=&#34;https://cirw.in/blog/bracketed-paste&#34;&gt;bracketed paste mode&lt;/a&gt;, which allows Neovim to differentiate pasted text from typed-in text. This is required because the drag and drop feature is implemented by overriding &lt;code&gt;vim.paste()&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;A list of terminal emulators and their capabilities is given below.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th rowspan=&#34;2&#34; style=&#34;text-align:center;&#34;&gt;Terminal&lt;/th&gt; &#xA;   &lt;th colspan=&#34;2&#34; style=&#34;text-align:center;&#34;&gt;X11&lt;/th&gt; &#xA;   &lt;th colspan=&#34;2&#34; style=&#34;text-align:center;&#34;&gt;Wayland&lt;/th&gt; &#xA;   &lt;th colspan=&#34;2&#34; style=&#34;text-align:center;&#34;&gt;MacOS&lt;/th&gt; &#xA;   &lt;th colspan=&#34;2&#34; style=&#34;text-align:center;&#34;&gt;Windows&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th style=&#34;text-align:center;&#34;&gt;File&lt;/th&gt; &#xA;   &lt;th style=&#34;text-align:center;&#34;&gt;URL&lt;/th&gt; &#xA;   &lt;th style=&#34;text-align:center;&#34;&gt;File&lt;/th&gt; &#xA;   &lt;th style=&#34;text-align:center;&#34;&gt;URL&lt;/th&gt; &#xA;   &lt;th style=&#34;text-align:center;&#34;&gt;File&lt;/th&gt; &#xA;   &lt;th style=&#34;text-align:center;&#34;&gt;URL&lt;/th&gt; &#xA;   &lt;th style=&#34;text-align:center;&#34;&gt;File&lt;/th&gt; &#xA;   &lt;th style=&#34;text-align:center;&#34;&gt;URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/kovidgoyal/kitty&#34;&gt;Kitty&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/goblinfactory/konsole&#34;&gt;Konsole&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùìÔ∏è&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùìÔ∏è&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;Alacritty&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/wez/wezterm&#34;&gt;Wezterm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùìÔ∏è&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùìÔ∏è&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codeberg.org/dnkl/foot&#34;&gt;Foot&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Terminal_(macOS)&#34;&gt;Terminal.app&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://iterm2.com/&#34;&gt;iTerm.app&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vercel/hyper&#34;&gt;Hyper&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùìÔ∏è&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùìÔ∏è&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Xterm&#34;&gt;XTerm&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://apps.microsoft.com/detail/9N0DX20HK701&#34;&gt;Windows Terminal&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚úÖ&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/PowerShell&#34;&gt;PowerShell&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cmderdev/cmder&#34;&gt;Cmder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Maximus5/ConEmu&#34;&gt;ConEmu&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ûñ&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td style=&#34;text-align:center;&#34;&gt;‚ùå&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üí° If you&#39;re having issues on Windows, try changing the default shell to &lt;code&gt;powershell&lt;/code&gt; or &lt;code&gt;pwsh&lt;/code&gt;. See &lt;code&gt;:h shell-powershell&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‚ö†Ô∏è MacOS URLs only work in Safari.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Demonstration&lt;/h2&gt; &#xA;&lt;h3&gt;Drag and drop&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/HakonHarnes/img-clip.nvim/assets/89907156/7ca4543c-e68e-4ec6-b723-46c959833e6e&#34; alt=&#34;drag-and-drop&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Paste from clipboard&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/HakonHarnes/img-clip.nvim/assets/89907156/6ecbdbf8-b382-434b-ad92-a09776309864&#34; alt=&#34;clipboard-screenshot&#34;&gt; &lt;img src=&#34;https://github.com/HakonHarnes/img-clip.nvim/assets/89907156/05c3f0e3-3d73-45d6-a2ad-d8f43a298943&#34; alt=&#34;clipboard-copy&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Templates&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/HakonHarnes/img-clip.nvim/assets/89907156/af10a690-cea9-4776-88aa-1f793c1552e6&#34; alt=&#34;template&#34;&gt; &lt;img src=&#34;https://github.com/HakonHarnes/img-clip.nvim/assets/89907156/fd996028-adc0-4706-9340-63ba33f6e252&#34; alt=&#34;template-image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Base64&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/HakonHarnes/img-clip.nvim/assets/89907156/504fc4bd-bb91-456c-b580-2ec8c05e2aea&#34; alt=&#34;base64-encoding&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Root1527/personal</title>
    <updated>2024-01-05T01:36:30Z</updated>
    <id>tag:github.com,2024-01-05:/Root1527/personal</id>
    <link href="https://github.com/Root1527/personal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;hi&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
</feed>