<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-23T01:35:09Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pragtical/pragtical</title>
    <updated>2024-08-23T01:35:09Z</updated>
    <id>tag:github.com,2024-08-23:/pragtical/pragtical</id>
    <link href="https://github.com/pragtical/pragtical" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The practical and pragmatic code editor.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pragtical&lt;/h1&gt; &#xA;&lt;p&gt;The practical and pragmatic code editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pragtical.dev&#34;&gt;website&lt;/a&gt; | &lt;a href=&#34;https://pragtical.dev/docs/intro&#34;&gt;documentation&lt;/a&gt; | &lt;a href=&#34;https://github.com/pragtical/pragtical/releases&#34;&gt;download&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pragtical/pragtical/actions/workflows/rolling.yml&#34;&gt;&lt;img src=&#34;https://github.com/pragtical/pragtical/actions/workflows/rolling.yml/badge.svg?sanitize=true&#34; alt=&#34;Build Rolling&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://pragtical.github.io/assets/img/editor.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pragtical is a code editor which was forked from &lt;a href=&#34;https://github.com/lite-xl/lite-xl&#34;&gt;Lite XL&lt;/a&gt; (also a fork of &lt;a href=&#34;https://github.com/rxi/lite&#34;&gt;lite&lt;/a&gt;) written mostly in &lt;strong&gt;Lua&lt;/strong&gt; with a focus on being practical rather than minimalist.&lt;/p&gt; &#xA;&lt;p&gt;The name of the editor is a mixture of the words &lt;code&gt;pragmatic&lt;/code&gt; and &lt;code&gt;practical&lt;/code&gt;, two words that properly define our development approach as follows:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Government through practice and action rather than theory and speculation.&lt;/li&gt; &#xA; &lt;li&gt;Willingness to see the context of actual use cases and not only idealistic ideals.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As a result &lt;a href=&#34;https://github.com/pragtical/pragtical/issues/6#issuecomment-1581650875&#34;&gt;we believe&lt;/a&gt; that new features introduced through pull requests should be evaluated by taking a practical approach, without going into lengthy idealistic discussions that slow down progress, merging code when logical.&lt;/p&gt; &#xA;&lt;h2&gt;Goals&lt;/h2&gt; &#xA;&lt;p&gt;We differentiate from our ancestors by striving to make Pragtical an editor that has amplified the set of features, to give you and us a better out of the box experience, while keeping an eye on performance and ease of extensibility. Also, we are simplifying the release process by reducing the amount of builds to choose from and trying a release often approach.&lt;/p&gt; &#xA;&lt;h3&gt;Performance&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;JIT&lt;/strong&gt; - Pragtical takes a LuaJIT first approach, meaning that our official builds use LuaJIT instead of PUC Lua for the performance benefits that come with it. Also having a LuaJIT first approach gives us FFI for free which allows easy interfacing with native C libraries for easier plugin development. LuaJIT has proven to be a mature Lua implementation that will provide a stable development ecosystem for the foreseeable future.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Threading&lt;/strong&gt; - a supported feature inside the core on components where it is practical to use, like file searching and replacing, where performance gains are evident.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;More Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Widgets&lt;/strong&gt; - more tightly integrated as part of the core for easier gui development and reusability, also ensuring that plugin developers can with more ease develop user interfaces when in need.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Settings UI&lt;/strong&gt; - if you are not using a terminal editor like n/vim it means you are looking for a more point and click approach which is why we include a graphical interface to adjust your preferences out of the box. But don&#39;t worry, configuring the editor through Lua will keep working because it is also pragtical ðŸ˜‰&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Encoding&lt;/strong&gt; - while UTF-8 has overtaken as the preferred encoding for text documents for its convenience, we can sometimes encounter a document in another encoding. Loading and saving documents with different encodings will be supported for when the need arrives, a feature that is also commonly found in other editors because it is pragtical.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;IPC&lt;/strong&gt; - shared memory functionality is part of the core and IPC plugin shipped by default to allow opening files and tab dragging between currently opened instances.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pragtical/pragtical/releases&#34;&gt;Get Pragtical&lt;/a&gt;&lt;/strong&gt; â€” Download Pre-built releases for Windows, Linux and Mac OS.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pragtical/plugins&#34;&gt;Get Plugins&lt;/a&gt;&lt;/strong&gt; â€” Add additional functionality, adapted for Pragtical.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/pragtical/colors&#34;&gt;Get Color Themes&lt;/a&gt;&lt;/strong&gt; â€” Additional color themes (bundled with all releases of Pragtical by default).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The changes and differences between Pragtical and rxi/lite are listed in the &lt;a href=&#34;https://github.com/pragtical/pragtical/raw/master/changelog.md&#34;&gt;changelog&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://pragtical.dev&#34;&gt;website&lt;/a&gt; for the user and developer documentation, including more detailed &lt;a href=&#34;https://pragtical.dev/docs/setup/building&#34;&gt;build&lt;/a&gt; instructions. A quick build guide is described below.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Build Guide&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/pragtical/pragtical&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Setup and compile the project&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;meson setup --wrap-mode=forcefallback -Dportable=true build&#xA;meson compile -C build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] We set &lt;code&gt;--wrap-mode&lt;/code&gt; to forcefallback to download and build all the dependencies which will take longer. If you have all dependencies installed on your system you can skip this flag. Also notice we set the &lt;code&gt;portable&lt;/code&gt; flag to true, this way the install process will generate a directory structure that is easily relocatable.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Install and profit!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;meson install -C build --destdir ../pragtical&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will now see a new directory called &lt;code&gt;pragtical&lt;/code&gt; that will contain the executable and all the necessary files to run the editor. Feel free to move or rename this directory however you wish.&lt;/p&gt; &#xA;&lt;p&gt;For more detailed instructions visit: &lt;a href=&#34;https://pragtical.dev/docs/setup/building&#34;&gt;https://pragtical.dev/docs/setup/building&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to contribute something that would be convenient and &#34;Pragtical&#34; to include on the core, you are welcome to open a pull request and contribute.&lt;/p&gt; &#xA;&lt;p&gt;Any additional functionality that can be added through a plugin should be done as a plugin, after which a pull request to the &lt;a href=&#34;https://github.com/pragtical/plugins&#34;&gt;plugins repository&lt;/a&gt; can be made.&lt;/p&gt; &#xA;&lt;p&gt;Pull requests to improve or modify the editor itself are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Licenses&lt;/h2&gt; &#xA;&lt;p&gt;This project is free software; you can redistribute it and/or modify it under the terms of the MIT license. See &lt;a href=&#34;https://raw.githubusercontent.com/pragtical/pragtical/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/pragtical/pragtical/master/licenses/licenses.md&#34;&gt;licenses&lt;/a&gt; directory for details on licenses used by the required dependencies.&lt;/p&gt;</summary>
  </entry>
</feed>