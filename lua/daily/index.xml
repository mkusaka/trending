<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-03T01:35:04Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>folke/snacks.nvim</title>
    <updated>2025-02-03T01:35:04Z</updated>
    <id>tag:github.com,2025-02-03:/folke/snacks.nvim</id>
    <link href="https://github.com/folke/snacks.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üçø A collection of QoL plugins for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üçø &lt;code&gt;snacks.nvim&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;A collection of small QoL plugins for Neovim.&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;!-- toc:start --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Snack&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Setup&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/animate.md&#34;&gt;animate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Efficient animations including over 45 easing functions &lt;em&gt;(library)&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/bigfile.md&#34;&gt;bigfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deal with big files&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/bufdelete.md&#34;&gt;bufdelete&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Delete buffers without disrupting window layout&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/dashboard.md&#34;&gt;dashboard&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Beautiful declarative dashboards&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/debug.md&#34;&gt;debug&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pretty inspect &amp;amp; backtraces for debugging&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/dim.md&#34;&gt;dim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus on the active scope by dimming the rest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/explorer.md&#34;&gt;explorer&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A file explorer (picker in disguise)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/git.md&#34;&gt;git&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Git utilities&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/gitbrowse.md&#34;&gt;gitbrowse&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open the current file, branch, commit, or repo in a browser (e.g. GitHub, GitLab, Bitbucket)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/indent.md&#34;&gt;indent&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Indent guides and scopes&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/input.md&#34;&gt;input&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Better &lt;code&gt;vim.ui.input&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/layout.md&#34;&gt;layout&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Window layouts&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/lazygit.md&#34;&gt;lazygit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open LazyGit in a float, auto-configure colorscheme and integration with Neovim&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/notifier.md&#34;&gt;notifier&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pretty &lt;code&gt;vim.notify&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/notify.md&#34;&gt;notify&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utility functions to work with Neovim&#39;s &lt;code&gt;vim.notify&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/picker.md&#34;&gt;picker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Picker for selecting items&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/profiler.md&#34;&gt;profiler&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Neovim lua profiler&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/quickfile.md&#34;&gt;quickfile&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;When doing &lt;code&gt;nvim somefile.txt&lt;/code&gt;, it will render the file as quickly as possible, before loading your plugins.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/rename.md&#34;&gt;rename&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;LSP-integrated file renaming with support for plugins like &lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;neo-tree.nvim&lt;/a&gt; and &lt;a href=&#34;https://github.com/echasnovski/mini.files&#34;&gt;mini.files&lt;/a&gt;.&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/scope.md&#34;&gt;scope&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scope detection, text objects and jumping based on treesitter or indent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/scratch.md&#34;&gt;scratch&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Scratch buffers with a persistent file&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/scroll.md&#34;&gt;scroll&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Smooth scrolling&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/statuscolumn.md&#34;&gt;statuscolumn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Pretty status column&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/terminal.md&#34;&gt;terminal&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create and toggle floating/split terminals&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/toggle.md&#34;&gt;toggle&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle keymaps integrated with which-key icons / colors&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/util.md&#34;&gt;util&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Utility functions for Snacks &lt;em&gt;(library)&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/win.md&#34;&gt;win&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Create and manage floating windows or splits&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/words.md&#34;&gt;words&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Auto-show LSP references and quickly navigate between them&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ÄºÔ∏è&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/zen.md&#34;&gt;zen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Zen mode ‚Ä¢ distraction-free coding&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- toc:end --&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Neovim&lt;/strong&gt; &amp;gt;= 0.9.4&lt;/li&gt; &#xA; &lt;li&gt;for proper icons support: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.icons&#34;&gt;mini.icons&lt;/a&gt; &lt;em&gt;(optional)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt; &lt;em&gt;(optional)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;a &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;Nerd Font&lt;/a&gt; &lt;strong&gt;&lt;em&gt;(optional)&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!important] A couple of plugins &lt;strong&gt;require&lt;/strong&gt; &lt;code&gt;snacks.nvim&lt;/code&gt; to be set-up early. Setup creates some autocmds and does not load any plugins. Check the &lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/lua/snacks/init.lua&#34;&gt;code&lt;/a&gt; to see what it does.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!caution] You need to explicitly pass options for a plugin or set &lt;code&gt;enabled = true&lt;/code&gt; to enable it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!tip] It&#39;s a good idea to run &lt;code&gt;:checkhealth snacks&lt;/code&gt; to see if everything is set up correctly.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#34;folke/snacks.nvim&#34;,&#xA;  priority = 1000,&#xA;  lazy = false,&#xA;  ---@type snacks.Config&#xA;  opts = {&#xA;    -- your configuration comes here&#xA;    -- or leave it empty to use the default settings&#xA;    -- refer to the configuration section below&#xA;    bigfile = { enabled = true },&#xA;    dashboard = { enabled = true },&#xA;    indent = { enabled = true },&#xA;    input = { enabled = true },&#xA;    picker = { enabled = true },&#xA;    notifier = { enabled = true },&#xA;    quickfile = { enabled = true },&#xA;    scroll = { enabled = true },&#xA;    statuscolumn = { enabled = true },&#xA;    words = { enabled = true },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For an in-depth setup of &lt;code&gt;snacks.nvim&lt;/code&gt; with &lt;code&gt;lazy.nvim&lt;/code&gt;, check the &lt;a href=&#34;https://github.com/folke/snacks.nvim?tab=readme-ov-file#-usage&#34;&gt;example&lt;/a&gt; below.&lt;/p&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the readme of each plugin for their specific configuration.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Default Options&lt;/summary&gt; &#xA; &lt;!-- config:start --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@class snacks.Config&#xA;---@field animate? snacks.animate.Config&#xA;---@field bigfile? snacks.bigfile.Config&#xA;---@field dashboard? snacks.dashboard.Config&#xA;---@field dim? snacks.dim.Config&#xA;---@field explorer? snacks.explorer.Config&#xA;---@field gitbrowse? snacks.gitbrowse.Config&#xA;---@field indent? snacks.indent.Config&#xA;---@field input? snacks.input.Config&#xA;---@field layout? snacks.layout.Config&#xA;---@field lazygit? snacks.lazygit.Config&#xA;---@field notifier? snacks.notifier.Config&#xA;---@field picker? snacks.picker.Config&#xA;---@field profiler? snacks.profiler.Config&#xA;---@field quickfile? snacks.quickfile.Config&#xA;---@field scope? snacks.scope.Config&#xA;---@field scratch? snacks.scratch.Config&#xA;---@field scroll? snacks.scroll.Config&#xA;---@field statuscolumn? snacks.statuscolumn.Config&#xA;---@field terminal? snacks.terminal.Config&#xA;---@field toggle? snacks.toggle.Config&#xA;---@field win? snacks.win.Config&#xA;---@field words? snacks.words.Config&#xA;---@field zen? snacks.zen.Config&#xA;---@field styles? table&amp;lt;string, snacks.win.Config&amp;gt;&#xA;{}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;!-- config:end --&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Some plugins have examples in their documentation. You can include them in your config like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  dashboard = { example = &#34;github&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to customize options for a plugin after they have been resolved, you can use the &lt;code&gt;config&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  gitbrowse = {&#xA;    config = function(opts, defaults)&#xA;      table.insert(opts.remote_patterns, { &#34;my&#34;, &#34;custom pattern&#34; })&#xA;    end&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;p&gt;See the example below for how to configure &lt;code&gt;snacks.nvim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;!-- example:start --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#34;folke/snacks.nvim&#34;,&#xA;  priority = 1000,&#xA;  lazy = false,&#xA;  ---@type snacks.Config&#xA;  opts = {&#xA;    bigfile = { enabled = true },&#xA;    dashboard = { enabled = true },&#xA;    indent = { enabled = true },&#xA;    input = { enabled = true },&#xA;    notifier = {&#xA;      enabled = true,&#xA;      timeout = 3000,&#xA;    },&#xA;    picker = { enabled = true },&#xA;    quickfile = { enabled = true },&#xA;    scroll = { enabled = true },&#xA;    statuscolumn = { enabled = true },&#xA;    words = { enabled = true },&#xA;    styles = {&#xA;      notification = {&#xA;        -- wo = { wrap = true } -- Wrap notifications&#xA;      }&#xA;    }&#xA;  },&#xA;  keys = {&#xA;    { &#34;&amp;lt;leader&amp;gt;z&#34;,  function() Snacks.zen() end, desc = &#34;Toggle Zen Mode&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;Z&#34;,  function() Snacks.zen.zoom() end, desc = &#34;Toggle Zoom&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;.&#34;,  function() Snacks.scratch() end, desc = &#34;Toggle Scratch Buffer&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;S&#34;,  function() Snacks.scratch.select() end, desc = &#34;Select Scratch Buffer&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;n&#34;,  function() Snacks.notifier.show_history() end, desc = &#34;Notification History&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;bd&#34;, function() Snacks.bufdelete() end, desc = &#34;Delete Buffer&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;cR&#34;, function() Snacks.rename.rename_file() end, desc = &#34;Rename File&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;gB&#34;, function() Snacks.gitbrowse() end, desc = &#34;Git Browse&#34;, mode = { &#34;n&#34;, &#34;v&#34; } },&#xA;    { &#34;&amp;lt;leader&amp;gt;gb&#34;, function() Snacks.git.blame_line() end, desc = &#34;Git Blame Line&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;gf&#34;, function() Snacks.lazygit.log_file() end, desc = &#34;Lazygit Current File History&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;gg&#34;, function() Snacks.lazygit() end, desc = &#34;Lazygit&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;gl&#34;, function() Snacks.lazygit.log() end, desc = &#34;Lazygit Log (cwd)&#34; },&#xA;    { &#34;&amp;lt;leader&amp;gt;un&#34;, function() Snacks.notifier.hide() end, desc = &#34;Dismiss All Notifications&#34; },&#xA;    { &#34;&amp;lt;c-/&amp;gt;&#34;,      function() Snacks.terminal() end, desc = &#34;Toggle Terminal&#34; },&#xA;    { &#34;&amp;lt;c-_&amp;gt;&#34;,      function() Snacks.terminal() end, desc = &#34;which_key_ignore&#34; },&#xA;    { &#34;]]&#34;,         function() Snacks.words.jump(vim.v.count1) end, desc = &#34;Next Reference&#34;, mode = { &#34;n&#34;, &#34;t&#34; } },&#xA;    { &#34;[[&#34;,         function() Snacks.words.jump(-vim.v.count1) end, desc = &#34;Prev Reference&#34;, mode = { &#34;n&#34;, &#34;t&#34; } },&#xA;    {&#xA;      &#34;&amp;lt;leader&amp;gt;N&#34;,&#xA;      desc = &#34;Neovim News&#34;,&#xA;      function()&#xA;        Snacks.win({&#xA;          file = vim.api.nvim_get_runtime_file(&#34;doc/news.txt&#34;, false)[1],&#xA;          width = 0.6,&#xA;          height = 0.6,&#xA;          wo = {&#xA;            spell = false,&#xA;            wrap = false,&#xA;            signcolumn = &#34;yes&#34;,&#xA;            statuscolumn = &#34; &#34;,&#xA;            conceallevel = 3,&#xA;          },&#xA;        })&#xA;      end,&#xA;    }&#xA;  },&#xA;  init = function()&#xA;    vim.api.nvim_create_autocmd(&#34;User&#34;, {&#xA;      pattern = &#34;VeryLazy&#34;,&#xA;      callback = function()&#xA;        -- Setup some globals for debugging (lazy-loaded)&#xA;        _G.dd = function(...)&#xA;          Snacks.debug.inspect(...)&#xA;        end&#xA;        _G.bt = function()&#xA;          Snacks.debug.backtrace()&#xA;        end&#xA;        vim.print = _G.dd -- Override print to use snacks for `:=` command&#xA;&#xA;        -- Create some toggle mappings&#xA;        Snacks.toggle.option(&#34;spell&#34;, { name = &#34;Spelling&#34; }):map(&#34;&amp;lt;leader&amp;gt;us&#34;)&#xA;        Snacks.toggle.option(&#34;wrap&#34;, { name = &#34;Wrap&#34; }):map(&#34;&amp;lt;leader&amp;gt;uw&#34;)&#xA;        Snacks.toggle.option(&#34;relativenumber&#34;, { name = &#34;Relative Number&#34; }):map(&#34;&amp;lt;leader&amp;gt;uL&#34;)&#xA;        Snacks.toggle.diagnostics():map(&#34;&amp;lt;leader&amp;gt;ud&#34;)&#xA;        Snacks.toggle.line_number():map(&#34;&amp;lt;leader&amp;gt;ul&#34;)&#xA;        Snacks.toggle.option(&#34;conceallevel&#34;, { off = 0, on = vim.o.conceallevel &amp;gt; 0 and vim.o.conceallevel or 2 }):map(&#34;&amp;lt;leader&amp;gt;uc&#34;)&#xA;        Snacks.toggle.treesitter():map(&#34;&amp;lt;leader&amp;gt;uT&#34;)&#xA;        Snacks.toggle.option(&#34;background&#34;, { off = &#34;light&#34;, on = &#34;dark&#34;, name = &#34;Dark Background&#34; }):map(&#34;&amp;lt;leader&amp;gt;ub&#34;)&#xA;        Snacks.toggle.inlay_hints():map(&#34;&amp;lt;leader&amp;gt;uh&#34;)&#xA;        Snacks.toggle.indent():map(&#34;&amp;lt;leader&amp;gt;ug&#34;)&#xA;        Snacks.toggle.dim():map(&#34;&amp;lt;leader&amp;gt;uD&#34;)&#xA;      end,&#xA;    })&#xA;  end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- example:end --&gt; &#xA;&lt;h2&gt;üåà Highlight Groups&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Click to see all highlight groups&lt;/summary&gt; &#xA; &lt;!-- hl_start --&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Highlight Group&lt;/th&gt; &#xA;    &lt;th&gt;Default Group&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNormal&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;NormalFloat&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Normal for the float window&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksWinBar&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title of the window&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksBackdrop&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Backdrop&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNormalNC&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;NormalFloat&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Normal for non-current windows&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksWinBarNC&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;SnacksWinBar&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for non-current windows&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksScratchKey&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticVirtualText&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Keymap help in the footer&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksScratchDesc&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticInfo&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Keymap help desc in the footer&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Info&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Warn&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Debug&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Error&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Notification window for Trace&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Info notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Warn notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Debug notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Error notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierIconTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Icon for Trace notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Info notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Warn notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Debug notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Error notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierTitleTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title for Trace notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Info notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Warn notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Debug notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Error notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierBorderTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;none&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Border for Trace notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterInfo&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticInfo&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Info notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterWarn&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticWarn&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Warn notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterDebug&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticHint&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Debug notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterError&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticError&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Error notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksNotifierFooterTrace&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;DiagnosticHint&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Footer for Trace notification&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardNormal&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Normal&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Normal for the dashboard&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardDesc&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Special&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Description text in dashboard&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardFile&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Special&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Dashboard file items&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardDir&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;NonText&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Directory items&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardFooter&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Dashboard footer text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardHeader&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Dashboard header text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardIcon&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Special&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Dashboard icons&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardKey&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Number&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Keybind text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardTerminal&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;SnacksDashboardNormal&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Terminal text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardSpecial&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Special&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Special elements&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;strong&gt;SnacksDashboardTitle&lt;/strong&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;em&gt;Title&lt;/em&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Title text&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA; &lt;!-- hl_end --&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>Courseplay/Courseplay_FS25</title>
    <updated>2025-02-03T01:35:04Z</updated>
    <id>tag:github.com,2025-02-03:/Courseplay/Courseplay_FS25</id>
    <link href="https://github.com/Courseplay/Courseplay_FS25" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Courseplay for Farming Simulator 2025&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Courseplay Beta for Farming Simulator 2025&lt;/h1&gt; &#xA;&lt;!-- [![Modhub release](https://img.shields.io/badge/Modhub%20Release-Modification-blue.svg)](https://www.farming-simulator.com/mod.php?mod_id=248390title=fs2022)--&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Courseplay/Courseplay_FS25/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/Courseplay/Courseplay_FS25?include_prereleases&amp;amp;style=flat-square&amp;amp;label=Github+Release&#34; alt=&#34;GitHub release (latest by date including pre-releases)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Courseplay/Courseplay_FS25/releases/latest/download/FS25_Courseplay.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads-pre/Courseplay/Courseplay_FS25/latest/FS25_Courseplay.zip?style=flat-square&#34; alt=&#34;GitHub Pre-Releases (by Asset)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Courseplay/Courseplay_FS25/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/Courseplay/Courseplay_FS25?style=flat-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Courseplay/Courseplay_FS25/releases/latest&#34;&gt;Download the latest developer version&lt;/a&gt;&lt;/strong&gt; (the file FS25_Courseplay.zip).&lt;/p&gt; &#xA;&lt;!-- **[Courseplay Website](https://courseplay.github.io/Courseplay_FS25.github.io/)** --&gt; &#xA;&lt;p&gt;This (and later, the Giants modhub) is the &lt;strong&gt;only official source for Courseplay&lt;/strong&gt;, if you see it anywhere else, it&#39;s a scam.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;p&gt;German Tutorial by Mario Hirschfeld: &lt;a href=&#34;https://www.youtube.com/playlist?list=PL-UvOFIL55_jXAy6UkVJuLOD5DWKLuzIm&#34;&gt;https://www.youtube.com/playlist?list=PL-UvOFIL55_jXAy6UkVJuLOD5DWKLuzIm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;(Anyone know a good english one?)&lt;/p&gt; &#xA;&lt;h2&gt;Developer version&lt;/h2&gt; &#xA;&lt;p&gt;Please be aware you&#39;re using a developer version, which may and will contain errors, bugs, mistakes and unfinished code. Chances are you computer will explode when using it. Twice. If you have no idea what &#34;beta&#34;, &#34;alpha&#34;, or &#34;developer&#34; means and entails, steer clear. The Courseplay team will not take any responsibility for crop destroyed, savegames deleted or baby pandas killed.&lt;/p&gt; &#xA;&lt;p&gt;You have been warned.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re still ok with this, please remember to post possible issues that you find in the developer version. That&#39;s the only way we can find sources of error and fix them. Be as specific as possible:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;tell us the version number&lt;/li&gt; &#xA; &lt;li&gt;only use the vehicles necessary, not 10 other ones at a time&lt;/li&gt; &#xA; &lt;li&gt;which vehicles are involved, what is the intended action?&lt;/li&gt; &#xA; &lt;li&gt;Post! The! Log! to &lt;a href=&#34;https://gist.github.com/&#34;&gt;Gist&lt;/a&gt; or &lt;a href=&#34;http://pastebin.com/&#34;&gt;PasteBin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;For more details on how to post a proper bug report, visit our &lt;a href=&#34;https://github.com/Courseplay/Courseplay_FS25/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help Us Out&lt;/h2&gt; &#xA;&lt;p&gt;We work long, hard, in our own free time at developing and improving Courseplay. If you like the project, show us your undying love:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=7PDM2P6HQ5D56&amp;amp;item_name=Promote+the+development+of+Courseplay&amp;amp;currency_code=EUR&amp;amp;source=url&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/courseplay&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 60px !important;width: 217px !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>