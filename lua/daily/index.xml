<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-22T01:39:01Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>luvit/luvit</title>
    <updated>2023-07-22T01:39:01Z</updated>
    <id>tag:github.com,2023-07-22:/luvit/luvit</id>
    <link href="https://github.com/luvit/luvit" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lua + libUV + jIT = pure awesomesauce&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Luvit 2.0 - Node.JS for the Lua Inventor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/luvit/luvit/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://github.com/luvit/luvit/actions/workflows/ci.yml/badge.svg?sanitize=true&#34; alt=&#34;Linux Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ci.appveyor.com/project/racker-buildbot/luvit/branch/master&#34;&gt;&lt;img src=&#34;https://ci.appveyor.com/api/projects/status/72ccr146fm51k7up/branch/master?svg=true&#34; alt=&#34;Windows Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://coveralls.io/github/luvit/luvit?branch=master&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/github/luvit/luvit/badge.svg?branch=master&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to the source code for Luvit 2.0. This repo contains the luvit/luvit metapackage and all luvit/* packages as published to &lt;a href=&#34;https://github.com/luvit/lit/&#34;&gt;lit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This collection of packages and modules implements a node.js style API for the &lt;a href=&#34;https://github.com/luvit/luvi/&#34;&gt;luvi&lt;/a&gt;/&lt;a href=&#34;https://github.com/luvit/lit/&#34;&gt;lit&lt;/a&gt; runtime. It can be used as both a library or a standalone executable.&lt;/p&gt; &#xA;&lt;p&gt;See the main project webpage for more details. &lt;a href=&#34;https://luvit.io/&#34;&gt;https://luvit.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Need Help?&lt;/h2&gt; &#xA;&lt;p&gt;Ask questions here through issues, on &lt;a href=&#34;https://discord.gg/luvit&#34;&gt;Discord&lt;/a&gt; or the &lt;a href=&#34;https://groups.google.com/forum/#!forum/luvit&#34;&gt;mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Binary Modules&lt;/h2&gt; &#xA;&lt;p&gt;Luvit supports FFI and Lua based binary modules. There is a wiki entry explaining how to manage and include a binary module within a bundled application. &lt;a href=&#34;https://github.com/luvit/lit/wiki/Publishing-Compiled-Code&#34;&gt;Publishing Compiled Code&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Hacking on Luvit Core&lt;/h2&gt; &#xA;&lt;p&gt;First you need to clone and build luvit, this is easy and works cross-platform thanks to &lt;code&gt;Makefile&lt;/code&gt; and &lt;code&gt;make.bat&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/luvit/luvit.git&#xA;cd luvit&#xA;make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you want to test luvit without constantly building, use &lt;code&gt;luvi&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;luvi . &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Always make sure to run &lt;code&gt;make test&lt;/code&gt; before submitting a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Notes to Maintainers&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;code&gt;luvi /path/to/luvit&lt;/code&gt; to test changes without rebuilding the binary.&lt;/li&gt; &#xA; &lt;li&gt;To run the test suite, run &lt;code&gt;make test&lt;/code&gt; to build a luvit and use that.&lt;/li&gt; &#xA; &lt;li&gt;If you want to test a custom built luvi, run &lt;code&gt;luvi . -- tests/run.lua&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you want to run a specific test file with a custom built luvi, run &lt;code&gt;luvi . -- tests/test-&amp;lt;name-of-test&amp;gt;.lua&lt;/code&gt; (e.g. &lt;code&gt;luvi . -- tests/test-http.lua&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;There is a wiki page on making new luvit releases at &lt;a href=&#34;https://github.com/luvit/luvit/wiki/Making-a-luvit-release&#34;&gt;https://github.com/luvit/luvit/wiki/Making-a-luvit-release&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The packages in deps live primarily in this repo, but some are duplicated in luvit/lit to ease &lt;code&gt;lit&lt;/code&gt; bootstrapping. Updates can be pushed from either repo to lit, just make sure to keep them in sync. One way to do this is to &lt;code&gt;rm -rf deps &amp;amp;&amp;amp; lit install&lt;/code&gt;. This will install the latest version of all the packages from lit. Check the diff carefully to make sure you&#39;re not undoing any work. There might have been unpublished changes locally in luvit that aren&#39;t in the lit central database yet.&lt;/p&gt;</summary>
  </entry>
</feed>