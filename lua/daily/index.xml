<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-21T01:38:25Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lewis6991/impatient.nvim</title>
    <updated>2023-07-21T01:38:25Z</updated>
    <id>tag:github.com,2023-07-21:/lewis6991/impatient.nvim</id>
    <link href="https://github.com/lewis6991/impatient.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Improve startup time for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;NOTICE&lt;/h1&gt; &#xA;&lt;p&gt;As of Neovim 0.9, this plugin is no longer required. Instead run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.loader.enable()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;impatient.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lewis6991/impatient.nvim/actions?query=workflow%3ACI&#34;&gt;&lt;img src=&#34;https://github.com/lewis6991/impatient.nvim/workflows/CI/badge.svg?branch=main&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Speed up loading Lua modules in Neovim to improve startup time.&lt;/p&gt; &#xA;&lt;h2&gt;Optimisations&lt;/h2&gt; &#xA;&lt;p&gt;This plugin does several things to speed loading Lua modules and files.&lt;/p&gt; &#xA;&lt;h3&gt;Implements a chunk cache&lt;/h3&gt; &#xA;&lt;p&gt;This is done by using &lt;code&gt;loadstring&lt;/code&gt; to compile the Lua modules to bytecode and stores them in a cache file. The cache is invalidated using as hash consisting of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The modified time (&lt;code&gt;sec&lt;/code&gt; and &lt;code&gt;nsec&lt;/code&gt;) of the file path.&lt;/li&gt; &#xA; &lt;li&gt;The file size.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The cache file is located in &lt;code&gt;$XDG_CACHE_HOME/nvim/luacache_chunks&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Implements a module resolution cache&lt;/h3&gt; &#xA;&lt;p&gt;This is done by maintaining a table of module name to path. The cache is invalidated only if a path no longer exists.&lt;/p&gt; &#xA;&lt;p&gt;The cache file is located in &lt;code&gt;$XDG_CACHE_HOME/nvim/luacache_modpaths&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This optimization breaks the loading order guarantee of the paths in &lt;code&gt;&#39;runtimepath&#39;&lt;/code&gt;. If you rely on this ordering then you can disable this cache (&lt;code&gt;_G.__luacache_config = { modpaths = { enable = false } }&lt;/code&gt;. See configuration below for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim v0.7&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Is using a standard Neovim install, i.e. built from source or using a&#xA;-- provided appimage.&#xA;use &#39;lewis6991/impatient.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To use impatient, you need only to include it near the top of your &lt;code&gt;init.lua&lt;/code&gt; or &lt;code&gt;init.vim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;init.lua:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;impatient&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;init.vim:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;lua require(&#39;impatient&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;:LuaCacheClear&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Remove the loaded cache and delete the cache file. A new cache file will be created the next time you load Neovim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;:LuaCacheLog&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;View log of impatient.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;:LuaCacheProfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;p&gt;View profiling data. To enable, Impatient must be setup with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;lua require&#39;impatient&#39;.enable_profile()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Unlike most plugins which provide a &lt;code&gt;setup()&lt;/code&gt; function, Impatient uses a configuration table stored in the global state, &lt;code&gt;_G.__luacache_config&lt;/code&gt;. If you modify the default configuration, it must be done before &lt;code&gt;require(&#39;impatient&#39;)&lt;/code&gt; is run.&lt;/p&gt; &#xA;&lt;p&gt;Default config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;_G.__luacache_config = {&#xA;  chunks = {&#xA;    enable = true,&#xA;    path = vim.fn.stdpath(&#39;cache&#39;)..&#39;/luacache_chunks&#39;,&#xA;  },&#xA;  modpaths = {&#xA;    enable = true,&#xA;    path = vim.fn.stdpath(&#39;cache&#39;)..&#39;/luacache_modpaths&#39;,&#xA;  }&#xA;}&#xA;require(&#39;impatient&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Performance Example&lt;/h2&gt; &#xA;&lt;p&gt;Measured on a M1 MacBook Air.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Standard&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;────────────┬────────────┐&#xA; Resolve    │ Load       │&#xA;────────────┼────────────┼─────────────────────────────────────────────────────────────────&#xA; Time       │ Time       │ Module&#xA;────────────┼────────────┼─────────────────────────────────────────────────────────────────&#xA;   54.337ms │   34.257ms │ Total&#xA;────────────┼────────────┼─────────────────────────────────────────────────────────────────&#xA;    7.264ms │    0.470ms │ octo.colors&#xA;    3.154ms │    0.128ms │ diffview.bootstrap&#xA;    2.086ms │    0.231ms │ gitsigns&#xA;    0.320ms │    0.982ms │ octo.date&#xA;    0.296ms │    1.004ms │ octo.writers&#xA;    0.322ms │    0.893ms │ octo.utils&#xA;    0.293ms │    0.854ms │ vim.diagnostic&#xA;    0.188ms │    0.819ms │ vim.lsp.util&#xA;    0.261ms │    0.739ms │ vim.lsp&#xA;    0.330ms │    0.620ms │ octo.model.octo-buffer&#xA;    0.392ms │    0.422ms │ packer.load&#xA;    0.287ms │    0.436ms │ octo.reviews&#xA;    0.367ms │    0.325ms │ octo&#xA;    0.309ms │    0.381ms │ octo.graphql&#xA;    0.454ms │    0.221ms │ octo.base64&#xA;    0.295ms │    0.338ms │ octo.reviews.file-panel&#xA;    0.305ms │    0.306ms │ octo.reviews.file-entry&#xA;    0.183ms │    0.386ms │ vim.treesitter.query&#xA;    0.418ms │    0.149ms │ vim.uri&#xA;    0.342ms │    0.213ms │ octo.config&#xA;    0.110ms │    0.430ms │ nvim-lsp-installer.ui.status-win&#xA;    0.296ms │    0.209ms │ octo.window&#xA;    0.202ms │    0.288ms │ vim.lsp.rpc&#xA;    0.352ms │    0.120ms │ octo.gh&#xA;    0.287ms │    0.184ms │ octo.reviews.layout&#xA;    0.209ms │    0.260ms │ vim.lsp.handlers&#xA;    0.108ms │    0.360ms │ luasnip.nodes.snippet&#xA;    0.243ms │    0.212ms │ dirvish&#xA;    0.289ms │    0.159ms │ octo.mappings&#xA;    0.228ms │    0.220ms │ trouble.view&#xA;    0.145ms │    0.293ms │ plenary.job&#xA;    0.188ms │    0.244ms │ vim.lsp.diagnostic&#xA;    0.032ms │    0.391ms │ packer_compiled&#xA;    0.188ms │    0.228ms │ vim.lsp.buf&#xA;    0.186ms │    0.227ms │ vim.lsp.protocol&#xA;    0.141ms │    0.264ms │ nvim-treesitter.install&#xA;    0.205ms │    0.190ms │ vim.lsp._snippet&#xA;    0.114ms │    0.281ms │ colorizer&#xA;    0.124ms │    0.262ms │ nvim-treesitter.parsers&#xA;    0.331ms │    0.052ms │ octo.model.body-metadata&#xA;    0.325ms │    0.054ms │ octo.constants&#xA;    0.296ms │    0.081ms │ octo.reviews.renderer&#xA;    0.326ms │    0.050ms │ octo.model.thread-metadata&#xA;    0.258ms │    0.117ms │ trouble&#xA;    0.106ms │    0.267ms │ cmp.core&#xA;    0.286ms │    0.085ms │ octo.completion&#xA;    0.120ms │    0.250ms │ luasnip&#xA;    0.286ms │    0.084ms │ octo.ui.bubbles&#xA;    0.068ms │    0.298ms │ diffview.utils&#xA;    0.325ms │    0.039ms │ octo.model.title-metadata&#xA;    0.126ms │    0.234ms │ treesitter-context&#xA;    0.282ms │    0.073ms │ octo.signs&#xA;    0.299ms │    0.043ms │ octo.folds&#xA;    0.112ms │    0.228ms │ luasnip.util.util&#xA;    0.181ms │    0.156ms │ vim.treesitter.languagetree&#xA;    0.260ms │    0.073ms │ vim.keymap&#xA;    0.101ms │    0.231ms │ cmp.entry&#xA;    0.182ms │    0.145ms │ vim.treesitter.highlighter&#xA;    0.191ms │    0.121ms │ trouble.util&#xA;    0.190ms │    0.119ms │ vim.lsp.codelens&#xA;    0.190ms │    0.117ms │ vim.lsp.sync&#xA;    0.197ms │    0.105ms │ vim.highlight&#xA;    0.170ms │    0.132ms │ spellsitter&#xA;    0.086ms │    0.213ms │ github_dark&#xA;    0.200ms │    0.099ms │ persistence&#xA;    0.100ms │    0.196ms │ cmp.view.custom_entries_view&#xA;    0.118ms │    0.176ms │ nvim-treesitter.configs&#xA;    0.090ms │    0.201ms │ gitsigns.git&#xA;    0.114ms │    0.170ms │ nvim-lsp-installer.ui.display&#xA;    0.217ms │    0.064ms │ plenary.async.async&#xA;    0.195ms │    0.078ms │ vim.lsp.log&#xA;    0.191ms │    0.081ms │ trouble.renderer&#xA;    0.122ms │    0.150ms │ nvim-treesitter.ts_utils&#xA;    0.235ms │    0.035ms │ plenary&#xA;    0.100ms │    0.168ms │ cmp.source&#xA;    0.191ms │    0.076ms │ vim.treesitter&#xA;    0.106ms │    0.160ms │ lspconfig.util&#xA;    0.118ms │    0.147ms │ nvim-treesitter.query&#xA;    0.088ms │    0.176ms │ gitsigns.config&#xA;    0.108ms │    0.150ms │ cmp&#xA;    0.193ms │    0.063ms │ trouble.providers&#xA;    0.206ms │    0.050ms │ tmux.version.parse&#xA;    0.103ms │    0.151ms │ cmp.view.wildmenu_entries_view&#xA;    0.070ms │    0.178ms │ diffview.path&#xA;    0.189ms │    0.058ms │ trouble.providers.lsp&#xA;    0.096ms │    0.147ms │ luasnip.util.parser&#xA;    0.093ms │    0.150ms │ gitsigns.manager&#xA;    0.097ms │    0.145ms │ null-ls.utils&#xA;    0.155ms │    0.087ms │ plenary.async.control&#xA;    0.105ms │    0.135ms │ nvim-lsp-installer.installers.std&#xA;    0.107ms │    0.130ms │ lspconfig.configs&#xA;    0.097ms │    0.140ms │ null-ls.helpers.generator_factory&#xA;    0.188ms │    0.047ms │ trouble.providers.telescope&#xA;    0.191ms │    0.040ms │ trouble.config&#xA;    0.099ms │    0.131ms │ cmp.utils.window&#xA;    0.096ms │    0.133ms │ luasnip.nodes.choiceNode&#xA;    0.192ms │    0.036ms │ trouble.providers.qf&#xA;    0.104ms │    0.124ms │ cmp.utils.keymap&#xA;    0.089ms │    0.139ms │ gitsigns.hunks&#xA;    0.104ms │    0.122ms │ nvim-lsp-installer.process&#xA;    0.096ms │    0.129ms │ null-ls.sources&#xA;    0.116ms │    0.108ms │ nvim-lsp-installer&#xA;    0.096ms │    0.128ms │ luasnip.nodes.dynamicNode&#xA;    0.162ms │    0.062ms │ tmux.copy&#xA;    0.197ms │    0.025ms │ trouble.folds&#xA;    0.156ms │    0.066ms │ plenary.async.util&#xA;    0.150ms │    0.071ms │ cmp.utils.highlight&#xA;    0.105ms │    0.116ms │ nvim-lsp-installer.server&#xA;    0.118ms │    0.100ms │ nvim-treesitter.utils&#xA;    0.182ms │    0.035ms │ trouble.providers.diagnostic&#xA;    0.103ms │    0.114ms │ luasnip.nodes.node&#xA;    0.185ms │    0.031ms │ trouble.colors&#xA;    0.180ms │    0.035ms │ vim.ui&#xA;    0.162ms │    0.053ms │ spaceless&#xA;    0.118ms │    0.097ms │ nvim-treesitter.shell_command_selectors&#xA;    0.160ms │    0.053ms │ tmux.wrapper.tmux&#xA;    0.182ms │    0.031ms │ vim.treesitter.language&#xA;    0.178ms │    0.035ms │ trouble.text&#xA;    0.157ms │    0.054ms │ plenary.vararg.rotate&#xA;    0.106ms │    0.104ms │ nvim-lsp-installer.installers.context&#xA;    0.181ms │    0.028ms │ tmux&#xA;    0.158ms │    0.050ms │ nvim-treesitter-playground&#xA;    0.067ms │    0.140ms │ diffview.oop&#xA;    0.158ms │    0.047ms │ tmux.resize&#xA;    0.166ms │    0.039ms │ tmux.log.convert&#xA;    0.161ms │    0.044ms │ tmux.layout&#xA;    0.155ms │    0.048ms │ plenary.async.structs&#xA;    0.101ms │    0.102ms │ cmp.view&#xA;    0.096ms │    0.105ms │ luasnip.util.environ&#xA;    0.145ms │    0.055ms │ plenary.async&#xA;    0.163ms │    0.037ms │ tmux.navigation.navigate&#xA;    0.179ms │    0.020ms │ tmux.keymaps&#xA;    0.155ms │    0.044ms │ plenary.functional&#xA;    0.102ms │    0.097ms │ cmp.matcher&#xA;    0.103ms │    0.095ms │ cmp.view.ghost_text_view&#xA;    0.106ms │    0.091ms │ colorizer.nvim&#xA;    0.168ms │    0.029ms │ tmux.log&#xA;    0.106ms │    0.090ms │ nvim-lsp-installer._generated.filetype_map&#xA;    0.122ms │    0.073ms │ nvim-treesitter.info&#xA;    0.098ms │    0.097ms │ null-ls.client&#xA;    0.105ms │    0.089ms │ nvim-lsp-installer.log&#xA;    0.170ms │    0.024ms │ tmux.navigation&#xA;    0.109ms │    0.084ms │ nvim-lsp-installer.servers&#xA;    0.098ms │    0.095ms │ null-ls.helpers.diagnostics&#xA;    0.160ms │    0.033ms │ tmux.configuration.options&#xA;    0.100ms │    0.091ms │ cmp.utils.misc&#xA;    0.044ms │    0.148ms │ lewis6991&#xA;    0.104ms │    0.088ms │ colorizer.trie&#xA;    0.163ms │    0.028ms │ ts_context_commentstring&#xA;    0.054ms │    0.136ms │ cmp-rg&#xA;    0.130ms │    0.060ms │ nvim-treesitter.query_predicates&#xA;    0.151ms │    0.039ms │ plenary.reload&#xA;    0.096ms │    0.094ms │ luasnip.nodes.insertNode&#xA;    0.160ms │    0.028ms │ tmux.layout.parse&#xA;    0.096ms │    0.093ms │ luasnip.nodes.restoreNode&#xA;    0.166ms │    0.022ms │ tmux.configuration.validate&#xA;    0.100ms │    0.088ms │ cmp.view.native_entries_view&#xA;    0.155ms │    0.033ms │ plenary.tbl&#xA;    0.126ms │    0.062ms │ lspconfig.server_configurations.sumneko_lua&#xA;    0.029ms │    0.160ms │ cmp_buffer.buffer&#xA;    0.105ms │    0.083ms │ cmp.utils.str&#xA;    0.162ms │    0.025ms │ tmux.log.severity&#xA;    0.164ms │    0.024ms │ tmux.wrapper.nvim&#xA;    0.107ms │    0.081ms │ nvim-lsp-installer.ui.status-win.components.settings-schema&#xA;    0.021ms │    0.167ms │ lewis6991.null-ls&#xA;    0.163ms │    0.024ms │ tmux.configuration&#xA;    0.116ms │    0.071ms │ nvim-treesitter.tsrange&#xA;    0.161ms │    0.026ms │ tmux.log.channels&#xA;    0.094ms │    0.091ms │ gitsigns.debug&#xA;    0.163ms │    0.021ms │ plenary.vararg&#xA;    0.166ms │    0.018ms │ tmux.version&#xA;    0.160ms │    0.022ms │ tmux.configuration.logging&#xA;    0.155ms │    0.026ms │ plenary.errors&#xA;    0.127ms │    0.053ms │ nvim-treesitter&#xA;    0.094ms │    0.085ms │ null-ls.info&#xA;    0.100ms │    0.079ms │ cmp.config&#xA;    0.095ms │    0.084ms │ null-ls.diagnostics&#xA;    0.055ms │    0.123ms │ cmp_path&#xA;    0.139ms │    0.038ms │ plenary.async.tests&#xA;    0.098ms │    0.078ms │ null-ls.config&#xA;    0.100ms │    0.076ms │ cmp.view.docs_view&#xA;    0.102ms │    0.074ms │ cmp.utils.feedkeys&#xA;    0.089ms │    0.085ms │ gitsigns.current_line_blame&#xA;    0.127ms │    0.047ms │ null-ls&#xA;    0.107ms │    0.066ms │ nvim-lsp-installer.installers&#xA;    0.095ms │    0.078ms │ luasnip.util.mark&#xA;    0.106ms │    0.066ms │ nvim-lsp-installer.fs&#xA;    0.142ms │    0.030ms │ persistence.config&#xA;    0.100ms │    0.070ms │ cmp.config.default&#xA;    0.078ms │    0.091ms │ foldsigns&#xA;    0.120ms │    0.048ms │ lua-dev&#xA;    0.113ms │    0.053ms │ nvim-lsp-installer.ui&#xA;    0.029ms │    0.138ms │ lewis6991.status&#xA;    0.118ms │    0.047ms │ lspconfig&#xA;    0.113ms │    0.051ms │ nvim-lsp-installer.jobs.outdated-servers&#xA;    0.105ms │    0.058ms │ nvim-lsp-installer.installers.npm&#xA;    0.106ms │    0.057ms │ nvim-lsp-installer.core.receipt&#xA;    0.101ms │    0.061ms │ cmp.utils.char&#xA;    0.091ms │    0.071ms │ gitsigns.signs&#xA;    0.097ms │    0.065ms │ luasnip.nodes.util&#xA;    0.126ms │    0.034ms │ treesitter-context.utils&#xA;    0.096ms │    0.065ms │ lua-dev.config&#xA;    0.109ms │    0.052ms │ nvim-lsp-installer.core.fetch&#xA;    0.103ms │    0.055ms │ cmp.types.lsp&#xA;    0.099ms │    0.059ms │ luasnip.nodes.functionNode&#xA;    0.090ms │    0.067ms │ gitsigns.util&#xA;    0.110ms │    0.047ms │ nvim-lsp-installer.jobs.outdated-servers.cargo&#xA;    0.096ms │    0.061ms │ luasnip.config&#xA;    0.100ms │    0.057ms │ cmp.utils.async&#xA;    0.101ms │    0.055ms │ cmp.context&#xA;    0.091ms │    0.064ms │ gitsigns.highlight&#xA;    0.094ms │    0.061ms │ lua-dev.sumneko&#xA;    0.094ms │    0.061ms │ gitsigns.subprocess&#xA;    0.067ms │    0.088ms │ cmp_luasnip&#xA;    0.105ms │    0.050ms │ nvim-lsp-installer.data&#xA;    0.105ms │    0.049ms │ nvim-lsp-installer.installers.pip3&#xA;    0.120ms │    0.034ms │ lspconfig.server_configurations.bashls&#xA;    0.107ms │    0.046ms │ nvim-lsp-installer.core.clients.github&#xA;    0.107ms │    0.045ms │ nvim-lsp-installer.installers.shell&#xA;    0.099ms │    0.053ms │ cmp.config.compare&#xA;    0.109ms │    0.043ms │ lspconfig.server_configurations.clangd&#xA;    0.115ms │    0.036ms │ lspconfig.server_configurations.vimls&#xA;    0.097ms │    0.054ms │ luasnip.util.pattern_tokenizer&#xA;    0.097ms │    0.053ms │ null-ls.helpers.make_builtin&#xA;    0.101ms │    0.049ms │ cmp.utils.api&#xA;    0.118ms │    0.032ms │ lspconfig.server_configurations.jedi_language_server&#xA;    0.106ms │    0.043ms │ nvim-lsp-installer.jobs.outdated-servers.pip3&#xA;    0.106ms │    0.043ms │ nvim-lsp-installer.jobs.outdated-servers.gem&#xA;    0.108ms │    0.040ms │ nvim-lsp-installer._generated.language_autocomplete_map&#xA;    0.104ms │    0.043ms │ nvim-lsp-installer.installers.composer&#xA;    0.101ms │    0.046ms │ cmp.config.mapping&#xA;    0.047ms │    0.100ms │ cmp_nvim_lsp_signature_help&#xA;    0.109ms │    0.037ms │ nvim-lsp-installer.servers.sumneko_lua&#xA;    0.115ms │    0.028ms │ nvim-treesitter.caching&#xA;    0.096ms │    0.047ms │ null-ls.state&#xA;    0.090ms │    0.053ms │ gitsigns.debounce&#xA;    0.059ms │    0.084ms │ cmp_tmux.tmux&#xA;    0.096ms │    0.045ms │ null-ls.builtins.diagnostics.flake8&#xA;    0.106ms │    0.034ms │ nvim-lsp-installer.jobs.pool&#xA;    0.106ms │    0.033ms │ nvim-lsp-installer.ui.status-win.server_hints&#xA;    0.105ms │    0.034ms │ nvim-lsp-installer.installers.gem&#xA;    0.107ms │    0.032ms │ nvim-lsp-installer.jobs.outdated-servers.npm&#xA;    0.106ms │    0.031ms │ nvim-lsp-installer.jobs.outdated-servers.git&#xA;    0.114ms │    0.022ms │ nvim-lsp-installer.servers.jedi_language_server&#xA;    0.105ms │    0.031ms │ nvim-lsp-installer.jobs.outdated-servers.composer&#xA;    0.098ms │    0.038ms │ null-ls.methods&#xA;    0.109ms │    0.026ms │ nvim-lsp-installer.jobs.outdated-servers.version-check-result&#xA;    0.106ms │    0.029ms │ nvim-lsp-installer.settings&#xA;    0.107ms │    0.027ms │ cmp.utils.debug&#xA;    0.103ms │    0.031ms │ cmp.types.cmp&#xA;    0.070ms │    0.064ms │ diffview.events&#xA;    0.108ms │    0.026ms │ nvim-lsp-installer.platform&#xA;    0.097ms │    0.037ms │ null-ls.helpers.command_resolver&#xA;    0.104ms │    0.029ms │ cmp.config.sources&#xA;    0.107ms │    0.026ms │ nvim-lsp-installer.jobs.outdated-servers.github_release_file&#xA;    0.099ms │    0.033ms │ cmp.utils.cache&#xA;    0.107ms │    0.025ms │ nvim-lsp-installer.path&#xA;    0.101ms │    0.030ms │ cmp.utils.autocmd&#xA;    0.097ms │    0.034ms │ null-ls.logger&#xA;    0.100ms │    0.031ms │ cmp.utils.event&#xA;    0.088ms │    0.042ms │ gitsigns.cache&#xA;    0.103ms │    0.027ms │ cmp.utils.pattern&#xA;    0.108ms │    0.022ms │ nvim-lsp-installer.jobs.outdated-servers.jdtls&#xA;    0.103ms │    0.027ms │ cmp.utils.buffer&#xA;    0.095ms │    0.034ms │ luasnip.nodes.textNode&#xA;    0.096ms │    0.033ms │ luasnip.util.dict&#xA;    0.108ms │    0.021ms │ nvim-lsp-installer.servers.bashls&#xA;    0.108ms │    0.021ms │ nvim-lsp-installer.ui.state&#xA;    0.110ms │    0.018ms │ nvim-lsp-installer.servers.vimls&#xA;    0.101ms │    0.027ms │ null-ls.helpers.range_formatting_args_factory&#xA;    0.057ms │    0.071ms │ cmp_treesitter.lru&#xA;    0.105ms │    0.022ms │ nvim-lsp-installer.dispatcher&#xA;    0.097ms │    0.030ms │ luasnip.extras.filetype_functions&#xA;    0.103ms │    0.024ms │ luasnip.session&#xA;    0.105ms │    0.021ms │ nvim-lsp-installer.core.clients.crates&#xA;    0.105ms │    0.021ms │ nvim-lsp-installer.jobs.outdated-servers.github_tag&#xA;    0.110ms │    0.016ms │ cmp.types&#xA;    0.105ms │    0.021ms │ nvim-lsp-installer.core.clients.eclipse&#xA;    0.105ms │    0.021ms │ nvim-lsp-installer.notify&#xA;    0.089ms │    0.036ms │ gitsigns.status&#xA;    0.096ms │    0.029ms │ null-ls.builtins.diagnostics.teal&#xA;    0.097ms │    0.027ms │ null-ls.builtins&#xA;    0.103ms │    0.021ms │ cmp.types.vim&#xA;    0.060ms │    0.062ms │ cmp_tmux.source&#xA;    0.100ms │    0.022ms │ null-ls.helpers&#xA;    0.098ms │    0.024ms │ null-ls.builtins.diagnostics.gitlint&#xA;    0.065ms │    0.056ms │ cmp_treesitter&#xA;    0.024ms │    0.097ms │ buftabline.buftab&#xA;    0.095ms │    0.026ms │ null-ls.builtins.diagnostics.shellcheck&#xA;    0.095ms │    0.026ms │ null-ls.builtins.diagnostics.luacheck&#xA;    0.097ms │    0.021ms │ null-ls.helpers.formatter_factory&#xA;    0.097ms │    0.022ms │ luasnip.util.events&#xA;    0.097ms │    0.021ms │ luasnip.util.types&#xA;    0.096ms │    0.022ms │ luasnip.util.functions&#xA;    0.037ms │    0.078ms │ cmp_cmdline&#xA;    0.032ms │    0.083ms │ cmp_buffer.source&#xA;    0.040ms │    0.074ms │ lewis6991.cmp&#xA;    0.060ms │    0.054ms │ cmp_treesitter.treesitter&#xA;    0.089ms │    0.025ms │ gitsigns.message&#xA;    0.039ms │    0.073ms │ cmp_nvim_lsp.source&#xA;    0.055ms │    0.054ms │ buftabline.build&#xA;    0.026ms │    0.083ms │ lewis6991.lsp&#xA;    0.051ms │    0.055ms │ cmp_nvim_lua&#xA;    0.033ms │    0.065ms │ cleanfold&#xA;    0.071ms │    0.025ms │ cmp_tmux&#xA;    0.043ms │    0.053ms │ cmp_nvim_lsp&#xA;    0.058ms │    0.033ms │ cmp-spell&#xA;    0.043ms │    0.037ms │ cmp_emoji&#xA;    0.029ms │    0.049ms │ lewis6991.floating_man&#xA;    0.032ms │    0.042ms │ cmp_buffer.timer&#xA;    0.024ms │    0.050ms │ lewis6991.treesitter&#xA;    0.019ms │    0.054ms │ lewis6991.cmp_gh&#xA;    0.025ms │    0.046ms │ buftabline.buffers&#xA;    0.021ms │    0.048ms │ lewis6991.telescope&#xA;    0.024ms │    0.031ms │ buftabline&#xA;    0.035ms │    0.019ms │ cmp_buffer&#xA;    0.019ms │    0.035ms │ buftabline.utils&#xA;    0.021ms │    0.030ms │ buftabline.highlights&#xA;    0.020ms │    0.032ms │ buftabline.tabpage-tab&#xA;    0.019ms │    0.030ms │ buftabline.options&#xA;    0.020ms │    0.026ms │ buftabline.tabpages&#xA;────────────┴────────────┴─────────────────────────────────────────────────────────────────&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Total resolve: 54.337ms, total load: 34.257ms&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With cache&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code&gt;────────────┬────────────┐&#xA; Resolve    │ Load       │&#xA;────────────┼────────────┼─────────────────────────────────────────────────────────────────&#xA; Time       │ Time       │ Module&#xA;────────────┼────────────┼─────────────────────────────────────────────────────────────────&#xA;    6.357ms │    6.796ms │ Total&#xA;────────────┼────────────┼─────────────────────────────────────────────────────────────────&#xA;    0.041ms │    2.021ms │ octo.writers&#xA;    0.118ms │    0.160ms │ lewis6991.plugins&#xA;    0.050ms │    0.144ms │ octo.date&#xA;    0.035ms │    0.153ms │ octo.utils&#xA;    0.057ms │    0.099ms │ octo.model.octo-buffer&#xA;    0.047ms │    0.105ms │ packer&#xA;    0.058ms │    0.080ms │ octo.colors&#xA;    0.121ms │    0.015ms │ gitsigns.cache&#xA;    0.082ms │    0.037ms │ packer.load&#xA;    0.107ms │    0.008ms │ gitsigns.debounce&#xA;    0.048ms │    0.064ms │ octo.config&#xA;    0.048ms │    0.061ms │ octo.graphql&#xA;    0.049ms │    0.051ms │ octo&#xA;    0.043ms │    0.057ms │ vim.diagnostic&#xA;    0.085ms │    0.013ms │ gitsigns.highlight&#xA;    0.065ms │    0.032ms │ octo.base64&#xA;    0.035ms │    0.060ms │ vim.lsp&#xA;    0.056ms │    0.035ms │ octo.gh&#xA;    0.045ms │    0.045ms │ octo.mappings&#xA;    0.026ms │    0.060ms │ octo.reviews&#xA;    0.037ms │    0.045ms │ packer.plugin_utils&#xA;    0.030ms │    0.049ms │ octo.reviews.file-panel&#xA;    0.018ms │    0.056ms │ vim.lsp.util&#xA;    0.043ms │    0.030ms │ packer.log&#xA;    0.036ms │    0.032ms │ packer.util&#xA;    0.032ms │    0.035ms │ octo.reviews.file-entry&#xA;    0.021ms │    0.045ms │ packer_compiled&#xA;    0.052ms │    0.014ms │ octo.model.body-metadata&#xA;    0.033ms │    0.027ms │ octo.reviews.layout&#xA;    0.014ms │    0.047ms │ nvim-treesitter.parsers&#xA;    0.035ms │    0.024ms │ vim.lsp.handlers&#xA;    0.014ms │    0.044ms │ nvim-lsp-installer.ui.status-win&#xA;    0.046ms │    0.012ms │ octo.completion&#xA;    0.037ms │    0.021ms │ octo.constants&#xA;    0.032ms │    0.025ms │ lewis6991&#xA;    0.040ms │    0.017ms │ persistence&#xA;    0.030ms │    0.026ms │ diffview.utils&#xA;    0.035ms │    0.020ms │ packer.result&#xA;    0.015ms │    0.040ms │ gitsigns.config&#xA;    0.031ms │    0.024ms │ packer.async&#xA;    0.041ms │    0.013ms │ vim.uri&#xA;    0.044ms │    0.010ms │ octo.model.thread-metadata&#xA;    0.018ms │    0.035ms │ gitsigns.debug&#xA;    0.023ms │    0.030ms │ github_dark&#xA;    0.030ms │    0.023ms │ packer.jobs&#xA;    0.039ms │    0.013ms │ buftabline.build&#xA;    0.037ms │    0.014ms │ octo.model.title-metadata&#xA;    0.025ms │    0.025ms │ vim.lsp.buf&#xA;    0.022ms │    0.027ms │ gitsigns&#xA;    0.027ms │    0.022ms │ lewis6991.status&#xA;    0.016ms │    0.032ms │ gitsigns.git&#xA;    0.026ms │    0.020ms │ octo.window&#xA;    0.033ms │    0.012ms │ octo.folds&#xA;    0.037ms │    0.008ms │ trouble.providers.lsp&#xA;    0.016ms │    0.028ms │ vim.lsp.protocol&#xA;    0.028ms │    0.016ms │ octo.signs&#xA;    0.028ms │    0.014ms │ null-ls&#xA;    0.027ms │    0.014ms │ octo.reviews.renderer&#xA;    0.018ms │    0.024ms │ trouble.view&#xA;    0.017ms │    0.025ms │ luasnip.nodes.snippet&#xA;    0.023ms │    0.018ms │ colorizer.nvim&#xA;    0.017ms │    0.024ms │ vim.lsp._snippet&#xA;    0.015ms │    0.025ms │ nvim-treesitter.install&#xA;    0.018ms │    0.022ms │ plenary.async.structs&#xA;    0.018ms │    0.021ms │ dirvish&#xA;    0.027ms │    0.012ms │ octo.ui.bubbles&#xA;    0.019ms │    0.020ms │ treesitter-context&#xA;    0.015ms │    0.024ms │ vim.lsp.diagnostic&#xA;    0.016ms │    0.023ms │ vim.lsp.rpc&#xA;    0.022ms │    0.016ms │ trouble&#xA;    0.022ms │    0.016ms │ null-ls.helpers.generator_factory&#xA;    0.020ms │    0.017ms │ luasnip&#xA;    0.014ms │    0.023ms │ plenary.job&#xA;    0.026ms │    0.011ms │ lewis6991.cmp&#xA;    0.027ms │    0.010ms │ trouble.providers&#xA;    0.022ms │    0.014ms │ nvim-treesitter.query&#xA;    0.018ms │    0.018ms │ vim.treesitter.highlighter&#xA;    0.017ms │    0.018ms │ nvim-treesitter.shell_command_selectors&#xA;    0.014ms │    0.021ms │ nvim-treesitter.configs&#xA;    0.025ms │    0.010ms │ lewis6991.floating_man&#xA;    0.022ms │    0.012ms │ vim.keymap&#xA;    0.013ms │    0.021ms │ cmp.entry&#xA;    0.024ms │    0.010ms │ lspconfig.server_configurations.bashls&#xA;    0.018ms │    0.016ms │ gitsigns.hunks&#xA;    0.017ms │    0.017ms │ gitsigns.status&#xA;    0.014ms │    0.019ms │ cmp.core&#xA;    0.018ms │    0.015ms │ spellsitter&#xA;    0.014ms │    0.019ms │ colorizer&#xA;    0.024ms │    0.009ms │ diffview.bootstrap&#xA;    0.016ms │    0.016ms │ null-ls.utils&#xA;    0.021ms │    0.011ms │ nvim-treesitter.info&#xA;    0.022ms │    0.010ms │ vim.highlight&#xA;    0.016ms │    0.016ms │ null-ls.info&#xA;    0.019ms │    0.013ms │ cmp_path&#xA;    0.026ms │    0.006ms │ cmp.utils.autocmd&#xA;    0.021ms │    0.011ms │ foldsigns&#xA;    0.014ms │    0.018ms │ lewis6991.null-ls&#xA;    0.018ms │    0.013ms │ cmp.view&#xA;    0.017ms │    0.014ms │ null-ls.client&#xA;    0.016ms │    0.015ms │ gitsigns.manager&#xA;    0.013ms │    0.018ms │ cmp.view.custom_entries_view&#xA;    0.015ms │    0.015ms │ nvim-lsp-installer.ui.display&#xA;    0.020ms │    0.010ms │ null-ls.methods&#xA;    0.016ms │    0.014ms │ plenary.async.control&#xA;    0.019ms │    0.011ms │ null-ls.diagnostics&#xA;    0.014ms │    0.015ms │ luasnip.util.util&#xA;    0.017ms │    0.013ms │ gitsigns.current_line_blame&#xA;    0.013ms │    0.016ms │ buftabline.buftab&#xA;    0.015ms │    0.015ms │ trouble.util&#xA;    0.015ms │    0.015ms │ luasnip.config&#xA;    0.019ms │    0.010ms │ plenary.async.async&#xA;    0.018ms │    0.012ms │ nvim-treesitter.tsrange&#xA;    0.021ms │    0.007ms │ cmp_nvim_lua&#xA;    0.014ms │    0.015ms │ vim.treesitter.query&#xA;    0.015ms │    0.014ms │ cmp.source&#xA;    0.014ms │    0.015ms │ vim.treesitter.languagetree&#xA;    0.012ms │    0.016ms │ nvim-lsp-installer._generated.filetype_map&#xA;    0.015ms │    0.014ms │ nvim-lsp-installer.servers&#xA;    0.014ms │    0.014ms │ lspconfig.util&#xA;    0.011ms │    0.017ms │ cmp&#xA;    0.015ms │    0.013ms │ cmp.view.wildmenu_entries_view&#xA;    0.021ms │    0.007ms │ lspconfig.server_configurations.jedi_language_server&#xA;    0.015ms │    0.013ms │ lua-dev&#xA;    0.018ms │    0.010ms │ gitsigns.util&#xA;    0.014ms │    0.014ms │ vim.lsp.codelens&#xA;    0.017ms │    0.011ms │ plenary.async.util&#xA;    0.013ms │    0.014ms │ null-ls.sources&#xA;    0.015ms │    0.012ms │ nvim-treesitter.query_predicates&#xA;    0.013ms │    0.015ms │ luasnip.nodes.choiceNode&#xA;    0.015ms │    0.013ms │ null-ls.helpers.diagnostics&#xA;    0.017ms │    0.011ms │ trouble.renderer&#xA;    0.015ms │    0.013ms │ luasnip.nodes.node&#xA;    0.014ms │    0.013ms │ lua-dev.sumneko&#xA;    0.013ms │    0.014ms │ cmp.utils.window&#xA;    0.021ms │    0.006ms │ treesitter-context.utils&#xA;    0.018ms │    0.009ms │ cleanfold&#xA;    0.015ms │    0.012ms │ nvim-treesitter.ts_utils&#xA;    0.012ms │    0.015ms │ nvim-lsp-installer.installers.std&#xA;    0.015ms │    0.012ms │ nvim-lsp-installer.server&#xA;    0.014ms │    0.012ms │ lewis6991.lsp&#xA;    0.016ms │    0.011ms │ gitsigns.signs&#xA;    0.020ms │    0.006ms │ buftabline&#xA;    0.019ms │    0.007ms │ plenary.tbl&#xA;    0.013ms │    0.013ms │ nvim-lsp-installer&#xA;    0.018ms │    0.008ms │ plenary&#xA;    0.015ms │    0.010ms │ cmp_luasnip&#xA;    0.019ms │    0.007ms │ null-ls.logger&#xA;    0.016ms │    0.010ms │ vim.lsp.sync&#xA;    0.016ms │    0.010ms │ spaceless&#xA;    0.017ms │    0.009ms │ gitsigns.subprocess&#xA;    0.016ms │    0.009ms │ plenary.functional&#xA;    0.016ms │    0.010ms │ buftabline.buffers&#xA;    0.016ms │    0.009ms │ vim.lsp.log&#xA;    0.019ms │    0.006ms │ cmp_tmux&#xA;    0.013ms │    0.012ms │ luasnip.nodes.dynamicNode&#xA;    0.017ms │    0.008ms │ vim.treesitter&#xA;    0.013ms │    0.013ms │ nvim-lsp-installer.process&#xA;    0.013ms │    0.012ms │ luasnip.util.environ&#xA;    0.015ms │    0.009ms │ lewis6991.treesitter&#xA;    0.015ms │    0.010ms │ null-ls.config&#xA;    0.019ms │    0.006ms │ ts_context_commentstring&#xA;    0.013ms │    0.012ms │ cmp_buffer.buffer&#xA;    0.018ms │    0.007ms │ null-ls.builtins.diagnostics.shellcheck&#xA;    0.015ms │    0.010ms │ null-ls.helpers.make_builtin&#xA;    0.012ms │    0.012ms │ diffview.path&#xA;    0.016ms │    0.008ms │ null-ls.builtins.diagnostics.gitlint&#xA;    0.017ms │    0.007ms │ trouble.providers.telescope&#xA;    0.013ms │    0.011ms │ diffview.oop&#xA;    0.015ms │    0.010ms │ cmp-rg&#xA;    0.013ms │    0.011ms │ cmp.utils.keymap&#xA;    0.014ms │    0.011ms │ nvim-treesitter&#xA;    0.018ms │    0.007ms │ cmp.utils.highlight&#xA;    0.016ms │    0.008ms │ lspconfig.server_configurations.sumneko_lua&#xA;    0.015ms │    0.009ms │ colorizer.trie&#xA;    0.016ms │    0.007ms │ plenary.vararg.rotate&#xA;    0.015ms │    0.009ms │ trouble.config&#xA;    0.011ms │    0.012ms │ lspconfig.configs&#xA;    0.014ms │    0.009ms │ null-ls.helpers.command_resolver&#xA;    0.016ms │    0.007ms │ cmp_tmux.source&#xA;    0.016ms │    0.007ms │ lspconfig&#xA;    0.017ms │    0.006ms │ plenary.vararg&#xA;    0.012ms │    0.011ms │ nvim-lsp-installer.installers.context&#xA;    0.014ms │    0.009ms │ cmp.view.native_entries_view&#xA;    0.014ms │    0.009ms │ cmp.config.default&#xA;    0.017ms │    0.006ms │ tmux.version.parse&#xA;    0.016ms │    0.007ms │ gitsigns.message&#xA;    0.017ms │    0.006ms │ persistence.config&#xA;    0.013ms │    0.010ms │ cmp_nvim_lsp_signature_help&#xA;    0.012ms │    0.010ms │ cmp.view.docs_view&#xA;    0.017ms │    0.006ms │ cmp.config.sources&#xA;    0.013ms │    0.009ms │ luasnip.nodes.restoreNode&#xA;    0.014ms │    0.009ms │ vim.ui&#xA;    0.013ms │    0.010ms │ luasnip.nodes.insertNode&#xA;    0.013ms │    0.010ms │ null-ls.state&#xA;    0.014ms │    0.008ms │ lspconfig.server_configurations.vimls&#xA;    0.016ms │    0.006ms │ plenary.errors&#xA;    0.014ms │    0.008ms │ null-ls.builtins.diagnostics.flake8&#xA;    0.016ms │    0.006ms │ null-ls.helpers&#xA;    0.015ms │    0.008ms │ null-ls.builtins.diagnostics.luacheck&#xA;    0.014ms │    0.008ms │ luasnip.util.mark&#xA;    0.015ms │    0.008ms │ cmp.utils.buffer&#xA;    0.012ms │    0.010ms │ nvim-lsp-installer.log&#xA;    0.015ms │    0.007ms │ luasnip.nodes.util&#xA;    0.015ms │    0.007ms │ null-ls.builtins.diagnostics.teal&#xA;    0.016ms │    0.006ms │ null-ls.helpers.range_formatting_args_factory&#xA;    0.012ms │    0.010ms │ nvim-treesitter.utils&#xA;    0.015ms │    0.007ms │ cmp.utils.event&#xA;    0.013ms │    0.009ms │ tmux.wrapper.tmux&#xA;    0.015ms │    0.007ms │ nvim-treesitter-playground&#xA;    0.012ms │    0.010ms │ cmp_buffer.source&#xA;    0.015ms │    0.007ms │ cmp_treesitter&#xA;    0.013ms │    0.009ms │ luasnip.util.parser&#xA;    0.015ms │    0.006ms │ trouble.providers.qf&#xA;    0.014ms │    0.008ms │ lewis6991.telescope&#xA;    0.014ms │    0.007ms │ cmp_tmux.tmux&#xA;    0.014ms │    0.007ms │ cmp_nvim_lsp.source&#xA;    0.015ms │    0.006ms │ plenary.reload&#xA;    0.014ms │    0.008ms │ buftabline.highlights&#xA;    0.015ms │    0.006ms │ trouble.providers.diagnostic&#xA;    0.015ms │    0.007ms │ nvim-lsp-installer.core.clients.github&#xA;    0.014ms │    0.007ms │ nvim-lsp-installer.installers.shell&#xA;    0.016ms │    0.005ms │ cmp-spell&#xA;    0.014ms │    0.007ms │ null-ls.builtins&#xA;    0.013ms │    0.008ms │ cmp_treesitter.lru&#xA;    0.016ms │    0.005ms │ buftabline.tabpages&#xA;    0.015ms │    0.006ms │ buftabline.options&#xA;    0.016ms │    0.005ms │ lua-dev.config&#xA;    0.015ms │    0.006ms │ nvim-lsp-installer.jobs.outdated-servers.cargo&#xA;    0.014ms │    0.007ms │ diffview.events&#xA;    0.013ms │    0.008ms │ nvim-lsp-installer.fs&#xA;    0.013ms │    0.008ms │ cmp.utils.feedkeys&#xA;    0.013ms │    0.007ms │ nvim-treesitter.caching&#xA;    0.013ms │    0.008ms │ nvim-lsp-installer._generated.language_autocomplete_map&#xA;    0.013ms │    0.007ms │ cmp.view.ghost_text_view&#xA;    0.013ms │    0.008ms │ cmp_nvim_lsp&#xA;    0.013ms │    0.007ms │ luasnip.nodes.functionNode&#xA;    0.013ms │    0.007ms │ nvim-lsp-installer.jobs.outdated-servers&#xA;    0.012ms │    0.008ms │ nvim-lsp-installer.ui.status-win.components.settings-schema&#xA;    0.012ms │    0.009ms │ lewis6991.cmp_gh&#xA;    0.015ms │    0.006ms │ luasnip.util.dict&#xA;    0.013ms │    0.007ms │ plenary.async&#xA;    0.014ms │    0.006ms │ nvim-lsp-installer.installers.composer&#xA;    0.013ms │    0.007ms │ cmp_treesitter.treesitter&#xA;    0.014ms │    0.006ms │ nvim-lsp-installer.jobs.outdated-servers.gem&#xA;    0.015ms │    0.005ms │ nvim-lsp-installer.platform&#xA;    0.014ms │    0.006ms │ buftabline.utils&#xA;    0.013ms │    0.007ms │ trouble.text&#xA;    0.011ms │    0.008ms │ cmp.config&#xA;    0.013ms │    0.006ms │ trouble.colors&#xA;    0.012ms │    0.007ms │ cmp.utils.misc&#xA;    0.012ms │    0.008ms │ nvim-lsp-installer.installers.npm&#xA;    0.013ms │    0.007ms │ lspconfig.server_configurations.clangd&#xA;    0.012ms │    0.007ms │ cmp_cmdline&#xA;    0.011ms │    0.008ms │ cmp.types.lsp&#xA;    0.014ms │    0.006ms │ vim.treesitter.language&#xA;    0.014ms │    0.006ms │ cmp.config.mapping&#xA;    0.015ms │    0.004ms │ luasnip.util.events&#xA;    0.014ms │    0.005ms │ luasnip.extras.filetype_functions&#xA;    0.012ms │    0.007ms │ cmp.utils.async&#xA;    0.012ms │    0.007ms │ cmp.config.compare&#xA;    0.013ms │    0.005ms │ cmp_emoji&#xA;    0.015ms │    0.004ms │ cmp_buffer&#xA;    0.011ms │    0.007ms │ nvim-lsp-installer.core.receipt&#xA;    0.012ms │    0.007ms │ nvim-lsp-installer.ui&#xA;    0.013ms │    0.006ms │ cmp.utils.api&#xA;    0.012ms │    0.007ms │ nvim-lsp-installer.core.fetch&#xA;    0.013ms │    0.005ms │ nvim-lsp-installer.jobs.pool&#xA;    0.011ms │    0.007ms │ nvim-lsp-installer.installers&#xA;    0.012ms │    0.007ms │ nvim-lsp-installer.data&#xA;    0.013ms │    0.006ms │ cmp.matcher&#xA;    0.014ms │    0.005ms │ tmux&#xA;    0.011ms │    0.008ms │ tmux.copy&#xA;    0.013ms │    0.005ms │ luasnip.util.types&#xA;    0.014ms │    0.004ms │ nvim-lsp-installer.servers.jedi_language_server&#xA;    0.014ms │    0.004ms │ nvim-lsp-installer.servers.vimls&#xA;    0.014ms │    0.004ms │ cmp.utils.cache&#xA;    0.013ms │    0.006ms │ luasnip.util.pattern_tokenizer&#xA;    0.012ms │    0.006ms │ luasnip.nodes.textNode&#xA;    0.013ms │    0.005ms │ null-ls.helpers.formatter_factory&#xA;    0.013ms │    0.006ms │ plenary.async.tests&#xA;    0.013ms │    0.005ms │ nvim-lsp-installer.jobs.outdated-servers.version-check-result&#xA;    0.012ms │    0.005ms │ nvim-lsp-installer.settings&#xA;    0.011ms │    0.006ms │ cmp.context&#xA;    0.011ms │    0.006ms │ cmp.utils.str&#xA;    0.013ms │    0.004ms │ luasnip.session&#xA;    0.013ms │    0.005ms │ nvim-lsp-installer.jobs.outdated-servers.composer&#xA;    0.012ms │    0.006ms │ nvim-lsp-installer.servers.sumneko_lua&#xA;    0.012ms │    0.005ms │ cmp_buffer.timer&#xA;    0.011ms │    0.006ms │ cmp.utils.char&#xA;    0.013ms │    0.004ms │ cmp.utils.pattern&#xA;    0.011ms │    0.006ms │ nvim-lsp-installer.installers.pip3&#xA;    0.013ms │    0.004ms │ luasnip.util.functions&#xA;    0.013ms │    0.005ms │ tmux.log.channels&#xA;    0.012ms │    0.005ms │ tmux.navigation&#xA;    0.013ms │    0.005ms │ trouble.folds&#xA;    0.012ms │    0.005ms │ nvim-lsp-installer.ui.status-win.server_hints&#xA;    0.012ms │    0.005ms │ nvim-lsp-installer.jobs.outdated-servers.pip3&#xA;    0.012ms │    0.005ms │ nvim-lsp-installer.jobs.outdated-servers.npm&#xA;    0.011ms │    0.006ms │ cmp.utils.debug&#xA;    0.013ms │    0.004ms │ nvim-lsp-installer.notify&#xA;    0.011ms │    0.006ms │ tmux.layout&#xA;    0.013ms │    0.004ms │ nvim-lsp-installer.servers.bashls&#xA;    0.012ms │    0.004ms │ nvim-lsp-installer.dispatcher&#xA;    0.012ms │    0.005ms │ buftabline.tabpage-tab&#xA;    0.012ms │    0.005ms │ nvim-lsp-installer.path&#xA;    0.010ms │    0.006ms │ tmux.resize&#xA;    0.013ms │    0.004ms │ cmp.types.vim&#xA;    0.012ms │    0.004ms │ nvim-lsp-installer.ui.state&#xA;    0.011ms │    0.005ms │ nvim-lsp-installer.installers.gem&#xA;    0.012ms │    0.005ms │ tmux.configuration.options&#xA;    0.012ms │    0.005ms │ nvim-lsp-installer.jobs.outdated-servers.git&#xA;    0.012ms │    0.004ms │ nvim-lsp-installer.jobs.outdated-servers.github_release_file&#xA;    0.012ms │    0.005ms │ cmp.types.cmp&#xA;    0.013ms │    0.004ms │ cmp.types&#xA;    0.011ms │    0.005ms │ tmux.log&#xA;    0.011ms │    0.005ms │ tmux.navigation.navigate&#xA;    0.012ms │    0.005ms │ tmux.configuration&#xA;    0.012ms │    0.004ms │ nvim-lsp-installer.jobs.outdated-servers.github_tag&#xA;    0.011ms │    0.005ms │ tmux.layout.parse&#xA;    0.012ms │    0.004ms │ nvim-lsp-installer.jobs.outdated-servers.jdtls&#xA;    0.011ms │    0.005ms │ tmux.log.convert&#xA;    0.011ms │    0.005ms │ tmux.log.severity&#xA;    0.011ms │    0.004ms │ tmux.version&#xA;    0.012ms │    0.004ms │ nvim-lsp-installer.core.clients.eclipse&#xA;    0.011ms │    0.004ms │ nvim-lsp-installer.core.clients.crates&#xA;    0.011ms │    0.004ms │ tmux.configuration.logging&#xA;    0.011ms │    0.004ms │ tmux.wrapper.nvim&#xA;    0.011ms │    0.004ms │ tmux.configuration.validate&#xA;    0.011ms │    0.004ms │ tmux.keymaps&#xA;────────────┴────────────┴─────────────────────────────────────────────────────────────────&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Total resolve: 6.357ms, total load: 6.796ms&lt;/p&gt; &#xA;&lt;h2&gt;Relevant Neovim PR&#39;s&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/pull/15566&#34;&gt;libs: vendor libmpack and libmpack-lua&lt;/a&gt; [merged]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/pull/16175&#34;&gt;fix(vim.mpack): rename pack/unpack =&amp;gt; encode/decode&lt;/a&gt; [merged]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/pull/15867&#34;&gt;fix(runtime): add compressed representation to &amp;amp;rtp&lt;/a&gt; [merged]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/pull/15973&#34;&gt;fix(runtime): don&#39;t use regexes inside lua require&#39;mod&#39;&lt;/a&gt; [merged]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/pull/17302&#34;&gt;fix(lua): restore priority of the preloader&lt;/a&gt; [merged]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/pull/17200&#34;&gt;refactor(lua): call loadfile internally instead of luaL_loadfile&lt;/a&gt; [merged]&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim/pull/15436&#34;&gt;feat(lua): startup profiling&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;All credit goes to @bfredl who implemented the majority of this plugin in &lt;a href=&#34;https://github.com/neovim/neovim/pull/15436&#34;&gt;https://github.com/neovim/neovim/pull/15436&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>