<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-30T01:38:05Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CUFTA22/dotfiles</title>
    <updated>2022-10-30T01:38:05Z</updated>
    <id>tag:github.com,2022-10-30:/CUFTA22/dotfiles</id>
    <link href="https://github.com/CUFTA22/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Catppuccin with AwesomeWM&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Catppuccin rice&lt;/h1&gt; &#xA;&lt;h3&gt;Awesome&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CUFTA22/dotfiles/master/assets/awesome.png&#34; alt=&#34;rice&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Qtile&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CUFTA22/dotfiles/master/assets/qtile.png&#34; alt=&#34;rice&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Setup - Arch&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install window manager&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Awesome&#xA;yay -S awesome-git&#xA;&#xA;# Qtile&#xA;yay -S qtile-git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install softwares&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&#xA;sudo pacman -S lxappearance lxsession rofi nemo brightnessctl playerctl alsa-utils papirus-icon-theme ttf-roboto catppuccin-gtk-theme network-manager-applet pasystray&#xA;&#xA;yay -S picom-jonaburg-git lain-git cava cbonsai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Themes&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/PapirusDevelopmentTeam/papirus-icon-theme&#34;&gt;Papirus - Icon theme&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/catppuccin&#34;&gt;Catppuccin - Gtk theme&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>nvim-pack/nvim-spectre</title>
    <updated>2022-10-30T01:38:05Z</updated>
    <id>tag:github.com,2022-10-30:/nvim-pack/nvim-spectre</id>
    <link href="https://github.com/nvim-pack/nvim-spectre" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Find the enemy and replace them with dark power.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-spectre&lt;/h1&gt; &#xA;&lt;p&gt;A search panel for neovim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Spectre&lt;/strong&gt; &lt;strong&gt;find the enemy and replace them with dark power.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/windwp/nvim-spectre/wiki/assets/demospectre.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Why Spectre?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use regex in search&lt;/li&gt; &#xA; &lt;li&gt;It can filter search by path glob (filetype)&lt;/li&gt; &#xA; &lt;li&gt;It only search when you leave &lt;strong&gt;Insert Mode&lt;/strong&gt;. You don&#39;t need a typeahead function . It always search when you type and it is very useless on search with regex&lt;/li&gt; &#xA; &lt;li&gt;Use 1 buffer and you can edit or move&lt;/li&gt; &#xA; &lt;li&gt;A tool to replace text on project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;Plug &#39;nvim-lua/plenary.nvim&#39;&#xA;Plug &#39;windwp/nvim-spectre&#39;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You need install rg and sed&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;BurntSushi/ripgrep&lt;/a&gt; (finder)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-web-devicons&#34;&gt;devicons&lt;/a&gt; (icons)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.gnu.org/software/sed/&#34;&gt;sed&lt;/a&gt; (replace tool)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;MacOs&lt;/h3&gt; &#xA;&lt;p&gt;you need run &lt;code&gt;brew install gnu-sed&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;nnoremap &amp;lt;leader&amp;gt;S &amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).open()&amp;lt;CR&amp;gt;&#xA;&#xA;&#34;search current word&#xA;nnoremap &amp;lt;leader&amp;gt;sw &amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).open_visual({select_word=true})&amp;lt;CR&amp;gt;&#xA;vnoremap &amp;lt;leader&amp;gt;s &amp;lt;esc&amp;gt;:lua require(&#39;spectre&#39;).open_visual()&amp;lt;CR&amp;gt;&#xA;&#34;  search in current file&#xA;nnoremap &amp;lt;leader&amp;gt;sp viw:lua require(&#39;spectre&#39;).open_file_search()&amp;lt;cr&amp;gt;&#xA;&#34; run command :Spectre&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Commit your file before you replace text. It does not support undo&lt;/li&gt; &#xA; &lt;li&gt;Don&#39;t use your crazy vim skill to edit result text or UI.&lt;/li&gt; &#xA; &lt;li&gt;You can use &lt;code&gt;dd&lt;/code&gt; to toggle result item&lt;/li&gt; &#xA; &lt;li&gt;You need to use &lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt; not &lt;code&gt;&amp;lt;c-c&amp;gt;&lt;/code&gt; to leave insert mode.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Regex Issue&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;default regex use vim regex &lt;strong&gt;magic mode&lt;/strong&gt; &lt;code&gt;\v&lt;/code&gt; and &lt;strong&gt;no-ignore-case&lt;/strong&gt; .&lt;/li&gt; &#xA; &lt;li&gt;It has different regex of search command &lt;code&gt;rg&lt;/code&gt; and replace command &lt;code&gt;sed&lt;/code&gt; so careful if you want to replace text.&lt;/li&gt; &#xA; &lt;li&gt;It has a different of highlight result because I use vim regex to highlight text so careful but you can try to replace.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Replace&lt;/h2&gt; &#xA;&lt;p&gt;you can replace with group by &lt;code&gt;\0-9&lt;/code&gt; like vim and sed if you run command replace and don&#39;t see the change. you need to reload file with &lt;code&gt;:e&lt;/code&gt; because &lt;code&gt;sed&lt;/code&gt; is replace outside vim.&lt;/p&gt; &#xA;&lt;h2&gt;Customize&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;spectre&#39;).setup()&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Change any setting if you don&#39;t like it. &lt;strong&gt;Don&#39;t copy all&lt;/strong&gt; . It can be change when plugin update so better use a default setting.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;spectre&#39;).setup({&#xA;&#xA;  color_devicons = true,&#xA;  open_cmd = &#39;vnew&#39;,&#xA;  live_update = false, -- auto excute search again when you write any file in vim&#xA;  line_sep_start = &#39;┌-----------------------------------------&#39;,&#xA;  result_padding = &#39;¦  &#39;,&#xA;  line_sep       = &#39;└-----------------------------------------&#39;,&#xA;  highlight = {&#xA;      ui = &#34;String&#34;,&#xA;      search = &#34;DiffChange&#34;,&#xA;      replace = &#34;DiffDelete&#34;&#xA;  },&#xA;  mapping={&#xA;    [&#39;toggle_line&#39;] = {&#xA;        map = &#34;dd&#34;,&#xA;        cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).toggle_line()&amp;lt;CR&amp;gt;&#34;,&#xA;        desc = &#34;toggle current item&#34;&#xA;    },&#xA;    [&#39;enter_file&#39;] = {&#xA;        map = &#34;&amp;lt;cr&amp;gt;&#34;,&#xA;        cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre.actions&#39;).select_entry()&amp;lt;CR&amp;gt;&#34;,&#xA;        desc = &#34;goto current file&#34;&#xA;    },&#xA;    [&#39;send_to_qf&#39;] = {&#xA;        map = &#34;&amp;lt;leader&amp;gt;q&#34;,&#xA;        cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre.actions&#39;).send_to_qf()&amp;lt;CR&amp;gt;&#34;,&#xA;        desc = &#34;send all item to quickfix&#34;&#xA;    },&#xA;    [&#39;replace_cmd&#39;] = {&#xA;        map = &#34;&amp;lt;leader&amp;gt;c&#34;,&#xA;        cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre.actions&#39;).replace_cmd()&amp;lt;CR&amp;gt;&#34;,&#xA;        desc = &#34;input replace vim command&#34;&#xA;    },&#xA;    [&#39;show_option_menu&#39;] = {&#xA;        map = &#34;&amp;lt;leader&amp;gt;o&#34;,&#xA;        cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).show_options()&amp;lt;CR&amp;gt;&#34;,&#xA;        desc = &#34;show option&#34;&#xA;    },&#xA;    [&#39;run_current_replace&#39;] = {&#xA;      map = &#34;&amp;lt;leader&amp;gt;rc&#34;,&#xA;      cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre.actions&#39;).run_current_replace()&amp;lt;CR&amp;gt;&#34;,&#xA;      desc = &#34;replace current line&#34;&#xA;    },&#xA;    [&#39;run_replace&#39;] = {&#xA;        map = &#34;&amp;lt;leader&amp;gt;R&#34;,&#xA;        cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre.actions&#39;).run_replace()&amp;lt;CR&amp;gt;&#34;,&#xA;        desc = &#34;replace all&#34;&#xA;    },&#xA;    [&#39;change_view_mode&#39;] = {&#xA;        map = &#34;&amp;lt;leader&amp;gt;v&#34;,&#xA;        cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).change_view()&amp;lt;CR&amp;gt;&#34;,&#xA;        desc = &#34;change result view mode&#34;&#xA;    },&#xA;    [&#39;change_replace_sed&#39;] = {&#xA;      map = &#34;trs&#34;,&#xA;      cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).change_engine_replace(&#39;sed&#39;)&amp;lt;CR&amp;gt;&#34;,&#xA;      desc = &#34;use sed to replace&#34;&#xA;    },&#xA;    [&#39;change_replace_oxi&#39;] = {&#xA;      map = &#34;tro&#34;,&#xA;      cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).change_engine_replace(&#39;oxi&#39;)&amp;lt;CR&amp;gt;&#34;,&#xA;      desc = &#34;use oxi to replace&#34;&#xA;    },&#xA;    [&#39;toggle_live_update&#39;]={&#xA;      map = &#34;tu&#34;,&#xA;      cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).toggle_live_update()&amp;lt;CR&amp;gt;&#34;,&#xA;      desc = &#34;update change when vim write file.&#34;&#xA;    },&#xA;    [&#39;toggle_ignore_case&#39;] = {&#xA;      map = &#34;ti&#34;,&#xA;      cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).change_options(&#39;ignore-case&#39;)&amp;lt;CR&amp;gt;&#34;,&#xA;      desc = &#34;toggle ignore case&#34;&#xA;    },&#xA;    [&#39;toggle_ignore_hidden&#39;] = {&#xA;      map = &#34;th&#34;,&#xA;      cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).change_options(&#39;hidden&#39;)&amp;lt;CR&amp;gt;&#34;,&#xA;      desc = &#34;toggle search hidden&#34;&#xA;    },&#xA;    [&#39;resume_last_search&#39;] = {&#xA;      map = &#34;&amp;lt;leader&amp;gt;l&#34;,&#xA;      cmd = &#34;&amp;lt;cmd&amp;gt;lua require(&#39;spectre&#39;).resume_last_search()&amp;lt;CR&amp;gt;&#34;,&#xA;      desc = &#34;resume last search before close&#34;&#xA;    },&#xA;    -- you can put your mapping here it only use normal mode&#xA;  },&#xA;  find_engine = {&#xA;    -- rg is map with finder_cmd&#xA;    [&#39;rg&#39;] = {&#xA;      cmd = &#34;rg&#34;,&#xA;      -- default args&#xA;      args = {&#xA;        &#39;--color=never&#39;,&#xA;        &#39;--no-heading&#39;,&#xA;        &#39;--with-filename&#39;,&#xA;        &#39;--line-number&#39;,&#xA;        &#39;--column&#39;,&#xA;      } ,&#xA;      options = {&#xA;        [&#39;ignore-case&#39;] = {&#xA;          value= &#34;--ignore-case&#34;,&#xA;          icon=&#34;[I]&#34;,&#xA;          desc=&#34;ignore case&#34;&#xA;        },&#xA;        [&#39;hidden&#39;] = {&#xA;          value=&#34;--hidden&#34;,&#xA;          desc=&#34;hidden file&#34;,&#xA;          icon=&#34;[H]&#34;&#xA;        },&#xA;        -- you can put any rg search option you want here it can toggle with&#xA;        -- show_option function&#xA;      }&#xA;    },&#xA;    [&#39;ag&#39;] = {&#xA;      cmd = &#34;ag&#34;,&#xA;      args = {&#xA;        &#39;--vimgrep&#39;,&#xA;        &#39;-s&#39;&#xA;      } ,&#xA;      options = {&#xA;        [&#39;ignore-case&#39;] = {&#xA;          value= &#34;-i&#34;,&#xA;          icon=&#34;[I]&#34;,&#xA;          desc=&#34;ignore case&#34;&#xA;        },&#xA;        [&#39;hidden&#39;] = {&#xA;          value=&#34;--hidden&#34;,&#xA;          desc=&#34;hidden file&#34;,&#xA;          icon=&#34;[H]&#34;&#xA;        },&#xA;      },&#xA;    },&#xA;  },&#xA;  replace_engine={&#xA;      [&#39;sed&#39;]={&#xA;          cmd = &#34;sed&#34;,&#xA;          args = nil,&#xA;          options = {&#xA;            [&#39;ignore-case&#39;] = {&#xA;              value= &#34;--ignore-case&#34;,&#xA;              icon=&#34;[I]&#34;,&#xA;              desc=&#34;ignore case&#34;&#xA;            },&#xA;          }&#xA;      },&#xA;      -- call rust code by nvim-oxi to replace&#xA;      [&#39;oxi&#39;] = {&#xA;        cmd = &#39;oxi&#39;,&#xA;        args = {},&#xA;        options = {&#xA;          [&#39;ignore-case&#39;] = {&#xA;            value = &#34;i&#34;,&#xA;            icon = &#34;[I]&#34;,&#xA;            desc = &#34;ignore case&#34;&#xA;          },&#xA;        }&#xA;      }&#xA;  },&#xA;  default = {&#xA;      find = {&#xA;          --pick one of item in find_engine&#xA;          cmd = &#34;rg&#34;,&#xA;          options = {&#34;ignore-case&#34;}&#xA;      },&#xA;      replace={&#xA;          --pick one of item in replace_engine&#xA;          cmd = &#34;sed&#34;&#xA;      }&#xA;  },&#xA;  replace_vim_cmd = &#34;cdo&#34;,&#xA;  is_open_target_win = true, --open file on opener window&#xA;  is_insert_mode = false  -- start open panel on is_insert_mode&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom function&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- if you want to get item from spectre panel.&#xA;-- you can use some following function to get data from spectre.&#xA;require(&#39;spectre.actions&#39;).get_current_entry()&#xA;require(&#39;spectre.actions&#39;).get_all_entries()&#xA;require(&#39;spectre.actions&#39;).get_state()&#xA;&#xA;-- write your custom open function&#xA;require(&#39;spectre&#39;).open({&#xA;  is_insert_mode = true,&#xA;  cwd = &#34;~/.config/nvim&#34;,&#xA;  search_text=&#34;test&#34;,&#xA;  replace_text=&#34;test&#34;,&#xA;  path=&#34;lua/**/*.lua&#34;,&#xA;  is_close = false, --  close an exists instance of spectre and open new&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Replace Method&lt;/h2&gt; &#xA;&lt;p&gt;There are 2 replace method sed and oxi.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sed&lt;/th&gt; &#xA;   &lt;th&gt;oxi&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;group number by &#39;\0&#39;&lt;/td&gt; &#xA;   &lt;td&gt;group number by &#39;$0&#39;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;use vim to highlight on UI&lt;/td&gt; &#xA;   &lt;td&gt;use rust to highlight on UI&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;use sed to replace&lt;/td&gt; &#xA;   &lt;td&gt;use rust to replace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;run sed command&lt;/td&gt; &#xA;   &lt;td&gt;call rust code directly by nvim-oxi&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Install oxi:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;you need install cargo and run command: &lt;a href=&#34;https://raw.githubusercontent.com/nvim-pack/nvim-spectre/master/build.sh&#34;&gt;build.sh&lt;/a&gt; &lt;a href=&#34;https://github.com/noib3/nvim-oxi&#34;&gt;nvim-oxi&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;set default replace command to &#34;oxi&#34; on setup()&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;spectre&#39;).setup({&#xA;    default = {&#xA;        replace = {&#xA;            cmd = &#34;oxi&#34;&#xA;       }&#xA;    }&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;add custom statusline &lt;a href=&#34;https://github.com/windwp/windline.nvim&#34;&gt;windline&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;    require(&#39;windline&#39;).add_status(&#xA;        require(&#39;spectre.state_utils&#39;).status_line()&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;what is Spectre?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I want create a &lt;code&gt;Search Panel&lt;/code&gt; but this name is not cool. I get the name of a hero on a game. Spectre has a skill to find enemy on global map so I use it:)&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>