<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-11-08T01:35:18Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mrcjkb/rustaceanvim</title>
    <updated>2023-11-08T01:35:18Z</updated>
    <id>tag:github.com,2023-11-08:/mrcjkb/rustaceanvim</id>
    <link href="https://github.com/mrcjkb/rustaceanvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Supercharge your Rust experience in Neovim! A heavily modified fork of rust-tools.nvim&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://github.com/mrcjkb/rustaceanvim&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/rustaceanvim.svg?sanitize=true&#34; alt=&#34;rustaceanvim&#34;&gt; &lt;/a&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/doc/rustaceanvim.txt&#34;&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/mrcjkb/rustaceanvim/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.yml&#34;&gt;Report Bug&lt;/a&gt; · &lt;a href=&#34;https://github.com/mrcjkb/rustaceanvim/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.yml&#34;&gt;Request Feature&lt;/a&gt; · &lt;a href=&#34;https://github.com/mrcjkb/rustaceanvim/discussions/new?category=q-a&#34;&gt;Ask Question&lt;/a&gt; &lt;/p&gt; &#xA; &lt;p&gt; &lt;strong&gt; Supercharge your Rust experience in &lt;a href=&#34;https://neovim.io/&#34;&gt;Neovim&lt;/a&gt;!&lt;br&gt; A heavily modified fork of &lt;a href=&#34;https://github.com/simrat39/rust-tools.nvim&#34;&gt;rust-tools.nvim&lt;/a&gt;&lt;br&gt; &lt;/strong&gt; &lt;/p&gt; &#xA; &lt;p&gt;🦀&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://neovim.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/NeoVim-%2357A143.svg?&amp;amp;style=for-the-badge&amp;amp;logo=neovim&amp;amp;logoColor=white&#34; alt=&#34;Neovim&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.lua.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/lua-%232C2D72.svg?style=for-the-badge&amp;amp;logo=lua&amp;amp;logoColor=white&#34; alt=&#34;Lua&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.rust-lang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Rust-000000?style=for-the-badge&amp;amp;logo=rust&amp;amp;logoColor=white&#34; alt=&#34;Rust&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nixos.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/nix-0175C2?style=for-the-badge&amp;amp;logo=NixOS&amp;amp;logoColor=white&#34; alt=&#34;Nix&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mrcjkb/rustaceanvim/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/mrcjkb/rustaceanvim.svg?style=for-the-badge&#34; alt=&#34;GPL2 License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mrcjkb/rustaceanvim/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/mrcjkb/rustaceanvim.svg?style=for-the-badge&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mrcjkb/rustaceanvim/actions/workflows/nix-build.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/mrcjkb/rustaceanvim/nix-build.yml?style=for-the-badge&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://luarocks.org/modules/MrcJkb/rustaceanvim&#34;&gt;&lt;img src=&#34;https://img.shields.io/luarocks/v/MrcJkb/rustaceanvim?logo=lua&amp;amp;color=purple&amp;amp;style=for-the-badge&#34; alt=&#34;LuaRocks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Just works. &lt;a href=&#34;https://mrcjkb.dev/posts/2023-08-22-setup.html&#34;&gt;No need to call &lt;code&gt;setup&lt;/code&gt;!&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;No dependency on &lt;code&gt;lspconfig&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Lazy initialization by design.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Quick Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/#quick-setup&#34;&gt;Quick setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/#advanced-configuration&#34;&gt;Advanced configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;h3&gt;Required&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;neovim &amp;gt;= 0.9&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rust-analyzer.github.io/&#34;&gt;&lt;code&gt;rust-analyzer&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Optional&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://graphviz.org/doc/info/lang.html&#34;&gt;&lt;code&gt;dot&lt;/code&gt; from &lt;code&gt;graphviz&lt;/code&gt;&lt;/a&gt;, for crate graphs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doc.rust-lang.org/cargo/&#34;&gt;&lt;code&gt;cargo&lt;/code&gt;&lt;/a&gt;, required for Cargo projects.&lt;/li&gt; &#xA; &lt;li&gt;A debug adapter (e.g. &lt;a href=&#34;https://lldb.llvm.org/&#34;&gt;&lt;code&gt;lldb&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://github.com/vadimcn/codelldb&#34;&gt;&lt;code&gt;codelldb&lt;/code&gt;&lt;/a&gt;) and &lt;a href=&#34;https://github.com/mfussenegger/nvim-dap&#34;&gt;&lt;code&gt;nvim-dap&lt;/code&gt;&lt;/a&gt;, required for debugging.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This plugin is &lt;a href=&#34;https://luarocks.org/modules/MrcJkb/rustaceanvim&#34;&gt;available on LuaRocks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Example using &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;&lt;code&gt;lazy.nvim&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#39;mrcjkb/rustaceanvim&#39;,&#xA;  version = &#39;^3&#39;, -- Recommended&#xA;  ft = { &#39;rust&#39; },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;It is suggested to pin to tagged releases if you would like to avoid breaking changes.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To manually generate documentation, use &lt;code&gt;:helptags ALL&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;For NixOS users with flakes enabled, this project provides outputs in the form of a package and an overlay; use it as you wish in your NixOS or home-manager configuration. It is also available in &lt;code&gt;nixpkgs&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Look at the configuration information below to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Quick Setup&lt;/h2&gt; &#xA;&lt;p&gt;This plugin automatically configures the &lt;code&gt;rust-analyzer&lt;/code&gt; builtin LSP client and integrates with other Rust tools. See the &lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/#usage&#34;&gt;Usage&lt;/a&gt; section for more info.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;Do not call the &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;&lt;code&gt;nvim-lspconfig.rust_analyzer&lt;/code&gt;&lt;/a&gt; setup or set up the lsp client for &lt;code&gt;rust-analyzer&lt;/code&gt; manually, as doing so may cause conflicts.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This is a filetype plugin that works out of the box, so there is no need to call a &lt;code&gt;setup&lt;/code&gt; function or configure anything to get this plugin working.&lt;/p&gt; &#xA;&lt;p&gt;You will most likely want to add some keymaps. Most keymaps are only useful in rust files, so I suggest you define them in &lt;code&gt;~/.config/nvim/after/ftplugin/rust.lua&lt;/code&gt;[^1]&lt;/p&gt; &#xA;&lt;p&gt;[^1]: See &lt;a href=&#34;https://neovim.io/doc/user/starting.html#base-directories&#34;&gt;&lt;code&gt;:help base-directories&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local bufnr = vim.api.nvim_get_current_buf()&#xA;vim.keymap.set(&#xA;  &#34;n&#34;, &#xA;  &#34;&amp;lt;leader&amp;gt;a&#34;, &#xA;  function()&#xA;    vim.cmd.RustLsp(&#39;codeAction&#39;), &#xA;  end,&#xA;  { silent = true, buffer = bufnr }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;For more LSP related keymaps, &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig#suggested-configuration&#34;&gt;see the &lt;code&gt;nvim-lspconfig&lt;/code&gt; suggestions&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/#advanced-configuration&#34;&gt;Advanced configuration&lt;/a&gt; section for more configuration options.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Debugging&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp debuggables [last?]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp {&#39;debuggables&#39;, &#39;last&#39; --[[ optional ]] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/mrcjkb/rustaceanvim/assets/12857160/ce17d228-ae0a-416a-8159-fe095a85dcb7&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Runnables&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp runnables [last?]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp {&#39;runnables&#39;, &#39;last&#39; --[[ optional ]] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/mrcjkb/rustaceanvim/assets/12857160/95183192-5669-4a07-804b-83f67831be57&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Expand Macros Recursively&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp expandMacro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp(&#39;expandMacro&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/mrcjkb/rustaceanvim/assets/12857160/477d9e58-74b0-42ff-87ca-2fef34d06db3&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Rebuild proc macros&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp rebuildProcMacros&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp(&#39;rebuildProcMacros&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Move Item Up/Down&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp moveItem up&#xA;:RustLsp moveItem down&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp { &#39;moveItem&#39;,  &#39;up&#39; }&#xA;vim.cmd.RustLsp { &#39;moveItem&#39;,  &#39;down&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Hover Actions&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Note: To activate hover actions, run the command twice. This will move you into the window, then press enter on the selection you want. Alternatively, you can set &lt;code&gt;auto_focus&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in your config and you will automatically enter the hover actions window.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp hover actions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp { &#39;hover&#39;, &#39;actions&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/mrcjkb/rustaceanvim/assets/12857160/c7b6c730-4439-47b0-9a75-7ea4e6831f7a&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Hover Range&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp hover range&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp { &#39;hover&#39;, &#39;range&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Explain errors&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Display a hover window with explanations from the &lt;a href=&#34;https://doc.rust-lang.org/error_codes/error-index.html&#34;&gt;rust error codes index&lt;/a&gt; over error diagnostics (if they have an error code).&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp explainError&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp(&#39;explainError&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/mrcjkb/rustaceanvim/assets/12857160/bac9b31c-22ca-40c4-bfd3-b8c5ba4cc49a&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Open Cargo.toml&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp openCargo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp(&#39;openCargo&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Parent Module&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp parentModule&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp(&#39;parentModule&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Join Lines&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp joinLines&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp(&#39;joinLines&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Structural Search Replace&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp ssr [query]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp { &#39;ssr&#39;, &#39;query&#39; --[[ optional ]] }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;View Crate Graph&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp crateGraph [backend [output]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp { &#39;crateGraph&#39;, &#39;[backend]&#39;, &#39;[output]&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;View Syntax Tree&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp syntaxTree&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp(&#39;syntaxTree&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/mrcjkb/rustaceanvim/assets/12857160/c865a263-1568-41c7-a32b-bc4a34b198dc&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; &lt;b&gt;Fly check&lt;/b&gt; &lt;/summary&gt; &#xA; &lt;p&gt;Run &lt;code&gt;cargo check&lt;/code&gt; or another compatible command (f.x. &lt;code&gt;clippy&lt;/code&gt;) in a background thread and provide LSP diagnostics based on the output of the command.&lt;/p&gt; &#xA; &lt;p&gt;Useful in large projects where running &lt;code&gt;cargo check&lt;/code&gt; on each save can be costly.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vimscript&#34;&gt;:RustLsp flyCheck&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.RustLsp(&#39;flyCheck&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;h2&gt;Advanced configuration&lt;/h2&gt; &#xA;&lt;p&gt;To modify the default configuration, set &lt;code&gt;vim.g.rustaceanvim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/doc/rustaceanvim.txt&#34;&gt;&lt;code&gt;:help rustaceanvim.config&lt;/code&gt;&lt;/a&gt; for a detailed documentation of all available configuration options. You may need to run &lt;code&gt;:helptags ALL&lt;/code&gt; if the documentation has not been installed.&lt;/li&gt; &#xA; &lt;li&gt;The default configuration &lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/lua/rustaceanvim/config/internal.lua&#34;&gt;can be found here (see &lt;code&gt;RustaceanDefaultConfig&lt;/code&gt;)&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;For detailed descriptions of the language server configs, see the &lt;a href=&#34;https://rust-analyzer.github.io/manual.html#configuration&#34;&gt;&lt;code&gt;rust-analyzer&lt;/code&gt; documentation&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The options shown below are the defaults. You only need to pass the keys to the setup function that you want to be changed, because the defaults are applied for keys that are not provided.&lt;/p&gt; &#xA;&lt;p&gt;Example config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.g.rustaceanvim = {&#xA;  -- Plugin configuration&#xA;  tools = {&#xA;  },&#xA;  -- LSP configuration&#xA;  server = {&#xA;    on_attach = function(client, bufnr)&#xA;      -- you can also put keymaps in here&#xA;    end,&#xA;    settings = {&#xA;      -- rust-analyzer language server configuration&#xA;      [&#39;rust-analyzer&#39;] = {&#xA;      },&#xA;    },&#xA;  },&#xA;  -- DAP configuration&#xA;  dap = {&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;vim.g.rustaceanvim&lt;/code&gt; can also be a function that returns a table.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Using &lt;code&gt;codelldb&lt;/code&gt; for debugging&lt;/h3&gt; &#xA;&lt;p&gt;For Rust, &lt;code&gt;codelldb&lt;/code&gt; from the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb&#34;&gt;CodeLLDB VSCode extension&lt;/a&gt; provides a better experience than &lt;code&gt;lldb&lt;/code&gt;. If you are using a distribution that lets you install the &lt;code&gt;codelldb&lt;/code&gt; executable, this plugin will automatically detect it and configure itself to use it as a debug adapter.&lt;/p&gt; &#xA;&lt;p&gt;Some examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;NixOS: &lt;a href=&#34;https://github.com/NixOS/nixpkgs/raw/nixos-unstable/pkgs/applications/editors/vscode/extensions/vadimcn.vscode-lldb/default.nix#L134&#34;&gt;&lt;code&gt;vscode-extensions.vadimcn.vscode-lldb.adapter&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Arch Linux: &lt;a href=&#34;https://aur.archlinux.org/packages/codelldb-bin&#34;&gt;&lt;code&gt;codelldb-bin&lt;/code&gt; (AUR)&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If your distribution does not have a &lt;code&gt;codelldb&lt;/code&gt; package, you can configure it as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb&#34;&gt;CodeLLDB VSCode extension&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Find out where it is installed. On Linux, this is typically in &lt;code&gt;$HOME/.vscode/extensions/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Update your configuration:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.g.rustaceanvim = function()&#xA;  -- Update this path&#xA;  local extension_path = vim.env.HOME .. &#39;/.vscode/extensions/vadimcn.vscode-lldb-1.10.0/&#39;&#xA;  local codelldb_path = extension_path .. &#39;adapter/codelldb&#39;&#xA;  local liblldb_path = extension_path .. &#39;lldb/lib/liblldb&#39;&#xA;  local this_os = vim.uv.os_uname().sysname;&#xA;&#xA;  -- The path is different on Windows&#xA;  if this_os:find &#34;Windows&#34; then&#xA;    codelldb_path = extension_path .. &#34;adapter\\codelldb.exe&#34;&#xA;    liblldb_path = extension_path .. &#34;lldb\\bin\\liblldb.dll&#34;&#xA;  else&#xA;    -- The liblldb extension is .so for Linux and .dylib for MacOS&#xA;    liblldb_path = liblldb_path .. (this_os == &#34;Linux&#34; and &#34;.so&#34; or &#34;.dylib&#34;)&#xA;  end&#xA;&#xA;  return {&#xA;    dap = {&#xA;      adapter = require(&#39;rustaceanvim.dap&#39;).get_codelldb_adapter(codelldb_path, liblldb_path),&#xA;    },&#xA;  }&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;h3&gt;Health checks&lt;/h3&gt; &#xA;&lt;p&gt;For a health check, run &lt;code&gt;:checkhealth rustaceanvim&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Minimal config&lt;/h3&gt; &#xA;&lt;p&gt;To troubleshoot this plugin with a minimal config in a temporary directory, you can try &lt;a href=&#34;https://raw.githubusercontent.com/mrcjkb/rustaceanvim/master/troubleshooting/minimal.lua&#34;&gt;minimal.lua&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;mkdir -p /tmp/minimal/&#xA;NVIM_DATA_MINIMAL=&#34;/tmp/minimal&#34; NVIM_APP_NAME=&#34;nvim-minimal&#34; nvim -u minimal.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;If you use Nix, you can run &lt;code&gt;nix run &#34;github:mrcjkb/rustaceanvim#nvim-minimal-stable&#34;&lt;/code&gt;. or &lt;code&gt;nix run &#34;github:mrcjkb/rustaceanvim#nvim-minimal-nightly&#34;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;If you cannot reproduce your issue with a minimal config, it may be caused by another plugin. In this case, add additional plugins and their configurations to &lt;code&gt;minimal.lua&lt;/code&gt;, until you can reproduce it.&lt;/p&gt; &#xA;&lt;h2&gt;Related Projects&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/simrat39/rust-tools.nvim&#34;&gt;&lt;code&gt;simrat39/rust-tools.nvim&lt;/code&gt;&lt;/a&gt; This plugin is a heavily modified fork of &lt;code&gt;rust-tools.nvim&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Saecki/crates.nvim&#34;&gt;&lt;code&gt;Saecki/crates.nvim&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vxpm/ferris.nvim&#34;&gt;&lt;code&gt;vxpm/ferris.nvim&lt;/code&gt;&lt;/a&gt; Geared towards people who prefer manual LSP client configuration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;rust-tools.nvim&lt;/code&gt; draws inspiration from &lt;a href=&#34;https://github.com/akinsho/flutter-tools.nvim&#34;&gt;&lt;code&gt;akinsho/flutter-tools.nvim&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt;</summary>
  </entry>
  <entry>
    <title>VidocqH/auto-indent.nvim</title>
    <updated>2023-11-08T01:35:18Z</updated>
    <id>tag:github.com,2023-11-08:/VidocqH/auto-indent.nvim</id>
    <link href="https://github.com/VidocqH/auto-indent.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Auto indent like VSCode when cursor at the first column and press &lt;TAB&gt; key&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AutoIndent.nvim&lt;/h1&gt; &#xA;&lt;p&gt;A simple util providing auto indent like VSCode when cursor at the first column and press &amp;lt;TAB&amp;gt; key&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/VidocqH/auto-indent.nvim/assets/16725418/b0eda63f-9b7d-4708-8477-00bde49d8f40&#34;&gt;https://github.com/VidocqH/auto-indent.nvim/assets/16725418/b0eda63f-9b7d-4708-8477-00bde49d8f40&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Lazy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;requir(&#34;lazy&#34;).setup({&#xA;  {&#xA;    &#39;vidocqh/auto-indent.nvim&#39;,&#xA;    opts = {},&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Default Config&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;auto-indent&#34;).setup({&#xA;  lightmode = true,        -- Lightmode assumes tabstop and indentexpr not change within buffer&#39;s lifetime&#xA;  indentexpr = nil,        -- Use vim.bo.indentexpr by default, see &#39;Custom Indent Evaluate Method&#39;&#xA;  ignore_filetype = {},    -- Disable plugin for specific filetypes, e.g. ignore_filetype = { &#39;javascript&#39; }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Custom Indent Evaluate Method&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;indentexpr&lt;/code&gt; should be a function returns quantity of indents&lt;/p&gt; &#xA;&lt;p&gt;example using &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter#indentation&#34;&gt;treesitter.indent&lt;/a&gt; module&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  ---@param lnum: number&#xA;  ---@return number&#xA;  indentexpr = function(lnum)&#xA;    return require(&#34;nvim-treesitter.indent&#34;).get_indent(lnum)&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>oxfist/night-owl.nvim</title>
    <updated>2023-11-08T01:35:18Z</updated>
    <id>tag:github.com,2023-11-08:/oxfist/night-owl.nvim</id>
    <link href="https://github.com/oxfist/night-owl.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🦉 🌌 night-owl.nvim is a Night Owl colorscheme implementation for Neovim with support for Tree-sitter and semantic tokens&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h3&gt;🦉 night-owl.nvim 🌌&lt;/h3&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/#contributors&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/all-contributors/oxfist/night-owl.nvim?color=ee8449&amp;amp;style=flat-square&#34; alt=&#34;All Contributors&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/img/dark_logo.png&#34; height=&#34;300&#34; alt=&#34;Illustration of an owl&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;The &lt;em&gt;best&lt;/em&gt; implementation of &lt;a href=&#34;https://github.com/sdras/night-owl-vscode-theme&#34;&gt;Sarah Drasner&#39;s Night Owl VSCode theme&lt;/a&gt; for Neovim with Treesitter support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/img/calculator.png&#34; alt=&#34;Syntax highlight demo image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📦 Install In Zero Time&lt;/h2&gt; &#xA;&lt;h3&gt;packer.nvim&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use(&#34;oxfist/night-owl.nvim&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;lazy.nvim&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lazy&#34;).setup({&#xA;  &#34;oxfist/night-owl.nvim&#34;,&#xA;  lazy = false, -- make sure we load this during startup if it is your main colorscheme&#xA;  priority = 1000, -- make sure to load this before all the other start plugins&#xA;  config = function()&#xA;    -- load the colorscheme here&#xA;    vim.cmd.colorscheme(&#34;night-owl&#34;)&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;vim-plug&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;oxfist/night-owl.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Start Using With A Single Line&lt;/h2&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] You can skip this step if you followed the &lt;code&gt;lazy.nvim&lt;/code&gt; setup, since that already sets the colorscheme.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;p&gt;Add the following line to your Lua configuration files, e.g. &lt;code&gt;~/.config/nvim/init.lua&lt;/code&gt; (your actual path might be different):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.cmd.colorscheme(&#34;night-owl&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To enable &lt;code&gt;night-owl&lt;/code&gt; for Lualine, simply set the theme like this in your settings 👇:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- This Lualine config should be somewhere in your config files&#xA;require(&#39;lualine&#39;).setup {&#xA;  options = {&#xA;    -- ... other configs&#xA;    theme = &#39;night-owl&#39;&#xA;    -- ... other configs&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🖥️ Requirements&lt;/h2&gt; &#xA;&lt;p&gt;TODO&lt;/p&gt; &#xA;&lt;h2&gt;🔎 Comparison&lt;/h2&gt; &#xA;&lt;p&gt;How does this port compare to the original VSCode theme? Check it out!&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Original Night Owl for VSCode&lt;/th&gt; &#xA;   &lt;th&gt;This Theme 🤩&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/img/vscode.png&#34; alt=&#34;Screenshot of VSCode theme&#34; width=&#34;1062&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/img/neovim.png&#34; alt=&#34;Screenshot of this theme&#34; width=&#34;1078&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;✨ Why Should You Pick &lt;em&gt;This&lt;/em&gt; Version of Night Owl?&lt;/h2&gt; &#xA;&lt;p&gt;This implementation of Night Owl solves several syntax highlight issues and discrepancies similar ports have when comparing to the original VSCode theme.&lt;/p&gt; &#xA;&lt;p&gt;The following features allow making the programming experience as close to the original VSCode theme as possible:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extended highlight groups&lt;/strong&gt;: through additional Treesitter queries. See &lt;a href=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/after/queries&#34;&gt;&lt;code&gt;after/queries&lt;/code&gt;&lt;/a&gt; for implementation details.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Different background color when Neovim is inactive&lt;/strong&gt;: through autocommands. See &lt;a href=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/after/plugin/autocmds.lua&#34;&gt;&lt;code&gt;after/plugin/autocmds.lua&lt;/code&gt;&lt;/a&gt; for implementation details.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;👇 Click to see comparison with &lt;code&gt;haishanh/night-owl.vim&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;With Treesitter installed you can see the overall look and feel is significantly different:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Different colors for several keywords like &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;, &lt;code&gt;function&lt;/code&gt;, etc. Same happens for class names &lt;code&gt;EditFishForm&lt;/code&gt; and &lt;code&gt;Sale&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Italics &lt;em&gt;not&lt;/em&gt; applied anywhere except for comments.&lt;/li&gt; &#xA;  &lt;li&gt;Italics &lt;em&gt;incorrectly&lt;/em&gt; applied to JSDoc keywords &lt;code&gt;@param&lt;/code&gt; and &lt;code&gt;@returns&lt;/code&gt;. &lt;br&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;&lt;a href=&#34;https://github.com/haishanh/night-owl.vim&#34;&gt;haishanh/night-owl.vim&lt;/a&gt;&lt;/th&gt; &#xA;    &lt;th&gt;This Theme&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/img/haishanh.png&#34; alt=&#34;Screenshot of haishanh theme&#34; width=&#34;900&#34;&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/img/neovim.png&#34; alt=&#34;Screenshot of this theme&#34; width=&#34;1014&#34;&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Language Support 🌐&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/6/6a/JavaScript-logo.png&#34; title=&#34;JavaScript&#34; alt=&#34;JavaScript&#34; width=&#34;50&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/4/4c/Typescript_logo_2020.svg?sanitize=true&#34; title=&#34;TypeScript&#34; alt=&#34;Typescript&#34; width=&#34;50&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/c9/JSON_vector_logo.svg?sanitize=true&#34; title=&#34;JSON&#34; alt=&#34;JSON&#34; width=&#34;50&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/4/48/Markdown-mark.svg?sanitize=true&#34; title=&#34;Markdown&#34; alt=&#34;Markdown&#34; width=&#34;50&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/cf/Lua-Logo.svg?sanitize=true&#34; title=&#34;Lua&#34; alt=&#34;Lua&#34; width=&#34;50&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;!-- &lt;tr&gt; --&gt; &#xA;  &lt;!--   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/9/9f/Vimlogo.svg&#34; alt=&#34;Vimscript&#34; width=&#34;50&#34; style=&#34;filter: grayscale(100%) blur(2px)&#34;/&gt;&lt;/td&gt; --&gt; &#xA;  &lt;!--   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/d/d5/Rust_programming_language_black_logo.svg&#34; alt=&#34;Rust&#34; width=&#34;50&#34; style=&#34;filter: grayscale(100%) blur(2px)&#34;/&gt;&lt;/td&gt; --&gt; &#xA;  &lt;!--   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/c/c3/Python-logo-notext.svg&#34; alt=&#34;Python&#34; width=&#34;50&#34; style=&#34;filter: grayscale(100%) blur(2px)&#34;/&gt;&lt;/td&gt; --&gt; &#xA;  &lt;!--   &lt;td&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/7/73/Ruby_logo.svg&#34; alt=&#34;Ruby&#34; width=&#34;50&#34; style=&#34;filter: grayscale(100%) blur(2px)&#34;/&gt;&lt;/td&gt; --&gt; &#xA;  &lt;!--   &lt;td&gt;&lt;/td&gt; --&gt; &#xA;  &lt;!-- &lt;/tr&gt; --&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] I&#39;ve personally optimized the colorscheme styling and robustness for these languages extensively enough to confidently say they look &lt;em&gt;acceptable&lt;/em&gt; to me. If you happen to build software with them, then I invite you to try out this theme! 🙂&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;p&gt;&lt;strong&gt;Coming Soon&lt;/strong&gt;: Lua ✅, Vimscript (in progress), TSX, R, Rust, Python, Ruby, Bash, and many more!&lt;/p&gt; &#xA;&lt;h2&gt;🧩 Plugins Supported&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua&#34;&gt;nvim-tree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim&#34;&gt;indent-blankline.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/toggleterm.nvim&#34;&gt;toggleterm.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎇 Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sdras&#34;&gt;Sarah Drasner&lt;/a&gt; first and foremost, for creating such a beautiful and artistic color scheme that has made, for me personally, so much more &lt;em&gt;pleasurable&lt;/em&gt; the exhilirating act of building software.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.monolisa.dev/&#34;&gt;https://www.monolisa.dev/&lt;/a&gt; for one of the sweetest programming fonts out there.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/CODE_OF_CONDUCT.md&#34;&gt;&lt;code&gt;CODE_OF_CONDUCT.md&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/oxfist/night-owl.nvim/main/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/oxfist&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/934679?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Andrés Quilodrán&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/dmnkgrc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4812676?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dominik Garcia&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/nanyaDev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/40901142?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rish&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.lampeweb.de&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/44268468?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Michael Lazarski&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://denisw.de&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1032624?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Denis Washington&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/kmlopez-hhl&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/132054595?v=4&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kmlopez-hhl&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt;</summary>
  </entry>
</feed>