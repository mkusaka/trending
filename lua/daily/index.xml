<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-16T01:45:42Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>folke/todo-comments.nvim</title>
    <updated>2022-06-16T01:45:42Z</updated>
    <id>tag:github.com,2022-06-16:/folke/todo-comments.nvim</id>
    <link href="https://github.com/folke/todo-comments.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;‚úÖ Highlight, list and search todo comments in your projects&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;‚úÖ Todo Comments&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;todo-comments&lt;/strong&gt; is a lua plugin for Neovim 0.5 to highlight and search for todo comments like &lt;code&gt;TODO&lt;/code&gt;, &lt;code&gt;HACK&lt;/code&gt;, &lt;code&gt;BUG&lt;/code&gt; in your code base.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/118135272-ad21e980-b3b7-11eb-881c-e45a4a3d6192.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;highlight&lt;/strong&gt; your todo comments in different styles&lt;/li&gt; &#xA; &lt;li&gt;optionally only highlights todos in comments using &lt;strong&gt;TreeSitter&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;configurable &lt;strong&gt;signs&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;open todos in a &lt;strong&gt;quickfix&lt;/strong&gt; list&lt;/li&gt; &#xA; &lt;li&gt;open todos in &lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;Trouble&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;search todos with &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.5.0&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;patched font&lt;/a&gt; for the icons, or change them to simple ASCII characters&lt;/li&gt; &#xA; &lt;li&gt;optional: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt; and &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt; are used for searching.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;Trouble&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;use {&#xA;  &#34;folke/todo-comments.nvim&#34;,&#xA;  requires = &#34;nvim-lua/plenary.nvim&#34;,&#xA;  config = function()&#xA;    require(&#34;todo-comments&#34;).setup {&#xA;      -- your configuration comes here&#xA;      -- or leave it empty to use the default settings&#xA;      -- refer to the configuration section below&#xA;    }&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Vim Script&#xA;Plug &#39;nvim-lua/plenary.nvim&#39;&#xA;Plug &#39;folke/todo-comments.nvim&#39;&#xA;&#xA;lua &amp;lt;&amp;lt; EOF&#xA;  require(&#34;todo-comments&#34;).setup {&#xA;    -- your configuration comes here&#xA;    -- or leave it empty to use the default settings&#xA;    -- refer to the configuration section below&#xA;  }&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Todo comes with the following defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  signs = true, -- show icons in the signs column&#xA;  sign_priority = 8, -- sign priority&#xA;  -- keywords recognized as todo comments&#xA;  keywords = {&#xA;    FIX = {&#xA;      icon = &#34;ÔÜà &#34;, -- icon used for the sign, and in search results&#xA;      color = &#34;error&#34;, -- can be a hex color, or a named color (see below)&#xA;      alt = { &#34;FIXME&#34;, &#34;BUG&#34;, &#34;FIXIT&#34;, &#34;ISSUE&#34; }, -- a set of other keywords that all map to this FIX keywords&#xA;      -- signs = false, -- configure signs for some keywords individually&#xA;    },&#xA;    TODO = { icon = &#34;ÔÄå &#34;, color = &#34;info&#34; },&#xA;    HACK = { icon = &#34;Ôíê &#34;, color = &#34;warning&#34; },&#xA;    WARN = { icon = &#34;ÔÅ± &#34;, color = &#34;warning&#34;, alt = { &#34;WARNING&#34;, &#34;XXX&#34; } },&#xA;    PERF = { icon = &#34;Ôôë &#34;, alt = { &#34;OPTIM&#34;, &#34;PERFORMANCE&#34;, &#34;OPTIMIZE&#34; } },&#xA;    NOTE = { icon = &#34;Ô°ß &#34;, color = &#34;hint&#34;, alt = { &#34;INFO&#34; } },&#xA;  },&#xA;  merge_keywords = true, -- when true, custom keywords will be merged with the defaults&#xA;  -- highlighting of the line containing the todo comment&#xA;  -- * before: highlights before the keyword (typically comment characters)&#xA;  -- * keyword: highlights of the keyword&#xA;  -- * after: highlights after the keyword (todo text)&#xA;  highlight = {&#xA;    before = &#34;&#34;, -- &#34;fg&#34; or &#34;bg&#34; or empty&#xA;    keyword = &#34;wide&#34;, -- &#34;fg&#34;, &#34;bg&#34;, &#34;wide&#34; or empty. (wide is the same as bg, but will also highlight surrounding characters)&#xA;    after = &#34;fg&#34;, -- &#34;fg&#34; or &#34;bg&#34; or empty&#xA;    pattern = [[.*&amp;lt;(KEYWORDS)\s*:]], -- pattern or table of patterns, used for highlightng (vim regex)&#xA;    comments_only = true, -- uses treesitter to match keywords in comments only&#xA;    max_line_len = 400, -- ignore lines longer than this&#xA;    exclude = {}, -- list of file types to exclude highlighting&#xA;  },&#xA;  -- list of named colors where we try to extract the guifg from the&#xA;  -- list of hilight groups or use the hex color if hl not found as a fallback&#xA;  colors = {&#xA;    error = { &#34;DiagnosticError&#34;, &#34;ErrorMsg&#34;, &#34;#DC2626&#34; },&#xA;    warning = { &#34;DiagnosticWarning&#34;, &#34;WarningMsg&#34;, &#34;#FBBF24&#34; },&#xA;    info = { &#34;DiagnosticInfo&#34;, &#34;#2563EB&#34; },&#xA;    hint = { &#34;DiagnosticHint&#34;, &#34;#10B981&#34; },&#xA;    default = { &#34;Identifier&#34;, &#34;#7C3AED&#34; },&#xA;  },&#xA;  search = {&#xA;    command = &#34;rg&#34;,&#xA;    args = {&#xA;      &#34;--color=never&#34;,&#xA;      &#34;--no-heading&#34;,&#xA;      &#34;--with-filename&#34;,&#xA;      &#34;--line-number&#34;,&#xA;      &#34;--column&#34;,&#xA;    },&#xA;    -- regex that will be used to match keywords.&#xA;    -- don&#39;t replace the (KEYWORDS) placeholder&#xA;    pattern = [[\b(KEYWORDS):]], -- ripgrep regex&#xA;    -- pattern = [[\b(KEYWORDS)\b]], -- match without the extra colon. You&#39;ll likely get false positives&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Todo&lt;/strong&gt; matches on any text that starts with one of your defined keywords (or alt) followed by a colon:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TODO: do something&lt;/li&gt; &#xA; &lt;li&gt;FIX: this should be fixed&lt;/li&gt; &#xA; &lt;li&gt;HACK: weird code warning&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Todos are highlighted in all regular files.&lt;/p&gt; &#xA;&lt;p&gt;Each of the commands below can have an options argument to specify the directory to search for comments, like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;:TodoTrouble cwd=~/projects/foobar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üîé &lt;code&gt;:TodoQuickFix&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This uses the quickfix list to show all todos in your project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/118135332-bf9c2300-b3b7-11eb-9a40-1307feb27c44.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üîé &lt;code&gt;:TodoLocList&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This uses the location list to show all todos in your project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/118135332-bf9c2300-b3b7-11eb-9a40-1307feb27c44.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üö¶ &lt;code&gt;:TodoTrouble&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;List all project todos in &lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;trouble&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;See screenshot at the top&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;üî≠ &lt;code&gt;:TodoTelescope&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Search through all project todos with Telescope&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/118135371-ccb91200-b3b7-11eb-9002-66af3b683cf0.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- markdownlint-disable-file MD033 --&gt; &#xA;&lt;!-- markdownlint-configure-file { &#34;MD013&#34;: { &#34;line_length&#34;: 120 } } --&gt; &#xA;&lt;!-- markdownlint-configure-file { &#34;MD004&#34;: { &#34;style&#34;: &#34;sublist&#34; } } --&gt;</summary>
  </entry>
  <entry>
    <title>PathOfBuildingCommunity/PathOfBuilding</title>
    <updated>2022-06-16T01:45:42Z</updated>
    <id>tag:github.com,2022-06-16:/PathOfBuildingCommunity/PathOfBuilding</id>
    <link href="https://github.com/PathOfBuildingCommunity/PathOfBuilding" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Offline build planner for Path of Exile.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Path of Building Community Fork&lt;/h1&gt; &#xA;&lt;h2&gt;Formerly known as LocalIdentity Fork&lt;/h2&gt; &#xA;&lt;p&gt;This is a fork of Openarl&#39;s Path Of Building that includes many extra features not in the base version of PoB&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adds support for new and updated uniques from league 3.8 onwards&lt;/li&gt; &#xA; &lt;li&gt;Pantheon support&lt;/li&gt; &#xA; &lt;li&gt;Impale DPS support&lt;/li&gt; &#xA; &lt;li&gt;Enemy armour and physical damage reduction calculations&lt;/li&gt; &#xA; &lt;li&gt;Catalysts&lt;/li&gt; &#xA; &lt;li&gt;Dual influence crafting&lt;/li&gt; &#xA; &lt;li&gt;Search for all dropdown boxes&lt;/li&gt; &#xA; &lt;li&gt;Barrage Support skill gem&lt;/li&gt; &#xA; &lt;li&gt;Ensnaring Arrow support&lt;/li&gt; &#xA; &lt;li&gt;Thread of Hope support&lt;/li&gt; &#xA; &lt;li&gt;Crimson Dance support&lt;/li&gt; &#xA; &lt;li&gt;Void Shot support&lt;/li&gt; &#xA; &lt;li&gt;Delve helmet mod support&lt;/li&gt; &#xA; &lt;li&gt;Breakdown for aura and curse effect&lt;/li&gt; &#xA; &lt;li&gt;List of recently imported accounts to the Import/Export Build tab&lt;/li&gt; &#xA; &lt;li&gt;More tree highlighting options for node power&lt;/li&gt; &#xA; &lt;li&gt;Support for fossil mods in the crafting window. Including correct parsing for some mods that previously didn&#39;t work (e.g., 60% chance to deal 100% more poison/bleed damage)&lt;/li&gt; &#xA; &lt;li&gt;Add parsing for more nodes on the tree (i.e., Slayer, Champion, Berserker, Chieftain, Hierophant, Trickster, Assassin, Necromancer and Elementalist ascendancy nodes)&lt;/li&gt; &#xA; &lt;li&gt;Add oil combinations to notables on the passive tree&lt;/li&gt; &#xA; &lt;li&gt;Support for Elusive and Nightblade support gem&lt;/li&gt; &#xA; &lt;li&gt;Incremental shock values (not a locked 50%)&lt;/li&gt; &#xA; &lt;li&gt;Fixed Close Combat and Multistrike to have their correct damage values&lt;/li&gt; &#xA; &lt;li&gt;Logic for melee distance scaling attack multipliers (Close Combat and Slayer&#39;s Impact node)&lt;/li&gt; &#xA; &lt;li&gt;Withered now shows on the configuration screen&lt;/li&gt; &#xA; &lt;li&gt;Support for Ryslatha&#39;s Coil, Vaal Arc Lucky Buff, Perquil&#39;s Toe and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://feathub.com/LocalIdentity/PathOfBuilding&#34;&gt;&lt;img src=&#34;https://feathub.com/LocalIdentity/PathOfBuilding?format=svg&#34; alt=&#34;Feature Requests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Head over to the &lt;a href=&#34;https://github.com/PathOfBuildingCommunity/PathOfBuilding/releases&#34;&gt;Releases&lt;/a&gt; page to download the install wizard or portable zip.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;You can find instructions on how to contribute code and bug reports &lt;a href=&#34;https://raw.githubusercontent.com/PathOfBuildingCommunity/PathOfBuilding/dev/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;You can find the full version history &lt;a href=&#34;https://raw.githubusercontent.com/PathOfBuildingCommunity/PathOfBuilding/dev/CHANGELOG.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Welcome to Path of Building, an offline build planner for Path of Exile!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Comprehensive offence + defence calculations: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Calculate your skill DPS, damage over time, life/mana/ES totals and much more!&lt;/li&gt; &#xA;   &lt;li&gt;Can factor in auras, buffs, charges, curses, monster resistances and more, to estimate your effective DPS&lt;/li&gt; &#xA;   &lt;li&gt;Also calculates life/mana reservations&lt;/li&gt; &#xA;   &lt;li&gt;Shows a summary of character stats in the side bar, as well as a detailed calculations breakdown tab which can show you how the stats were derived&lt;/li&gt; &#xA;   &lt;li&gt;Supports all skills and support gems, and most passives and item modifiers &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Throughout the program, supported modifiers will show in blue and unsupported ones in red&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Full support for minions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Passive skill tree planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support for jewels including most radius/conversion jewels&lt;/li&gt; &#xA;   &lt;li&gt;Features alternate path tracing (mouse over a sequence of nodes while holding shift, then click to allocate them all)&lt;/li&gt; &#xA;   &lt;li&gt;Fully integrated with the offence/defence calculations; see exactly how each node will affect your character!&lt;/li&gt; &#xA;   &lt;li&gt;Can import PathOfExile.com and PoEPlanner.com passive tree links; links shortened with PoEURL.com also work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Skill planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add any number of main or supporting skills to your build&lt;/li&gt; &#xA;   &lt;li&gt;Supporting skills (auras, curses, buffs) can be toggled on and off&lt;/li&gt; &#xA;   &lt;li&gt;Automatically applies Socketed Gem modifiers from the item a skill is socketed into&lt;/li&gt; &#xA;   &lt;li&gt;Automatically applies support gems granted by items&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Item planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add items from in game by copying and pasting them straight into the program!&lt;/li&gt; &#xA;   &lt;li&gt;Automatically adds quality to non-corrupted items&lt;/li&gt; &#xA;   &lt;li&gt;Fully integrated with the offence/defence calculations; see exactly how much of an upgrade a given item is!&lt;/li&gt; &#xA;   &lt;li&gt;Contains a searchable database of all uniques that are currently in game (and some that aren&#39;t yet!) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can choose the modifier rolls when you add a unique to your build&lt;/li&gt; &#xA;     &lt;li&gt;Includes all league-specific items and legacy variants&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Features an item crafting system: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can select from any of the game&#39;s base item types&lt;/li&gt; &#xA;     &lt;li&gt;You can select prefix/suffix modifiers from lists&lt;/li&gt; &#xA;     &lt;li&gt;Custom modifiers can be added, with Master and Essence modifiers available&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Also contains a database of rare item templates: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allows you to create rare items for your build to approximate the gear you will be using&lt;/li&gt; &#xA;     &lt;li&gt;Choose which modifiers appear on each item, and the rolls for each modifier, to suit your needs&lt;/li&gt; &#xA;     &lt;li&gt;Has templates that should cover the majority of builds (inb4 &#39;why is there no coral amulet?&#39;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Other features: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can import passive tree, items, and skills from existing characters&lt;/li&gt; &#xA;   &lt;li&gt;Share builds with other users by generating a share code&lt;/li&gt; &#xA;   &lt;li&gt;Automatic updating; most updates will only take a couple of seconds to apply&lt;/li&gt; &#xA;   &lt;li&gt;Somewhat more open source than usual (look in &#34;%ProgramData%\Path of Building&#34; if you&#39;re interested)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/23911/153694681-cbc7b83a-970c-4020-b9e3-2a09f0808e38.png&#34; alt=&#34;ss1&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/23911/153694692-0309bab1-6776-43ac-bb5a-6cc40265c7c7.png&#34; alt=&#34;ss2&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/23911/153694693-2471e491-6ed9-47ae-abcc-a3bff81cdc7c.png&#34; alt=&#34;ss3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For 3rd-party licences, see &lt;a href=&#34;https://raw.githubusercontent.com/PathOfBuildingCommunity/PathOfBuilding/dev/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt;. The licencing information is considered to be part of the documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pwntester/octo.nvim</title>
    <updated>2022-06-16T01:45:42Z</updated>
    <id>tag:github.com,2022-06-16:/pwntester/octo.nvim</id>
    <link href="https://github.com/pwntester/octo.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Edit and review GitHub issues and pull requests from the comfort of your favorite editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;üêô&lt;/span&gt; Octo.nvim&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; GitHub in NeoVim. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/pwntester/octo.nvim&#34; alt=&#34;GitHub repository size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/pwntester/octo.nvim&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pwntester/octo.nvim&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://saythanks.io/to/alvaro%40pwntester.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/say-thanks-modal.svg?sanitize=true&#34; alt=&#34;Say thanks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim/commits/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/pwntester/octo.nvim&#34; alt=&#34;Latest commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/pwntester/octo.nvim&#34; alt=&#34;Repository&#39;s starts&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/125701/124568675-76130600-de45-11eb-9944-2607c5863f37.gif&#34; alt=&#34;issues&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/125701/124568138-e8cfb180-de44-11eb-994a-0791d8be63ad.gif&#34; alt=&#34;prs&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;TL;DR&lt;/h1&gt; &#xA;&lt;div style=&#34;text-align: justify&#34;&gt;&#xA;  Edit and review GitHub issues and pull requests from the comfort of your favorite editor. &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;üå≤ Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-features&#34;&gt;‚ú® Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-requirements&#34;&gt;‚ö°Ô∏è Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-installation&#34;&gt;üì¶ Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-configuration&#34;&gt;‚öôÔ∏è Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-usage&#34;&gt;üöÄ Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-commands&#34;&gt;ü§ñ Commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-examples&#34;&gt;üî• Examples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-pr-reviews&#34;&gt;üìã PR reviews&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-completion&#34;&gt;üçû Completion&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-colors&#34;&gt;üé® Colors&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-faq&#34;&gt;üôã FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-contributing&#34;&gt;‚úã Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-license&#34;&gt;üìú License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit GitHub issues and PRs&lt;/li&gt; &#xA; &lt;li&gt;Add/Modify/Delete comments&lt;/li&gt; &#xA; &lt;li&gt;Add/Remove label, reactions, assignees, project cards, reviewers, etc.&lt;/li&gt; &#xA; &lt;li&gt;Add Review PRs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö°Ô∏èRequirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://cli.github.com/&#34;&gt;GitHub CLI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/kyazdani42/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use your favourite plugin manager to install it. eg:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;pwntester/octo.nvim&#39;,&#xA;  requires = {&#xA;    &#39;nvim-lua/plenary.nvim&#39;,&#xA;    &#39;nvim-telescope/telescope.nvim&#39;,&#xA;    &#39;kyazdani42/nvim-web-devicons&#39;,&#xA;  },&#xA;  config = function ()&#xA;    require&#34;octo&#34;.setup()&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require&#34;octo&#34;.setup({&#xA;  default_remote = {&#34;upstream&#34;, &#34;origin&#34;}; -- order to try remotes&#xA;  ssh_aliases = {},                        -- SSH aliases. e.g. `ssh_aliases = {[&#34;github.com-work&#34;] = &#34;github.com&#34;}`&#xA;  reaction_viewer_hint_icon = &#34;ÔëÑ&#34;;         -- marker for user reactions&#xA;  user_icon = &#34;ÔäΩ &#34;;                        -- user icon&#xA;  timeline_marker = &#34;Ôë†&#34;;                   -- timeline marker&#xA;  timeline_indent = &#34;2&#34;;                   -- timeline indentation&#xA;  right_bubble_delimiter = &#34;ÓÇ¥&#34;;            -- Bubble delimiter&#xA;  left_bubble_delimiter = &#34;ÓÇ∂&#34;;             -- Bubble delimiter&#xA;  github_hostname = &#34;&#34;;                    -- GitHub Enterprise host&#xA;  snippet_context_lines = 4;               -- number or lines around commented lines&#xA;  file_panel = {&#xA;    size = 10,                             -- changed files panel rows&#xA;    use_icons = true                       -- use web-devicons in file panel (if false, nvim-web-devicons does not need to be installed)&#xA;  },&#xA;  mappings = {&#xA;    issue = {&#xA;      close_issue = { lhs = &#34;&amp;lt;space&amp;gt;ic&#34;, desc = &#34;close issue&#34; },&#xA;      reopen_issue = { lhs = &#34;&amp;lt;space&amp;gt;io&#34;, desc = &#34;reopen issue&#34; },&#xA;      list_issues = { lhs = &#34;&amp;lt;space&amp;gt;il&#34;, desc = &#34;list open issues on same repo&#34; },&#xA;      reload = { lhs = &#34;&amp;lt;C-r&amp;gt;&#34;, desc = &#34;reload issue&#34; },&#xA;      open_in_browser = { lhs = &#34;&amp;lt;C-b&amp;gt;&#34;, desc = &#34;open issue in browser&#34; },&#xA;      copy_url = { lhs = &#34;&amp;lt;C-y&amp;gt;&#34;, desc = &#34;copy url to system clipboard&#34; },&#xA;      add_assignee = { lhs = &#34;&amp;lt;space&amp;gt;aa&#34;, desc = &#34;add assignee&#34; },&#xA;      remove_assignee = { lhs = &#34;&amp;lt;space&amp;gt;ad&#34;, desc = &#34;remove assignee&#34; },&#xA;      create_label = { lhs = &#34;&amp;lt;space&amp;gt;lc&#34;, desc = &#34;create label&#34; },&#xA;      add_label = { lhs = &#34;&amp;lt;space&amp;gt;la&#34;, desc = &#34;add label&#34; },&#xA;      remove_label = { lhs = &#34;&amp;lt;space&amp;gt;ld&#34;, desc = &#34;remove label&#34; },&#xA;      goto_issue = { lhs = &#34;&amp;lt;space&amp;gt;gi&#34;, desc = &#34;navigate to a local repo issue&#34; },&#xA;      add_comment = { lhs = &#34;&amp;lt;space&amp;gt;ca&#34;, desc = &#34;add comment&#34; },&#xA;      delete_comment = { lhs = &#34;&amp;lt;space&amp;gt;cd&#34;, desc = &#34;delete comment&#34; },&#xA;      next_comment = { lhs = &#34;]c&#34;, desc = &#34;go to next comment&#34; },&#xA;      prev_comment = { lhs = &#34;[c&#34;, desc = &#34;go to previous comment&#34; },&#xA;      react_hooray = { lhs = &#34;&amp;lt;space&amp;gt;rp&#34;, desc = &#34;add/remove üéâ reaction&#34; },&#xA;      react_heart = { lhs = &#34;&amp;lt;space&amp;gt;rh&#34;, desc = &#34;add/remove ‚ù§Ô∏è reaction&#34; },&#xA;      react_eyes = { lhs = &#34;&amp;lt;space&amp;gt;re&#34;, desc = &#34;add/remove üëÄ reaction&#34; },&#xA;      react_thumbs_up = { lhs = &#34;&amp;lt;space&amp;gt;r+&#34;, desc = &#34;add/remove üëç reaction&#34; },&#xA;      react_thumbs_down = { lhs = &#34;&amp;lt;space&amp;gt;r-&#34;, desc = &#34;add/remove üëé reaction&#34; },&#xA;      react_rocket = { lhs = &#34;&amp;lt;space&amp;gt;rr&#34;, desc = &#34;add/remove üöÄ reaction&#34; },&#xA;      react_laugh = { lhs = &#34;&amp;lt;space&amp;gt;rl&#34;, desc = &#34;add/remove üòÑ reaction&#34; },&#xA;      react_confused = { lhs = &#34;&amp;lt;space&amp;gt;rc&#34;, desc = &#34;add/remove üòï reaction&#34; },&#xA;    },&#xA;    pull_request = {&#xA;      checkout_pr = { lhs = &#34;&amp;lt;space&amp;gt;po&#34;, desc = &#34;checkout PR&#34; },&#xA;      merge_pr = { lhs = &#34;&amp;lt;space&amp;gt;pm&#34;, desc = &#34;merge commit PR&#34; },&#xA;      squash_and_merge_pr = { lhs = &#34;&amp;lt;space&amp;gt;psm&#34;, desc = &#34;squash and merge PR&#34; },&#xA;      list_commits = { lhs = &#34;&amp;lt;space&amp;gt;pc&#34;, desc = &#34;list PR commits&#34; },&#xA;      list_changed_files = { lhs = &#34;&amp;lt;space&amp;gt;pf&#34;, desc = &#34;list PR changed files&#34; },&#xA;      show_pr_diff = { lhs = &#34;&amp;lt;space&amp;gt;pd&#34;, desc = &#34;show PR diff&#34; },&#xA;      add_reviewer = { lhs = &#34;&amp;lt;space&amp;gt;va&#34;, desc = &#34;add reviewer&#34; },&#xA;      remove_reviewer = { lhs = &#34;&amp;lt;space&amp;gt;vd&#34;, desc = &#34;remove reviewer request&#34; },&#xA;      close_issue = { lhs = &#34;&amp;lt;space&amp;gt;ic&#34;, desc = &#34;close PR&#34; },&#xA;      reopen_issue = { lhs = &#34;&amp;lt;space&amp;gt;io&#34;, desc = &#34;reopen PR&#34; },&#xA;      list_issues = { lhs = &#34;&amp;lt;space&amp;gt;il&#34;, desc = &#34;list open issues on same repo&#34; },&#xA;      reload = { lhs = &#34;&amp;lt;C-r&amp;gt;&#34;, desc = &#34;reload PR&#34; },&#xA;      open_in_browser = { lhs = &#34;&amp;lt;C-b&amp;gt;&#34;, desc = &#34;open PR in browser&#34; },&#xA;      copy_url = { lhs = &#34;&amp;lt;C-y&amp;gt;&#34;, desc = &#34;copy url to system clipboard&#34; },&#xA;      goto_file = { lhs = &#34;gf&#34;, desc = &#34;go to file&#34; },&#xA;      add_assignee = { lhs = &#34;&amp;lt;space&amp;gt;aa&#34;, desc = &#34;add assignee&#34; },&#xA;      remove_assignee = { lhs = &#34;&amp;lt;space&amp;gt;ad&#34;, desc = &#34;remove assignee&#34; },&#xA;      create_label = { lhs = &#34;&amp;lt;space&amp;gt;lc&#34;, desc = &#34;create label&#34; },&#xA;      add_label = { lhs = &#34;&amp;lt;space&amp;gt;la&#34;, desc = &#34;add label&#34; },&#xA;      remove_label = { lhs = &#34;&amp;lt;space&amp;gt;ld&#34;, desc = &#34;remove label&#34; },&#xA;      goto_issue = { lhs = &#34;&amp;lt;space&amp;gt;gi&#34;, desc = &#34;navigate to a local repo issue&#34; },&#xA;      add_comment = { lhs = &#34;&amp;lt;space&amp;gt;ca&#34;, desc = &#34;add comment&#34; },&#xA;      delete_comment = { lhs = &#34;&amp;lt;space&amp;gt;cd&#34;, desc = &#34;delete comment&#34; },&#xA;      next_comment = { lhs = &#34;]c&#34;, desc = &#34;go to next comment&#34; },&#xA;      prev_comment = { lhs = &#34;[c&#34;, desc = &#34;go to previous comment&#34; },&#xA;      react_hooray = { lhs = &#34;&amp;lt;space&amp;gt;rp&#34;, desc = &#34;add/remove üéâ reaction&#34; },&#xA;      react_heart = { lhs = &#34;&amp;lt;space&amp;gt;rh&#34;, desc = &#34;add/remove ‚ù§Ô∏è reaction&#34; },&#xA;      react_eyes = { lhs = &#34;&amp;lt;space&amp;gt;re&#34;, desc = &#34;add/remove üëÄ reaction&#34; },&#xA;      react_thumbs_up = { lhs = &#34;&amp;lt;space&amp;gt;r+&#34;, desc = &#34;add/remove üëç reaction&#34; },&#xA;      react_thumbs_down = { lhs = &#34;&amp;lt;space&amp;gt;r-&#34;, desc = &#34;add/remove üëé reaction&#34; },&#xA;      react_rocket = { lhs = &#34;&amp;lt;space&amp;gt;rr&#34;, desc = &#34;add/remove üöÄ reaction&#34; },&#xA;      react_laugh = { lhs = &#34;&amp;lt;space&amp;gt;rl&#34;, desc = &#34;add/remove üòÑ reaction&#34; },&#xA;      react_confused = { lhs = &#34;&amp;lt;space&amp;gt;rc&#34;, desc = &#34;add/remove üòï reaction&#34; },&#xA;    },&#xA;    review_thread = {&#xA;      goto_issue = { lhs = &#34;&amp;lt;space&amp;gt;gi&#34;, desc = &#34;navigate to a local repo issue&#34; },&#xA;      add_comment = { lhs = &#34;&amp;lt;space&amp;gt;ca&#34;, desc = &#34;add comment&#34; },&#xA;      add_suggestion = { lhs = &#34;&amp;lt;space&amp;gt;sa&#34;, desc = &#34;add suggestion&#34; },&#xA;      delete_comment = { lhs = &#34;&amp;lt;space&amp;gt;cd&#34;, desc = &#34;delete comment&#34; },&#xA;      next_comment = { lhs = &#34;]c&#34;, desc = &#34;go to next comment&#34; },&#xA;      prev_comment = { lhs = &#34;[c&#34;, desc = &#34;go to previous comment&#34; },&#xA;      select_next_entry = { lhs = &#34;]q&#34;, desc = &#34;move to previous changed file&#34; },&#xA;      select_prev_entry = { lhs = &#34;[q&#34;, desc = &#34;move to next changed file&#34; },&#xA;      close_review_tab = { lhs = &#34;&amp;lt;C-c&amp;gt;&#34;, desc = &#34;close review tab&#34; },&#xA;      react_hooray = { lhs = &#34;&amp;lt;space&amp;gt;rp&#34;, desc = &#34;add/remove üéâ reaction&#34; },&#xA;      react_heart = { lhs = &#34;&amp;lt;space&amp;gt;rh&#34;, desc = &#34;add/remove ‚ù§Ô∏è reaction&#34; },&#xA;      react_eyes = { lhs = &#34;&amp;lt;space&amp;gt;re&#34;, desc = &#34;add/remove üëÄ reaction&#34; },&#xA;      react_thumbs_up = { lhs = &#34;&amp;lt;space&amp;gt;r+&#34;, desc = &#34;add/remove üëç reaction&#34; },&#xA;      react_thumbs_down = { lhs = &#34;&amp;lt;space&amp;gt;r-&#34;, desc = &#34;add/remove üëé reaction&#34; },&#xA;      react_rocket = { lhs = &#34;&amp;lt;space&amp;gt;rr&#34;, desc = &#34;add/remove üöÄ reaction&#34; },&#xA;      react_laugh = { lhs = &#34;&amp;lt;space&amp;gt;rl&#34;, desc = &#34;add/remove üòÑ reaction&#34; },&#xA;      react_confused = { lhs = &#34;&amp;lt;space&amp;gt;rc&#34;, desc = &#34;add/remove üòï reaction&#34; },&#xA;    },&#xA;    submit_win = {&#xA;      approve_review = { lhs = &#34;&amp;lt;C-a&amp;gt;&#34;, desc = &#34;approve review&#34; },&#xA;      comment_review = { lhs = &#34;&amp;lt;C-m&amp;gt;&#34;, desc = &#34;comment review&#34; },&#xA;      request_changes = { lhs = &#34;&amp;lt;C-r&amp;gt;&#34;, desc = &#34;request changes review&#34; },&#xA;      close_review_tab = { lhs = &#34;&amp;lt;C-c&amp;gt;&#34;, desc = &#34;close review tab&#34; },&#xA;    },&#xA;    review_diff = {&#xA;      add_review_comment = { lhs = &#34;&amp;lt;space&amp;gt;ca&#34;, desc = &#34;add a new review comment&#34; },&#xA;      add_review_suggestion = { lhs = &#34;&amp;lt;space&amp;gt;sa&#34;, desc = &#34;add a new review suggestion&#34; },&#xA;      focus_files = { lhs = &#34;&amp;lt;leader&amp;gt;e&#34;, desc = &#34;move focus to changed file panel&#34; },&#xA;      toggle_files = { lhs = &#34;&amp;lt;leader&amp;gt;b&#34;, desc = &#34;hide/show changed files panel&#34; },&#xA;      next_thread = { lhs = &#34;]t&#34;, desc = &#34;move to next thread&#34; },&#xA;      prev_thread = { lhs = &#34;[t&#34;, desc = &#34;move to previous thread&#34; },&#xA;      select_next_entry = { lhs = &#34;]q&#34;, desc = &#34;move to previous changed file&#34; },&#xA;      select_prev_entry = { lhs = &#34;[q&#34;, desc = &#34;move to next changed file&#34; },&#xA;      close_review_tab = { lhs = &#34;&amp;lt;C-c&amp;gt;&#34;, desc = &#34;close review tab&#34; },&#xA;      toggle_viewed = { lhs = &#34;&amp;lt;leader&amp;gt;&amp;lt;space&amp;gt;&#34;, desc = &#34;toggle viewer viewed state&#34; },&#xA;    },&#xA;    file_panel = {&#xA;      next_entry = { lhs = &#34;j&#34;, desc = &#34;move to next changed file&#34; },&#xA;      prev_entry = { lhs = &#34;k&#34;, desc = &#34;move to previous changed file&#34; },&#xA;      select_entry = { lhs = &#34;&amp;lt;cr&amp;gt;&#34;, desc = &#34;show selected changed file diffs&#34; },&#xA;      refresh_files = { lhs = &#34;R&#34;, desc = &#34;refresh changed files panel&#34; },&#xA;      focus_files = { lhs = &#34;&amp;lt;leader&amp;gt;e&#34;, desc = &#34;move focus to changed file panel&#34; },&#xA;      toggle_files = { lhs = &#34;&amp;lt;leader&amp;gt;b&#34;, desc = &#34;hide/show changed files panel&#34; },&#xA;      select_next_entry = { lhs = &#34;]q&#34;, desc = &#34;move to previous changed file&#34; },&#xA;      select_prev_entry = { lhs = &#34;[q&#34;, desc = &#34;move to next changed file&#34; },&#xA;      close_review_tab = { lhs = &#34;&amp;lt;C-c&amp;gt;&#34;, desc = &#34;close review tab&#34; },&#xA;      toggle_viewed = { lhs = &#34;&amp;lt;leader&amp;gt;&amp;lt;space&amp;gt;&#34;, desc = &#34;toggle viewer viewed state&#34; },&#xA;    }&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;p&gt;Just edit the issue title, body or comments as a regular buffer and use &lt;code&gt;:w(rite)&lt;/code&gt; to sync the issue with GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;ü§ñ Commands&lt;/h2&gt; &#xA;&lt;p&gt;There is only an &lt;code&gt;Octo &amp;lt;object&amp;gt; &amp;lt;action&amp;gt; [arguments]&lt;/code&gt; command: If no command is passed, the argument to &lt;code&gt;Octo&lt;/code&gt; is treated as a URL from where an issue or pr repo and number are extracted&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Object&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;   &lt;th&gt;Arguments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;issue&lt;/td&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;Close the current issue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reopen&lt;/td&gt; &#xA;   &lt;td&gt;Reopen the current issue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create [repo]&lt;/td&gt; &#xA;   &lt;td&gt;Creates a new issue in the current or specified repo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;edit [repo] &#xA;    &lt;number&gt;&lt;/number&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Edit issue &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; in current or specified repo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;list [repo] [key=value] (1)&lt;/td&gt; &#xA;   &lt;td&gt;List all issues satisfying given filter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search&lt;/td&gt; &#xA;   &lt;td&gt;Live issue search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reload&lt;/td&gt; &#xA;   &lt;td&gt;Reload issue. Same as doing &lt;code&gt;e!&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;browser&lt;/td&gt; &#xA;   &lt;td&gt;Open current issue in the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td&gt;Copies the URL of the current issue to the system clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pr&lt;/td&gt; &#xA;   &lt;td&gt;list [repo] [key=value] (2)&lt;/td&gt; &#xA;   &lt;td&gt;List all PRs satisfying given filter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search&lt;/td&gt; &#xA;   &lt;td&gt;Live issue search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;edit [repo] &#xA;    &lt;number&gt;&lt;/number&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Edit PR &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; in current or specified repo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reopen&lt;/td&gt; &#xA;   &lt;td&gt;Reopen the current PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create&lt;/td&gt; &#xA;   &lt;td&gt;Creates a new PR for the current branch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;Close the current PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;checkout&lt;/td&gt; &#xA;   &lt;td&gt;Checkout PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;commits&lt;/td&gt; &#xA;   &lt;td&gt;List all PR commits&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;changes&lt;/td&gt; &#xA;   &lt;td&gt;Show all PR changes (diff hunks)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;diff&lt;/td&gt; &#xA;   &lt;td&gt;Show PR diff&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;merge [commit|rebase|squash] [delete]&lt;/td&gt; &#xA;   &lt;td&gt;Merge current PR using the specified method&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ready&lt;/td&gt; &#xA;   &lt;td&gt;Mark a draft PR as ready for review&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;checks&lt;/td&gt; &#xA;   &lt;td&gt;Show the status of all checks run on the PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reload&lt;/td&gt; &#xA;   &lt;td&gt;Reload PR. Same as doing &lt;code&gt;e!&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;browser&lt;/td&gt; &#xA;   &lt;td&gt;Open current PR in the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td&gt;Copies the URL of the current PR to the system clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;repo&lt;/td&gt; &#xA;   &lt;td&gt;list (3)&lt;/td&gt; &#xA;   &lt;td&gt;List repos user owns, contributes or belong to&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fork&lt;/td&gt; &#xA;   &lt;td&gt;Fork repo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;browser&lt;/td&gt; &#xA;   &lt;td&gt;Open current repo in the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td&gt;Copies the URL of the current repo to the system clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gist&lt;/td&gt; &#xA;   &lt;td&gt;list [repo] [key=value] (4)&lt;/td&gt; &#xA;   &lt;td&gt;List user gists&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;comment&lt;/td&gt; &#xA;   &lt;td&gt;add&lt;/td&gt; &#xA;   &lt;td&gt;Add a new comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;delete&lt;/td&gt; &#xA;   &lt;td&gt;Delete a comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;thread&lt;/td&gt; &#xA;   &lt;td&gt;resolve&lt;/td&gt; &#xA;   &lt;td&gt;Mark a review thread as resolved&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;unresolve&lt;/td&gt; &#xA;   &lt;td&gt;Mark a review thread as unresolved&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;label&lt;/td&gt; &#xA;   &lt;td&gt;add [label]&lt;/td&gt; &#xA;   &lt;td&gt;Add a label from available label menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove [label]&lt;/td&gt; &#xA;   &lt;td&gt;Remove a label&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create [label]&lt;/td&gt; &#xA;   &lt;td&gt;Create a new label&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;assignees&lt;/td&gt; &#xA;   &lt;td&gt;add [login]&lt;/td&gt; &#xA;   &lt;td&gt;Assign a user&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove [login]&lt;/td&gt; &#xA;   &lt;td&gt;Unassign a user&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reviewer&lt;/td&gt; &#xA;   &lt;td&gt;add [login]&lt;/td&gt; &#xA;   &lt;td&gt;Assign a PR reviewer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reaction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;thumbs_up&lt;/code&gt; | &lt;code&gt;+1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add üëç reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;thumbs_down&lt;/code&gt; | &lt;code&gt;-1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add üëé reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;eyes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add üëÄ reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;laugh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add üòÑ reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;confused&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add üòï reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rocket&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add üöÄ reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;heart&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add ‚ù§Ô∏è reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hooray&lt;/code&gt; | &lt;code&gt;party&lt;/code&gt; | &lt;code&gt;tada&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add üéâ reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;card&lt;/td&gt; &#xA;   &lt;td&gt;add&lt;/td&gt; &#xA;   &lt;td&gt;Assign issue/PR to a project new card&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove&lt;/td&gt; &#xA;   &lt;td&gt;Delete project card&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;move&lt;/td&gt; &#xA;   &lt;td&gt;Move project card to different project/column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;review&lt;/td&gt; &#xA;   &lt;td&gt;start&lt;/td&gt; &#xA;   &lt;td&gt;Start a new review&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;submit&lt;/td&gt; &#xA;   &lt;td&gt;Submit the review&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;resume&lt;/td&gt; &#xA;   &lt;td&gt;Edit a pending review for current PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;discard&lt;/td&gt; &#xA;   &lt;td&gt;Deletes a pending review for current PR if any&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;comments&lt;/td&gt; &#xA;   &lt;td&gt;View pending review comments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;commit&lt;/td&gt; &#xA;   &lt;td&gt;Pick a specific commit to review&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;actions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lists all available Octo actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;search&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;query&gt;&lt;/query&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Search GitHub for issues and PRs matching the &lt;a href=&#34;https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests&#34;&gt;query&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;[repo]&lt;/code&gt;: If repo is not provided, it will be derived from &lt;code&gt;&amp;lt;cwd&amp;gt;/.git/config&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In-menu mappings:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;: Edit Issue&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt;: Opens issue in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-y&amp;gt;&lt;/code&gt;: Copies URL to system clipboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/graphql/reference/input-objects#issuefilters&#34;&gt;Available filter keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;since&lt;/li&gt; &#xA; &lt;li&gt;createdBy&lt;/li&gt; &#xA; &lt;li&gt;assignee&lt;/li&gt; &#xA; &lt;li&gt;mentioned&lt;/li&gt; &#xA; &lt;li&gt;labels&lt;/li&gt; &#xA; &lt;li&gt;milestone&lt;/li&gt; &#xA; &lt;li&gt;states&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;In-menu mappings:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;: Edit PR&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt;: Opens PR in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-o&amp;gt;&lt;/code&gt;: Checkout PR&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-y&amp;gt;&lt;/code&gt;: Copies URL to system clipboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pwntester/octo.nvim/raw/master/lua/octo/pickers/telescope/provider.lua#L34&#34;&gt;Available filter keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;baseRefName&lt;/li&gt; &#xA; &lt;li&gt;headRefName&lt;/li&gt; &#xA; &lt;li&gt;labels&lt;/li&gt; &#xA; &lt;li&gt;states&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;In-menu mappings:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;: View repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt;: Opens repo in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-y&amp;gt;&lt;/code&gt;: Copies URL to system clipboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;In-menu mappings:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;: Append Gist to buffer &lt;a href=&#34;https://cli.github.com/manual/gh_gist_list&#34;&gt;Available keys&lt;/a&gt;: &lt;code&gt;repo&lt;/code&gt;|&lt;code&gt;public&lt;/code&gt;|&lt;code&gt;secret&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üî• Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Octo https://github.com/pwntester/octo.nvim/issues/12&#xA;Octo issue create&#xA;Octo issue create pwntester/octo.nvim&#xA;Octo comment add&#xA;Octo reaction add hooray&#xA;Octo issue edit pwntester/octo.nvim 1&#xA;Octo issue edit 1&#xA;Octo issue list createdBy=pwntester&#xA;Octo issue list neovim/neovim labels=bug,help\ wanted states=OPEN&#xA;Octo search assignee:pwntester is:pr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìã PR review&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the PR (eg: &lt;code&gt;Octo &amp;lt;PR url&amp;gt;&lt;/code&gt; or &lt;code&gt;Octo pr list&lt;/code&gt; or &lt;code&gt;Octo pr edit &amp;lt;PR number&amp;gt;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Start a review with &lt;code&gt;Octo review start&lt;/code&gt; or resume a pending review with &lt;code&gt;Octo review resume&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A new tab will show a panel with changed files and two windows showing the diff on any of them.&lt;/li&gt; &#xA; &lt;li&gt;Change panel entries with &lt;code&gt;]q&lt;/code&gt; and &lt;code&gt;[q&lt;/code&gt; or by selecting an entry in the window&lt;/li&gt; &#xA; &lt;li&gt;Add comments with &lt;code&gt;&amp;lt;space&amp;gt;ca&lt;/code&gt; or suggestions with &lt;code&gt;&amp;lt;space&amp;gt;sa&lt;/code&gt; on single or multiple visual-selected lines &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A new buffer will appear in the alternate diff window. The cursor will be positioned in the new buffer&lt;/li&gt; &#xA;   &lt;li&gt;When ready, save the buffer to commit changes to GitHub&lt;/li&gt; &#xA;   &lt;li&gt;Move back to the diff window and move the cursor, the thread buffer will hide&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Hold the cursor on a line with a comment to show a thread buffer with all the thread comments &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To modify, delete, react or reply to a comment, move to the window containing the thread buffer&lt;/li&gt; &#xA;   &lt;li&gt;Perform any operations as if you were in a regular issue buffer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Review pending comments with &lt;code&gt;Octo review comments&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use &#xA;    &lt;cr&gt;&#xA;      to jump to the selected pending comment&#xA;    &lt;/cr&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you want to review a specific commit, use &lt;code&gt;Octo review commit&lt;/code&gt; to pick a commit. The file panel will get filtered to show only files changed by that commit. Any comments placed on these files will be applied at that specific commit level and will be added to the pending review.&lt;/li&gt; &#xA; &lt;li&gt;When ready, submit the review with &lt;code&gt;Octo review submit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A new float window will pop up. Enter the top level review comment and exit to normal mode. Then press &lt;code&gt;&amp;lt;C-m&amp;gt;&lt;/code&gt; to submit a comment, &lt;code&gt;&amp;lt;C-a&amp;gt;&lt;/code&gt; to approve it or &lt;code&gt;&amp;lt;C-r&amp;gt;&lt;/code&gt; to request changes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üçû Completion&lt;/h2&gt; &#xA;&lt;p&gt;Octo provides a built-in omnifunc completion for issues, PRs and users that you can trigger using &lt;code&gt;&amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&lt;/code&gt;. Alternately, if you use &lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;&lt;code&gt;nvim-cmp&lt;/code&gt;&lt;/a&gt; for completion, you can use the &lt;a href=&#34;https://github.com/petertriho/cmp-git/&#34;&gt;&lt;code&gt;cmp-git&lt;/code&gt;&lt;/a&gt; source to provide issues, PRs, commits and users completion.&lt;/p&gt; &#xA;&lt;h2&gt;üé® Colors&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Highlight Group&lt;/th&gt; &#xA;   &lt;th&gt;Defaults to&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDirty&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ErrorMsg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoIssueTitle&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PreProc&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoIssueId&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Question&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoEmpty&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoFloat&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NormalNC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDate&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoSymbol&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoTimelineItemHeading&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDetailsLabel&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Title&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoMissingDetails&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDetailsValue&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Identifier&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDiffHunkPosition&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NormalFloat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoCommentLine&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TabLineSel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoEditable&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NormalFloat bg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoViewer&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoBubble&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NormalFloat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoBubbleGreen&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoBubbleRed&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoUser&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoBubble&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoUserViewer&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoViewer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoReaction&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoBubble&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoReactionViewer&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoViewer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoPassingTest&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoFailingTest&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoPullAdditions&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoPullDeletions&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoPullModifications&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateOpen&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateClosed&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateMerge&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStatePending&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateApproved&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoStateOpen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateChangesRequested&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoStateClosed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateCommented&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Normal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateDismissed&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoStateClosed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The term &lt;code&gt;GitHub color&lt;/code&gt; refers to the colors used in the WebUI. The (addition) &lt;code&gt;viewer&lt;/code&gt; means the user of the plugin or more precisely the user authenticated via the &lt;code&gt;gh&lt;/code&gt; CLI tool used to retrieve the data from GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;üôã FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I disable bubbles for XYZ?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each text-object that makes use of a bubble (except labels) do use their own highlight group that linkes per default to the main bubble highlight group. To disable most bubbles at once you can simply link &lt;code&gt;OctoBubble&lt;/code&gt; to &lt;code&gt;Normal&lt;/code&gt;. To only disable them for a certain plain do the same for the specific sub-group (e.g. &lt;code&gt;OctoUser&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why do my issue titles or markdown syntax do not get highlighted properly?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The title, body and comments of an issue or PR are special as they get special highlighting applied and is an editable section. Due to the latter property it gets the &lt;code&gt;OctoEditable&lt;/code&gt; highlighting via a special signs &lt;code&gt;linehl&lt;/code&gt; setting. This takes precedence over the buffer internal highlights. To only get the background highlighted by the editable section, set &lt;code&gt;OctoEditable&lt;/code&gt; to a highlight with a background color definition only.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why am I getting authentication error from gh?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This means that are either using a GITHUB_TOKEN to authenticate or &lt;code&gt;gh&lt;/code&gt; is not authenticated.&lt;/p&gt; &#xA;&lt;p&gt;In case of the former, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GITHUB_TOKEN= gh auth login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... and choose a method to authorise access for &lt;code&gt;gh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gh&lt;/code&gt; must store the creds so it can work in a subshell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can I use treesitter markdown parser with octo buffers?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Just add the following lines to your TreeSitter config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local parser_config = require(&#34;nvim-treesitter.parsers&#34;).get_parser_configs()&#xA;parser_config.markdown.filetype_to_parsername = &#34;octo&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I filter PRs by filter keys that aren&#39;t available?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use the search command &lt;code&gt;:Octo search [query]&lt;/code&gt;. The &lt;a href=&#34;https://docs.github.com/en/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax&#34;&gt;search syntax&lt;/a&gt; and available search terms are available in &lt;a href=&#34;https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests#search-by-author&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example to search for PRs with author you can use this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:Octo search is:pr author:pwntester repo:github/codeql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: You need to provide the &lt;code&gt;repo&lt;/code&gt;, otherwise it will search for every PR by that user.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to enable autocompletion for issues/prs (&lt;code&gt;#&lt;/code&gt;) and users (&lt;code&gt;@&lt;/code&gt;)?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the following mappings for &lt;code&gt;octo&lt;/code&gt; file type:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;vim.api.nvim_buf_set_keymap(0, &#34;i&#34;, &#34;@&#34;, &#34;@&amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&#34;, { silent = true, noremap = true })&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vim.api.nvim_buf_set_keymap(0, &#34;i&#34;, &#34;#&#34;, &#34;#&amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&#34;, { silent = true, noremap = true })&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚úã Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING&lt;/code&gt;&lt;/a&gt; for ways to get started.&lt;/p&gt; &#xA;&lt;p&gt;Please adhere to this project&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/CODE_OF_CONDUCT&#34;&gt;&lt;code&gt;CODE_OF_CONDUCT&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üåü Credits&lt;/h2&gt; &#xA;&lt;p&gt;The PR review panel is heavily inspired in &lt;a href=&#34;https://github.com/sindrets/diffview.nvim&#34;&gt;diffview.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìú License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>