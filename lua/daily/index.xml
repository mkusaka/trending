<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-19T01:39:59Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uga-rosa/ugaterm.nvim</title>
    <updated>2023-04-19T01:39:59Z</updated>
    <id>tag:github.com,2023-04-19:/uga-rosa/ugaterm.nvim</id>
    <link href="https://github.com/uga-rosa/ugaterm.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A terminal plugin for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ugaterm.nvim&lt;/h1&gt; &#xA;&lt;p&gt;A terminal plugin for Neovim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/82267684/232364367-afd26d92-82e9-4f17-8604-560d9bf03824.gif&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;ugaterm&#34;).setup({&#xA;  ---@type string The terminal buffer name prefix.&#xA;  prefix = &#34;ugaterm&#34;,&#xA;  ---@type string The filetype for a terminal buffer.&#xA;  filetype = &#34;ugaterm&#34;,&#xA;  ---@type string|function Command|function to open a teminal window.&#xA;  open_cmd = &#34;botright 15sp&#34;,&#xA;  -- Example of opening in a floating window.&#xA;  --&#xA;  -- open_cmd = function()&#xA;  --   local height = vim.api.nvim_get_option(&#34;lines&#34;)&#xA;  --   local width = vim.api.nvim_get_option(&#34;columns&#34;)&#xA;  --   vim.api.nvim_open_win(0, true, {&#xA;  --     relative = &#34;editor&#34;,&#xA;  --     row = math.floor(height * 0.1),&#xA;  --     col = math.floor(width * 0.1),&#xA;  --     height = math.floor(height * 0.8),&#xA;  --     width = math.floor(width * 0.8),&#xA;  --   })&#xA;  -- end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Commands&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UgatermOpen &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open the most recently used terminal.&lt;/li&gt; &#xA;   &lt;li&gt;If the terminal has never been opened, UgatermNew is called.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UgatermNew &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Open a new terminal.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UgatermHide &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Hide a terminal window.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UgatermToggle &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Toggle a terminal window (open/hide).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UgatermSelect &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Select a terminal using vim.ui.select().&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UgatermDelete &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Delete a current terminal buffer.&lt;/li&gt; &#xA;   &lt;li&gt;If there are other terminals, open more recently used one.&lt;/li&gt; &#xA;   &lt;li&gt;If it is the last one, close the window too.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;UgatermRename [{newname}] &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rename a current terminal buffer.&lt;/li&gt; &#xA;   &lt;li&gt;If {newname} is omitted, use vim.ui.input().&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>haydenmeade/neotest-jest</title>
    <updated>2023-04-19T01:39:59Z</updated>
    <id>tag:github.com,2023-04-19:/haydenmeade/neotest-jest</id>
    <link href="https://github.com/haydenmeade/neotest-jest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;neotest-jest&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/haydenmeade/neotest-jest/actions/workflows/workflow.yaml&#34;&gt;&lt;img src=&#34;https://github.com/haydenmeade/neotest-jest/actions/workflows/workflow.yaml/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin provides a jest adapter for the &lt;a href=&#34;https://github.com/rcarriga/neotest&#34;&gt;Neotest&lt;/a&gt; framework. &lt;strong&gt;It is currently a work in progress&lt;/strong&gt;. It will be transferred to the official neotest organisation (once it&#39;s been created).&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Using packer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;  &#39;nvim-neotest/neotest&#39;,&#xA;  requires = {&#xA;    ...,&#xA;    &#39;haydenmeade/neotest-jest&#39;,&#xA;  }&#xA;  config = function()&#xA;    require(&#39;neotest&#39;).setup({&#xA;      ...,&#xA;      adapters = {&#xA;        require(&#39;neotest-jest&#39;)({&#xA;          jestCommand = &#34;npm test --&#34;,&#xA;          jestConfigFile = &#34;custom.jest.config.ts&#34;,&#xA;          env = { CI = true },&#xA;          cwd = function(path)&#xA;            return vim.fn.getcwd()&#xA;          end,&#xA;        }),&#xA;      }&#xA;    })&#xA;  end&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Make sure you have the appropriate &lt;code&gt;treesitter&lt;/code&gt; language parsers installed otherwise no tests will be found:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:TSInstall javascript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;See neotest&#39;s documentation for more information on how to run tests.&lt;/p&gt; &#xA;&lt;h3&gt;Running tests in watch mode&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;jest&lt;/code&gt; allows to run your tests in &lt;a href=&#34;https://jestjs.io/docs/cli#--watch&#34;&gt;watch mode&lt;/a&gt;. To run test in this mode you either can enable it globally in the setup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;neotest&#39;).setup({&#xA;  ...,&#xA;  adapters = {&#xA;    require(&#39;neotest-jest&#39;)({&#xA;      jestCommand = &#34;jest --watch &#34;,&#xA;    }),&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or add a specific keymap to run tests with watch mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;tw&#34;, &#34;&amp;lt;cmd&amp;gt;lua require(&#39;neotest&#39;).run.run({ jestCommand = &#39;jest --watch &#39; })&amp;lt;cr&amp;gt;&#34;, {})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;üéÅ&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please raise a PR if you are interested in adding new functionality or fixing any bugs. When submitting a bug, please include an example spec that can be tested.&lt;/p&gt; &#xA;&lt;p&gt;To trigger the tests for the adapter, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./scripts/test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bug Reports&lt;/h2&gt; &#xA;&lt;p&gt;Please file any bug reports and I &lt;em&gt;might&lt;/em&gt; take a look if time permits otherwise please submit a PR, this plugin is intended to be by the community for the community.&lt;/p&gt;</summary>
  </entry>
</feed>