<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-29T01:49:04Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>lewis6991/satellite.nvim</title>
    <updated>2022-06-29T01:49:04Z</updated>
    <id>tag:github.com,2022-06-29:/lewis6991/satellite.nvim</id>
    <link href="https://github.com/lewis6991/satellite.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Decorate scrollbar for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ðŸš§ WIP and EXPERIMENTAL ðŸš§&lt;/h1&gt; &#xA;&lt;h1&gt;satellite.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;satellite.nvim&lt;/code&gt; is a Neovim plugin that displays decorated scrollbars.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7904185/167670068-8660fe2e-eb5a-45df-912d-479eb43e0239.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Many API&#39;s required to implement a decorated scrollbar in Neovim do not yet exist, and because of this, this plugin implements fairly unideal and unoptimised workarounds to get desired behaviours. Therefore, this plugin is highly experimental and currently serves as a platform to experiment, investigate and design the required API&#39;s that are needed to be implemented in Neovim core.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Display marks for different kinds of decorations across the buffer. Builtin handlers include: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Search results&lt;/li&gt; &#xA;   &lt;li&gt;Diagnostic&lt;/li&gt; &#xA;   &lt;li&gt;Git hunks (via &lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Marks&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Handling for folds&lt;/li&gt; &#xA; &lt;li&gt;Mouse support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Neovim nightly&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use &#39;lewis6991/satellite.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;For basic setup with all batteries included:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;satellite&#39;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If using &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt; Satellite can be setup directly in the plugin spec:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;lewis6991/satellite.nvim&#39;,&#xA;  config = function()&#xA;    require(&#39;satellite&#39;).setup()&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Configuration can be passed to the setup function. Here is an example with most of the default settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;satellite&#39;).setup {&#xA;  current_only = false,&#xA;  winblend = 50,&#xA;  zindex = 40,&#xA;  excluded_filetypes = {},&#xA;  width = 2,&#xA;  handlers = {&#xA;    search = {&#xA;      enable = true,&#xA;    },&#xA;    diagnostic = {&#xA;      enable = true,&#xA;    },&#xA;    gitsigns = {&#xA;      enable = true,&#xA;    },&#xA;    marks = {&#xA;      enable = true,&#xA;      show_builtins = false, -- shows the builtin marks like [ ] &amp;lt; &amp;gt;&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;:SatelliteDisable&lt;/code&gt; command disables scrollbars.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;:SatelliteEnable&lt;/code&gt; command enables scrollbars. This is only necessary if scrollbars have previously been disabled.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;:SatelliteRefresh&lt;/code&gt; command refreshes the scrollbars. This is relevant when the scrollbars are out-of-sync, which can occur as a result of some window arrangement actions.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;There are various settings that can be configured. Please see the documentation for details.&lt;/p&gt; &#xA;&lt;h2&gt;Handlers&lt;/h2&gt; &#xA;&lt;p&gt;TODO&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Documentation can be accessed with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-nvim&#34;&gt;:help satellite&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;This plugin was based on &lt;a href=&#34;https://github.com/dstein64/nvim-scrollview&#34;&gt;nvim-scrollview&lt;/a&gt; which provides a very good implementation for a normal scrollbar.&lt;/p&gt; &#xA;&lt;h2&gt;Similar plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dstein64/nvim-scrollview&#34;&gt;nvim-scrollview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/petertriho/nvim-scrollbar&#34;&gt;nvim-scrollbar&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cseickel/diagnostic-window.nvim</title>
    <updated>2022-06-29T01:49:04Z</updated>
    <id>tag:github.com,2022-06-29:/cseickel/diagnostic-window.nvim</id>
    <link href="https://github.com/cseickel/diagnostic-window.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Shows diagnostic messages in a separate window, which is particularly helpful for long message like those seen in typescript.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Diagnostic Window&lt;/h1&gt; &#xA;&lt;p&gt;Shows the diagnostic messages for the given line in a split window. This was created to help decipher very long typescript messages that don&#39;t fit nicely into a floating window or virtual text.&lt;/p&gt; &#xA;&lt;p&gt;This also adds custom syntax highlighting for the diagnostic message.The current version was designed specifically for typescript errors.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/5160605/175788492-320fb6e7-a11d-4b16-9083-acb50f3e1d30.png&#34; alt=&#34;diagnostic-window-typescript-example&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;p&gt;Clone the repository using your favorite plugin manager, including &lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim&#34;&gt;MunifTanjim/nui.vim&lt;/a&gt;. For example, with packer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;  use { &#xA;    &#34;cseickel/diagnostic-window.nvim&#34;,&#xA;    requires = { &#34;MunifTanjim/nui.nvim&#34; }&#xA;  }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then open the window with this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:DiagWindowShow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please do!&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Stephan-S/FS22_AutoDrive</title>
    <updated>2022-06-29T01:49:04Z</updated>
    <id>tag:github.com,2022-06-29:/Stephan-S/FS22_AutoDrive</id>
    <link href="https://github.com/Stephan-S/FS22_AutoDrive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FS22 version of the AutoDrive mod&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FS22_AutoDrive&lt;/h1&gt; &#xA;&lt;p&gt;FS22 version of the AutoDrive mod&lt;/p&gt; &#xA;&lt;h3&gt;Latest Release: 2.0.0.6&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Stephan-S/FS22_AutoDrive/total?label=Downloads&amp;amp;style=plastic&#34; alt=&#34;GitHub all releases&#34;&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/Stephan-S/FS22_AutoDrive/releases/latest&#34;&gt;Latest Release&lt;/a&gt;&lt;br&gt; Direct Download: &lt;a href=&#34;https://github.com/Stephan-S/FS22_AutoDrive/releases/download/2.0.0.6/FS22_AutoDrive.zip&#34;&gt;https://github.com/Stephan-S/FS22_AutoDrive/releases/download/2.0.0.6/FS22_AutoDrive.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Discord Server:&lt;/h2&gt; &#xA;&lt;p&gt;For help &amp;amp; support, feel free to join us on Discord: &lt;a href=&#34;https://discord.gg/9D4B5hX&#34;&gt;https://discord.gg/9D4B5hX&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;For a little thank you&lt;/h3&gt; &#xA;&lt;p&gt;If you like our work, feel free to buy us a coffee (of which we drink quite a lot :D )&lt;br&gt; For now, there is no general link for the team, so each contributer can post his/her preferred donation link here :-)&lt;br&gt; But remember, this is absolutely not required. We value any issues and feature requests the same!&lt;br&gt; And to all who do donate: Thank you very much :-)&lt;/p&gt; &#xA;&lt;h4&gt;Stephan (Founder &amp;amp; Modder):&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.me/StephanSchlosser&#34;&gt;https://www.paypal.me/StephanSchlosser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Axel (Co-Modder)&lt;/h4&gt; &#xA;&lt;h4&gt;Iwan1803 (Community Manager, Supporter &amp;amp; Tester):&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.tipeeestream.com/iwan1803/tip&#34;&gt;https://www.tipeeestream.com/iwan1803/tip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Willi (Supporter &amp;amp; Tester)&lt;/h4&gt; &#xA;&lt;h2&gt;Course Editor&lt;/h2&gt; &#xA;&lt;p&gt;The course editor is now maintained by @KillBait and can be found here: &lt;a href=&#34;https://github.com/KillBait/AutoDrive_Course_Editor&#34;&gt;https://github.com/KillBait/AutoDrive_Course_Editor&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>