<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-01T01:46:45Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>albingroen/quick.nvim</title>
    <updated>2022-07-01T01:46:45Z</updated>
    <id>tag:github.com,2022-07-01:/albingroen/quick.nvim</id>
    <link href="https://github.com/albingroen/quick.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A very fast Lua based Neovim configuration that uses coc.nvim for intellisense&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;quick.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OhbgZbORFd4&#34;&gt;YouTube Demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A very fast Lua based Neovim configuration that uses coc.nvim for intellisense&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#what-is-this&#34;&gt;What is this?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#plugins&#34;&gt;Plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#prerequisites&#34;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#setup-quicknvim&#34;&gt;Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#1-download-configuration&#34;&gt;Download cofiguration&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#2-install-plugins&#34;&gt;Install plugins&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#install-packer&#34;&gt;Install Packer&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#cocnvim&#34;&gt;coc.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#bindings&#34;&gt;Bindings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/albingroen/quick.nvim/main/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;This is a configuration for Neovim. It&#39;s written in Lua, and uses modern plugins like Treesitter, Telescope, and Lualine. It does however not implement the native Neovim LSP. It&#39;s very fast, good looking, and has a lot of nice features.&lt;/p&gt; &#xA;&lt;img width=&#34;1280&#34; alt=&#34;quick nvim&#34; src=&#34;https://user-images.githubusercontent.com/19674362/139526562-a3a9f9f8-ada7-40d6-a2a8-2c534a97e0a5.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/19674362/139526856-bdd9023d-8780-4b0f-aa4b-4edb619e35fd.mp4&#34;&gt;https://user-images.githubusercontent.com/19674362/139526856-bdd9023d-8780-4b0f-aa4b-4edb619e35fd.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;Lualine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;Packer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;Plenary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/blackCauldron7/surround.nvim&#34;&gt;Surround&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/tokyonight.nvim&#34;&gt;Tokyo Night&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;Treesitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neoclide/coc.nvim&#34;&gt;coc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JoosepAlviste/nvim-ts-context-commentstring&#34;&gt;nvim-ts-context-commentstring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-commentary/&#34;&gt;vim-commentary&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neovim.io&#34;&gt;Neovim 0.5 or above&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup quick.nvim&lt;/h2&gt; &#xA;&lt;h3&gt;1. Download configuration&lt;/h3&gt; &#xA;&lt;h4&gt;Clone repository&lt;/h4&gt; &#xA;&lt;p&gt;If you want to receive updates as this configuration gets patched, then clone this repository into your &lt;code&gt;.config&lt;/code&gt; directory, or wherever you keep your current Neovim configuration.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:albingroen/quick.nvim.git ~/.config/nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Releases&lt;/h4&gt; &#xA;&lt;p&gt;On the other hand, if you want a raw folder with the configuration files, without git connected to it, you can head over to the releases page, and download a release from there.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/albingroen/quick.nvim/releases&#34;&gt;https://github.com/albingroen/quick.nvim/releases&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;2. Install plugins&lt;/h3&gt; &#xA;&lt;h4&gt;Install Packer&lt;/h4&gt; &#xA;&lt;p&gt;quick.nvim uses &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;Packer&lt;/a&gt; as its Neovim plugin manager.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --depth 1 https://github.com/wbthomason/packer.nvim\&#xA; ~/.local/share/nvim/site/pack/packer/start/packer.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the plugins used by quick.nvim, you need to do so using Packer.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;nvim ~/.config/nvim/init.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;:PackerInstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;PS. If you&#39;re having trouble running &lt;code&gt;:PackerInstall&lt;/code&gt; after this, please follow the instructions in this issue: &lt;a href=&#34;https://github.com/albingroen/quick.nvim/issues/2&#34;&gt;https://github.com/albingroen/quick.nvim/issues/2&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Install ripgrep&lt;/h3&gt; &#xA;&lt;p&gt;In order for the Telescope live_grep functionality to work, you need to have ripgrep installed on your machine. Please reference the official ripgrep installation options, but if run Homebrew, you can install it like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install rg&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;coc.nvim&lt;/h2&gt; &#xA;&lt;p&gt;This configuration uses &lt;a href=&#34;https://github.com/neoclide/coc.nvim&#34;&gt;coc.nvim&lt;/a&gt; for intellisense, instead of the built-in Neovim LSP. This is because I think it&#39;s not quite mature yet, pretty tricky to configure, and doesn&#39;t have a quite as many languages and frameworks supported.&lt;/p&gt; &#xA;&lt;p&gt;quick.nvim doesn&#39;t ship with any default coc plugins though, so you have to install the ones you want to use. For example if you want to use quick.nvim for TypeScript programming, you&#39;ll have to install the coc-tsserver plugin like this.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:CocInstall coc-tsserver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bindings&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&amp;lt;leader&amp;gt;&lt;/strong&gt; = &#34;&amp;lt;Space/&amp;gt;&#34;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Mapping&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-H&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move one split left&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-J&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move one split down&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-K&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move one split up&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-L&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Move one split right&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-N&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open file explorer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-S&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open search &amp;amp; replace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;leader-t&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open a terminal buffer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;sp&lt;/td&gt; &#xA;   &lt;td&gt;Split window horizontally&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;tj&lt;/td&gt; &#xA;   &lt;td&gt;Move one tab left&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;tk&lt;/td&gt; &#xA;   &lt;td&gt;Move one tab right&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;tn&lt;/td&gt; &#xA;   &lt;td&gt;Create a new tab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;to&lt;/td&gt; &#xA;   &lt;td&gt;Close all other tabs&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;vs&lt;/td&gt; &#xA;   &lt;td&gt;Split window vertically&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;K&lt;/td&gt; &#xA;   &lt;td&gt;Hover over symbol&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-Space&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open autocompletion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;CR&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Select autocompletion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;S-TAB&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browse previous autocompletion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;TAB&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Browse next autocompletion&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;leader&amp;gt;.&lt;/td&gt; &#xA;   &lt;td&gt;Open code actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;leader&amp;gt;f&lt;/td&gt; &#xA;   &lt;td&gt;Format file with prettier&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;leader&amp;gt;l&lt;/td&gt; &#xA;   &lt;td&gt;Execute code autofix&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;leader&amp;gt;rn&lt;/td&gt; &#xA;   &lt;td&gt;Rename symbol&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;coc&lt;/td&gt; &#xA;   &lt;td&gt;gd&lt;/td&gt; &#xA;   &lt;td&gt;Go to definition&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Telescope&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-B&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open buffer picker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Telescope&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-F&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open project search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Telescope&lt;/td&gt; &#xA;   &lt;td&gt;&amp;lt;C-P&amp;gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open file picker&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Maintainers&lt;/h2&gt; &#xA;&lt;a href=&#34;https://github.com/albingroen&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/19674362?v=4&#34; width=&#34;80&#34; height=&#34;80&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>saimoomedits/dotfiles</title>
    <updated>2022-07-01T01:46:45Z</updated>
    <id>tag:github.com,2022-07-01:/saimoomedits/dotfiles</id>
    <link href="https://github.com/saimoomedits/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The ArchLinux and AwesomeWM configs. 📂&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/header.png&#34; width=&#34;140&#34;&gt; &#xA; &lt;/div&gt; &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA;  The &#xA; &lt;b&gt;Arch Linux &amp;amp; AwesomeWM&lt;/b&gt; dotfiles!&#xA; &lt;br&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/#features&#34;&gt;Features&lt;/a&gt; · &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/#setup&#34;&gt;Setup&lt;/a&gt; · &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/#keybinds&#34;&gt;Keys&lt;/a&gt; · &#xA; &lt;a href=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/#modules&#34;&gt;Mods&lt;/a&gt; · &#xA; &lt;a href=&#34;https://github.com/saimoomedits/dotfiles/wiki&#34;&gt;Wiki&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;samp&gt;&lt;b&gt;Welcome&lt;/b&gt;&lt;/samp&gt; &lt;img src=&#34;https://img.shields.io/github/stars/saimoomedits/dotfiles?color=%238AB4F8&amp;amp;labelColor=101012&amp;amp;label=stars&amp;amp;style=for-the-badge&#34; width=&#34;100&#34; align=&#34;right&#34;&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;table align=&#34;right&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;sup&gt; &lt;samp&gt; If you like this setup, please drop a star.&lt;br&gt; I really appreciate it. Thanks! &lt;/samp&gt; &lt;/sup&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Hi there, thanks for dropping by 💙,&lt;/p&gt;&#xA;&lt;p&gt;these are my Arch Linux and AwesomeWM configuration files.&lt;/p&gt;&#xA;&lt;p&gt;You can use this repository as a &lt;strong&gt;&lt;a href=&#34;https://thatnixguy.github.io/posts/ricing/&#34;&gt;rice&lt;/a&gt;&lt;/strong&gt; reference.&lt;/p&gt;&#xA;&lt;p&gt;Or use them as a daily driver.&lt;/p&gt;&#xA;&lt;table&gt;     &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;&lt;samp&gt;Setup Info&lt;/samp&gt;&lt;img src=&#34;https://img.shields.io/badge/Arch_Linux-1793D1?style=for-the-badge&amp;amp;logo=arch-linux&amp;amp;logoColor=white&#34; width=&#34;110&#34; align=&#34;right&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/405a9e7cb76ab04fbf7156144cfa5f893e4679c3e49e4abfc265b6680c855ad9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417765736f6d65776d2d3663356438372e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d4c7561266c6f676f436f6c6f723d7768697465&#34; width=&#34;120&#34; align=&#34;right&#34;&gt;&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/preview.png&#34; width=&#34;350&#34; align=&#34;right&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;task&lt;/th&gt; &#xA;   &lt;th&gt;name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/awesomeWM/awesome&#34;&gt;awesome-git&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;terminal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;alacritty&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;music player&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.musicpd.org/&#34;&gt;mpd&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/ncmpcpp/ncmpcpp&#34;&gt;ncmpcpp&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Light Gtk theme&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cutefish-ubuntu.github.io/&#34;&gt;Cutefish-light&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dark Gtk theme&lt;/td&gt; &#xA;   &lt;td&gt;Awesthetic-gtk&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;bar&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://awesomewm.org/apidoc/popups_and_bars/awful.wibar.html&#34;&gt;wibar&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;compositor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yshui/picom&#34;&gt;picom-git&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;&lt;samp&gt;&lt;b&gt;more info&lt;/b&gt;&lt;/samp&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;Fonts?&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;as for fonts, the setup uses 4 fonts in total &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;&lt;em&gt;Roboto&lt;/em&gt; - main ui font&lt;/li&gt; &#xA;      &lt;li&gt;&lt;em&gt;Material Icons&lt;/em&gt; - for icons&lt;/li&gt; &#xA;      &lt;li&gt;&lt;em&gt;Iosevka&lt;/em&gt; - Terminal/Monospace font&lt;/li&gt; &#xA;      &lt;li&gt;&lt;em&gt;JetbrainsMono NF&lt;/em&gt; - idk&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;gaps/border/titlebar&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;&lt;strong&gt;titlebars&lt;/strong&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;you can edit &lt;code&gt;layout/decorations/init.lua&lt;/code&gt; to emend/modify the global titlebar.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;borders&lt;/strong&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;border size can be change in &lt;code&gt;theme/ui_vars.lua&lt;/code&gt;, there is a &lt;code&gt;border_size&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;&lt;strong&gt;gaps&lt;/strong&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Gaps can also be changed in &lt;code&gt;theme/ui_vars.lua&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;custom theme?&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;for dark, edit &lt;code&gt;theme/colors/dark.lua&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;li&gt;for light, edit &lt;code&gt;theme/colors/light.lua&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;strong&gt;rounded corners&lt;/strong&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;by default, windows are rounded with awesome-wm&#39;s &lt;code&gt;client.shape&lt;/code&gt; property,&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;if you want to use picom instead, do the following,&lt;/p&gt; &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;edit &lt;code&gt;config/others.lua&lt;/code&gt;&lt;/li&gt; &#xA;      &lt;li&gt;scroll down to line &lt;code&gt;252&lt;/code&gt;&lt;/li&gt; &#xA;      &lt;li&gt;either, comment it out or remove that line&lt;/li&gt; &#xA;      &lt;li&gt;this will disable rounded windows with awesomeWM&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;samp&gt;&lt;b&gt;features&lt;/b&gt;&lt;/samp&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Control Center&lt;/li&gt; &#xA; &lt;li&gt;Vertical Bar&lt;/li&gt; &#xA; &lt;li&gt;Brightness / Volume OSD&lt;/li&gt; &#xA; &lt;li&gt;Lockscreen&lt;/li&gt; &#xA; &lt;li&gt;Tasklist Dock&lt;/li&gt; &#xA; &lt;li&gt;Light/Dark gtk and zathura theme&lt;/li&gt; &#xA; &lt;li&gt;Minimal exitscreen&lt;/li&gt; &#xA; &lt;li&gt;Control state saver&lt;/li&gt; &#xA; &lt;li&gt;Better Ncmpcpp ui&lt;/li&gt; &#xA; &lt;li&gt;Battery notifier&lt;/li&gt; &#xA; &lt;li&gt;And many more!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;details close&gt; &#xA; &lt;summary&gt;&lt;samp&gt;Show previews&lt;/samp&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;minimalstic vertical bar&lt;/p&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/bar.png&#34; height=&#34;500&#34;&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;expandable control center&lt;/p&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/control-center.gif&#34; height=&#34;500&#34;&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Minimal notifcations with text actions&lt;/p&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/notif.png&#34; width=&#34;400&#34;&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;custom ncmpcpp UI&lt;/p&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/ncmpcpp.png&#34; width=&#34;500&#34;&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;exit screen&lt;/p&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/exitscreen.png&#34; width=&#34;500&#34;&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;lockscreen&lt;/p&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/lockscreen.png&#34; width=&#34;500&#34;&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Minimal tasklist dock with pinned apps&lt;/p&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/dock.png&#34; width=&#34;300&#34;&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Wip vscode theme&lt;/p&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/saimoomedits/dotfiles/main/assets/vscode.png&#34; width=&#34;500&#34;&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;br&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;samp&gt;&lt;b&gt;Setup&lt;/b&gt;&lt;/samp&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;samp&gt;Instructions&lt;/samp&gt;&lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;strong&gt;⚠️ NOTE: The following instructions are for Arch/Arch-based system ⚠️&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt; &lt;p&gt;Install packages / dependencies&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yay -S picom-git awesome-git acpid git mpd ncmpcpp wmctrl \&#xA;firefox lxappearance gucharmap thunar alacritty neovim polkit-gnome \&#xA;xdotool xclip scrot brightnessctl alsa-utils pulseaudio jq acpi rofi \&#xA;inotify-tools zsh mpdris2 bluez bluez-utils bluez-plugins acpi acpi_call \&#xA;playerctl redshift cutefish-cursor-themes-git cutefish-icons upower xorg xorg-init tar&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Make backup of directories that will be changed (optional)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd &#xA;mkdir .backup_config&#xA;cp -r ~/.config/* .backup_config/&#xA;cp -r ~/.mpd .backup_config/&#xA;cp -r ~/.ncmpcpp .backup_config/&#xA;cp -r ~/.themes .backup_config/&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Clone this repo&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd&#xA;clear&#xA;git clone --recurse-submodules https://github.com/saimoomedits/dotfiles.git&#xA;cd dotfiles&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Copy the dotfiles in required places&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cp -rf .config/* ~/.config/&#xA;cp -rf extras/mpd ~/.mpd&#xA;cp -rf extras/ncmpcpp ~/.ncmpcpp&#xA;cp -rf extras/fonts ~/.fonts&#xA;cp -rf extras/scripts ~/.scripts&#xA;cp -rf extras/oh-my-zsh ~/.oh-my-zsh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Extract Gtk-theme&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mkdir ~/.themes&#xA;cp ./themes/* ~/.themes&#xA;cd ~/.themes&#xA;tar -xf Awesthetic.tar&#xA;tar -xf Cutefish-light-modified.tar&#xA;rm Awesthetic.tar Cutefish-light-modified.tar&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;make some files executeable&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd ~/.config/awesome/misc&#xA;sudo chmod -R +x *&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Startup services&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl --user enable mpd&#xA;sudo systemctl enable bluetooth&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Done&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;if your already logged into awesome, reload it&lt;/li&gt; &#xA;    &lt;li&gt;else, Login to AwesomeWM&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;br&gt; &#xA; &lt;p&gt;&lt;strong&gt;Enjoy &lt;span&gt;😄&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;br&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details close&gt; &#xA;    &lt;summary&gt;&lt;samp&gt;&lt;b&gt;Vscode theme&lt;/b&gt;&lt;/samp&gt;&lt;/summary&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;copy &lt;code&gt;extras/vscode-theme/Awesthetic&lt;/code&gt; to &lt;code&gt;~/.vscode/extentions/&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;now, in VScode, open the Color Theme picker with &lt;code&gt;File &amp;gt; Preferences &amp;gt; Color Theme&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;select &lt;code&gt;Awesthetic&lt;/code&gt; theme.&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;samp&gt;&lt;b&gt;Keybinds&lt;/b&gt;&lt;/samp&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;you can get a list of keybindings &lt;a href=&#34;https://github.com/saimoomedits/dotfiles/wiki/Keybinds&#34;&gt;here in the wiki&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;the dock can be opened by hovering bottom edge of primary screen&lt;/li&gt; &#xA; &lt;li&gt;the control-Center can either be opened by keybinding &lt;code&gt;super(windows key) + a&lt;/code&gt; or &lt;br&gt; by click on the &lt;code&gt;control center&lt;/code&gt; icon in bar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;samp&gt;&lt;b&gt;Modules&lt;/b&gt;&lt;/samp&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/andOrlando/rubato&#34;&gt;Rubato&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Created by &lt;a href=&#34;https://github.com/andOrnaldo&#34;&gt;andOrlando&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Basically, Allows you to animate a number value in AwesomeWM&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/BlingCorp/bling&#34;&gt;Bling&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Created by the &lt;a href=&#34;https://github.com/BlingCorp&#34;&gt;BlingCorp&lt;/a&gt; community&lt;/li&gt; &#xA;   &lt;li&gt;Adds a lot more cool modules to AwesomeWM&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/xinhaoyuan/layout-machi&#34;&gt;Layout-machi&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Created by &lt;a href=&#34;https://github.com/xinhaoyaun&#34;&gt;xinhaoyuan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Manual layout with interactive editor&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Aire-One/awesome-battery_widget.git&#34;&gt;Upower battery&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Created by &lt;a href=&#34;https://github.com/Aire-One&#34;&gt;Aire-One&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;A UPowerGlib based battery widget for the AwesomeWM.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Awesome-Dock&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Created by &lt;a href=&#34;https://github.com/saimoomedits&#34;&gt;me&lt;/a&gt;....&lt;/li&gt; &#xA;   &lt;li&gt;A tasklist dock with pinned apps&lt;/li&gt; &#xA;   &lt;li&gt;you can use it in your config (hopefully)&lt;/li&gt; &#xA;   &lt;li&gt;but there are still lots of things to improve&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;br&gt; &#xA;  &lt;details close&gt; &#xA;   &lt;summary&gt;&lt;samp&gt;More info&lt;/samp&gt;&lt;/summary&gt; &#xA;   &lt;br&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;you can use this dock in your awesome config. but...&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;the catch is that. you need a spcific icon-theme in &lt;code&gt;/usr/share/icons&lt;/code&gt; for pinned apps to work properly&lt;br&gt; but if your using the exact rice as mine, you don&#39;t have to worry about it&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;br&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;You can customize the dock&#39;s colors, size, spacing, hide-timeout, etc in &lt;code&gt;theme/init.lua&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;   &lt;br&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;example:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;theme.awesome_dock_size = 80&#xA;theme.awesome_dock_pinned = {&#xA;    {&#34;xterm&#34;, &#34;terminal&#34;},&#xA;    {&#34;spotify&#34;, &#34;spotify&#34;},&#xA;    {&#34;xterm&#34;},&#xA;    {&#34;thunar&#34;}&#xA;}&#xA;theme.awesome_dock_color_active = theme.accent&#xA;theme.awesome_dock_color_inactive = theme.fg_color .. &#34;66&#34;&#xA;theme.awesome_dock_color_minimized = theme.accent .. &#34;33&#34;&#xA;theme.awesome_dock_color_hover = theme.fg_color .. &#34;33&#34;&#xA;theme.awesome_dock_color_bg = theme.bg_color&#xA;theme.awesome_dock_disabled = false&#xA;theme.awesome_dock_spacing = 10&#xA;theme.awesome_dock_timeout = 1.2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;to add more pinned apps you can do the following in &lt;code&gt;theme.lua&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;--[[ &#xA;    table example:&#xA;    { &#34;app command&#34;, &#34;app class&#34;}&#xA;&#xA;    * `app command` is well. the command that launches that app&#xA;    * `app class` is the class or name of the app for icons.&#xA;]]&#xA;theme.awesome_dock_pinned = {&#xA;    {&#34;spotify&#34;, &#34;spotify&#34;},&#xA;    {&#34;xterm&#34;},&#xA;    {&#34;thunar&#34;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt;&#xA;   &lt;/ul&gt;&#xA;  &lt;/details&gt; &lt;/li&gt;   &#xA;&lt;/ol&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;samp&gt;&lt;b&gt;Todos&lt;/b&gt;&lt;/samp&gt;&lt;/h2&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Make dock&#39;s icon-handler identify global icon-theme&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Improve Ncmpcpp decorations&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Improve Notifications&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Polish Awesthetic-gtk-theme&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;hr&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;&lt;samp&gt;&lt;b&gt;Credits&lt;/b&gt;&lt;/samp&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;special thanks to &lt;span&gt;❤️&lt;/span&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Moonlight-Coffee&#34;&gt;moonlight-coffee&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/justleoo&#34;&gt;justleoo&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;also these 🌃 awesome people! &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/javacafe01&#34;&gt;Javacafe01&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/manilarome&#34;&gt;manilarome&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/elenapan&#34;&gt;elenapan&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;extras &lt;span&gt;✨&lt;/span&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/awesomewm/&#34;&gt;awesomeWM&lt;/a&gt; - The awesome Window Manager&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://cutefish-ubuntu.github.io/&#34;&gt;Cutefish&lt;/a&gt; - CutefishOS&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;contributers&lt;/p&gt; &lt;a href=&#34;https://github.com/saimoomedits/dotfiles/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=saimoomedits/dotfiles&#34; width=&#34;140/&#34;&gt; &lt;/a&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Optixal/neovim-init.vim</title>
    <updated>2022-07-01T01:46:45Z</updated>
    <id>tag:github.com,2022-07-01:/Optixal/neovim-init.vim</id>
    <link href="https://github.com/Optixal/neovim-init.vim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🏮 A Neovim configuration for productive developers who want a functional yet aesthetic Vim experience 🏮&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Optixal&#39;s Neovim init.vim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19287477/167697617-3b26ac45-2a86-436d-af7a-93968467e82c.png&#34; alt=&#34;image&#34;&gt; &lt;em&gt;Windows 10, Ubuntu WSL - Windows Terminal&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/19287477/166893010-43bbbf6e-f59b-44a3-b841-359f21d464d6.gif&#34; alt=&#34;Neovim-New&#34;&gt; &lt;em&gt;Ubuntu 22.04 - Kitty Terminal&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Just like how a 🔪 is undoubtedly the most important tool of a sushi chef, a text editor (and perhaps a good mechanical keyboard) is undoubtedly the most important tool of a developer. It has to be robust, versatile, extensible, performant and powerful. Occasionally, it requires sharpening in order to produce quality work one is proud of. Also, it has to look and feel good in hand so that one will enjoy using it on every use.&lt;/p&gt; &#xA;&lt;p&gt;My neovim config has been updated for neovim 0.7.0. It is now a hybrid init.vim with lua support. It features core plugins including &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;, &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt;, &lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt;, &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope&lt;/a&gt;, &lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine&lt;/a&gt; and &lt;a href=&#34;https://github.com/kyazdani42/nvim-tree.lua&#34;&gt;nvim-tree&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The colorsheme used is my favorite, &lt;a href=&#34;https://github.com/dracula/vim&#34;&gt;Dracula&lt;/a&gt;, and the font used is my favorite too, &lt;a href=&#34;https://github.com/be5invis/Iosevka&#34;&gt;Iosevka&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing and Updating&lt;/h2&gt; &#xA;&lt;h3&gt;Automated Installation&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/Optixal/neovim-init.vim.git&#xA;cd neovim-init.vim/convenience&#xA;./install.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Automatically installs my configuration along with dependencies into your system. Tested on Ubuntu 22.04. I highly suggest reading and understanding each line of the installation script before running it, especially if you are using other Linux distros, or macOS. For macOS, manually run the commands, and use &lt;code&gt;homebrew&lt;/code&gt; instead of &lt;code&gt;apt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Manual Installation&lt;/h3&gt; &#xA;&lt;p&gt;The following are high-level steps to install my neovim config:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download this repo&lt;/li&gt; &#xA; &lt;li&gt;Install dependencies: wget, curl, git, gcc, ripgrep and python3 (along with pip and venv)&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;neovim 0.7.0+&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add neovim to your PATH&lt;/li&gt; &#xA; &lt;li&gt;Install node (with nvm or n) (along with npm)&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter#supported-languages&#34;&gt;language servers&lt;/a&gt; with npm&lt;/li&gt; &#xA; &lt;li&gt;Set up a virtual environment for Python dependencies with venv, and install Python dependencies while in it with pip&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Make a copy of this repo&#39;s &lt;code&gt;init.vim&lt;/code&gt; and place it in &lt;code&gt;~/.config/nvim/&lt;/code&gt;. Delete everything after &lt;code&gt;call plug#end()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install plugins by entering neovim and running the command &lt;code&gt;:PlugInstall&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Copy this repo&#39;s full version of &lt;code&gt;init.vim&lt;/code&gt; and the directory &lt;code&gt;lua/&lt;/code&gt; to &lt;code&gt;~/.config/nvim/&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Done!&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For exact commands to run, refer to &lt;code&gt;convenience/install.sh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Post Installation&lt;/h3&gt; &#xA;&lt;h4&gt;Download and install a Nerd Font&lt;/h4&gt; &#xA;&lt;p&gt;nvim-cmp, telescope, lualine and nvim-tree require a patched font to display icons properly. &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts&#34;&gt;Nerd Fonts&lt;/a&gt; are recommended. Run &lt;code&gt;./font_install.sh&lt;/code&gt; to download and install Iosevka Term Nerd Font into your &lt;code&gt;~/.fonts&lt;/code&gt; directory, or run the command manually:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -fLo ~/.fonts/Iosevka\ Term\ Nerd\ Font\ Complete\ Mono.ttf --create-dirs https://github.com/ryanoasis/nerd-fonts/raw/master/patched-fonts/Iosevka/Regular/complete/Iosevka%20Term%20Nerd%20Font%20Complete%20Mono.ttf&#xA;fc-cache -rv&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once downloaded, open your terminal&#39;s preferences and change the font to &#34;Iosevka Term Mono&#34;. If your terminal allows to differentiate the regular, bold, italics and bold-italics, make sure to download the other variations as well.&lt;/p&gt; &#xA;&lt;p&gt;If the font does not appear in your terminal settings, try restarting your terminal. If it&#39;s still not appearing, your OS&#39; font directory may not be &lt;code&gt;~/.fonts&lt;/code&gt;. Find out which directory your fonts are stored in, and place the downloaded font file in that directory instead. Or, install the font normally using your OS&#39; GUI.&lt;/p&gt; &#xA;&lt;p&gt;If you are using a GPU-accelerated terminal like kitty, or if the font starts to look weird in your terminal, it could be better to &lt;a href=&#34;https://sw.kovidgoyal.net/kitty/faq/?highlight=nerd#kitty-is-not-able-to-use-my-favorite-font&#34;&gt;avoid using a Nerd Font and use the original font instead&lt;/a&gt;, while still using a single Nerd Font as the fallback for the symbols.&lt;/p&gt; &#xA;&lt;p&gt;So, instead of installing:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Iosevka Term Nerd Font Mono (Regular, Bold, Italics, Bold-Italics) (Characters &amp;amp; symbols will be used)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Install this:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Iosevka (Regular, Bold, Italics, Bold-Italics) (Characters will be used)&lt;/li&gt; &#xA; &lt;li&gt;Iosevka Term Nerd Font Mono (Regular) (Symbols will be used)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Your terminal should pick up the symbols automatically from the single nerd font as the fallback font.&lt;/p&gt; &#xA;&lt;h4&gt;Install grammars and language servers&lt;/h4&gt; &#xA;&lt;h5&gt;Grammar (for nvim-treesitter highlighting)&lt;/h5&gt; &#xA;&lt;p&gt;As I focus on Python development, I ensured installation of python grammar within &lt;code&gt;treesitter-config.lua&lt;/code&gt; to get proper highlighting when editing Python files. To install additional grammars (e.g. TypeScript), run the following in nvim:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:TSInstall typescript&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other languages, refer to &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter#supported-languages&#34;&gt;this list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Language server (for nvim-lspconfig and nvim-cmp completion)&lt;/h5&gt; &#xA;&lt;p&gt;As I focus on Python development, the installation script installs Python language server (pyright) by default. To install additional language servers (e.g. TypeScript):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install -g typescript-language-server&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then append it to the array of servers in the lua section of &lt;code&gt;init.vim&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local servers = {&#xA;    &#39;pyright&#39;,&#xA;    &#39;tsserver&#39;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For other language servers, refer to &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/raw/master/doc/server_configurations.md&#34;&gt;this list&lt;/a&gt; to see the packages you need to install.&lt;/p&gt; &#xA;&lt;h4&gt;Alias vim&lt;/h4&gt; &#xA;&lt;p&gt;It may be easier for you to type &lt;code&gt;vim&lt;/code&gt; instead of &lt;code&gt;nvim&lt;/code&gt; everytime you edit a file, so aliasing it could save you some trouble. Add an alias to your bashrc/zshrc/somerc or aliases file to alias nvim to vim:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;echo &#34;alias vim=&#39;nvim&#39;&#34; &amp;gt;&amp;gt; ~/.zshrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Fix nvim + tmux issues&lt;/h4&gt; &#xA;&lt;p&gt;Running nvim within a tmux session may cause certain unwanted issues like escape key lag, or displaying wrong colors. Run &lt;code&gt;cat .tmux.conf &amp;gt;&amp;gt; ~/.tmux.conf&lt;/code&gt; or manually add these to your &lt;code&gt;~/.tmux.conf&lt;/code&gt; configuration file to address the issues:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set -sg escape-time 5 # fix vim esc delay&#xA;set -g default-terminal &#34;screen-256color&#34; # ensures vim uses right $TERM color, default is &#34;screen&#34;&#xA;set -ga terminal-overrides &#34;,*256col*:Tc&#34; # fixes vim reproducing slightly wrong colors in tmux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Install and update plugins&lt;/h4&gt; &#xA;&lt;p&gt;Run these to install new plugins, update or delete existing plugins, or upgrade vim-plug itself.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install plugins: &lt;code&gt;:PlugInstall&lt;/code&gt; in nvim. Run this after adding new plugins (e.g. &lt;code&gt;Plug &#39;username/repo&#39;&lt;/code&gt;) to init.vim&lt;/li&gt; &#xA; &lt;li&gt;Update plugins: &lt;code&gt;:PlugUpdate&lt;/code&gt; in nvim&lt;/li&gt; &#xA; &lt;li&gt;Delete unused plugins: &lt;code&gt;:PlugClean&lt;/code&gt; in nvim&lt;/li&gt; &#xA; &lt;li&gt;Update vim-plug itself: &lt;code&gt;:PlugUpgrade&lt;/code&gt; in nvim&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Custom Mapped Commands in Normal Mode&lt;/h2&gt; &#xA;&lt;p&gt;Core:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;,&lt;/code&gt; - Map leader, nearly all my custom mappings starts with pressing the comma key&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,q&lt;/code&gt; or &lt;code&gt;\\&lt;/code&gt; - Toggle sidebar filetree viewer (nvim-tree.lua)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,r&lt;/code&gt; - Refresh/source ~/.config/nvim/init.vim&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,t&lt;/code&gt; - Trim all trailing whitespaces&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,a&lt;/code&gt; - Auto align variables (vim-easy-align), eg. do &lt;code&gt;,a=&lt;/code&gt; while your cursor is on a bunch of variables to align their equal signs&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,h&lt;/code&gt; - Toggle rainbow parentheses highlighting (rainbow-parentheses.vim)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,j&lt;/code&gt; - Set filetype to &#34;journal&#34; which makes the syntax highlighting beautiful when working on regular text files and markdown&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,k&lt;/code&gt; - Toggle coloring of hex colors&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,l&lt;/code&gt; - Toggle Limelight mode, highlight the lines near cursor only (Limelight)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,,&lt;/code&gt; - Remove highlights (after searching with &lt;code&gt;/&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;Tab&amp;gt;&lt;/code&gt; - Next buffer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;Shift-Tab&amp;gt;&lt;/code&gt; - Previous buffer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,$s&lt;/code&gt; - New terminal in horizontal split&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,$v&lt;/code&gt; - New terminal in vertical split&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Python:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;,d&lt;/code&gt; - Automatically generate Python docstrings while cursor is hovering above a Python function or class (vim-pydocstring and doq)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,x&lt;/code&gt; - Auto format Python scripts (yapf)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Telescope:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;,ff&lt;/code&gt; - Find files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,fg&lt;/code&gt; - Live grep from files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,fb&lt;/code&gt; - Buffers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,fh&lt;/code&gt; - Help tags&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,fc&lt;/code&gt; - Change colorscheme&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;,f/&lt;/code&gt; - Fuzzy find current buffer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Other mappings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;,c&amp;lt;Space&amp;gt;&lt;/code&gt; - Toggle comment for current line (Nerd Commenter)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;Alt-r/c&amp;gt;&lt;/code&gt; - Toggle RGB color picker (vCoolor) (uses GTK+, requires yad or zenity)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig#suggested-configuration&#34;&gt;nvim-lspconfig mappings&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>