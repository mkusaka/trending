<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-05-08T01:33:14Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mason-org/mason-lspconfig.nvim</title>
    <updated>2025-05-08T01:33:14Z</updated>
    <id>tag:github.com,2025-05-08:/mason-org/mason-lspconfig.nvim</id>
    <link href="https://github.com/mason-org/mason-lspconfig.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Extension to mason.nvim that makes it easier to use lspconfig with mason.nvim.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Linux-%23.svg?logo=linux&amp;amp;color=FCC624&amp;amp;logoColor=black&#34; alt=&#34;Linux&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/macOS-%23.svg?logo=apple&amp;amp;color=000000&amp;amp;logoColor=white&#34; alt=&#34;macOS&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Windows-%23.svg?logo=windows&amp;amp;color=0078D6&amp;amp;logoColor=white&#34; alt=&#34;Windows&#34;&gt; &lt;a href=&#34;https://github.com/mason-org/mason-lspconfig.nvim/actions?query=workflow%3ATests+branch%3Amain+event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/mason-org/mason-lspconfig.nvim/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;GitHub CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/mason-org&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/mason-org?style=flat-square&#34; alt=&#34;Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;mason-lspconfig.nvim&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;code&gt;mason-lspconfig&lt;/code&gt; bridges &lt;a href=&#34;https://github.com/mason-org/mason.nvim&#34;&gt;&lt;code&gt;mason.nvim&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;&lt;code&gt;lspconfig&lt;/code&gt;&lt;/a&gt; plugin - making it easier to use both plugins together. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;code&gt;:help mason-lspconfig.nvim&lt;/code&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;sup&gt;Latest version: v2.0.0&lt;/sup&gt; &#xA; &lt;!-- x-release-please-version --&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#automatically-enable-installed-servers&#34;&gt;Automatically enable installed servers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#commands&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#default-configuration&#34;&gt;Default configuration&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;:h mason-lspconfig-introduction&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This plugin&#39;s main responsibilities are to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;allow you to (i) automatically install, and (ii) automatically enable (&lt;code&gt;vim.lsp.enable()&lt;/code&gt;) installed servers&lt;/li&gt; &#xA; &lt;li&gt;provide extra convenience APIs such as the &lt;code&gt;:LspInstall&lt;/code&gt; command&lt;/li&gt; &#xA; &lt;li&gt;provide additional LSP configurations for a few servers&lt;/li&gt; &#xA; &lt;li&gt;translate between &lt;code&gt;nvim-lspconfig&lt;/code&gt; server names and &lt;code&gt;mason.nvim&lt;/code&gt; package names (e.g. &lt;code&gt;lua_ls &amp;lt;-&amp;gt; lua-language-server&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] Since the introduction of &lt;a href=&#34;https://neovim.io/doc/user/lsp.html#vim.lsp.config()&#34;&gt;&lt;code&gt;:h vim.lsp.config&lt;/code&gt;&lt;/a&gt; in Neovim 0.11, this plugin&#39;s feature set has been reduced. Use this plugin if you want to automatically enable installed servers (&lt;a href=&#34;https://neovim.io/doc/user/lsp.html#vim.lsp.enable()&#34;&gt;&lt;code&gt;:h vim.lsp.enable()&lt;/code&gt;&lt;/a&gt;) or have access to the &lt;code&gt;:LspInstall&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;:h mason-lspconfig-requirements&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;neovim &amp;gt;= 0.11.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mason.nvim &amp;gt;= 2.0.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;nvim-lspconfig &amp;gt;= 2.0.0&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;mason-org/mason.nvim&#34;,&#xA;    &#34;mason-org/mason-lspconfig.nvim&#34;,&#xA;    &#34;neovim/nvim-lspconfig&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;vim-plug&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;mason-org/mason.nvim&#39;&#xA;Plug &#39;mason-org/mason-lspconfig.nvim&#39;&#xA;Plug &#39;neovim/nvim-lspconfig&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;:h mason-lspconfig-quickstart&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;It&#39;s important that you set up &lt;code&gt;mason.nvim&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; have &lt;code&gt;nvim-lspconfig&lt;/code&gt; available in &lt;a href=&#34;https://neovim.io/doc/user/options.html#&#39;runtimepath&#39;&#34;&gt;&lt;code&gt;:h runtimepath&lt;/code&gt;&lt;/a&gt; before setting up &lt;code&gt;mason-lspconfig.nvim&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#configuration&#34;&gt;Configuration&lt;/a&gt; section for information about which settings are available.&lt;/p&gt; &#xA;&lt;h1&gt;Automatically enable installed servers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;mason-lspconfig.nvim&lt;/code&gt; will automatically enable (&lt;code&gt;vim.lsp.enable()&lt;/code&gt;) installed servers for you by default.&lt;/p&gt; &#xA;&lt;p&gt;To disable this feature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;mason-lspconfig&#34;).setup {&#xA;    automatic_enable = false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To exclude certain servers from being enabled:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;mason-lspconfig&#34;).setup {&#xA;    automatic_enable = {&#xA;        exclude = {&#xA;            &#34;rust_analyzer&#34;,&#xA;            &#34;ts_ls&#34;&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, to only enable specific servers:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;mason-lspconfig&#34;).setup {&#xA;    automatic_enable = {&#xA;        &#34;lua_ls&#34;,&#xA;        &#34;vimls&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE] This will only enable servers that are installed via Mason. It will not recognize servers installed elsewhere on your system.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Commands&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;:h mason-lspconfig-commands&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspInstall [&amp;lt;server&amp;gt; ...]&lt;/code&gt;: Installs the provided servers. If no server is provided you will be prompted to select a server based on the current buffer&#39;s &lt;code&gt;&amp;amp;filetype&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspUninstall &amp;lt;server&amp;gt; ...&lt;/code&gt;: Uninstalls the provided servers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;:h mason-lspconfig-settings&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You may optionally configure certain behavior of &lt;code&gt;mason-lspconfig.nvim&lt;/code&gt; when calling the &lt;code&gt;.setup()&lt;/code&gt; function. Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason-lspconfig.nvim/main/#default-configuration&#34;&gt;default configuration&lt;/a&gt; for a list of all available settings.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;mason-lspconfig&#34;).setup {&#xA;    ensure_installed = { &#34;lua_ls&#34;, &#34;rust_analyzer&#34; },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Default configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local DEFAULT_SETTINGS = {&#xA;    -- A list of servers to automatically install if they&#39;re not already installed. Example: { &#34;rust_analyzer@nightly&#34;, &#34;lua_ls&#34; }&#xA;    ---@type string[]&#xA;    ensure_installed = {},&#xA;&#xA;    -- Whether installed servers should automatically be enabled via `:h vim.lsp.enable()`.&#xA;    --&#xA;    -- To exclude certain servers from being automatically enabled:&#xA;    -- ```lua&#xA;    --   automatic_enable = {&#xA;    --     exclude = { &#34;rust_analyzer&#34;, &#34;ts_ls&#34; }&#xA;    --   }&#xA;    -- ```&#xA;    --&#xA;    -- To only enable certain servers to be automatically enabled:&#xA;    -- ```lua&#xA;    --   automatic_enable = {&#xA;    --     &#34;lua_ls&#34;,&#xA;    --     &#34;vimls&#34;&#xA;    --   }&#xA;    -- ```&#xA;    ---@type boolean | string[] | { exclude: string[] }&#xA;    automatic_enable = true,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>mason-org/mason.nvim</title>
    <updated>2025-05-08T01:33:14Z</updated>
    <id>tag:github.com,2025-05-08:/mason-org/mason.nvim</id>
    <link href="https://github.com/mason-org/mason.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Portable package manager for Neovim that runs everywhere Neovim runs. Easily install and manage LSP servers, DAP servers, linters, and formatters.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Linux-%23.svg?logo=linux&amp;amp;color=FCC624&amp;amp;logoColor=black&#34; alt=&#34;Linux&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/macOS-%23.svg?logo=apple&amp;amp;color=000000&amp;amp;logoColor=white&#34; alt=&#34;macOS&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Windows-%23.svg?logo=windows&amp;amp;color=0078D6&amp;amp;logoColor=white&#34; alt=&#34;Windows&#34;&gt; &lt;a href=&#34;https://github.com/mason-org/mason.nvim/actions?query=workflow%3ATests+branch%3Amain+event%3Apush&#34;&gt;&lt;img src=&#34;https://github.com/mason-org/mason.nvim/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;GitHub CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/sponsors/williamboman&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/williamboman&#34; alt=&#34;Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/177613416-0c0354d2-f431-40d8-87f0-21310f0bba0e.png&#34; alt=&#34;mason.nvim&#34;&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Portable package manager for Neovim that runs everywhere Neovim runs.&lt;br&gt; Easily install and manage LSP servers, DAP servers, linters, and formatters.&lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;code&gt;:help mason.nvim&lt;/code&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;sup&gt;Latest version: v2.0.0&lt;/sup&gt; &#xA; &lt;!-- x-release-please-version --&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Table of Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#extensions&#34;&gt;Extensions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#commands&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#registries&#34;&gt;Registries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L11&#34;&gt;&lt;code&gt;:h mason-introduction&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;mason.nvim&lt;/code&gt; is a Neovim plugin that allows you to easily manage external editor tooling such as LSP servers, DAP servers, linters, and formatters through a single interface. It runs everywhere Neovim runs (across Linux, macOS, Windows, etc.), with only a small set of &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#requirements&#34;&gt;external requirements&lt;/a&gt; needed.&lt;/p&gt; &#xA;&lt;p&gt;Packages are installed in Neovim&#39;s data directory (&lt;a href=&#34;https://neovim.io/doc/user/starting.html#standard-path&#34;&gt;&lt;code&gt;:h standard-path&lt;/code&gt;&lt;/a&gt;) by default. Executables are linked to a single &lt;code&gt;bin/&lt;/code&gt; directory, which &lt;code&gt;mason.nvim&lt;/code&gt; will add to Neovim&#39;s PATH during setup, allowing seamless access from Neovim builtins (shell, terminal, etc.) as well as other 3rd party plugins.&lt;/p&gt; &#xA;&lt;p&gt;For a list of all available packages, see &lt;a href=&#34;https://mason-registry.dev/registry/list&#34;&gt;https://mason-registry.dev/registry/list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;Main window&#34; src=&#34;https://user-images.githubusercontent.com/6705160/177617680-d62caf26-f253-4ace-ab57-4b590595adca.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/177617684-6bb4c13f-1235-4ac9-829e-120b06f7437b.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;Language filter&#34; src=&#34;https://user-images.githubusercontent.com/6705160/177617688-8f9ba225-00c8-495c-9c4c-b74240d6f280.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;LSP server configuration schema&#34; src=&#34;https://user-images.githubusercontent.com/6705160/177617692-02c6ddde-a97e-42b4-bca4-4f4caf45d569.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;Checking for new versions&#34; src=&#34;https://user-images.githubusercontent.com/6705160/180648183-69077d10-8795-4da6-ba4d-57ecf0cb25c9.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img alt=&#34;Help window&#34; src=&#34;https://user-images.githubusercontent.com/6705160/180648292-136a0888-0fb6-4226-aa29-53bd3ffed400.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L50&#34;&gt;&lt;code&gt;:h mason-requirements&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;mason.nvim&lt;/code&gt; relaxes the minimum requirements by attempting multiple different utilities (for example, &lt;code&gt;wget&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, and &lt;code&gt;Invoke-WebRequest&lt;/code&gt; are all perfect substitutes). The &lt;em&gt;minimum&lt;/em&gt; recommended requirements are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;neovim &lt;code&gt;&amp;gt;= 0.10.0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;For Unix systems: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;git(1)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;curl(1)&lt;/code&gt; or &lt;code&gt;GNU wget(1)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;unzip(1)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;GNU tar (&lt;code&gt;tar(1)&lt;/code&gt; or &lt;code&gt;gtar(1)&lt;/code&gt; depending on platform)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;gzip(1)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;For Windows systems: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;pwsh or powershell&lt;/li&gt; &#xA;   &lt;li&gt;git&lt;/li&gt; &#xA;   &lt;li&gt;GNU tar&lt;/li&gt; &#xA;   &lt;li&gt;One of the following: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7zip&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://peazip.github.io/&#34;&gt;peazip&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/mholt/archiver&#34;&gt;archiver&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.winzip.com/&#34;&gt;winzip&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://www.win-rar.com/&#34;&gt;WinRAR&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;mason.nvim&lt;/code&gt; will regularly shell out to external package managers, such as &lt;code&gt;cargo&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt;. Depending on your personal usage, some of these will also need to be installed. Refer to &lt;code&gt;:checkhealth mason&lt;/code&gt; for a full list.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;Packer&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;    &#34;mason-org/mason.nvim&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;mason-org/mason.nvim&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;mason-org/mason.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L67&#34;&gt;&lt;code&gt;:h mason-quickstart&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;mason&#34;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;mason.nvim&lt;/code&gt; is optimized to load as little as possible during setup. Lazy-loading the plugin, or somehow deferring the setup, is not recommended.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#configuration&#34;&gt;Configuration&lt;/a&gt; section for information about which settings are available.&lt;/p&gt; &#xA;&lt;h2&gt;Extensions&lt;/h2&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://github.com/mason-org/mason.nvim/wiki/Extensions&#34;&gt;Wiki&lt;/a&gt; for a list of 3rd party extensions.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mason-org/mason-lspconfig.nvim&#34;&gt;&lt;code&gt;mason-lspconfig.nvim&lt;/code&gt;&lt;/a&gt; - recommended for usage with &lt;code&gt;lspconfig&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Commands&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L178&#34;&gt;&lt;code&gt;:h mason-commands&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:Mason&lt;/code&gt; - opens a graphical status window&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonUpdate&lt;/code&gt; - updates all managed registries&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonInstall &amp;lt;package&amp;gt; ...&lt;/code&gt; - installs/re-installs the provided packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonUninstall &amp;lt;package&amp;gt; ...&lt;/code&gt; - uninstalls the provided packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonUninstallAll&lt;/code&gt; - uninstalls all packages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:MasonLog&lt;/code&gt; - opens the &lt;code&gt;mason.nvim&lt;/code&gt; log file in a new tab window&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Registries&lt;/h1&gt; &#xA;&lt;p&gt;Mason&#39;s core package registry is located at &lt;a href=&#34;https://github.com/mason-org/mason-registry&#34;&gt;mason-org/mason-registry&lt;/a&gt;. Before any packages can be used, the registry needs to be downloaded. This is done automatically for you when using the different Mason commands (e.g. &lt;code&gt;:MasonInstall&lt;/code&gt;), but can also be done manually by using the &lt;code&gt;:MasonUpdate&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re utilizing Mason&#39;s Lua APIs to access packages, it&#39;s recommended to use the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L549&#34;&gt;&lt;code&gt;:h mason-registry.refresh()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L542&#34;&gt;&lt;code&gt;:h mason-registry.update()&lt;/code&gt;&lt;/a&gt; functions to ensure you have the latest package information before retrieving packages.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt#L238&#34;&gt;&lt;code&gt;:h mason-settings&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You may optionally configure certain behavior of &lt;code&gt;mason.nvim&lt;/code&gt; when calling the &lt;code&gt;.setup()&lt;/code&gt; function. Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/#default-configuration&#34;&gt;default configuration&lt;/a&gt; for a list of all available settings.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;mason&#34;).setup({&#xA;    ui = {&#xA;        icons = {&#xA;            package_installed = &#34;✓&#34;,&#xA;            package_pending = &#34;➜&#34;,&#xA;            package_uninstalled = &#34;✗&#34;&#xA;        }&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Default configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@class MasonSettings&#xA;local DEFAULT_SETTINGS = {&#xA;    ---@since 1.0.0&#xA;    -- The directory in which to install packages.&#xA;    install_root_dir = path.concat { vim.fn.stdpath &#34;data&#34;, &#34;mason&#34; },&#xA;&#xA;    ---@since 1.0.0&#xA;    -- Where Mason should put its bin location in your PATH. Can be one of:&#xA;    -- - &#34;prepend&#34; (default, Mason&#39;s bin location is put first in PATH)&#xA;    -- - &#34;append&#34; (Mason&#39;s bin location is put at the end of PATH)&#xA;    -- - &#34;skip&#34; (doesn&#39;t modify PATH)&#xA;    ---@type &#39;&#34;prepend&#34;&#39; | &#39;&#34;append&#34;&#39; | &#39;&#34;skip&#34;&#39;&#xA;    PATH = &#34;prepend&#34;,&#xA;&#xA;    ---@since 1.0.0&#xA;    -- Controls to which degree logs are written to the log file. It&#39;s useful to set this to vim.log.levels.DEBUG when&#xA;    -- debugging issues with package installations.&#xA;    log_level = vim.log.levels.INFO,&#xA;&#xA;    ---@since 1.0.0&#xA;    -- Limit for the maximum amount of packages to be installed at the same time. Once this limit is reached, any further&#xA;    -- packages that are requested to be installed will be put in a queue.&#xA;    max_concurrent_installers = 4,&#xA;&#xA;    ---@since 1.0.0&#xA;    -- [Advanced setting]&#xA;    -- The registries to source packages from. Accepts multiple entries. Should a package with the same name exist in&#xA;    -- multiple registries, the registry listed first will be used.&#xA;    registries = {&#xA;        &#34;github:mason-org/mason-registry&#34;,&#xA;    },&#xA;&#xA;    ---@since 1.0.0&#xA;    -- The provider implementations to use for resolving supplementary package metadata (e.g., all available versions).&#xA;    -- Accepts multiple entries, where later entries will be used as fallback should prior providers fail.&#xA;    -- Builtin providers are:&#xA;    --   - mason.providers.registry-api  - uses the https://api.mason-registry.dev API&#xA;    --   - mason.providers.client        - uses only client-side tooling to resolve metadata&#xA;    providers = {&#xA;        &#34;mason.providers.registry-api&#34;,&#xA;        &#34;mason.providers.client&#34;,&#xA;    },&#xA;&#xA;    github = {&#xA;        ---@since 1.0.0&#xA;        -- The template URL to use when downloading assets from GitHub.&#xA;        -- The placeholders are the following (in order):&#xA;        -- 1. The repository (e.g. &#34;rust-lang/rust-analyzer&#34;)&#xA;        -- 2. The release version (e.g. &#34;v0.3.0&#34;)&#xA;        -- 3. The asset name (e.g. &#34;rust-analyzer-v0.3.0-x86_64-unknown-linux-gnu.tar.gz&#34;)&#xA;        download_url_template = &#34;https://github.com/%s/releases/download/%s/%s&#34;,&#xA;    },&#xA;&#xA;    pip = {&#xA;        ---@since 1.0.0&#xA;        -- Whether to upgrade pip to the latest version in the virtual environment before installing packages.&#xA;        upgrade_pip = false,&#xA;&#xA;        ---@since 1.0.0&#xA;        -- These args will be added to `pip install` calls. Note that setting extra args might impact intended behavior&#xA;        -- and is not recommended.&#xA;        --&#xA;        -- Example: { &#34;--proxy&#34;, &#34;https://proxyserver&#34; }&#xA;        install_args = {},&#xA;    },&#xA;&#xA;    ui = {&#xA;        ---@since 1.0.0&#xA;        -- Whether to automatically check for new versions when opening the :Mason window.&#xA;        check_outdated_packages_on_open = true,&#xA;&#xA;        ---@since 1.0.0&#xA;        -- The border to use for the UI window. Accepts same border values as |nvim_open_win()|.&#xA;        -- Defaults to `:h &#39;winborder&#39;` if nil.&#xA;        border = nil,&#xA;&#xA;        ---@since 1.11.0&#xA;        -- The backdrop opacity. 0 is fully opaque, 100 is fully transparent.&#xA;        backdrop = 60,&#xA;&#xA;        ---@since 1.0.0&#xA;        -- Width of the window. Accepts:&#xA;        -- - Integer greater than 1 for fixed width.&#xA;        -- - Float in the range of 0-1 for a percentage of screen width.&#xA;        width = 0.8,&#xA;&#xA;        ---@since 1.0.0&#xA;        -- Height of the window. Accepts:&#xA;        -- - Integer greater than 1 for fixed height.&#xA;        -- - Float in the range of 0-1 for a percentage of screen height.&#xA;        height = 0.9,&#xA;&#xA;        icons = {&#xA;            ---@since 1.0.0&#xA;            -- The list icon to use for installed packages.&#xA;            package_installed = &#34;◍&#34;,&#xA;            ---@since 1.0.0&#xA;            -- The list icon to use for packages that are installing, or queued for installation.&#xA;            package_pending = &#34;◍&#34;,&#xA;            ---@since 1.0.0&#xA;            -- The list icon to use for packages that are not installed.&#xA;            package_uninstalled = &#34;◍&#34;,&#xA;        },&#xA;&#xA;        keymaps = {&#xA;            ---@since 1.0.0&#xA;            -- Keymap to expand a package&#xA;            toggle_package_expand = &#34;&amp;lt;CR&amp;gt;&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to install the package under the current cursor position&#xA;            install_package = &#34;i&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to reinstall/update the package under the current cursor position&#xA;            update_package = &#34;u&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to check for new version for the package under the current cursor position&#xA;            check_package_version = &#34;c&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to update all installed packages&#xA;            update_all_packages = &#34;U&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to check which installed packages are outdated&#xA;            check_outdated_packages = &#34;C&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to uninstall a package&#xA;            uninstall_package = &#34;X&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to cancel a package installation&#xA;            cancel_installation = &#34;&amp;lt;C-c&amp;gt;&#34;,&#xA;            ---@since 1.0.0&#xA;            -- Keymap to apply language filter&#xA;            apply_language_filter = &#34;&amp;lt;C-f&amp;gt;&#34;,&#xA;            ---@since 1.1.0&#xA;            -- Keymap to toggle viewing package installation log&#xA;            toggle_package_install_log = &#34;&amp;lt;CR&amp;gt;&#34;,&#xA;            ---@since 1.8.0&#xA;            -- Keymap to toggle the help view&#xA;            toggle_help = &#34;g?&#34;,&#xA;        },&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;sup&gt; 👋 didn&#39;t find what you were looking for? Try looking in the &lt;a href=&#34;https://raw.githubusercontent.com/mason-org/mason.nvim/main/doc/mason.txt&#34;&gt;help docs&lt;/a&gt; &lt;code&gt;:help mason.nvim&lt;/code&gt;! &lt;/sup&gt;</summary>
  </entry>
</feed>