<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-09T01:39:26Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>echasnovski/mini.surround</title>
    <updated>2023-02-09T01:39:26Z</updated>
    <id>tag:github.com,2023-02-09:/echasnovski/mini.surround</id>
    <link href="https://github.com/echasnovski/mini.surround" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim Lua plugin with fast and feature-rich surround actions. Part of &#39;mini.nvim&#39; library.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/echasnovski/media/raw/main/mini.nvim/logo/logo_surround.png&#34; style=&#34;width: 100%&#34;&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/echasnovski/mini.nvim&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h3&gt;Fast and feature-rich surround actions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add, delete, replace, find, highlight surrounding (like pair of parenthesis, quotes, etc.).&lt;/li&gt; &#xA; &lt;li&gt;Supports dot-repeat, &lt;code&gt;v:count&lt;/code&gt;, different search methods, &#34;last&#34;/&#34;next&#34; extended mappings, customization via Lua patterns or functions, and more.&lt;/li&gt; &#xA; &lt;li&gt;Has builtins for brackets, function call, tag, user prompt, and any alphanumeric/punctuation/whitespace character.&lt;/li&gt; &#xA; &lt;li&gt;Has maintained configuration of setup similar to &#39;tpope/vim-surround&#39;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See more details in &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.surround/main/#features&#34;&gt;Features&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.surround/main/doc/mini-surround.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;⦿ This is a part of &lt;a href=&#34;https://github.com/echasnovski/mini.nvim&#34;&gt;mini.nvim&lt;/a&gt; library. Please use &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/README.md&#34;&gt;this link&lt;/a&gt; if you want to mention this module.&lt;/p&gt; &#xA;&lt;p&gt;⦿ All contributions (issues, pull requests, discussions, etc.) are done inside of &#39;mini.nvim&#39;.&lt;/p&gt; &#xA;&lt;p&gt;⦿ See the repository page to learn about common design principles and configuration recipes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want to help this project grow but don&#39;t know where to start, check out &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/CONTRIBUTING.md&#34;&gt;contributing guides of &#39;mini.nvim&#39;&lt;/a&gt; or leave a Github star for &#39;mini.nvim&#39; project and/or any its standalone Git repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/24854248/173045302-cc4fd421-cc33-4924-a95b-207097973b48.mp4&#34;&gt;https://user-images.githubusercontent.com/24854248/173045302-cc4fd421-cc33-4924-a95b-207097973b48.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Actions (all of them are dot-repeatable out of the box and respect &lt;code&gt;v:count&lt;/code&gt; for searching surrounding) with configurable keymappings: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add surrounding with &lt;code&gt;sa&lt;/code&gt; (in visual mode or on motion).&lt;/li&gt; &#xA;   &lt;li&gt;Delete surrounding with &lt;code&gt;sd&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Replace surrounding with &lt;code&gt;sr&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Find surrounding with &lt;code&gt;sf&lt;/code&gt; or &lt;code&gt;sF&lt;/code&gt; (move cursor right or left).&lt;/li&gt; &#xA;   &lt;li&gt;Highlight surrounding with &lt;code&gt;sh&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Change number of neighbor lines with &lt;code&gt;sn&lt;/code&gt; (see |MiniSurround-algorithm|).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Surrounding is identified by a single character as both &#34;input&#34; (in &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; start, &lt;code&gt;find&lt;/code&gt;, and &lt;code&gt;highlight&lt;/code&gt;) and &#34;output&#34; (in &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; end): &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&#39;f&#39; - function call (string of alphanumeric symbols or &#39;_&#39; or &#39;.&#39; followed by balanced &#39;()&#39;). In &#34;input&#34; finds function call, in &#34;output&#34; prompts user to enter function name.&lt;/li&gt; &#xA;   &lt;li&gt;&#39;t&#39; - tag. In &#34;input&#34; finds tag with same identifier, in &#34;output&#34; prompts user to enter tag name.&lt;/li&gt; &#xA;   &lt;li&gt;All symbols in brackets &#39;()&#39;, &#39;[]&#39;, &#39;{}&#39;, &#39;&amp;lt;&amp;gt;&#34;. In &#34;input&#39; represents balanced brackets (open - with whitespace pad, close - without), in &#34;output&#34; - left and right parts of brackets.&lt;/li&gt; &#xA;   &lt;li&gt;&#39;?&#39; - interactive. Prompts user to enter left and right parts.&lt;/li&gt; &#xA;   &lt;li&gt;All other alphanumeric, punctuation, or space characters represent surrounding with identical left and right parts.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Configurable search methods to find not only covering but possibly next, previous, or nearest surrounding. See more in help for &lt;code&gt;MiniSurround.config&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;All actions involving finding surrounding (delete, replace, find, highlight) can be used with suffix that changes search method to find previous/last. See more in help for &lt;code&gt;MiniSurround.config&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This plugin can be installed as part of &#39;mini.nvim&#39; library (&lt;strong&gt;recommended&lt;/strong&gt;) or as a standalone Git repository.&lt;/p&gt; &#xA;&lt;p&gt;There are two branches to install from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;main&lt;/code&gt; (default, &lt;strong&gt;recommended&lt;/strong&gt;) will have latest development version of plugin. All changes since last stable release should be perceived as being in beta testing phase (meaning they already passed alpha-testing and are moderately settled).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt; will be updated only upon releases with code tested during public beta-testing phase in &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here are code snippets for some common installation methods (use only one):&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;folke/lazy.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.nvim&#39;, version = false },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.nvim&#39;, version = &#39;*&#39; },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.surround&#39;, version = false },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.surround&#39;, version = &#39;*&#39; },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;wbthomason/packer.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.nvim&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.surround&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.surround&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;junegunn/vim-plug&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.surround&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.surround&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: don&#39;t forget to call &lt;code&gt;require(&#39;mini.surround&#39;).setup()&lt;/code&gt; to enable its functionality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: if you are on Windows, there might be problems with too long file paths (like &lt;code&gt;error: unable to create file &amp;lt;some file name&amp;gt;: Filename too long&lt;/code&gt;). Try doing one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable corresponding git global config value: &lt;code&gt;git config --system core.longpaths true&lt;/code&gt;. Then try to reinstall.&lt;/li&gt; &#xA; &lt;li&gt;Install plugin in other place with shorter path.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Default config&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- No need to copy this inside `setup()`. Will be used automatically.&#xA;{&#xA;  -- Add custom surroundings to be used on top of builtin ones. For more&#xA;  -- information with examples, see `:h MiniSurround.config`.&#xA;  custom_surroundings = nil,&#xA;&#xA;  -- Duration (in ms) of highlight when calling `MiniSurround.highlight()`&#xA;  highlight_duration = 500,&#xA;&#xA;  -- Module mappings. Use `&#39;&#39;` (empty string) to disable one.&#xA;  mappings = {&#xA;    add = &#39;sa&#39;, -- Add surrounding in Normal and Visual modes&#xA;    delete = &#39;sd&#39;, -- Delete surrounding&#xA;    find = &#39;sf&#39;, -- Find surrounding (to the right)&#xA;    find_left = &#39;sF&#39;, -- Find surrounding (to the left)&#xA;    highlight = &#39;sh&#39;, -- Highlight surrounding&#xA;    replace = &#39;sr&#39;, -- Replace surrounding&#xA;    update_n_lines = &#39;sn&#39;, -- Update `n_lines`&#xA;&#xA;    suffix_last = &#39;l&#39;, -- Suffix to search with &#34;prev&#34; method&#xA;    suffix_next = &#39;n&#39;, -- Suffix to search with &#34;next&#34; method&#xA;  },&#xA;&#xA;  -- Number of lines within which surrounding is searched&#xA;  n_lines = 20,&#xA;&#xA;  -- How to search for surrounding (first inside current line, then inside&#xA;  -- neighborhood). One of &#39;cover&#39;, &#39;cover_or_next&#39;, &#39;cover_or_prev&#39;,&#xA;  -- &#39;cover_or_nearest&#39;, &#39;next&#39;, &#39;prev&#39;, &#39;nearest&#39;. For more details,&#xA;  -- see `:h MiniSurround.config`.&#xA;  search_method = &#39;cover&#39;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Similar plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-surround&#34;&gt;tpope/vim-surround&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kylechui/nvim-surround&#34;&gt;kylechui/nvim-surround&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/machakann/vim-sandwich&#34;&gt;machakann/vim-sandwich&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>roobert/node-type.nvim</title>
    <updated>2023-02-09T01:39:26Z</updated>
    <id>tag:github.com,2023-02-09:/roobert/node-type.nvim</id>
    <link href="https://github.com/roobert/node-type.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🌐 A Neovim plugin to show the currently selected node type from lsp and treesitter information&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;🌐&lt;/span&gt; node-type.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/226654/216843214-50cace9a-a6dc-4654-aa36-bffc4aba1856.gif&#34; alt=&#34;node-type screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Neovim plugin to show the currently selected node type from lsp and treesitter information.&lt;/p&gt; &#xA;&lt;p&gt;The demo shows this plugin being used in several ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using the lualine statusline integration to show the node-type info in the statusline&lt;/li&gt; &#xA; &lt;li&gt;Via a key-binding&lt;/li&gt; &#xA; &lt;li&gt;Via a call to the plugin api&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Lazy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;roobert/node-type.nvim&#34;,&#xA;    config = function()&#xA;        require(&#34;node-type&#34;).setup()&#xA;    end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Packer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;    &#34;roobert/node-type.nvim&#34;,&#xA;    config = function()&#xA;        require(&#34;node-type&#34;).setup()&#xA;    end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The default binding is &lt;code&gt;&amp;lt;leader&amp;gt;n&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;As a lualine statusline component:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;lualine&#39;).setup {&#xA;  sections = {&#xA;      lualine_x = { require(&#34;node-type&#34;).statusline }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Via the API:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;node-type&#34;).get()&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>AlexvZyl/.dotfiles</title>
    <updated>2023-02-09T01:39:26Z</updated>
    <id>tag:github.com,2023-02-09:/AlexvZyl/.dotfiles</id>
    <link href="https://github.com/AlexvZyl/.dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Configuration files/scripts for (Arch) Linux &amp; Neovim.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.dotfiles&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/81622310/216946847-34a7169d-92ef-4f7f-8fed-f5deaa88bfc3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The configuration files for my Linux desktop. Supports Arch based distros using Gnome and/or i3. Also, currently it assumes you have an Nvidia GPU and Intel CPU.&lt;/p&gt; &#xA;&lt;p&gt;I mainly use i3, but I also install Gnome for when people do not want to mess around with a tiling WM. All of the screenshots are for i3 and the gnome configs are very basic.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ &amp;nbsp; I have a custom &lt;a href=&#34;https://github.com/AlexvZyl/nordic.nvim&#34;&gt;Neovim colorschcme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ &amp;nbsp; Remember to choose i3 at the login screen.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ &amp;nbsp; These are my personal dotfiles, which means they will continuously change. If you came here from a reddit post and it is no longer like in the post, that is why.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;!--&#xA;&#xA;To install everything, simply copy and paste this into the terminal.  Reboot after it is done.&#xA;&#xA;&gt; _⚠️ &amp;nbsp; I am not following proper development protocol, so this might not always be stable._&#xA;&#xA;```bash&#xA;sudo pacman -S git&#xA;alias config=&#39;/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME&#39;&#xA;mkdir ~/.dotfiles&#xA;config clone --bare https://github.com/AlexvZyl/.dotfiles ~/.dotfiles/&#xA;config checkout -f&#xA;sudo chmod +x ~/.scripts/install.sh &amp;&amp; ~/.scripts/install.sh&#xA;```&#xA;&#xA;--&gt; &#xA;&lt;p&gt;Currently working on an install utility. Experimenting with a custom TUI renderer and different backends. Until that is done, you are welcome to use the configs for inspiration!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/81622310/211422167-be097846-014b-47d0-be45-dac8872ae327.gif&#34; alt=&#34;TUI_Preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Theme&lt;/h1&gt; &#xA;&lt;p&gt;The entire theme is based on a modified version of the &lt;a href=&#34;https://www.nordtheme.com/&#34;&gt;Nord&lt;/a&gt; color palette. The base colors are used, as well as two darker colors and bright and dim versions of the base colors. Also, the colors in the &lt;code&gt;Aurora&lt;/code&gt; palette are used more prominently than typically used in nord themes. This gives everyhing a warmer feel.&lt;/p&gt; &#xA;&lt;h1&gt;Showcase&lt;/h1&gt; &#xA;&lt;p&gt;Some screenshots showing of the desktop and rice, as well as some custom features I wrote. Everything has to be &lt;em&gt;just right&lt;/em&gt;. I am spending 8+ hours a day on this working, so it might as well be a nice experience.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Wallpapers can be found at &lt;a href=&#34;https://github.com/linuxdotexe/nordic-wallpapers&#34;&gt;this ImageGoNord repo&lt;/a&gt; and &lt;a href=&#34;https://github.com/AlexvZyl/.dotfiles/tree/main/.wallpapers&#34;&gt;locally&lt;/a&gt;. They &#34;norded&#34; some nice wallpapers.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;For Reddit:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/81622310/212382904-0502af7d-653a-4834-8663-c449cfbcfb3c.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/81622310/212382132-597b93e8-04b3-4497-93ce-8264bdc02fc0.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/81622310/212382290-a923c5be-9d16-4e44-8fc0-090b05865316.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Notifications via &lt;a href=&#34;https://github.com/dunst-project/dunst&#34;&gt;dunst&lt;/a&gt;:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/210980911-cb7825d5-1ac2-4db9-b34a-f92887701d1d.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Launcher via &lt;a href=&#34;https://github.com/adi1090x/rofi&#34;&gt;rofi&lt;/a&gt;:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/211895894-663f3480-d2d9-4546-8f1b-04217cb2dd75.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Powermenu via &lt;a href=&#34;https://github.com/adi1090x/rofi&#34;&gt;rofi&lt;/a&gt;:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/211911407-050741e9-d7d7-412c-ac12-044f002e8b6f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Lock screen via &lt;a href=&#34;https://github.com/betterlockscreen/betterlockscreen&#34;&gt;betterlockscreen&lt;/a&gt;:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/211187368-5d8e1215-4482-4506-9cd9-6508d980f1f3.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Polybar&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;TODO&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arcolinux/arcolinux-polybar/raw/master/etc/skel/.config/polybar/config&#34;&gt;Arcolinux&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adi1090x/polybar-themes&#34;&gt;Polybar-Themes&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Read mode&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Super + r&lt;/code&gt; disables the &lt;code&gt;inactive-opacity&lt;/code&gt; (from &lt;code&gt;picom&lt;/code&gt;) for when readability is important. An indicator is displayed via polybar.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Disabled:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/212110520-c782704b-9780-47af-b3c3-46b231ee8805.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Enabled:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/212110576-71a817aa-7785-4384-a817-30b3ee94e417.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Key Bindings&lt;/h1&gt; &#xA;&lt;p&gt;A few notes on the bindings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Keys combined with the &lt;code&gt;Super&lt;/code&gt; key are reserved for OS and WM related actions.&lt;/li&gt; &#xA; &lt;li&gt;Arrows and &lt;code&gt;hjkl&lt;/code&gt; keys are interchangeable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;strong&gt;i3&lt;/strong&gt;:&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Binding&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + d&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;App launcher&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + p&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Powermenu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + t&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Alacritty&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Neovide&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + b&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BTop++&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Toggle read mode&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + tab&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + Arrow&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Cycle windows&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + Shift + Arrow&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Move window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Super + Number&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Go to workspace&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Neovim&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://github.com/Alex-vZyl/.dotfiles/tree/main/.config/nvim&#34;&gt;Neovim config&lt;/a&gt; has a decent amount of work and is very close to a proper IDE. Why didn&#39;t I use &lt;a href=&#34;https://github.com/LunarVim/LunarVim&#34;&gt;LunarVim&lt;/a&gt;, &lt;a href=&#34;https://github.com/NvChad/NvChad&#34;&gt;NvChad&lt;/a&gt; or &lt;a href=&#34;https://github.com/liuchengxu/space-vim&#34;&gt;SpaceVim&lt;/a&gt;? I like doing things myself.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Overview:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/210983899-cc5d3016-8dcb-46e3-a6ce-5d3b60431524.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Dashboard&lt;/a&gt;:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/210983209-abe76da1-a190-4d3d-be10-8f570595dd7f.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt;:&lt;/em&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/81622310/210984138-f650324c-4a5a-4fb1-a5c1-e14b26ef40c9.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>