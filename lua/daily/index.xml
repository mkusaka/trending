<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-15T01:31:42Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pauchiner/pastelnight.nvim</title>
    <updated>2024-02-15T01:31:42Z</updated>
    <id>tag:github.com,2024-02-15:/pauchiner/pastelnight.nvim</id>
    <link href="https://github.com/pauchiner/pastelnight.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim theme inspired in Palenight, support a lot of plugins out-of-the-box. Includes themes for iTerm2, Alacritty, Kitty, Fish and others.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/.github/images/logo.png&#34; alt=&#34;pastelnight logo&#34; width=&#34;100&#34; , height=&#34;100&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;PastelNight&lt;/h1&gt; &#xA;&lt;!-- panvimdoc-ignore-start --&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/#%EF%B8%8F-installation&#34;&gt; ‚ö°Ô∏è Quick Start &lt;/a&gt; ¬∑ &lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/#%EF%B8%8F--configuration&#34;&gt; üç¨ Extras &lt;/a&gt; ¬∑ &lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/#%EF%B8%8F--configuration&#34;&gt; ‚öôÔ∏è Configuration &lt;/a&gt; &lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A &lt;a target=&#34;_blank&#34; href=&#34;https://neovim.io/&#34;&gt;Neovim&lt;/a&gt; theme inspired on the original &lt;a href=&#34;https://github.com/whizkydee/vscode-palenight-theme&#34;&gt;Palenight&lt;/a&gt; theme, fully written in &lt;a href=&#34;https://www.lua.org/&#34;&gt;Lua&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Includes themes for &lt;a href=&#34;https://sw.kovidgoyal.net/kitty/conf.html&#34;&gt;Kitty&lt;/a&gt;, &lt;a target=&#34;_blank&#34; href=&#34;https://github.com/alacritty/alacritty&#34;&gt;Alacritty&lt;/a&gt;, &lt;a href=&#34;https://iterm2.com&#34;&gt;iTerm2&lt;/a&gt; and &lt;a href=&#34;https://fishshell.com/docs/current/index.html&#34;&gt;Fish&lt;/a&gt;. &lt;/p&gt; &#xA;&lt;!-- panvimdoc-ignore-end --&gt; &#xA;&lt;!-- panvimdoc-include-comment&#xA;A Neovim theme inspired on the original Palenight&lt;https://github.com/whizkydee/vscode-palenight-theme&gt; theme, fully written in Lua.&#xA;&#xA;Includes themes for Kitty&lt;https://sw.kovidgoyal.net/kitty/conf.html&gt;, Alacritty&lt;https://github.com/alacritty/alacritty&gt;, iTerm2&lt;https://iterm2.com&gt; and Fish&lt;https://fishshell.com/docs/current/index.html&gt;.&#xA;--&gt; &#xA;&lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/.github/images/showcase.png&#34;&gt; &#xA;&lt;h2&gt;üé® Colors&lt;/h2&gt; &#xA;&lt;p&gt;This palette is improved from the original 16 colors to a 40 shades of those, ensuring compability with more plugins and a smooth contrast experience.&lt;/p&gt; &#xA;&lt;img align=&#34;center&#34; alt=&#34;pastelnight palette&#34; src=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/.github/images/colors.png&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.figma.com/file/o8nP8nbYI0uvoMmAnyPaCl/Pastelnight-Color-Palette?type=design&amp;amp;node-id=0%3A1&amp;amp;mode=design&amp;amp;t=jXRF6JoGGayRIPxh-1&#34;&gt;See the figma document&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enhances terminal colors.&lt;/li&gt; &#xA; &lt;li&gt;Supports all major plugins.&lt;/li&gt; &#xA; &lt;li&gt;Supports the latest Neovim 0.9.0 features.&lt;/li&gt; &#xA; &lt;li&gt;Provides extra themes for numerous other applications.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üç¨ Extras&lt;/h3&gt; &#xA;&lt;!-- extras:start --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/alacritty/alacritty&#34;&gt;Alacritty&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/alacritty&#34;&gt;alacritty&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dandavison/delta&#34;&gt;Delta&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/delta&#34;&gt;delta&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dunst-project.org/&#34;&gt;Dunst&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/dunst&#34;&gt;dunst&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fishshell.com/docs/current/index.html&#34;&gt;Fish&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/fish&#34;&gt;fish&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fishshell.com/docs/current/interactive.html#syntax-highlighting&#34;&gt;Fish Themes&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/fish_themes&#34;&gt;fish_themes&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codeberg.org/dnkl/foot&#34;&gt;Foot&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/foot&#34;&gt;foot&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/extrawurst/gitui&#34;&gt;GitUI&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/gitui&#34;&gt;gitui&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://iterm2.com/&#34;&gt;iTerm&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/iterm&#34;&gt;iterm&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sw.kovidgoyal.net/kitty/conf.html&#34;&gt;Kitty&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/kitty&#34;&gt;kitty&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.lua.org&#34;&gt;Lua Table for testing&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/lua&#34;&gt;lua&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://prismjs.com&#34;&gt;Prism&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/prism&#34;&gt;prism&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sublimetext.com/docs/themes&#34;&gt;Sublime Text&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/sublime&#34;&gt;sublime&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gnome-terminator.readthedocs.io/en/latest/config.html&#34;&gt;Terminator&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/terminator&#34;&gt;terminator&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gnunn1/tilix&#34;&gt;Tilix&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/tilix&#34;&gt;tilix&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tmux/tmux/wiki&#34;&gt;Tmux&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/tmux&#34;&gt;tmux&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.warp.dev/appearance/custom-themes&#34;&gt;Warp&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/warp&#34;&gt;warp&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wezfurlong.org/wezterm/config/files.html&#34;&gt;WezTerm&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/wezterm&#34;&gt;wezterm&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aka.ms/terminal-documentation&#34;&gt;Windows Terminal&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/windows_terminal&#34;&gt;windows_terminal&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.xfce.org/apps/terminal/advanced&#34;&gt;Xfce Terminal&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/xfceterm&#34;&gt;xfceterm&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/X_resources&#34;&gt;Xresources&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/xresources&#34;&gt;xresources&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pwmt.org/projects/zathura/&#34;&gt;Zathura&lt;/a&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/extras/zathura&#34;&gt;zathura&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- extras:end --&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Quick Start&lt;/h2&gt; &#xA;&lt;h3&gt;‚úã Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neovim.io/&#34;&gt;Neovim&lt;/a&gt; &lt;a href=&#34;https://github.com/neovim/neovim/releases/tag/v0.7.2&#34;&gt;7.2&lt;/a&gt; or higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;üõ†Ô∏è Installation&lt;/h3&gt; &#xA;&lt;p&gt;First install the theme with your preferred package manager:&lt;/p&gt; &#xA;&lt;h4&gt;üí§ lazy.nvim&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#34;pauchiner/pastelnight.nvim&#34;,&#xA;  lazy = false,&#xA;  priority = 1000,&#xA;  opts = {},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;üöÄ Usage&lt;/h3&gt; &#xA;&lt;h5&gt;VimScript&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;colorscheme pastelnight&#xA;&#xA;&#34; There are also a theme variant with greater contrast&#xA;colorscheme pastelnight-high-contrast&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Lua&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_command [[colorscheme pastelnight]]&#xA;&#xA;-- There are also a theme variant with greater contrast&#xA;vim.api.nvim_command [[colorscheme pastelnight-high-contrast]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;üîå Other supported plugins&lt;/h4&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/utilyre/barbecue.nvim&#34;&gt;Barbecue&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;barbecue&#39;).setup {&#xA;  theme = &#39;pastelnight&#39;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;Lualine&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;lualine&#39;).setup {&#xA;  options = {&#xA;    theme = &#39;pastelnight&#39;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;&lt;a href=&#34;https://github.com/itchyny/lightline.vim&#34;&gt;Lightline&lt;/a&gt;&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:lightline = {&#39;colorscheme&#39;: &#39;pastelnight&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;br&gt; Set the configuration &lt;strong&gt;before&lt;/strong&gt; loading the color scheme with &lt;code&gt;colorscheme pastelnight&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pauchiner/pastelnight.nvim&#34;&gt;PastelNight&lt;/a&gt; uses the default options, unless setup is explicitly called.&lt;/p&gt; &#xA;&lt;h4&gt;Default options&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;pastelnight&#34;).setup({&#xA;&#xA;  --- The theme comes in two styles, `default` and `highContrast`.&#xA;  style = &#34;default&#34;&#xA;&#xA;  --- Enable this to disable setting the background color.&#xA;  transparent = false,&#xA;&#xA;  --- Configure the colors used when opening a `:terminal`.&#xA;  terminal_colors = true,&#xA;&#xA;  styles = {&#xA;&#xA;    --- Style to be applied to different syntax groups.&#xA;    comments = { italic = true },&#xA;    keywords = { italic = true },&#xA;    functions = {},&#xA;    variables = {},&#xA;&#xA;    --- Background styles. Can be &#39;dark&#39;, &#39;transparent&#39; or &#39;normal&#39;.&#xA;    sidebars = &#34;dark&#34;,&#xA;    floats = &#34;dark&#34;,&#xA;  },&#xA;&#xA;  --- Set a darker background on sidebar-like windows. [&#39;terminal&#39;, &#39;packer&#39;...].&#xA;  sidebars = { &#34;qf&#34;, &#34;help&#34; },&#xA;&#xA;  --- Enabling this option, will hide inactive statuslines and replace them&#xA;  ---with a thin border instead.&#xA;  hide_inactive_statusline = false,&#xA;&#xA;  --- dims inactive windows.&#xA;  dim_inactive = false,&#xA;&#xA;  --- When true, section headers in the lualine theme will be bold.&#xA;  lualine_bold = false,&#xA;&#xA;  --- You can override specific color groups to use other groups or a hex color,&#xA;  --- function will be called with a ColorScheme table.&#xA;  ---@param colors ColorScheme&#xA;  on_colors = function(colors) end,&#xA;&#xA;  --- You can override specific highlights to use other groups or a hex color,&#xA;  --- function will be called with a Highlights and ColorScheme table.&#xA;  ---@param highlights Highlights&#xA;  ---@param colors ColorScheme&#xA;  on_highlights = function(highlights, colors) end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ü™ì Overriding Colors &amp;amp; Highlights&lt;/h2&gt; &#xA;&lt;p&gt;How the highlight groups are calculated:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;colors&lt;/code&gt; are determined based on your configuration, with the ability to override them using &lt;code&gt;config.on_colors(colors)&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;These &lt;code&gt;colors&lt;/code&gt; are utilized to generate the highlight groups.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;config.on_highlights(highlights, colors)&lt;/code&gt; can be used to override highlight groups.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For default values of &lt;code&gt;colors&lt;/code&gt; and &lt;code&gt;highlights&lt;/code&gt;, please consult the &lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/lua/pastelnight/colors.lua&#34;&gt;colors&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/pauchiner/pastelnight.nvim/main/lua/highlights/colors.lua&#34;&gt;highlights&lt;/a&gt; files.&lt;/p&gt; &#xA;&lt;h3&gt;Settings and color alteration demonstration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;pastelnight&#34;).setup({&#xA;  --- Change the &#34;hint&#34; color to the &#34;orange&#34; color, and make the &#34;error&#34; color bright red&#xA;  on_colors = function(colors)&#xA;    colors.hint = colors.orange&#xA;    colors.error = &#34;#ff0000&#34;&#xA;  end&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Borderless Telescope example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;pastelnight&#34;).setup({&#xA;  on_highlights = function(hl, c)&#xA;    local prompt = &#34;#2d3149&#34;&#xA;    hl.TelescopeNormal = {&#xA;      bg = c.bg_dark,&#xA;      fg = c.fg_dark,&#xA;    }&#xA;    hl.TelescopeBorder = {&#xA;      bg = c.bg_dark,&#xA;      fg = c.bg_dark,&#xA;    }&#xA;    hl.TelescopePromptNormal = {&#xA;      bg = prompt,&#xA;    }&#xA;    hl.TelescopePromptBorder = {&#xA;      bg = prompt,&#xA;      fg = prompt,&#xA;    }&#xA;    hl.TelescopePromptTitle = {&#xA;      bg = prompt,&#xA;      fg = prompt,&#xA;    }&#xA;    hl.TelescopePreviewTitle = {&#xA;      bg = c.bg_dark,&#xA;      fg = c.bg_dark,&#xA;    }&#xA;    hl.TelescopeResultsTitle = {&#xA;      bg = c.bg_dark,&#xA;      fg = c.bg_dark,&#xA;    }&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Common Issues&lt;/h2&gt; &#xA;&lt;h3&gt;Fix undercurls in tmux&lt;/h3&gt; &#xA;&lt;p&gt;To have undercurls show up and in color, add the following to your &lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;Tmux&lt;/a&gt; configuration file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set -g default-terminal &#34;${TERM}&#34;&#xA;set -as terminal-overrides &#39;,*:Smulx=\E[4::%p1%dm&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also you can enable &lt;u&gt;undescore colors&lt;/u&gt; but this needs &lt;strong&gt;tmux 3.0&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;set -as terminal-overrides &#39;,*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&amp;amp;%d::%p1%{255}%&amp;amp;%d%;m&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pauchiner/pastelnight.nvim/raw/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pauchiner/pastelnight.nvim/raw/main/.github/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;üç¨ Creating new extras&lt;/h3&gt; &#xA;&lt;p&gt;For the extras, we use a simple template system that can be used to generate themes for the different styles.&lt;/p&gt; &#xA;&lt;p&gt;How to add a new extra template:&lt;/p&gt; &#xA;&lt;p&gt;Create a file like &lt;code&gt;lua/pastelnight/extra/cool-app.lua&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Add the name and output file extension to the extras table in &lt;code&gt;lua/pastelnight/extra/init.lua&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Run the following command to generate new extra themes from the pastelnight plugin directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nvim --headless &#34;+lua require(&#39;pastelnight.extra&#39;).setup()&#34; +qa&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check the newly created themes in the extra/ directory.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] Please DO NOT commit them, as they are already automatically built by the CI.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;üìÉ Credits&lt;/h2&gt; &#xA;&lt;h4&gt;üé® Original Design&lt;/h4&gt; &#xA;&lt;a target=&#34;_blank&#34; alt=&#34;Olaolu&#39;s profile&#34; href=&#34;https://github.com/whizkydee&#34;&gt; &lt;img style=&#34;border-radius: 13%; margin-bottom: 10px&#34; width=&#34;90px&#34; src=&#34;https://avatars.githubusercontent.com/u/8625066?v=4&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;This theme is highly inspired by the original theme &lt;a href=&#34;https://github.com/whizkydee/vscode-palenight-theme&#34;&gt;Palenight&lt;/a&gt; from &lt;a href=&#34;https://github.com/whizkydee&#34;&gt;Olaolu Olawuyi&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;üèóÔ∏è Code Structure&lt;/h4&gt; &#xA;&lt;a target=&#34;_blank&#34; alt=&#34;folke&#39;s profile&#34; href=&#34;https://github.com/folke&#34;&gt; &lt;img style=&#34;border-radius: 13%; margin-bottom: 10px&#34; width=&#34;90px&#34; src=&#34;https://avatars.githubusercontent.com/u/292349?v=4&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;The structure of this plugin is based on the &lt;a href=&#34;https://github.com/folke/tokyonight.nvim&#34;&gt;Tokyo Night Theme&lt;/a&gt; from &lt;a href=&#34;https://github.com/folke&#34;&gt;Folke Lemaitre&lt;/a&gt;, take a look of his work please.&lt;/p&gt; &#xA;&lt;h4&gt;üêæ Hsl support&lt;/h4&gt; &#xA;&lt;a target=&#34;_blank&#34; alt=&#34;Takuya&#39;s profile&#34; href=&#34;https://github.com/craftzdog&#34;&gt; &lt;img style=&#34;border-radius: 13%; margin-bottom: 10px&#34; width=&#34;90px&#34; src=&#34;https://avatars.githubusercontent.com/u/1332805?v=4&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;The way of implement and create the color palette is inspired on the new &lt;a href=&#34;https://github.com/craftzdog/solarized-osaka.nvim&#34;&gt;Solarized Osaka Theme&lt;/a&gt; from &lt;a href=&#34;https://github.com/Craftzdog&#34;&gt;Takuya Matsuyama&lt;/a&gt;, see he&#39;s profile to know more.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;sup&gt;With üíú by Pau Garc√≠a Chiner&lt;/sup&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>MikaylaFischler/cc-mek-scada</title>
    <updated>2024-02-15T01:31:42Z</updated>
    <id>tag:github.com,2024-02-15:/MikaylaFischler/cc-mek-scada</id>
    <link href="https://github.com/MikaylaFischler/cc-mek-scada" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Configurable ComputerCraft SCADA system for multi-reactor control of Mekanism fission reactors with a GUI, automatic safety features, waste processing control, and more! Please be sure to take a look at the Wiki tab, this project has lots of docs!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cc-mek-scada&lt;/h1&gt; &#xA;&lt;p&gt;Configurable ComputerCraft SCADA system for multi-reactor control of Mekanism fission reactors with a GUI, automatic safety features, waste processing control, and more!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/MikaylaFischler/cc-mek-scada&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/MikaylaFischler/cc-mek-scada?include_prereleases&#34; alt=&#34;GitHub release (latest by date including pre-releases)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/MikaylaFischler/cc-mek-scada/check.yml?branch=main&amp;amp;label=main&#34; alt=&#34;GitHub Workflow Status (with branch)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/MikaylaFischler/cc-mek-scada/check.yml?branch=latest&amp;amp;label=latest&#34; alt=&#34;GitHub Workflow Status (with branch)&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/MikaylaFischler/cc-mek-scada/check.yml?branch=devel&amp;amp;label=devel&#34; alt=&#34;GitHub Workflow Status (with branch)&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://discord.gg/R9NSCkhcwt&#34;&gt;Join&lt;/a&gt; the Discord!&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/discord/1129075839288496259&#34; alt=&#34;Discord&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Released Component Versions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Finstaller.json&#34; alt=&#34;Installer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Fbootloader.json&#34; alt=&#34;Bootloader&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Fcomms.json&#34; alt=&#34;Comms&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Fgraphics.json&#34; alt=&#34;Graphics&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Flockbox.json&#34; alt=&#34;Lockbox&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Freactor-plc.json&#34; alt=&#34;Reactor PLC&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Frtu.json&#34; alt=&#34;RTU&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Fsupervisor.json&#34; alt=&#34;Supervisor&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Fcoordinator.json&#34; alt=&#34;Coordinator&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https%3A%2F%2Fmikaylafischler.github.io%2Fcc-mek-scada%2Fpocket.json&#34; alt=&#34;Pocket&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Mod Requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;CC: Tweaked&lt;/li&gt; &#xA; &lt;li&gt;Mekanism v10.1+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Mod Recommendations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Advanced Peripherals (adds the capability to detect environmental radiation levels)&lt;/li&gt; &#xA; &lt;li&gt;Immersive Engineering (provides bundled redstone, though any mod containing bundled redstone will do)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;v10.1+ is required due to the complete support of CC:Tweaked added in Mekanism v10.1&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can install this on a ComputerCraft computer using either:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;wget https://raw.githubusercontent.com/MikaylaFischler/cc-mek-scada/main/ccmsi.lua&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pastebin get sqUN6VUb ccmsi.lua&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SCADA&#34;&gt;SCADA&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Supervisory control and data acquisition (SCADA) is a control system architecture comprising computers, networked data communications and graphical user interfaces for high-level supervision of machines and processes. It also covers sensors and other devices, such as programmable logic controllers, which interface with process plant or machinery.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This project implements concepts of a SCADA system in ComputerCraft (because why not? ..okay don&#39;t answer that). I recommend reviewing that linked wikipedia page on SCADA if you &lt;em&gt;want&lt;/em&gt; to understand the concepts used here.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/1/10/Functional_levels_of_a_Distributed_Control_System.svg/1000px-Functional_levels_of_a_Distributed_Control_System.svg.png&#34; alt=&#34;Architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;SCADA and industrial automation terminology is used throughout the project, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supervisory Computer: Gathers data and controls the process&lt;/li&gt; &#xA; &lt;li&gt;Coordinating Computer: Used as the HMI component, user requests high-level processing operations&lt;/li&gt; &#xA; &lt;li&gt;RTU: Remote Terminal Unit&lt;/li&gt; &#xA; &lt;li&gt;PLC: Programmable Logic Controller&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;ComputerCraft Architecture&lt;/h2&gt; &#xA;&lt;h3&gt;Coordinator Server&lt;/h3&gt; &#xA;&lt;p&gt;There can only be one of these. This server acts as a hybrid of levels 3 &amp;amp; 4 in the SCADA diagram above. In addition to viewing status and controlling processes with advanced monitors, it can host access for one or more Pocket computers.&lt;/p&gt; &#xA;&lt;h3&gt;Supervisory Computers&lt;/h3&gt; &#xA;&lt;p&gt;There should be one of these per facility system. Currently, that means only one. In the future, multiple supervisors would provide the capability of coordinating between multiple facilities (like a fission facility, fusion facility, etc).&lt;/p&gt; &#xA;&lt;h3&gt;RTUs&lt;/h3&gt; &#xA;&lt;p&gt;RTUs are effectively basic connections between a device and the SCADA system with no internal logic providing the system with I/O capabilities. A single Advanced Computer can represent multiple RTUs as instead I am modeling an RTU as the wired modems connected to that computer rather than the computer itself. Each RTU is referenced separately with an identifier in the modbus communications (see Communications section), so a single computer can distribute instructions to multiple devices. This should save on having a pile of computers everywhere (but if you want to have that, no one&#39;s stopping you).&lt;/p&gt; &#xA;&lt;p&gt;The RTU control code is relatively unique, as instead of having instructions be decoded simply, due to using modbus, I implemented a generalized RTU interface. To fulfill this, each type of I/O operation is linked to a function rather than implementing the logic itself. For example, to connect an input register to a turbine &lt;code&gt;getFlowRate()&lt;/code&gt; call, the function reference itself is passed to the &lt;code&gt;connect_input_reg()&lt;/code&gt; function. A call to &lt;code&gt;read_input_reg()&lt;/code&gt; on that register address will call the &lt;code&gt;turbine.getFlowRate()&lt;/code&gt; function and return the result.&lt;/p&gt; &#xA;&lt;h3&gt;PLCs&lt;/h3&gt; &#xA;&lt;p&gt;PLCs are advanced devices that allow for both reporting and control to/from the SCADA system in addition to programed behaviors independent of the SCADA system. Currently there is only one type of PLC, and that is the reactor PLC. This is responsible for reporting on and controlling the reactor as a part of the SCADA system, and independently regulating the safety of the reactor. It checks the status for multiple hazard scenarios and shuts down the reactor if any condition is met.&lt;/p&gt; &#xA;&lt;p&gt;There can and should only be one of these per reactor. A single Advanced Computer will act as the PLC, with either a direct connection (physical contact) or a wired modem connection to the reactor logic port.&lt;/p&gt; &#xA;&lt;h2&gt;Communications&lt;/h2&gt; &#xA;&lt;p&gt;A vaguely-modbus &lt;a href=&#34;https://en.wikipedia.org/wiki/Modbus&#34;&gt;modbus&lt;/a&gt; communication protocol is used for communication with RTUs. Useful terminology for you to know:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Discrete Inputs: Single Bit Read-Only (digital inputs)&lt;/li&gt; &#xA; &lt;li&gt;Coils: Single Bit Read/Write (digital I/O)&lt;/li&gt; &#xA; &lt;li&gt;Input Registers: Multi-Byte Read-Only (analog inputs)&lt;/li&gt; &#xA; &lt;li&gt;Holding Registers: Multi-Byte Read/Write (analog I/O)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Security&lt;/h3&gt; &#xA;&lt;p&gt;HMAC message authentication is available as a configuration option to prevent replay attacks and generally prevent control or false data reporting within a system&#39;s network. This is done utilizing the &lt;a href=&#34;https://github.com/somesocks/lua-lockbox&#34;&gt;lua-lockbox&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;The other, simpler security feature is to enforce a maximum authorized transmission range, which is also a configurable feature on each device.&lt;/p&gt;</summary>
  </entry>
</feed>