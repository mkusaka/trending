<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-09-16T01:30:45Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>yuanfengyun/q_algorithm</title>
    <updated>2023-09-16T01:30:45Z</updated>
    <id>tag:github.com,2023-09-16:/yuanfengyun/q_algorithm</id>
    <link href="https://github.com/yuanfengyun/q_algorithm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;棋牌的胡牌算法，包括麻将、跑胡子、扑克。实现 lua 、c++ 、c# 、golang 、js 、java 、python 版本。( Mahjong algorithm )&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;qipai&lt;/h1&gt; &#xA;&lt;p&gt;棋牌的胡牌算法，特殊牌型判断算法&lt;/p&gt; &#xA;&lt;p&gt;1、跑胡子算法&lt;/p&gt; &#xA;&lt;p&gt;实现:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;有C++版（基于递归，回溯）。&#xA;&#xA;lua版（基于查表）。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;2、高效的麻将胡牌算法，能处理任意张赖子：&lt;/p&gt; &#xA;&lt;p&gt;速度：1S左右处理100万次每次四个赖子的麻将判胡；5秒处理1亿次八个赖子判胡（golang虚拟机上实测）。&lt;/p&gt; &#xA;&lt;p&gt;实现:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  基于花色切分，然后查表。&#xA;  &#xA;  有多种语言版本：lua、c++、c#、golang、js、java、python。&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;3、无敌的拆牌判胡算法，不占用额外内存，速度、简洁度超过查表法。支持任意赖子数量。&lt;/p&gt; &#xA;&lt;p&gt;4、特殊牌型判断：一条龙、掐张、七对、碰碰胡、十三幺、单吊、大吊车、清一色、缺门、门清。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>luaforge/html</title>
    <updated>2023-09-16T01:30:45Z</updated>
    <id>tag:github.com,2023-09-16:/luaforge/html</id>
    <link href="https://github.com/luaforge/html" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Library for parsing HTML, writen in pure-Lua. This repository was converted from a CVS repository on luaforge.net on Jan. 20, 2010. If you are the maintainer, please fork and then email luaforge@gmail.com and ask us to &#34;reroot&#34; it to you. (Or you can ask us to delete the repository.)&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>f-person/git-blame.nvim</title>
    <updated>2023-09-16T01:30:45Z</updated>
    <id>tag:github.com,2023-09-16:/f-person/git-blame.nvim</id>
    <link href="https://github.com/f-person/git-blame.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Git Blame plugin for Neovim written in Lua&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;git-blame.nvim&lt;/h1&gt; &#xA;&lt;p&gt;A git blame plugin for Neovim written in Lua&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#the-why&#34;&gt;The Why&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#demo&#34;&gt;Demo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#configuration&#34;&gt;Configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#using-lua&#34;&gt;Using Lua&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#enabled&#34;&gt;Enabled&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#message-template&#34;&gt;Message template&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#date-format&#34;&gt;Date format&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#message-when-not-committed-yet&#34;&gt;Message when not committed yet&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#highlight-group&#34;&gt;Highlight group&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#nvim_buf_set_extmark-optional-parameters&#34;&gt;nvim_buf_set_extmark optional parameters&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#virtual-text-enabled&#34;&gt;Virtual text enabled&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#ignore-by-filetype&#34;&gt;Ignore by Filetype&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#visual-delay-for-displaying-the-blame-info&#34;&gt;Visual delay for displaying the blame info&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#start-virtual-text-at-column&#34;&gt;Start virtual text at column&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#commands&#34;&gt;Commands&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#open-the-commit-url-in-browser&#34;&gt;Open the commit URL in browser&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#enabledisable-git-blame-messages&#34;&gt;Enable/Disable git blame messages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#copy-sha-hash&#34;&gt;Copy SHA hash&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#copy-commit-url&#34;&gt;Copy Commit URL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#open-file-url-in-browser&#34;&gt;Open file URL in browser&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#copy-file-url&#34;&gt;Copy file URL&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#statusline-integration&#34;&gt;Statusline integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#changing-the-timeago-format-language&#34;&gt;Changing the timeago-format language&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#thanks-to&#34;&gt;Thanks To&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#contributors-3&#34;&gt;Contributors &amp;lt;3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Using &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;f-person/git-blame.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.5.0&lt;/li&gt; &#xA; &lt;li&gt;git&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;The Why&lt;/h2&gt; &#xA;&lt;p&gt;There were several Vim plugins providing this functionality, but most of them were written in VimScript and didn&#39;t work well for me. &lt;a href=&#34;https://github.com/neoclide/coc-git&#34;&gt;coc-git&lt;/a&gt; also had option for showing blame info, it worked really well for me, I like it. However, recently I decided to switch to Neovim&#39;s builtin LSP instead of using CoC and having something running on Node.js just for git blame was not the best thing.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/f-person/git-blame.nvim/master/assets/demo.png?raw=true&#34; alt=&#34;demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Using Lua&lt;/h3&gt; &#xA;&lt;p&gt;You can use &lt;code&gt;setup&lt;/code&gt; to configure the plugin in Lua. This is the recommended way if you&#39;re using Lua for your configs. Read the documentation below to learn more about specific options (&lt;em&gt;NOTE:&lt;/em&gt; options in the &lt;code&gt;setup&lt;/code&gt; function don&#39;t have the &lt;code&gt;gitblame_&lt;/code&gt; prefix).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; you don&#39;t have to call &lt;code&gt;setup&lt;/code&gt; if you don&#39;t want to customize the default behavior.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;gitblame&#39;).setup {&#xA;     --Note how the `gitblame_` prefix is omitted in `setup`&#xA;    enabled = false,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Enabled&lt;/h3&gt; &#xA;&lt;p&gt;Enables git-blame.nvim on Neovim startup. You can toggle git blame messages on/off with the &lt;code&gt;:GitBlameToggle&lt;/code&gt; command.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_enabled = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Message template&lt;/h3&gt; &#xA;&lt;p&gt;The template for the blame message that will be shown.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;&#39; &amp;lt;author&amp;gt; • &amp;lt;date&amp;gt; • &amp;lt;summary&amp;gt;&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Available options: &lt;code&gt;&amp;lt;author&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;committer&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;committer-date&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;summary&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;sha&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_message_template = &#39;&amp;lt;summary&amp;gt; • &amp;lt;date&amp;gt; • &amp;lt;author&amp;gt;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Date format&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://www.lua.org/pil/22.1.html&#34;&gt;format&lt;/a&gt; of the date fields.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;%c&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Available options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;%r  relative date (e.g., 3 days ago)&#xA;%a  abbreviated weekday name (e.g., Wed)&#xA;%A  full weekday name (e.g., Wednesday)&#xA;%b  abbreviated month name (e.g., Sep)&#xA;%B  full month name (e.g., September)&#xA;%c  date and time (e.g., 09/16/98 23:48:10)&#xA;%d  day of the month (16) [01-31]&#xA;%H  hour, using a 24-hour clock (23) [00-23]&#xA;%I  hour, using a 12-hour clock (11) [01-12]&#xA;%M  minute (48) [00-59]&#xA;%m  month (09) [01-12]&#xA;%p  either &#34;am&#34; or &#34;pm&#34; (pm)&#xA;%S  second (10) [00-61]&#xA;%w  weekday (3) [0-6 = Sunday-Saturday]&#xA;%x  date (e.g., 09/16/98)&#xA;%X  time (e.g., 23:48:10)&#xA;%Y  full year (1998)&#xA;%y  two-digit year (98) [00-99]&#xA;%%  the character `%´&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_date_format = &#39;%r&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Message when not committed yet&lt;/h3&gt; &#xA;&lt;p&gt;The blame message that will be shown when the current modification hasn&#39;t been committed yet.&lt;/p&gt; &#xA;&lt;p&gt;Supports the same template options as &lt;code&gt;g:gitblame_message_template&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;&#39; Not Committed Yet&#39;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_message_when_not_committed = &#39;Oh please, commit this !&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Highlight group&lt;/h3&gt; &#xA;&lt;p&gt;The highlight group for virtual text.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;Comment&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_highlight_group = &#34;Question&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;nvim_buf_set_extmark&lt;/code&gt; optional parameters&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;nvim_buf_set_extmark&lt;/code&gt; is the function used for setting the virtual text. You can view an up-to-date full list of options in the &lt;a href=&#34;https://neovim.io/doc/user/api.html#nvim_buf_set_extmark()&#34;&gt;Neovim documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: overwriting &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;virt_text&lt;/code&gt; will break the plugin behavior.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_set_extmark_options = {&#xA;    \ &#39;priority&#39;: 7,&#xA;    \ }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Virtual text enabled&lt;/h3&gt; &#xA;&lt;p&gt;If the blame message should be displayed as virtual text.&lt;/p&gt; &#xA;&lt;p&gt;You may want to disable this if you display the blame message in statusline.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;1&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_display_virtual_text = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Ignore by Filetype&lt;/h3&gt; &#xA;&lt;p&gt;A list of filetypes for which gitblame information will not be displayed.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_ignored_filetypes = [&#39;lua&#39;, &#39;c&#39;]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Visual delay for displaying the blame info&lt;/h3&gt; &#xA;&lt;p&gt;The delay in milliseconds after which the blame info will be displayed.&lt;/p&gt; &#xA;&lt;p&gt;Note that this doesn&#39;t affect the performance of the plugin.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_delay = 1000 &#34; 1 second&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Start virtual text at column&lt;/h3&gt; &#xA;&lt;p&gt;Have the blame message start at a given column instead of EOL. If the current line is longer than the specified column value the blame message will default to being displayed at EOL.&lt;/p&gt; &#xA;&lt;p&gt;Default: &lt;code&gt;v:null&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:gitblame_virtual_text_column = 80&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;h3&gt;Open the commit URL in browser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:GitBlameOpenCommitURL&lt;/code&gt; opens the commit URL of commit under the cursor. Tested to work with GitHub and GitLab.&lt;/p&gt; &#xA;&lt;h3&gt;Enable/Disable git blame messages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:GitBlameToggle&lt;/code&gt; toggles git blame on/off,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:GitBlameEnable&lt;/code&gt; enables git blame messages,&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:GitBlameDisable&lt;/code&gt; disables git blame messages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Copy SHA hash&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:GitBlameCopySHA&lt;/code&gt; copies the SHA hash of current line&#39;s commit into the system&#39;s clipboard.&lt;/p&gt; &#xA;&lt;h3&gt;Copy Commit URL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:GitBlameCopyCommitURL&lt;/code&gt; copies the commit URL of current line&#39;s commit into the system clipboard.&lt;/p&gt; &#xA;&lt;h3&gt;Open file URL in browser&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:GitBlameOpenFileURL&lt;/code&gt; opens the file in the default browser.&lt;/p&gt; &#xA;&lt;p&gt;The URL is scoped to the latest commit on the current branch and has a mark of the current line. (same is true for &lt;code&gt;GitBlameCopyFileURL&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Copy file URL&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:GitBlameCopyFileURL&lt;/code&gt; copies the file URL into the system clipboard.&lt;/p&gt; &#xA;&lt;h2&gt;Statusline integration&lt;/h2&gt; &#xA;&lt;p&gt;The plugin provides you with two functions which you can incorporate into your statusline of choice:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;local git_blame = require(&#39;gitblame&#39;)&#xA;&#xA;git_blame.is_blame_text_available() -- Returns a boolean value indicating whether blame message is available&#xA;git_blame.get_current_blame_text() --  Returns a string with blame message&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is an example of integrating with &lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Lua&#34;&gt;-- Lua&#xA;vim.g.gitblame_display_virtual_text = 0 -- Disable virtual text&#xA;local git_blame = require(&#39;gitblame&#39;)&#xA;&#xA;require(&#39;lualine&#39;).setup({&#xA;    sections = {&#xA;            lualine_c = {&#xA;                { git_blame.get_current_blame_text, cond = git_blame.is_blame_text_available }&#xA;            }&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Changing the timeago-format language&lt;/h2&gt; &#xA;&lt;p&gt;The plugin uses &lt;a href=&#34;https://github.com/f-person/lua-timeago&#34;&gt;lua-timeago&lt;/a&gt; for displaying commit dates in a relative time ago format. Take a look at the &lt;a href=&#34;https://github.com/f-person/git-blame.nvim/tree/master/lua/lua-timeago/languages&#34;&gt;languages&lt;/a&gt; directory for a list of pre-installed languages. If you wish to use a language that&#39;s not built into lua-timeago, you can &lt;a href=&#34;https://github.com/f-person/lua-timeago#language&#34;&gt;do that&lt;/a&gt; too; please consider opening a PR to lua-timeago if you choose to do so :)&lt;/p&gt; &#xA;&lt;p&gt;To set a language, call the &lt;code&gt;set_language&lt;/code&gt; method:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;require(&#39;lua-timeago&#39;).set_language(require(&#39;lua-timeago/languages/hy&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Vimscript&#xA;:lua require(&#39;lua-timeago&#39;).set_language(require(&#39;lua-timeago/languages/hy&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Thanks To&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neoclide/coc-git&#34;&gt;coc-git&lt;/a&gt; for some parts of code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/APZelos/blamer.nvim&#34;&gt;blamer.nvim&lt;/a&gt; for documentation inspiration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributors &amp;lt;3&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/f-person/git-blame.nvim/graphs/contributors&#34;&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=f-person/git-blame.nvim&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Made with &lt;a href=&#34;https://contrib.rocks&#34;&gt;contrib.rocks&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;If you enjoy the plugin and want to support what I do&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/fperson&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/default-orange.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;41&#34; width=&#34;174&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>