<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-11T01:52:57Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Djancyp/cheat-sheet</title>
    <updated>2022-06-11T01:52:57Z</updated>
    <id>tag:github.com,2022-06-11:/Djancyp/cheat-sheet</id>
    <link href="https://github.com/Djancyp/cheat-sheet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nvim cheat sheet implementation&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nvim Cheat Sheet&lt;/h1&gt; &#xA;&lt;p&gt;This plugin allows you to use cheat sheet (&lt;a href=&#34;https://cht.sh/&#34;&gt;cht.sh&lt;/a&gt;) inside the vim.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Plugin written 100 % in lua. &lt;img src=&#34;https://github.com/Djancyp/cheat-sheet/raw/main/images/cheat-sheet.gif&#34; alt=&#34;&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Packer&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;use {&#34;Djancyp/cheat-sheet&#34;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Config&lt;/h2&gt; &#xA;&lt;p&gt;Optionally, you can also pass some configuration to the plugin, here&#39;s the default value:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;cheat-sheet&#34;).setup({&#xA;  auto_fill = {&#xA;    filetype = true,&#xA;    current_word = true,&#xA;  },&#xA;&#xA;  main_win = {&#xA;    style = &#34;minimal&#34;,&#xA;    border = &#34;double&#34;,&#xA;  },&#xA;&#xA;  input_win = {&#xA;    style = &#34;minimal&#34;,&#xA;    border = &#34;double&#34;,&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;auto_fill&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;filetype&lt;/code&gt;: automatically add filetype prefix to search query (ex: &lt;code&gt;lua/&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;current_word&lt;/code&gt;: automatically add the current word under your cursor to search query&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;main_win&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;style&lt;/code&gt;: main window style (see: &lt;code&gt;:h nvim_open_win()&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;border&lt;/code&gt;: main window border (see: &lt;code&gt;:h nvim_open_win()&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;input_win&lt;/code&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;style&lt;/code&gt;: input window style (see: &lt;code&gt;:h nvim_open_win()&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;border&lt;/code&gt;: input window border (see: &lt;code&gt;:h nvim_open_win()&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;:CheatSH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will open an input window and base on your filetype it will highlight the first part of search. When your query ready just hit the enter.&lt;/p&gt; &#xA;&lt;h3&gt;Ex:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;lua/for&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;git/pull&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;js/async&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information please visit the cheat sheet website - (&lt;a href=&#34;https://cht.sh/&#34;&gt;cht.sh&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h2&gt;Keys&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;| Key            | Action                          |&#xA;| -------------- | ------------------------------- |&#xA;| q              | exit cheat sheet window         |&#xA;| &amp;lt;C-c&amp;gt;          | exit input window (input mode)  |&#xA;| &amp;lt;C-d&amp;gt;          | remove text (input mode)        |&#xA;| `&amp;lt;CR&amp;gt;`(Enter)  | activate the search             |&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; &#xA;&lt;p&gt;Please make sure to update tests as appropriate.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>awesomeWM/awesome</title>
    <updated>2022-06-11T01:52:57Z</updated>
    <id>tag:github.com,2022-06-11:/awesomeWM/awesome</id>
    <link href="https://github.com/awesomeWM/awesome" rel="alternate"></link>
    <summary type="html">&lt;p&gt;awesome window manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Readme&lt;/h1&gt; &#xA;&lt;h2&gt;About Awesome&lt;/h2&gt; &#xA;&lt;p&gt;Awesome is a highly configurable, next generation framework window manager for X.&lt;/p&gt; &#xA;&lt;h2&gt;Building and installation&lt;/h2&gt; &#xA;&lt;p&gt;After extracting the dist tarball or cloning the repository, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;create a build directory at &lt;code&gt;./build&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;cmake&lt;/code&gt;,&lt;/li&gt; &#xA; &lt;li&gt;build Awesome and&lt;/li&gt; &#xA; &lt;li&gt;install it to the default prefix path &lt;code&gt;/usr/local&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Alternatively to the above, you can generate a &lt;code&gt;.deb&lt;/code&gt; or &lt;code&gt;.rpm&lt;/code&gt; package, for easy installation management:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;make package&#xA;&#xA;sudo dpkg -i awesome-x.y.z.deb&#xA;# or&#xA;sudo rpm -Uvh awesome-x.y.z.rpm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Advanced options and testing&lt;/h3&gt; &#xA;&lt;p&gt;A full list of dependencies, more advanced build options, as well as instructions on how to use the test suite can be found &lt;a href=&#34;https://awesomewm.org/apidoc/documentation/10-building-and-testing.md.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Installing current git master as a package receipts&lt;/h3&gt; &#xA;&lt;h4&gt;Arch Linux AUR&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo pacman -S --needed base-devel git&#xA;git clone https://aur.archlinux.org/awesome-git.git&#xA;cd awesome-git&#xA;makepkg -fsri&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Debian-based&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt build-dep awesome&#xA;git clone https://github.com/awesomewm/awesome&#xA;cd awesome&#xA;make package&#xA;sudo apt install *.deb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running Awesome&lt;/h2&gt; &#xA;&lt;p&gt;You can directly select Awesome from your display manager. If not, you can add the following line to your &lt;code&gt;.xinitrc&lt;/code&gt; to start Awesome using &lt;code&gt;startx&lt;/code&gt; or to &lt;code&gt;.xsession&lt;/code&gt; to start Awesome using your display manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;exec awesome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In order to connect Awesome to a specific display, make sure that the &lt;code&gt;DISPLAY&lt;/code&gt; environment variable is set correctly, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;DISPLAY=foo.bar:1 exec awesome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(This will start Awesome on display &lt;code&gt;:1&lt;/code&gt; of the host foo.bar.)&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The configuration of Awesome is done by creating a &lt;code&gt;$XDG_CONFIG_HOME/awesome/rc.lua&lt;/code&gt; file, typically &lt;code&gt;~/.config/awesome/rc.lua&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;An example configuration named &lt;code&gt;awesomerc.lua&lt;/code&gt; is provided in the source.&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;On most systems any message printed by Awesome (including warnings and errors) is written to &lt;code&gt;~/.xsession-errors&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If Awesome does not start or the configuration file is not producing the desired results the user should examine this file to gain insight into the problem.&lt;/p&gt; &#xA;&lt;h3&gt;Debugging tips&lt;/h3&gt; &#xA;&lt;p&gt;You can call &lt;code&gt;awesome&lt;/code&gt; with &lt;code&gt;gdb&lt;/code&gt; like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;DISPLAY=:2 gdb awesome&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then in &lt;code&gt;gdb&lt;/code&gt; set any arguments and run it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;(gdb) set args --replace&#xA;(gdb) run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Asking questions&lt;/h2&gt; &#xA;&lt;h4&gt;IRC&lt;/h4&gt; &#xA;&lt;p&gt;You can join us in the &lt;code&gt;#awesome&lt;/code&gt; channel on the &lt;a href=&#34;http://www.oftc.net/&#34;&gt;OFTC&lt;/a&gt; IRC network.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://webchat.oftc.net/?channels=awesome&#34;&gt;IRC Webchat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Stack Overflow&lt;/h4&gt; &#xA;&lt;p&gt;You can ask questions on &lt;a href=&#34;http://stackoverflow.com/questions/tagged/awesome-wm&#34;&gt;Stack Overflow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Reddit&lt;/h4&gt; &#xA;&lt;p&gt;We also have a &lt;a href=&#34;https://www.reddit.com/r/awesomewm/&#34;&gt;awesome subreddit&lt;/a&gt; where you can share your work and ask questions.&lt;/p&gt; &#xA;&lt;h2&gt;Reporting issues&lt;/h2&gt; &#xA;&lt;p&gt;Please report any issues you may find on &lt;a href=&#34;https://github.com/awesomeWM/awesome/issues&#34;&gt;our bugtracker&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing code&lt;/h2&gt; &#xA;&lt;p&gt;You can submit pull requests on the &lt;a href=&#34;https://github.com/awesomeWM/awesome&#34;&gt;github repository&lt;/a&gt;. Please read the &lt;a href=&#34;https://github.com/awesomeWM/awesome/raw/master/docs/02-contributing.md&#34;&gt;contributing guide&lt;/a&gt; for any coding, documentation or patch guidelines.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.com/awesomeWM/awesome&#34;&gt;&lt;img src=&#34;https://travis-ci.com/awesomeWM/awesome.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Online documentation is available &lt;a href=&#34;https://awesomewm.org/apidoc/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is licensed under GNU General Public License v2 or later. You can read it online at (&lt;a href=&#34;http://www.gnu.org/licenses/gpl-2.0.html&#34;&gt;v2&lt;/a&gt; or &lt;a href=&#34;http://www.gnu.org/licenses/gpl.html&#34;&gt;v3&lt;/a&gt;).&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nmap/nmap</title>
    <updated>2022-06-11T01:52:57Z</updated>
    <id>tag:github.com,2022-06-11:/nmap/nmap</id>
    <link href="https://github.com/nmap/nmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nmap - the Network Mapper. Github mirror of official SVN repository.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Nmap &lt;a href=&#34;https://travis-ci.org/nmap/nmap&#34;&gt;&lt;img src=&#34;https://travis-ci.org/nmap/nmap.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/nmap/nmap/context:cpp&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/cpp/g/nmap/nmap.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: C/C++&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/nmap/nmap/context:python&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/grade/python/g/nmap/nmap.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Language grade: Python&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://lgtm.com/projects/g/nmap/nmap/alerts/&#34;&gt;&lt;img src=&#34;https://img.shields.io/lgtm/alerts/g/nmap/nmap.svg?logo=lgtm&amp;amp;logoWidth=18&#34; alt=&#34;Total alerts&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;Nmap is released under a custom license, which is based on (but not compatible with) GPLv2. The Nmap license allows free usage by end users, and we also offer a commercial license for companies that wish to redistribute Nmap technology with their products. See &lt;a href=&#34;https://nmap.org/book/man-legal.html&#34;&gt;Nmap Copyright and Licensing&lt;/a&gt; for full details.&lt;/p&gt; &#xA;&lt;p&gt;The latest version of this software as well as binary installers for Windows, macOS, and Linux (RPM) are available from &lt;a href=&#34;https://nmap.org/download.html&#34;&gt;Nmap.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Full documentation is also available &lt;a href=&#34;https://nmap.org/docs.html&#34;&gt;on the Nmap.org website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Questions and suggestions may be sent to &lt;a href=&#34;https://nmap.org/mailman/listinfo/dev&#34;&gt;the Nmap-dev mailing list&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;Ideally, you should be able to just type:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./configure&#xA;make&#xA;make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For far more in-depth compilation, installation, and removal notes, read the &lt;a href=&#34;https://nmap.org/book/install.html&#34;&gt;Nmap Install Guide&lt;/a&gt; on Nmap.org.&lt;/p&gt; &#xA;&lt;h2&gt;Using Nmap&lt;/h2&gt; &#xA;&lt;p&gt;Nmap has a lot of features, but getting started is as easy as running &lt;code&gt;nmap scanme.nmap.org&lt;/code&gt;. Running &lt;code&gt;nmap&lt;/code&gt; without any parameters will give a helpful list of the most common options, which are discussed in depth in &lt;a href=&#34;https://nmap.org/book/man.html&#34;&gt;the man page&lt;/a&gt;. Users who prefer a graphical interface can use the included &lt;a href=&#34;https://nmap.org/zenmap/&#34;&gt;Zenmap front-end&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Information about filing bug reports and contributing to the Nmap project can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/nmap/nmap/master/HACKING&#34;&gt;HACKING&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/nmap/nmap/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; files.&lt;/p&gt;</summary>
  </entry>
</feed>