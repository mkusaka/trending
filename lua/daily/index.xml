<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-16T01:39:29Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>theHamsta/nvim-dap-virtual-text</title>
    <updated>2023-01-16T01:39:29Z</updated>
    <id>tag:github.com,2023-01-16:/theHamsta/nvim-dap-virtual-text</id>
    <link href="https://github.com/theHamsta/nvim-dap-virtual-text" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-dap-virtual-text&lt;/h1&gt; &#xA;&lt;p&gt;This plugin adds virtual text support to &lt;a href=&#34;https://github.com/mfussenegger/nvim-dap&#34;&gt;nvim-dap&lt;/a&gt;. &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt; is used to find variable definitions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;    Plug &#39;mfussenegger/nvim-dap&#39;&#xA;    Plug &#39;nvim-treesitter/nvim-treesitter&#39;, {&#39;do&#39;: &#39;:TSUpdate&#39;}&#xA;    Plug &#39;theHamsta/nvim-dap-virtual-text&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The hlgroup for the virtual text is &lt;code&gt;NvimDapVirtualText&lt;/code&gt; (linked to &lt;code&gt;Comment&lt;/code&gt;). Exceptions that caused the debugger to stop are displayed as &lt;code&gt;NvimDapVirtualTextError&lt;/code&gt; (linked to &lt;code&gt;DiagnosticVirtualTextError&lt;/code&gt;). Changed and new variables will be highlighted with &lt;code&gt;NvimDapVirtualTextChanged&lt;/code&gt; (default linked to &lt;code&gt;DiagnosticVirtualTextWarn&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The behavior of this can plugin can be activated and controlled via a &lt;code&gt;setup&lt;/code&gt; call&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;nvim-dap-virtual-text&#34;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Wrap this call with &lt;code&gt;lua &amp;lt;&amp;lt;EOF&lt;/code&gt; when you are using viml for your config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;lua &amp;lt;&amp;lt;EOF&#xA;require(&#34;nvim-dap-virtual-text&#34;).setup()&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or with additional options:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;nvim-dap-virtual-text&#34;).setup {&#xA;    enabled = true,                        -- enable this plugin (the default)&#xA;    enabled_commands = true,               -- create commands DapVirtualTextEnable, DapVirtualTextDisable, DapVirtualTextToggle, (DapVirtualTextForceRefresh for refreshing when debug adapter did not notify its termination)&#xA;    highlight_changed_variables = true,    -- highlight changed values with NvimDapVirtualTextChanged, else always NvimDapVirtualText&#xA;    highlight_new_as_changed = false,      -- highlight new variables in the same way as changed variables (if highlight_changed_variables)&#xA;    show_stop_reason = true,               -- show stop reason when stopped for exceptions&#xA;    commented = false,                     -- prefix virtual text with comment string&#xA;    only_first_definition = true,          -- only show virtual text at first definition (if there are multiple)&#xA;    all_references = false,                -- show virtual text on all all references of the variable (not only definitions)&#xA;    filter_references_pattern = &#39;&amp;lt;module&#39;, -- filter references (not definitions) pattern when all_references is activated (Lua gmatch pattern, default filters out Python modules)&#xA;    -- experimental features:&#xA;    virt_text_pos = &#39;eol&#39;,                 -- position of virtual text, see `:h nvim_buf_set_extmark()`&#xA;    all_frames = false,                    -- show virtual text for all stack frames not only current. Only works for debugpy on my machine.&#xA;    virt_lines = false,                    -- show virtual lines instead of virtual text (will flicker!)&#xA;    virt_text_win_col = nil                -- position the virtual text at a fixed window column (starting from the first text column) ,&#xA;                                           -- e.g. 80 to position at column 80, see `:h nvim_buf_set_extmark()`&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With &lt;code&gt;highlight_changed_variables = false, all_frames = false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7189118/81495691-5d937400-92b2-11ea-8995-17daeda593cc.gif&#34; alt=&#34;current_frame&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;With &lt;code&gt;highlight_changed_variables = false, all_frames = true&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7189118/81495701-6b48f980-92b2-11ea-8df4-dd476dc825bc.gif&#34; alt=&#34;all_scopes&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;It works for all languages with &lt;code&gt;locals.scm&lt;/code&gt; in nvim-treesitter (&lt;code&gt;@definition.var&lt;/code&gt; is required for variable definitions). This should include C/C++, Python, Rust, Go, Java...&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7189118/82733259-f4304e00-9d12-11ea-90da-addebada2e18.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7189118/91160889-485c1d00-e6ca-11ea-9c70-e329c50ed1e1.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The virtual text can additionally use a comment-like syntax to further improve distinguishability between actual code and debugger info by setting the following option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;nvim-dap-virtual-text&#34;).setup {&#xA;  commented = true,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will use the &lt;code&gt;commentstring&lt;/code&gt; option to choose the appropriate comment-syntax for the current filetype&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6146545/134688673-49c86368-ed51-4f16-82b4-fce05bcd9767.PNG&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;With &lt;code&gt;virt_text_win_col = 80, highlight_changed_variables = true&lt;/code&gt; (x has just changed its value)&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7189118/139598856-d45e02ef-62f6-4f7e-a619-ed9b48d53cc1.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Show Stop Reason on Exception&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7189118/115946315-b3136180-a4c0-11eb-8d8b-980b11464448.png&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/7189118/115946346-db9b5b80-a4c0-11eb-8582-6075d818d869.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Exception virtual text can be deactivated via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;nvim-dap-virtual-text&#34;).setup {&#xA;  show_stop_reason = false,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>