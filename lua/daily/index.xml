<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-05T01:31:28Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>folke/lazydev.nvim</title>
    <updated>2024-06-05T01:31:28Z</updated>
    <id>tag:github.com,2024-06-05:/folke/lazydev.nvim</id>
    <link href="https://github.com/folke/lazydev.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Faster LuaLS setup for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üíª &lt;code&gt;lazydev.nvim&lt;/code&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;lazydev.nvim&lt;/strong&gt; is a plugin that properly configures &lt;a href=&#34;https://luals.github.io/&#34;&gt;LuaLS&lt;/a&gt; for editing your &lt;strong&gt;Neovim&lt;/strong&gt; config by lazily updating your workspace libraries.&lt;/p&gt; &#xA;&lt;h2&gt;üöÄ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;much faster auto-completion, since only the modules you &lt;code&gt;require&lt;/code&gt; in open Neovim files will be loaded.&lt;/li&gt; &#xA; &lt;li&gt;no longer needed to configure what plugin sources you want to have enabled for a certain project&lt;/li&gt; &#xA; &lt;li&gt;load third-party addons from &lt;a href=&#34;https://github.com/LuaLS/LLS-Addons&#34;&gt;LLS-Addons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;will update your workspace libraries for: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;require&lt;/strong&gt; statements: &lt;code&gt;require(&#34;nvim-treesitter&#34;)&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;module annotations&lt;/strong&gt;: &lt;code&gt;---@module &#34;nvim-treesitter&#34;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt; completion source for the above&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/folke/lazydev.nvim/assets/292349/c5f23225-88eb-454d-9b4e-1bf9183f7ff8&#34; alt=&#34;2024-06-01_21-02-40&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ö†Ô∏è Limitations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have files that only use types from a plugin, then those types won&#39;t be available in your workspace.&lt;/li&gt; &#xA; &lt;li&gt;completion for module names when typing &lt;code&gt;require(...)&lt;/code&gt; will only return loaded modules in your workspace.&lt;/li&gt; &#xA; &lt;li&gt;To get around the above, you can: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;pre-load those plugins with the &lt;code&gt;library&lt;/code&gt; option.&lt;/li&gt; &#xA;   &lt;li&gt;use the &lt;strong&gt;nvim-cmp&lt;/strong&gt; completion source to get all available modules.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Neovim types are &lt;strong&gt;NOT&lt;/strong&gt; included and also no longer needed on &lt;strong&gt;Neovim &amp;gt;= 0.10&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.10.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt; plugin manager &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;OR&lt;/strong&gt; a plugin manager that uses &lt;strong&gt;Neovim&lt;/strong&gt;&#39;s native package system&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return {&#xA;  {&#xA;    &#34;folke/lazydev.nvim&#34;,&#xA;    ft = &#34;lua&#34;, -- only load on lua files&#xA;    opts = {&#xA;      library = {&#xA;        -- See the configuration section for more details&#xA;        -- Load luvit types when the `vim.uv` word is found&#xA;        { path = &#34;luvit-meta/library&#34;, words = { &#34;vim%.uv&#34; } },&#xA;      },&#xA;    },&#xA;  },&#xA;  { &#34;Bilal2453/luvit-meta&#34;, lazy = true }, -- optional `vim.uv` typings&#xA;  { -- optional completion source for require statements and module annotations&#xA;    &#34;hrsh7th/nvim-cmp&#34;,&#xA;    opts = function(_, opts)&#xA;      opts.sources = opts.sources or {}&#xA;      table.insert(opts.sources, {&#xA;        name = &#34;lazydev&#34;,&#xA;        group_index = 0, -- set group index to 0 to skip loading LuaLS completions&#xA;      })&#xA;    end,&#xA;  },&#xA;  -- { &#34;folke/neodev.nvim&#34;, enabled = false }, -- make sure to uninstall or disable neodev.nvim&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] You can force enable/disable &lt;strong&gt;lazydev&lt;/strong&gt; in certain project folders using &lt;a href=&#34;https://neovim.io/doc/user/options.html#&#39;exrc&#39;&#34;&gt;:h &#39;exrc&#39;&lt;/a&gt; with &lt;code&gt;vim.g.lazydev_enabled = true&lt;/code&gt; or &lt;code&gt;vim.g.lazydev_enabled = false&lt;/code&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;&#xA;{&#xA;  &#34;folke/lazydev.nvim&#34;,&#xA;  ft = &#34;lua&#34;, -- only load on lua files&#xA;  opts = {&#xA;    library = {&#xA;      -- Library paths can be absolute&#xA;      &#34;~/projects/my-awesome-lib&#34;,&#xA;      -- Or relative, which means they will be resolved from the plugin dir.&#xA;      &#34;lazy.nvim&#34;,&#xA;      &#34;luvit-meta/library&#34;,&#xA;      -- It can also be a table with trigger words / mods&#xA;      -- Only load luvit types when the `vim.uv` word is found&#xA;      { path = &#34;luvit-meta/library&#34;, words = { &#34;vim%.uv&#34; } },&#xA;      -- always load the LazyVim library&#xA;      &#34;LazyVim&#34;,&#xA;      -- Only load the lazyvim library when the `LazyVim` global is found&#xA;      { path = &#34;LazyVim&#34;, words = { &#34;LazyVim&#34; } },&#xA;      -- Load the wezterm types when the `wezterm` module is required&#xA;      -- Needs `justinsgithub/wezterm-types` to be installed&#xA;      { path = &#34;wezterm-types&#34;, mods = { &#34;wezterm&#34; } },&#xA;    },&#xA;    -- always enable unless `vim.g.lazydev_enabled = false`&#xA;    -- This is the default&#xA;    enabled = function(root_dir)&#xA;      return vim.g.lazydev_enabled == nil and true or vim.g.lazydev_enabled&#xA;    end,&#xA;    -- disable then a .luarc.json file is found&#xA;    enabled = function(root_dir)&#xA;      return not vim.uv.fs_stat(root_dir .. &#34;/.luarc.json&#34;)&#xA;    end,&#xA;  },&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Default settings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@alias lazydev.Library {path:string, words:string[], mods:string[]}&#xA;---@alias lazydev.Library.spec string|{path:string, words?:string[], mods?:string[]}&#xA;---@class lazydev.Config&#xA;local defaults = {&#xA;  runtime = vim.env.VIMRUNTIME --[[@as string]],&#xA;  library = {}, ---@type lazydev.Library.spec[]&#xA;  -- add the cmp source for completion of:&#xA;  -- `require &#34;modname&#34;`&#xA;  -- `---@module &#34;modname&#34;`&#xA;  cmp = true,&#xA;  ---@type boolean|(fun(root:string):boolean?)&#xA;  enabled = function(root_dir)&#xA;      return vim.g.lazydev_enabled == nil and true or vim.g.lazydev_enabled&#xA;  end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>