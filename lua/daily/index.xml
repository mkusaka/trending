<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-19T01:27:56Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Openarl/PathOfBuilding</title>
    <updated>2023-08-19T01:27:56Z</updated>
    <id>tag:github.com,2023-08-19:/Openarl/PathOfBuilding</id>
    <link href="https://github.com/Openarl/PathOfBuilding" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Offline build planner for Path of Exile.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Path of Building&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to Path of Building, an offline build planner for Path of Exile!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Comprehensive offence + defence calculations: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Calculate your skill DPS, damage over time, life/mana/ES totals and much more!&lt;/li&gt; &#xA;   &lt;li&gt;Can factor in auras, buffs, charges, curses, monster resistances and more, to estimate your effective DPS&lt;/li&gt; &#xA;   &lt;li&gt;Also calculates life/mana reservations&lt;/li&gt; &#xA;   &lt;li&gt;Shows a summary of character stats in the side bar, as well as a detailed calculations breakdown tab which can show you how the stats were derived&lt;/li&gt; &#xA;   &lt;li&gt;Supports all skills and support gems, and most passives and item modifiers &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Throughout the program, supported modifiers will show in blue and unsupported ones in red&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Full support for minions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Passive skill tree planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support for jewels including most radius/conversion jewels&lt;/li&gt; &#xA;   &lt;li&gt;Features alternate path tracing (mouse over a sequence of nodes while holding shift, then click to allocate them all)&lt;/li&gt; &#xA;   &lt;li&gt;Fully intergrated with the offence/defence calculations; see exactly how each node will affect your character!&lt;/li&gt; &#xA;   &lt;li&gt;Can import PathOfExile.com and PoEPlanner.com passive tree links; links shortened with PoEURL.com also work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Skill planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add any number of main or supporting skills to your build&lt;/li&gt; &#xA;   &lt;li&gt;Supporting skills (auras, curses, buffs) can be toggled on and off&lt;/li&gt; &#xA;   &lt;li&gt;Automatically applies Socketed Gem modifiers from the item a skill is socketed into&lt;/li&gt; &#xA;   &lt;li&gt;Automatically applies support gems granted by items&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Item planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add items from in game by copying and pasting them straight into the program!&lt;/li&gt; &#xA;   &lt;li&gt;Automatically adds quality to non-corrupted items&lt;/li&gt; &#xA;   &lt;li&gt;Fully intergrated with the offence/defence calculations; see exactly how much of an upgrade a given item is!&lt;/li&gt; &#xA;   &lt;li&gt;Contains a searchable database of all uniques that are currently in game (and some that aren&#39;t yet!) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can choose the modifier rolls when you add a unique to your build&lt;/li&gt; &#xA;     &lt;li&gt;Includes all league-specific items and legacy variants&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Features an item crafting system: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can select from any of the game&#39;s base item types&lt;/li&gt; &#xA;     &lt;li&gt;You can select prefix/suffix modifiers from lists&lt;/li&gt; &#xA;     &lt;li&gt;Custom modifiers can be added, with Master and Essence modifiers available&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Also contains a database of rare item templates: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allows you to create rare items for your build to approximate the gear you will be using&lt;/li&gt; &#xA;     &lt;li&gt;Choose which modifiers appear on each item, and the rolls for each modifier, to suit your needs&lt;/li&gt; &#xA;     &lt;li&gt;Has templates that should cover the majority of builds (inb4 &#39;why is there no coral amulet?&#39;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Other features: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can import passive tree, items, and skills from existing characters&lt;/li&gt; &#xA;   &lt;li&gt;Share builds with other users by generating a share code&lt;/li&gt; &#xA;   &lt;li&gt;Automatic updating; most updates will only take a couple of seconds to apply&lt;/li&gt; &#xA;   &lt;li&gt;Somewhat more open source than usual (look in %ProgramData%\Path of Building if you&#39;re interested)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Head over to the &lt;a href=&#34;https://github.com/Openarl/PathOfBuilding/releases&#34;&gt;Releases&lt;/a&gt; page to download the installer.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to help support the development of Path of Building, I have a &lt;a href=&#34;https://www.patreon.com/openarl&#34;&gt;Patreon page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cloud.githubusercontent.com/assets/19189971/18089779/f0fe23fa-6f04-11e6-8ed7-ff7d5b9f867a.png&#34; alt=&#34;ss1&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/19189971/18089778/f0f923f0-6f04-11e6-89c2-b2c1410d3583.png&#34; alt=&#34;ss2&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/19189971/18089780/f0ff234a-6f04-11e6-8c88-6193fe59a5c4.png&#34; alt=&#34;ss3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;You can find the full version history &lt;a href=&#34;https://raw.githubusercontent.com/Openarl/PathOfBuilding/master/CHANGELOG.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Tyler-Barham/floating-help.nvim</title>
    <updated>2023-08-19T01:27:56Z</updated>
    <id>tag:github.com,2023-08-19:/Tyler-Barham/floating-help.nvim</id>
    <link href="https://github.com/Tyler-Barham/floating-help.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üìö A Neovim plugin to show `:help` in an anchorable/resizable floating window&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üìö FloatingHelp&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A Neovim plugin to show &lt;code&gt;:help&lt;/code&gt; in an anchorable/resizable floating window.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Tyler-Barham/floating-help.nvim/main/media/floating-help-active.png&#34; alt=&#34;FloatingHelp Screenshot&#34;&gt; &lt;code&gt;:FloatingHelp dap.txt position=NE height=0.55&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Tyler-Barham/floating-help.nvim/main/media/floating-help-inactive.png&#34; alt=&#34;FloatingHelp Screenshot&#34;&gt; &lt;code&gt;:FloatingHelp test position=SW height=0.5 width=40&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚öíÔ∏è Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install with your preferred plugin manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- packer.nvim&#xA;use &#39;Tyler-Barham/floating-help.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;You need to call the &lt;code&gt;setup()&lt;/code&gt; method to initialize the plugin&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local fh = require(&#39;floating-help&#39;)&#xA;&#xA;fh.setup({&#xA;  -- Defaults&#xA;  width = 80,   -- Whole numbers are columns/rows&#xA;  height = 0.9, -- Decimals are a percentage of the editor&#xA;  position = &#39;E&#39;,   -- NW,N,NW,W,C,E,SW,S,SE (C==center)&#xA;})&#xA;&#xA;-- Create a keymap for toggling the help window&#xA;vim.keymap.set(&#39;n&#39;, &#39;&amp;lt;F1&amp;gt;&#39;, fh.toggle)&#xA;&#xA;-- Only replace cmds, not search; only replace the first instance&#xA;local function cmd_abbrev(abbrev, expansion)&#xA;  local cmd = &#39;cabbr &#39; .. abbrev .. &#39; &amp;lt;c-r&amp;gt;=(getcmdpos() == 1 &amp;amp;&amp;amp; getcmdtype() == &#34;:&#34; ? &#34;&#39; .. expansion .. &#39;&#34; : &#34;&#39; .. abbrev .. &#39;&#34;)&amp;lt;CR&amp;gt;&#39;&#xA;  vim.cmd(cmd)&#xA;end&#xA;&#xA;-- Redirect `:h` to `:FloatingHelp`&#xA;cmd_abbrev(&#39;h&#39;,         &#39;FloatingHelp&#39;)&#xA;cmd_abbrev(&#39;help&#39;,      &#39;FloatingHelp&#39;)&#xA;cmd_abbrev(&#39;helpc&#39;,     &#39;FloatingHelpClose&#39;)&#xA;cmd_abbrev(&#39;helpclose&#39;, &#39;FloatingHelpClose&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;FloatingHelp &amp;lt;args&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FloatingHelpToggle &amp;lt;args&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;FloatingHelpClose&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Args (none are positional):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;str&amp;gt;&lt;/code&gt; The help page to show&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;p[osition]=&amp;lt;str&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;h[eight]=&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;w[idth]=&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local fh = require(&#39;floating-help&#39;)&#xA;&#xA;fh.open({args})&#xA;fh.toggle({args})&#xA;fh.close()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome! Just open a pull request.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GENTA7740/GENTA-HAX-DOCS</title>
    <updated>2023-08-19T01:27:56Z</updated>
    <id>tag:github.com,2023-08-19:/GENTA7740/GENTA-HAX-DOCS</id>
    <link href="https://github.com/GENTA7740/GENTA-HAX-DOCS" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://discord.gg/JTM9b6XR3A&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/870604052281573406&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;GentaHax Script Documentation&lt;/h2&gt; &#xA;&lt;p&gt;this documentation will teach you how to make script for GentaHax&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You must know basic lua scripts.&lt;/li&gt; &#xA; &lt;li&gt;You must have Genta Hax :v&lt;/li&gt; &#xA; &lt;li&gt;Lua programming basic knowledge &lt;a href=&#34;https://lua.org&#34;&gt;Lua site&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;File Path&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Android/data/com.rtsoft.growtopia/script/here.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Basic Knowledge&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;float Float is a shortened term for &#34;floating point.&#34; By definition, it&#39;s a fundamental data type built into the compiler that&#39;s used to define numeric values with floating decimal points.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;uint8_t unsigned integer type with width of exactly 8, 16, 32 and 64 bits respectively.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;uint32_t unsigned integer type with width of exactly 8, 16, 32 and 64 bits respectively.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;int32_t signed integer type with width of exactly 8, 16, 32 and 64 bits respectively with no padding bits and using 2&#39;s complement for negative values.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;bool A boolean data type in lua is defined using the keyword bool. Usually, 1 ( true ) and 0 ( false ) are assigned to boolean variables as their default numerical values.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;int integer&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;string String is a collection of characters.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;API list&lt;/h1&gt; &#xA;&lt;h6&gt;‚Ä¢ bool LogToConsole(std::string)&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ bool SleepMS(int) // Milliseconds&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ bool SleepS(int) // Second&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ bool SendPacketRaw(bool send_to_client, TankPacketStruct packet)&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ void SendPacket(int type, std::string pkt) // Type, Packet&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ bool FindPath(int x, int y, int delayMS) // delayMS is optional&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ std::vector&amp;lt;Tile*&amp;gt; GetTile()&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ Tile* CheckTile(int x, int y)&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ ItemInfo* GetItemByID(int itemID)&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ NetAvatar* GetLocal()&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ NetAvatar* GetPlayerByNetID(int netid)&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ std::list&amp;lt;NetAvatar*&amp;gt; GetPlayerlist()&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ std::list&amp;lt;WorldObject*&amp;gt; GetWorldObject()&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ std::list&amp;lt;Inventory*&amp;gt; GetInventory()&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ void SendVariant(variantlist_t, int, int) // Variantlist | netid | delay&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ void AddHook(function, std::string Hook_Name)&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ void Log(std::string text)&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ std::list&amp;lt;NPCList*&amp;gt; NPCList()&lt;/h6&gt; &#xA;&lt;h1&gt;Coming soon&lt;/h1&gt; &#xA;&lt;h6&gt;‚Ä¢ bool ToggleCheat(std::string cheat_name, bool state)&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ void SetLocalPlayer(bool, NetAvatar) // Use cloth effect | NetAvatar structure&lt;/h6&gt; &#xA;&lt;h6&gt;‚Ä¢ World* GetWorld()&lt;/h6&gt; &#xA;&lt;h1&gt;Structure&lt;/h1&gt; &#xA;&lt;h2&gt;TankPacketStruct&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;int type // Packet type&#xA;int state // Character state&#xA;int value // Value&#xA;int posX // Player Position X&#xA;int posY // Player Position Y&#xA;int xspeed // player X speed&#xA;int yspeed // player Y speed&#xA;int px // Punch X&#xA;int py // Punch Y&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NetAvatar&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  int x;&#xA;  int y;&#xA;} pos;&#xA;std::string name // name of Local player&#xA;std::string country // country code of Local player&#xA;int userid // userID of Local player&#xA;int status // status of Local player&#xA;int netid // local netID&#xA;bool facing // is local player facing left&#xA;int hair // hair of Local player&#xA;int shirt // shirt of Local player&#xA;int pants // pants of Local player&#xA;int feet // feet of Local player&#xA;int face // face of Local player&#xA;int hand // hand of Local player&#xA;int back // back of Local player&#xA;int mask // mask of Local player&#xA;int necklace // necklace of Local player&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Inventory&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;int id // id of item&#xA;int count // count of item&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ExtraTile&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;int type&#xA;int growth&#xA;int owner&#xA;std::string label // Sign, Door, Audio racks&#xA;int volume&#xA;int fruit_count&#xA;int last_update // GT Timing sh*t&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tile&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  int x;&#xA;  int y;&#xA;} pos;&#xA;int fg // Tile Foreground itemID&#xA;int bg // Tile Background itemID&#xA;bool readyharvest // Tile Ready harvest&#xA;ExtraTile* extra // Check if extra true before accessing, or your script will terminated;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ItemInfo&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;std::string name // Name of item&#xA;int type // Item Type&#xA;int rarity // Item Rarity&#xA;int growth // item growt time&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;WorldObject&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;int id // item id&#xA;int amount // item amount&#xA;int oid // object id&#xA;int invbits // unk&#xA;{&#xA;  int x;&#xA;  int y;&#xA;} pos;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;World&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;std::string name // current world name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;NPCList&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;int id // NPC ID&#xA;int type // NPC Type: Normal Ghost 1, Mind ghost 12&#xA;{&#xA;  int x;&#xA;  int y;&#xA;} current; // Current npc position in realtime&#xA;{&#xA;  int x;&#xA;  int y;&#xA;} target; // NPC will move into this target position;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GameUpdatePacket&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;uint8_t type&#xA;uint8_t netid&#xA;uint8_t jump_amount&#xA;uint8_t count&#xA;int32_t playerflags&#xA;int32_t item&#xA;int32_t packetflags&#xA;float structflags&#xA;int32_t intdata&#xA;float vecx&#xA;float vecy&#xA;float vec2x&#xA;float vec2y&#xA;float particletime&#xA;uint32_t mstate1&#xA;uint32_t mstate2&#xA;uint32_t datasize&#xA;uint32_t data&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Packet Type&lt;/h1&gt; &#xA;&lt;h2&gt;Raw type&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;PACKET_STATE = 0,&#xA;PACKET_CALL_FUNCTION = 1&#xA;PACKET_UPDATE_STATUS = 2&#xA;PACKET_TILE_CHANGE_REQUEST = 3&#xA;PACKET_SEND_MAP_DATA = 4&#xA;PACKET_SEND_TILE_UPDATE_DATA = 5&#xA;PACKET_SEND_TILE_UPDATE_DATA_MULTIPLE = 6&#xA;PACKET_TILE_ACTIVATE_REQUEST = 7&#xA;PACKET_TILE_APPLY_DAMAGE = 8&#xA;PACKET_SEND_INVENTORY_STATE = 9&#xA;PACKET_ITEM_ACTIVATE_REQUEST = 10&#xA;PACKET_ITEM_ACTIVATE_OBJECT_REQUEST = 11&#xA;PACKET_SEND_TILE_TREE_STATE = 12&#xA;PACKET_MODIFY_ITEM_INVENTORY = 13&#xA;PACKET_ITEM_CHANGE_OBJECT = 14&#xA;PACKET_SEND_LOCK = 15&#xA;PACKET_SEND_ITEM_DATABASE_DATA = 16&#xA;PACKET_SEND_PARTICLE_EFFECT = 17&#xA;PACKET_SET_ICON_STATE = 18&#xA;PACKET_ITEM_EFFECT = 19&#xA;PACKET_SET_CHARACTER_STATE = 20&#xA;PACKET_PING_REPLY = 21&#xA;PACKET_PING_REQUEST = 22&#xA;PACKET_GOT_PUNCHED = 23&#xA;PACKET_APP_CHECK_RESPONSE = 24&#xA;PACKET_APP_INTEGRITY_FAIL = 25&#xA;PACKET_DISCONNECT = 26&#xA;PACKET_BATTLE_JOIN = 27&#xA;PACKET_BATTLE_EVEN = 28&#xA;PACKET_USE_DOOR = 29&#xA;PACKET_SEND_PARENTAL = 30&#xA;PACKET_GONE_FISHIN = 31&#xA;PACKET_STEAM = 32&#xA;PACKET_PET_BATTLE = 33&#xA;PACKET_NPC = 34&#xA;PACKET_SPECIAL = 35&#xA;PACKET_SEND_PARTICLE_EFFECT_V2 = 36&#xA;GAME_ACTIVE_ARROW_TO_ITEM = 37&#xA;GAME_SELECT_TILE_INDEX = 38&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;ENetPacketFlag&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;ENET_PACKET_FLAG_RELIABLE = 0&#xA;ENET_PACKET_FLAG_UNSEQUENCED = 1&#xA;ENET_PACKET_FLAG_NO_ALLOCATE = 2&#xA;ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT = 3&#xA;ENET_PACKET_FLAG_SENT = 8&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Hooking&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;OnTextPacket // Game Text Packet&#xA;OnVarlist // Variant list Hook&#xA;OnTouch // Hook Handle Touch At World Pos&#xA;// Coming soon&#xA;OnRender&#xA;OnPacketRaw // Game Packet Raw&#xA;OnChooseItem // Hook choosing item&#xA;OnTrackPacket // Hook Track packet&#xA;OnGameUpdatePacket // Hook Game Update Packet&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Example&lt;/h1&gt; &#xA;&lt;p&gt;Example script &lt;a href=&#34;https://github.com/GENTA7740/GENTA-HAX-DOCS/tree/main/Example&#34;&gt;Click me!&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Feel free to report bug mod on issue tab!&lt;/h1&gt;</summary>
  </entry>
</feed>