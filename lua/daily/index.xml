<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-11T01:30:38Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>bestadamdagoat/random-scripts</title>
    <updated>2023-08-11T01:30:38Z</updated>
    <id>tag:github.com,2023-08-11:/bestadamdagoat/random-scripts</id>
    <link href="https://github.com/bestadamdagoat/random-scripts" rel="alternate"></link>
    <summary type="html">&lt;p&gt;random scripts i find, i did not make any of these&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>amroot/pillage</title>
    <updated>2023-08-11T01:30:38Z</updated>
    <id>tag:github.com,2023-08-11:/amroot/pillage</id>
    <link href="https://github.com/amroot/pillage" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Messing around with Lua and ended up with &#34;pillage&#34;. Currently, pillage&#39;s only job is to pillage (crawl) web applications for forms and log them to a csv file.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Script: pillage Version: 0.04 License: BSD Simplified Author: Robert Gilbert - amroot.com Current Release Date: April 10, 2013 Description: currently, pillage&#39;s only job is to find forms in web applications. I just felt like playing with Lua. Required: luasec Debian prereq: apt-get install lua5.1 liblua5.1-0-dev liblua5.1-socket-dev liblua5.1-sec-dev liblua5.1-curl-dev&lt;/p&gt; &#xA;&lt;p&gt;Verson history: 0.0.4 - April 10, 2013: Fixed error if -w is not specified Merged includes into a single script 0.0.3 - June 25, 2012: First release for public consumption&lt;/p&gt; &#xA;&lt;p&gt;Short might do: Form based Authentication. Replace socket with regex Update cookiejar Better error handling and debugging Submit forms for multi-stage form disc? Do not add forms found previously Find and log form fields Add the ability to supply a list of directories, pages, and/or URIs.&lt;/p&gt; &#xA;&lt;p&gt;Pillage usage: -u - required: valid URL to crawl. http(s)://userid:&lt;a href=&#34;mailto:password@www.attackersite.com&#34;&gt;password@www.attackersite.com&lt;/a&gt;:port -r - optional: follow redirects (301 response). -t - optional: time in milliseconds to pause between requests -s - optional: do not stay within scope (this might crawl the world) -w - optional: write to file in csv format. ./save.csv -m - optional: max URLs to follow. default is never stop crawling until there are no more to crawl -a - optional: user agent (pillage-agent/1.0 by default) -c - optional: cookie storage (default cookiejar.txt) -v - optional: verbosity. -v[1-3] -h - optional: what you&#39;re seeing right now&lt;/p&gt; &#xA;&lt;p&gt;Example: ./pillage.lua -u &lt;a href=&#34;http://www.attackersite.com&#34;&gt;http://www.attackersite.com&lt;/a&gt; -r -s -a &#39;attacker-agent/1.0&#39; -t 500 -m 100 -w ./attackersite-forms.csv -v1&lt;/p&gt;</summary>
  </entry>
</feed>