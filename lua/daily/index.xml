<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-22T01:38:47Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>esx-framework/esx_core</title>
    <updated>2023-01-22T01:38:47Z</updated>
    <id>tag:github.com,2023-01-22:/esx-framework/esx_core</id>
    <link href="https://github.com/esx-framework/esx_core" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Repo For core resources for esx-legacy&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;ESX Legacy&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;&lt;a href=&#34;https://discord.esx-framework.org/&#34;&gt;Discord&lt;/a&gt; - &lt;a href=&#34;https://esx-framework.org/&#34;&gt;Website&lt;/a&gt; - &lt;a href=&#34;https://documentation.esx-framework.org/legacy/installation&#34;&gt;Documentation&lt;/a&gt;&lt;/b&gt; &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;Want More resources? You can browse the &lt;a href=&#34;https://github.com/esx-community/&#34;&gt;ESX Community Github&lt;/a&gt; or &lt;a href=&#34;https://forum.cfx.re/tag/esx&#34;&gt;Cfx.re Releases board&lt;/a&gt; for more! &lt;/p&gt;&#xA;&lt;p align=&#34;center&#34;&gt;&lt;b&gt;ESX is the leading framework, trusted By thousands of commmunitys for the heighest quality roleplay servers on FiveM&lt;/b&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;Supporters&lt;/h3&gt; &#xA;&lt;p&gt;Interested in helping us? &lt;a href=&#34;https://www.patreon.com/esx&#34; title=&#34;Take a look at our patreon&#34;&gt;Take a look at our patreon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;We would like to sincerely thank the following donors who helped fund the development of ESX.&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mohamad Buhamad - Michael Hein - RoadToSix - Montree Narathong&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Saydoon - Muhannad alyamani - iSentrie - Wecity - Samuel Nicol&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kyle McShea - Artin - Mathias Christoffersen - Jaylan Yilmaz - Callum&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CONGRESS KW - Michael Hein - Smery sitbon - daZepelin - CMF Community&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;ESX-legacy - ESX framework for FiveM&lt;/p&gt; &#xA;&lt;p&gt;Copyright (C) 2015-2023 ESX-Framework&lt;/p&gt; &#xA;&lt;p&gt;This program Is free software: you can redistribute it And/Or modify it under the terms Of the GNU General Public License As published by the Free Software Foundation, either version 3 Of the License, Or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program Is distributed In the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty Of MERCHANTABILITY Or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License For more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy Of the GNU General Public License along with this program. If Not, see &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>folke/neoconf.nvim</title>
    <updated>2023-01-22T01:38:47Z</updated>
    <id>tag:github.com,2023-01-22:/folke/neoconf.nvim</id>
    <link href="https://github.com/folke/neoconf.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üíº Neovim plugin to manage global and project-local settings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üíº neoconf.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;neoconf.nvim&lt;/strong&gt; is a Neovim plugin to manage global and project-local settings.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/202160538-3711693c-14fd-4e8b-a9d1-ceda88bae00c.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;configure Neovim using &lt;strong&gt;JSON&lt;/strong&gt; files (can have comments) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;global settings: &lt;code&gt;~/.config/nvim/neoconf.json&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;local settings: &lt;code&gt;~/projects/foobar/.neoconf.json&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;live reload of your lsp settings&lt;/li&gt; &#xA; &lt;li&gt;import existing settings from &lt;a href=&#34;https://github.com/microsoft/vscode&#34;&gt;vscode&lt;/a&gt;, &lt;a href=&#34;https://github.com/neoclide/coc.nvim&#34;&gt;coc.nvim&lt;/a&gt; and &lt;a href=&#34;https://github.com/tamago324/nlsp-settings.nvim&#34;&gt;nlsp-settings.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;auto-completion of all the settings in the &lt;strong&gt;Json config files&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;auto-completion of all LSP settings in your &lt;strong&gt;Neovim Lua config files&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;integrates with &lt;a href=&#34;https://github.com/folke/neodev.nvim&#34;&gt;neodev.nvim&lt;/a&gt;. See &lt;a href=&#34;https://github.com/folke/neoconf.nvim/raw/main/.neoconf.json&#34;&gt;.neoconf.json&lt;/a&gt; in this repo.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.7.2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;use({&#xA;  &#34;folke/neoconf.nvim&#34;,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Setup&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s important that you set up &lt;code&gt;neoconf.nvim&lt;/code&gt; &lt;strong&gt;BEFORE&lt;/strong&gt; &lt;code&gt;nvim-lspconfig&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;neoconf&#34;).setup({&#xA;  -- override any of the default settings here&#xA;})&#xA;&#xA;-- setup your lsp servers as usual&#xA;require(&#34;lspconfig&#34;).sumneko_lua.setup(...)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;neoconf.nvim&lt;/strong&gt; comes with the following defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;&#xA;  -- name of the local settings files&#xA;  local_settings = &#34;.neoconf.json&#34;,&#xA;  -- name of the global settings file in your Neovim config directory&#xA;  global_settings = &#34;neoconf.json&#34;,&#xA;  -- import existing settinsg from other plugins&#xA;  import = {&#xA;    vscode = true, -- local .vscode/settings.json&#xA;    coc = true, -- global/local coc-settings.json&#xA;    nlsp = true, -- global/local nlsp-settings.nvim json settings&#xA;  },&#xA;  -- send new configuration to lsp clients when changing json settings&#xA;  live_reload = true,&#xA;  -- set the filetype to jsonc for settings files, so you can use comments&#xA;  -- make sure you have the jsonc treesitter parser installed!&#xA;  filetype_jsonc = true,&#xA;  plugins = {&#xA;    -- configures lsp clients with settings in the following order:&#xA;    -- - lua settings passed in lspconfig setup&#xA;    -- - global json settings&#xA;    -- - local json settings&#xA;    lspconfig = {&#xA;      enabled = true,&#xA;    },&#xA;    -- configures jsonls to get completion in .nvim.settings.json files&#xA;    jsonls = {&#xA;      enabled = true,&#xA;      -- only show completion in json settings for configured lsp servers&#xA;      configured_servers_only = true,&#xA;    },&#xA;    -- configures sumneko_lua to get completion of lspconfig server settings&#xA;    sumneko_lua = {&#xA;      -- by default, sumneko_lua annotations are only enabled in your neovim config directory&#xA;      enabled_for_neovim_config = true,&#xA;      -- explicitely enable adding annotations. Mostly relevant to put in your local .nvim.settings.json file&#xA;      enabled = false,&#xA;    },&#xA;  },&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;h3&gt;The &lt;code&gt;:Neoconf&lt;/code&gt; Command&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:Neoconf&lt;/code&gt;: will show a ui to select one of the local/global json config files to edit&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:Neoconf local&lt;/code&gt;: will show a ui to select one of the local json config files to edit&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:Neoconf global&lt;/code&gt;: will show a ui to select one of the global json config files to edit&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:Neoconf show&lt;/code&gt;: opens a floating window with the merged config&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:Neoconf lsp&lt;/code&gt;: opens a floating window with your merged lsp config&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/202161064-16789740-f094-4729-97c2-b6509148a7fd.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Completion and Validation for your &lt;code&gt;Json&lt;/code&gt; Settings Files&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/202160792-f956e3af-535f-4ad6-8de4-d89854072f91.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Completion and Validation for your &lt;code&gt;Lua&lt;/code&gt; Settings Files&lt;/h3&gt; &#xA;&lt;p&gt;Completion of your lua settings should work out of the box.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/202160675-ea9a62b4-7084-40a3-966e-e9d5f0fb70ec.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can additionally use the exported types in other places.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Example with a table containing LSP server settings&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;  ---@type lspconfig.options&#xA;  local servers = {&#xA;    ansiblels = {},&#xA;    bashls = {},&#xA;    clangd = {},&#xA;    cssls = {},&#xA;    dockerls = {},&#xA;    tsserver = {},&#xA;    svelte = {},&#xA;    eslint = {},&#xA;    html = {},&#xA;    jsonls = {&#xA;      settings = {&#xA;        json = {&#xA;          format = {&#xA;            enable = true,&#xA;          },&#xA;          schemas = require(&#34;schemastore&#34;).json.schemas(),&#xA;          validate = { enable = true },&#xA;        },&#xA;      },&#xA;    },&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;üì¶ API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Neodev&lt;/strong&gt; comes with an API that can be used by plugin developers to load global/local settings for their plugin.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@class SettingsPlugin&#xA;---@field name string&#xA;---@field setup fun()|nil&#xA;---@field on_update fun(event)|nil&#xA;---@field on_schema fun(schema: Schema)&#xA;&#xA;-- Registers a plugin. Biggest use-case is to get auto-completion for your plugin in the json settings files&#xA;---@param plugin SettingsPlugin&#xA;function Neodev.register(plugin) end&#xA;&#xA;---@class WorkspaceOptions&#xA;---@field file? string File will be used to determine the root_dir&#xA;---@field buffer? buffer Buffer will be used to find the root_dir&#xA;---@field lsp? boolean LSP root_dir will be used to determine the root_dir&#xA;---@field local? boolean defaults to true. Merge local settings&#xA;---@field global? boolean defaults to true. Merge global settings&#xA;&#xA;-- Returns the requested settings&#xA;---@generic T : table&#xA;---@param key? string Optional key to get settings for&#xA;---@param defaults? T Optional table of defaults that will be merged in the result&#xA;---@param opts? WorkspaceOptions options to determine the root_dir and what settings to merge&#xA;---@return T&#xA;function Neoconf.get(key, defaults, opts) end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;API Example&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- default config for your plugin&#xA;local defaults = {&#xA;  doit = true,&#xA;  count = 1,&#xA;  array = {},&#xA;}&#xA;&#xA;-- register your settings schema with Neodev, so auto-completion will work in the json files&#xA;require(&#34;neoconf.plugins&#34;).register({&#xA;    on_schema = function(schema)&#xA;    -- this call will create a json schema based on the lua types of your default settings&#xA;    schema:import(&#34;myplugin&#34;, defaults)&#xA;    -- Optionally update some of the json schema&#xA;    schema:set(&#34;myplugin.array&#34;, {&#xA;        description = &#34;Special array containg booleans or numbers&#34;,&#xA;        anyOf = {&#xA;        { type = &#34;boolean&#34; },&#xA;        { type = &#34;integer&#34; },&#xA;        },&#xA;        })&#xA;    end,&#xA;    })&#xA;&#xA;local my_settings = Neoconf.get(&#34;neodev&#34;, defaults)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;‚≠ê Acknowledgment&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/json.lua&#34;&gt;json.lua&lt;/a&gt; a pure-lua JSON library for parsing &lt;code&gt;jsonc&lt;/code&gt; files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíª Supported Language Servers&lt;/h2&gt; &#xA;&lt;!-- GENERATED --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/AdaCore/ada_language_server/tree/master/integration/vscode/ada/package.json&#34;&gt;als&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/withastro/language-tools/tree/main/packages/vscode/package.json&#34;&gt;astro&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Beaglefoot/awk-language-server/tree/master/client/package.json&#34;&gt;awkls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/bash-lsp/bash-language-server/tree/master/vscode-client/package.json&#34;&gt;bashls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/clangd/vscode-clangd/tree/master/package.json&#34;&gt;clangd&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/microsoft/vscode/tree/main/extensions/css-language-features/package.json&#34;&gt;cssls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/Dart-Code/Dart-Code/tree/master/package.json&#34;&gt;dartls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/denoland/vscode_deno/tree/main/package.json&#34;&gt;denols&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/elixir-lsp/vscode-elixir-ls/tree/master/package.json&#34;&gt;elixirls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/elm-tooling/elm-language-client-vscode/tree/master/package.json&#34;&gt;elmls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/microsoft/vscode-eslint/tree/main/package.json&#34;&gt;eslint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/flowtype/flow-for-vscode/tree/master/package.json&#34;&gt;flow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/ionide/ionide-vscode-fsharp/tree/main/release/package.json&#34;&gt;fsautocomplete&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/znck/grammarly/tree/main/extension/package.json&#34;&gt;grammarly&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/vshaxe/vshaxe/tree/master/package.json&#34;&gt;haxe_language_server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/slackhq/vscode-hack/tree/master/package.json&#34;&gt;hhvm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/alanz/vscode-hie-server/tree/master/package.json&#34;&gt;hie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/microsoft/vscode/tree/main/extensions/html-language-features/package.json&#34;&gt;html&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/bmewburn/vscode-intelephense/tree/master/package.json&#34;&gt;intelephense&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/georgewfraser/java-language-server/tree/master/package.json&#34;&gt;java_language_server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/redhat-developer/vscode-java/tree/master/package.json&#34;&gt;jdtls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/microsoft/vscode/tree/master/extensions/json-language-features/package.json&#34;&gt;jsonls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/julia-vscode/julia-vscode/tree/master/package.json&#34;&gt;julials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/fwcd/vscode-kotlin/tree/master/package.json&#34;&gt;kotlin_language_server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/valentjn/vscode-ltex/tree/develop/package.json&#34;&gt;ltex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/JohnnyMorganz/luau-lsp/tree/main/editors/code/package.json&#34;&gt;luau_lsp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/tweag/nickel/tree/master/lsp/client-extension/package.json&#34;&gt;nickel_ls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/OmniSharp/omnisharp-vscode/tree/master/package.json&#34;&gt;omnisharp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/richterger/Perl-LanguageServer/tree/master/clients/vscode/perl/package.json&#34;&gt;perlls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/bscan/PerlNavigator/tree/main/package.json&#34;&gt;perlnavigator&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/FractalBoy/perl-language-server/tree/master/client/package.json&#34;&gt;perlpls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/PowerShell/vscode-powershell/tree/main/package.json&#34;&gt;powershell_es&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/psalm/psalm-vscode-plugin/tree/master/package.json&#34;&gt;psalm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/puppetlabs/puppet-vscode/tree/main/package.json&#34;&gt;puppet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/nwolverson/vscode-ide-purescript/tree/master/package.json&#34;&gt;purescriptls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/python-lsp/python-lsp-server/tree/develop/pylsp/config/schema.json&#34;&gt;pylsp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/microsoft/pyright/tree/master/packages/vscode-pyright/package.json&#34;&gt;pyright&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/REditorSupport/vscode-r-lsp/tree/master/package.json&#34;&gt;r_language_server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/rescript-lang/rescript-vscode/tree/master/package.json&#34;&gt;rescriptls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/rust-lang/vscode-rust/tree/master/package.json&#34;&gt;rls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/rome/tools/tree/main/editors/vscode/package.json&#34;&gt;rome&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/rust-analyzer/rust-analyzer/tree/master/editors/code/package.json&#34;&gt;rust_analyzer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/castwide/vscode-solargraph/tree/master/package.json&#34;&gt;solargraph&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/juanfranblanco/vscode-solidity/tree/master/package.json&#34;&gt;solidity_ls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/sorbet/sorbet/tree/master/vscode_extension/package.json&#34;&gt;sorbet&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/swift-server/vscode-swift/tree/main/package.json&#34;&gt;sourcekit&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/stoplightio/vscode-spectral/tree/master/package.json&#34;&gt;spectral&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/bmatcuk/coc-stylelintplus/tree/master/package.json&#34;&gt;stylelint_lsp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/sumneko/vscode-lua/tree/master/package.json&#34;&gt;sumneko_lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/sveltejs/language-tools/tree/master/packages/svelte-vscode/package.json&#34;&gt;svelte&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/eirikpre/VSCode-SystemVerilog/tree/master/package.json&#34;&gt;svlangserver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/tailwindlabs/tailwindcss-intellisense/tree/master/packages/vscode-tailwindcss/package.json&#34;&gt;tailwindcss&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/hashicorp/vscode-terraform/tree/master/package.json&#34;&gt;terraformls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/microsoft/vscode/tree/main/extensions/typescript-language-features/package.json&#34;&gt;tsserver&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/johnsoncodehk/volar/tree/master/vue-language-tools/vscode-vue/package.json&#34;&gt;volar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/vuejs/vetur/tree/master/package.json&#34;&gt;vuels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/wgsl-analyzer/wgsl-analyzer/tree/main/editors/code/package.json&#34;&gt;wgls_analyzer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/redhat-developer/vscode-yaml/tree/master/package.json&#34;&gt;yamlls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/artempyanykh/zeta-note-vscode/tree/main/package.json&#34;&gt;zeta_note&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;a href=&#34;https://github.com/zigtools/zls-vscode/tree/master/package.json&#34;&gt;zls&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>