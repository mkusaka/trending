<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-20T01:34:56Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>WOWRainbowUI/RainbowUI-Retail</title>
    <updated>2024-01-20T01:34:56Z</updated>
    <id>tag:github.com,2024-01-20:/WOWRainbowUI/RainbowUI-Retail</id>
    <link href="https://github.com/WOWRainbowUI/RainbowUI-Retail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;彩虹ui 整合包 (巨龍崛起)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;★ 彩虹官網，下載最新版的彩虹ui: &lt;a href=&#34;https://rainbowui.wordpress.com/&#34;&gt;https://rainbowui.wordpress.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;★ 安裝說明： &lt;a href=&#34;https://rainbowui.wordpress.com/rainbow-ui-pack-wow-addons-installation-guide/&#34;&gt;https://rainbowui.wordpress.com/rainbow-ui-pack-wow-addons-installation-guide/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;★ 插件介紹和用法: &lt;a href=&#34;https://rainbowui.wordpress.com/shadowlands-addon-list/&#34;&gt;https://rainbowui.wordpress.com/shadowlands-addon-list/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;★ 常見問題與解答: &lt;a href=&#34;https://addons.miliui.com/show/1/all#questions&#34;&gt;https://addons.miliui.com/show/1/all#questions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;★ 有任何問題與建議，歡迎到奇樂網站留言 &lt;a href=&#34;https://addons.miliui.com/show/1/all#comment&#34;&gt;https://addons.miliui.com/show/1/all#comment&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PeakScripts/Furk-Ultra</title>
    <updated>2024-01-20T01:34:56Z</updated>
    <id>tag:github.com,2024-01-20:/PeakScripts/Furk-Ultra</id>
    <link href="https://github.com/PeakScripts/Furk-Ultra" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Furk Ultra is a keyless executor with custom level 8 .dll file and built in scripts&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Furk-Ultra&lt;/h1&gt; &#xA;&lt;p&gt;Furk Ultra is an executor with a built in scripts&lt;/p&gt; &#xA;&lt;h2&gt;Important: Make sure u run Bypass.bat before launching the Furk Ultra to prevent from getting kicked or banned&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Click &lt;a href=&#34;https://github.com/CdIkEXPLOIT/Furk-Ultra/archive/refs/heads/main.zip&#34;&gt;here&lt;/a&gt; to download&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;📁 〢 Tutorial&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the &lt;a href=&#34;https://github.com/CdIkEXPLOIT/Furk-Ultra/archive/refs/heads/main.zip&#34;&gt;Furk Ultra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extract the ZIP file&lt;/li&gt; &#xA; &lt;li&gt;Run the Bypass.bat (it automatically runs the FurkUltra.exe)&lt;/li&gt; &#xA; &lt;li&gt;Launch any roblox game you want to use scripts in&lt;/li&gt; &#xA; &lt;li&gt;Click inject&lt;/li&gt; &#xA; &lt;li&gt;After injecting execute your scripts.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;List of features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No Key System&lt;/li&gt; &#xA; &lt;li&gt;Level 8 Executor&lt;/li&gt; &#xA; &lt;li&gt;Custom Bytecode Conversion DLL (Better than KRNL)&lt;/li&gt; &#xA; &lt;li&gt;200+ Games in script hub&lt;/li&gt; &#xA; &lt;li&gt;Custom scripts&lt;/li&gt; &#xA; &lt;li&gt;High stability&lt;/li&gt; &#xA; &lt;li&gt;Reliable &amp;amp; Always Up To Date&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;UI:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/122708389/216851841-29440c49-3a4f-4ee9-bca7-3c04cd30a3b4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Built In Scripts:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/122708389/216851932-8e3a594a-e189-48c0-864d-ad717a7733c9.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ejoy/ant</title>
    <updated>2024-01-20T01:34:56Z</updated>
    <id>tag:github.com,2024-01-20:/ejoy/ant</id>
    <link href="https://github.com/ejoy/ant" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ant game engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ant 游戏引擎&lt;/h1&gt; &#xA;&lt;p&gt;Ant 是由灵犀互娱开发的开源游戏引擎。现阶段仅将代码仓库公开，尚未正式发布。文档、示例等均待在 &lt;a href=&#34;https://github.com/ejoy/ant/wiki&#34;&gt;Wiki&lt;/a&gt; 上逐步完善。如有任何问题，可在 &lt;a href=&#34;https://github.com/ejoy/ant/discussions&#34;&gt;Discussions&lt;/a&gt; 发帖讨论。Issues 仅用于 Bug 跟踪，请不要在里面提问题。&lt;/p&gt; &#xA;&lt;h3&gt;更新并初始化第三方库：&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;git submodule update --init&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;搭建编译环境&lt;/h3&gt; &#xA;&lt;h4&gt;MSVC&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装Visual Studio&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;MINGW&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;下载并安装&lt;a href=&#34;https://www.msys2.org/&#34;&gt;msys2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;找到msys2安装目录，用mingw64.exe打开msys2的终端&lt;/li&gt; &#xA; &lt;li&gt;修改镜像服务器&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/i686/&#34; &amp;gt; /etc/pacman.d/mirrorlist.mingw32&#xA;echo &#34;Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/mingw/x86_64/&#34; &amp;gt; /etc/pacman.d/mirrorlist.mingw64&#xA;echo &#34;Server = https://mirrors.tuna.tsinghua.edu.cn/msys2/msys/\$arch/&#34; &amp;gt; /etc/pacman.d/mirrorlist.msys&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;把ming64的路径加到环境变量&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#34;export MINGW=/mingw64&#34; &amp;gt;&amp;gt; ~/.bash_profile&#xA;echo &#34;export PATH=\$MINGW/bin:\$PATH&#34; &amp;gt;&amp;gt; ~/.bash_profile&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装gcc/ninja&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pacman -Syu mingw-w64-x86_64-gcc mingw-w64-x86_64-ninja&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;MACOS&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装xcode, ninja&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;编译&lt;/h3&gt; &#xA;&lt;h4&gt;编译构建工具 luamake&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/actboy168/luamake&#xA;cd luamake&#xA;git submodule update --init&#xA;.\compile\install.bat (msvc)&#xA;./compile/install.sh (mingw/linux/macos)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;编译runtime&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;luamake&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;编译tools&lt;/h4&gt; &#xA;&lt;p&gt;tools包含：shaderc, texturec, gltf2ozz，release模式会快一个数量级（debug模式下的tools可以不编译）&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;luamake -mode release tools&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;编译选项&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;luamake [target] -mode [debug/release] #-mode默认是debug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;运行&lt;/h3&gt; &#xA;&lt;p&gt;运行一个最简单的示例&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/msvc/debug/lua.exe test/simple/main.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;启动编辑器&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bin/msvc/debug/lua.exe tools/editor/main.lua&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;调试&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;安装VSCode；&lt;/li&gt; &#xA; &lt;li&gt;安装&lt;strong&gt;Lua Debug&lt;/strong&gt;插件；&lt;/li&gt; &#xA; &lt;li&gt;添加调试配置到&lt;code&gt;.vscode/launch.json&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;    &#34;version&#34;: &#34;0.2.0&#34;,&#xA;    &#34;configurations&#34;: [&#xA;        {&#xA;            &#34;type&#34;: &#34;lua&#34;,&#xA;            &#34;request&#34;: &#34;launch&#34;,&#xA;            &#34;name&#34;: &#34;Debug&#34;,&#xA;            &#34;luaexe&#34;: &#34;${workspaceFolder}/bin/msvc/debug/lua.exe&#34;,&#xA;            &#34;console&#34;: &#34;integratedTerminal&#34;,&#xA;            &#34;stopOnEntry&#34;: true,&#xA;            &#34;outputCapture&#34;: [],&#xA;            &#34;program&#34;: &#34;test/simple/main.lua&#34;,&#xA;            &#34;arg&#34;: []&#xA;        }&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;关于ant目录结构&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;bin&lt;/strong&gt;：编译结果，exe/dll/lib等&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;build&lt;/strong&gt;：编译的中间结果&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;clibs&lt;/strong&gt;：c/c++代码&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;engine&lt;/strong&gt;：引擎基础支持代码，包括包管理器、启动代码等&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;pkg&lt;/strong&gt;：引擎的各个功能包（包与包之间有依赖）&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;runtime&lt;/strong&gt;：引擎运行时的不同平台支持&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;test&lt;/strong&gt;：测试工程&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;tools&lt;/strong&gt;：引擎相关的工具&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>