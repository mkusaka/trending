<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-27T01:40:08Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>dmmulroy/tsc.nvim</title>
    <updated>2023-04-27T01:40:08Z</updated>
    <id>tag:github.com,2023-04-27:/dmmulroy/tsc.nvim</id>
    <link href="https://github.com/dmmulroy/tsc.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Neovim plugin for seamless, asynchronous project-wide TypeScript type-checking using the TypeScript compiler (tsc)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tsc.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/ellisonleao/nvim-plugin-template/default.yml?branch=main&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Workflow Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Made%20with%20Lua-blueviolet.svg?style=for-the-badge&amp;amp;logo=lua&#34; alt=&#34;Lua&#34;&gt;&lt;/p&gt; &#xA;&lt;img width=&#34;569&#34; alt=&#34;image&#34; src=&#34;https://user-images.githubusercontent.com/2755722/233876554-efb9cfe6-c038-46c8-a7cb-b7a4aa9eac5b.png&#34;&gt; &#xA;&lt;p&gt;This Neovim plugin provides an asynchronous interface to run project-wide TypeScript type-checking using the TypeScript compiler (&lt;code&gt;tsc&lt;/code&gt;). It displays the type-checking results in a quickfix list and provides visual notifications about the progress and completion of type-checking.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Project-wide type checking&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous execution of the TypeScript compiler to prevent lock ups and input lag&lt;/li&gt; &#xA; &lt;li&gt;Progress notifications with spinner animation&lt;/li&gt; &#xA; &lt;li&gt;Quickfix list for navigating errors&lt;/li&gt; &#xA; &lt;li&gt;Automatic opening of the quickfix list if there are errors&lt;/li&gt; &#xA; &lt;li&gt;User-friendly command &lt;code&gt;:TSC&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Demo Videos&lt;/h2&gt; &#xA;&lt;h3&gt;Type-checking with Errors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/2755722/233818168-de95bc9a-c406-4c71-9ef9-021f80db1da9.mov&#34;&gt;https://user-images.githubusercontent.com/2755722/233818168-de95bc9a-c406-4c71-9ef9-021f80db1da9.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Type-checking without Errors&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/2755722/233818163-bd2c2dda-88fc-41ea-a4bc-40972ad3ce9e.mov&#34;&gt;https://user-images.githubusercontent.com/2755722/233818163-bd2c2dda-88fc-41ea-a4bc-40972ad3ce9e.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Usage without &lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim-notify&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/2755722/233843746-ee116863-bef5-4e26-ba0a-afb906a2f111.mov&#34;&gt;https://user-images.githubusercontent.com/2755722/233843746-ee116863-bef5-4e26-ba0a-afb906a2f111.mov&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To install the plugin, use your preferred Neovim plugin manager.&lt;/p&gt; &#xA;&lt;h3&gt;Packer&lt;/h3&gt; &#xA;&lt;p&gt;To install the plugin using packer.nvim, add the following to your plugin configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use(&#39;dmmulroy/tsc.nvim&#39;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Vim-Plug&lt;/h3&gt; &#xA;&lt;p&gt;To install the plugin using vim-plug, add the following to your plugin configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;dmmulroy/tsc.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then run &lt;code&gt;:PlugInstall&lt;/code&gt; to install the plugin.&lt;/p&gt; &#xA;&lt;h3&gt;Notify&lt;/h3&gt; &#xA;&lt;p&gt;For an enhanced UI/UX experience, it is recommended to install the &lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim_notify&lt;/a&gt; plugin as well. This plugin is optional, and the plugin will work without it.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To set up the plugin, add the following line to your &lt;code&gt;init.vim&lt;/code&gt; or &lt;code&gt;init.lua&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;tsc&#39;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;To run TypeScript type-checking, execute the &lt;code&gt;:TSC&lt;/code&gt; command in Neovim. The plugin will display a progress notification while the type-checking is in progress. When the type-checking is complete, it will show a notification with the results and open a quickfix list if there are any errors.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;By default it uses the default &lt;code&gt;tsc&lt;/code&gt; command with the &lt;code&gt;--noEmit&lt;/code&gt; flag to avoid generating output files during type-checking. Here&#39;s the default configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  flags = &#34;--noEmit&#34;,&#xA;  spinner = { &#34;⣾&#34;, &#34;⣽&#34;, &#34;⣻&#34;, &#34;⢿&#34;, &#34;⡿&#34;, &#34;⣟&#34;, &#34;⣯&#34;, &#34;⣷&#34; },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to open issues or submit pull requests if you encounter any bugs or have suggestions for improvements. Your contributions are welcome!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This plugin is released under the MIT License. See the &lt;a href=&#34;https://raw.githubusercontent.com/dmmulroy/tsc.nvim/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
</feed>