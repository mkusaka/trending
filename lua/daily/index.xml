<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-27T01:35:43Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mawkler/modicator.nvim</title>
    <updated>2023-10-27T01:35:43Z</updated>
    <id>tag:github.com,2023-10-27:/mawkler/modicator.nvim</id>
    <link href="https://github.com/mawkler/modicator.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cursor line number mode indicator&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modicator.nvim ðŸ’¡&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;Cursor line number &lt;strong&gt;mod&lt;/strong&gt;e ind&lt;strong&gt;icator&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;A small Neovim plugin that changes the color of your cursor&#39;s line number based on the current Vim mode.&lt;/p&gt; &#xA;&lt;p&gt;Modicator has &lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt; support &lt;a href=&#34;https://raw.githubusercontent.com/mawkler/modicator.nvim/main/#lualine-integration&#34;&gt;out of the box&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/15816726/215295831-299dc732-85ae-4668-9e7b-e88cd499f18a.gif&#34; alt=&#34;Modicator in use&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;modicator&#39;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that modicator requires you to have &lt;code&gt;termguicolors&lt;/code&gt;, &lt;code&gt;cursorline&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt; set. In Lua this is done by adding the following somewhere in your Neovim configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.o.termguicolors = true&#xA;vim.o.cursorline = true&#xA;vim.o.number = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Modicator sets the Normal mode highlight foreground based on the default foreground color of &lt;code&gt;CursorLineNr&lt;/code&gt; so if you&#39;re using a colorscheme make sure that it gets loaded before this plugin.&lt;/p&gt; &#xA;&lt;p&gt;With &lt;a href=&#34;https://github.com/folke/lazy.nvim/&#34;&gt;lazy.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#39;mawkler/modicator.nvim&#39;,&#xA;  dependencies = &#39;mawkler/onedark.nvim&#39;, -- Add your colorscheme plugin here&#xA;  init = function()&#xA;    -- These are required for Modicator to work&#xA;    vim.o.cursorline = true&#xA;    vim.o.number = true&#xA;    vim.o.termguicolors = true&#xA;  end,&#xA;  opts = {}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or with &lt;a href=&#34;https://github.com/wbthomason/packer.nvim/&#34;&gt;packer.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;mawkler/modicator.nvim&#39;,&#xA;  after = &#39;onedark.nvim&#39;, -- Add your colorscheme plugin here&#xA;  setup = function()&#xA;    -- These are required for Modicator to work&#xA;    vim.o.cursorline = true&#xA;    vim.o.number = true&#xA;    vim.o.termguicolors = true&#xA;  end,&#xA;  config = function()&#xA;    require(&#39;modicator&#39;).setup()&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Modicator uses the following highlight groups for each mode, respectively:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-txt&#34;&gt;NormalMode&#xA;InsertMode&#xA;VisualMode&#xA;CommandMode&#xA;ReplaceMode&#xA;SelectMode&#xA;TerminalMode&#xA;TerminalNormalMode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information on how to create a highlight group, see &lt;code&gt;:help nvim_set_hl&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Default configuration:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;modicator&#39;).setup({&#xA;  -- Show warning if any required option is missing&#xA;  show_warnings = true,&#xA;  highlights = {&#xA;    -- Default options for bold/italic&#xA;    defaults = {&#xA;      bold = false,&#xA;      italic = false,&#xA;    },&#xA;  },&#xA;  integration = {&#xA;    lualine = {&#xA;      enabled = true,&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Lualine integration&lt;/h2&gt; &#xA;&lt;p&gt;Modicator has built-in support &lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;, meaning that if it detects lualine.nvim in your setup it will use the same colors for each mode as lualine.nvim uses. To disable this feature, you can set &lt;code&gt;integration.lualine.enabled = false&lt;/code&gt; in your &lt;a href=&#34;https://raw.githubusercontent.com/mawkler/modicator.nvim/main/#default-configuration&#34;&gt;modicator configuration&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that Modicator will only create a highlight group from a lualine.nvim mode highlight if that highlight group doesn&#39;t already exist.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mawkler/modicator.nvim/assets/15816726/dee0ae61-1435-45cc-98e2-89fd8b46d8a7&#34; alt=&#34;modicator.nvim&#39;s lualine integration&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Issues with other plugins&lt;/h2&gt; &#xA;&lt;h3&gt;marks.nvim&lt;/h3&gt; &#xA;&lt;p&gt;By default, &lt;a href=&#34;https://github.com/chentoast/marks.nvim&#34;&gt;marks.nvim&lt;/a&gt; highlights number lines with marks using &lt;code&gt;CursorLineNr&lt;/code&gt;, which makes all line numbers recolored by Modicator every time mode is changed.&lt;/p&gt; &#xA;&lt;p&gt;To fix this issue, either set &lt;code&gt;MarkSignNumHL&lt;/code&gt; to something else, or remove the highlight group completely by putting the following snippet anywhere in your configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local marks_fix_group = vim.api.nvim_create_augroup(&#34;marks-fix-hl&#34;, {})&#xA;vim.api.nvim_create_autocmd({ &#34;VimEnter&#34; }, {&#xA;  group = marks_fix_group,&#xA;  callback = function()&#xA;    vim.api.nvim_set_hl(0, &#34;MarkSignNumHL&#34;, {})&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>