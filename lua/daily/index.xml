<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-13T01:37:34Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>jpmcb/nvim-llama</title>
    <updated>2023-12-13T01:37:34Z</updated>
    <id>tag:github.com,2023-12-13:/jpmcb/nvim-llama</id>
    <link href="https://github.com/jpmcb/nvim-llama" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶ô Llama 2 and llama.cpp interfaces for Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ü¶ô nvim-llama&lt;/h1&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://ai.meta.com/llama/&#34;&gt;Llama 2&lt;/a&gt; and &lt;a href=&#34;https://github.com/ggerganov/llama.cpp/&#34;&gt;llama.cpp&lt;/a&gt; interfaces for Neovim&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Project status&lt;/h1&gt; &#xA;&lt;p&gt;üèóÔ∏è üë∑ Warning! Under active development!! üë∑ üöß&lt;/p&gt; &#xA;&lt;p&gt;This plugin was created as a proof of concept plugin for running large language model technology within Neovim on consumer hardware. Using llama.cpp and a downloaded model showed that this goal is indeed possible.&lt;/p&gt; &#xA;&lt;p&gt;But distributing, building, maintaining, and running a large C/C++ project (llama.cpp) is abit out of scope of what makes sense for a liteweight nvim plugin.&lt;/p&gt; &#xA;&lt;p&gt;Therefore, this project will be transitiion to use Ollama, a llama.cpp runner in docker. Ideally, this means that all you&#39;ll need to run nvim-llama is docker!&lt;/p&gt; &#xA;&lt;p&gt;You can expect these changes in Q1 2024.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Use your favorite package manager to install the plugin:&lt;/p&gt; &#xA;&lt;h3&gt;Packer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;  use &#39;jpmcb/nvim-llama&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;lazy.nvim&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#39;jpmcb/nvim-llama&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;vim-plug&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;Plug &#39;jpmcb/nvim-llama&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Setup &amp;amp; configuration&lt;/h1&gt; &#xA;&lt;p&gt;In your &lt;code&gt;init.vim&lt;/code&gt;, setup the plugin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;nvim-llama&#39;).setup {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can provide the following optional configuration table to the &lt;code&gt;setup&lt;/code&gt; function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local defaults = {&#xA;    -- See plugin debugging logs&#xA;    debug = false,&#xA;&#xA;    -- Build llama.cpp for GPU acceleration on Apple M chip devices.&#xA;    -- If you are using an Apple M1/M2 laptop, it is highly recommended to&#xA;    -- use this since, depending on the model, may drastically increase performance.&#xA;    build_metal = false,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Models&lt;/h1&gt; &#xA;&lt;p&gt;Llama.cpp supports an incredible number of models.&lt;/p&gt; &#xA;&lt;p&gt;To start using one, you&#39;ll need to download an appropriately sized model that is supported by llama.cpp.&lt;/p&gt; &#xA;&lt;p&gt;The 13B GGUF CodeLlama model is a really good place to start: &lt;a href=&#34;https://huggingface.co/TheBloke/CodeLlama-13B-GGUF&#34;&gt;https://huggingface.co/TheBloke/CodeLlama-13B-GGUF&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to use a model, it must be in the &lt;code&gt;llama.cpp/models/&lt;/code&gt; directory which is expected to be found at &lt;code&gt;~/.local/share/llama.cpp/models&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The following script can be useful for downloading a model to that directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;LLAMA_CPP=&#34;~/.local/share/nvim/llama.cpp&#34;&#xA;MODEL=&#34;codellama-13b.Q4_K_M.gguf&#34;&#xA;&#xA;pushd &#34;${LLAMA_CPP}&#34;&#xA;    if [ ! -f models/${MODEL} ]; then&#xA;        curl -L &#34;https://huggingface.co/TheBloke/CodeLlama-13B-GGUF/resolve/main/${MODEL}&#34; -o models/${MODEL}&#xA;    fi&#xA;popd&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the future, this project may provide the capability to download models automatically.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is dual licensed under &lt;a href=&#34;https://raw.githubusercontent.com/jpmcb/nvim-llama/main/LICENSE.txt&#34;&gt;MIT&lt;/a&gt; (first party plugin code) and the &lt;a href=&#34;https://raw.githubusercontent.com/jpmcb/nvim-llama/main/LICENSE.llama.txt&#34;&gt;Llama 2 license&lt;/a&gt;. By using this plugin, you agree to both terms and assert you have already have &lt;a href=&#34;https://ai.meta.com/resources/models-and-libraries/llama-downloads/&#34;&gt;your own non-transferable license for Llama 2 from Meta AI&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>echasnovski/mini.move</title>
    <updated>2023-12-13T01:37:34Z</updated>
    <id>tag:github.com,2023-12-13:/echasnovski/mini.move</id>
    <link href="https://github.com/echasnovski/mini.move" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim Lua plugin to move any selection in any direction. Part of &#39;mini.nvim&#39; library.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/echasnovski/media/raw/main/mini.nvim/logo/logo_move.png&#34; style=&#34;width: 100%&#34;&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/echasnovski/mini.nvim&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h3&gt;Move any selection in any direction&lt;/h3&gt; &#xA;&lt;p&gt;See more details in &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.move/main/#features&#34;&gt;Features&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.move/main/doc/mini-move.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;‚¶ø This is a part of &lt;a href=&#34;https://github.com/echasnovski/mini.nvim&#34;&gt;mini.nvim&lt;/a&gt; library. Please use &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/readmes/mini-move.md&#34;&gt;this link&lt;/a&gt; if you want to mention this module.&lt;/p&gt; &#xA;&lt;p&gt;‚¶ø All contributions (issues, pull requests, discussions, etc.) are done inside of &#39;mini.nvim&#39;.&lt;/p&gt; &#xA;&lt;p&gt;‚¶ø See the repository page to learn about common design principles and configuration recipes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want to help this project grow but don&#39;t know where to start, check out &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/CONTRIBUTING.md&#34;&gt;contributing guides of &#39;mini.nvim&#39;&lt;/a&gt; or leave a Github star for &#39;mini.nvim&#39; project and/or any its standalone Git repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/24854248/213466308-2e732d83-7c49-452d-8974-6b18b38bf89f.mp4&#34;&gt;https://user-images.githubusercontent.com/24854248/213466308-2e732d83-7c49-452d-8974-6b18b38bf89f.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Works in two modes: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Visual mode. Select text (charwise with &lt;code&gt;v&lt;/code&gt;, linewise with &lt;code&gt;V&lt;/code&gt;, and blockwise with &lt;code&gt;CTRL-V&lt;/code&gt;) and press customizable mapping to move in all four directions (left, right, down, up). It keeps Visual mode.&lt;/li&gt; &#xA;   &lt;li&gt;Normal mode. Press customizable mapping to move current line in all four directions (left, right, down, up).&lt;/li&gt; &#xA;   &lt;li&gt;Special handling of linewise movement: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Vertical movement gets reindented with &lt;code&gt;=&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Horizontal movement is improved indent/dedent with &lt;code&gt;&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;&lt;/code&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;Cursor moves along with selection.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Provides both mappings and Lua functions for motions. See &lt;code&gt;:h MiniMove.move_selection()&lt;/code&gt; and &lt;code&gt;:h MiniMove.move_line()&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Respects &lt;code&gt;v:count&lt;/code&gt;. Movement mappings can be preceded by a number which multiplies command effect.&lt;/li&gt; &#xA; &lt;li&gt;All consecutive moves (regardless of direction) can be undone by a single &lt;code&gt;u&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Respects preferred column for vertical movement. It will vertically move selection as how cursor is moving (not strictly vertically if target column is not present in target line).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This plugin can be installed as part of &#39;mini.nvim&#39; library (&lt;strong&gt;recommended&lt;/strong&gt;) or as a standalone Git repository.&lt;/p&gt; &#xA;&lt;p&gt;There are two branches to install from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;main&lt;/code&gt; (default, &lt;strong&gt;recommended&lt;/strong&gt;) will have latest development version of plugin. All changes since last stable release should be perceived as being in beta testing phase (meaning they already passed alpha-testing and are moderately settled).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt; will be updated only upon releases with code tested during public beta-testing phase in &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here are code snippets for some common installation methods (use only one):&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;folke/lazy.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.nvim&#39;, version = false },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.nvim&#39;, version = &#39;*&#39; },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.move&#39;, version = false },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.move&#39;, version = &#39;*&#39; },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;wbthomason/packer.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.nvim&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.move&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.move&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;junegunn/vim-plug&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td rowspan=&#34;2&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.move&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Stable&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.move&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: don&#39;t forget to call &lt;code&gt;require(&#39;mini.move&#39;).setup()&lt;/code&gt; to enable its functionality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: if you are on Windows, there might be problems with too long file paths (like &lt;code&gt;error: unable to create file &amp;lt;some file name&amp;gt;: Filename too long&lt;/code&gt;). Try doing one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable corresponding git global config value: &lt;code&gt;git config --system core.longpaths true&lt;/code&gt;. Then try to reinstall.&lt;/li&gt; &#xA; &lt;li&gt;Install plugin in other place with shorter path.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Default config&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- No need to copy this inside `setup()`. Will be used automatically.&#xA;{&#xA;  -- Module mappings. Use `&#39;&#39;` (empty string) to disable one.&#xA;  mappings = {&#xA;    -- Move visual selection in Visual mode. Defaults are Alt (Meta) + hjkl.&#xA;    left = &#39;&amp;lt;M-h&amp;gt;&#39;,&#xA;    right = &#39;&amp;lt;M-l&amp;gt;&#39;,&#xA;    down = &#39;&amp;lt;M-j&amp;gt;&#39;,&#xA;    up = &#39;&amp;lt;M-k&amp;gt;&#39;,&#xA;&#xA;    -- Move current line in Normal mode&#xA;    line_left = &#39;&amp;lt;M-h&amp;gt;&#39;,&#xA;    line_right = &#39;&amp;lt;M-l&amp;gt;&#39;,&#xA;    line_down = &#39;&amp;lt;M-j&amp;gt;&#39;,&#xA;    line_up = &#39;&amp;lt;M-k&amp;gt;&#39;,&#xA;  },&#xA;&#xA;  -- Options which control moving behavior&#xA;  options = {&#xA;    -- Automatically reindent selection during linewise vertical move&#xA;    reindent_linewise = true,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Similar plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/matze/vim-move&#34;&gt;matze/vim-move&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/booperlv/nvim-gomove&#34;&gt;booperlv/nvim-gomove&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rsjaffe/MIDI2LR</title>
    <updated>2023-12-13T01:37:34Z</updated>
    <id>tag:github.com,2023-12-13:/rsjaffe/MIDI2LR</id>
    <link href="https://github.com/rsjaffe/MIDI2LR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An application and plugin to remotely control Lightroom with a MIDI controller&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MIDI2LR&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rsjaffe/MIDI2LR/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/rsjaffe/MIDI2LR.svg?sanitize=true&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rsjaffe/MIDI2LR/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/rsjaffe/MIDI2LR/total.svg?sanitize=true&#34; alt=&#34;MIDI2LR All Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/rsjaffe/MIDI2LR/raw/master/LICENSE.txt&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/rsjaffe/MIDI2LR.svg?sanitize=true&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;MIDI2LR&lt;/strong&gt; is an application that interfaces MIDI controllers with Lightroom Classic. &lt;strong&gt;Version 4 requires Lightroom 10 Classic, version 5 Lightroom 11 Classic: use version 3 for earlier versions of Lightroom&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It processes MIDI input into develop parameter updates and photo actions, and sends MIDI output when parameters are changed for motorized feedback (on controllers that have motorized faders). &lt;a href=&#34;https://github.com/rsjaffe/MIDI2LR/wiki/Commands&#34;&gt;A listing of available Lightroom commands is in the Wiki&lt;/a&gt;. Assistance on the code and design is welcome.&lt;/p&gt; &#xA;&lt;p&gt;MIDI2LR supports all languages Lightroom supports: Deutsch, English, espa√±ol, fran√ßais, ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä, italiano, Êó•Êú¨Ë™û, ÌïúÍµ≠Ïñ¥, Nederlands, norsk, polski, portugu√™s, —Ä—É—Å—Å–∫–∏–π, Svenska, ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ and ‰∏≠Êñá (ÁÆÄ‰Ωì‰∏≠ÊñáÂíåÁπÅÈ´î‰∏≠Êñá). ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤‡§∞ ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§ï‡§æ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§π‡§æ‡§≤‡§æ‡§Ç‡§ï‡§ø, ‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ MIDI2LR ‡§á‡§Ç‡§∏‡•ç‡§ü‡•â‡§≤‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•Ä ‡§ú‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§ï‡•Ä ‡§™‡§∞‡§µ‡§æ‡§π ‡§ï‡§ø‡§è ‡§¨‡§ø‡§®‡§æ ‡§∏‡§≠‡•Ä ‡§≠‡§æ‡§∑‡§æ‡§ì‡§Ç ‡§ï‡§æ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§&lt;/p&gt; &#xA;&lt;p&gt;Translation assistance welcome. Sign up at &lt;a href=&#34;https://poeditor.com/join/project?hash=v6U0MvufAn&#34;&gt;https://poeditor.com/join/project?hash=v6U0MvufAn&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Support MIDI2LR üí∏&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Donate to support project development&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Unterst√ºtzen Sie die Projektentwicklung mit Ihrer Spende&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Donaci√≥n para ayuda al desarrollo de proyectos&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Faire un don pour encourager le d√©veloppement du projet&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‚Äç‡§ü ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡•á ‡§∏‡§Æ‡§∞‡•ç‡§•‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¶‡§æ‡§® ‡§ï‡§∞‡•á‡§Ç&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Dona per supportare lo sviluppo del progetto&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÈñãÁô∫„Çí„Çµ„Éù„Éº„Éà„Åô„Çã„Åü„ÇÅ„ÅÆÂØÑ‰ªò„Çí„ÅäÈ°ò„ÅÑ„Åó„Åæ„Åô&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;ÌîÑÎ°úÏ†ùÌä∏ Í∞úÎ∞ú ÏßÄÏõêÏùÑ ÏúÑÌï¥ Í∏∞Î∂Ä&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Doneren om projectontwikkeling te steunen&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Doner for √• st√∏tte prosjektutvikling&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Przeka≈º dotacjƒô na prace nad projektem&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Doar para apoiar o desenvolvimento de projetos&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –ø—Ä–æ–µ–∫—Ç–∞&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;Donera f√∂r att st√∂dja projektutveckling&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;‡∏ö‡∏£‡∏¥‡∏à‡∏≤‡∏Ñ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;ÊçêËµ†‰ª•ÊîØÊåÅÈ°πÁõÆÂºÄÂèë&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://paypal.me/MIDI2LR&#34;&gt;ÊçêÊ¨æÊîØÊåÅÂ∞àÊ°àÈñãÁôº&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Screenshot&lt;/th&gt; &#xA;   &lt;th&gt;Further information&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;http://rsjaffe.github.io/MIDI2LR/images/app.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Discussion Forum&lt;/strong&gt;: &lt;a href=&#34;https://github.com/rsjaffe/MIDI2LR/discussions&#34;&gt;https://github.com/rsjaffe/MIDI2LR/discussions&lt;/a&gt; &lt;br&gt;&lt;strong&gt;Supported platforms&lt;/strong&gt;: MacOS or Windows. &lt;br&gt;&lt;strong&gt;Building&lt;/strong&gt;: &lt;a href=&#34;https://github.com/rsjaffe/MIDI2LR/raw/master/docs/BUILD.txt&#34;&gt;See the BUILD.txt file&lt;/a&gt;. &lt;br&gt;&lt;strong&gt;Project Page&lt;/strong&gt;: &lt;a href=&#34;http://rsjaffe.github.io/MIDI2LR&#34;&gt;Project Page&lt;/a&gt;. &lt;br&gt;&lt;strong&gt;Wiki and Instruction Manual&lt;/strong&gt;: &lt;a href=&#34;https://github.com/rsjaffe/MIDI2LR/wiki&#34;&gt;Wiki üìñ&lt;/a&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;SAST Tools&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pvs-studio.com/pvs-studio/?utm_source=website&amp;amp;utm_medium=github&amp;amp;utm_campaign=open_source&#34;&gt;PVS-Studio&lt;/a&gt; - static analyzer for C, C++, C#, and Java code.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.jetbrains.com/resharper-cpp/&#34;&gt;ReSharperC++&lt;/a&gt; - static analyzer for C++ code.&lt;/p&gt;</summary>
  </entry>
</feed>