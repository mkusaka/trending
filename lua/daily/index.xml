<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-03T02:25:30Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>0wQ/air724ug-forwarder</title>
    <updated>2023-03-03T02:25:30Z</updated>
    <id>tag:github.com,2023-03-03:/0wQ/air724ug-forwarder</id>
    <link href="https://github.com/0wQ/air724ug-forwarder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Air724UG 短信转发 &amp; 来电通知 &amp; 语音信箱&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Air724UG 短信转发 &amp;amp; 来电通知 &amp;amp; 语音信箱&lt;/h1&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;底层 CORE 版本：&lt;a href=&#34;https://doc.openluat.com/article/1334&#34;&gt;LuatOS-Air_V4018_RDA8910_TTS_NOLVGL_FLOAT.pac&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;1. 修改 &lt;code&gt;script/config.lua&lt;/code&gt; 配置文件&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;config = {&#xA;    -- 通知类型 pushdeer, bark, telegram&#xA;    NOTIFY_TYPE = &#34;pushdeer&#34;,&#xA;&#xA;    -- PushDeer 通知配置, https://www.pushdeer.com&#xA;    PUSHDEER_KEY = &#34;&#34;,&#xA;&#xA;    -- Bark 通知配置, https://github.com/Finb/Bark&#xA;    BARK_KEY = &#34;&#34;,&#xA;&#xA;    -- Telegram 通知配置, https://github.com/0wQ/telegram-notify&#xA;    TELEGRAM_PROXY_API = &#34;&#34;,&#xA;    TELEGRAM_TOKEN = &#34;&#34;,&#xA;    TELEGRAM_CHAT_ID = &#34;&#34;,&#xA;&#xA;    -- 腾讯云 COS / 阿里云 OSS / AWS S3 等对象存储上传地址&#xA;    -- 存储桶需设置为 &amp;lt;私有读写&amp;gt;, 并授权 &amp;lt;所有用户&amp;gt; &amp;lt;指定目录&amp;gt; 的 &amp;lt;PutObject&amp;gt; 操作&#xA;    UPLOAD_URL = &#34;http://xxx-123456.cos.ap-nanjing.myqcloud.com/this-is-the-path&#34;,&#xA;&#xA;    -- 其他配置...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;推荐使用腾讯云 COS&lt;/p&gt; &#xA; &lt;p&gt;配合工作流可以实现自动音频转码、语音识别功能&lt;/p&gt; &#xA; &lt;p&gt;可在腾讯云助手微信小程序或 COSBrowser APP，查看录音文件、语音识别结果&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/20741439/204080463-061349fd-3b4e-4f36-be8c-b0ad0013a1df.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;3. 烧录脚本&lt;/h3&gt; &#xA;&lt;p&gt;根据 &lt;a href=&#34;http://air724ug.cn&#34;&gt;air724ug.cn&lt;/a&gt; 官方指引下载 LuaTools 并写入 &lt;code&gt;script&lt;/code&gt; 目录下文件&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>askfiy/visual_studio_code</title>
    <updated>2023-03-03T02:25:30Z</updated>
    <id>tag:github.com,2023-03-03:/askfiy/visual_studio_code</id>
    <link href="https://github.com/askfiy/visual_studio_code" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A `neovim` theme that highly restores `vscode`, so that your friends will no longer be surprised that you use `neovim`, because they will think you are using `vscode` ..&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;README&lt;/h1&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt; Neovim Visual Studio Code Theme &lt;/h3&gt; &#xA;&lt;h6&gt; A `neovim` theme based on `visual studio`, written in `Lua`. It tries to get all the colors in `developer mode` of `vscode`, so the simulation is very high. &lt;/h6&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt; &#xA; &lt;hr&gt; &lt;img src=&#34;https://raw.githubusercontent.com/askfiy/visual_studio_code/master/screen/dark.png&#34; width=&#34;80%&#34;&gt; &#xA; &lt;hr&gt; &lt;img src=&#34;https://raw.githubusercontent.com/askfiy/visual_studio_code/master/screen/light.png&#34; width=&#34;80%&#34;&gt; &lt;/h6&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Install and use&lt;/h2&gt; &#xA;&lt;p&gt;Install via &lt;code&gt;Lazy&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lazy&#xA;{&#xA;    &#34;askfiy/visual_studio_code&#34;,&#xA;    priority = 100,&#xA;    config = function()&#xA;        require(&#34;visual_studio_code&#34;).setup({&#xA;            mode = &#34;dark&#34;,&#xA;        })&#xA;    end,&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install via &lt;code&gt;Packer&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- packer&#xA;{&#xA;    &#34;askfiy/visual_studio_code&#34;,&#xA;    config = function()&#xA;        require(&#34;visual_studio_code&#34;).setup({&#xA;            mode = &#34;dark&#34;,&#xA;        })&#xA;    end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Default configuration&lt;/h2&gt; &#xA;&lt;p&gt;Default config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local default_config = {&#xA;    -- `dark` or `light`&#xA;    mode = &#34;dark&#34;,&#xA;    -- Whether to load all color schemes&#xA;    preset = true,&#xA;    -- Whether to enable background transparency&#xA;    transparent = false,&#xA;    -- Whether to apply the adapted plugin&#xA;    expands = {&#xA;        hop = true,&#xA;        lazy = true,&#xA;        aerial = true,&#xA;        fidget = true,&#xA;        null_ls = true,&#xA;        nvim_cmp = true,&#xA;        gitsigns = true,&#xA;        which_key = true,&#xA;        nvim_tree = true,&#xA;        lspconfig = true,&#xA;        telescope = true,&#xA;        bufferline = true,&#xA;        nvim_navic = true,&#xA;        nvim_notify = true,&#xA;        vim_illuminate = true,&#xA;        nvim_treesitter = true,&#xA;        nvim_ts_rainbow = true,&#xA;        nvim_scrollview = true,&#xA;        indent_blankline = true,&#xA;        vim_visual_multi = true,&#xA;    },&#xA;    hooks = {&#xA;        before = function(conf, colors, utils) end,&#xA;        after = function(conf, colors, utils) end,&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related functions&lt;/h2&gt; &#xA;&lt;p&gt;The plugin provides some utility functions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;visual_studio_code&#34;)&#xA;   - get_config()               -- current configuration table&#xA;   - get_colors()               -- current color highlight table&#xA;   - get_lualine_sections()     -- lualine sections table&#xA;   - get_bufferline_right()     -- bufferline custom right area&#xA;&#xA;require(&#34;visual_studio_code.utils&#34;)&#xA;   - hl.set(name, options)&#xA;   - hl.link(src, dst)&#xA;   - hl.get(name, option)&#xA;   - hl.bulk_set(groups)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;visual_studio_code.utils&#34;).hl.set(&#34;Normal&#34;, { fg = &#34;#000000&#34;, bg = &#34;#1E1E2E&#34;})&#xA;&#xA;require(&#34;visual_studio_code.utils&#34;).hl.link(&#34;NormalFloat&#34;, &#34;Normal&#34;)&#xA;&#xA;require(&#34;visual_studio_code.utils&#34;).hl.get(&#34;Normal&#34;, &#34;fg&#34;)   -- #000000&#xA;&#xA;require(&#34;visual_studio_code.utils&#34;).hl.bulk_set({&#xA;    Normal = { fg = &#34;#000000&#34;, bg = &#34;#1E1E2E&#34;},&#xA;    NormalFloat = { link = &#34;Normal&#34; },&#xA;    Cursor = { bg = &#34;#0FE1EE&#34;, bold = true }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hooks function&lt;/h2&gt; &#xA;&lt;p&gt;The plugin provides 2 hook functions, which are automatically executed before and after the color is applied:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;hooks = {&#xA;    before = function(conf, colors, utils) end,&#xA;    after = function(conf, colors, utils) end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Additional considerations&lt;/h2&gt; &#xA;&lt;p&gt;Regarding the &lt;code&gt;bufferline&lt;/code&gt;, you need to make sure it has the &lt;code&gt;themable&lt;/code&gt; option turned on:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;&#xA;require(&#34;bufferline&#34;).setup({&#xA;    options = {&#xA;        themable = true,&#xA;        ...&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you need to use the &lt;code&gt;vim_visual_multi&lt;/code&gt; plugin adaptation, please add the following code to your &lt;code&gt;init.lua&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.g.VM_Extend_hl = &#34;VM_Extend_hl&#34;&#xA;vim.g.VM_Cursor_hl = &#34;VM_Cursor_hl&#34;&#xA;vim.g.VM_Mono_hl = &#34;VM_Mono_hl&#34;&#xA;vim.g.VM_Insert_hl = &#34;VM_Insert_hl&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t use &lt;code&gt;tmux&lt;/code&gt;, try running &lt;code&gt;:set cmdheight=0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If some &lt;code&gt;nvim-web-devicons&lt;/code&gt; icons do not display well in &lt;code&gt;light&lt;/code&gt; mode, please tell me the name of the icon, and I will adapt it.&lt;/p&gt; &#xA;&lt;h2&gt;Lualine integrated&lt;/h2&gt; &#xA;&lt;p&gt;To quickly get a &lt;code&gt;vscode&lt;/code&gt; style statusline, you need to use &lt;code&gt;lualine&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lualine&#34;).setup({&#xA;    options = {&#xA;        theme = &#34;auto&#34;,&#xA;        icons_enabled = true,&#xA;        component_separators = { left = &#34;&#34;, right = &#34;&#34; },&#xA;        section_separators = { left = &#34;&#34;, right = &#34;&#34; },&#xA;        disabled_filetypes = {},&#xA;        globalstatus = true,&#xA;        refresh = {&#xA;            statusline = 100,&#xA;        },&#xA;    },&#xA;    sections = require(&#34;visual_studio_code&#34;).get_lualine_sections(),&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Bufferline integrated&lt;/h2&gt; &#xA;&lt;p&gt;要快速获取 &lt;code&gt;vscode&lt;/code&gt; 右上角的几个按钮，你可以向下面这样设置 &lt;code&gt;bufferline&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;bufferline&#34;).setup({&#xA;    options = {&#xA;        themable = true,&#xA;        close_icon = &#34;&#34;,&#xA;        ...&#xA;        custom_areas = {&#xA;            right = require(&#34;visual_studio_code&#34;).get_bufferline_right(),&#xA;        },&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Extension&lt;/h2&gt; &#xA;&lt;p&gt;Extended plugin colors are in the &lt;code&gt;expands&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/askfiy/visual_studio_code/master/lua/visual_studio_code/core/expands/&#34;&gt;lua/visual_studio_code/core/expands/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Also, any new &lt;code&gt;PR&lt;/code&gt;s are welcome, as I&#39;m not enthusiastic about plugin adaptation, so may need everyone&#39;s help to make it better..&lt;/p&gt; &#xA;&lt;h2&gt;Screenshot&lt;/h2&gt; &#xA;&lt;h6 align=&#34;center&#34;&gt; &#xA; &lt;hr&gt; &lt;img src=&#34;https://raw.githubusercontent.com/askfiy/visual_studio_code/master/screen/dark01.png&#34; width=&#34;80%&#34;&gt; &#xA; &lt;hr&gt; &lt;img src=&#34;https://raw.githubusercontent.com/askfiy/visual_studio_code/master/screen/light01.png&#34; width=&#34;80%&#34;&gt; &#xA; &lt;hr&gt; &lt;img src=&#34;https://raw.githubusercontent.com/askfiy/visual_studio_code/master/screen/dark02.png&#34; width=&#34;80%&#34;&gt; &#xA; &lt;hr&gt; &lt;img src=&#34;https://raw.githubusercontent.com/askfiy/visual_studio_code/master/screen/light02.png&#34; width=&#34;80%&#34;&gt; &#xA; &lt;hr&gt; &lt;/h6&gt;</summary>
  </entry>
  <entry>
    <title>loctvl842/monokai-pro.nvim</title>
    <updated>2023-03-03T02:25:30Z</updated>
    <id>tag:github.com,2023-03-03:/loctvl842/monokai-pro.nvim</id>
    <link href="https://github.com/loctvl842/monokai-pro.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Monokai Pro theme for Neovim written in Lua, with multiple filters: Pro, Classic, Machine, Octagon, Ristretto, Spectrum&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;div class=&#34;b-header&#34;&gt; &#xA;  &lt;a class=&#34;active&#34; href=&#34;https://github.com/loctvl842/monokai-pro.nvim&#34;&gt; &lt;img style=&#34;width: 16rem&#34; src=&#34;https://user-images.githubusercontent.com/80513079/209661594-1fa9abea-825a-4b1c-91d6-f6634d68f94e.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;h1&gt;Monokai Pro&lt;/h1&gt; &lt;h2&gt;Beautiful functionality for professional developers&lt;/h2&gt; &lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Find out more here &lt;a href=&#34;https://monokai.pro/&#34;&gt;monokai.pro&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/80513079/218453999-87c957f1-658d-49a6-bf67-291d3e46fa9a.png&#34; alt=&#34;monokai-pro-macbook&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⭐ Pro&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/80513079/209659184-ed5a28c3-cb7f-4de7-8f7c-5d206dc11540.png&#34; alt=&#34;pro&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🛑 Octagon&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/80513079/209659175-97db9a95-edd0-4b6e-8087-7fb1aee45c52.png&#34; alt=&#34;octagon&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤖 Machine&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/80513079/209659194-d9fe09f5-ea35-4130-b2e8-d854b7b6fb72.png&#34; alt=&#34;machine&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;☕ Ristretto&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/80513079/209659205-90200c24-d302-4b70-811a-36e6e7845f6b.png&#34; alt=&#34;ristretto&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🌈 Spectrum&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/80513079/209659126-9df0d401-020f-4b0c-963d-5a930d0a6974.png&#34; alt=&#34;spectrum&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;👴 Classic&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/80513079/209659153-9362a05f-2b7f-4b36-acf1-d13bef6a9118.png&#34; alt=&#34;classic&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🔌 Plugin support&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goolord/alpha-nvim&#34;&gt;alpha-nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/bufferline.nvim&#34;&gt;bufferLine.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;Cmp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RRethy/vim-illuminate&#34;&gt;vim-illuminate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim&#34;&gt;indent-blankline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;neo-tree.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim-notify&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/filipdutescu/renamer.nvim&#34;&gt;renamer.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/toggleterm.nvim&#34;&gt;toggleterm.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;which-key.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/loctvl842/breadcrumb.nvim&#34;&gt;breadcrumb.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/SmiteshP/nvim-navic&#34;&gt;nvim-navic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gelguy/wilder.nvim&#34;&gt;wilder.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/itchyny/lightline.vim&#34;&gt;Lightline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/utilyre/barbecue.nvim&#34;&gt;barbecue.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/dashboard-nvim&#34;&gt;dashboard-nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/mason.nvim&#34;&gt;mason.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;loctvl842/monokai-pro.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#34;loctvl842/monokai-pro.nvim&#34;,&#xA;  config = function()&#xA;    require(&#34;monokai-pro&#34;).setup()&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔨 Configuration&lt;/h2&gt; &#xA;&lt;p&gt;There are several themes included in this plugin.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loctvl842/monokai-pro.nvim/master/#-pro&#34;&gt;Pro&lt;/a&gt; – Monokai Pro &lt;em&gt;(default)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loctvl842/monokai-pro.nvim/master/#-octagon&#34;&gt;Octagon&lt;/a&gt; – Monokai Pro (Filter Octagon)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loctvl842/monokai-pro.nvim/master/#-machine&#34;&gt;Machine&lt;/a&gt; – Monokai Pro (Filter Machine)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loctvl842/monokai-pro.nvim/master/#-ristretto&#34;&gt;Ristretto&lt;/a&gt; – Monokai Pro (Filter Machine)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loctvl842/monokai-pro.nvim/master/#-spectrum&#34;&gt;Spectrum&lt;/a&gt; – Monokai Pro (Filter Machine)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/loctvl842/monokai-pro.nvim/master/#-classic&#34;&gt;Classic&lt;/a&gt; – Monokai Classic&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;monokai-pro&#34;).setup({&#xA;  transparent_background = false,&#xA;  terminal_colors = true,&#xA;  devicons = true, -- highlight the icons of `nvim-web-devicons`&#xA;  italic_comments = true,&#xA;  filter = &#34;pro&#34;, -- classic | octagon | pro | machine | ristretto | spectrum&#xA;  -- Enable this will disable filter option&#xA;  day_night = {&#xA;    enable = false, -- turn off by default&#xA;    day_filter = &#34;pro&#34;, -- classic | octagon | pro | machine | ristretto | spectrum&#xA;    night_filter = &#34;spectrum&#34;, -- classic | octagon | pro | machine | ristretto | spectrum&#xA;  },&#xA;  inc_search = &#34;background&#34;, -- underline | background&#xA;  background_clear = {&#xA;    -- &#34;float_win&#34;,&#xA;    &#34;toggleterm&#34;,&#xA;    &#34;telescope&#34;,&#xA;    &#34;which-key&#34;,&#xA;    &#34;renamer&#34;&#xA;  },-- &#34;float_win&#34;, &#34;toggleterm&#34;, &#34;telescope&#34;, &#34;which-key&#34;, &#34;renamer&#34;, &#34;neo-tree&#34;&#xA;  plugins = {&#xA;    bufferline = {&#xA;      underline_selected = false,&#xA;      underline_visible = false,&#xA;    },&#xA;    indent_blankline = {&#xA;      context_highlight = &#34;default&#34;, -- default | pro&#xA;      context_start_underline = false,&#xA;    },&#xA;  },&#xA;  ---@param c Colorscheme&#xA;  override = function(c) end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check my &lt;a href=&#34;https://github.com/loctvl842/nvim&#34;&gt;nvim&lt;/a&gt; to see my plugins setup for &lt;code&gt;border&lt;/code&gt; if you want to set &lt;code&gt;background_clear&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;float_win&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;monokai-pro&#34;).setup({&#xA;    -- ... your config&#xA;    background_clear = { &#34;float_win&#34; }&#xA;    -- ... your config&#xA;})&#xA;&#xA;require(&#34;cmp&#34;).setup({&#xA;    -- ... your config&#xA;    window = {&#xA;      border = &#34;rounded&#34;,&#xA;    }&#xA;    completion = {&#xA;        border = &#34;rounded&#34;,&#xA;    }&#xA;    -- ... your config&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;With the above config: &lt;img src=&#34;https://user-images.githubusercontent.com/80513079/218801625-a2b43cb0-175c-4463-9290-a361deb41f6a.png&#34; alt=&#34;bg_clear_cmp&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;With the default config: &lt;img src=&#34;https://user-images.githubusercontent.com/80513079/218804686-834c624d-d9bf-45a1-a1bd-a6d05e70e1b8.png&#34; alt=&#34;default_cmp&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Telescope&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;monokai-pro&#34;).setup({&#xA;    -- ... your config&#xA;    background_clear = {}&#xA;    -- ... your config&#xA;})&#xA;&#xA;require(&#34;telescope&#34;).setup({&#xA;    -- ... your config&#xA;    defaults = {&#xA;      borderchars = { &#34;█&#34;, &#34; &#34;, &#34;▀&#34;, &#34;█&#34;, &#34;█&#34;, &#34; &#34;, &#34; &#34;, &#34;▀&#34; },&#xA;    }&#xA;    -- ... your config&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;With the above config:&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/80513079/218804055-a5cbf9d4-5c0f-4c0f-9cfe-5362af3714e8.png&#34; alt=&#34;removed_border_telescope&#34;&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;With the default config: &lt;img src=&#34;https://user-images.githubusercontent.com/80513079/218803566-56852087-8d3c-410c-854a-89bb49f8d981.png&#34; alt=&#34;default_telescope&#34;&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;📚 Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable this colorscheme by using the following command after &lt;code&gt;setup&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Vim Script&#xA;colorscheme monokai-pro&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;monokai-pro&#34;).setup({&#xA;  -- ... your config&#xA;})&#xA;-- lua&#xA;vim.cmd([[colorscheme monokai-pro]])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To enable &lt;code&gt;monokai-pro&lt;/code&gt; for &lt;code&gt;Lualine&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;lualine&#39;).setup {&#xA;  options = {&#xA;    -- ...&#xA;    theme = &#39;monokai-pro&#39;&#xA;    -- ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To enable &lt;code&gt;monokai-pro&lt;/code&gt; for &lt;code&gt;barbecue&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;barbecue&#39;).setup {&#xA;  -- ...&#xA;  theme = &#39;monokai-pro&#39;&#xA;  -- ...&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To enable &lt;code&gt;moonokai-pro&lt;/code&gt; for &lt;code&gt;lightline&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Vim Script&#xA;let g:lightline = {&#39;colorscheme&#39;: &#39;monokaipro&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Override function:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;monokai-pro&#34;).setup({&#xA;    -- ...&#xA;    override = function&#xA;      return {&#xA;          Normal = { bg = &#34;#000000&#34; }&#xA;        }&#xA;    end&#xA;    -- ...&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 Command&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;run command &lt;code&gt;MonokaiProSelect&lt;/code&gt; to launch a menu to choose theme filter (required: &lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim&#34;&gt;nui.nvim&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;or we can run command &lt;code&gt;MonokaiPro&lt;/code&gt; with parameter to change theme filter: For example: &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;code&gt;MonokaiPro classic&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>