<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-03T01:33:15Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>stevearc/quicker.nvim</title>
    <updated>2025-03-03T01:33:15Z</updated>
    <id>tag:github.com,2025-03-03:/stevearc/quicker.nvim</id>
    <link href="https://github.com/stevearc/quicker.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Improved UI and workflow for the Neovim quickfix&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;quicker.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Improved UI and workflow for the Neovim quickfix&lt;/p&gt; &#xA;&lt;!-- TOC --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stevearc/quicker.nvim/master/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stevearc/quicker.nvim/master/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stevearc/quicker.nvim/master/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stevearc/quicker.nvim/master/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stevearc/quicker.nvim/master/#options&#34;&gt;Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stevearc/quicker.nvim/master/#highlights&#34;&gt;Highlights&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stevearc/quicker.nvim/master/#api&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/stevearc/quicker.nvim/master/#other-plugins&#34;&gt;Other Plugins&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- /TOC --&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim 0.10+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Improved styling&lt;/strong&gt; - including syntax highlighting of grep results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Show context lines&lt;/strong&gt; - easily view lines above and below the quickfix results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Editable buffer&lt;/strong&gt; - make changes across your whole project by editing the quickfix buffer and &lt;code&gt;:w&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API helpers&lt;/strong&gt; - some helper methods for common tasks, such as toggling the quickfix.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Improved styling&lt;/strong&gt; (colorscheme: &lt;a href=&#34;https://github.com/EdenEast/nightfox.nvim/&#34;&gt;Duskfox&lt;/a&gt;) &lt;br&gt; Before &lt;br&gt; &lt;img width=&#34;695&#34; alt=&#34;Screenshot 2024-07-30 at 6 03 39 PM&#34; src=&#34;https://github.com/user-attachments/assets/8faa4790-8a7a-4d05-882e-c4e8e7653b00&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;After &lt;br&gt; &lt;img width=&#34;686&#34; alt=&#34;Screenshot 2024-07-30 at 2 05 49 PM&#34; src=&#34;https://github.com/user-attachments/assets/90cf87dd-83ec-4967-88aa-5ffe3e1e6623&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Context lines&lt;/strong&gt; around the results &lt;br&gt; &lt;img width=&#34;816&#34; alt=&#34;Screenshot 2024-07-30 at 2 06 17 PM&#34; src=&#34;https://github.com/user-attachments/assets/844445c9-328f-4f18-91d9-b32d32d3ef39&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Editing the quickfix&lt;/strong&gt; to apply changes across multiple files&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/5065ac4d-ec24-49d1-a95d-232344b17484&#34;&gt;https://github.com/user-attachments/assets/5065ac4d-ec24-49d1-a95d-232344b17484&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;quicker.nvim supports all the usual plugin managers&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;lazy.nvim&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#39;stevearc/quicker.nvim&#39;,&#xA;  event = &#34;FileType qf&#34;,&#xA;  ---@module &#34;quicker&#34;&#xA;  ---@type quicker.SetupOptions&#xA;  opts = {},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Packer&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;packer&#34;).startup(function()&#xA;  use({&#xA;    &#34;stevearc/quicker.nvim&#34;,&#xA;    config = function()&#xA;      require(&#34;quicker&#34;).setup()&#xA;    end,&#xA;  })&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Paq&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;paq&#34;)({&#xA;  { &#34;stevearc/quicker.nvim&#34; },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;vim-plug&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;stevearc/quicker.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;dein&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;call dein#add(&#39;stevearc/quicker.nvim&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Pathogen&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth=1 https://github.com/stevearc/quicker.nvim.git ~/.vim/bundle/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Neovim native package&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone --depth=1 https://github.com/stevearc/quicker.nvim.git \&#xA;  &#34;${XDG_DATA_HOME:-$HOME/.local/share}&#34;/nvim/site/pack/quicker/start/quicker.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;You will need to call &lt;code&gt;setup()&lt;/code&gt; for quicker to start working&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;quicker&#34;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It&#39;s not required to pass in any options, but you may wish to to set some keymaps.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;q&#34;, function()&#xA;  require(&#34;quicker&#34;).toggle()&#xA;end, {&#xA;  desc = &#34;Toggle quickfix&#34;,&#xA;})&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;l&#34;, function()&#xA;  require(&#34;quicker&#34;).toggle({ loclist = true })&#xA;end, {&#xA;  desc = &#34;Toggle loclist&#34;,&#xA;})&#xA;require(&#34;quicker&#34;).setup({&#xA;  keys = {&#xA;    {&#xA;      &#34;&amp;gt;&#34;,&#xA;      function()&#xA;        require(&#34;quicker&#34;).expand({ before = 2, after = 2, add_to_existing = true })&#xA;      end,&#xA;      desc = &#34;Expand quickfix context&#34;,&#xA;    },&#xA;    {&#xA;      &#34;&amp;lt;&#34;,&#xA;      function()&#xA;        require(&#34;quicker&#34;).collapse()&#xA;      end,&#xA;      desc = &#34;Collapse quickfix context&#34;,&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;p&gt;A complete list of all configuration options&lt;/p&gt; &#xA;&lt;!-- OPTIONS --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;quicker&#34;).setup({&#xA;  -- Local options to set for quickfix&#xA;  opts = {&#xA;    buflisted = false,&#xA;    number = false,&#xA;    relativenumber = false,&#xA;    signcolumn = &#34;auto&#34;,&#xA;    winfixheight = true,&#xA;    wrap = false,&#xA;  },&#xA;  -- Set to false to disable the default options in `opts`&#xA;  use_default_opts = true,&#xA;  -- Keymaps to set for the quickfix buffer&#xA;  keys = {&#xA;    -- { &#34;&amp;gt;&#34;, &#34;&amp;lt;cmd&amp;gt;lua require(&#39;quicker&#39;).expand()&amp;lt;CR&amp;gt;&#34;, desc = &#34;Expand quickfix content&#34; },&#xA;  },&#xA;  -- Callback function to run any custom logic or keymaps for the quickfix buffer&#xA;  on_qf = function(bufnr) end,&#xA;  edit = {&#xA;    -- Enable editing the quickfix like a normal buffer&#xA;    enabled = true,&#xA;    -- Set to true to write buffers after applying edits.&#xA;    -- Set to &#34;unmodified&#34; to only write unmodified buffers.&#xA;    autosave = &#34;unmodified&#34;,&#xA;  },&#xA;  -- Keep the cursor to the right of the filename and lnum columns&#xA;  constrain_cursor = true,&#xA;  highlight = {&#xA;    -- Use treesitter highlighting&#xA;    treesitter = true,&#xA;    -- Use LSP semantic token highlighting&#xA;    lsp = true,&#xA;    -- Load the referenced buffers to apply more accurate highlights (may be slow)&#xA;    load_buffers = false,&#xA;  },&#xA;  follow = {&#xA;    -- When quickfix window is open, scroll to closest item to the cursor&#xA;    enabled = false,&#xA;  },&#xA;  -- Map of quickfix item type to icon&#xA;  type_icons = {&#xA;    E = &#34;󰅚 &#34;,&#xA;    W = &#34;󰀪 &#34;,&#xA;    I = &#34; &#34;,&#xA;    N = &#34; &#34;,&#xA;    H = &#34; &#34;,&#xA;  },&#xA;  -- Border characters&#xA;  borders = {&#xA;    vert = &#34;┃&#34;,&#xA;    -- Strong headers separate results from different files&#xA;    strong_header = &#34;━&#34;,&#xA;    strong_cross = &#34;╋&#34;,&#xA;    strong_end = &#34;┫&#34;,&#xA;    -- Soft headers separate results within the same file&#xA;    soft_header = &#34;╌&#34;,&#xA;    soft_cross = &#34;╂&#34;,&#xA;    soft_end = &#34;┨&#34;,&#xA;  },&#xA;  -- How to trim the leading whitespace from results. Can be &#39;all&#39;, &#39;common&#39;, or false&#xA;  trim_leading_whitespace = &#34;common&#34;,&#xA;  -- Maximum width of the filename column&#xA;  max_filename_width = function()&#xA;    return math.floor(math.min(95, vim.o.columns / 2))&#xA;  end,&#xA;  -- How far the header should extend to the right&#xA;  header_length = function(type, start_col)&#xA;    return vim.o.columns - start_col&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- /OPTIONS --&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;p&gt;These are the highlight groups that are used to style the quickfix buffer. You can set these highlight groups yourself or use &lt;code&gt;:help winhighlight&lt;/code&gt; in the setup &lt;code&gt;opts&lt;/code&gt; option to override them for just the quickfix window.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;QuickFixHeaderHard&lt;/code&gt; - Used for the header that divides results from different files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;QuickFixHeaderSoft&lt;/code&gt; - Used for the header that divides results within the same file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Delimiter&lt;/code&gt; - Used for the divider between filename, line number, and text&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;QuickFixLineNr&lt;/code&gt; - Used for the line number&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;QuickFixFilename&lt;/code&gt; - Used for the filename&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;QuickFixFilenameInvalid&lt;/code&gt; - Used for the filename when &lt;code&gt;valid = 0&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DiagnosticSign*&lt;/code&gt; - Used for the signs that display the quickfix error type&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;!-- API --&gt; &#xA;&lt;h3&gt;expand(opts)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;expand(opts)&lt;/code&gt; &lt;br&gt; Expand the context around the quickfix results.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Desc&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.ExpandOpts&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;before&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of lines of context to show before the line (default 2)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;after&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of lines of context to show after the line (default 2)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;add_to_existing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;loclist_win&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;If there are multiple quickfix items for the same line of a file, only the first&#xA;one will remain after calling expand().&#xA;&lt;/pre&gt; &#xA;&lt;h3&gt;collapse()&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;collapse()&lt;/code&gt; &lt;br&gt; Collapse the context around quickfix results, leaving only the &lt;code&gt;valid&lt;/code&gt; items.&lt;/p&gt; &#xA;&lt;h3&gt;toggle_expand(opts)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;toggle_expand(opts)&lt;/code&gt; &lt;br&gt; Toggle the expanded context around the quickfix results.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Desc&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.ExpandOpts&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;before&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of lines of context to show before the line (default 2)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;after&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Number of lines of context to show after the line (default 2)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;add_to_existing&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;loclist_win&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;refresh(loclist_win, opts)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;refresh(loclist_win, opts)&lt;/code&gt; &lt;br&gt; Update the quickfix list with the current buffer text for each item.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Desc&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;loclist_win&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.RefreshOpts&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;keep_diagnostics&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;If a line has a diagnostic type, keep the original text and display it as virtual text after refreshing from source.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;is_open(loclist_win)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;is_open(loclist_win)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Desc&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;loclist_win&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Check if loclist is open for the given window. If nil, check quickfix.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;toggle(opts)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;toggle(opts)&lt;/code&gt; &lt;br&gt; Toggle the quickfix or loclist window.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Desc&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.OpenOpts&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;loclist&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle the loclist instead of the quickfix list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;focus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus the quickfix window after toggling (default false)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;height&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Height of the quickfix window when opened. Defaults to number of items in the list.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;min_height&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Minimum height of the quickfix window. Default 4.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;max_height&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maximum height of the quickfix window. Default 16.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;open_cmd_mods&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.OpenCmdMods&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A table of modifiers for the quickfix or loclist open commands.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;view&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.WinViewDict&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A table of options to restore the view of the quickfix window. Can be used to set the cursor or scroll positions (see &lt;code&gt;winsaveview()&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;open(opts)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;open(opts)&lt;/code&gt; &lt;br&gt; Open the quickfix or loclist window.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Desc&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.OpenOpts&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;loclist&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle the loclist instead of the quickfix list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;focus&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Focus the quickfix window after toggling (default false)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;height&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Height of the quickfix window when opened. Defaults to number of items in the list.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;min_height&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Minimum height of the quickfix window. Default 4.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;max_height&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|integer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Maximum height of the quickfix window. Default 16.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;open_cmd_mods&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.OpenCmdMods&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A table of modifiers for the quickfix or loclist open commands.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;view&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.WinViewDict&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A table of options to restore the view of the quickfix window. Can be used to set the cursor or scroll positions (see &lt;code&gt;winsaveview()&lt;/code&gt;).&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;close(opts)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;close(opts)&lt;/code&gt; &lt;br&gt; Close the quickfix or loclist window.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Param&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Desc&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;opts&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|quicker.CloseOpts&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&amp;gt;loclist&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nil|boolean&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Close the loclist instead of the quickfix list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- /API --&gt; &#xA;&lt;h2&gt;Other Plugins&lt;/h2&gt; &#xA;&lt;p&gt;In general quicker.nvim should play nice with other quickfix plugins (🟢), except if they change the format of the quickfix buffer. Quicker.nvim relies on owning the &lt;code&gt;:help quickfixtextfunc&lt;/code&gt; for the other features to function, so some other plugins you may need to disable or not use parts of their functionality (🟡). Some plugins have features that completely conflict with quicker.nvim (🔴).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🟢 &lt;a href=&#34;https://github.com/kevinhwang91/nvim-bqf&#34;&gt;nvim-bqf&lt;/a&gt; - Another bundle of several improvements including a floating preview window and fzf integration.&lt;/li&gt; &#xA; &lt;li&gt;🟢 &lt;a href=&#34;https://github.com/romainl/vim-qf&#34;&gt;vim-qf&lt;/a&gt; - Adds some useful mappings and default behaviors.&lt;/li&gt; &#xA; &lt;li&gt;🟡 &lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;trouble.nvim&lt;/a&gt; - A custom UI for displaying quickfix and many other lists. Does not conflict with quicker.nvim, but instead presents an alternative way to manage and view the quickfix.&lt;/li&gt; &#xA; &lt;li&gt;🟡 &lt;a href=&#34;https://github.com/arsham/listish.nvim&#34;&gt;listish.nvim&lt;/a&gt; - Provides utilities for adding items to the quickfix and theming (which conflicts with quicker.nvim).&lt;/li&gt; &#xA; &lt;li&gt;🔴 &lt;a href=&#34;https://github.com/stefandtw/quickfix-reflector.vim&#34;&gt;quickfix-reflector.vim&lt;/a&gt; - Also provides an &#34;editable quickfix&#34;. I used this for many years and would recommend it.&lt;/li&gt; &#xA; &lt;li&gt;🔴 &lt;a href=&#34;https://github.com/gabrielpoca/replacer.nvim&#34;&gt;replacer.nvim&lt;/a&gt; - Another &#34;editable quickfix&#34; plugin.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>