<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-26T01:28:33Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>moyiz/git-dev.nvim</title>
    <updated>2024-04-26T01:28:33Z</updated>
    <id>tag:github.com,2024-04-26:/moyiz/git-dev.nvim</id>
    <link href="https://github.com/moyiz/git-dev.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open remote git repositories in the comfort of Neovim.&lt;/p&gt;&lt;hr&gt;&lt;pre&gt;&lt;code&gt;               / /           |                         /&#xA;          ___   (___ ___  ___| ___           ___         _ _&#xA;         |   )| |        |   )|___) \  )    |   ) \  )| | | )&#xA;         |__/ | |__      |__/ |__    \/     |  /   \/ | |  /&#xA;         __/                            -&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open remote git repositories in the comfort of Neovim.&lt;/p&gt; &#xA;&lt;p&gt;A plugin to open remote Git repositories inside Neovim by managing ephemeral shallow clones automatically. It aims to provide a similar experience to &lt;code&gt;GitHub.dev&lt;/code&gt; but directly within Neovim.&lt;/p&gt; &#xA;&lt;!-- panvimdoc-ignore-start --&gt; &#xA;&lt;!-- toc omit heading --&gt; &#xA;&lt;h2&gt;📹 Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/moyiz/git-dev.nvim/assets/8603313/2f16bd70-d338-434d-a8d9-8b09cd75a7f4&#34;&gt;git-dev-2024-04-14_13.39.17.webm&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- toc omit heading --&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#art-features&#34;&gt;&lt;span&gt;🎨&lt;/span&gt; Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#hammer-installation&#34;&gt;&lt;span&gt;🔨&lt;/span&gt; Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#lazy&#34;&gt;Lazy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#blue_book-usage&#34;&gt;&lt;span&gt;📘&lt;/span&gt; Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#open_file_folder-open&#34;&gt;&lt;span&gt;📂&lt;/span&gt; Open&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#examples&#34;&gt;Examples&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#broom-clean-all&#34;&gt;&lt;span&gt;🧹&lt;/span&gt; Clean All&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#gear-options&#34;&gt;&lt;span&gt;⚙&lt;/span&gt; Options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#notebook-recipes&#34;&gt;&lt;span&gt;📓&lt;/span&gt; Recipes&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#grey_question-interactive-opening&#34;&gt;&lt;span&gt;❔&lt;/span&gt; Interactive Opening&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#evergreen_tree-nvim-tree&#34;&gt;&lt;span&gt;🌲&lt;/span&gt; nvim-tree&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#bookmark_tabs-new-tab&#34;&gt;&lt;span&gt;📑&lt;/span&gt; New tab&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#fox_face-web-browser&#34;&gt;&lt;span&gt;🦊&lt;/span&gt; Web browser&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#customize-uri&#34;&gt;Customize URI&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#telescope-telescope&#34;&gt;&lt;span&gt;🔭&lt;/span&gt; Telescope&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#crystal_ball-future-plans--thoughts&#34;&gt;&lt;span&gt;🔮&lt;/span&gt; Future Plans / Thoughts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#scroll-license&#34;&gt;&lt;span&gt;📜&lt;/span&gt; License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- panvimdoc-ignore-end --&gt; &#xA;&lt;h2&gt;&lt;span&gt;🎨&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open remote Git repositories inside Neovim at branch, tag or commit.&lt;/li&gt; &#xA; &lt;li&gt;Seamless integration with your workflow (e.g. LSP and tree-sitter).&lt;/li&gt; &#xA; &lt;li&gt;Ephemeral repositories - cleanup when Neovim exits.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- panvimdoc-ignore-start --&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔨&lt;/span&gt; Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use your favorite plugin manager:&lt;/p&gt; &#xA;&lt;h3&gt;Lazy&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#34;moyiz/git-dev.nvim&#34;,&#xA;  event = &#34;VeryLazy&#34;,&#xA;  opts = {},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#gear-options&#34;&gt;Options&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- panvimdoc-ignore-end --&gt; &#xA;&lt;h2&gt;&lt;span&gt;📘&lt;/span&gt; Usage&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;📂&lt;/span&gt; Open&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;API&lt;/code&gt;: &lt;code&gt;require(&#34;git-dev&#34;).open(repo, ref, opts)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Command&lt;/code&gt;: &lt;code&gt;:GitDevOpen&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open the repository in Neovim.&lt;/p&gt; &#xA;&lt;h4&gt;Parameters&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;repo&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt; - A partial or full Git URI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ref&lt;/code&gt; - &lt;code&gt;table&lt;/code&gt; - Target reference to checkout (default: &lt;code&gt;nil&lt;/code&gt;). Empty &lt;code&gt;ref&lt;/code&gt; will checkout the default branch. Examples: &lt;code&gt;{ branch = &#34;...&#34; }|{ tag = &#34;...&#34; }|{ commit = &#34;...&#34; }&lt;/code&gt;. If more than one is specified, the priority is: &lt;code&gt;commit&lt;/code&gt; &amp;gt; &lt;code&gt;tag&lt;/code&gt; &amp;gt; &lt;code&gt;branch&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;opts&lt;/code&gt; - &lt;code&gt;table&lt;/code&gt; - Override plugin configuration for this call (default: &lt;code&gt;nil&lt;/code&gt;). See &lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/#gear-options&#34;&gt;Options&lt;/a&gt; below.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Examples&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- :GitDevOpen moyiz/git-dev.nvim&#xA;require(&#34;git-dev&#34;).open(&#34;moyiz/git-dev.nvim&#34;)&#xA;&#xA;-- :GitDevOpen derailed/k9s &#39;{ tag = &#34;v0.32.4&#34; }&#39;&#xA;require(&#34;git-dev&#34;).open(&#34;derailed/k9s&#34;, { tag = &#34;v0.32.4&#34; })&#xA;&#xA;-- :GitDevOpen echasnovski/mini.nvim &#39;{ branch = &#34;stable&#34; }&#39; &#39;{ ephemeral = false }&#39;&#xA;require(&#34;git-dev&#34;).open(&#34;echasnovski/mini.nvim&#34;, { branch = &#34;stable &#34;}, { ephemeral = false })&#xA;&#xA;-- :GitDevOpen https://git.savannah.gnu.org/git/bash.git &#39;{}&#39; &#39;{ read_only = false }&#39;&#xA;require(&#34;git-dev&#34;).open(&#34;https://git.savannah.gnu.org/git/bash.git&#34;, {}, { read_only = false })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;span&gt;🧹&lt;/span&gt; Clean All&lt;/h3&gt; &#xA;&lt;p&gt;Clean all cached local repositories.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Caution&lt;/strong&gt;: It will delete the repositories directory itself. If you changed the default value, make sure that the new directory is being used only for this purpose.&lt;/p&gt; &#xA;&lt;p&gt;By either using the lua function &lt;code&gt;require(&#34;git-dev&#34;).clean_all()&lt;/code&gt; or the command &lt;code&gt;:GitDevCleanAll&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;⚙&lt;/span&gt; Options&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;M.config = {&#xA;  --- Whether to delete an opened repository when nvim exits.&#xA;  --- If `true`, it will create an auto command for opened repositories&#xA;  --- to delete the local directory when nvim exists.&#xA;  ephemeral = true,&#xA;  -- Set buffers of opened repositories to be read-only and unmodifiable.&#xA;  read_only = true,&#xA;  -- Whether / how to CD into opened repository.&#xA;  -- Options: global|tab|window|none&#xA;  cd_type = &#34;global&#34;,&#xA;  -- The actual `open` behavior.&#xA;  ---@param dir string The path to the local repository.&#xA;  ---@param repo_uri string The URI that was used to clone this repository.&#xA;  opener = function(dir, repo_uri)&#xA;    vim.print(&#34;Opening &#34; .. repo_uri)&#xA;    vim.cmd(&#34;edit &#34; .. vim.fn.fnameescape(dir))&#xA;  end,&#xA;  -- Location of cloned repositories. Should be dedicated for this purpose.&#xA;  repositories_dir = vim.fn.stdpath &#34;cache&#34; .. &#34;/git-dev&#34;,&#xA;  git = {&#xA;    -- Name / path of `git` command.&#xA;    command = &#34;git&#34;,&#xA;    -- Default organization if none is specified.&#xA;    -- If given repository name does not contain &#39;/&#39; and `default_org` is&#xA;    -- not `nil` nor empty, it will be prepended to the given name.&#xA;    default_org = nil,&#xA;    -- Base URI to use when given repository name is scheme-less.&#xA;    base_uri_format = &#34;https://github.com/%s.git&#34;,&#xA;    -- Arguments for `git clone`.&#xA;    -- Triggered when repository does not exist locally.&#xA;    -- It will clone submodules too, disable it if it is too slow.&#xA;    clone_args = &#34;--depth=1 --jobs=2 --no-tags --single-branch &#34;&#xA;      .. &#34;--recurse-submodules --shallow-submodules&#34;,&#xA;    -- Arguments for `git fetch`.&#xA;    -- Triggered when repository is already exists locally to refresh the local&#xA;    -- copy.&#xA;    fetch_args = &#34;--depth=1 --jobs=2 --no-all --update-shallow -f &#34;&#xA;      .. &#34;--prune --no-tags&#34;,&#xA;  },&#xA;  -- Print command outputs.&#xA;  verbose = false,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;📓&lt;/span&gt; Recipes&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;span&gt;❔&lt;/span&gt; Interactive Opening&lt;/h3&gt; &#xA;&lt;p&gt;The sky is the limit. I have settled for this key binding at the moment (set via &lt;code&gt;lazy.nvim&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#34;moyiz/git-dev.nvim&#34;,&#xA;  ...&#xA;  keys = {&#xA;    {&#xA;      &#34;&amp;lt;leader&amp;gt;go&#34;,&#xA;      function()&#xA;        local repo = vim.fn.input &#34;Repository name / URI: &#34;&#xA;        if repo ~= &#34;&#34; then&#xA;          require(&#34;git-dev&#34;).open(repo)&#xA;        end&#xA;      end,&#xA;      desc = &#34;[O]pen a remote git repository&#34;,&#xA;    }&#xA;  }&#xA;  ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;span&gt;🌲&lt;/span&gt; nvim-tree&lt;/h3&gt; &#xA;&lt;p&gt;To open with &lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua&#34;&gt;nvim-tree&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;opts = {&#xA;  opener = function(dir)&#xA;    vim.cmd(&#34;NvimTreeOpen &#34; .. vim.fn.fnameescape(dir))&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;span&gt;📑&lt;/span&gt; New tab&lt;/h3&gt; &#xA;&lt;p&gt;Recommended. Repositories will be opened in a new tab and its CWD will be set.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;opts = {&#xA;  cd_type = &#34;tab&#34;,&#xA;  opener = function(dir)&#xA;    vim.cmd &#34;tabnew&#34;&#xA;    vim.cmd(&#34;NvimTreeOpen &#34; .. vim.fn.fnameescape(dir))&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;span&gt;🦊&lt;/span&gt; Web browser&lt;/h3&gt; &#xA;&lt;p&gt;It does not make much sense on its own, but a showcase for getting both the repository URI and the local directory.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;opts = {&#xA;  cd_type = &#34;none&#34;,&#xA;  opener = function(_, repo_uri)&#xA;     -- vim.cmd(&#34;!librewolf &#34; .. repo_uri)&#xA;     vim.cmd(&#34;!firefox &#34; .. repo_uri)&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customize URI&lt;/h3&gt; &#xA;&lt;p&gt;By default, this plugin accepts partial repository URI (e.g. &lt;code&gt;org/repo&lt;/code&gt;) by applying it onto a format string. This behavior can be customized by setting &lt;code&gt;git.base_uri_format&lt;/code&gt; to change the URI, or &lt;code&gt;git.default_org&lt;/code&gt; to prepend a default organization name if the given repository name does not contain &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Change default URI&#xA;opts = {&#xA;  git = {&#xA;    base_uri_format = &#34;https://git.home.arpa/%s.git&#34;,&#xA;  }&#xA;}&#xA;&#xA;-- Open my own repositories by name with SSH.&#xA;-- E.g. &#34;git-dev.nvim&#34; rather than &#34;moyiz/git-dev.nvim&#34;&#xA;opts = {&#xA;  git = {&#xA;    default_org = &#34;moyiz&#34;,&#xA;    base_uri_format = &#34;git@github.com:%s.git&#34;,&#xA;  }&#xA;}&#xA;&#xA;-- Enforce only full URIs (do not accept partial names).&#xA;opts = {&#xA;  git = {&#xA;    base_uri_format = &#34;%s&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;span&gt;🔭&lt;/span&gt; Telescope&lt;/h3&gt; &#xA;&lt;p&gt;TBD&lt;/p&gt; &#xA;&lt;!-- panvimdoc-ignore-start --&gt; &#xA;&lt;h2&gt;&lt;span&gt;🔮&lt;/span&gt; Future Plans / Thoughts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Telescope extension to view, open and manage cloned repositories (will require &lt;code&gt;ephemeral = false&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;Open repository in visual selection / current &#34;word&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Asynchronous command invocation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vimdoc&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; License&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/moyiz/git-dev.nvim/master/LICENSE&#34;&gt;License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;!-- panvimdoc-ignore-end --&gt; &#xA;&lt;!-- vim: set textwidth=80: --&gt;</summary>
  </entry>
</feed>