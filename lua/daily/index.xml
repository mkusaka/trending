<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-11T01:40:21Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LazyVim/LazyVim</title>
    <updated>2023-01-11T01:40:21Z</updated>
    <id>tag:github.com,2023-01-11:/LazyVim/LazyVim</id>
    <link href="https://github.com/LazyVim/LazyVim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim config for the lazy&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LazyVim&lt;/h1&gt; &#xA;&lt;p&gt;LazyVim is a Neovim setup powered by &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;💤 lazy.nvim&lt;/a&gt; to make it easy to customize and extend your config. Rather than having to choose between starting from scratch or using a pre-made distro, LazyVim offers the best of both worlds - the flexibility to tweak your config as needed, along with the convenience of a pre-configured setup.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/211285846-0b7bb3bf-0462-4029-b64c-4ee1d037fc1c.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔥 Transform your Neovim into a full-fledged IDE&lt;/li&gt; &#xA; &lt;li&gt;💤 Easily customize and extend your config with &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🚀 Blazingly fast&lt;/li&gt; &#xA; &lt;li&gt;🧹 Sane default settings for options, autocmds, and keymaps&lt;/li&gt; &#xA; &lt;li&gt;📦 Comes with a wealth of plugins pre-configured and ready to use&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚡️ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= &lt;strong&gt;0.8.0&lt;/strong&gt; (needs to be built with &lt;strong&gt;LuaJIT&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Git &amp;gt;= &lt;strong&gt;2.19.0&lt;/strong&gt; (for partial clones support)&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;Nerd Font&lt;/a&gt; &lt;strong&gt;&lt;em&gt;(optional)&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;You can find a starter template for &lt;strong&gt;LazyVim&lt;/strong&gt; &lt;a href=&#34;https://github.com/LazyVim/starter&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;TLDR:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lazy&#34;).setup({&#xA;  spec = {&#xA;    -- import LazyVim plugins&#xA;    { &#34;LazyVim/LazyVim&#34;, import = &#34;lazyvim.plugins&#34; },&#xA;    -- import/override with your plugins&#xA;    { import = &#34;plugins&#34; },&#xA;    -- import any extras modules here&#xA;    -- { import = &#34;lazyvim.plugins.extras.lang.typescript&#34; },&#xA;    -- { import = &#34;lazyvim.plugins.extras.lang.json&#34; },&#xA;  },&#xA;  defaults = {&#xA;    lazy = true, -- every plugin is lazy-loaded by default&#xA;    version = &#34;*&#34;, -- try installing the latest stable version for plugins that support semver&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📂 File Structure&lt;/h2&gt; &#xA;&lt;p&gt;The files under config will be automatically loaded at the appropriate time, so you don&#39;t need to require those files manually. &lt;strong&gt;LazyVim&lt;/strong&gt; comes with a set of default config files that will be loaded &lt;strong&gt;&lt;em&gt;before&lt;/em&gt;&lt;/strong&gt; your own. See &lt;a href=&#34;https://github.com/LazyVim/LazyVim/tree/main/lua/lazyvim/config&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can add your custom plugin specs under &lt;code&gt;lua/plugins/&lt;/code&gt;. All files there will be automatically loaded by &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&#xA;~/.config/nvim&#xA;├── lua&#xA;│&amp;nbsp;&amp;nbsp; ├── config&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── autocmds.lua&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── keymaps.lua&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── lazy.lua&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── options.lua&#xA;│&amp;nbsp;&amp;nbsp; └── plugins&#xA;│&amp;nbsp;&amp;nbsp;     ├── spec1.lua&#xA;│&amp;nbsp;&amp;nbsp;     ├── **&#xA;│&amp;nbsp;&amp;nbsp;     └── spec2.lua&#xA;└── init.toml&#xA;&lt;/pre&gt; &#xA;&lt;h2&gt;⚙️ Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;LazyVim&lt;/strong&gt; comes with the following defaults:&lt;/p&gt; &#xA;&lt;!-- config:start --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  -- colorscheme can be a string like `catppuccin` or a function that will load the colorscheme&#xA;  ---@type string|fun()&#xA;  colorscheme = function()&#xA;    require(&#34;tokyonight&#34;).load()&#xA;  end,&#xA;  -- icons used by other plugins&#xA;  icons = {&#xA;    diagnostics = {&#xA;      Error = &#34; &#34;,&#xA;      Warn = &#34; &#34;,&#xA;      Hint = &#34; &#34;,&#xA;      Info = &#34; &#34;,&#xA;    },&#xA;    git = {&#xA;      added = &#34; &#34;,&#xA;      modified = &#34; &#34;,&#xA;      removed = &#34; &#34;,&#xA;    },&#xA;    kinds = {&#xA;      Array = &#34; &#34;,&#xA;      Boolean = &#34; &#34;,&#xA;      Class = &#34; &#34;,&#xA;      Color = &#34; &#34;,&#xA;      Constant = &#34; &#34;,&#xA;      Constructor = &#34; &#34;,&#xA;      Enum = &#34; &#34;,&#xA;      EnumMember = &#34; &#34;,&#xA;      Event = &#34; &#34;,&#xA;      Field = &#34; &#34;,&#xA;      File = &#34; &#34;,&#xA;      Folder = &#34; &#34;,&#xA;      Function = &#34; &#34;,&#xA;      Interface = &#34; &#34;,&#xA;      Key = &#34; &#34;,&#xA;      Keyword = &#34; &#34;,&#xA;      Method = &#34; &#34;,&#xA;      Module = &#34; &#34;,&#xA;      Namespace = &#34; &#34;,&#xA;      Null = &#34;ﳠ &#34;,&#xA;      Number = &#34; &#34;,&#xA;      Object = &#34; &#34;,&#xA;      Operator = &#34; &#34;,&#xA;      Package = &#34; &#34;,&#xA;      Property = &#34; &#34;,&#xA;      Reference = &#34; &#34;,&#xA;      Snippet = &#34; &#34;,&#xA;      String = &#34; &#34;,&#xA;      Struct = &#34; &#34;,&#xA;      Text = &#34; &#34;,&#xA;      TypeParameter = &#34; &#34;,&#xA;      Unit = &#34; &#34;,&#xA;      Value = &#34; &#34;,&#xA;      Variable = &#34; &#34;,&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- config:end --&gt; &#xA;&lt;p&gt;&lt;strong&gt;LazyVim&lt;/strong&gt; can be configured in the same way as any other plugin.&lt;/p&gt; &#xA;&lt;p&gt;For example in &lt;code&gt;lua/plugins/core.lua&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return {&#xA;  {&#xA;    &#34;LazyVim/LazyVim&#34;,&#xA;    opts = {&#xA;      colorscheme = &#34;catppuccin&#34;,&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Configuring &lt;strong&gt;Plugins&lt;/strong&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Configuring &lt;strong&gt;LazyVim&lt;/strong&gt; is exactly the same as using &lt;strong&gt;lazy.nvim&lt;/strong&gt; to build a config from scratch.&lt;/p&gt; &#xA;&lt;p&gt;For the full plugin spec documentation please check the &lt;strong&gt;lazy.nvim&lt;/strong&gt; &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;readme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Example spec: &lt;code&gt;lua/plugins/example.lua&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;!-- examples:start --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- every spec file under config.plugins will be loaded automatically by lazy.nvim&#xA;--&#xA;-- In your plugin files, you can:&#xA;-- * add extra plugins&#xA;-- * disable/enabled LazyVim plugins&#xA;-- * override the configuration of LazyVim plugins&#xA;return {&#xA;  -- add gruvbox&#xA;  { &#34;ellisonleao/gruvbox.nvim&#34; },&#xA;&#xA;  -- Configure LazyVim to load gruvbox&#xA;  {&#xA;    &#34;LazyVim/LazyVim&#34;,&#xA;    opts = {&#xA;      colorscheme = &#34;gruvbox&#34;,&#xA;    },&#xA;  },&#xA;&#xA;  -- change trouble config&#xA;  {&#xA;    &#34;folke/trouble.nvim&#34;,&#xA;    -- opts will be merged with the parent spec&#xA;    opts = { use_diagnostic_signs = true },&#xA;  },&#xA;&#xA;  -- disable trouble&#xA;  { &#34;folke/trouble.nvim&#34;, enabled = false },&#xA;&#xA;  -- add symbols-outline&#xA;  {&#xA;    &#34;simrat39/symbols-outline.nvim&#34;,&#xA;    cmd = &#34;SymbolsOutline&#34;,&#xA;    keys = { { &#34;&amp;lt;leader&amp;gt;cs&#34;, &#34;&amp;lt;cmd&amp;gt;SymbolsOutline&amp;lt;cr&amp;gt;&#34;, desc = &#34;Symbols Outline&#34; } },&#xA;    config = true,&#xA;  },&#xA;&#xA;  -- override nvim-cmp and add cmp-emoji&#xA;  {&#xA;    &#34;hrsh7th/nvim-cmp&#34;,&#xA;    dependencies = { &#34;hrsh7th/cmp-emoji&#34; },&#xA;    ---@param opts cmp.ConfigSchema&#xA;    opts = function(_, opts)&#xA;      local cmp = require(&#34;cmp&#34;)&#xA;      opts.sources = cmp.config.sources(vim.list_extend(opts.sources, { { name = &#34;emoji&#34; } }))&#xA;    end,&#xA;  },&#xA;&#xA;  -- change some telescope options and a keymap to browse plugin files&#xA;  {&#xA;    &#34;nvim-telescope/telescope.nvim&#34;,&#xA;    keys = {&#xA;      -- add a keymap to browse plugin files&#xA;      -- stylua: ignore&#xA;      {&#xA;        &#34;&amp;lt;leader&amp;gt;fp&#34;,&#xA;        function() require(&#34;telescope.builtin&#34;).find_files({ cwd = require(&#34;lazy.core.config&#34;).options.root }) end,&#xA;        desc = &#34;Find Plugin File&#34;,&#xA;      },&#xA;    },&#xA;    -- change some options&#xA;    opts = {&#xA;      defaults = {&#xA;        layout_strategy = &#34;horizontal&#34;,&#xA;        layout_config = { prompt_position = &#34;top&#34; },&#xA;        sorting_strategy = &#34;ascending&#34;,&#xA;        winblend = 0,&#xA;      },&#xA;    },&#xA;  },&#xA;&#xA;  -- add telescope-fzf-native&#xA;  {&#xA;    &#34;nvim-telescope/telescope.nvim&#34;,&#xA;    dependencies = { { &#34;nvim-telescope/telescope-fzf-native.nvim&#34;, build = &#34;make&#34; } },&#xA;    -- apply the config and additionally load fzf-native&#xA;    config = function(_, opts)&#xA;      local telescope = require(&#34;telescope&#34;)&#xA;      telescope.setup(opts)&#xA;      telescope.load_extension(&#34;fzf&#34;)&#xA;    end,&#xA;  },&#xA;&#xA;  -- add pyright to lspconfig&#xA;  {&#xA;    &#34;neovim/nvim-lspconfig&#34;,&#xA;    ---@class PluginLspOpts&#xA;    opts = {&#xA;      ---@type lspconfig.options&#xA;      servers = {&#xA;        -- pyright will be automatically installed with mason and loaded with lspconfig&#xA;        pyright = {},&#xA;      },&#xA;    },&#xA;  },&#xA;&#xA;  -- add tsserver and setup with typescript.nvim instead of lspconfig&#xA;  {&#xA;    &#34;neovim/nvim-lspconfig&#34;,&#xA;    dependencies = {&#xA;      &#34;jose-elias-alvarez/typescript.nvim&#34;,&#xA;      init = function()&#xA;        require(&#34;lazyvim.util&#34;).on_attach(function(_, buffer)&#xA;          -- stylua: ignore&#xA;          vim.keymap.set( &#34;n&#34;, &#34;&amp;lt;leader&amp;gt;co&#34;, &#34;TypescriptOrganizeImports&#34;, { buffer = buffer, desc = &#34;Organize Imports&#34; })&#xA;          vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;cR&#34;, &#34;TypescriptRenameFile&#34;, { desc = &#34;Rename File&#34;, buffer = buffer })&#xA;        end)&#xA;      end,&#xA;    },&#xA;    ---@class PluginLspOpts&#xA;    opts = {&#xA;      ---@type lspconfig.options&#xA;      servers = {&#xA;        -- tsserver will be automatically installed with mason and loaded with lspconfig&#xA;        tsserver = {},&#xA;      },&#xA;      -- you can do any additional lsp server setup here&#xA;      -- return true if you don&#39;t want this server to be setup with lspconfig&#xA;      ---@type table&amp;lt;string, fun(server:string, opts:_.lspconfig.options):boolean?&amp;gt;&#xA;      setup = {&#xA;        -- example to setup with typescript.nvim&#xA;        tsserver = function(_, opts)&#xA;          require(&#34;typescript&#34;).setup({ server = opts })&#xA;          return true&#xA;        end,&#xA;        -- Specify * to use this function as a fallback for any server&#xA;        -- [&#34;*&#34;] = function(server, opts) end,&#xA;      },&#xA;    },&#xA;  },&#xA;&#xA;  -- for typescript, LazyVim also includes extra specs to properly setup lspconfig,&#xA;  -- treesitter, mason and typescript.nvim. So instead of the above, you can use:&#xA;  { import = &#34;lazyvim.plugins.extras.lang.typescript&#34; },&#xA;&#xA;  -- add more treesitter parsers&#xA;  {&#xA;    &#34;nvim-treesitter/nvim-treesitter&#34;,&#xA;    opts = {&#xA;      ensure_installed = {&#xA;        &#34;bash&#34;,&#xA;        &#34;help&#34;,&#xA;        &#34;html&#34;,&#xA;        &#34;javascript&#34;,&#xA;        &#34;json&#34;,&#xA;        &#34;lua&#34;,&#xA;        &#34;markdown&#34;,&#xA;        &#34;markdown_inline&#34;,&#xA;        &#34;python&#34;,&#xA;        &#34;query&#34;,&#xA;        &#34;regex&#34;,&#xA;        &#34;tsx&#34;,&#xA;        &#34;typescript&#34;,&#xA;        &#34;vim&#34;,&#xA;        &#34;yaml&#34;,&#xA;      },&#xA;    },&#xA;  },&#xA;&#xA;  -- since `vim.tbl_deep_extend`, can only merge tables and not lists, the code above&#xA;  -- would overwrite `ensure_installed` with the new value.&#xA;  -- If you&#39;d rather extend the default config, use the code below instead:&#xA;  {&#xA;    &#34;nvim-treesitter/nvim-treesitter&#34;,&#xA;    opts = function(_, opts)&#xA;      vim.list_extend(opts.ensure_installed, {&#xA;        -- add tsx and treesitter&#xA;        ensure_installed = {&#xA;          &#34;tsx&#34;,&#xA;          &#34;typescript&#34;,&#xA;        },&#xA;      })&#xA;    end,&#xA;  },&#xA;&#xA;  -- the opts function can also be used to change the default opts:&#xA;  {&#xA;    &#34;nvim-lualine/lualine.nvim&#34;,&#xA;    event = &#34;VeryLazy&#34;,&#xA;    opts = function(_, opts)&#xA;      table.insert(opts.sections.lualine_x, &#34;😄&#34;)&#xA;    end,&#xA;  },&#xA;&#xA;  -- or you can return new options to override all the defaults&#xA;  {&#xA;    &#34;nvim-lualine/lualine.nvim&#34;,&#xA;    event = &#34;VeryLazy&#34;,&#xA;    opts = function()&#xA;      return {&#xA;        --[[add your custom lualine config here]]&#xA;      }&#xA;    end,&#xA;  },&#xA;&#xA;  -- use mini.starter instead of alpha&#xA;  { import = &#34;lazyvim.plugins.extras.ui.mini-starter&#34; },&#xA;&#xA;  -- add jsonls and schemastore ans setup treesitter for json, json5 and jsonc&#xA;  { import = &#34;lazyvim.plugins.extras.lang.json&#34; },&#xA;&#xA;  -- add any tools you want to have installed below&#xA;  {&#xA;    &#34;williamboman/mason.nvim&#34;,&#xA;    opts = {&#xA;      ensure_installed = {&#xA;        &#34;stylua&#34;,&#xA;        &#34;shellcheck&#34;,&#xA;        &#34;shfmt&#34;,&#xA;        &#34;flake8&#34;,&#xA;      },&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;!-- examples:end --&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;⌨️ Keymaps&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;LazyVim&lt;/strong&gt; uses &lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;which-key.nvim&lt;/a&gt; to help you remember your keymaps. Just press any key like &lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt; and you&#39;ll see a popup with all possible keymaps starting with &lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/292349/211259984-a7522199-81a2-44f7-be6c-af21ba153f0a.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;!-- keymaps:start --&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;General&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Key&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;    &lt;th&gt;Mode&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-h&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Go to left window&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-j&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Go to lower window&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-k&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Go to upper window&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-l&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Go to right window&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-Up&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Increase window height&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-Down&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Decrease window height&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-Left&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Decrease window width&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-Right&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Increase window width&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;A-j&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Move down&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;, &lt;strong&gt;v&lt;/strong&gt;, &lt;strong&gt;i&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;A-k&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Move up&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;, &lt;strong&gt;v&lt;/strong&gt;, &lt;strong&gt;i&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;S-h&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Prev buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;S-l&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Next buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Escape and clear hlsearch&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;i&lt;/strong&gt;, &lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;r&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Redraw and clear hlsearch&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;n&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Next search result&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;, &lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;o&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;N&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Prev search result&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;, &lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;o&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;C-s&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Save file&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;i&lt;/strong&gt;, &lt;strong&gt;v&lt;/strong&gt;, &lt;strong&gt;n&lt;/strong&gt;, &lt;strong&gt;s&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;l&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lazy&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;fn&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;New File&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;xl&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Open Location List&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;xq&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Open Quickfix List&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;tf&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Toggle format on Save&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ts&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Toggle Spelling&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;tw&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Toggle Word Wrap&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;tn&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Toggle Line Numbers&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;td&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Toggle Diagnostics&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;tc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Toggle Conceal&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gg&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lazygit (cwd)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gG&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lazygit (root dir)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;qq&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Quit all&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;hl&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Highlight Groups at cursor&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ot&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Terminal (root dir)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;oT&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Terminal (cwd)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;esc&amp;gt;&amp;lt;esc&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Enter Normal Mode&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;t&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ww&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;other-window&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;wd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;delete-window&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;w-&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;split-window-below&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;w|&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;split-window-right&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;l&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Last&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;f&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;First&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;&amp;lt;tab&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;New Tab&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;]&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Next&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Close&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;tab&amp;gt;[&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Previous&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;b]&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Next Buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;bb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Switch to Other Buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;b[&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Previous Buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;` &lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Switch to Other Buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;LSP&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Key&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;    &lt;th&gt;Mode&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;cd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Line Diagnostics&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;cl&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Lsp Info&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;xd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Telescope Diagnostics&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;gd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Goto Definition&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;gr&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;References&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;gD&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Goto Declaration&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;gI&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Goto Implementation&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;gt&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Goto Type Definition&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;K&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Hover&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;gK&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Signature Help&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;[d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Next Diagnostic&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;]d&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Prev Diagnostic&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;]e&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Next Error&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;[e&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Prev Error&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;]w&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Next Warning&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;[w&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Prev Warning&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ca&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Code Action&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;, &lt;strong&gt;v&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;cf&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Format Document&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;cf&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Format Range&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;v&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;cr&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;Rename&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Plugins&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Key&lt;/th&gt; &#xA;    &lt;th&gt;Description&lt;/th&gt; &#xA;    &lt;th&gt;Mode&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;cm&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/williamboman/mason.nvim.git&#34;&gt;mason.nvim&lt;/a&gt; Mason&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;bd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.bufremove.git&#34;&gt;mini.bufremove&lt;/a&gt; Delete Buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;bD&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.bufremove.git&#34;&gt;mini.bufremove&lt;/a&gt; Delete Buffer (Force)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ft&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim.git&#34;&gt;neo-tree.nvim&lt;/a&gt; NeoTree (root dir)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;fT&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim.git&#34;&gt;neo-tree.nvim&lt;/a&gt; NeoTree (cwd)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;e&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim.git&#34;&gt;neo-tree.nvim&lt;/a&gt; NeoTree (root dir)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;E&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim.git&#34;&gt;neo-tree.nvim&lt;/a&gt; NeoTree (cwd)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;S-Enter&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/noice.nvim.git&#34;&gt;noice.nvim&lt;/a&gt; Redirect Cmdline&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;c&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;nl&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/noice.nvim.git&#34;&gt;noice.nvim&lt;/a&gt; Noice Last Message&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;nh&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/noice.nvim.git&#34;&gt;noice.nvim&lt;/a&gt; Noice History&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;na&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/noice.nvim.git&#34;&gt;noice.nvim&lt;/a&gt; Noice All&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;c-f&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/noice.nvim.git&#34;&gt;noice.nvim&lt;/a&gt; Scroll forward&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;c-b&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/noice.nvim.git&#34;&gt;noice.nvim&lt;/a&gt; Scroll backward&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;nd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-notify.git&#34;&gt;nvim-notify&lt;/a&gt; Delete all Notifications&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;sr&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/windwp/nvim-spectre.git&#34;&gt;nvim-spectre&lt;/a&gt; Replace in files (Spectre)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;qs&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/persistence.nvim.git&#34;&gt;persistence.nvim&lt;/a&gt; Restore Session&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ql&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/persistence.nvim.git&#34;&gt;persistence.nvim&lt;/a&gt; Restore Last Session&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;qd&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/persistence.nvim.git&#34;&gt;persistence.nvim&lt;/a&gt; Don&#39;t Save Current Session&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;/&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Find in Files (Grep)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;&amp;lt;space&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Find Files (root dir)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;fb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Buffers&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ff&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Find Files (root dir)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;fF&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Find Files (cwd)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;fr&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Recent&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; commits&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;gs&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; status&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ha&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Auto Commands&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;hc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Commands&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;hf&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; File Types&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;hh&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Help Pages&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;hk&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Key Maps&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;hm&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Man Pages&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ho&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Options&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;hs&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Search Highlight Groups&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ht&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Telescope&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;sb&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;sc&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Command History&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;sg&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Grep (root dir)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;sG&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Grep (cwd)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;sm&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Jump to Mark&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;,&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Switch Buffer&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;:&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Command History&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ss&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim.git&#34;&gt;telescope.nvim&lt;/a&gt; Goto Symbol&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;]t&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/todo-comments.nvim.git&#34;&gt;todo-comments.nvim&lt;/a&gt; Next todo comment&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;[t&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/todo-comments.nvim.git&#34;&gt;todo-comments.nvim&lt;/a&gt; Previous todo comment&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;xt&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/todo-comments.nvim.git&#34;&gt;todo-comments.nvim&lt;/a&gt; Todo Trouble&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;xtt&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/todo-comments.nvim.git&#34;&gt;todo-comments.nvim&lt;/a&gt; Todo Trouble&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;xT&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/todo-comments.nvim.git&#34;&gt;todo-comments.nvim&lt;/a&gt; Todo Telescope&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;xx&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/trouble.nvim.git&#34;&gt;trouble.nvim&lt;/a&gt; Document Diagnostics (Trouble)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;&amp;lt;leader&amp;gt;xX&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/folke/trouble.nvim.git&#34;&gt;trouble.nvim&lt;/a&gt; Workspace Diagnostics (Trouble)&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;]]&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/RRethy/vim-illuminate.git&#34;&gt;vim-illuminate&lt;/a&gt; Next Reference&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;&lt;code&gt;[[&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td&gt;&lt;a href=&#34;https://github.com/RRethy/vim-illuminate.git&#34;&gt;vim-illuminate&lt;/a&gt; Prev Reference&lt;/td&gt; &#xA;    &lt;td&gt;&lt;strong&gt;n&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- keymaps:end --&gt; &#xA;&lt;h2&gt;📦 Plugins&lt;/h2&gt; &#xA;&lt;!-- plugins:start --&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Core&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/goolord/alpha-nvim&#34;&gt;alpha-nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/nvim&#34;&gt;catppuccin&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-buffer&#34;&gt;cmp-buffer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-nvim-lsp&#34;&gt;cmp-nvim-lsp&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-path&#34;&gt;cmp-path&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/saadparwaiz1/cmp_luasnip&#34;&gt;cmp_luasnip&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/stevearc/dressing.nvim&#34;&gt;dressing.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ggandor/flit.nvim&#34;&gt;flit.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rafamadriz/friendly-snippets&#34;&gt;friendly-snippets&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim&#34;&gt;indent-blankline.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/LazyVim/LazyVim&#34;&gt;LazyVim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/ggandor/leap.nvim&#34;&gt;leap.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/L3MON4D3/LuaSnip&#34;&gt;LuaSnip&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/mason-lspconfig.nvim&#34;&gt;mason-lspconfig.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/mason.nvim&#34;&gt;mason.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.ai&#34;&gt;mini.ai&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.bufremove&#34;&gt;mini.bufremove&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.comment&#34;&gt;mini.comment&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.indentscope&#34;&gt;mini.indentscope&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.pairs&#34;&gt;mini.pairs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.surround&#34;&gt;mini.surround&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;neo-tree.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/neoconf.nvim&#34;&gt;neoconf.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/neodev.nvim&#34;&gt;neodev.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/noice.nvim&#34;&gt;noice.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim&#34;&gt;nui.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jose-elias-alvarez/null-ls.nvim&#34;&gt;null-ls.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/nvim-bufferline.lua&#34;&gt;nvim-bufferline.lua&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/SmiteshP/nvim-navic&#34;&gt;nvim-navic&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim-notify&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/windwp/nvim-spectre&#34;&gt;nvim-spectre&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter-textobjects&#34;&gt;nvim-treesitter-textobjects&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/JoosepAlviste/nvim-ts-context-commentstring&#34;&gt;nvim-ts-context-commentstring&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/persistence.nvim&#34;&gt;persistence.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/todo-comments.nvim&#34;&gt;todo-comments.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/tokyonight.nvim&#34;&gt;tokyonight.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;trouble.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/RRethy/vim-illuminate&#34;&gt;vim-illuminate&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/dstein64/vim-startuptime&#34;&gt;vim-startuptime&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;which-key.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Extras: &lt;code&gt;lang.json&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;To use this, add it to your &lt;strong&gt;lazy.nvim&lt;/strong&gt; imports:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lazy&#34;).setup({&#xA;  spec = {&#xA;    { &#34;folke/LazyVim&#34;, import = &#34;lazyvim.plugins&#34; },&#xA;    { import = &#34;lazyvim.plugins.extras.lang.json&#34; },&#xA;    { import = &#34;plugins&#34; },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/b0o/SchemaStore.nvim&#34;&gt;SchemaStore.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Extras: &lt;code&gt;lang.typescript&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;To use this, add it to your &lt;strong&gt;lazy.nvim&lt;/strong&gt; imports:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lazy&#34;).setup({&#xA;  spec = {&#xA;    { &#34;folke/LazyVim&#34;, import = &#34;lazyvim.plugins&#34; },&#xA;    { import = &#34;lazyvim.plugins.extras.lang.typescript&#34; },&#xA;    { import = &#34;plugins&#34; },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/jose-elias-alvarez/typescript.nvim&#34;&gt;typescript.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Extras: &lt;code&gt;ui.mini-starter&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;p&gt;To use this, add it to your &lt;strong&gt;lazy.nvim&lt;/strong&gt; imports:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;lazy&#34;).setup({&#xA;  spec = {&#xA;    { &#34;folke/LazyVim&#34;, import = &#34;lazyvim.plugins&#34; },&#xA;    { import = &#34;lazyvim.plugins.extras.ui.mini-starter&#34; },&#xA;    { import = &#34;plugins&#34; },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.starter&#34;&gt;mini.starter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;!-- plugins:end --&gt;</summary>
  </entry>
  <entry>
    <title>CKolkey/ts-node-action</title>
    <updated>2023-01-11T01:40:21Z</updated>
    <id>tag:github.com,2023-01-11:/CKolkey/ts-node-action</id>
    <link href="https://github.com/CKolkey/ts-node-action" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim Plugin for running functions on nodes.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TS Node Action&lt;/h1&gt; &#xA;&lt;p&gt;A framework for running functions on Tree-sitter nodes, and updating the buffer with the result.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7228095/210154055-8851210e-e8e1-4ba3-a474-0be373df8d1b.gif&#34; alt=&#34;cycle case&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7228095/210153839-5009dbed-db7a-4b1c-b5c9-879b90f32a64.gif&#34; alt=&#34;multiline&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7228095/210153712-8be29018-00a3-427f-8a59-959e705e12c6.gif&#34; alt=&#34;condition formatting&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7228095/210153716-2fde6101-352b-4ef9-ba00-0842e6749201.gif&#34; alt=&#34;ternerizing&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7228095/210153726-3f5da644-ae1f-4288-b52b-e12a9c757293.gif&#34; alt=&#34;operator flipflop&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7228095/210153731-a2c2a717-e7ae-4330-9664-11ba4ed3c005.gif&#34; alt=&#34;split join blocks&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Lazy.nvim&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#39;ckolkey/ts-node-action&#39;,&#xA;     dependencies = { &#39;nvim-treesitter&#39; },&#xA;     config = function() -- Optional&#xA;         require(&#34;ts-node-action&#34;).setup({})&#xA;     end&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;packer&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;    &#39;ckolkey/ts-node-action&#39;,&#xA;     requires = { &#39;nvim-treesitter&#39; },&#xA;     config = function() -- Optional&#xA;         require(&#34;ts-node-action&#34;).setup({})&#xA;     end&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It&#39;s not required to call &lt;code&gt;require(&#34;ts-node-action&#34;).setup()&lt;/code&gt; to initialize the plugin, but a table can be passed into the setup function to specify new actions for nodes or additional filetypes.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Bind &lt;code&gt;require(&#34;ts-node-action&#34;).node_action&lt;/code&gt; to something. This is left up to the user.&lt;/p&gt; &#xA;&lt;p&gt;For example, this would bind the function to &lt;code&gt;K&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.keymap.set({ &#34;n&#34; }, &#34;K&#34;, require(&#34;ts-node-action&#34;).node_action, { desc = &#34;Trigger Node Action&#34; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;setup()&lt;/code&gt; function accepts a table that conforms to the following schema:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    [&#39;*&#39;] = { -- Global table is checked for all filetypes&#xA;        [&#34;node_type&#34;] = fn,&#xA;        ...&#xA;    },&#xA;    filetype = {&#xA;        [&#34;node_type&#34;] = fn,&#xA;        ...&#xA;    },&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;filetype&lt;/code&gt; should be the value of &lt;code&gt;vim.o.filetype&lt;/code&gt;, or &lt;code&gt;&#39;*&#39;&lt;/code&gt; for the global table&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;node_type&lt;/code&gt; should be the value of &lt;code&gt;vim.treesitter.get_node_at_cursor()&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A definition on the &lt;code&gt;filetype&lt;/code&gt; table will take precedence over the &lt;code&gt;*&lt;/code&gt; (global) table.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple Actions for a Node Type&lt;/h3&gt; &#xA;&lt;p&gt;To define multiple actions for a node type, structure your &lt;code&gt;node_type&lt;/code&gt; value as a table of tables, like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;[&#34;node_type&#34;] = {&#xA;  { function_one, name = &#34;Action One&#34; },&#xA;  { function_two, name = &#34;Action Two&#34; },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;vim.ui.select&lt;/code&gt; will use the value of &lt;code&gt;name&lt;/code&gt; to when prompting you on which action to perform.&lt;/p&gt; &#xA;&lt;h2&gt;Writing your own Node Actions&lt;/h2&gt; &#xA;&lt;p&gt;All node actions should be a function that takes one argument: the tree-sitter node under the cursor.&lt;/p&gt; &#xA;&lt;p&gt;You can read more about their API via &lt;code&gt;:help tsnode&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;This function can return one or two values:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;The first being the text to replace the node with. The replacement text can be either a &lt;code&gt;&#34;string&#34;&lt;/code&gt; or &lt;code&gt;{ &#34;table&#34;, &#34;of&#34;, &#34;strings&#34; }&lt;/code&gt;. With a table of strings, each string will be on it&#39;s own line.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The second (optional) returned value is a table of options. Supported keys are: &lt;code&gt;cursor&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt;, and &lt;code&gt;format&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here&#39;s how that can look.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{ &#xA;  cursor   = { row = 0, col = 0 }, &#xA;  callback = function() ... end, &#xA;  format   = true &#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;cursor&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;If the &lt;code&gt;cursor&lt;/code&gt; key is present with an empty table value, the cursor will be moved to the start of the line where the current node is (&lt;code&gt;row = 0&lt;/code&gt; &lt;code&gt;col = 0&lt;/code&gt; relative to node &lt;code&gt;start_row&lt;/code&gt; and &lt;code&gt;start_col&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;callback&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;If &lt;code&gt;callback&lt;/code&gt; is present, it will simply get called without arguments after the buffer has been updated, and after the cursor has been positioned.&lt;/p&gt; &#xA;&lt;h4&gt;&lt;code&gt;format&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Boolean value. If &lt;code&gt;true&lt;/code&gt;, will run &lt;code&gt;==&lt;/code&gt; operator on new buffer text.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s a simplified example of how a node-action function gets called:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local action = node_actions[vim.o.filetype][node:type()]&#xA;local replacement, opts = action(node)&#xA;replace_node(node, replacement, opts or {})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;require(&#34;ts-node-action&#34;).node_action()&lt;/code&gt; Main function for plugin. Should be assigned by user, and when called will attempt to run the assigned function for the node your cursor is currently on.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;require(&#34;ts-node-action&#34;).debug()&lt;/code&gt; Prints some helpful information about the current node, as well as the loaded node actions for all filetypes&lt;/p&gt; &#xA;&lt;h2&gt;Helpers&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;require(&#34;ts-node-action.helpers&#34;).node_text(node)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@node: tsnode&#xA;@return: string&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns the text of the specified node.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;require(&#34;ts-node-action.helpers&#34;).multiline_node(node)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@node: tsnode&#xA;@return: boolean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns true if node spans multiple lines, and false if it&#39;s a single line.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;require(&#34;ts-node-action.helpers&#34;).padded_node_text(node, padding)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;@node: tsnode&#xA;@padding: table&#xA;@return: string&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For formatting unnamed tsnodes. For example, if you pass in an unnamed node representing the text &lt;code&gt;,&lt;/code&gt;, you could pass in a &lt;code&gt;padding&lt;/code&gt; table (below) to add a trailing whitespace to &lt;code&gt;,&lt;/code&gt; nodes.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{ [&#34;,&#34;] = &#34;%s &#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Nodes not specified in table are returned unchanged.&lt;/p&gt; &#xA;&lt;h2&gt;Builtin Actions&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Global&lt;/strong&gt; &lt;em&gt;(Applies to all filetypes)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  [&#34;true&#34;]          = toggle_boolean,&#xA;  [&#34;false&#34;]         = toggle_boolean,&#xA;  [&#34;identifier&#34;]    = cycle_case,&#xA;  [&#34;variable_name&#34;] = cycle_case,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  [&#34;true&#34;]              = toggle_boolean,&#xA;  [&#34;false&#34;]             = toggle_boolean,&#xA;  [&#34;array&#34;]             = toggle_multiline,&#xA;  [&#34;hash&#34;]              = toggle_multiline,&#xA;  [&#34;argument_list&#34;]     = toggle_multiline,&#xA;  [&#34;method_parameters&#34;] = toggle_multiline,&#xA;  [&#34;identifier&#34;]        = cycle_case,&#xA;  [&#34;constant&#34;]          = cycle_case,&#xA;  [&#34;block&#34;]             = toggle_block,&#xA;  [&#34;do_block&#34;]          = toggle_block,&#xA;  [&#34;binary&#34;]            = toggle_operator,&#xA;  [&#34;if&#34;]                = handle_conditional,&#xA;  [&#34;unless&#34;]            = handle_conditional,&#xA;  [&#34;if_modifier&#34;]       = multiline_conditional,&#xA;  [&#34;unless_modifier&#34;]   = multiline_conditional,&#xA;  [&#34;conditional&#34;]       = expand_ternary,&#xA;  [&#34;pair&#34;]              = toggle_hash_style,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  [&#34;object&#34;] = toggle_multiline,&#xA;  [&#34;array&#34;]  = toggle_multiline,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Lua&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  [&#34;table_constructor&#34;] = toggle_multiline,&#xA;  [&#34;arguments&#34;]         = toggle_multiline,&#xA;  [&#34;true&#34;]              = toggle_boolean,&#xA;  [&#34;false&#34;]             = toggle_boolean,&#xA;  [&#34;identifier&#34;]        = cycle_case,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Javascript&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  [&#34;object&#34;]              = toggle_multiline,&#xA;  [&#34;array&#34;]               = toggle_multiline,&#xA;  [&#34;statement_block&#34;]     = toggle_multiline,&#xA;  [&#34;identifier&#34;]          = cycle_case,&#xA;  [&#34;property_identifier&#34;] = cycle_case,&#xA;  [&#34;true&#34;]                = toggle_boolean,&#xA;  [&#34;false&#34;]               = toggle_boolean,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  [&#34;dictionary&#34;]    = toggle_multiline,&#xA;  [&#34;list&#34;]          = toggle_multiline,&#xA;  [&#34;argument_list&#34;] = toggle_multiline,&#xA;  [&#34;parameters&#34;]    = toggle_multiline,&#xA;  [&#34;true&#34;]          = toggle_boolean,&#xA;  [&#34;false&#34;]         = toggle_boolean,&#xA;  [&#34;identifier&#34;]    = cycle_case,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you come up with something that would be a good fit, pull requests for node actions are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Visit: &lt;a href=&#34;https://www.github.com/ckolkey/ts-node-action&#34;&gt;https://www.github.com/ckolkey/ts-node-action&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LazyVim/starter</title>
    <updated>2023-01-11T01:40:21Z</updated>
    <id>tag:github.com,2023-01-11:/LazyVim/starter</id>
    <link href="https://github.com/LazyVim/starter" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Starter template for LazyVim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LazyVim&lt;/h1&gt; &#xA;&lt;p&gt;A starter template for &lt;a href=&#34;https://github.com/LazyVim/LazyVim&#34;&gt;LazyVim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;This repo contains an example setup for &lt;a href=&#34;https://github.com/LazyVim/LazyVim&#34;&gt;LazyVim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;1. Make a backup of your current Neovim files:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mv ~/.config/nvim ~/.config/nvim.bak&#xA;mv ~/.local/share/nvim ~/.local/share/nvim.bak&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;2. Clone the starter&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/LazyVim/starter ~/.config/nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Start Neovim!&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Refer to the comments in the files on how to customize &lt;strong&gt;LazyVim&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📂 File Structure&lt;/h2&gt; &#xA;&lt;pre&gt;&#xA;~/.config/nvim&#xA;├── lua&#xA;│&amp;nbsp;&amp;nbsp; ├── config&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── autocmds.lua&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── keymaps.lua&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; ├── lazy.lua&#xA;│&amp;nbsp;&amp;nbsp; │&amp;nbsp;&amp;nbsp; └── options.lua&#xA;│&amp;nbsp;&amp;nbsp; └── plugins&#xA;│&amp;nbsp;&amp;nbsp;     └── example.lua&#xA;├── init.lua&#xA;└── stylua.toml&#xA;&lt;/pre&gt;</summary>
  </entry>
</feed>