<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-08T01:49:07Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>qbcore-framework/qb-vehicleshop</title>
    <updated>2022-06-08T01:49:07Z</updated>
    <id>tag:github.com,2022-06-08:/qbcore-framework/qb-vehicleshop</id>
    <link href="https://github.com/qbcore-framework/qb-vehicleshop" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Script For Buying Vehicles Used With QB-Core 🚗&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;qb-vehicleshop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Test Drives:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configurable time&lt;/li&gt; &#xA; &lt;li&gt;Returns player once time is up&lt;/li&gt; &#xA; &lt;li&gt;Can&#39;t take out more than one vehicle&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Financing:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Configurable down payment&lt;/li&gt; &#xA; &lt;li&gt;Configurable maximum payments&lt;/li&gt; &#xA; &lt;li&gt;Configurable commission amount for private dealerships&lt;/li&gt; &#xA; &lt;li&gt;Checks for payments due on player join and updates times on player logout or quit&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Shops:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lock to a specific job&lt;/li&gt; &#xA; &lt;li&gt;Commission paid to sales person for private dealer&lt;/li&gt; &#xA; &lt;li&gt;Create as many as desired with easy polyzone creation&lt;/li&gt; &#xA; &lt;li&gt;Vehicle sale amount gets deposited into the cardealer society fund for private dealer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Planned Updates&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;QB-Phone support to make payments&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Preview header when near a vehicle at the public dealership:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138773379-836be2a6-a800-47a4-8037-84d9052a964c.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;After pressing the focus key and selecting the preview header (default: LEFT ALT)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138770886-15e056db-3e57-43ea-b855-3ef4fd107acf.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Configurable test drive times that automatically return the player&lt;/strong&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138771162-00ee2607-0b56-418b-848c-5d8a009f4acd.jpg&#34; alt=&#34;20211025160757_1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Vehicle purchasing&lt;/strong&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138772385-ce16c0e6-baea-4b54-8eff-dbf44c54f568.jpg&#34; alt=&#34;20211025160853_1&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Private job-based dealership menu (works off closest player)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138772120-9513fa09-a22f-4a5f-8afe-6dc7756999f4.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Financing a vehicle with configurable max payment amount and minimum downpayment percentage&lt;/strong&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138771328-0b88078c-9f3d-4754-a4c7-bd5b68dd5129.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Financing preview header&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138773600-d6f510f8-a476-436d-8211-21e8c920eb6b.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Finance vehicle list&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138771582-727e7fd4-4837-4320-b79a-479a6268b7ac.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Make a payment or pay off vehicle in full&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/57848836/138771627-faed7fcb-73c8-4b77-a33f-fffbb738ab03.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dependencies:&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/qbcore-framework/PolyZone&#34;&gt;PolyZone&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You need to create new PolyZones if you want to create a new dealership or move default locations to another area. After you create the new PolyZones, add them to the Config.Shops &amp;gt; [Shape]&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Here&#39;s a Wiki on how to create new PolyZone: &lt;a href=&#34;https://github.com/mkafrin/PolyZone/wiki/Using-the-creation-script&#34;&gt;https://github.com/mkafrin/PolyZone/wiki/Using-the-creation-script&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-menu&#34;&gt;qb-menu&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-input&#34;&gt;qb-input&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;Config = {}&#xA;Config.UsingTarget = false -- If you are using qb-target (uses entity zones to target vehicles)&#xA;Config.Commission = 0.10 -- Percent that goes to sales person from a full car sale - default 10%&#xA;Config.FinanceCommission = 0.05 -- Percent that goes to sales person from a finance sale - default 5%&#xA;Config.FinanceZone = vector3(-29.53, -1103.67, 26.42) -- Where the finance menu is located&#xA;Config.PaymentWarning = 10 -- time in minutes that player has to make payment before repo - default 10&#xA;Config.PaymentInterval = 24 -- time in hours between payment being due - default 24&#xA;Config.MinimumDown = 10 -- minimum percentage allowed down - default 10&#xA;Config.MaximumPayments = 24 -- maximum payments allowed - default 24&#xA;Config.Shops = {&#xA;    [&#39;pdm&#39;] = {&#xA;        [&#39;Type&#39;] = &#39;free-use&#39;,  -- no player interaction is required to purchase a car&#xA;        [&#39;Zone&#39;] = {&#xA;            [&#39;Shape&#39;] = { --polygon that surrounds the shop&#xA;                vector2(-56.727394104004, -1086.2325439453),&#xA;                vector2(-60.612808227539, -1096.7795410156),&#xA;                vector2(-58.26834487915, -1100.572265625),&#xA;                vector2(-35.927803039551, -1109.0034179688),&#xA;                vector2(-34.427627563477, -1108.5111083984),&#xA;                vector2(-32.02657699585, -1101.5877685547),&#xA;                vector2(-33.342102050781, -1101.0377197266),&#xA;                vector2(-31.292987823486, -1095.3717041016)&#xA;            },&#xA;            [&#39;minZ&#39;] = 25.0,  -- min height of the shop zone&#xA;            [&#39;maxZ&#39;] = 28.0  -- max height of the shop zone&#xA;        },&#xA;        [&#39;Job&#39;] = &#39;none&#39;, -- Name of job or none&#xA;        [&#39;ShopLabel&#39;] = &#39;Premium Deluxe Motorsport&#39;, -- Blip name&#xA;        [&#39;Categories&#39;] = { -- Categories available to browse&#xA;            [&#39;sportsclassics&#39;] = &#39;Sports Classics&#39;,&#xA;            [&#39;sedans&#39;] = &#39;Sedans&#39;,&#xA;            [&#39;coupes&#39;] = &#39;Coupes&#39;,&#xA;            [&#39;suvs&#39;] = &#39;SUVs&#39;,&#xA;            [&#39;offroad&#39;] = &#39;Offroad&#39;,&#xA;            [&#39;muscle&#39;] = &#39;Muscle&#39;,&#xA;            [&#39;compacts&#39;] = &#39;Compacts&#39;,&#xA;            [&#39;motorcycles&#39;] = &#39;Motorcycles&#39;,&#xA;            [&#39;vans&#39;] = &#39;Vans&#39;&#xA;        },&#xA;        [&#39;TestDriveTimeLimit&#39;] = 0.5, -- Time in minutes until the vehicle gets deleted - default 0.5 (30 seconds)&#xA;        [&#39;Location&#39;] = vector3(-45.67, -1098.34, 26.42), -- Blip Location&#xA;        [&#39;ReturnLocation&#39;] = vector3(-44.74, -1082.58, 26.68), -- Location to return vehicle, only enables if the vehicleshop has a job owned&#xA;        [&#39;VehicleSpawn&#39;] = vector4(-56.79, -1109.85, 26.43, 71.5), -- Spawn location when vehicle is bought&#xA;        [&#39;ShowroomVehicles&#39;] = {&#xA;            [1] = {&#xA;                coords = vector4(-45.65, -1093.66, 25.44, 69.5), -- where the vehicle will spawn on display&#xA;                defaultVehicle = &#39;adder&#39;, -- Default display vehicle&#xA;                chosenVehicle = &#39;adder&#39;, -- Same as default but is dynamically changed when swapping vehicles&#xA;            },&#xA;            [2] = {&#xA;                coords = vector4(-48.27, -1101.86, 25.44, 294.5),&#xA;                defaultVehicle = &#39;schafter2&#39;,&#xA;                chosenVehicle = &#39;schafter2&#39;,&#xA;            },&#xA;            [3] = {&#xA;                coords = vector4(-39.6, -1096.01, 25.44, 66.5),&#xA;                defaultVehicle = &#39;comet2&#39;,&#xA;                chosenVehicle = &#39;comet2&#39;,&#xA;            },&#xA;            [4] = {&#xA;                coords = vector4(-51.21, -1096.77, 25.44, 254.5),&#xA;                defaultVehicle = &#39;vigero&#39;,&#xA;                chosenVehicle = &#39;vigero&#39;,&#xA;            },&#xA;            [5] = {&#xA;                coords = vector4(-40.18, -1104.13, 25.44, 338.5),&#xA;                defaultVehicle = &#39;t20&#39;,&#xA;                chosenVehicle = &#39;t20&#39;,&#xA;            },&#xA;            [6] = {&#xA;                coords = vector4(-43.31, -1099.02, 25.44, 52.5),&#xA;                defaultVehicle = &#39;bati&#39;,&#xA;                chosenVehicle = &#39;bati&#39;,&#xA;            },&#xA;            [7] = {&#xA;                coords = vector4(-50.66, -1093.05, 25.44, 222.5),&#xA;                defaultVehicle = &#39;bati&#39;,&#xA;                chosenVehicle = &#39;bati&#39;,&#xA;            },&#xA;            [8] = {&#xA;                coords = vector4(-44.28, -1102.47, 25.44, 298.5),&#xA;                defaultVehicle = &#39;bati&#39;,&#xA;                chosenVehicle = &#39;bati&#39;,&#xA;            }&#xA;        },&#xA;    },&#xA;    [&#39;luxury&#39;] = {&#xA;        [&#39;Type&#39;] = &#39;managed&#39;,  -- meaning a real player has to sell the car&#xA;        [&#39;Zone&#39;] = {&#xA;            [&#39;Shape&#39;] = {&#xA;                vector2(-81.724754333496, 72.436462402344),&#xA;                vector2(-60.159938812256, 60.576206207275),&#xA;                vector2(-55.763122558594, 61.749210357666),&#xA;                vector2(-52.965869903564, 69.869110107422),&#xA;                vector2(-50.352680206299, 75.886123657227),&#xA;                vector2(-61.261016845703, 81.564918518066),&#xA;                vector2(-63.812171936035, 75.633102416992),&#xA;                vector2(-76.546226501465, 81.189826965332)&#xA;            },&#xA;            [&#39;minZ&#39;] = 69.0,&#xA;            [&#39;maxZ&#39;] = 76.0&#xA;        },&#xA;        [&#39;Job&#39;] = &#39;cardealer&#39;, -- Name of job or none&#xA;        [&#39;ShopLabel&#39;] = &#39;Luxury Vehicle Shop&#39;,&#xA;        [&#39;Categories&#39;] = {&#xA;            [&#39;super&#39;] = &#39;Super&#39;,&#xA;            [&#39;sports&#39;] = &#39;Sports&#39;&#xA;        },&#xA;        [&#39;TestDriveTimeLimit&#39;] = 0.5,&#xA;        [&#39;Location&#39;] = vector3(-63.59, 68.25, 73.06),&#xA;        [&#39;ReturnLocation&#39;] = vector3(-65.05, 81.23, 71.16),&#xA;        [&#39;VehicleSpawn&#39;] = vector4(-71.13, 84.04, 71.09, 65.23),&#xA;        [&#39;ShowroomVehicles&#39;] = {&#xA;            [1] = {&#xA;                coords = vector4(-75.96, 74.78, 70.90, 221.69),&#xA;                defaultVehicle = &#39;italirsx&#39;,&#xA;                chosenVehicle = &#39;italirsx&#39;,&#xA;            },&#xA;            [2] = {&#xA;                coords = vector4(-66.52, 74.33, 70.65, 188.03),&#xA;                defaultVehicle = &#39;italigtb&#39;,&#xA;                chosenVehicle = &#39;italigtb&#39;,&#xA;            },&#xA;            [3] = {&#xA;                coords = vector4(-71.83, 68.60, 70.75, 276.57),&#xA;                defaultVehicle = &#39;nero&#39;,&#xA;                chosenVehicle = &#39;nero&#39;,&#xA;            },&#xA;            [4] = {&#xA;                coords = vector4(-59.95, 68.61, 70.85, 181.44),&#xA;                defaultVehicle = &#39;comet2&#39;,&#xA;                chosenVehicle = &#39;comet2&#39;,&#xA;            }&#xA;        }&#xA;    } -- Add your next table under this comma&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;QBCore Framework&#xA;Copyright (C) 2021 Joshua Eger&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>jose-elias-alvarez/null-ls.nvim</title>
    <updated>2022-06-08T01:49:07Z</updated>
    <id>tag:github.com,2022-06-08:/jose-elias-alvarez/null-ls.nvim</id>
    <link href="https://github.com/jose-elias-alvarez/null-ls.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;null-ls.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua.&lt;/p&gt; &#xA;&lt;h2&gt;Motivation&lt;/h2&gt; &#xA;&lt;p&gt;Neovim&#39;s LSP ecosystem is growing, and plugins like &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt; and &lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;trouble.nvim&lt;/a&gt; make it a joy to work with LSP features like code actions and diagnostics.&lt;/p&gt; &#xA;&lt;p&gt;Unlike the VS Code and coc.nvim ecosystems, Neovim doesn&#39;t provide a way for non-LSP sources to hook into its LSP client. null-ls is an attempt to bridge that gap and simplify the process of creating, sharing, and setting up LSP sources using pure Lua.&lt;/p&gt; &#xA;&lt;p&gt;null-ls is also an attempt to reduce the boilerplate required to set up general-purpose language servers and improve performance by removing the need for external processes.&lt;/p&gt; &#xA;&lt;h2&gt;Status&lt;/h2&gt; &#xA;&lt;p&gt;null-ls is in &lt;strong&gt;beta status&lt;/strong&gt;. Please see below for steps to follow if something doesn&#39;t work the way you expect (or doesn&#39;t work at all).&lt;/p&gt; &#xA;&lt;p&gt;At the moment, null-is is compatible with Neovim 0.7 (stable) and 0.8 (head), but some features and performance improvements are exclusive to the latest version.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;null-ls sources are able to hook into the following LSP features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Code actions&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Diagnostics (file- and project-level)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Formatting (including range formatting)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hover&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Completion&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;null-ls includes built-in sources for each of these features to provide out-of-the-box functionality. See &lt;a href=&#34;https://raw.githubusercontent.com/jose-elias-alvarez/null-ls.nvim/main/doc/BUILTINS.md&#34;&gt;BUILTINS&lt;/a&gt; for a list of available built-in sources and &lt;a href=&#34;https://raw.githubusercontent.com/jose-elias-alvarez/null-ls.nvim/main/doc/BUILTIN_CONFIG.md&#34;&gt;BUILTIN_CONFIG&lt;/a&gt; for instructions on how to set up and configure these sources.&lt;/p&gt; &#xA;&lt;p&gt;null-ls also provides helpers to streamline the process of spawning and transforming the output of command-line processes into an LSP-friendly format. If you want to create your own source, either for personal use or for a plugin, see &lt;a href=&#34;https://raw.githubusercontent.com/jose-elias-alvarez/null-ls.nvim/main/doc/HELPERS.md&#34;&gt;HELPERS&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Install null-ls using your favorite package manager. The plugin depends on &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;, which you are (probably) already using.&lt;/p&gt; &#xA;&lt;p&gt;To get started, you must set up null-ls and register at least one source. See &lt;a href=&#34;https://raw.githubusercontent.com/jose-elias-alvarez/null-ls.nvim/main/doc/BUILTINS.md&#34;&gt;BUILTINS&lt;/a&gt; for a list of available built-in sources and &lt;a href=&#34;https://raw.githubusercontent.com/jose-elias-alvarez/null-ls.nvim/main/doc/CONFIG.md&#34;&gt;CONFIG&lt;/a&gt; for information about setting up and configuring null-ls.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;null-ls&#34;).setup({&#xA;    sources = {&#xA;        require(&#34;null-ls&#34;).builtins.formatting.stylua,&#xA;        require(&#34;null-ls&#34;).builtins.diagnostics.eslint,&#xA;        require(&#34;null-ls&#34;).builtins.completion.spell,&#xA;    },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;The definitive source for information about null-ls is its &lt;a href=&#34;https://raw.githubusercontent.com/jose-elias-alvarez/null-ls.nvim/main/doc/MAIN.md&#34;&gt;documentation&lt;/a&gt;, which contains information about how null-ls works, how to set it up, and how to create sources.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to add new features and built-ins for any language are always welcome. See &lt;a href=&#34;https://raw.githubusercontent.com/jose-elias-alvarez/null-ls.nvim/main/doc/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; for guidelines.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;Parsing buffer content&lt;/h3&gt; &#xA;&lt;p&gt;The following example demonstrates a diagnostic source that will parse the current buffer&#39;s content and show instances of the word &lt;code&gt;really&lt;/code&gt; as LSP warnings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local null_ls = require(&#34;null-ls&#34;)&#xA;local api = vim.api&#xA;&#xA;local no_really = {&#xA;    method = null_ls.methods.DIAGNOSTICS,&#xA;    filetypes = { &#34;markdown&#34;, &#34;text&#34; },&#xA;    generator = {&#xA;        fn = function(params)&#xA;            local diagnostics = {}&#xA;            -- sources have access to a params object&#xA;            -- containing info about the current file and editor state&#xA;            for i, line in ipairs(params.content) do&#xA;                local col, end_col = line:find(&#34;really&#34;)&#xA;                if col and end_col then&#xA;                    -- null-ls fills in undefined positions&#xA;                    -- and converts source diagnostics into the required format&#xA;                    table.insert(diagnostics, {&#xA;                        row = i,&#xA;                        col = col,&#xA;                        end_col = end_col,&#xA;                        source = &#34;no-really&#34;,&#xA;                        message = &#34;Don&#39;t use &#39;really!&#39;&#34;,&#xA;                        severity = 2,&#xA;                    })&#xA;                end&#xA;            end&#xA;            return diagnostics&#xA;        end,&#xA;    },&#xA;}&#xA;&#xA;null_ls.register(no_really)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Parsing CLI program output&lt;/h3&gt; &#xA;&lt;p&gt;null-ls includes helpers to simplify the process of spawning and capturing the output of CLI programs. This example shows how to pass the content of the current buffer to &lt;code&gt;markdownlint&lt;/code&gt; via &lt;code&gt;stdin&lt;/code&gt; and convert its output (which it sends to &lt;code&gt;stderr&lt;/code&gt;) into LSP diagnostics:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local null_ls = require(&#34;null-ls&#34;)&#xA;local helpers = require(&#34;null-ls.helpers&#34;)&#xA;&#xA;local markdownlint = {&#xA;    method = null_ls.methods.DIAGNOSTICS,&#xA;    filetypes = { &#34;markdown&#34; },&#xA;    -- null_ls.generator creates an async source&#xA;    -- that spawns the command with the given arguments and options&#xA;    generator = null_ls.generator({&#xA;        command = &#34;markdownlint&#34;,&#xA;        args = { &#34;--stdin&#34; },&#xA;        to_stdin = true,&#xA;        from_stderr = true,&#xA;        -- choose an output format (raw, json, or line)&#xA;        format = &#34;line&#34;,&#xA;        check_exit_code = function(code, stderr)&#xA;            local success = code &amp;lt;= 1&#xA;&#xA;            if not success then&#xA;              -- can be noisy for things that run often (e.g. diagnostics), but can&#xA;              -- be useful for things that run on demand (e.g. formatting)&#xA;              print(stderr)&#xA;            end&#xA;&#xA;            return success&#xA;        end,&#xA;        -- use helpers to parse the output from string matchers,&#xA;        -- or parse it manually with a function&#xA;        on_output = helpers.diagnostics.from_patterns({&#xA;            {&#xA;                pattern = [[:(%d+):(%d+) [%w-/]+ (.*)]],&#xA;                groups = { &#34;row&#34;, &#34;col&#34;, &#34;message&#34; },&#xA;            },&#xA;            {&#xA;                pattern = [[:(%d+) [%w-/]+ (.*)]],&#xA;                groups = { &#34;row&#34;, &#34;message&#34; },&#xA;            },&#xA;        }),&#xA;    }),&#xA;}&#xA;&#xA;null_ls.register(markdownlint)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Something isn&#39;t working! What do I do?&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If you run into issues when using null-ls, please follow the steps below and &lt;strong&gt;do not&lt;/strong&gt; open an issue on the Neovim repository. null-ls is not an actual LSP server, so we need to determine whether issues are specific to this plugin before sending anything upstream.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure your configuration is in line with the latest version of this document.&lt;/li&gt; &#xA; &lt;li&gt;Enable debug mode (see below) and check the output of your source(s). If the CLI program is not properly configured or is otherwise not running as expected, that&#39;s an issue with the program, not null-ls.&lt;/li&gt; &#xA; &lt;li&gt;Check the documentation for available configuration options that might solve your issue.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re having trouble configuring null-ls or want to know how to achieve a specific result, open a discussion.&lt;/li&gt; &#xA; &lt;li&gt;If you believe the issue is with null-ls itself or you want to request a new feature, open an issue and provide the information requested in the issue template.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;How do I format files?&lt;/h3&gt; &#xA;&lt;p&gt;null-ls formatters run when you call &lt;code&gt;vim.lsp.buf.formatting()&lt;/code&gt; or &lt;code&gt;vim.lsp.buf.formatting_sync()&lt;/code&gt;. If a source supports it, you can run range formatting by visually selecting part of the buffer and calling &lt;code&gt;vim.lsp.buf.range_formatting()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;On 0.8, you should use &lt;code&gt;vim.lsp.buf.format&lt;/code&gt; (see the help file for usage instructions).&lt;/p&gt; &#xA;&lt;h3&gt;How do I format files on save?&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/jose-elias-alvarez/null-ls.nvim/wiki/Formatting-on-save&#34;&gt;this wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How do I stop Neovim from asking me which server I want to use for formatting?&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/jose-elias-alvarez/null-ls.nvim/wiki/Avoiding-LSP-formatting-conflicts&#34;&gt;this wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How do I view project-level diagnostics?&lt;/h3&gt; &#xA;&lt;p&gt;For a built-in solution, use &lt;code&gt;:lua vim.diagnostic.setqflist()&lt;/code&gt;. You can also use a plugin like &lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;trouble.nvim&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;How do I enable debug mode and get debug output?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Set &lt;code&gt;debug&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; in your config:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;null-ls&#34;).setup({&#xA;    debug = true&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;:NullLsLog&lt;/code&gt; to open your debug log in the current Neovim instance or &lt;code&gt;:NullLsInfo&lt;/code&gt; to get the path to your debug log.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;As with LSP logging, debug mode will slow down Neovim. Make sure to disable the option after you&#39;ve collected the information you&#39;re looking for.&lt;/p&gt; &#xA;&lt;h3&gt;Does it work with (other plugin)?&lt;/h3&gt; &#xA;&lt;p&gt;In most cases, yes. null-ls tries to act like an actual LSP server as much as possible, so it should work seamlessly with most LSP-related plugins. If you run into problems, please try to determine which plugin is causing them and open an issue.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jose-elias-alvarez/null-ls.nvim/wiki/Compatibility-with-other-plugins&#34;&gt;This wiki page&lt;/a&gt; mentions plugins that require specific configuration options / tweaks to work with null-ls.&lt;/p&gt; &#xA;&lt;h3&gt;How does it work?&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to hard work by @folke, the plugin wraps the mechanism Neovim uses to spawn language servers to start a client entirely in-memory. The client attaches to buffers that match defined sources and receives and responds to requests, document changes, and other events from Neovim.&lt;/p&gt; &#xA;&lt;h3&gt;Will it affect my performance?&lt;/h3&gt; &#xA;&lt;p&gt;More testing is necessary, but since null-ls uses pure Lua and runs entirely in memory without any external processes, in most cases it should run faster than similar solutions. If you notice that performance is worse with null-ls than with an alternative, please open an issue!&lt;/p&gt; &#xA;&lt;h3&gt;I am seeing a formatting &lt;code&gt;timeout&lt;/code&gt; error message&lt;/h3&gt; &#xA;&lt;p&gt;This issue occurs when a formatter takes longer than the default timeout value. This is an automatic mechanism and controlled by Neovim. You might want to increase the timeout in your call:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- 0.7&#xA;vim.lsp.buf.formatting_sync(nil, 2000) -- 2 seconds&#xA;&#xA;-- 0.8&#xA;vim.lsp.buf.format({ timeout_ms = 2000 })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Tests&lt;/h2&gt; &#xA;&lt;p&gt;The test suite includes unit and integration tests and depends on plenary.nvim. Run &lt;code&gt;make test&lt;/code&gt; in the root of the project to run the suite or &lt;code&gt;FILE=filename_spec.lua make test-file&lt;/code&gt; to test an individual file.&lt;/p&gt; &#xA;&lt;p&gt;All tests expect the latest Neovim master.&lt;/p&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mattn/efm-langserver&#34;&gt;efm-langserver&lt;/a&gt; and &lt;a href=&#34;https://github.com/iamcco/diagnostic-languageserver&#34;&gt;diagnostic-languageserver&lt;/a&gt;: general-purpose language servers that can provide formatting and diagnostics from CLI output.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mfussenegger/nvim-lint&#34;&gt;nvim-lint&lt;/a&gt;: a Lua plugin that focuses on providing diagnostics from CLI output.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mhartington/formatter.nvim&#34;&gt;formatter.nvim&lt;/a&gt;: a Lua plugin that (surprise) focuses on formatting.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to everyone who sponsors my projects and makes continued development / maintenance possible!&lt;/p&gt; &#xA;&lt;!-- sponsors --&gt;&#xA;&lt;a href=&#34;https://github.com/yutkat&#34;&gt;&lt;img src=&#34;https://github.com/yutkat.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/hituzi-no-sippo&#34;&gt;&lt;img src=&#34;https://github.com/hituzi-no-sippo.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/sbc64&#34;&gt;&lt;img src=&#34;https://github.com/sbc64.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/milanglacier&#34;&gt;&lt;img src=&#34;https://github.com/milanglacier.png&#34; width=&#34;60px&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;&lt;!-- sponsors --&gt;</summary>
  </entry>
  <entry>
    <title>sumneko/lua-language-server</title>
    <updated>2022-06-08T01:49:07Z</updated>
    <id>tag:github.com,2022-06-08:/sumneko/lua-language-server</id>
    <link href="https://github.com/sumneko/lua-language-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lua Language Server coded by Lua&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lua-language-server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/sumneko/lua-language-server/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;build&#34;&gt; &lt;img src=&#34;https://vsmarketplacebadge.apphb.com/version-short/sumneko.lua.svg?sanitize=true&#34; alt=&#34;version&#34;&gt; &lt;img src=&#34;https://vsmarketplacebadge.apphb.com/installs-short/sumneko.lua.svg?sanitize=true&#34; alt=&#34;installs&#34;&gt; &lt;img src=&#34;https://vsmarketplacebadge.apphb.com/downloads-short/sumneko.lua.svg?sanitize=true&#34; alt=&#34;downloads&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Install In VSCode&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=sumneko.lua&#34;&gt;https://marketplace.visualstudio.com/items?itemName=sumneko.lua&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/sumneko/vscode-lua/raw/master/images//Install%20In%20VSCode.gif&#34; alt=&#34;avatar&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Change Log&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sumneko/lua-language-server/raw/master/changelog.md&#34;&gt;https://github.com/sumneko/lua-language-server/blob/master/changelog.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki&#34;&gt;https://github.com/sumneko/lua-language-server/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Feature&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Goto Definition&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Find All References&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Hover&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Diagnostics&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Rename&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Auto Completion&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; IntelliSense&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Signature Help&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Document Symbols&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Workspace Symbols&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Syntax Check&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Highlight&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Code Action&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; EmmyLua Annotation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Multi Workspace&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Semantic Tokens&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Formatter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Version&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Lua 5.1&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Lua 5.2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Lua 5.3&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Lua 5.4&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; LuaJIT&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you find any mistakes, please &lt;a href=&#34;https://github.com/sumneko/lua-language-server/issues&#34;&gt;tell me&lt;/a&gt; or use &lt;a href=&#34;https://github.com/sumneko/lua-language-server/tree/master/meta/template&#34;&gt;Pull Requests&lt;/a&gt; to fix them directly.&lt;/p&gt; &#xA;&lt;p&gt;如果你发现了任何错误，请&lt;a href=&#34;https://github.com/sumneko/lua-language-server/issues&#34;&gt;告诉我&lt;/a&gt;或使用&lt;a href=&#34;https://github.com/sumneko/lua-language-server/tree/master/meta/template&#34;&gt;Pull Requests&lt;/a&gt;来直接修复。&lt;/p&gt; &#xA;&lt;h2&gt;Locale&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; en-us&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; zh-cn&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; zh-tw (thanks &lt;a href=&#34;https://github.com/AlexCai2019&#34;&gt;AlexCai2019&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; pt-br (thanks &lt;a href=&#34;https://github.com/jefersonf&#34;&gt;Jeferson Ferreira&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://github.com/sumneko/lua-language-server/tree/master/locale/en-us&#34;&gt;help me&lt;/a&gt; improve the quality of &lt;code&gt;en-US&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;The extensions in the VSCode market already come with pre-compiled binary files, usually you don&#39;t need to compile them.&lt;/p&gt; &#xA;&lt;p&gt;Other clients can first try to download and use &lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki/PreCompiled-Binaries&#34;&gt;pre-compiled binary files&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you need to compile by yourself, please refer to &lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki/Build-and-Run&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setting&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;In VSCode: Just use the setting of VSCode.&lt;/li&gt; &#xA; &lt;li&gt;Standalone: See &lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki/Setting&#34;&gt;https://github.com/sumneko/lua-language-server/wiki/Setting&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/bee.lua&#34;&gt;bee.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/luamake&#34;&gt;luamake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqmedeiros/lpeglabel&#34;&gt;LPegLabel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sumneko/LuaParser&#34;&gt;LuaParser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif&#34;&gt;ScreenToGif&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-languageserver-node&#34;&gt;vscode-languageclient&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/textmate/lua.tmbundle&#34;&gt;lua.tmbundle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emmylua.github.io&#34;&gt;EmmyLua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sumneko/lua-glob&#34;&gt;lua-glob&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sumneko/utility&#34;&gt;utility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/vscode-lua-doc&#34;&gt;vscode-lua-doc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/json.lua&#34;&gt;json.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CppCXY/EmmyLuaCodeStyle&#34;&gt;EmmyLuaCodeStyle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kikito/inspect.lua&#34;&gt;inspect.lua&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168&#34;&gt;actboy168&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dasannikov&#34;&gt;Dmitry Sannikov&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Reshiram110&#34;&gt;Jayden Charbonneau&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/z16&#34;&gt;Stjepan Bakrac&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/young40&#34;&gt;Peter Young&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Xiaobin0860&#34;&gt;Li Xiaobin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Fedora7&#34;&gt;Fedora7&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shuxiao9058&#34;&gt;Allen Shaw&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Letrab&#34;&gt;Bartel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ruin0x11&#34;&gt;Ruin0x11&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uhziel&#34;&gt;uhziel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PhoenixZeng&#34;&gt;火凌之&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CppCXY&#34;&gt;CppCXY&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ketho&#34;&gt;Ketho&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke&#34;&gt;Folke Lemaitre&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/numToStr&#34;&gt;Vikas Raj&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kevinhwang91&#34;&gt;kevinhwang91&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Cassolette&#34;&gt;Cassolette&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Telemetry&lt;/h2&gt; &#xA;&lt;p&gt;This language server collects usage data and sends it to the development team to help improve the extension. Read our &lt;a href=&#34;https://github.com/sumneko/lua-language-server/wiki/Privacy-Policy&#34;&gt;privacy policy&lt;/a&gt; to learn more and how to disable any telemetry.&lt;/p&gt;</summary>
  </entry>
</feed>