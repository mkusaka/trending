<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-24T01:39:38Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>echasnovski/mini.bracketed</title>
    <updated>2023-02-24T01:39:38Z</updated>
    <id>tag:github.com,2023-02-24:/echasnovski/mini.bracketed</id>
    <link href="https://github.com/echasnovski/mini.bracketed" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim Lua plugin to go forward/backward with square brackets. Part of &#39;mini.nvim&#39; library.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://github.com/echasnovski/media/raw/main/mini.nvim/logo/logo_bracketed.png&#34; style=&#34;width: 100%&#34;&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/echasnovski/mini.nvim&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;h3&gt;Go forward/backward with square brackets&lt;/h3&gt; &#xA;&lt;p&gt;See more details in &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.bracketed/main/#features&#34;&gt;Features&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.bracketed/main/doc/mini-bracketed.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;⦿ This is a part of &lt;a href=&#34;https://github.com/echasnovski/mini.nvim&#34;&gt;mini.nvim&lt;/a&gt; library. Please use &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/readmes/mini-bracketed.md&#34;&gt;this link&lt;/a&gt; if you want to mention this module.&lt;/p&gt; &#xA;&lt;p&gt;⦿ All contributions (issues, pull requests, discussions, etc.) are done inside of &#39;mini.nvim&#39;.&lt;/p&gt; &#xA;&lt;p&gt;⦿ See the repository page to learn about common design principles and configuration recipes.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want to help this project grow but don&#39;t know where to start, check out &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/CONTRIBUTING.md&#34;&gt;contributing guides of &#39;mini.nvim&#39;&lt;/a&gt; or leave a Github star for &#39;mini.nvim&#39; project and/or any its standalone Git repositories.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/24854248/220173251-cd905d8f-ad07-4654-bba5-971220fad80a.mp4&#34;&gt;https://user-images.githubusercontent.com/24854248/220173251-cd905d8f-ad07-4654-bba5-971220fad80a.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Configurable Lua functions to go forward/backward to a certain target. Each function can be customized with:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Direction. One of &#34;forward&#34;, &#34;backward&#34;, &#34;first&#34; (forward starting from first one), &#34;last&#34; (backward starting from last one).&lt;/li&gt; &#xA;   &lt;li&gt;Number of times to go.&lt;/li&gt; &#xA;   &lt;li&gt;Whether to wrap on edges (going forward on last one goes to first).&lt;/li&gt; &#xA;   &lt;li&gt;Some other target specific options.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mappings using square brackets. They are created using configurable target suffix and can be selectively disabled.&lt;/p&gt; &lt;p&gt;Each mapping supports |[count]|. Mappings are created in Normal mode; for targets which move cursor in current buffer also Visual and Operator-pending (with dot-repeat) modes are supported.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;lower-suffix&lt;/code&gt; and &lt;code&gt;upper-suffix&lt;/code&gt; (lower and upper case suffix) for a single target the following mappings are created:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;[&lt;/code&gt; + &lt;code&gt;upper-suffix&lt;/code&gt; : go first.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;[&lt;/code&gt; + &lt;code&gt;lower-suffix&lt;/code&gt; : go backward.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;]&lt;/code&gt; + &lt;code&gt;lower-suffix&lt;/code&gt; : go forward.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;]&lt;/code&gt; + &lt;code&gt;upper-suffix&lt;/code&gt; : go last.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Supported targets (for more information see help for corresponding Lua function):&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Target&lt;/th&gt; &#xA;     &lt;th&gt;Mappings&lt;/th&gt; &#xA;     &lt;th&gt;Lua function&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Buffer&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[B&lt;/code&gt; &lt;code&gt;[b&lt;/code&gt; &lt;code&gt;]b&lt;/code&gt; &lt;code&gt;]B&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.buffer()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Comment block&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[C&lt;/code&gt; &lt;code&gt;[c&lt;/code&gt; &lt;code&gt;]c&lt;/code&gt; &lt;code&gt;]C&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.comment()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Conflict marker&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[X&lt;/code&gt; &lt;code&gt;[x&lt;/code&gt; &lt;code&gt;]x&lt;/code&gt; &lt;code&gt;]X&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.conflict()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Diagnostic&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[D&lt;/code&gt; &lt;code&gt;[d&lt;/code&gt; &lt;code&gt;]d&lt;/code&gt; &lt;code&gt;]D&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.diagnostic()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;File on disk&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[F&lt;/code&gt; &lt;code&gt;[f&lt;/code&gt; &lt;code&gt;]f&lt;/code&gt; &lt;code&gt;]F&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.file()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Indent change&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[I&lt;/code&gt; &lt;code&gt;[i&lt;/code&gt; &lt;code&gt;]i&lt;/code&gt; &lt;code&gt;]I&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.indent()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Jump from jumplist inside current buffer&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[J&lt;/code&gt; &lt;code&gt;[j&lt;/code&gt; &lt;code&gt;]j&lt;/code&gt; &lt;code&gt;]J&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.jump()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Location from location list&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[L&lt;/code&gt; &lt;code&gt;[l&lt;/code&gt; &lt;code&gt;]l&lt;/code&gt; &lt;code&gt;]L&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.location()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Old files&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[O&lt;/code&gt; &lt;code&gt;[o&lt;/code&gt; &lt;code&gt;]o&lt;/code&gt; &lt;code&gt;]O&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.oldfile()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Quickfix entry from quickfix list&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[Q&lt;/code&gt; &lt;code&gt;[q&lt;/code&gt; &lt;code&gt;]q&lt;/code&gt; &lt;code&gt;]Q&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.quickfix()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Tree-sitter node and parents&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[T&lt;/code&gt; &lt;code&gt;[t&lt;/code&gt; &lt;code&gt;]t&lt;/code&gt; &lt;code&gt;]T&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.treesitter()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Undo states from specially tracked linear history&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[U&lt;/code&gt; &lt;code&gt;[u&lt;/code&gt; &lt;code&gt;]u&lt;/code&gt; &lt;code&gt;]U&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.undo()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Window in current tab&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[W&lt;/code&gt; &lt;code&gt;[w&lt;/code&gt; &lt;code&gt;]w&lt;/code&gt; &lt;code&gt;]W&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.window()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Yank selection replacing latest put region&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;[Y&lt;/code&gt; &lt;code&gt;[y&lt;/code&gt; &lt;code&gt;]y&lt;/code&gt; &lt;code&gt;]Y&lt;/code&gt;&lt;/td&gt; &#xA;     &lt;td&gt;&lt;code&gt;MiniBracketed.yank()&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;This plugin can be installed as part of &#39;mini.nvim&#39; library (&lt;strong&gt;recommended&lt;/strong&gt;) or as a standalone Git repository.&lt;/p&gt; &#xA;&lt;!-- TODO: Uncomment use of `stable` branch before 0.8.0 release --&gt; &#xA;&lt;!-- There are two branches to install from: --&gt; &#xA;&lt;p&gt;During beta-testing phase there is only one branch to install from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;main&lt;/code&gt; (default, &lt;strong&gt;recommended&lt;/strong&gt;) will have latest development version of plugin. All changes since last stable release should be perceived as being in beta testing phase (meaning they already passed alpha-testing and are moderately settled).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- - `stable` will be updated only upon releases with code tested during public beta-testing phase in `main` branch. --&gt; &#xA;&lt;p&gt;Here are code snippets for some common installation methods (use only one):&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;folke/lazy.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;!-- &lt;td rowspan=2&gt;&#39;mini.nvim&#39; library&lt;/td&gt; --&gt; &#xA;    &lt;td rowspan=&#34;1&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.nvim&#39;, version = false },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;!-- &lt;tr&gt; --&gt; &#xA;   &lt;!--     &lt;td&gt;Stable&lt;/td&gt; &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.nvim&#39;, version = &#39;*&#39; },&lt;/code&gt;&lt;/td&gt; --&gt; &#xA;   &lt;!-- &lt;/tr&gt; --&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;!-- &lt;td rowspan=2&gt;Standalone plugin&lt;/td&gt; --&gt; &#xA;    &lt;td rowspan=&#34;1&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.bracketed&#39;, version = false },&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;!-- &lt;tr&gt; --&gt; &#xA;   &lt;!--     &lt;td&gt;Stable&lt;/td&gt; &lt;td&gt;&lt;code&gt;{ &#39;echasnovski/mini.bracketed&#39;, version = &#39;*&#39; },&lt;/code&gt;&lt;/td&gt; --&gt; &#xA;   &lt;!-- &lt;/tr&gt; --&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;wbthomason/packer.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;!-- &lt;td rowspan=2&gt;&#39;mini.nvim&#39; library&lt;/td&gt; --&gt; &#xA;    &lt;td rowspan=&#34;1&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;!-- &lt;tr&gt; --&gt; &#xA;   &lt;!--     &lt;td&gt;Stable&lt;/td&gt; &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.nvim&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; --&gt; &#xA;   &lt;!-- &lt;/tr&gt; --&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;!-- &lt;td rowspan=2&gt;Standalone plugin&lt;/td&gt; &lt;td&gt;Main&lt;/td&gt; &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.bracketed&#39;&lt;/code&gt;&lt;/td&gt; --&gt; &#xA;    &lt;td rowspan=&#34;1&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.bracketed&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;!-- &lt;tr&gt; --&gt; &#xA;   &lt;!--     &lt;td&gt;Stable&lt;/td&gt; &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.bracketed&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; --&gt; &#xA;   &lt;!-- &lt;/tr&gt; --&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;With &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;junegunn/vim-plug&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Github repo&lt;/th&gt; &#xA;    &lt;th&gt;Branch&lt;/th&gt; &#xA;    &lt;th&gt;Code snippet&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;!-- &lt;td rowspan=2&gt;&#39;mini.nvim&#39; library&lt;/td&gt; --&gt; &#xA;    &lt;td rowspan=&#34;1&#34;&gt;&#39;mini.nvim&#39; library&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;!-- &lt;tr&gt; --&gt; &#xA;   &lt;!--     &lt;td&gt;Stable&lt;/td&gt; &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; --&gt; &#xA;   &lt;!-- &lt;/tr&gt; --&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;!-- &lt;td rowspan=2&gt;Standalone plugin&lt;/td&gt; &lt;td&gt;Main&lt;/td&gt; &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.bracketed&#39;&lt;/code&gt;&lt;/td&gt; --&gt; &#xA;    &lt;td rowspan=&#34;1&#34;&gt;Standalone plugin&lt;/td&gt; &#xA;    &lt;td&gt;Main&lt;/td&gt; &#xA;    &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.bracketed&#39;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;!-- &lt;tr&gt; --&gt; &#xA;   &lt;!--     &lt;td&gt;Stable&lt;/td&gt; &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.bracketed&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; --&gt; &#xA;   &lt;!-- &lt;/tr&gt; --&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: don&#39;t forget to call &lt;code&gt;require(&#39;mini.bracketed&#39;).setup()&lt;/code&gt; to enable its functionality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: if you are on Windows, there might be problems with too long file paths (like &lt;code&gt;error: unable to create file &amp;lt;some file name&amp;gt;: Filename too long&lt;/code&gt;). Try doing one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable corresponding git global config value: &lt;code&gt;git config --system core.longpaths true&lt;/code&gt;. Then try to reinstall.&lt;/li&gt; &#xA; &lt;li&gt;Install plugin in other place with shorter path.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Default config&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- No need to copy this inside `setup()`. Will be used automatically.&#xA;{&#xA;  -- First-level elements are tables describing behavior of a target:&#xA;  --&#xA;  -- - &amp;lt;suffix&amp;gt; - single character suffix. Used after `[` / `]` in mappings.&#xA;  --   For example, with `b` creates `[B`, `[b`, `]b`, `]B` mappings.&#xA;  --   Supply empty string `&#39;&#39;` to not create mappings.&#xA;  --&#xA;  -- - &amp;lt;options&amp;gt; - table overriding target options.&#xA;  --&#xA;  -- See `:h MiniBracketed.config` for more info.&#xA;&#xA;  buffer     = { suffix = &#39;b&#39;, options = {} },&#xA;  comment    = { suffix = &#39;c&#39;, options = {} },&#xA;  conflict   = { suffix = &#39;x&#39;, options = {} },&#xA;  diagnostic = { suffix = &#39;d&#39;, options = {} },&#xA;  file       = { suffix = &#39;f&#39;, options = {} },&#xA;  indent     = { suffix = &#39;i&#39;, options = {} },&#xA;  jump       = { suffix = &#39;j&#39;, options = {} },&#xA;  location   = { suffix = &#39;l&#39;, options = {} },&#xA;  oldfile    = { suffix = &#39;o&#39;, options = {} },&#xA;  quickfix   = { suffix = &#39;q&#39;, options = {} },&#xA;  treesitter = { suffix = &#39;t&#39;, options = {} },&#xA;  undo       = { suffix = &#39;u&#39;, options = {} },&#xA;  window     = { suffix = &#39;w&#39;, options = {} },&#xA;  yank       = { suffix = &#39;y&#39;, options = {} },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Similar plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-unimpaired&#34;&gt;tpope/vim-unimpaired&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>