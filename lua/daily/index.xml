<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-28T01:35:29Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>amzxyz/rime_wanxiang</title>
    <updated>2025-06-28T01:35:29Z</updated>
    <id>tag:github.com,2025-06-28:/amzxyz/rime_wanxiang</id>
    <link href="https://github.com/amzxyz/rime_wanxiang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Rime万象拼音输入方案：标准版与增强版可选，词库基于AI筛选和语料辅助筛选精干高效，配合全新语法模型，输入不再纠结。PRO版本支持8种双拼，7种辅助码，并且可以扩展更多，支持中英混输，内置超级注释、带调全拼输入码显示、快符与重复上屏、手动排序、tips等功能扩展，大大增强使用体验。　　Q群：11033572&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; &#xA;&lt;h1&gt;万象系列方案 &lt;a href=&#34;https://deepwiki.com/amzxyz/rime_wanxiang&#34;&gt;&lt;img src=&#34;https://deepwiki.com/badge.svg?sanitize=true&#34; alt=&#34;Ask DeepWiki&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;万象拼音——基于深度优化的词库和语言模型&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/amzxyz/RIME-LMDG&#34;&gt;万象词库与万象语言模型&lt;/a&gt; 是一种带声调的词库，经过AI和大基数语料筛选、加频，结合语言模型获得更准确的整句输出。还结合了中英文混输，一套词库，多种用法，具体可以点击链接了解优势&lt;/p&gt; &#xA;&lt;h3&gt;优势&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;词库词语全部加音调&lt;/li&gt; &#xA; &lt;li&gt;设计8种辅助码，头部使用全拼编码，可以转化为任何双拼编码 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;词库解码顺序为：全拼拼音；墨奇码；鹤形；自然码；简单鹤；虎码首末；五笔前2；汉心码&lt;/li&gt; &#xA;   &lt;li&gt;因此，万象拼音支持拼音和辅助码任意两两组合&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;总而言之，万象词库中的带声调拼音标注+词组构成+词频是整个万象项目的核心，是使用体验的基石，方案的其它功能皆可自定义，我希望使用者可以基于词库+转写的方式获得输入体验&lt;/strong&gt; &lt;a href=&#34;https://docs.qq.com/smartsheet/DWHZsdnZZaGh5bWJI?viewId=vUQPXH&amp;amp;tab=BB08J2&#34;&gt;万象词库问题收集反馈表&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;效果大赏&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202502200358104987_%E6%95%88%E6%9E%9C.png&#34; alt=&#34;效果.png&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;新手快速入门&lt;/h3&gt; &#xA;&lt;p&gt;不了解rime基础的可以参考友情链接，初步了解rime运行的些许特性：&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.mintimate.cc/zh/guide/installRime.html&#34;&gt;oh my rime&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://xishansnow.github.io/posts/41ac964d.html&#34;&gt;rime参数配置&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;整个rime配置生态都是通的，里面有非常完整的使用方法，(诸如放到哪里、换个皮肤、什么是用户目录。。。)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;友情提示：&lt;/strong&gt; &lt;em&gt;如果你是第一次使用万象，可以不要用你过往经验来定义万象，按如下的步骤将万象跑起来后,，体验一下万象的功能，然后学习一下万象的各项内容之后再考虑。&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;对于新手，使用更新脚本进行安装万象方案，你无需关心路径问题、版本问题，只需要按照脚本提示作选择即可。脚本的下载地址 &lt;a href=&#34;https://github.com/expoli/rime-wanxiang-update-tools&#34;&gt;万象方案更新脚本&lt;/a&gt;。这里以win版本的小狼毫为例，更新脚本为 powershell 的utf-8版本。在使用万象之前，请安装小狼毫，安装小狼毫的过程中，请一切保持默认即可，等你熟悉之后可以自定义。本入门最终会带你一步步设置使用&lt;strong&gt;小鹤双拼+墨奇辅助码&lt;/strong&gt;的方案。&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;下载更新脚本，直接点击上面地址首页的下载链接即可。下载完成后，直接双击运行刚刚下载的ps1脚本。如果杀毒报错，请将你下载的文件恢复后，添加到信任文件。&lt;/li&gt; &#xA; &lt;li&gt;脚本执行后，需要你确认你使用的是全拼还是双拼用户，如果你是全拼用户，请根据提示输入 0 后回车。如果你双拼用户，需要你确认你使用的辅助码类型，默认的万象方案支持汉心、简单鹤、墨奇、虎码、五笔、自然码共计6种辅助码类型。如果没有你想要的辅助码类型，也不要着急，可在熟悉万象之后自定义。根据提示输入你使用的辅助码类型的数字后回车即可。这里我按墨奇辅助码输入。更不要着急怎么选择双拼方案，后面会告诉你的。&lt;/li&gt; &#xA; &lt;li&gt;脚本继续执行，提示选择是否全部更新，不要管，你是新手，直接选全部更新，输入 0 回车。然后就默默的等待脚本执行完后，按任意键退出即可。默认情况下，万象的双拼方案为自然码。&lt;/li&gt; &#xA; &lt;li&gt;现在开始新人激动时刻，&lt;strong&gt;设置双拼方案&lt;/strong&gt;。为了你少走弯路，具体如下：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;①第一种方法：快速开始&lt;/h4&gt; &#xA;&lt;p&gt;由于万象&lt;strong&gt;支持各种演变双拼编码方式&lt;/strong&gt;，所以不能一一列举，且方案文件多了容易混乱。然而，使用rime不可避免的要自定义，故而干脆将选项前置，初始化选择一番就是自己想要的方案，更深的定制再去修改其它地方。对于万象拼音方案文件内部有着详细的说明注释，我认为外部文档不能替代注释，如果你愿意花时间阅读方案文件、并结合功能名介绍和思维导图将能更加深入的了解&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;打开&lt;code&gt;wanxiang.schema.yaml&lt;/code&gt;文件，或者(wanxiang_pro.schema.yaml)表头按照备注提示填写即可，定义属于自己的输入法方案，这里需要注意yaml语法冒号后面的值与冒号之间有个空格，值后面的备注#与值也不能紧挨着&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    #本方案匹配词库解码顺序为：全拼拼音；墨奇；鹤形；自然码；简单鹤；虎码首末；五笔前2；汉心码&#xA;    #############DIY你想要的方案组合,试试搭配一个自然码+墨奇辅助的方案吧！###########################&#xA;set_shuru_schema:              #配置此项就是选择什么输入法,同时拆分反查和中英文混输也将匹配该输入方案&#xA;  __include: 自然码             #可选解码规则有   自然码, 自然龙, 汉心龙, 小鹤双拼, 搜狗双拼, 微软双拼, 智能ABC, 紫光双拼, 国标双拼， 龙三    选择一个填入&#xA;set_algebra_fuzhu:             #配置此项就是选择什么辅助码&#xA;  __include: fuzhu_zrm         #可选辅助码有：fuzhu_kong，fuzhu_hanxin, fuzhu_moqi, fuzhu_flypy, fuzhu_zrm, fuzhu_tiger, fuzhu_wubi    选择一个填入&#xA;set_fuzhu_type:                #直接辅助就是nire/=你，间接辅助就是ni/re=你，区别在于间接辅助不使用/引导的时候就和普通双拼没区别&#xA;  __include: 直接辅助           #可选的有：直接辅助、间接辅助&#xA;set_cn_en:                     #中英混输&#xA;  user_dict: en_dicts/pinyin   #可选的值有：en_dicts/pinyin， en_dicts/zrm， en_dicts/flypy ，en_dicts/mspy， en_dicts/sogou， en_dicts/pinyin&#xA;super_comment:                 # 超级注释模块，子项配置 true 开启，false 关闭&#xA;  candidate_length: 1          # 候选词辅助码提醒的生效长度，0为关闭  但同时清空其它，应当使用上面开关来处理    &#xA;  fuzhu_type: zrm              # 用于匹配对应的辅助码注释显示，基于默认词典的可选注释类型有：moqi, flypy, zrm, jdh, cj, tiger, wubi, hanxin 声调用开关切换&#xA;  corrector_type: &#34;{comment}&#34;  # 换一种显示类型，比如&#34;({comment})&#34; &#xA;__include: octagram            #启用语言模型&#xA;#__include: set_chord_composer  #启用并击处理，不懂得不要开启就是了&#xA;    ########################以下是方案配置######################################################&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;打开 &lt;code&gt;wanxiang_radical.schema.yaml&lt;/code&gt; 和 &lt;code&gt;wanxiang_en.schema.yaml&lt;/code&gt; 表头进行选择，二者情况一致：&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;    ###############选择与之匹配的拼音方案#####################&#xA;set_shuru_schema:&#xA;  __include: 全拼    #可选的选项有（全拼, 自然码, 小鹤双拼, 微软双拼, 搜狗双拼, 智能ABC, 紫光双拼, 拼音加加）&#xA;    ######################################################&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;保存后部署方案即可！&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;②进阶custom patch法（已经尽量为你简化）强烈推荐&lt;/h4&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;如果方法①使用的打字效果你还满意计划长期使用，那么你可以进入这个模式，通过用户的补丁文件对主文件进行更改配置，从而实现在原有的基础上自定义的过程，这样能保证原始包可以直接覆盖升级，不影响你的数据和你的变更；&lt;/li&gt; &#xA; &lt;li&gt;打开用户文件夹，然后打开&lt;strong&gt;custom&lt;/strong&gt;文件夹。&lt;/li&gt; &#xA; &lt;li&gt;打开wanxiang_pro.custom.yaml，找到 &lt;strong&gt;- wanxiang_pro.schema:/小鹤双拼&lt;/strong&gt;，看后面的提示，你可以直接设置你要使用的双拼方案，比如你可以直接改为&lt;strong&gt;自然码&lt;/strong&gt;；&lt;/li&gt; &#xA; &lt;li&gt;打开wanxiang_en.custom.yaml，直接找到 &lt;strong&gt;__include: wanxiang_en.schema:/自然码&lt;/strong&gt; ，然后修改自然码为小鹤双拼。&lt;/li&gt; &#xA; &lt;li&gt;打开wanxiang_radical.custom.yaml，直接找 &lt;strong&gt;__include: wanxiang_radical.schema:/全拼&lt;/strong&gt; ，然后修改全拼为小鹤双拼。&lt;/li&gt; &#xA; &lt;li&gt;上面三个文件设置完成后，将其&lt;strong&gt;复制到用户目录&lt;/strong&gt;里，然后重新部署，完成后就可以使用小鹤双拼+墨奇辅助码了。&lt;/li&gt; &#xA; &lt;li&gt;注意：使用了此方法，方法①就失效了，填写的数据会被这个方法覆盖。其次这个方法给出的示例文件有诸多自定义的地方，每一行详细查阅、理解、修改。&lt;/li&gt; &#xA; &lt;li&gt;更详细参照：&lt;a href=&#34;https://docs.qq.com/doc/DQ0FqSXBmYVpWVFpy?rtkey=&#34;&gt;🚀 Rime 万象拼音输入方案 新手安装配置指南&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;答疑&lt;/h3&gt; &#xA;&lt;h4&gt;为什么词库这么大，我见过只有单字携带辅助码的方案，词库可以缩小吗？&lt;/h4&gt; &#xA;&lt;p&gt;在这里我借助wiki深入阐述一下这个问题并解答这些问题：&lt;a href=&#34;https://github.com/amzxyz/RIME-LMDG/wiki/%E4%B8%87%E8%B1%A1%E8%AF%8D%E5%BA%93PRO%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5&#34;&gt;万象词库PRO的设计理念&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/amzxyz/RIME-LMDG/wiki/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%85%B3%E9%97%AD%E8%B0%83%E9%A2%91%E4%BB%A5%E5%8F%8A%E4%B8%8E%E4%B9%8B%E5%85%B3%E8%81%94%E7%9A%84%E6%8E%AA%E6%96%BD%E6%9C%89%E5%93%AA%E4%BA%9B&#34;&gt;为什么PRO版本默认关闭调频的说明&lt;/a&gt; &lt;code&gt;enable_user_dict: false # 是否开启自动调频，true为开启&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;功能一览&lt;/h3&gt; &#xA;&lt;h4&gt;辅助码&lt;/h4&gt; &#xA;&lt;p&gt;辅助码可以在输入一个确定得拼音后面继续输入一个部首的读音，使得这个字出现在靠前甚至第一位。这种方式易于理解，无须记忆字根，一切基于拼音得基础上。例如：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202407041144502563_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240704121653.png&#34; alt=&#34;截图_选择区域_20240704121653.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;功能1&lt;/strong&gt; &lt;strong&gt;（仅PRO）&lt;/strong&gt; 如果想要 &lt;code&gt;镇&lt;/code&gt; 字显示在前面 那么在本方案下提供两种方式，第一种就是辅助码声母，&lt;code&gt;vf&lt;/code&gt;继续输入&lt;code&gt;j&lt;/code&gt; 也就是金字旁得声母即可出现结果，如果还是出现不了你要的结果，可以输入另外主体字的声母来继续缩小范围。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202407041147131421_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240704121809.png&#34; alt=&#34;截图_选择区域_20240704121809.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;功能2&lt;/strong&gt; 第二种方式是通过反查字库来定位，只是通过不同的方案实现，在输入主要拼音后，通过符号``` 来引导进入反查状态，引导后继续输入&lt;code&gt;jn&lt;/code&gt;金 则包含金的字就会被选出来；&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202407041149125588_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240704121635.png&#34; alt=&#34;截图_选择区域_20240704121635.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;引导后继续输入&lt;code&gt;mu 木&lt;/code&gt;则带&lt;code&gt;木&lt;/code&gt;的字就会被选出来&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202407041149524870_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240704121611.png&#34; alt=&#34;截图_选择区域_20240704121611.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;功能3&lt;/strong&gt; 通过 拼音状态下``〔反查：部件|笔画〕&lt;code&gt;来引导拆字模式 举例 &lt;/code&gt;震` 假设你不认识，你可以通过`雨和辰` 来合并输入，拼音状态输入后，继续输入其它字符字母az会消失如下图，输入 `yu if` 即雨 辰，结果出现了我们要的震字，且给出了辅助码 `y` 和 `i` ，`y`是雨的声母`y`，`i`是辰的声母`ch`，同时通过hspnz分别代表横竖撇捺折，两种类型兼容。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202409280324599355_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240928112256.png&#34; alt=&#34;截图_选择区域_20240928112256.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;功能4&lt;/strong&gt; 句子中间或者单字输入时需要输入全位辅助码时由于与双拼词语重码，因为我们设计的基本辅助码是2位，加上双拼共4位，由于在整句中我们为了整句输入的顺畅，不会将4码聚拢作为优先级较高的选择，这样会在很多时候造成你想打的句子缩成一团变成全辅助码的词汇。此时可以通过追加/的方式使其聚拢，这种方式是由于我们是直接辅助码导致的，如果我们通过一个符号引导辅助码，那么在输入时要每一个都用到符号，而采用这种方式我们只需要在必要的时候使用/节省了输入的按键开支，下面由两个图片说明问题：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202408210142513354_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240821093644.png&#34; alt=&#34;截图_选择区域_20240821093644.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202408210143144721_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20240821093701.png&#34; alt=&#34;截图_选择区域_20240821093701.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;功能5&lt;/strong&gt; 句子中间或者单字输入时需要可以使用更精确的聚拢方式&#34;声调辅助&#34;，7890数字按键代表1234声，轻声归并到4声，在功能4中我们可以在双拼两码后面3个编码的位置任意插入声调与两位辅助码混合使用，就是除了不用斜杠了，我们还顺序自由了，下面由两个图片说明问题：&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202505120222182012_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20250512101814.png&#34; alt=&#34;截图_选择区域_20250512101814.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/20250512022217432_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20250512101752.png&#34; alt=&#34;截图_选择区域_20250512101752.png&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://storage.deepin.org/thread/202505120222163619_%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20250512101713.png&#34; alt=&#34;截图_选择区域_20250512101713.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;其他亮点功能&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;日期、时间、节日、节气、问候模板：&lt;/strong&gt; 可以在按键配置的地方定制引导前缀&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;#时间：osj 或者 /sj&#xA;#日期：orq 或者 /rq&#xA;#农历：onl 或者 /nl&#xA;#星期：oxq 或者 /xq&#xA;#今年第几周：oww 或者 /ww&#xA;#节气：ojq 或者 /jq&#xA;#日期+时间：ors 或者 /rs&#xA;#时间戳：ott 或者 /tt&#xA;#大写N日期：N20250315&#xA;#节日：ojr 或者 /jr&#xA;#问候模板：/day 或者 oday&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Unicode：&lt;/strong&gt; 大写 U 开头，如 U62fc 得到「拼」。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;数字、金额大写：&lt;/strong&gt; 大写 R 开头，如 R1234 得到「一千二百三十四、壹仟贰佰叁拾肆元整」。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;/模式：&lt;/strong&gt; 通过输入 /sx 快捷输入关于“数学”的特殊符号，具体能输入什么可以打开 symbols.yaml学习。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;计算器：&lt;/strong&gt; 通过输入大写V引导继续输入如：V3+5 候选框就会有8和3+5=8，基础功能 &lt;code&gt;+ - * / % ^&lt;/code&gt; 还支持 &lt;code&gt;sin(x) cos(x)&lt;/code&gt; 等众多运算方式 &lt;a href=&#34;https://github.com/gaboolic/rime-shuangpin-fuzhuma/raw/main/md/calc.md&#34;&gt;点击全面学习&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;自动上屏：&lt;/strong&gt; 例如：三位、四位简码唯一时，自动上屏如&lt;code&gt;jjkw岌岌可危&lt;/code&gt; &lt;code&gt;zmhu怎么回事&lt;/code&gt; 。默认未开启，方案文件中&lt;code&gt;speller:&lt;/code&gt;字段下取消注释这两句开启 &lt;code&gt;# auto_select: true # auto_select_pattern: ^[a-z]+/|^[a-df-zA-DF-Z]\w{3}|^e\w{4}&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;错音错字提示：&lt;/strong&gt; 例如：输入&lt;code&gt;gei yu给予&lt;/code&gt;，获得&lt;code&gt;jǐ yǔ&lt;/code&gt;提示，此功能与双拼类型无关全部支持；&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;快符Lua：&lt;/strong&gt; 例如 &lt;code&gt;;q&lt;/code&gt; 通过分号键引导的26字母快速符号自动上屏，双击;;重复上屏候选词；&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;超级tips：&lt;/strong&gt; 支持将表情、化学式、翻译、简码 提示等等你能想到得数据获得提示显示并将通过一个自定义按键直接上屏，默认为“.” 避免了占用候选框，通过Control+t 进行开关；&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;辅助码提示（仅PRO）：&lt;/strong&gt; 任意长度候选词的辅助码提示能力，默认开启1个字的辅助码，可以在方案文件中定义更长的长度。Ctrl+a可以实时在开启辅助码提示、开启声调全拼提示、关闭注释 三个状态循环，Ctrl+c开启拆分辅助提示，优先级高于普通辅助提示；&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;输入码音调显示：&lt;/strong&gt; 通过Ctrl+s可以使得输入码实时动态显示全拼并加音调，这是万象特色功能；&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;用户按需造词（仅PRO）：&lt;/strong&gt; 默认通过&lt;code&gt;``&lt;/code&gt;引导的方式进入用户词自造词模式，继续输入则&lt;code&gt;``&lt;/code&gt;前缀消失，后面打出来的字上屏后完成造词。 pro版本讲究自主可控，由于辅助码的使用在很多时候不熟悉的时候可能会上屏更加异常的词汇或者生僻字，有的用户还不会使用Esc退出输入，而是选择直接敲下空格。按需造词可以有效把控造出的词是有意义的，而且默认靠后，原因简单基本上有意义的高频词万象已经提供，你应该使用辅助码将其前置。&lt;strong&gt;重点&lt;/strong&gt;：在此基础上我们还支持“后触发”当你输入编码后发现没有你要的行业词汇，此时在后面双击&lt;code&gt;``&lt;/code&gt; 就可以在不删除编码的情况下完成造词。还有一个是次选造词，如果次选是你想要的，并且是词库组合成的，上屏就会记录下来。&lt;/p&gt; &#xA;&lt;p&gt;总结一下，造词功能由：①&lt;code&gt;``&lt;/code&gt;起始的主动造词，②&lt;code&gt;``&lt;/code&gt;在编码后面的主动造词，③次选造词。三个特性构成&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;用户词删除：&lt;/strong&gt; 不管什么删除都不能直接作用于固定词典，使用Ctrl+del是rime系统删除用户词,就可以将用户词标记为c&amp;lt;=0，这在rime系统中就表现为不使用，假性删除，如何能真的删除这些词汇，可以通过/del输入编码来触发删除，这是一个危险操作，操作之前需要点击同步触发导出用户词的txt文件，此后我们就能放心使用，整个步骤：①先同步，②输入/del触发清理③重新部署④同步，就可以将清理后的词库恢复到db数据库中。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;手动排序：&lt;/strong&gt; 对选中的候选词操作，使用Ctrl+j向左一步，Ctrl+k向右一步，Ctrl+0(零)移除排序。这是一个试验性功能，使用的时候不能做到灵动的前后交换的感知，建议将个别词汇进行调整即可同一个候选不要超过2个词组。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Tab循环切换音节：&lt;/strong&gt; 当输入多个字词时想要给前面补充辅助码，可以多次按下tab循环切换，这种可能比那些复杂的快捷键好用一些；&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;翻译模式：&lt;/strong&gt; 输入状态按下Ctrl+E快捷键进入翻译模式，原理是opencc查表进行中英文互译，能否翻译取决于词表的丰富度；&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;反查：&lt;/strong&gt; 支持&lt;code&gt;`&lt;/code&gt;引导状态下的显示格式化，同时支持部件组字模式和笔画模式。反查模式不受字符集过滤影响，默认开放大字集,也不受辅助码开关影响，会显示注释，如：功能2相关展示；&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;字符集过滤：&lt;/strong&gt; 默认开启过滤，写在charset.dict.yaml的就是可以通过的字表，默认为8105+𰻞𰻞，如果你想什么字在小字集模式可以通过可以写在这里，配套开关【小、大】，快捷键Ctrl+g&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/amzxyz/rime_wanxiang_pro/raw/main/.github/%E4%B8%87%E8%B1%A1%E8%BE%93%E5%85%A5%E6%96%B9%E6%A1%88.png&#34; alt=&#34;思维导图&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;鸣谢&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;项目英文词库部分来自&#34;&lt;a href=&#34;https://github.com/iDvel/rime-ice&#34;&gt;rime-ice&lt;/a&gt;&#34;&lt;/li&gt; &#xA; &lt;li&gt;拼音标注来自万象词库与语法模型项目，并在该项目下进行鸣谢！&lt;/li&gt; &#xA; &lt;li&gt;感谢网友的热情提报问题，使得模型和词库体验进一步提升。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;赞赏&lt;/h2&gt; &#xA;&lt;p&gt;如果觉得项目好用，可以请AMZ喝咖啡&lt;/p&gt; &#xA;&lt;img alt=&#34;pay&#34; src=&#34;https://raw.githubusercontent.com/amzxyz/rime_wanxiang/main/.github/%E8%B5%9E%E8%B5%8F.jpeg&#34; height=&#34;312&#34; width=&#34;446&#34;&gt;</summary>
  </entry>
</feed>