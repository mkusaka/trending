<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-05-26T01:38:22Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nvim-neotest/neotest</title>
    <updated>2023-05-26T01:38:22Z</updated>
    <id>tag:github.com,2023-05-26:/nvim-neotest/neotest</id>
    <link href="https://github.com/nvim-neotest/neotest" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An extensible framework for interacting with tests within NeoVim.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Neotest&lt;/h1&gt; &#xA;&lt;p&gt;A framework for interacting with tests within NeoVim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24252670/166156510-440d9047-c76e-4967-8c17-944399222645.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is early stage software.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#installation&#34;&gt;Installation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#supported-runners&#34;&gt;Supported Runners&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#consumers&#34;&gt;Consumers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#output-window&#34;&gt;Output Window&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#summary-window&#34;&gt;Summary Window&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#diagnostic-messages&#34;&gt;Diagnostic Messages&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#status-signs&#34;&gt;Status Signs&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#strategies&#34;&gt;Strategies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#writing-adapters&#34;&gt;Writing Adapters&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#parsing-tests&#34;&gt;Parsing tests in a directory&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/nvim-neotest/neotest/master/#collecting-results&#34;&gt;Collecting results&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;:h neotest&lt;/code&gt; for details on neotest is designed and how to interact with it programmatically.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://luarocks.org/modules/nvim-neotest/neotest&#34;&gt;&lt;img src=&#34;https://img.shields.io/luarocks/v/nvim-neotest/neotest?logo=lua&amp;amp;color=purple&#34; alt=&#34;LuaRocks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Neotest uses &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim/&#34;&gt;plenary.nvim&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Most adapters will also require &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Neotest uses the &lt;code&gt;CursorHold&lt;/code&gt; event. This uses the &lt;code&gt;updatetime&lt;/code&gt; setting which is by default very high, and lowering this can lead to excessive writes to disk. It&#39;s recommended to use &lt;a href=&#34;https://github.com/antoinemadec/FixCursorHold.nvim&#34;&gt;https://github.com/antoinemadec/FixCursorHold.nvim&lt;/a&gt; which allows detaching &lt;code&gt;updatetime&lt;/code&gt; from the frequency of the &lt;code&gt;CursorHold&lt;/code&gt; event. The repo claims it is no longer needed but it is still recommended (See &lt;a href=&#34;https://github.com/antoinemadec/FixCursorHold.nvim/issues/13&#34;&gt;this issue&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Install with your favourite package manager alongside nvim-dap&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Shougo/dein.vim&#34;&gt;&lt;strong&gt;dein&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;call dein#add(&#34;nvim-lua/plenary.nvim&#34;)&#xA;call dein#add(&#34;nvim-treesitter/nvim-treesitter&#34;)&#xA;call dein#add(&#34;antoinemadec/FixCursorHold.nvim&#34;)&#xA;call dein#add(&#34;nvim-neotest/neotest&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;&lt;strong&gt;vim-plug&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;nvim-lua/plenary.nvim&#39;&#xA;Plug &#39;nvim-treesitter/nvim-treesitter&#39;&#xA;Plug &#39;antoinemadec/FixCursorHold.nvim&#39;&#xA;Plug &#39;nvim-neotest/neotest&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#34;nvim-neotest/neotest&#34;,&#xA;  requires = {&#xA;    &#34;nvim-lua/plenary.nvim&#34;,&#xA;    &#34;nvim-treesitter/nvim-treesitter&#34;,&#xA;    &#34;antoinemadec/FixCursorHold.nvim&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To get started you will also need to install an adapter for your test runner. See the adapter&#39;s documentation for their specific setup instructions.&lt;/p&gt; &#xA;&lt;h3&gt;Supported Runners&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Test Runner&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Adapter&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pytest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nvim-neotest/neotest-python&#34;&gt;neotest-python&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;python-unittest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nvim-neotest/neotest-python&#34;&gt;neotest-python&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;plenary&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/nvim-neotest/neotest-plenary&#34;&gt;neotest-plenary&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;go&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/akinsho/neotest-go&#34;&gt;neotest-go&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;jest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/haydenmeade/neotest-jest&#34;&gt;neotest-jest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;vitest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/marilari88/neotest-vitest&#34;&gt;neotest-vitest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;playwright&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/thenbe/neotest-playwright&#34;&gt;neotest-playwright&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rspec&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/olimorris/neotest-rspec&#34;&gt;neotest-rspec&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;minitest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/zidhuss/neotest-minitest&#34;&gt;neotest-minitest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dart, flutter&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/sidlatau/neotest-dart&#34;&gt;neotest-dart&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;testthat&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/shunsambongi/neotest-testthat&#34;&gt;neotest-testthat&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;phpunit&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/olimorris/neotest-phpunit&#34;&gt;neotest-phpunit&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;pest&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/theutz/neotest-pest&#34;&gt;neotest-pest&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;rust&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/rouge8/neotest-rust&#34;&gt;neotest-rust&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;elixir&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/jfpedroza/neotest-elixir&#34;&gt;neotest-elixir&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;dotnet&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Issafalcon/neotest-dotnet&#34;&gt;neotest-dotnet&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;scala&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/stevanmilic/neotest-scala&#34;&gt;neotest-scala&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;haskell&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/mrcjkb/neotest-haskell&#34;&gt;neotest-haskell&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;deno&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/MarkEmmons/neotest-deno&#34;&gt;neotest-deno&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For any runner without an adapter you can use &lt;a href=&#34;https://github.com/nvim-neotest/neotest-vim-test&#34;&gt;neotest-vim-test&lt;/a&gt; which supports any runner that vim-test supports. The vim-test adapter does not support some of the more advanced features such as error locations or per-test output. If you&#39;re using the vim-test adapter then install &lt;a href=&#34;https://github.com/vim-test/vim-test/&#34;&gt;vim-test&lt;/a&gt; too.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Provide your adapters and other config to the setup function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;neotest&#34;).setup({&#xA;  adapters = {&#xA;    require(&#34;neotest-python&#34;)({&#xA;      dap = { justMyCode = false },&#xA;    }),&#xA;    require(&#34;neotest-plenary&#34;),&#xA;    require(&#34;neotest-vim-test&#34;)({&#xA;      ignore_file_types = { &#34;python&#34;, &#34;vim&#34;, &#34;lua&#34; },&#xA;    }),&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;:h neotest.Config&lt;/code&gt; for configuration options and &lt;code&gt;:h neotest.setup()&lt;/code&gt; for the default values.&lt;/p&gt; &#xA;&lt;p&gt;It is highly recommended to use &lt;a href=&#34;https://github.com/folke/neodev.nvim&#34;&gt;neodev.nvim&lt;/a&gt; to enable type checking for neotest to get type checking, documentation and autocompletion for all API functions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;neodev&#34;).setup({&#xA;  library = { plugins = { &#34;neotest&#34; }, types = true },&#xA;  ...&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The default icons use &lt;a href=&#34;https://github.com/microsoft/vscode-codicons&#34;&gt;codicons&lt;/a&gt;. It&#39;s recommended to use this &lt;a href=&#34;https://github.com/ChristianChiarulli/neovim-codicons&#34;&gt;fork&lt;/a&gt; which fixes alignment issues for the terminal. If your terminal doesn&#39;t support font fallback and you need to have icons included in your font, you can patch it via &lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts#option-8-patch-your-own-font&#34;&gt;Font Patcher&lt;/a&gt;. There is a simple step by step guide &lt;a href=&#34;https://github.com/mortepau/codicons.nvim#how-to-patch-fonts&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The interface for using neotest is very simple.&lt;/p&gt; &#xA;&lt;p&gt;Run the nearest test&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;neotest&#34;).run.run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run the current file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;neotest&#34;).run.run(vim.fn.expand(&#34;%&#34;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Debug the nearest test (requires nvim-dap and adapter support)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;neotest&#34;).run.run({strategy = &#34;dap&#34;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;code&gt;:h neotest.run.run()&lt;/code&gt; for parameters.&lt;/p&gt; &#xA;&lt;p&gt;Stop the nearest test, see &lt;code&gt;:h neotest.run.stop()&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;neotest&#34;).run.stop()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Attach to the nearest test, see &lt;code&gt;:h neotest.run.attach()&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;neotest&#34;).run.attach()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Consumers&lt;/h2&gt; &#xA;&lt;p&gt;For extra features neotest provides consumers which interact with the state of the tests and their results.&lt;/p&gt; &#xA;&lt;p&gt;Some consumers will be passive while others can be interacted with.&lt;/p&gt; &#xA;&lt;h3&gt;Output Window&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:h neotest.output&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Displays output of tests &lt;img src=&#34;https://user-images.githubusercontent.com/24252670/166143146-e7821fe9-c11c-4e21-9cc0-73989b51e8ed.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Displays per-test output &lt;img src=&#34;https://user-images.githubusercontent.com/24252670/166143189-0f51b544-3aec-4cfc-93d7-74f3d209aef6.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Output Panel&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:h neotest.output_panel&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Records all output of tests over time in a single window &lt;img src=&#34;https://user-images.githubusercontent.com/24252670/201535290-d726c781-a780-4318-b595-a10832b9f191.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Summary Window&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:h neotest.summary&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Displays test suite structure from project root. &lt;img src=&#34;https://user-images.githubusercontent.com/24252670/166143333-df8b409f-d6f3-4d3d-a676-5f8a4a4cb8bb.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Provides mappings for running, attaching, stopping and showing output.&lt;/p&gt; &#xA;&lt;h3&gt;Diagnostic Messages&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:h neotest.diagnostic&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Use vim.diagnostic to display error messages where they occur while running.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24252670/166143466-0fdea24c-6f0a-4199-9026-66f89d7d1dbc.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Status Signs&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;:h neotest.status&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Displays the status of a test/namespace beside the beginning of the definition.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24252670/166143402-b318ef91-c053-4973-b929-5ee97572f2c2.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Strategies&lt;/h2&gt; &#xA;&lt;p&gt;Strategies are methods of running tests. They provide the functionality to attach to running processes and so attaching will mean different things for different strategies.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;integrated&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Default strategy that will run a process in the background and allow opening a floating terminal to attach.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;dap&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Uses nvim-dap to debug tests (adapter must support providing an nvim-dap configuration)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Custom strategies can implemented by providing a function which takes a &lt;code&gt;neotest.RunSpec&lt;/code&gt; and returns an table that fits the &lt;code&gt;neotest.Process&lt;/code&gt; interface. Plenary&#39;s async library can be used to run asynchronously.&lt;/p&gt; &#xA;&lt;h2&gt;Writing Adapters&lt;/h2&gt; &#xA;&lt;p&gt;This section is for people wishing to develop their own neotest adapters. The documentation here and the underlying libraries are WIP and open to feedback/change. Please raise issues with any problems understanding or using the this doc. The best place to figure out how to create an adapter is by looking at the existing ones.&lt;/p&gt; &#xA;&lt;p&gt;Adapters must fulfill an interface to run (defined &lt;a href=&#34;https://github.com/nvim-neotest/neotest/raw/master/lua/neotest/adapters/interface.lua&#34;&gt;here&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Much of the functionality is built around using a custom tree object that defines the structure of the test suite. There are helpers that adapters can use within their code (all defined under &lt;code&gt;neotest.lib&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Adapters must solve three problems:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Parse tests&lt;/li&gt; &#xA; &lt;li&gt;Construct test commands&lt;/li&gt; &#xA; &lt;li&gt;Collect results&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Parsing Tests&lt;/h3&gt; &#xA;&lt;p&gt;There are two stages to this, finding files which is often a simple file name check (it&#39;s OK if a test file has no actual tests in it) and parsing test files.&lt;/p&gt; &#xA;&lt;p&gt;For languages supported by nvim-treesitter, the easiest way to parse tests is to use the neotest treesitter wrapper to parse a query to constuct a tree structure.&lt;/p&gt; &#xA;&lt;p&gt;The query can define capture groups for tests and namespaces. Each type must have &lt;code&gt;&amp;lt;type&amp;gt;.name&lt;/code&gt; and &lt;code&gt;&amp;lt;type&amp;gt;.definition&lt;/code&gt; capture groups. They can be used multiple times in the query&lt;/p&gt; &#xA;&lt;p&gt;Example from neotest-plenary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local lib = require(&#34;neotest.lib&#34;)&#xA;&#xA;function PlenaryNeotestAdapter.discover_positions(path)&#xA;  local query = [[&#xA;  ;; describe blocks&#xA;  ((function_call&#xA;      name: (identifier) @func_name (#match? @func_name &#34;^describe$&#34;)&#xA;      arguments: (arguments (_) @namespace.name (function_definition))&#xA;  )) @namespace.definition&#xA;&#xA;&#xA;  ;; it blocks&#xA;  ((function_call&#xA;      name: (identifier) @func_name&#xA;      arguments: (arguments (_) @test.name (function_definition))&#xA;  ) (#match? @func_name &#34;^it$&#34;)) @test.definition&#xA;&#xA;  ;; async it blocks (async.it)&#xA;  ((function_call&#xA;      name: (&#xA;        dot_index_expression&#xA;          field: (identifier) @func_name&#xA;      )&#xA;      arguments: (arguments (_) @test.name (function_definition))&#xA;    ) (#match? @func_name &#34;^it$&#34;)) @test.definition&#xA;    ]]&#xA;  return lib.treesitter.parse_positions(path, query, { nested_namespaces = true })&#xA;end&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For languages unsupported by treesitter you can use regexes like neotest-vim-test or hook into the test runner.&lt;/p&gt; &#xA;&lt;h3&gt;Constructing Test Commands&lt;/h3&gt; &#xA;&lt;p&gt;This is the easiest part of writing an adapter. You need to handle the different types of positions that a user may run (directiory, file, namespace and test).&lt;/p&gt; &#xA;&lt;p&gt;If you are hooking into the runner, you may not be running the test runner command directly. neotest-python and neotest-plenary both are examples of this, with a script being used to run each runner to handle parsing results and storing them for result collection later.&lt;/p&gt; &#xA;&lt;h3&gt;Collecting Results&lt;/h3&gt; &#xA;&lt;p&gt;Collecting results will be the most involved process in the adapter, with complexity depending on the test runner and desired features.&lt;/p&gt; &#xA;&lt;p&gt;For the most basic implementation an adapter can choose to only run tests individually and use the exit code as an indicator of the result (this is how neotest-vim-test works) but this impacts peformance and also loses out on more advanced features.&lt;/p&gt; &#xA;&lt;p&gt;If tests can be run together then the adapter must provide results for at least each individual test. Results for namespaces, files and directories will be inferred from their child tests.&lt;/p&gt; &#xA;&lt;p&gt;For collecting test specific error messages, error locations etc you&#39;ll need to parse output or hook into the runner. See neotest-python and neotest-plenary for examples on how this can be done.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Zygahedron/Starbecue</title>
    <updated>2023-05-26T01:38:22Z</updated>
    <id>tag:github.com,2023-05-26:/Zygahedron/Starbecue</id>
    <link href="https://github.com/Zygahedron/Starbecue" rel="alternate"></link>
    <summary type="html">&lt;p&gt;fishcat&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Starbecue&lt;/h1&gt; &#xA;&lt;p&gt;if you have a question check &lt;a href=&#34;https://github.com/Zygahedron/Starbecue/wiki/F.A.Q.&#34;&gt;the FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;To install simply visit the &lt;a href=&#34;https://github.com/Zygahedron/Starbecue/releases&#34;&gt;releases page&lt;/a&gt;, download the latest one (the .pak files), and put them in your Starbound mods folder.&lt;/p&gt; &#xA;&lt;p&gt;This mod Requires &lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2512589532&#34;&gt;Stardust Core Lite&lt;/a&gt; or &lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=764887546&#34;&gt;Stardust Core&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, if you want the latest and greatest changes, download this repo as a zip and extract in your starbound mods folder, or better yet, use git to clone it there so that you can update it more easily. Just be warned that things won&#39;t always be perfectly stable. And likely will also require the library &lt;a href=&#34;https://github.com/WasabiRaptor/starboundSpeciesAnimOverrides&#34;&gt;Species Anim Overrides&lt;/a&gt; to be installed as well, be aware that when installing the mods like this, things are much more likely to be unstable! keep to the &lt;a href=&#34;https://github.com/Zygahedron/Starbecue/releases&#34;&gt;releases page&lt;/a&gt; if you want stable versions.&lt;/p&gt; &#xA;&lt;p&gt;While not required it is recommended you install the Monster Config Core Loader mods found &lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2442860690&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2442873217&#34;&gt;here&lt;/a&gt;, if you&#39;re using Stardust Core then you should get &lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2690363974&#34;&gt;this&lt;/a&gt; and if you&#39;re using FU you&#39;ll also need &lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2442880727&#34;&gt;this&lt;/a&gt; because it should fix potential compatibility issues.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To get started with the mod, all you need to do is open your crafting interface, and craft a &lt;strong&gt;Vore Controller&lt;/strong&gt;. When holding it in hand, hold shift and up to see your avalable actions, click to select one and assign it to the controller perform the action.&lt;/p&gt; &#xA;&lt;p&gt;After you have an assigned vore controller, you can click it to activate &lt;strong&gt;Vore mode&lt;/strong&gt; and then click on things to vore them, you may notice your player character jitter slightly on activation, this is normal. While in vore mode you will have a hud in the bottom right to show you your prey and belly effects, if you click the gear you can get more settings to enable or diable other vore types as well as being prey, you can access the same menu via the quickbar as well even when not in vore mode.&lt;/p&gt; &#xA;&lt;p&gt;The settings panel also has ingame help information, click on any of the book tabs to get information about the mod.&lt;/p&gt; &#xA;&lt;p&gt;To exit &lt;strong&gt;Vore More&lt;/strong&gt; one simply needs to release all their prey, at which point, the &lt;strong&gt;Let Out&lt;/strong&gt; action will become an &lt;strong&gt;X&lt;/strong&gt; which can de-activate vore mode.&lt;/p&gt; &#xA;&lt;p&gt;Races which are supported in &lt;strong&gt;Vore Mode&lt;/strong&gt; are listed down below, unsupported races will still be able to use the controllers, but will not have any vore sprites, or they might not display at all.&lt;/p&gt; &#xA;&lt;p&gt;More content can be found via discovering &lt;strong&gt;Auri&#39;s Shop&lt;/strong&gt; which you can get to via some mysterious fireplaces you might find on lush planets, they look like this: &lt;img src=&#34;https://raw.githubusercontent.com/Zygahedron/Starbecue/master/fireplace.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zygahedron/Starbecue/master/vehicles/sbq/sbqVaporeon/sbqVaporeon.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zygahedron/Starbecue/master/vehicles/sbq/sbqEgg/sbqEgg.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zygahedron/Starbecue/master/vehicles/sbq/sbqSlime/sbqSlime.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zygahedron/Starbecue/master/vehicles/sbq/sbqXeronious/sbqXeronious.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zygahedron/Starbecue/master/vehicles/sbq/sbqAvian/sbqAvian.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zygahedron/Starbecue/master/vehicles/sbq/sbqZiellekDragon/sbqZiellekDragon.png&#34; alt=&#34;&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Zygahedron/Starbecue/master/vehicles/sbq/sbqFray_IcyVixen/sbqFray_IcyVixen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Playable Predator transformation&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Vaporeon&lt;/li&gt; &#xA; &lt;li&gt;(Kaiju) Xeronious&lt;/li&gt; &#xA; &lt;li&gt;Avian&lt;/li&gt; &#xA; &lt;li&gt;Slime&lt;/li&gt; &#xA; &lt;li&gt;Ziellek Dragon&lt;/li&gt; &#xA; &lt;li&gt;Fray the Vulpix&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Player/NPC Predator species&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Human&lt;/li&gt; &#xA; &lt;li&gt;Hylotl&lt;/li&gt; &#xA; &lt;li&gt;Floran&lt;/li&gt; &#xA; &lt;li&gt;Avian&lt;/li&gt; &#xA; &lt;li&gt;Apex&lt;/li&gt; &#xA; &lt;li&gt;Glitch&lt;/li&gt; &#xA; &lt;li&gt;Novakid&lt;/li&gt; &#xA; &lt;li&gt;Fenerox&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=729558042&#34;&gt;Avali&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1386730092&#34;&gt;Novali&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1356955138&#34;&gt;Lucario&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1800401078&#34;&gt;Lycanroc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1405822108&#34;&gt;Eevee&lt;/a&gt; (GalaxyFoxes)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1266991719&#34;&gt;Eevee&lt;/a&gt; (Remade)&lt;/li&gt; &#xA; &lt;li&gt;Vaporeon&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=730345787&#34;&gt;Umbreon&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2843385916&#34;&gt;Sylveonoid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2260578148&#34;&gt;Braixen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2260578148&#34;&gt;Delphox&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2811625141&#34;&gt;Zoroark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/workshop/filedetails/?id=2813977483&#34;&gt;Hisui Zoroark&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1197335162&#34;&gt;Crylan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Zygahedron/StarboundSimpleVoreMod&#34;&gt;Rodent&lt;/a&gt; (Sheights&#39; version of SSVM is broken, this is a fixed fork)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1360547769&#34;&gt;Lyceen&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1818502101&#34;&gt;Latex&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1405822108&#34;&gt;Elysian&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1405822108&#34;&gt;Fennix&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=729429063&#34;&gt;Felin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1370154570&#34;&gt;Draconis&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1226150792&#34;&gt;Draconis&lt;/a&gt; (Full Dragon Reskin)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1655860448&#34;&gt;Gnolls&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=740694177&#34;&gt;Argonians&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1420856270&#34;&gt;Sergals&lt;/a&gt; (Most reskins should work too)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=729597107&#34;&gt;Familiars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1307942879&#34;&gt;Vulpes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=767787220&#34;&gt;Kazdra&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=729480149&#34;&gt;Elduukhar&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=797166006&#34;&gt;Attarran&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2611501999&#34;&gt;Neki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=1380941596&#34;&gt;Lastree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2207290706&#34;&gt;Synth&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=732452461&#34;&gt;Bunnykin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.furaffinity.net/view/47517002/&#34;&gt;Yharian&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This mod includes no assets from the respective modded races, modified or not, meaning said modded race &lt;em&gt;must&lt;/em&gt; be installed to access its content&lt;/p&gt; &#xA;&lt;h3&gt;NPC Vore Tenants&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Zevi (Pred/Prey) Zygahedron&lt;/li&gt; &#xA; &lt;li&gt;Socks Flareon (Pred/Prey) LokiVulpix&lt;/li&gt; &#xA; &lt;li&gt;Helena hellhound (Pred/Prey) FFWizard&lt;/li&gt; &#xA; &lt;li&gt;Sandy Floatporeon (Pred/Prey) Fevix&lt;/li&gt; &#xA; &lt;li&gt;Blue the Synth (Pred/Prey) Blueninja (requires &lt;a href=&#34;https://steamcommunity.com/sharedfiles/filedetails/?id=2207290706&#34;&gt;Synth&lt;/a&gt; mod )&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other Things&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;TF Dart Gun&lt;/li&gt; &#xA; &lt;li&gt;Shrink Ray&lt;/li&gt; &#xA; &lt;li&gt;Egg&lt;/li&gt; &#xA; &lt;li&gt;Plastic Egg&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Playable Predator Info&lt;/h1&gt; &#xA;&lt;p&gt;Special potions can be purchased from Auri&#39;s shop which can transform you into large predators, and grants you a head tech that allows you to choose which one you wish to transform into if you&#39;ve unlocked multiple.&lt;/p&gt; &#xA;&lt;p&gt;Full use of this system requires you to bind Tech Action 2 and 3 in the options if they aren&#39;t already bound. We recommend the G and H keyes respectively, because they&#39;re right by F, and that&#39;s what they were back in really old versions of the game when they were actually used in vanilla.&lt;/p&gt; &#xA;&lt;p&gt;When turning into a predator you will be given a controller item, this is required for the predator transformation to detect some keys being pressed, such as Shift, as well as pass some more data to the vehicle that it cannot detect without it.&lt;/p&gt; &#xA;&lt;p&gt;Tapping Shift+Up with a controller allows you to bring up the action wheel, at the bottom you will be able to let out the most recently eaten prey, or despawn the predator transformation, you can also choose to assign a vore action to that controller to be performed on that controller&#39;s click, or choose to perform a prey action on prey you&#39;ve already consumed, different locations in your body may have unique actions. A pred might also have some vore actions that are available in some states but not others, clicking with a controller with an assigned action that the pred does not have will not result in anything.&lt;/p&gt; &#xA;&lt;p&gt;Most predators will have the same movement controls a player would, but tapping movment keys can be used to transition between different poses, like standing or sitting or sleeping, etc.&lt;/p&gt; &#xA;&lt;p&gt;To let people out that you previously ate, either use the letout action on your controller, or if you are in a large transformation simply press Tech Action 2 (G) to let out the most recent that can be let out.&lt;/p&gt; &#xA;&lt;p&gt;In the bottom right you will have a HUD to show what occupants you&#39;ve eaten, as well as your current belly effect, this can be used to quickly change the effect, as well as access the settings quickly, and peform actions on the prey by clicking on them, such as letting them out, turbo digesting them, or predator specific actions, like transforming them.&lt;/p&gt; &#xA;&lt;h1&gt;Prey Info&lt;/h1&gt; &#xA;&lt;p&gt;Whether you are being eaten by a object predator, or a player transformed into a predator, as prey you will have a HUD in the bottom right, this indicates which directions you can struggle to cause the predator to do something.&lt;/p&gt; &#xA;&lt;p&gt;For player controlled predators, most struggles are disabled so that player is in full control of their state, but if they are in a state where an escape is available, you may be able to struggle out still, but it is possible for them to disable being able to escape entirely in their settings.&lt;/p&gt; &#xA;&lt;h4&gt;Red&lt;/h4&gt; &#xA;&lt;p&gt;indicates a direction in which you could escape, such as out the mouth or butt, your prey settings do not impact whether the arrow appears or not, but they do effect whether you can actally escape, a red arrow may indicate an anal vore escape, but if it isn&#39;t enabled in your settings, struggling that direction will not do anything.&lt;/p&gt; &#xA;&lt;h4&gt;Blue&lt;/h4&gt; &#xA;&lt;p&gt;Indicates a state change, such as making the predator stand up or sit down.&lt;/p&gt; &#xA;&lt;h4&gt;Green&lt;/h4&gt; &#xA;&lt;p&gt;Indicates a state change, but only for state changes that would bring you closer to a state you can escape from.&lt;/p&gt; &#xA;&lt;h4&gt;Cyan&lt;/h4&gt; &#xA;&lt;p&gt;Indicates a direction that would move you to another location within the predator&#39;s body.&lt;/p&gt; &#xA;&lt;h4&gt;Yellow&lt;/h4&gt; &#xA;&lt;p&gt;Indicates a direction that would cause you to get eaten, only appears if you&#39;re just being held or hugged.&lt;/p&gt; &#xA;&lt;h1&gt;Settings&lt;/h1&gt; &#xA;&lt;p&gt;The settings menu can be accessed from the quickbar, or from the predator HUD.&lt;/p&gt; &#xA;&lt;h4&gt;Pred Tab&lt;/h4&gt; &#xA;&lt;p&gt;The Settings menu will open to the Global Pred settings tab by default, these settings effect how you will perform as a predator.&lt;/p&gt; &#xA;&lt;p&gt;The belly effect names are self explanitory, the rate at which they work is effected by your attack power.&lt;/p&gt; &#xA;&lt;p&gt;Escape modifier controls the difficulty of your prey being able to escape if you&#39;re in a state they can escape from&lt;/p&gt; &#xA;&lt;p&gt;Display DoT effects causes the prey to emit numbers based on damage being taken.&lt;/p&gt; &#xA;&lt;p&gt;Belly Sounds controls whether your belly will be silent or emit gurgles.&lt;/p&gt; &#xA;&lt;h4&gt;Prey Tab&lt;/h4&gt; &#xA;&lt;p&gt;Some people don&#39;t like certain kinds of vore, some people don&#39;t like vore at all! but they still might want to play games with other people who do, and this is meant to make that much easier.&lt;/p&gt; &#xA;&lt;p&gt;Players can use the quickbar to access Starbecue&#39;s settings, the prey tab brings up a window with a bunch of checkboxes, this allows you to opt in and out of what types of vore can be done to you, check it if you&#39;re ok being prey for it, uncheck if you aren&#39;t, if you don&#39;t want to be prey at all just uncheck the &#34;Prey Enabled&#34; at the bottom of the menu, which overrides all the others.&lt;/p&gt; &#xA;&lt;p&gt;Currently this does not affect whether any other vore mods can or can&#39;t perform vore on the player.&lt;/p&gt; &#xA;&lt;h1&gt;Support Us!&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.patreon.com/LokiVulpix&#34;&gt;https://www.patreon.com/LokiVulpix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Vote on what should be the next feature worked on!&lt;/p&gt; &#xA;&lt;h2&gt;Main Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Zygan (Zygahedron)&lt;/h3&gt; &#xA;&lt;p&gt;Artist, Lua scripting and debugging.&lt;/p&gt; &#xA;&lt;h3&gt;LokiVulpix / Wasabi_Raptor&lt;/h3&gt; &#xA;&lt;p&gt;Artist, Lua scripting and debugging.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;I take commissions! contact me if I am open!&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.furaffinity.net/user/lokithevulpix/&#34;&gt;https://www.furaffinity.net/user/lokithevulpix/&lt;/a&gt; &lt;a href=&#34;https://twitter.com/LokiVulpix&#34;&gt;https://twitter.com/LokiVulpix&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Do Not Ask/Contact&lt;/h2&gt; &#xA;&lt;p&gt;People who were previously asked about compatibilty and requested not to be contacted further&lt;/p&gt; &#xA;&lt;p&gt;Bun (Protogen Race Mod)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There is to be no compatibility&lt;/li&gt; &#xA; &lt;li&gt;Nobody is to extract assets to modify&lt;/li&gt; &#xA; &lt;li&gt;Do not contact or ask further&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Crescent (Crylan Race Mod)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Permission granted to use assets&lt;/li&gt; &#xA; &lt;li&gt;Do not contact or ask further&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>m4xshen/hardtime.nvim</title>
    <updated>2023-05-26T01:38:22Z</updated>
    <id>tag:github.com,2023-05-26:/m4xshen/hardtime.nvim</id>
    <link href="https://github.com/m4xshen/hardtime.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Neovim plugin helping you establish good command workflow and habit&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; hardtime.nvim &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/m4xshen/hardtime.nvim/stargazers&#34;&gt; &lt;img alt=&#34;Stargazers&#34; src=&#34;https://img.shields.io/github/stars/m4xshen/hardtime.nvim?style=for-the-badge&amp;amp;logo=starship&amp;amp;color=fae3b0&amp;amp;logoColor=d9e0ee&amp;amp;labelColor=282a36&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/m4xshen/hardtime.nvim/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/m4xshen/hardtime.nvim?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;color=ddb6f2&amp;amp;logoColor=d9e0ee&amp;amp;labelColor=282a36&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/m4xshen/hardtime.nvim/contributors&#34;&gt; &lt;img alt=&#34;Contributors&#34; src=&#34;https://img.shields.io/github/contributors/m4xshen/hardtime.nvim?style=for-the-badge&amp;amp;logo=opensourceinitiative&amp;amp;color=abe9b3&amp;amp;logoColor=d9e0ee&amp;amp;labelColor=282a36&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;📃 Introduction&lt;/h2&gt; &#xA;&lt;p&gt;A Neovim plugin helping you establish good command workflow and habit&lt;/p&gt; &#xA;&lt;h2&gt;⚙️ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Block repeated &lt;code&gt;k&lt;/code&gt; &lt;code&gt;j&lt;/code&gt; &lt;code&gt;h&lt;/code&gt; &lt;code&gt;l&lt;/code&gt; within a period of time&lt;/li&gt; &#xA; &lt;li&gt;Print hint about better command eg: Use &lt;code&gt;C&lt;/code&gt; instead of &lt;code&gt;c$&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Recommended workflow:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Avoid using arrow keys and the mouse.&lt;/li&gt; &#xA; &lt;li&gt;Use relative jump (eg: &lt;code&gt;5k&lt;/code&gt; &lt;code&gt;12j&lt;/code&gt;) for vertical movement within the screen.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;CTRL-U&lt;/code&gt; &lt;code&gt;CTRL-D&lt;/code&gt; &lt;code&gt;CTRL-B&lt;/code&gt; &lt;code&gt;CTRL-F&lt;/code&gt; &lt;code&gt;gg&lt;/code&gt; &lt;code&gt;G&lt;/code&gt; for vertical movement outside the screen.&lt;/li&gt; &#xA; &lt;li&gt;Use word-motion (&lt;code&gt;w&lt;/code&gt; &lt;code&gt;W&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; &lt;code&gt;B&lt;/code&gt; &lt;code&gt;e&lt;/code&gt; &lt;code&gt;E&lt;/code&gt; &lt;code&gt;ge&lt;/code&gt; &lt;code&gt;gE&lt;/code&gt;) for short-distance horizontal movement.&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;f&lt;/code&gt; &lt;code&gt;F&lt;/code&gt; &lt;code&gt;t&lt;/code&gt; &lt;code&gt;T&lt;/code&gt; &lt;code&gt;0&lt;/code&gt; &lt;code&gt;^&lt;/code&gt; &lt;code&gt;$&lt;/code&gt; &lt;code&gt;,&lt;/code&gt; &lt;code&gt;;&lt;/code&gt; for medium to long-distance horizontal movement.&lt;/li&gt; &#xA; &lt;li&gt;Use operator + motion/text-object (eg: &lt;code&gt;ci{&lt;/code&gt; &lt;code&gt;y5j&lt;/code&gt; &lt;code&gt;dap&lt;/code&gt;) whenever possible.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Learn more in this &lt;a href=&#34;https://m4xshen.me/posts/vim-command-workflow/&#34;&gt;blog post&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;⚡ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= &lt;a href=&#34;https://github.com/neovim/neovim/releases/tag/v0.7.0&#34;&gt;v0.7.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 Installation&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install via your favorite package manager.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Lua&#34;&gt;{&#xA;  &#34;m4xshen/hardtime.nvim&#34;,&#xA;  opts = {}&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Lua&#34;&gt;use &#34;m4xshen/hardtime.nvim&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-VimL&#34;&gt;Plug &#34;m4xshen/hardtime.nvim&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Setup the plugin in your &lt;code&gt;init.lua&lt;/code&gt;. This step is not needed with lazy.nvim if &lt;code&gt;opts&lt;/code&gt; is set as above.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Lua&#34;&gt;require(&#34;hardtime&#34;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 Configuration&lt;/h2&gt; &#xA;&lt;p&gt;You can pass your config table into the &lt;code&gt;setup()&lt;/code&gt; function or &lt;code&gt;opts&lt;/code&gt; if you use lazy.nvim.&lt;/p&gt; &#xA;&lt;h3&gt;Options&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;max_time&lt;/code&gt; (number): Maximum time (in milliseconds) to consider key presses as repeated.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;max_count&lt;/code&gt; (number): Maximum count of repeated key presses allowed within the &lt;code&gt;max_time&lt;/code&gt; period.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;disable_mouse&lt;/code&gt; (boolean): Disable mouse support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hint&lt;/code&gt; (boolean): Enable hint messages for better commands.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;allow_different_key&lt;/code&gt; (boolean): Allow different keys to reset the count.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;resetting_keys&lt;/code&gt; (table of strings): Keys that reset the count.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;restricted_keys&lt;/code&gt; (table of strings): Keys triggering the count mechanism.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;hint_keys&lt;/code&gt; (table of strings): Keys that trigger hint messages.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Default config&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Lua&#34;&gt;local config = {&#xA;   max_time = 1000,&#xA;   max_count = 2,&#xA;   disable_mouse = true,&#xA;   hint = true,&#xA;   allow_different_key = false,&#xA;   resetting_keys = { &#34;0&#34;, &#34;1&#34;, &#34;2&#34;, &#34;3&#34;, &#34;4&#34;, &#34;5&#34;, &#34;6&#34;, &#34;7&#34;, &#34;8&#34;, &#34;9&#34;, &#34;c&#34;, &#34;d&#34;, &#34;x&#34;, &#34;X&#34;, &#34;p&#34;, &#34;P&#34; },&#xA;   restricted_keys = { &#34;h&#34;, &#34;j&#34;, &#34;k&#34;, &#34;l&#34;, &#34;-&#34;, &#34;+&#34;, &#34;&amp;lt;UP&amp;gt;&#34;, &#34;&amp;lt;DOWN&amp;gt;&#34;, &#34;&amp;lt;LEFT&amp;gt;&#34;, &#34;&amp;lt;RIGHT&amp;gt;&#34; },&#xA;   hint_keys = { &#34;k&#34;, &#34;j&#34;, &#34;^&#34;, &#34;$&#34;, &#34;a&#34;, &#34;i&#34;, &#34;d&#34;, &#34;y&#34;, &#34;c&#34;, &#34;l&#34; },&#xA;   disabled_keys = { &#34;&amp;lt;UP&amp;gt;&#34;, &#34;&amp;lt;DOWN&amp;gt;&#34;, &#34;&amp;lt;LEFT&amp;gt;&#34;, &#34;&amp;lt;RIGHT&amp;gt;&#34; },&#xA;   disabled_filetypes = { &#34;qf&#34;, &#34;netrw&#34;, &#34;NvimTree&#34;, &#34;lazy&#34;, &#34;mason&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>