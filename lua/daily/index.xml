<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-17T01:47:07Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iLLeniumStudios/fivem-appearance</title>
    <updated>2022-06-17T01:47:07Z</updated>
    <id>tag:github.com,2022-06-17:/iLLeniumStudios/fivem-appearance</id>
    <link href="https://github.com/iLLeniumStudios/fivem-appearance" rel="alternate"></link>
    <summary type="html">&lt;p&gt;fivem-appearance for qb-core with Tattoos support&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fivem-appearance&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/iLLeniumStudios/fivem-appearance/actions/workflows/lint.yml&#34;&gt;&lt;img src=&#34;https://github.com/iLLeniumStudios/fivem-appearance/actions/workflows/lint.yml/badge.svg?branch=main&#34; alt=&#34;Lint&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A replacement for qb-clothing and other clothing resources for qb-core&lt;/p&gt; &#xA;&lt;img src=&#34;https://i.imgur.com/ltLSMmh.png&#34; alt=&#34;fivem-appearance with Tattoos&#34;&gt; &#xA;&lt;p&gt;Discord: &lt;a href=&#34;https://discord.gg/ZVJEkjUTkx&#34;&gt;https://discord.gg/ZVJEkjUTkx&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mkafrin/PolyZone&#34;&gt;PolyZone&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-core&#34;&gt;qb-core&lt;/a&gt; (Latest)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-menu&#34;&gt;qb-menu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-input&#34;&gt;qb-input&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/BerkieBb/qb-target&#34;&gt;qb-target&lt;/a&gt; (Optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Everything from standalone fivem-appearance&lt;/li&gt; &#xA; &lt;li&gt;Player outfits&lt;/li&gt; &#xA; &lt;li&gt;Rank based Clothing Rooms for Jobs / Gangs&lt;/li&gt; &#xA; &lt;li&gt;Tattoo&#39;s Support&lt;/li&gt; &#xA; &lt;li&gt;Hair Textures&lt;/li&gt; &#xA; &lt;li&gt;Polyzone Support&lt;/li&gt; &#xA; &lt;li&gt;Ped Menu command (/pedmenu) (Configurable)&lt;/li&gt; &#xA; &lt;li&gt;Reload Skin command (/reloadskin)&lt;/li&gt; &#xA; &lt;li&gt;Improved code quality&lt;/li&gt; &#xA; &lt;li&gt;Plastic Surgeons&lt;/li&gt; &#xA; &lt;li&gt;qb-target Support&lt;/li&gt; &#xA; &lt;li&gt;Skin migration support (qb-clothing / old fivem-appearance)&lt;/li&gt; &#xA; &lt;li&gt;Player specific outfit locations (Restricted via CitizenID)&lt;/li&gt; &#xA; &lt;li&gt;Makeup Secondary Color&lt;/li&gt; &#xA; &lt;li&gt;QBCore Theme&lt;/li&gt; &#xA; &lt;li&gt;Component &amp;amp; Props Blacklist support&lt;/li&gt; &#xA; &lt;li&gt;Limit Components &amp;amp; Props to certain Jobs / Gangs&lt;/li&gt; &#xA; &lt;li&gt;Persist Job / Gang Clothes on reconnects / logout&lt;/li&gt; &#xA; &lt;li&gt;Themes Support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;New Preview (with Tattoos)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://streamable.com/qev2h7&#34;&gt;https://streamable.com/qev2h7&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Delete / stop &lt;code&gt;qb-clothing&lt;/code&gt; from youre resources folder&lt;/li&gt; &#xA; &lt;li&gt;Delete / stop any tattoo shop resources e.g., &lt;code&gt;qb-tattooshop&lt;/code&gt; from your resources folder&lt;/li&gt; &#xA; &lt;li&gt;Put &lt;code&gt;setr fivem-appearance:locale &#34;en&#34;&lt;/code&gt; in your server.cfg&lt;/li&gt; &#xA; &lt;li&gt;Put &lt;code&gt;ensure fivem-appearance&lt;/code&gt; in your server.cfg&lt;/li&gt; &#xA; &lt;li&gt;Delete the table &lt;code&gt;player_outfits&lt;/code&gt; from your database&lt;/li&gt; &#xA; &lt;li&gt;Apply the SQL file located &lt;a href=&#34;https://raw.githubusercontent.com/iLLeniumStudios/fivem-appearance/main/sql/player_outfits.sql&#34;&gt;here&lt;/a&gt; to your database to have the new &lt;code&gt;player_outfits&lt;/code&gt; table created&lt;/li&gt; &#xA; &lt;li&gt;If you want to configure qb-multicharacter, follow the corresponding guide for your version &lt;a href=&#34;https://raw.githubusercontent.com/iLLeniumStudios/fivem-appearance/main/docs/multicharacter-setup.md&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Restart your server&lt;/li&gt; &#xA; &lt;li&gt;Follow the respective guide below based on your older version of clothing resource (qb-clothing / fivem-appearance)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;qb-clothing&lt;/h3&gt; &#xA;&lt;p&gt;Migration demo: &lt;a href=&#34;https://streamable.com/ydxoqb&#34;&gt;https://streamable.com/ydxoqb&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Connect to your server&lt;/li&gt; &#xA; &lt;li&gt;Open up any of your saved character&lt;/li&gt; &#xA; &lt;li&gt;Run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;/migrateskins qb-clothing&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wait until all the skins are migrated to the new format&lt;/li&gt; &#xA; &lt;li&gt;Quit the game&lt;/li&gt; &#xA; &lt;li&gt;Restart the server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;fivem-appearance (aj, mirrox1337 etc)&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Delete &lt;code&gt;player_outfits&lt;/code&gt; table from the database&lt;/li&gt; &#xA; &lt;li&gt;Create the &lt;code&gt;player_outfits&lt;/code&gt; table using the SQL &lt;a href=&#34;https://github.com/qbcore-framework/qb-clothing/raw/main/qb-clothing.sql#L12-L22&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Connect to your server&lt;/li&gt; &#xA; &lt;li&gt;Open up any of your saved character&lt;/li&gt; &#xA; &lt;li&gt;Run the following command:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;/migrateskins fivem-appearance&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Wait until all the skins are migrated to the new format&lt;/li&gt; &#xA; &lt;li&gt;Restart the server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Blacklisting Clothes and / or Limiting them to Jobs / Gangs&lt;/h2&gt; &#xA;&lt;p&gt;You can now blacklist different clothes by adding them in a specific format to &lt;code&gt;blacklist.json&lt;/code&gt;. The default file contains all the component names that you can choose to blacklist. For example if you want to blacklist following items:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Jackets: 10, 12, 13, 18 (All Textures)&#xA;Jackets: 11 (Texture: 1, 2, 3)&#xA;Masks: 10, 11, 12, 13 (All Textures)&#xA;Masks: 14 (Texture: 5, 7, 10, 12, 13)&#xA;Jackets: 25, 30, 35 (Accessible only by &#34;police&#34; job)&#xA;Hats: 41, 42, 45 (Accessible only by &#34;ballas&#34; gang)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Here is how the JSON file would look like, for such configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;male&#34;: {&#xA;    &#34;components&#34;: {&#xA;      &#34;masks&#34;: [&#xA;        {&#xA;          &#34;drawables&#34;: [ 10, 11, 12, 13 ]&#xA;        },&#xA;        {&#xA;          &#34;drawables&#34;: [14],&#xA;          &#34;textures&#34;: [ 5, 7, 10, 11, 12, 13 ]&#xA;        }&#xA;      ],&#xA;      &#34;upperBody&#34;: [],&#xA;      &#34;lowerBody&#34;: [],&#xA;      &#34;bags&#34;: [],&#xA;      &#34;shoes&#34;: [],&#xA;      &#34;scarfAndChains&#34;: [],&#xA;      &#34;shirts&#34;: [],&#xA;      &#34;bodyArmor&#34;: [],&#xA;      &#34;decals&#34;: [],&#xA;      &#34;jackets&#34;: [&#xA;        {&#xA;          &#34;drawables&#34;:  [ 11 ],&#xA;          &#34;textures&#34;: [ 1, 2, 3 ]&#xA;        },&#xA;        {&#xA;          &#34;drawables&#34;: [ 10, 12, 13, 18 ]&#xA;        },&#xA;        {&#xA;          &#34;drawables&#34;: [ 25, 30, 35 ],&#xA;          &#34;jobs&#34;: [ &#34;police&#34; ]&#xA;        }&#xA;      ]&#xA;    },&#xA;    &#34;props&#34;: {&#xA;      &#34;hats&#34;: [&#xA;        {&#xA;          &#34;drawables&#34;: [ 41, 42, 45 ],&#xA;          &#34;gangs&#34;: [ &#34;ballas&#34; ]&#xA;        }&#xA;      ],&#xA;      &#34;glasses&#34;: [],&#xA;      &#34;ear&#34;: [],&#xA;      &#34;watches&#34;: [],&#xA;      &#34;bracelets&#34;: []&#xA;    }&#xA;  },&#xA;  &#34;female&#34;: {&#xA;    &#34;components&#34;: {&#xA;      &#34;masks&#34;: [],&#xA;      &#34;upperBody&#34;: [],&#xA;      &#34;lowerBody&#34;: [],&#xA;      &#34;bags&#34;: [],&#xA;      &#34;shoes&#34;: [],&#xA;      &#34;scarfAndChains&#34;: [],&#xA;      &#34;shirts&#34;: [],&#xA;      &#34;bodyArmor&#34;: [],&#xA;      &#34;decals&#34;: [],&#xA;      &#34;jackets&#34;: []&#xA;    },&#xA;    &#34;props&#34;: {&#xA;      &#34;hats&#34;: [],&#xA;      &#34;glasses&#34;: [],&#xA;      &#34;ear&#34;: [],&#xA;      &#34;watches&#34;: [],&#xA;      &#34;bracelets&#34;: []&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can separately blacklist male and female clothes. Just put them under the right section in the json and you should be good to go.&lt;/p&gt; &#xA;&lt;h2&gt;Theme configuration&lt;/h2&gt; &#xA;&lt;p&gt;fivem-appearance comes with 2 themes, &lt;code&gt;default&lt;/code&gt; and &lt;code&gt;qb-core&lt;/code&gt; and &lt;code&gt;qb-core&lt;/code&gt; is set as the default one.&lt;/p&gt; &#xA;&lt;h3&gt;Switch between themes&lt;/h3&gt; &#xA;&lt;p&gt;Change &lt;code&gt;currentTheme&lt;/code&gt; to the theme &lt;code&gt;id&lt;/code&gt;. You can choose between &lt;code&gt;qb-core&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Creating custom themes&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Copy an existing theme based on which you want to create a new one&lt;/li&gt; &#xA; &lt;li&gt;Change the &lt;code&gt;id&lt;/code&gt; to something unique&lt;/li&gt; &#xA; &lt;li&gt;Change the parameters of the theme accordingly&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Theme parameters&lt;/h3&gt; &#xA;&lt;p&gt;You can customize every theme using the parameters defined in &lt;code&gt;theme.json&lt;/code&gt;. Following table explains a little bit about what each parameter can do&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Parameter&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;id&lt;/td&gt; &#xA;   &lt;td&gt;Unique ID for the theme&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;borderRadius&lt;/td&gt; &#xA;   &lt;td&gt;How round do you want the corners of the elements to be&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fontColor&lt;/td&gt; &#xA;   &lt;td&gt;Main color of the text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fontColorHover&lt;/td&gt; &#xA;   &lt;td&gt;Color of the text on hover&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fontColorSelected&lt;/td&gt; &#xA;   &lt;td&gt;Color of the text when it is selected&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fontFamily&lt;/td&gt; &#xA;   &lt;td&gt;Font of the text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;primaryBackground&lt;/td&gt; &#xA;   &lt;td&gt;Main background color for the elements&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;primaryBackgroundSelected&lt;/td&gt; &#xA;   &lt;td&gt;Main background color for the elements when they are selected&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;secondaryBackground&lt;/td&gt; &#xA;   &lt;td&gt;Secondary background color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scaleOnHover&lt;/td&gt; &#xA;   &lt;td&gt;Increase the size of the elements on hover&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sectionFontWeight&lt;/td&gt; &#xA;   &lt;td&gt;Font weight for the section headings text&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;smoothBackgroundTransition&lt;/td&gt; &#xA;   &lt;td&gt;Enable to fade in to the background color during hover&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; After creating the custom theme, make sure to change &lt;code&gt;currentTheme&lt;/code&gt; to the &lt;code&gt;id&lt;/code&gt; of the new theme. You can ofcourse modify the existing themes as well if you want, but it is recommended to create your own so that you can switch between the defaults and the custom one whenever needed.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Original Script: &lt;a href=&#34;https://github.com/pedr0fontoura/fivem-appearance&#34;&gt;https://github.com/pedr0fontoura/fivem-appearance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tattoo&#39;s Support: &lt;a href=&#34;https://github.com/franfdezmorales/fivem-appearance&#34;&gt;https://github.com/franfdezmorales/fivem-appearance&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Last Maintained Fork for QB: &lt;a href=&#34;https://github.com/mirrox1337/aj-fivem-appearance&#34;&gt;https://github.com/mirrox1337/aj-fivem-appearance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>overextended/ox_lib</title>
    <updated>2022-06-17T01:47:07Z</updated>
    <id>tag:github.com,2022-06-17:/overextended/ox_lib</id>
    <link href="https://github.com/overextended/ox_lib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of Lua functions to utilise in other resources.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;h1&gt;&lt;a href=&#34;https://overextended.github.io/docs/&#34;&gt;Documentation&lt;/a&gt;&lt;/h1&gt;&#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Lua Library for FiveM&lt;/h2&gt; &#xA;&lt;p&gt;FXServer provides its own system for including files, which we use to load this resource in the fxmanifest via&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;shared_script &#39;@ox_lib/init.lua&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;server.cfg&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;add_ace resource.ox_lib command.add_principal allow&#xA;add_ace resource.ox_lib command.remove_principal allow&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t want to use this resource, but want to reuse code you are permitted to do so under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;license terms&lt;/a&gt;.&lt;br&gt; Any resources distributed with this code is subject to the same license restrictions and must be made available under the same license (&lt;a href=&#34;https://raw.githubusercontent.com/overextended/ox_lib/master/#license&#34;&gt;more below&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;h2&gt;License&lt;/h2&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;table&gt;&#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; ox_lib &lt;p&gt;Copyright (C) 2021 Linden &lt;a href=&#34;https://www.github.com/thelindat&#34;&gt;https://www.github.com/thelindat&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &lt;p&gt;You should have received a copy of the GNU General Public License along with this program.&lt;br&gt; If not, see &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;https://www.gnu.org/licenses/gpl-3.0.html&lt;/a&gt;&lt;/p&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt;&#xA;   &lt;td&gt; &lt;font align=&#34;center&#34;&gt;https://tldrlegal.com/license/gnu-general-public-license-v3-(gpl-3)&lt;/font&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt;&#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>sindrets/diffview.nvim</title>
    <updated>2022-06-17T01:47:07Z</updated>
    <id>tag:github.com,2022-06-17:/sindrets/diffview.nvim</id>
    <link href="https://github.com/sindrets/diffview.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Single tabpage interface for easily cycling through diffs for all modified files for any git rev.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Diffview.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Single tabpage interface for easily cycling through diffs for all modified files for any git rev.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2786478/131269942-e34100dd-cbb9-48fe-af31-6e518ce06e9e.png&#34; alt=&#34;preview&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;Vim&#39;s diff mode is pretty good, but there is no convenient way to quickly bring up all modified files in a diffsplit. This plugin aims to provide a simple, unified, single tabpage interface that lets you easily review all changed files for any git rev.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Git&lt;/li&gt; &#xA; &lt;li&gt;Neovim ≥ 0.7.0&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt; (optional) For file icons&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your package manager of choice.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Plug&#xA;Plug &#39;nvim-lua/plenary.nvim&#39;&#xA;Plug &#39;sindrets/diffview.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Packer&#xA;use { &#39;sindrets/diffview.nvim&#39;, requires = &#39;nvim-lua/plenary.nvim&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;details&gt; &#xA; &lt;summary style=&#34;cursor: pointer&#34;&gt;&lt;b&gt;Example config with default values&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;local actions = require(&#34;diffview.actions&#34;)&#xA;&#xA;require(&#34;diffview&#34;).setup({&#xA;  diff_binaries = false,    -- Show diffs for binaries&#xA;  enhanced_diff_hl = false, -- See &#39;:h diffview-config-enhanced_diff_hl&#39;&#xA;  use_icons = true,         -- Requires nvim-web-devicons&#xA;  icons = {                 -- Only applies when use_icons is true.&#xA;    folder_closed = &#34;&#34;,&#xA;    folder_open = &#34;&#34;,&#xA;  },&#xA;  signs = {&#xA;    fold_closed = &#34;&#34;,&#xA;    fold_open = &#34;&#34;,&#xA;  },&#xA;  file_panel = {&#xA;    listing_style = &#34;tree&#34;,             -- One of &#39;list&#39; or &#39;tree&#39;&#xA;    tree_options = {                    -- Only applies when listing_style is &#39;tree&#39;&#xA;      flatten_dirs = true,              -- Flatten dirs that only contain one single dir&#xA;      folder_statuses = &#34;only_folded&#34;,  -- One of &#39;never&#39;, &#39;only_folded&#39; or &#39;always&#39;.&#xA;    },&#xA;    win_config = {                      -- See &#39;:h diffview-config-win_config&#39;&#xA;      position = &#34;left&#34;,&#xA;      width = 35,&#xA;    },&#xA;  },&#xA;  file_history_panel = {&#xA;    log_options = {   -- See &#39;:h diffview-config-log_options&#39;&#xA;      single_file = {&#xA;        diff_merges = &#34;combined&#34;,&#xA;      },&#xA;      multi_file = {&#xA;        diff_merges = &#34;first-parent&#34;,&#xA;      },&#xA;    },&#xA;    win_config = {    -- See &#39;:h diffview-config-win_config&#39;&#xA;      position = &#34;bottom&#34;,&#xA;      height = 16,&#xA;    },&#xA;  },&#xA;  commit_log_panel = {&#xA;    win_config = {},  -- See &#39;:h diffview-config-win_config&#39;&#xA;  },&#xA;  default_args = {    -- Default args prepended to the arg-list for the listed commands&#xA;    DiffviewOpen = {},&#xA;    DiffviewFileHistory = {},&#xA;  },&#xA;  hooks = {},         -- See &#39;:h diffview-config-hooks&#39;&#xA;  keymaps = {&#xA;    disable_defaults = false, -- Disable the default keymaps&#xA;    view = {&#xA;      -- The `view` bindings are active in the diff buffers, only when the current&#xA;      -- tabpage is a Diffview.&#xA;      [&#34;&amp;lt;tab&amp;gt;&#34;]      = actions.select_next_entry, -- Open the diff for the next file&#xA;      [&#34;&amp;lt;s-tab&amp;gt;&#34;]    = actions.select_prev_entry, -- Open the diff for the previous file&#xA;      [&#34;gf&#34;]         = actions.goto_file,         -- Open the file in a new split in the previous tabpage&#xA;      [&#34;&amp;lt;C-w&amp;gt;&amp;lt;C-f&amp;gt;&#34;] = actions.goto_file_split,   -- Open the file in a new split&#xA;      [&#34;&amp;lt;C-w&amp;gt;gf&#34;]    = actions.goto_file_tab,     -- Open the file in a new tabpage&#xA;      [&#34;&amp;lt;leader&amp;gt;e&#34;]  = actions.focus_files,       -- Bring focus to the files panel&#xA;      [&#34;&amp;lt;leader&amp;gt;b&#34;]  = actions.toggle_files,      -- Toggle the files panel.&#xA;    },&#xA;    file_panel = {&#xA;      [&#34;j&#34;]             = actions.next_entry,         -- Bring the cursor to the next file entry&#xA;      [&#34;&amp;lt;down&amp;gt;&#34;]        = actions.next_entry,&#xA;      [&#34;k&#34;]             = actions.prev_entry,         -- Bring the cursor to the previous file entry.&#xA;      [&#34;&amp;lt;up&amp;gt;&#34;]          = actions.prev_entry,&#xA;      [&#34;&amp;lt;cr&amp;gt;&#34;]          = actions.select_entry,       -- Open the diff for the selected entry.&#xA;      [&#34;o&#34;]             = actions.select_entry,&#xA;      [&#34;&amp;lt;2-LeftMouse&amp;gt;&#34;] = actions.select_entry,&#xA;      [&#34;-&#34;]             = actions.toggle_stage_entry, -- Stage / unstage the selected entry.&#xA;      [&#34;S&#34;]             = actions.stage_all,          -- Stage all entries.&#xA;      [&#34;U&#34;]             = actions.unstage_all,        -- Unstage all entries.&#xA;      [&#34;X&#34;]             = actions.restore_entry,      -- Restore entry to the state on the left side.&#xA;      [&#34;R&#34;]             = actions.refresh_files,      -- Update stats and entries in the file list.&#xA;      [&#34;L&#34;]             = actions.open_commit_log,    -- Open the commit log panel.&#xA;      [&#34;&amp;lt;c-b&amp;gt;&#34;]         = actions.scroll_view(-0.25), -- Scroll the view up&#xA;      [&#34;&amp;lt;c-f&amp;gt;&#34;]         = actions.scroll_view(0.25),  -- Scroll the view down&#xA;      [&#34;&amp;lt;tab&amp;gt;&#34;]         = actions.select_next_entry,&#xA;      [&#34;&amp;lt;s-tab&amp;gt;&#34;]       = actions.select_prev_entry,&#xA;      [&#34;gf&#34;]            = actions.goto_file,&#xA;      [&#34;&amp;lt;C-w&amp;gt;&amp;lt;C-f&amp;gt;&#34;]    = actions.goto_file_split,&#xA;      [&#34;&amp;lt;C-w&amp;gt;gf&#34;]       = actions.goto_file_tab,&#xA;      [&#34;i&#34;]             = actions.listing_style,        -- Toggle between &#39;list&#39; and &#39;tree&#39; views&#xA;      [&#34;f&#34;]             = actions.toggle_flatten_dirs,  -- Flatten empty subdirectories in tree listing style.&#xA;      [&#34;&amp;lt;leader&amp;gt;e&#34;]     = actions.focus_files,&#xA;      [&#34;&amp;lt;leader&amp;gt;b&#34;]     = actions.toggle_files,&#xA;    },&#xA;    file_history_panel = {&#xA;      [&#34;g!&#34;]            = actions.options,          -- Open the option panel&#xA;      [&#34;&amp;lt;C-A-d&amp;gt;&#34;]       = actions.open_in_diffview, -- Open the entry under the cursor in a diffview&#xA;      [&#34;y&#34;]             = actions.copy_hash,        -- Copy the commit hash of the entry under the cursor&#xA;      [&#34;L&#34;]             = actions.open_commit_log,&#xA;      [&#34;zR&#34;]            = actions.open_all_folds,&#xA;      [&#34;zM&#34;]            = actions.close_all_folds,&#xA;      [&#34;j&#34;]             = actions.next_entry,&#xA;      [&#34;&amp;lt;down&amp;gt;&#34;]        = actions.next_entry,&#xA;      [&#34;k&#34;]             = actions.prev_entry,&#xA;      [&#34;&amp;lt;up&amp;gt;&#34;]          = actions.prev_entry,&#xA;      [&#34;&amp;lt;cr&amp;gt;&#34;]          = actions.select_entry,&#xA;      [&#34;o&#34;]             = actions.select_entry,&#xA;      [&#34;&amp;lt;2-LeftMouse&amp;gt;&#34;] = actions.select_entry,&#xA;      [&#34;&amp;lt;c-b&amp;gt;&#34;]         = actions.scroll_view(-0.25),&#xA;      [&#34;&amp;lt;c-f&amp;gt;&#34;]         = actions.scroll_view(0.25),&#xA;      [&#34;&amp;lt;tab&amp;gt;&#34;]         = actions.select_next_entry,&#xA;      [&#34;&amp;lt;s-tab&amp;gt;&#34;]       = actions.select_prev_entry,&#xA;      [&#34;gf&#34;]            = actions.goto_file,&#xA;      [&#34;&amp;lt;C-w&amp;gt;&amp;lt;C-f&amp;gt;&#34;]    = actions.goto_file_split,&#xA;      [&#34;&amp;lt;C-w&amp;gt;gf&#34;]       = actions.goto_file_tab,&#xA;      [&#34;&amp;lt;leader&amp;gt;e&#34;]     = actions.focus_files,&#xA;      [&#34;&amp;lt;leader&amp;gt;b&#34;]     = actions.toggle_files,&#xA;    },&#xA;    option_panel = {&#xA;      [&#34;&amp;lt;tab&amp;gt;&#34;] = actions.select_entry,&#xA;      [&#34;q&#34;]     = actions.close,&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Layout&lt;/h3&gt; &#xA;&lt;p&gt;The diff windows can be aligned either with a horizontal split or a vertical split. To change the alignment add either &lt;code&gt;horizontal&lt;/code&gt; or &lt;code&gt;vertical&lt;/code&gt; to your &lt;code&gt;&#39;diffopt&#39;&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Hooks&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;hooks&lt;/code&gt; table allows you to define callbacks for various events emitted from Diffview. The available hooks are documented in detail in &lt;code&gt;:h diffview-config-hooks&lt;/code&gt;. The hook events are also available as User autocommands. See &lt;code&gt;:h diffview-user-autocmds&lt;/code&gt; for more details.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;hooks = {&#xA;  diff_buf_read = function(bufnr)&#xA;    -- Change local options in diff buffers&#xA;    vim.opt_local.wrap = false&#xA;    vim.opt_local.list = false&#xA;    vim.opt_local.colorcolumn = { 80 }&#xA;  end,&#xA;  view_opened = function(view)&#xA;    print(&#xA;      (&#34;A new %s was opened on tab page %d!&#34;)&#xA;      :format(view:class():name(), view.tabpage)&#xA;    )&#xA;  end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Keymaps&lt;/h3&gt; &#xA;&lt;p&gt;The keymaps config is structured as a table with sub-tables for various different contexts where mappings can be declared. In these sub-tables key-value pairs are treated as the &lt;code&gt;{lhs}&lt;/code&gt; and &lt;code&gt;{rhs}&lt;/code&gt; of a normal mode mapping. These mappings all use the &lt;code&gt;:map-arguments&lt;/code&gt; &lt;code&gt;silent&lt;/code&gt;, &lt;code&gt;nowait&lt;/code&gt;, and &lt;code&gt;noremap&lt;/code&gt;. The implementation uses &lt;code&gt;vim.keymap.set()&lt;/code&gt;, so the &lt;code&gt;{rhs}&lt;/code&gt; can be either a vim command in the form of a string, or it can be a lua function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;  view = {&#xA;    -- Vim command:&#xA;    [&#34;a&#34;] = &#34;&amp;lt;Cmd&amp;gt;echom &#39;foo&#39;&amp;lt;CR&amp;gt;&#34;,&#xA;    -- Lua function:&#xA;    [&#34;b&#34;] = function() print(&#34;bar&#34;) end,&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To disable any single mapping without disabling them all, set its value to &lt;code&gt;false&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;  view = {&#xA;    -- Disable the default mapping for &amp;lt;tab&amp;gt;:&#xA;    [&#34;&amp;lt;tab&amp;gt;&#34;] = false,&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most of the mapped file panel actions also work from the view if they are added to the view maps (and vice versa). The exception is for actions that only really make sense specifically in the file panel, such as &lt;code&gt;next_entry&lt;/code&gt;, &lt;code&gt;prev_entry&lt;/code&gt;. Actions such as &lt;code&gt;toggle_stage_entry&lt;/code&gt; and &lt;code&gt;restore_entry&lt;/code&gt; work just fine from the view. When invoked from the view, these will target the file currently open in the view rather than the file under the cursor in the file panel.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;For more details on how to set mappings for other modes, actions, and more see:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:h diffview-config-keymaps&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:h diffview-actions&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;File History&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/2786478/131269782-f4184640-6d73-4226-b425-feccb5002dd0.png&#34; alt=&#34;file-history-multi&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The file history view allows you to list all the commits that affected a given file or directory, and view the changes made in a diff split. This is a porcelain interface for git-log. Open a file history view for your current file by calling &lt;code&gt;:DiffviewFileHistory %&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;:DiffviewOpen [git rev] [options] [ -- {paths...}]&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Calling &lt;code&gt;:DiffviewOpen&lt;/code&gt; with no args opens a new Diffview that compares against the current index. You can also provide any valid git rev to view only changes for that rev.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewOpen&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewOpen HEAD~2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewOpen HEAD~4..HEAD~2&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewOpen d4a7b0d&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewOpen d4a7b0d..519b30e&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewOpen origin/main...HEAD&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also provide additional paths to narrow down what files are shown:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewOpen HEAD~2 -- lua/diffview plugin&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For information about additional &lt;code&gt;[options]&lt;/code&gt;, visit the &lt;a href=&#34;https://github.com/sindrets/diffview.nvim/raw/main/doc/diffview.txt&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additional commands for convenience:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewClose&lt;/code&gt;: Close the current diffview. You can also use &lt;code&gt;:tabclose&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewToggleFiles&lt;/code&gt;: Toggle the files panel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewFocusFiles&lt;/code&gt;: Bring focus to the files panel.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewRefresh&lt;/code&gt;: Update stats and entries in the file list of the current Diffview.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With a Diffview open and the default key bindings, you can cycle through changed files with &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;s-tab&amp;gt;&lt;/code&gt; (see configuration to change the key bindings).&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;:DiffviewFileHistory [paths] [options]&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Opens a new file history view that lists all commits that affected the given paths. This is a porcelain interface for git-log.&lt;/p&gt; &#xA;&lt;p&gt;If no &lt;code&gt;[paths]&lt;/code&gt; are given, defaults to the top-level of the git repository. The top-level will be inferred from the current buffer when possible, otherwise the cwd is used. Multiple &lt;code&gt;[paths]&lt;/code&gt; may be provided and git pathspec is supported.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewFileHistory&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewFileHistory %&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewFileHistory path/to/some/file.txt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewFileHistory path/to/some/directory&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewFileHistory include/this and/this :!but/not/this&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewFileHistory --range=origin..HEAD&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:DiffviewFileHistory --range=feat/example-branch&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Restoring Files&lt;/h2&gt; &#xA;&lt;p&gt;If the right side of the diff is showing the local state of a file, you can restore the file to the state from the left side of the diff (key binding &lt;code&gt;X&lt;/code&gt; from the file panel by default). The current state of the file is stored in the git object database, and a command is echoed that shows how to undo the change.&lt;/p&gt; &#xA;&lt;h2&gt;Tips and FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hide untracked files:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;DiffviewOpen -uno&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Exclude certain paths:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;DiffviewOpen -- :!exclude/this :!and/this&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Run as if git was started in a specific directory:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;DiffviewOpen -C/foo/bar/baz&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Diff the index against a git rev:&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;DiffviewOpen HEAD~2 --cached&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Defaults to &lt;code&gt;HEAD&lt;/code&gt; if no rev is given.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Q: How do I get the diagonal lines in place of deleted lines in diff-mode?&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A: Change your &lt;code&gt;:h &#39;fillchars&#39;&lt;/code&gt;: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;(vimscript): &lt;code&gt;set fillchars+=diff:╱&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Note: whether or not the diagonal lines will line up nicely will depend on your terminal emulator. The terminal used in the screenshots is Kitty.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>