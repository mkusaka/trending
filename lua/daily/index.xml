<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-02T01:47:25Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>minetest/minetest_game</title>
    <updated>2022-08-02T01:47:25Z</updated>
    <id>tag:github.com,2022-08-02:/minetest/minetest_game</id>
    <link href="https://github.com/minetest/minetest_game" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minetest Game - The default game for the Minetest engine [https://github.com/minetest/minetest/]&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Minetest Game&lt;/h1&gt; &#xA;&lt;p&gt;The default game bundled in the Minetest engine.&lt;/p&gt; &#xA;&lt;p&gt;For further information, check &lt;a href=&#34;https://forum.minetest.net/viewtopic.php?f=15&amp;amp;t=9724&#34;&gt;this forum topic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Also see the &lt;a href=&#34;https://wiki.minetest.net/Subgames/Minetest_Game&#34;&gt;Minetest Wiki&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Unzip the archive, rename the folder to &lt;code&gt;minetest_game&lt;/code&gt; and place it in .. &lt;code&gt;minetest/games/&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;GNU/Linux: If you use a system-wide installation place it in &lt;code&gt;~/.minetest/games/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Minetest engine can be found at &lt;a href=&#34;https://github.com/minetest/minetest&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For further information or help, see: &lt;a href=&#34;https://wiki.minetest.net/Installing_Mods&#34;&gt;Installing Mods&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Compatibility&lt;/h2&gt; &#xA;&lt;p&gt;The Minetest Game GitHub &lt;code&gt;master&lt;/code&gt; &lt;code&gt;HEAD&lt;/code&gt; is generally compatible with the GitHub &lt;code&gt;master&lt;/code&gt; &lt;code&gt;HEAD&lt;/code&gt; of the Minetest engine.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, when the Minetest engine is tagged to be a certain version (e.g. &lt;code&gt;0.4.10&lt;/code&gt;), Minetest Game is tagged with the version, too.&lt;/p&gt; &#xA;&lt;p&gt;When stable releases are made, Minetest Game and the Minetest engine is packaged and made available at &lt;a href=&#34;https://www.minetest.net/downloads/&#34;&gt;www.minetest.net&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Licensing&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;code&gt;LICENSE.txt&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Pocco81/true-zen.nvim</title>
    <updated>2022-08-02T01:47:25Z</updated>
    <id>tag:github.com,2022-08-02:/Pocco81/true-zen.nvim</id>
    <link href="https://github.com/Pocco81/true-zen.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶ù Clean and elegant distraction-free writing for NeoVim&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;/p&gt;&#xA;&lt;h2 align=&#34;center&#34;&gt;ü¶ù true-zen.nvim&lt;/h2&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Clean and elegant distraction-free writing for NeoVim &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Pocco81/true-zen.nvim/stargazers&#34;&gt; &lt;img alt=&#34;Stars&#34; src=&#34;https://img.shields.io/github/stars/Pocco81/true-zen.nvim?style=for-the-badge&amp;amp;logo=starship&amp;amp;color=C9CBFF&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Pocco81/true-zen.nvim/issues&#34;&gt; &lt;img alt=&#34;Issues&#34; src=&#34;https://img.shields.io/github/issues/Pocco81/true-zen.nvim?style=for-the-badge&amp;amp;logo=bilibili&amp;amp;color=F5E0DC&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Pocco81/true-zen.nvim&#34;&gt; &lt;img alt=&#34;Repo Size&#34; src=&#34;https://img.shields.io/github/repo-size/Pocco81/true-zen.nvim?color=%23DDB6F2&amp;amp;label=SIZE&amp;amp;logo=codesandbox&amp;amp;style=for-the-badge&amp;amp;logoColor=D9E0EE&amp;amp;labelColor=302D41&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/58336662/181860318-8834446a-e28f-4a75-acdc-c880082ef3a8.mp4&#34;&gt;https://user-images.githubusercontent.com/58336662/181860318-8834446a-e28f-4a75-acdc-c880082ef3a8.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;üìã Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;has 4 different modes to unclutter your screen: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ataraxis: good ol&#39; zen mode&lt;/li&gt; &#xA;   &lt;li&gt;Minimalist: disable ui components (e.g. numbers, tabline, statusline)&lt;/li&gt; &#xA;   &lt;li&gt;Narrow: narrow a text region for better focus&lt;/li&gt; &#xA;   &lt;li&gt;Focus: focus the current window&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;customizable lua callbacks for each mode&lt;/li&gt; &#xA; &lt;li&gt;works out of the box&lt;/li&gt; &#xA; &lt;li&gt;integratons: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tmux/tmux&#34;&gt;tmux&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://sw.kovidgoyal.net/kitty/&#34;&gt;kitty&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/folke/twilight.nvim&#34;&gt;twilight.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;üìö Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.5.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;üì¶ Installation&lt;/h3&gt; &#xA;&lt;p&gt;Install the plugin with your favourite package manager:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;Packer.nvim&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;&#x9;&#34;Pocco81/true-zen.nvim&#34;,&#xA;&#x9;config = function()&#xA;&#x9;&#x9; require(&#34;true-zen&#34;).setup {&#xA;&#x9;&#x9;&#x9;-- your config goes here&#xA;&#x9;&#x9;&#x9;-- or just leave it empty :)&#xA;&#x9;&#x9; }&#xA;&#x9;end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;Pocco81/true-zen.nvim&#39;&#xA;lua &amp;lt;&amp;lt; EOF&#xA;&#x9;require(&#34;true-zen&#34;).setup {&#xA;&#x9;&#x9;-- your config goes here&#xA;&#x9;&#x9;-- or just leave it empty :)&#xA;&#x9;}&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;‚öôÔ∏è Configuration&lt;/h3&gt; &#xA;&lt;p&gt;true-zen comes with the following defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;&#x9;modes = { -- configurations per mode&#xA;&#x9;&#x9;ataraxis = {&#xA;&#x9;&#x9;&#x9;shade = &#34;dark&#34;, -- if `dark` then dim the padding windows, otherwise if it&#39;s `light` it&#39;ll brighten said windows&#xA;&#x9;&#x9;&#x9;backdrop = 0, -- percentage by which padding windows should be dimmed/brightened. Must be a number between 0 and 1. Set to 0 to keep the same background color&#xA;&#x9;&#x9;&#x9;minimum_writing_area = { -- minimum size of main window&#xA;&#x9;&#x9;&#x9;&#x9;width = 70,&#xA;&#x9;&#x9;&#x9;&#x9;height = 44,&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;quit_untoggles = true, -- type :q or :qa to quit Ataraxis mode&#xA;&#x9;&#x9;&#x9;padding = { -- padding windows&#xA;&#x9;&#x9;&#x9;&#x9;left = 52,&#xA;&#x9;&#x9;&#x9;&#x9;right = 52,&#xA;&#x9;&#x9;&#x9;&#x9;top = 0,&#xA;&#x9;&#x9;&#x9;&#x9;bottom = 0,&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;open_callback = nil, -- run a function when opening Ataraxis mode&#xA;&#x9;&#x9;&#x9;close_callback = nil, -- run a function when closing Ataraxis mode&#xA;&#x9;&#x9;},&#xA;&#x9;&#x9;minimalist = {&#xA;&#x9;&#x9;&#x9;ignored_buf_types = { &#34;nofile&#34; }, -- save current options from any window except ones displaying these kinds of buffers&#xA;&#x9;&#x9;&#x9;options = { -- options to be disabled when entering Minimalist mode&#xA;&#x9;&#x9;&#x9;&#x9;number = false,&#xA;&#x9;&#x9;&#x9;&#x9;relativenumber = false,&#xA;&#x9;&#x9;&#x9;&#x9;showtabline = 0,&#xA;&#x9;&#x9;&#x9;&#x9;signcolumn = &#34;no&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;statusline = &#34;&#34;,&#xA;&#x9;&#x9;&#x9;&#x9;cmdheight = 1,&#xA;&#x9;&#x9;&#x9;&#x9;laststatus = 0,&#xA;&#x9;&#x9;&#x9;&#x9;showcmd = false,&#xA;&#x9;&#x9;&#x9;&#x9;showmode = false,&#xA;&#x9;&#x9;&#x9;&#x9;ruler = false,&#xA;&#x9;&#x9;&#x9;&#x9;numberwidth = 1&#xA;&#x9;&#x9;&#x9;},&#xA;&#x9;&#x9;&#x9;open_callback = nil, -- run a function when opening Minimalist mode&#xA;&#x9;&#x9;&#x9;close_callback = nil, -- run a function when closing Minimalist mode&#xA;&#x9;&#x9;},&#xA;&#x9;&#x9;narrow = {&#xA;&#x9;&#x9;&#x9;--- change the style of the fold lines. Set it to:&#xA;&#x9;&#x9;&#x9;--- `informative`: to get nice pre-baked folds&#xA;&#x9;&#x9;&#x9;--- `invisible`: hide them&#xA;&#x9;&#x9;&#x9;--- function() end: pass a custom func with your fold lines. See :h foldtext&#xA;&#x9;&#x9;&#x9;folds_style = &#34;informative&#34;,&#xA;&#x9;&#x9;&#x9;run_ataraxis = true, -- display narrowed text in a Ataraxis session&#xA;&#x9;&#x9;&#x9;open_callback = nil, -- run a function when opening Narrow mode&#xA;&#x9;&#x9;&#x9;close_callback = nil, -- run a function when closing Narrow mode&#xA;&#x9;&#x9;},&#xA;&#x9;&#x9;focus = {&#xA;&#x9;&#x9;&#x9;open_callback = nil, -- run a function when opening Focus mode&#xA;&#x9;&#x9;&#x9;close_callback = nil, -- run a function when closing Focus mode&#xA;&#x9;&#x9;}&#xA;&#x9;},&#xA;&#x9;integrations = {&#xA;&#x9;&#x9;tmux = false, -- hide tmux status bar in (minimalist, ataraxis)&#xA;&#x9;&#x9;kitty = { -- increment font size in Kitty. Note: you must set `allow_remote_control socket-only` and `listen_on unix:/tmp/kitty` in your personal config (ataraxis)&#xA;&#x9;&#x9;&#x9;enabled = false,&#xA;&#x9;&#x9;&#x9;font = &#34;+3&#34;&#xA;&#x9;&#x9;},&#xA;&#x9;&#x9;twilight = false -- enable twilight (ataraxis)&#xA;&#x9;},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally you may want to set up some key mappings for each true-zen mode:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local api = vim.api&#xA;&#xA;api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;n&#34;, &#34;:TZNarrow&amp;lt;CR&amp;gt;&#34;, {})&#xA;api.nvim_set_keymap(&#34;v&#34;, &#34;&amp;lt;leader&amp;gt;n&#34;, &#34;:&#39;&amp;lt;,&#39;&amp;gt;TZNarrow&amp;lt;CR&amp;gt;&#34;, {})&#xA;api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;n&#34;, &#34;:TZFocus&amp;lt;CR&amp;gt;&#34;, {})&#xA;api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;n&#34;, &#34;:TZMinimalist&amp;lt;CR&amp;gt;&#34;, {})&#xA;api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;n&#34;, &#34;:TZAtaraxis&amp;lt;CR&amp;gt;&#34;, {})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;ü™¥ Usage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;TZAtaraxis&lt;/code&gt;: toggle ataraxis mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TZMinimalist&lt;/code&gt;: toggle minimalist mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TZNarrow&lt;/code&gt;: toggle narrow mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TZFocus&lt;/code&gt;: toggle focus mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt; &#xA;&lt;h3&gt;üìú License&lt;/h3&gt; &#xA;&lt;p&gt;Koy is released under the MIT license, which grants the following permissions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Commercial use&lt;/li&gt; &#xA; &lt;li&gt;Distribution&lt;/li&gt; &#xA; &lt;li&gt;Modification&lt;/li&gt; &#xA; &lt;li&gt;Private use&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For more convoluted language, see the &lt;a href=&#34;https://github.com/true-zen.nvim/true-zen.nvim/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</summary>
  </entry>
</feed>