<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-27T01:32:29Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mikavilpas/yazi.nvim</title>
    <updated>2024-06-27T01:32:29Z</updated>
    <id>tag:github.com,2024-06-27:/mikavilpas/yazi.nvim</id>
    <link href="https://github.com/mikavilpas/yazi.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Neovim Plugin for the yazi terminal file manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üé≤ A Neovim Plugin for &lt;a href=&#34;https://github.com/sxyazi/yazi.git&#34;&gt;yazi&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;a href=&#34;https://dotfyle.com/plugins/mikavilpas/yazi.nvim&#34;&gt; &lt;img src=&#34;https://dotfyle.com/plugins/mikavilpas/yazi.nvim/shield?style=flat-square&#34; alt=&#34;shield image for plugin usage&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/luarocks/v/mikavilpas/yazi.nvim&#34; alt=&#34;LuaRocks&#34;&gt; &lt;a href=&#34;https://github.com/mikavilpas/yazi.nvim/actions/workflows/typecheck.yml&#34;&gt;&lt;img src=&#34;https://github.com/mikavilpas/yazi.nvim/actions/workflows/typecheck.yml/badge.svg?sanitize=true&#34; alt=&#34;Type checked codebase&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Yazi is a blazing fast file manager for the terminal. This plugin allows you to open yazi in a floating window in Neovim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mikavilpas/yazi.nvim/assets/300791/c7ff98ee-54d6-4ad0-9318-903e4b674f84&#34;&gt;https://github.com/mikavilpas/yazi.nvim/assets/300791/c7ff98ee-54d6-4ad0-9318-903e4b674f84&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open yazi in a floating window&lt;/li&gt; &#xA; &lt;li&gt;Files can be selected in yazi and opened in the current buffer, a vertical split, a horizontal split, or a new tab&lt;/li&gt; &#xA; &lt;li&gt;If multiple files are selected, they can be sent to the quickfix list&lt;/li&gt; &#xA; &lt;li&gt;(optionally) open yazi instead of netrw for directories&lt;/li&gt; &#xA; &lt;li&gt;Files that are renamed, moved, or deleted in yazi are kept in sync with open buffers in Neovim &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The files are also kept in sync with currently running LSP servers&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Customizable keybindings&lt;/li&gt; &#xA; &lt;li&gt;üÜï Plugin manager for Yazi plugins and flavors (&lt;a href=&#34;https://raw.githubusercontent.com/mikavilpas/yazi.nvim/master/documentation/plugin-manager.md&#34;&gt;documentation&lt;/a&gt;). Please provide your feedback!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For previewing images with yazi, see Yazi&#39;s documentation related to Neovim &lt;a href=&#34;https://yazi-rs.github.io/docs/image-preview/#neovim&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;First, make sure you have the requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim 0.10.x or later&lt;/li&gt; &#xA; &lt;li&gt;yazi &lt;a href=&#34;https://github.com/sxyazi/yazi/releases/tag/v0.2.5&#34;&gt;0.2.5&lt;/a&gt; or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;You can run &lt;code&gt;:checkhealth yazi&lt;/code&gt; to see if compatible versions are installed and working.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Using &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type LazySpec&#xA;{&#xA;  &#34;mikavilpas/yazi.nvim&#34;,&#xA;  dependencies = {&#xA;    &#34;nvim-lua/plenary.nvim&#34;,&#xA;  },&#xA;  event = &#34;VeryLazy&#34;,&#xA;  keys = {&#xA;    -- üëá in this section, choose your own keymappings!&#xA;    {&#xA;      &#34;&amp;lt;leader&amp;gt;-&#34;,&#xA;      function()&#xA;        require(&#34;yazi&#34;).yazi()&#xA;      end,&#xA;      desc = &#34;Open the file manager&#34;,&#xA;    },&#xA;    {&#xA;      -- Open in the current working directory&#xA;      &#34;&amp;lt;leader&amp;gt;cw&#34;,&#xA;      function()&#xA;        require(&#34;yazi&#34;).yazi(nil, vim.fn.getcwd())&#xA;      end,&#xA;      desc = &#34;Open the file manager in nvim&#39;s working directory&#34; ,&#xA;    },&#xA;  },&#xA;  ---@type YaziConfig&#xA;  opts = {&#xA;    open_for_directories = false,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;‚öôÔ∏è‚öôÔ∏è Advanced configuration&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;You don&#39;t have to set any of these options. The defaults are fine for most users.&lt;/p&gt; &#xA; &lt;p&gt;For advanced configuration, it&#39;s recommended to have your Lua language server set up so that you can type check your configuration and avoid errors.&lt;/p&gt; &#xA; &lt;p&gt;For help on how to do this, there is a section for Neovim development tools in the &lt;a href=&#34;https://raw.githubusercontent.com/mikavilpas/yazi.nvim/master/documentation/for-developers/setting-up.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can optionally configure yazi.nvim by setting any of the options below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  -- ... other lazy.nvim configuration from above&#xA;&#xA;  ---@type YaziConfig&#xA;  opts = {&#xA;    -- Below is the default configuration. It is optional to set these values.&#xA;    -- You can customize the configuration for each yazi call by passing it to&#xA;    -- yazi() explicitly&#xA;&#xA;    -- enable this if you want to open yazi instead of netrw.&#xA;    -- Note that if you enable this, you need to call yazi.setup() to&#xA;    -- initialize the plugin. lazy.nvim does this for you in certain cases.&#xA;    open_for_directories = false,&#xA;&#xA;    -- the floating window scaling factor. 1 means 100%, 0.9 means 90%, etc.&#xA;    floating_window_scaling_factor = 0.9,&#xA;&#xA;    -- the transparency of the yazi floating window (0-100). See :h winblend&#xA;    yazi_floating_window_winblend = 0,&#xA;&#xA;    -- the log level to use. Off by default, but can be used to diagnose&#xA;    -- issues. You can find the location of the log file by running&#xA;    -- `:checkhealth yazi` in Neovim.&#xA;    log_level = vim.log.levels.OFF,&#xA;&#xA;    -- what Neovim should do a when a file was opened (selected) in yazi.&#xA;    -- Defaults to simply opening the file.&#xA;    open_file_function = function(chosen_file, config) end,&#xA;&#xA;    -- completely override the keymappings for yazi. This function will be&#xA;    -- called in the context of the yazi terminal buffer.&#xA;    set_keymappings_function = function(yazi_buffer_id, config) end,&#xA;&#xA;    -- the type of border to use for the floating window. Can be many values,&#xA;    -- including &#39;none&#39;, &#39;rounded&#39;, &#39;single&#39;, &#39;double&#39;, &#39;shadow&#39;, etc. For&#xA;    -- more information, see :h nvim_open_win&#xA;    yazi_floating_window_border = &#39;rounded&#39;,&#xA;&#xA;    hooks = {&#xA;      -- if you want to execute a custom action when yazi has been opened,&#xA;      -- you can define it here.&#xA;      yazi_opened = function(preselected_path, yazi_buffer_id, config)&#xA;        -- you can optionally modify the config for this specific yazi&#xA;        -- invocation if you want to customize the behaviour&#xA;      end,&#xA;&#xA;      -- when yazi was successfully closed&#xA;      yazi_closed_successfully = function(chosen_file, config) end,&#xA;&#xA;      -- when yazi opened multiple files. The default is to send them to the&#xA;      -- quickfix list, but if you want to change that, you can define it here&#xA;      yazi_opened_multiple_files = function(chosen_files, config, state) end,&#xA;    },&#xA;&#xA;    integrations = {&#xA;      --- What should be done when the user wants to grep in a directory&#xA;      ---@param directory string&#xA;      grep_in_directory = function(directory)&#xA;        -- the default implementation uses telescope if available, otherwise nothing&#xA;      end,&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚å®Ô∏è Keybindings&lt;/h2&gt; &#xA;&lt;p&gt;These are the default keybindings that are available when yazi is open:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;c-v&amp;gt;&lt;/code&gt;: open the selected file in a vertical split&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;c-x&amp;gt;&lt;/code&gt;: open the selected file in a horizontal split&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;c-t&amp;gt;&lt;/code&gt;: open the selected file in a new tab&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;c-s&amp;gt;&lt;/code&gt;: close the current yazi directory using &lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope&lt;/a&gt;&#39;s &lt;code&gt;live_grep&lt;/code&gt;. If telescope is not available, nothing happens. You can customize the search action in your configuration.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Notice that these are also the defaults for telescope.&lt;/p&gt; &#xA;&lt;h2&gt;ü™õ Customizing yazi&lt;/h2&gt; &#xA;&lt;p&gt;Yazi is highly customizable. It features its own plugin and event system, themes, and keybindings. This section lists some of the plugins and themes that I like.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DreamMaoMao/keyjump.yazi&#34;&gt;https://github.com/DreamMaoMao/keyjump.yazi&lt;/a&gt; allows jumping to a line by typing a hint character, much like &lt;a href=&#34;https://github.com/smoka7/hop.nvim&#34;&gt;hop.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Rolv-Apneseth/starship.yazi&#34;&gt;https://github.com/Rolv-Apneseth/starship.yazi&lt;/a&gt; is a port of the &lt;a href=&#34;https://starship.rs&#34;&gt;starship prompt&lt;/a&gt; to yazi. It allows reusing the prompt you are using in your shell in yazi.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/yazi&#34;&gt;https://github.com/catppuccin/yazi&lt;/a&gt; ports the catppuccin theme to yazi.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/catppuccin/bat&#34;&gt;https://github.com/catppuccin/bat&lt;/a&gt; can be used to change the syntax highlighting theme yazi uses to preview files. See &lt;a href=&#34;https://github.com/sxyazi/yazi/discussions/818&#34;&gt;this discussion&lt;/a&gt; or &lt;a href=&#34;https://github.com/mikavilpas/dotfiles/commit/bb07515f69d219fd3435d222fcb2d80d27a25025#diff-973b37f40e024ca0f7e62f2569efce24ad550d0352adc8449168ac950af9eaf5R8&#34;&gt;my config&lt;/a&gt; for an example of using it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üç¥ About my fork&lt;/h2&gt; &#xA;&lt;p&gt;I forked this from &lt;a href=&#34;https://github.com/DreamMaoMao/yazi.nvim&#34;&gt;https://github.com/DreamMaoMao/yazi.nvim&lt;/a&gt; for my own use, and also because I wanted to learn Neovim plugin development.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/mikavilpas/yazi.nvim/master/COMMUNITY.md&#34;&gt;COMMUNITY.md&lt;/a&gt; for more information on the project!&lt;/p&gt;</summary>
  </entry>
</feed>