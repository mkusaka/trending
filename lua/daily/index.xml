<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-11T01:29:47Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Mono-94/mGarage</title>
    <updated>2024-05-11T01:29:47Z</updated>
    <id>tag:github.com,2024-05-11:/Mono-94/mGarage</id>
    <link href="https://github.com/Mono-94/mGarage" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://discord.gg/Vk7eY8xYV2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Join-Discord-blue?logo=discord&amp;amp;logoColor=white&#34; alt=&#34;discord&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/discord/1048630711881568267?style=flat&amp;amp;label=Online%20Users&#34; alt=&#34;Discord&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;mGarage&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create garages/impounds in-game or in the Config file&lt;/li&gt; &#xA; &lt;li&gt;Garage action: Target/TextUI&lt;/li&gt; &#xA; &lt;li&gt;Multilanguage&lt;/li&gt; &#xA; &lt;li&gt;Garages for jobs&lt;/li&gt; &#xA; &lt;li&gt;Vehicle search in the garage interface&lt;/li&gt; &#xA; &lt;li&gt;Custom vehicle garages&lt;/li&gt; &#xA; &lt;li&gt;Obtain an item key if necessary&lt;/li&gt; &#xA; &lt;li&gt;Mark vehicles outside the garage&lt;/li&gt; &#xA; &lt;li&gt;Share vehicles with companions&lt;/li&gt; &#xA; &lt;li&gt;Save vehicles with fake license plates (using the &#39;fakeplate&#39; item from mVehicle)&lt;/li&gt; &#xA; &lt;li&gt;Impound with societies&lt;/li&gt; &#xA; &lt;li&gt;Functions to integrate the garage into any housing system&lt;/li&gt; &#xA; &lt;li&gt;Function to impound vehicles&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The impound can establish a society account&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Set a recovery date&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Function to remove time from a plate vehicle&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Functions&lt;/h2&gt; &#xA;&lt;h3&gt;OpenGarage&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;exports.mGarage:OpenGarage()&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;&#xA;exports.mGarage:OpenGarage({&#xA;    name = &#39;GARAGE ID/NAME&#39;,&#xA;    garagetype = &#39;garage&#39;,              &#xA;    intocar = true,                     &#xA;    carType = { &#39;automobile&#39;, &#39;bike&#39; }, &#xA;    spawnpos = {  vec4(0, 0, 0, 0) }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;SaveCar&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;exports.mGarage:SaveCar()&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;    exports.mGarage:SaveCar({&#xA;        name = &#39;GARAGE ID/NAME&#39;,&#xA;        garagetype = &#39;garage&#39;,              &#xA;        entity = vehicleEntity or false to getVehiclePedIsIn,            &#xA;        carType = { &#39;automobile&#39;, &#39;bike&#39; }, &#xA;    })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;impound Vehicle&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;    exports.mGarage:ImpoundVehicle({ &#xA;        vehicle = Vehicle entity, &#xA;        impoundName = &#39;Impound Name&#39; &#xA;    })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Remove time for recovery vehicle&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;  -- open input to set plate &#xA;    exports.mGarage:UnpoundVehicle()&#xA;  -- or direct plate&#xA;     exports.mGarage:UnpoundVehicle(plate)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;RegisterCommand(&#39;mGarage:opengarage&#39;, function(source, args, raw)&#xA;    local ped = PlayerPedId()&#xA;    local coords, heading = GetEntityCoords(ped), GetEntityHeading(ped)&#xA;    exports.mGarage:OpenGarage({&#xA;        name = &#39;Pillbox Hill&#39;,&#xA;        garagetype = &#39;garage&#39;,              &#xA;        intocar = true,                     &#xA;        carType = { &#39;automobile&#39;, &#39;bike&#39; }, &#xA;        spawnpos = {&#xA;            vec4(coords.x, coords.y, coords.z, heading),&#xA;        }&#xA;    })&#xA;end)&#xA;&#xA;RegisterCommand(&#39;mGarage:savecar&#39;, function(source, args, raw)&#xA;    local ped = PlayerPedId()&#xA;    local vehicleEntity = GetVehiclePedIsIn(ped, false)&#xA;    if DoesEntityExist(vehicleEntity) then&#xA;        exports.mGarage:SaveCar({&#xA;            name = &#39;Pillbox Hill&#39;,&#xA;            garagetype = &#39;garage&#39;,             &#xA;            entity = vehicleEntity,             &#xA;            carType = { &#39;automobile&#39;, &#39;bike&#39; }, &#xA;        })&#xA;    else&#xA;        print(&#39;No Vehicle&#39;)&#xA;    end&#xA;end)&#xA;&#xA;RegisterCommand(&#39;mGarage:impound&#39;, function(source, args, raw)&#xA;    local ped = PlayerPedId()&#xA;    local vehicleEntity = GetVehiclePedIsIn(ped, false)&#xA;    if DoesEntityExist(vehicleEntity) then&#xA;     ImpoundVehicle({&#xA;        vehicle = vehicleEntity,&#xA;        impoundName = &#39;Impound&#39;&#xA;    })&#xA;    else&#xA;        print(&#39;No Vehicle&#39;)&#xA;    end&#xA;end)&#xA;&#xA;RegisterCommand(&#39;mGarage:unpound&#39;, function(source, args, raw)&#xA;    UnpoundVehicle()&#xA;    -- or UnpoundVehicle(&#39;MONO 420&#39;)&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.discordapp.com/attachments/1234840062181769378/1238255435358666884/307592b7-b7d1-40b4-b615-a1ac0d26c385.jpg?ex=663e9ebd&amp;amp;is=663d4d3d&amp;amp;hm=133b443e1a18490a0ef8669650068d0c546149d9bda930140539665202112e27&amp;amp;&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yiweizhi-github/three_kingdoms_kill</title>
    <updated>2024-05-11T01:29:47Z</updated>
    <id>tag:github.com,2024-05-11:/yiweizhi-github/three_kingdoms_kill</id>
    <link href="https://github.com/yiweizhi-github/three_kingdoms_kill" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;用lua语言基于面向对象思想实现的一款文字版三国杀，5000余行代码实现了三国杀标准版108张卡牌的效果以及标准包、风、林、火、山包中除神将和左慈外53位武将的技能效果，并通过严谨测试。输入lua main.lua即可试玩，需安装好lua，建议在ubutnu系统下运行，否则会出现中文乱码。 项目亮点： 1、lua面向对象的实现基于云风大佬的代码，但原版代码不支持在声明类时对table赋值，即可以执行classA.t = {}，但无法执行classA.t[1] = 1，本项目对云风大佬的代码进行改进，使得这一操作可以完成； 2、代码封装性好，可读性强。本项目对游戏过程中经常出现的操作（比如许多武将发动技能都需要的“弃置一张牌”的操作）进行了封装，大大缩减了代码行数，也使得技能实现的代码更容易看懂； 3、进行了逻辑层和IO层的分离。本项目将接收玩家输入的IO层单独用query模块实现，不与游戏逻辑层写在一起，避免了在编写具体卡牌或技能逻辑时出现大段的读取玩家输入的代码导致整体代码冗长混乱； 4、在深入了解游戏玩法的基础上，对游戏逻辑进行了较好的拆解和划分，整体代码实现逻辑清晰，扩展性强。例如，对玩家一个回合的行动流程进行了清晰划分，每个流程都由一个对应的函数完成；将每个卡的结算逻辑分为use（使用）和respond（响应），然后根据具体武将技能的不同，编写不同的use和respond方法；被动技能基于时机触发，在一个时机内处理相关技能，就算涉及到的技能多但结算链清晰有序。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>AstroNvim/astrotheme</title>
    <updated>2024-05-11T01:29:47Z</updated>
    <id>tag:github.com,2024-05-11:/AstroNvim/astrotheme</id>
    <link href="https://github.com/AstroNvim/astrotheme" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The default colorscheme used by AstroNvim&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://astronvim.com/logo/astronvim.svg?sanitize=true&#34; width=&#34;100/&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; AstroTheme &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;The default colorscheme used by &lt;a href=&#34;https://github.com/AstroNvim/AstroNvim&#34;&gt;AstroNvim&lt;/a&gt; an aesthetically pleasing and feature-rich neovim config that is extensible and easy to use with a great set of plugins &lt;/p&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Automatic&lt;/strong&gt; plugin detection and highlight setting (Packer and lazy.nvim supported)&lt;/li&gt; &#xA; &lt;li&gt;Override or modify &lt;strong&gt;&lt;em&gt;EVERYTHING.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;Global &amp;amp; Theme specific overrides&lt;/li&gt; &#xA; &lt;li&gt;Vim terminal colors&lt;/li&gt; &#xA; &lt;li&gt;Heirline highlights&lt;/li&gt; &#xA; &lt;li&gt;Lualine support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎨 Palettes&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://astronvim.com/themes/overview.png&#34;&gt; &lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;AstroDark (default)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;colorscheme astrodark &#34; Dark theme (default)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://astronvim.com/themes/astrodark.png&#34;&gt; &lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;AstroLight&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;colorscheme astrolight &#34; Light theme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://astronvim.com/themes/astrolight.png&#34;&gt; &lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;AstroMars&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;colorscheme astromars &#34; Red theme&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://astronvim.com/themes/astromars.png&#34;&gt; &lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🛠 Options&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;astrotheme&#34;).setup({&#xA;  palette = &#34;astrodark&#34;, -- String of the default palette to use when calling `:colorscheme astrotheme`&#xA;  background = { -- :h background, palettes to use when using the core vim background colors&#xA;    light = &#34;astrolight&#34;,&#xA;    dark = &#34;astrodark&#34;,&#xA;  },&#xA;&#xA;  style = {&#xA;    transparent = false,         -- Bool value, toggles transparency.&#xA;    inactive = true,             -- Bool value, toggles inactive window color.&#xA;    float = true,                -- Bool value, toggles floating windows background colors.&#xA;    neotree = true,              -- Bool value, toggles neo-trees background color.&#xA;    border = true,               -- Bool value, toggles borders.&#xA;    title_invert = true,         -- Bool value, swaps text and background colors.&#xA;    italic_comments = true,      -- Bool value, toggles italic comments.&#xA;    simple_syntax_colors = true, -- Bool value, simplifies the amounts of colors used for syntax highlighting.&#xA;  },&#xA;&#xA;&#xA;  termguicolors = true, -- Bool value, toggles if termguicolors are set by AstroTheme.&#xA;&#xA;  terminal_color = true, -- Bool value, toggles if terminal_colors are set by AstroTheme.&#xA;&#xA;  plugin_default = &#34;auto&#34;, -- Sets how all plugins will be loaded&#xA;                           -- &#34;auto&#34;: Uses lazy / packer enabled plugins to load highlights.&#xA;                           -- true: Enables all plugins highlights.&#xA;                           -- false: Disables all plugins.&#xA;&#xA;  plugins = {              -- Allows for individual plugin overrides using plugin name and value from above.&#xA;    [&#34;bufferline.nvim&#34;] = false,&#xA;  },&#xA;&#xA;  palettes = {&#xA;    global = {             -- Globally accessible palettes, theme palettes take priority.&#xA;      my_grey = &#34;#ebebeb&#34;,&#xA;      my_color = &#34;#ffffff&#34;&#xA;    },&#xA;    astrodark = {          -- Extend or modify astrodarks palette colors&#xA;      ui = {&#xA;        red = &#34;#800010&#34;, -- Overrides astrodarks red UI color&#xA;        accent = &#34;#CC83E3&#34;  -- Changes the accent color of astrodark.&#xA;      },&#xA;      syntax = {&#xA;        cyan = &#34;#800010&#34;, -- Overrides astrodarks cyan syntax color&#xA;        comments = &#34;#CC83E3&#34;  -- Overrides astrodarks comment color.&#xA;      },&#xA;      my_color = &#34;#000000&#34; -- Overrides global.my_color&#xA;    },&#xA;  },&#xA;&#xA;  highlights = {&#xA;    global = {             -- Add or modify hl groups globally, theme specific hl groups take priority.&#xA;      modify_hl_groups = function(hl, c)&#xA;        hl.PluginColor4 = {fg = c.my_grey, bg = c.none }&#xA;      end,&#xA;      [&#34;@String&#34;] = {fg = &#34;#ff00ff&#34;, bg = &#34;NONE&#34;},&#xA;    },&#xA;    astrodark = {&#xA;      -- first parameter is the highlight table and the second parameter is the color palette table&#xA;      modify_hl_groups = function(hl, c) -- modify_hl_groups function allows you to modify hl groups,&#xA;        hl.Comment.fg = c.my_color&#xA;        hl.Comment.italic = true&#xA;      end,&#xA;      [&#34;@String&#34;] = {fg = &#34;#ff00ff&#34;, bg = &#34;NONE&#34;},&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📃 Palette Properties&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;modifiable palette names&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;--------------------------------&#xA;--- Syntax&#xA;--------------------------------&#xA;-- only syntax colors.&#xA;&#xA;syntax.red&#xA;syntax.blue&#xA;syntax.green&#xA;syntax.yellow&#xA;syntax.purple&#xA;syntax.cyan&#xA;syntax.orange&#xA;syntax.text&#xA;syntax.comment&#xA;syntax.mute&#xA;&#xA;--------------------------------&#xA;--- UI&#xA;--------------------------------&#xA;-- everything UI and none-text related.&#xA;ui.red&#xA;ui.blue&#xA;ui.green&#xA;ui.yellow&#xA;ui.purple&#xA;ui.cyan&#xA;ui.orange&#xA;&#xA;ui.accent&#xA;&#xA;ui.tabline&#xA;ui.winbar&#xA;ui.tool&#xA;ui.base&#xA;ui.inactive_base&#xA;ui.statusline&#xA;ui.split&#xA;ui.float&#xA;ui.title&#xA;ui.border&#xA;ui.current_line&#xA;ui.scrollbar&#xA;ui.selection&#xA;ui.menu_selection&#xA;ui.highlight&#xA;ui.none_text&#xA;ui.text&#xA;ui.text_active&#xA;ui.text_inactive&#xA;ui.text_match&#xA;&#xA;ui.prompt&#xA;&#xA;--------------------------------&#xA;--- terminal&#xA;--------------------------------&#xA;-- terminal colors.&#xA;term.black&#xA;term.bright_black&#xA;&#xA;term.red&#xA;term.bright_red&#xA;&#xA;term.green&#xA;term.bright_green&#xA;&#xA;term.yellow&#xA;term.bright_yellow&#xA;&#xA;term.blue&#xA;term.bright_blue&#xA;&#xA;term.purple&#xA;term.bright_purple&#xA;&#xA;term.cyan&#xA;term.bright_cyan&#xA;&#xA;term.white&#xA;term.bright_white&#xA;&#xA;term.background&#xA;term.foreground&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;⚡ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.8&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔌 Supported Plugins&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Plugin&lt;/th&gt; &#xA;   &lt;th&gt;Key&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/stevearc/aerial.nvim&#34;&gt;aerial.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;aerial&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DanilaMihailov/beacon.nvim&#34;&gt;beacon.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;beacon&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/akinsho/bufferline.nvim&#34;&gt;bufferline.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bufferline&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/glepnir/dashboard-nvim&#34;&gt;dashboard-nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dashboard-nvim&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/flash.nvim&#34;&gt;flash.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;flash&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gitsigns&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/phaazon/hop.nvim&#34;&gt;hop.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hop&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim&#34;&gt;indent_blankline.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;indent-blankline&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ggandor/lightspeed.nvim&#34;&gt;lightspeed.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;lightspeed&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;lualine&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;neo-tree.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;neo-tree&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/NeogitOrg/neogit&#34;&gt;neogit&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;neogit&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/noice.nvim&#34;&gt;noice.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;noice&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/smartinellimarco/nvcheatsheet.nvim&#34;&gt;nvcheatsheet.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvcheatsheet&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvim-cmp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-dap-ui&#34;&gt;nvim-dap-ui&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvim-dap-ui&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-notify&#34;&gt;nvim-notify&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvim-notify&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-tree.lua&#34;&gt;nvim-tree.lua&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvim-tree&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/p00f/nvim-ts-rainbow&#34;&gt;nvim-ts-rainbow&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvim-ts-rainbow&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/HiPhish/nvim-ts-rainbow2&#34;&gt;nvim-ts-rainbow2&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvim-ts-rainbow2&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvim-web-devicons&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/s1n7ax/nvim-window-picker&#34;&gt;nvim-window-picker&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nvim-window-picker&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/HiPhish/rainbow-delimiters.nvim&#34;&gt;rainbow-delimiters.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rainbow-delimiters&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;telescope&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/todo-comments.nvim&#34;&gt;todo-comments.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;telescope&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vimwiki/vimwiki&#34;&gt;vimwiki&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vimwiki&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/RRethy/vim-illuminate&#34;&gt;vim-illuminate&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vim-illuminate&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;which-key.nvim&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;which-key&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;📦 Installation&lt;/h2&gt; &#xA;&lt;p&gt;Lazy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{ &#34;AstroNvim/astrotheme&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Packer:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt; use &#34;AstroNvim/astrotheme&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you plan to contribute, please check the &lt;a href=&#34;https://github.com/AstroNvim/.github/raw/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; first.&lt;/p&gt;</summary>
  </entry>
</feed>