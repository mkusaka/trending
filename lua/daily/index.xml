<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-03T01:35:58Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ac-custom-shaders-patch/acc-extension-config</title>
    <updated>2023-01-03T01:35:58Z</updated>
    <id>tag:github.com,2023-01-03:/ac-custom-shaders-patch/acc-extension-config</id>
    <link href="https://github.com/ac-custom-shaders-patch/acc-extension-config" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Configuration files for Assetto Corsa Custom Shaders Patch&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Custom Shaders Patch configs&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://open.vscode.dev/ac-custom-shaders-patch/acc-extension-config&#34;&gt;&lt;img src=&#34;https://open.vscode.dev/badges/open-in-vscode.svg?sanitize=true&#34; alt=&#34;Open in Visual Studio Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://trello.com/b/xq54vHsX/ac-patch&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/trello-more%20info-brightgreen.svg?sanitize=true&#34; alt=&#34;More information: https://trello.com/b/xq54vHsX/ac-patch&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/W2KQCMH&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join%20chat-brightgreen.svg?sanitize=true&#34; alt=&#34;Join the chat in Discord: https://discord.gg/buxkYNT&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://acstuff.ru/patch/cars-configs/warnings/list&#34;&gt;&lt;img src=&#34;https://acstuff.ru/patch/cars-configs/warnings/icon?t=0&#34; alt=&#34;Cars configs status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://acstuff.ru/patch/cars-textures/warnings/list&#34;&gt;&lt;img src=&#34;https://acstuff.ru/patch/cars-textures/warnings/icon?t=0&#34; alt=&#34;Cars textures status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://acstuff.ru/patch/tracks-configs/warnings/list&#34;&gt;&lt;img src=&#34;https://acstuff.ru/patch/tracks-configs/warnings/icon?t=0&#34; alt=&#34;Track configs status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://acstuff.ru/patch/tracks-vao/warnings/list&#34;&gt;&lt;img src=&#34;https://acstuff.ru/patch/tracks-vao/warnings/icon?t=0&#34; alt=&#34;Track VAO status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Configuration files and resources for Custom Shaders Patch for Assetto Corsa. Define things like track lights, specific car settings, additional tyres textures and so on. There is a server somewhere pulling it from time to time (with 5 minutes interval) and converting it into a format that can be downloaded automatically with AC Content Manager (or any other launcher, API for that is really simple).&lt;/p&gt; &#xA;&lt;h2&gt;Please note:&lt;/h2&gt; &#xA;&lt;p&gt;Most of the stuff is adjustable with ini files: live, saving a car/track-config take effect immediately during gameplay.&lt;/p&gt; &#xA;&lt;h2&gt;Links:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ac-custom-shaders-patch/acc-extension-config/wiki&#34;&gt;The wiki with some docs here on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://acstuff.ru/patch/&#34;&gt;CustomShadersPatch webpage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://trello.com/b/xq54vHsX/ac-patch&#34;&gt;Trello board with more details&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/ac-custom-shaders-patch/public/acc-shaders/tree/master&#34;&gt;Shaders used by Shaders Patch&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use it:&lt;/h2&gt; &#xA;&lt;p&gt;If you’re using &lt;a href=&#34;https://acstuff.ru/app/&#34;&gt;AC Content Manager&lt;/a&gt; (lite version would work just as well), go to “Settings/Custom Shaders Patch”. From there, app would offer you to install or update the patch, as well as download configs. But, at the same time, you don’t have to worry about downloading configs: by default, Content Manager would download them automatically once needed.&lt;/p&gt; &#xA;&lt;p&gt;If you’re not using Content Manager, you can always get any version of CustomShadersPatch on the link above. Then, either move files from “MODS/Shaders Lights Patch” to AC root folder (so “dwrite.dll” would end up next to “acs.exe”, that’s the patch itself), or use &lt;a href=&#34;https://www.racedepartment.com/downloads/jsgme-mod-enabler.13803/&#34;&gt;JSGME&lt;/a&gt; to enable it. And, with manual approach, you would have to simply download the whole repo in a ZIP file (there is that green button in the upper right corner right here) and extract it so folder “tzdata” would end up in “assettocorsa/extension”.&lt;/p&gt; &#xA;&lt;h2&gt;Content of this repo:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ac-custom-shaders-patch/acc-extension-config/tree/master/config/cars&#34;&gt;Car light configs&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ac-custom-shaders-patch/acc-extension-config/tree/master/config/tracks&#34;&gt;Track light configs&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ac-custom-shaders-patch/acc-extension-config/tree/master/vao-patches&#34;&gt;Vertex AO patches (prebaked shadows)&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ac-custom-shaders-patch/acc-weatherfx-base&#34;&gt;Default Weather FX implementation&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ac-custom-shaders-patch/acc-weatherfx-base&#34;&gt;Default Weather FX controller&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About Weather FX:&lt;/h2&gt; &#xA;&lt;p&gt;If you’re looking to make a new Weather FX script, please feel free to use &lt;a href=&#34;https://github.com/ac-custom-shaders-patch/acc-weatherfx-base&#34;&gt;the default one&lt;/a&gt; as a base. That script is in public domain, meaning you can do whatever you want with it without giving any credit or anything like that. There is a description for each file and a lot of comments in code.&lt;/p&gt; &#xA;&lt;h2&gt;Destination folders:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;C:\Progam Files\Steam\steamapps\common\assettocorsa\extension\  or&#xA;X:\Steam\steamapps\common\assettocorsa\extension\&#xA;\---extension&#xA;    +---config&#xA;    |   +---cars&#xA;    |   |   +---common&#xA;    |   |   +---kunos&#xA;    |   |   \---mods&#xA;    |   |       +---acclub&#xA;    |   |       +---acfl&#xA;    |   |       +---fo&#xA;    |   |       \---rss&#xA;    |   \---tracks&#xA;    |       \---common&#xA;    \---vao-patches&#xA;&#xA;user options saved in (defaults in above folder):&#xA;%userprofile%\Documents\Assetto Corsa\cfg\extension\&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Be aware, that sometimes the cfg-maker did not name files properly, i.e. for this track-light-config — “config\tracks\ks_nurburgring.ini” — all these files are required too:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;  nurbAllGlass.kn5&#xA;  nurbSpots.kn5&#xA;  nurbSpotsPad.kn5&#xA;  nurbpitglass2.kn5&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>monaqa/dial.nvim</title>
    <updated>2023-01-03T01:35:58Z</updated>
    <id>tag:github.com,2023-01-03:/monaqa/dial.nvim</id>
    <link href="https://github.com/monaqa/dial.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;enhanced increment/decrement plugin for Neovim.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;dial.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTICE: This plugin is work-in-progress yet. User interface is subject to change without notice.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FOR USERS OF THE PREVIOUS VERSION (v0.2.0)&lt;/h2&gt; &#xA;&lt;p&gt;This plugin was released v0.3.0 on 2022/02/20 and is no longer compatible with the old interface. If you have configured the settings for previous versions, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/monaqa/dial.nvim/master/TROUBLESHOOTING.md&#34;&gt;TROUBLESHOOTING.md&lt;/a&gt; and reconfigure them.&lt;/p&gt; &#xA;&lt;h2&gt;Abstract&lt;/h2&gt; &#xA;&lt;p&gt;Extended increment/decrement plugin for &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt;. Written in Lua.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/monaqa/dial.nvim/wiki/fig/dial-demo-2.gif&#34; alt=&#34;demo.gif&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Increment/decrement based on various type of rules &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;n-ary (&lt;code&gt;2 &amp;lt;= n &amp;lt;= 36&lt;/code&gt;) integers&lt;/li&gt; &#xA;   &lt;li&gt;date and time&lt;/li&gt; &#xA;   &lt;li&gt;constants (an ordered set of specific strings, such as a keyword or operator) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;true&lt;/code&gt; ⇄ &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; ⇄ &lt;code&gt;||&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;a&lt;/code&gt; ⇄ &lt;code&gt;b&lt;/code&gt; ⇄ ... ⇄ &lt;code&gt;z&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;hex colors&lt;/li&gt; &#xA;   &lt;li&gt;semantic version&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support &lt;code&gt;&amp;lt;C-a&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;C-x&amp;gt;&lt;/code&gt; / &lt;code&gt;g&amp;lt;C-a&amp;gt;&lt;/code&gt; / &lt;code&gt;g&amp;lt;C-x&amp;gt;&lt;/code&gt; in VISUAL mode&lt;/li&gt; &#xA; &lt;li&gt;Flexible configuration of increment/decrement targets &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Rules that are valid only in specific FileType&lt;/li&gt; &#xA;   &lt;li&gt;Rules that are valid only in VISUAL mode&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Support counter&lt;/li&gt; &#xA; &lt;li&gt;Support dot repeat (without overriding the behavior of &lt;code&gt;.&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Similar plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tpope/vim-speeddating&#34;&gt;tpope/vim-speeddating&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zef/vim-cycle&#34;&gt;Cycle.vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AndrewRadev/switch.vim&#34;&gt;AndrewRadev/switch.vim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;dial.nvim&lt;/code&gt; requires Neovim &lt;code&gt;&amp;gt;=0.5.0&lt;/code&gt; (&lt;code&gt;&amp;gt;=0.6.1&lt;/code&gt; is recommended). You can install &lt;code&gt;dial.nvim&lt;/code&gt; by following the instructions of your favorite package manager.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;This plugin does not provide or override any default key-mappings. To use this plugin, you need to assign the plugin key-mapping to the key you like, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;nmap  &amp;lt;C-a&amp;gt;  &amp;lt;Plug&amp;gt;(dial-increment)&#xA;nmap  &amp;lt;C-x&amp;gt;  &amp;lt;Plug&amp;gt;(dial-decrement)&#xA;vmap  &amp;lt;C-a&amp;gt;  &amp;lt;Plug&amp;gt;(dial-increment)&#xA;vmap  &amp;lt;C-x&amp;gt;  &amp;lt;Plug&amp;gt;(dial-decrement)&#xA;vmap g&amp;lt;C-a&amp;gt; g&amp;lt;Plug&amp;gt;(dial-increment)&#xA;vmap g&amp;lt;C-x&amp;gt; g&amp;lt;Plug&amp;gt;(dial-decrement)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or you can configure it with Lua as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;C-a&amp;gt;&#34;, require(&#34;dial.map&#34;).inc_normal(), {noremap = true})&#xA;vim.api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;C-x&amp;gt;&#34;, require(&#34;dial.map&#34;).dec_normal(), {noremap = true})&#xA;vim.api.nvim_set_keymap(&#34;v&#34;, &#34;&amp;lt;C-a&amp;gt;&#34;, require(&#34;dial.map&#34;).inc_visual(), {noremap = true})&#xA;vim.api.nvim_set_keymap(&#34;v&#34;, &#34;&amp;lt;C-x&amp;gt;&#34;, require(&#34;dial.map&#34;).dec_visual(), {noremap = true})&#xA;vim.api.nvim_set_keymap(&#34;v&#34;, &#34;g&amp;lt;C-a&amp;gt;&#34;, require(&#34;dial.map&#34;).inc_gvisual(), {noremap = true})&#xA;vim.api.nvim_set_keymap(&#34;v&#34;, &#34;g&amp;lt;C-x&amp;gt;&#34;, require(&#34;dial.map&#34;).dec_gvisual(), {noremap = true})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;In this plugin, flexible increment/decrement rules can be set by using &lt;strong&gt;augend&lt;/strong&gt; and &lt;strong&gt;group&lt;/strong&gt;, where &lt;strong&gt;augend&lt;/strong&gt; represents the target of the increment/decrement operation, and &lt;strong&gt;group&lt;/strong&gt; represents a group of multiple augends.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local augend = require(&#34;dial.augend&#34;)&#xA;require(&#34;dial.config&#34;).augends:register_group{&#xA;  -- default augends used when no group name is specified&#xA;  default = {&#xA;    augend.integer.alias.decimal,   -- nonnegative decimal number (0, 1, 2, 3, ...)&#xA;    augend.integer.alias.hex,       -- nonnegative hex number  (0x01, 0x1a1f, etc.)&#xA;    augend.date.alias[&#34;%Y/%m/%d&#34;],  -- date (2022/02/19, etc.)&#xA;  },&#xA;&#xA;  -- augends used when group with name `mygroup` is specified&#xA;  mygroup = {&#xA;    augend.integer.alias.decimal,&#xA;    augend.constant.alias.bool,    -- boolean value (true &amp;lt;-&amp;gt; false)&#xA;    augend.date.alias[&#34;%m/%d/%Y&#34;], -- date (02/19/2022, etc.)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To define a group, use the &lt;code&gt;augends:register_group&lt;/code&gt; function in the &lt;code&gt;&#34;dial.config&#34;&lt;/code&gt; module. The arguments is a dictionary whose keys are the group names and whose values are the list of augends.&lt;/li&gt; &#xA; &lt;li&gt;Various augends are defined &lt;code&gt;&#34;dial.augend&#34;&lt;/code&gt; by default.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To specify the group of augends, you can use &lt;strong&gt;expression register&lt;/strong&gt; (&lt;a href=&#34;https://neovim.io/doc/user/change.html#quote_=&#34;&gt;&lt;code&gt;:h @=&lt;/code&gt;&lt;/a&gt;) as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&#34;=mygroup&amp;lt;CR&amp;gt;&amp;lt;C-a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If it is tedious to specify the expression register for each operation, you can &#34;map&#34; it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;nmap &amp;lt;Leader&amp;gt;a &#34;=mygroup&amp;lt;CR&amp;gt;&amp;lt;Plug&amp;gt;(dial-increment)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, you can set the same mapping without expression register:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_set_keymap(&#34;n&#34;, &#34;&amp;lt;Leader&amp;gt;a&#34;, require(&#34;dial.map&#34;).inc_normal(&#34;mygroup&#34;), {noremap = true})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you don&#39;t specify any group name in the way described above, the addends in the &lt;code&gt;default&lt;/code&gt; group is used instead.&lt;/p&gt; &#xA;&lt;h3&gt;Example Configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;lua &amp;lt;&amp;lt; EOF&#xA;local augend = require(&#34;dial.augend&#34;)&#xA;require(&#34;dial.config&#34;).augends:register_group{&#xA;  default = {&#xA;    augend.integer.alias.decimal,&#xA;    augend.integer.alias.hex,&#xA;    augend.date.alias[&#34;%Y/%m/%d&#34;],&#xA;  },&#xA;  typescript = {&#xA;    augend.integer.alias.decimal,&#xA;    augend.integer.alias.hex,&#xA;    augend.constant.new{ elements = {&#34;let&#34;, &#34;const&#34;} },&#xA;  },&#xA;  visual = {&#xA;    augend.integer.alias.decimal,&#xA;    augend.integer.alias.hex,&#xA;    augend.date.alias[&#34;%Y/%m/%d&#34;],&#xA;    augend.constant.alias.alpha,&#xA;    augend.constant.alias.Alpha,&#xA;  },&#xA;}&#xA;&#xA;-- change augends in VISUAL mode&#xA;vim.api.nvim_set_keymap(&#34;v&#34;, &#34;&amp;lt;C-a&amp;gt;&#34;, require(&#34;dial.map&#34;).inc_normal(&#34;visual&#34;), {noremap = true})&#xA;vim.api.nvim_set_keymap(&#34;v&#34;, &#34;&amp;lt;C-x&amp;gt;&#34;, require(&#34;dial.map&#34;).dec_normal(&#34;visual&#34;), {noremap = true})&#xA;EOF&#xA;&#xA;&#34; enable only for specific FileType&#xA;autocmd FileType typescript lua vim.api.nvim_buf_set_keymap(0, &#34;n&#34;, &#34;&amp;lt;C-a&amp;gt;&#34;, require(&#34;dial.map&#34;).inc_normal(&#34;typescript&#34;), {noremap = true})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;List of Augends&lt;/h2&gt; &#xA;&lt;p&gt;For simplicity, we define the variable &lt;code&gt;augend&lt;/code&gt; as follows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local augend = require(&#34;dial.augend&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;n&lt;/code&gt;-based integer (&lt;code&gt;2 &amp;lt;= n &amp;lt;= 36&lt;/code&gt;). You can use this rule with &lt;code&gt;augend.integer.new{ ...opts }&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;dial.config&#34;).augends:register_group{&#xA;  default = {&#xA;    -- uppercase hex number (0x1A1A, 0xEEFE, etc.)&#xA;    augend.integer.new{&#xA;      radix = 16,&#xA;      prefix = &#34;0x&#34;,&#xA;      natural = true,&#xA;      case = &#34;upper&#34;,&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;code&gt;date&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Date and time.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;dial.config&#34;).augends:register_group{&#xA;  default = {&#xA;    -- date with format `yyyy/mm/dd`&#xA;    augend.date.new{&#xA;        pattern = &#34;%Y/%m/%d&#34;,&#xA;        default_kind = &#34;day&#34;,&#xA;        -- if true, it does not match dates which does not exist, such as 2022/05/32&#xA;        only_valid = true,&#xA;        -- if true, it only matches dates with word boundary&#xA;        word = false,&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In the &lt;code&gt;pattern&lt;/code&gt; argument, you can use the following escape sequences:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sequence&lt;/th&gt; &#xA;   &lt;th&gt;Meaning&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%Y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;4-digit year. (e.g. &lt;code&gt;2022&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Last 2 digits of year. The upper 2 digits are interpreted as &lt;code&gt;20&lt;/code&gt;. (e.g. &lt;code&gt;22&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%m&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2-digit month. (e.g. &lt;code&gt;09&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2-digit day. (e.g. &lt;code&gt;28&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%H&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2-digit hour, expressed in 24 hours. (e.g. &lt;code&gt;15&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%I&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2-digit hour, expressed in 12 hours. (e.g. &lt;code&gt;03&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%M&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2-digit minute. (e.g. &lt;code&gt;05&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%S&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;2-digit second. (e.g. &lt;code&gt;08&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%-y&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1- or 2-digit year. (e.g. &lt;code&gt;9&lt;/code&gt; represents 2009)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%-m&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1- or 2-digit month. (e.g. &lt;code&gt;9&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%-d&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1- or 2-digit day. (e.g. &lt;code&gt;28&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%-H&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1- or 2-digit hour, expressed in 24 hours. (e.g. &lt;code&gt;15&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%-I&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1- or 2-digit hour, expressed in 12 hours. (e.g. &lt;code&gt;3&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%-M&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1- or 2-digit minute. (e.g. &lt;code&gt;5&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%-S&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1- or 2-digit second. (e.g. &lt;code&gt;8&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%a&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English weekdays (&lt;code&gt;Sun&lt;/code&gt;, &lt;code&gt;Mon&lt;/code&gt;, ..., &lt;code&gt;Sat&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%A&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English full weekdays (&lt;code&gt;Sunday&lt;/code&gt;, &lt;code&gt;Monday&lt;/code&gt;, ..., &lt;code&gt;Saturday&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%b&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English month names (&lt;code&gt;Jan&lt;/code&gt;, ..., &lt;code&gt;Dec&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%B&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;English month full names (&lt;code&gt;January&lt;/code&gt;, ..., &lt;code&gt;December&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%p&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;AM&lt;/code&gt; or &lt;code&gt;PM&lt;/code&gt;.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;%J&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Japanese weekdays (&lt;code&gt;日&lt;/code&gt;, &lt;code&gt;月&lt;/code&gt;, ..., &lt;code&gt;土&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;code&gt;constant&lt;/code&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Predefined sequence of strings. You can use this rule with &lt;code&gt;augend.constant.new{ ...opts }&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;dial.config&#34;).augends:register_group{&#xA;  default = {&#xA;    -- uppercase hex number (0x1A1A, 0xEEFE, etc.)&#xA;    augend.constant.new{&#xA;      elements = {&#34;and&#34;, &#34;or&#34;},&#xA;      word = true, -- if false, &#34;sand&#34; is incremented into &#34;sor&#34;, &#34;doctor&#34; into &#34;doctand&#34;, etc.&#xA;      cyclic = true,  -- &#34;or&#34; is incremented into &#34;and&#34;.&#xA;    },&#xA;    augend.constant.new{&#xA;      elements = {&#34;&amp;amp;&amp;amp;&#34;, &#34;||&#34;},&#xA;      word = false,&#xA;      cyclic = true,&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;hexcolor&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;RGB color code such as &lt;code&gt;#000000&lt;/code&gt; and &lt;code&gt;#ffffff&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;dial.config&#34;).augends:register_group{&#xA;  default = {&#xA;    -- uppercase hex number (0x1A1A, 0xEEFE, etc.)&#xA;    augend.hexcolor.new{&#xA;      case = &#34;lower&#34;,&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;semver&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Semantic versions. You can use this rule by augend alias described below.&lt;/p&gt; &#xA;&lt;p&gt;It differs from a simple nonnegative integer increment/decrement in these ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When the cursor is before the semver string, the patch version is incremented.&lt;/li&gt; &#xA; &lt;li&gt;When the minor version is incremented, the patch version is reset to zero.&lt;/li&gt; &#xA; &lt;li&gt;When the major version is incremented, the minor and patch versions are reset to zero.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;code&gt;user&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Custom augends.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;dial.config&#34;).augends:register_group{&#xA;  default = {&#xA;    -- uppercase hex number (0x1A1A, 0xEEFE, etc.)&#xA;    augend.user.new{&#xA;      find = require(&#34;dial.augend.common&#34;).find_pattern(&#34;%d+&#34;),&#xA;      add = function(text, addend, cursor)&#xA;          local n = tonumber(text)&#xA;          n = math.floor(n * (2 ^ addend))&#xA;          text = tostring(n)&#xA;          cursor = #text&#xA;          return {text = text, cursor = cursor}&#xA;      end&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Augend Alias&lt;/h2&gt; &#xA;&lt;p&gt;Some augend rules are defined as alias. It can be used directly without using &lt;code&gt;new&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;dial.config&#34;).augends:register_group{&#xA;  default = {&#xA;    augend.integer.alias.decimal,&#xA;    augend.integer.alias.hex,&#xA;    augend.date.alias[&#34;%Y/%m/%d&#34;],&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Alias Name&lt;/th&gt; &#xA;   &lt;th&gt;Explanation&lt;/th&gt; &#xA;   &lt;th&gt;Examples&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.integer.alias.decimal&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;decimal natural number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, ..., &lt;code&gt;9&lt;/code&gt;, &lt;code&gt;10&lt;/code&gt;, &lt;code&gt;11&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.integer.alias.decimal_int&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;decimal integer (including negative number)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;314&lt;/code&gt;, &lt;code&gt;-1592&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.integer.alias.hex&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;hex natural number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0x00&lt;/code&gt;, &lt;code&gt;0x3f3f&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.integer.alias.octal&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;octal natural number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0o00&lt;/code&gt;, &lt;code&gt;0o11&lt;/code&gt;, &lt;code&gt;0o24&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.integer.alias.binary&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;binary natural number&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0b0101&lt;/code&gt;, &lt;code&gt;0b11001111&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%Y/%m/%d&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%Y/%m/%d&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2021/01/23&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%m/%d/%Y&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%m/%d/%Y&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;23/01/2021&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%d/%m/%Y&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%d/%m/%Y&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;01/23/2021&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%m/%d/%y&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%m/%d/%y&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;01/23/21&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%d/%m/%y&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%d/%m/%y&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;23/01/21&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%m/%d&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%m/%d&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;01/04&lt;/code&gt;, &lt;code&gt;02/28&lt;/code&gt;, &lt;code&gt;12/25&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%-m/%-d&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%-m/%-d&lt;/code&gt; (no paddings)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1/4&lt;/code&gt;, &lt;code&gt;2/28&lt;/code&gt;, &lt;code&gt;12/25&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%Y-%m-%d&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%Y-%m-%d&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2021-01-04&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%d.%m.%Y&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%d.%m.%Y&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;23.01.2021&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%d.%m.%y&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%d.%m.%y&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;23.01.21&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%d.%m.&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%d.%m.&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt; padding)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;04.01.&lt;/code&gt;, &lt;code&gt;28.02.&lt;/code&gt;, &lt;code&gt;25.12.&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%-d.%-m.&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%-d.%-m.&lt;/code&gt; (no paddings)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;4.1.&lt;/code&gt;, &lt;code&gt;28.2.&lt;/code&gt;, &lt;code&gt;25.12.&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%Y年%-m月%-d日&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%Y年%-m月%-d日&lt;/code&gt; (no paddings)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2021年1月4日&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%Y年%-m月%-d日(%ja)&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Date in the format &lt;code&gt;%Y年%-m月%-d日(%ja)&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;2021年1月4日(月)&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%H:%M:%S&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Time in the format &lt;code&gt;%H:%M:%S&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;14:30:00&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.date.alias[&#34;%H:%M&#34;]&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Time in the format &lt;code&gt;%H:%M&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;14:30&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.constant.alias.de_weekday&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;German weekday&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Mo&lt;/code&gt;, &lt;code&gt;Di&lt;/code&gt;, ..., &lt;code&gt;Sa&lt;/code&gt;, &lt;code&gt;So&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.constant.alias.de_weekday_full&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;German full weekday&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Montag&lt;/code&gt;, &lt;code&gt;Dienstag&lt;/code&gt;, ..., &lt;code&gt;Sonntag&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.constant.alias.ja_weekday&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Japanese weekday&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;月&lt;/code&gt;, &lt;code&gt;火&lt;/code&gt;, ..., &lt;code&gt;土&lt;/code&gt;, &lt;code&gt;日&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.constant.alias.ja_weekday_full&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Japanese full weekday&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;月曜日&lt;/code&gt;, &lt;code&gt;火曜日&lt;/code&gt;, ..., &lt;code&gt;日曜日&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.constant.alias.bool&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;elements in boolean algebra (&lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.constant.alias.alpha&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lowercase alphabet letter (word)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, ..., &lt;code&gt;z&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.constant.alias.Alpha&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uppercase alphabet letter (word)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, ..., &lt;code&gt;Z&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;augend.semver.alias.semver&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Semantic version&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;0.3.0&lt;/code&gt;, &lt;code&gt;1.22.1&lt;/code&gt;, &lt;code&gt;3.9.1&lt;/code&gt;, ...&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;If you don&#39;t specify any settings, the following augends is set as the value of the &lt;code&gt;default&lt;/code&gt; group.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;augend.integer.alias.decimal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;augend.integer.alias.hex&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;augend.date.alias[&#34;%Y/%m/%d&#34;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;augend.date.alias[&#34;%Y-%m-%d&#34;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;augend.date.alias[&#34;%m/%d&#34;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;augend.date.alias[&#34;%H:%M&#34;]&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;augend.constant.alias.ja_weekday_full&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/monaqa/dial.nvim/master/HISTORY.md&#34;&gt;HISTORY&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;This plugin uses &lt;code&gt;PlenaryBustedDirectory&lt;/code&gt; in &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;&lt;code&gt;plenary.nvim&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ic3w0lf22/Unnamed-ESP</title>
    <updated>2023-01-03T01:35:58Z</updated>
    <id>tag:github.com,2023-01-03:/ic3w0lf22/Unnamed-ESP</id>
    <link href="https://github.com/ic3w0lf22/Unnamed-ESP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Player ESP for Roblox, fully undetectable, uses Synapse&#39;s built in drawing API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Loadstring&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;pcall(function() loadstring(game:HttpGet(&#39;https://raw.githubusercontent.com/ic3w0lf22/Unnamed-ESP/master/UnnamedESP.lua&#39;))() end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Unnamed-ESP&lt;/h1&gt; &#xA;&lt;p&gt;Player ESP for Roblox, fully undetectable, uses built in drawing API if the exploit supports it.&lt;/p&gt; &#xA;&lt;h1&gt;Supported Exploits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Synapse X&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;ProtoSmasher&lt;/del&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;del&gt;Elysian&lt;/del&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>