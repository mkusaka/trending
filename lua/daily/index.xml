<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-26T01:33:39Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>mvllow/modes.nvim</title>
    <updated>2025-06-26T01:33:39Z</updated>
    <id>tag:github.com,2025-06-26:/mvllow/modes.nvim</id>
    <link href="https://github.com/mvllow/modes.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Prismatic line decorations for the adventurous vim user&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;modes.nvim&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Prismatic line decorations for the adventurous vim user&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;&#x9;&#39;mvllow/modes.nvim&#39;,&#xA;&#x9;tag = &#39;v0.2.1&#39;,&#xA;&#x9;config = function()&#xA;&#x9;&#x9;require(&#39;modes&#39;).setup()&#xA;&#x9;end&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1474821/127896095-6da221cf-3327-4eed-82be-ce419bdf647c.gif&#34; alt=&#34;modes.nvim&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Neovim 0.11&lt;/strong&gt; or later&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;modes&#39;).setup({&#xA;&#x9;colors = {&#xA;&#x9;&#x9;bg = &#34;&#34;, -- Optional bg param, defaults to Normal hl group&#xA;&#x9;&#x9;copy = &#34;#f5c359&#34;,&#xA;&#x9;&#x9;delete = &#34;#c75c6a&#34;,&#xA;&#x9;&#x9;change = &#34;#c75c6a&#34;, -- Optional param, defaults to delete&#xA;&#x9;&#x9;format = &#34;#c79585&#34;,&#xA;&#x9;&#x9;insert = &#34;#78ccc5&#34;,&#xA;&#x9;&#x9;visual = &#34;#9745be&#34;,&#xA;&#x9;},&#xA;&#xA;&#x9;-- Set opacity for cursorline and number background&#xA;&#x9;line_opacity = 0.15,&#xA;&#xA;&#x9;-- Enable cursor highlights&#xA;&#x9;set_cursor = true,&#xA;&#xA;&#x9;-- Enable cursorline initially, and disable cursorline for inactive windows&#xA;&#x9;-- or ignored filetypes&#xA;&#x9;set_cursorline = true,&#xA;&#xA;&#x9;-- Enable line number highlights to match cursorline&#xA;&#x9;set_number = true,&#xA;&#xA;&#x9;-- Enable sign column highlights to match cursorline&#xA;&#x9;set_signcolumn = true,&#xA;&#xA;&#x9;-- Disable modes highlights for specified filetypes&#xA;&#x9;-- or enable with prefix &#34;!&#34; if otherwise disabled (please PR common patterns)&#xA;&#x9;-- Can also be a function fun():boolean that disables modes highlights when true&#xA;&#x9;ignore = { &#39;NvimTree&#39;, &#39;TelescopePrompt&#39;, &#39;!minifiles&#39; }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Themes&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Highlight group&lt;/th&gt; &#xA;   &lt;th&gt;Default value&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModesCopy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;guibg=#f5c359&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModesDelete&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;guibg=#c75c6a&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModesChange&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModesDelete&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModesFormat&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;guibg=#c79585&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModesInsert&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;guibg=#78ccc5&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;ModesVisual&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;guibg=#9745be&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Known issues&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some &lt;em&gt;Which Key&lt;/em&gt; presets conflict with this plugin. For example, &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; operators will not apply highlights if there are &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; prefixes hooked by &lt;em&gt;Which Key&lt;/em&gt; because &lt;em&gt;Which Key&lt;/em&gt; takes priority&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Workaround:&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;which-key&#39;).setup({&#xA;        triggers_blacklist = {&#xA;                n = { &#34;d&#34;, &#34;y&#34; }&#xA;        }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>