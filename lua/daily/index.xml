<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-27T01:38:44Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Project-Sloth/ps-housing</title>
    <updated>2023-07-27T01:38:44Z</updated>
    <id>tag:github.com,2023-07-27:/Project-Sloth/ps-housing</id>
    <link href="https://github.com/Project-Sloth/ps-housing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Advanced housing system for QBCore.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ps-housing&lt;/h1&gt; &#xA;&lt;p&gt;ps-housing is a resource that opens up a world of creative possibilities for housing. Its user-friendly interface lets you decorate any location to your heart&#39;s content. The best part? Not only is it completely free, but it&#39;s also reliable and functional, unlike many other housing systems available. Dive in and start transforming spaces with ps-housing today!&lt;/p&gt; &#xA;&lt;p&gt;ps-housing owes its existence to the exceptional coding expertise of &lt;a href=&#34;https://github.com/ImXirvin&#34;&gt;Xirvin#0985&lt;/a&gt;. His application of top-tier coding practices has been instrumental in creating this script. We at Project Sloth are thrilled that he has joined our team and utilized our platform to deliver this incredible, much-anticipated resource. Our sincere appreciation goes out to &lt;a href=&#34;https://github.com/ImXirvin&#34;&gt;Xirvin#0985&lt;/a&gt; for his outstanding contribution!&lt;/p&gt; &#xA;&lt;h1&gt;Preview &lt;a href=&#34;https://github.com/Project-Sloth/ps-housing&#34;&gt;ps-housing&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Project-Sloth/ps-housing/assets/82112471/07b7f8c6-38ea-4f8c-95b6-9bd6bafbbd09&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/Project-Sloth/ps-housing/assets/82112471/163ae847-5a44-48cb-89f5-e0c1e7b59383&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/Project-Sloth/ps-housing/assets/82112471/655d9bb6-6c6d-4676-b4e0-f4368f3325a9&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/Project-Sloth/ps-housing/assets/82112471/fc632975-c2f6-41fb-89cd-a984679f1a41&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Preview &lt;a href=&#34;https://github.com/Byte-Labs-Project/bl-realtor&#34;&gt;bl-realtor&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/Byte-Labs-Project/bl-realtor/assets/82112471/0fd5aa8b-7305-4239-b6fd-f82b682b83c7&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/Byte-Labs-Project/bl-realtor/assets/82112471/8e702104-92f2-4696-a59e-e3ea89b975b5&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/Byte-Labs-Project/bl-realtor/assets/82112471/f1a4ddfd-b091-4062-a994-e8181974ee49&#34; alt=&#34;image&#34;&gt; &lt;img src=&#34;https://github.com/Byte-Labs-Project/bl-realtor/assets/82112471/fadc1cab-ceea-462a-8b37-f7fec10f415b&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Players can decorate their houses and apartments with a full selection of furniture and decorations (included a wide variety of custom housing props)&lt;/li&gt; &#xA; &lt;li&gt;Provides support for housing and apartments and is a full replacement for qb-apartments and qb-housing &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;When a player first spawns after enabling ps-housing, they will have to choose an apartment. Once they spawn in the stashitems from their previous qb-apartment will be migrated to their new apartment stash.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Allows players to purchase and list houses for sale through &lt;code&gt;bl-realtor&lt;/code&gt; and the realtor job&lt;/li&gt; &#xA; &lt;li&gt;Houses come with personal garages&lt;/li&gt; &#xA; &lt;li&gt;Houses and apartments come with personal wardrobes and stashes&lt;/li&gt; &#xA; &lt;li&gt;Players can share keys to their houses and apartments with other players&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating a new property for sale&lt;/h2&gt; &#xA;&lt;p&gt;Players must have the realtor job to create new properties. Additionally if the realtor has a high enough grade level, they can also help players move to new apartments. All properties must be manually configured for sale by the realtor job, giving you full control over all aspects of properties, and bringing another avenue of roleplay to your server.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pick the location where you want to create a new property&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;code&gt;/housing&lt;/code&gt; to open the housing menu&lt;/li&gt; &#xA; &lt;li&gt;Click on create new property&lt;/li&gt; &#xA; &lt;li&gt;Fill out the details of the property (name, price, description, which shell to use, etc)&lt;/li&gt; &#xA; &lt;li&gt;Choose the door location (this is where the person will enter the house) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ensure that you place it up against a wall, since players will use target to enter the house&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Choose the garage location &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This point is used both for storing vehicles, as well as the location where the vehicle will spawn when taken out of the garage&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Realtors can edit the details of the property by clicking on the property in the housing menu&lt;/li&gt; &#xA; &lt;li&gt;Players can see the properties for sale through the /housing menu as well&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Furnish and decorate a property&lt;/h2&gt; &#xA;&lt;p&gt;Once inside the property, the player can furnish and decorate the property to their liking. They can also invite other players to their property, and give them access to the property. Open the furniture store by pressing &lt;code&gt;Z&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This will open a furniture store complete with all of the props. Select an item from the catalog and place it into the property. You can use the placement gizmo to position the item to your liking as well as use the UI tools for fine tune control over the placement. Once you are happy with the positioning, make sure you press &lt;code&gt;Add to Cart&lt;/code&gt; before moving on. Continue to add as many items as you want to your cart. Once you are done, go to the &lt;code&gt;Checkout&lt;/code&gt; and purchase the items.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: The place on ground button sometimes does not work properly depending on where the native detects the ground to be.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Important&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Players need to place their &lt;a href=&#34;https://github.com/Project-Sloth/ps-housing/raw/7efd2009050b9a20969877cf69b284352a9309bf/shared/config.lua#LL426C96-L426C96&#34;&gt;stash&lt;/a&gt; and &lt;a href=&#34;https://github.com/Project-Sloth/ps-housing/raw/7efd2009050b9a20969877cf69b284352a9309bf/shared/config.lua#L427&#34;&gt;wardrobe&lt;/a&gt; or else they wont have one. Check &lt;a href=&#34;https://github.com/Project-Sloth/ps-housing/raw/7efd2009050b9a20969877cf69b284352a9309bf/shared/config.lua#L422&#34;&gt;Config&lt;/a&gt; for more information.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;This entire README is meant for compatibility with default QBCore scripts. If you have different scripts, you&#39;ll need to adjust them for compatibility yourself. Refrain from asking us how to circumvent paid scripts that can&#39;t be adjusted for ps-housing support. Instead, request their support for ps-housing - this script is fully open source for that reason. Any inquiries related to this be ignored.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;PAY ATTENTION TO EACH STEP. DO NOT SKIP ANY.&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Find the following events in &lt;code&gt;qb-multicharacter&lt;/code&gt; and change in server/main.lua event to:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;qb-multicharacter &amp;gt; server &amp;gt; main.lua&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;RegisterNetEvent(&#39;qb-multicharacter:server:loadUserData&#39;, function(cData)&#xA;    local src = source&#xA;    if QBCore.Player.Login(src, cData.citizenid) then&#xA;        repeat&#xA;            Wait(10)&#xA;        until hasDonePreloading[src]&#xA;        print(&#39;^2[qb-core]^7 &#39;..GetPlayerName(src)..&#39; (Citizen ID: &#39;..cData.citizenid..&#39;) has succesfully loaded!&#39;)&#xA;        QBCore.Commands.Refresh(src)&#xA;        TriggerClientEvent(&#39;ps-housing:client:setupSpawnUI&#39;, src, cData)&#xA;        TriggerEvent(&#34;qb-log:server:CreateLog&#34;, &#34;joinleave&#34;, &#34;Loaded&#34;, &#34;green&#34;, &#34;**&#34;.. GetPlayerName(src) .. &#34;** (&amp;lt;@&#34;..(QBCore.Functions.GetIdentifier(src, &#39;discord&#39;):gsub(&#34;discord:&#34;, &#34;&#34;) or &#34;unknown&#34;)..&#34;&amp;gt; |  ||&#34;  ..(QBCore.Functions.GetIdentifier(src, &#39;ip&#39;) or &#39;undefined&#39;) ..  &#34;|| | &#34; ..(QBCore.Functions.GetIdentifier(src, &#39;license&#39;) or &#39;undefined&#39;) ..&#34; | &#34; ..cData.citizenid..&#34; | &#34;..src..&#34;) loaded..&#34;)&#xA;    end&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;qb-multicharacter &amp;gt; server &amp;gt; main.lua&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;RegisterNetEvent(&#39;qb-multicharacter:server:createCharacter&#39;, function(data)&#xA;    local src = source&#xA;    local newData = {}&#xA;    newData.cid = data.cid&#xA;    newData.charinfo = data&#xA;    if QBCore.Player.Login(src, false, newData) then&#xA;        repeat&#xA;            Wait(10)&#xA;        until hasDonePreloading[src]&#xA;        print(&#39;^2[qb-core]^7 &#39;..GetPlayerName(src)..&#39; has succesfully loaded!&#39;)&#xA;        QBCore.Commands.Refresh(src)&#xA;        TriggerClientEvent(&#34;qb-multicharacter:client:closeNUI&#34;, src)&#xA;        newData.citizenid = QBCore.Functions.GetPlayer(src).PlayerData.citizenid&#xA;        TriggerClientEvent(&#39;ps-housing:client:setupSpawnUI&#39;, src, newData)&#xA;        GiveStarterItems(src)&#xA;    end&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Find the following events in &lt;code&gt;qb-spawn&lt;/code&gt; and change in client/client.lua event to:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;code&gt;qb-spawn &amp;gt; client.lua &amp;gt; line 51 &amp;gt; &#39;qb-spawn:client:setupSpawns&#39; event&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;RegisterNetEvent(&#39;qb-spawn:client:setupSpawns&#39;, function(cData, new, apps)&#xA;    if not new then&#xA;        QBCore.Functions.TriggerCallback(&#39;qb-spawn:server:getOwnedHouses&#39;, function(houses)&#xA;            local myHouses = {}&#xA;            if houses ~= nil then&#xA;                for i = 1, (#houses), 1 do&#xA;                    local house = houses[i]&#xA;&#xA;                    myHouses[#myHouses+1] = {&#xA;                        house = house,&#xA;                        label = (house.apartment or house.street) .. &#34; &#34; .. house.property_id,&#xA;                    }&#xA;                end&#xA;            end&#xA;&#xA;            Wait(500)&#xA;            SendNUIMessage({&#xA;                action = &#34;setupLocations&#34;,&#xA;                locations = QB.Spawns,&#xA;                houses = myHouses,&#xA;                isNew = new&#xA;            })&#xA;        end, cData.citizenid)&#xA;    elseif new then&#xA;        SendNUIMessage({&#xA;            action = &#34;setupAppartements&#34;,&#xA;            locations = apps,&#xA;            isNew = new&#xA;        })&#xA;    end&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;qb-spawn &amp;gt; client.lua &amp;gt; line 134 &amp;gt; &#39;chooseAppa&#39; NUI Callback&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;RegisterNUICallback(&#39;chooseAppa&#39;, function(data, cb)&#xA;    local ped = PlayerPedId()&#xA;    local appaYeet = data.appType&#xA;    SetDisplay(false)&#xA;    DoScreenFadeOut(500)&#xA;    Wait(100)&#xA;    FreezeEntityPosition(ped, false)&#xA;    RenderScriptCams(false, true, 0, true, true)&#xA;    SetCamActive(cam, false)&#xA;    DestroyCam(cam, true)&#xA;    SetCamActive(cam2, false)&#xA;    DestroyCam(cam2, true)&#xA;    SetEntityVisible(ped, true)&#xA;    Wait(500)&#xA;    TriggerServerEvent(&#39;QBCore:Server:OnPlayerLoaded&#39;)&#xA;    TriggerEvent(&#39;QBCore:Client:OnPlayerLoaded&#39;)&#xA;    Wait(100)&#xA;    TriggerServerEvent(&#34;ps-housing:server:createNewApartment&#34;, appaYeet)&#xA;    cb(&#39;ok&#39;)&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;qb-spawn &amp;gt; client &amp;gt; client.lua &amp;gt; line 169 &#39;spawnplayer&#39; NUI Callback&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;RegisterNUICallback(&#39;spawnplayer&#39;, function(data, cb)&#xA;    local location = tostring(data.spawnloc)&#xA;    local type = tostring(data.typeLoc)&#xA;    local ped = PlayerPedId()&#xA;    local PlayerData = QBCore.Functions.GetPlayerData()&#xA;    local insideMeta = PlayerData.metadata[&#34;inside&#34;]&#xA;    if type == &#34;current&#34; then&#xA;        PreSpawnPlayer()&#xA;        QBCore.Functions.GetPlayerData(function(pd)&#xA;            ped = PlayerPedId()&#xA;            SetEntityCoords(ped, pd.position.x, pd.position.y, pd.position.z)&#xA;            SetEntityHeading(ped, pd.position.a)&#xA;            FreezeEntityPosition(ped, false)&#xA;        end)&#xA;        TriggerServerEvent(&#39;QBCore:Server:OnPlayerLoaded&#39;)&#xA;        TriggerEvent(&#39;QBCore:Client:OnPlayerLoaded&#39;)&#xA;        if insideMeta.property_id ~= nil then&#xA;            local property_id = insideMeta.property_id&#xA;            TriggerServerEvent(&#39;ps-housing:server:enterProperty&#39;, tostring(property_id))&#xA;        end&#xA;        PostSpawnPlayer()&#xA;    elseif type == &#34;house&#34; then&#xA;        PreSpawnPlayer()&#xA;        TriggerServerEvent(&#39;QBCore:Server:OnPlayerLoaded&#39;)&#xA;        TriggerEvent(&#39;QBCore:Client:OnPlayerLoaded&#39;)&#xA;        local property_id = data.spawnloc.property_id&#xA;        TriggerServerEvent(&#39;ps-housing:server:enterProperty&#39;, tostring(property_id))&#xA;        PostSpawnPlayer()&#xA;    elseif type == &#34;normal&#34; then&#xA;        local pos = QB.Spawns[location].coords&#xA;        PreSpawnPlayer()&#xA;        SetEntityCoords(ped, pos.x, pos.y, pos.z)&#xA;        TriggerServerEvent(&#39;QBCore:Server:OnPlayerLoaded&#39;)&#xA;        TriggerEvent(&#39;QBCore:Client:OnPlayerLoaded&#39;)&#xA;        TriggerServerEvent(&#39;ps-housing:server:resetMetaData&#39;)&#xA;        SetEntityCoords(ped, pos.x, pos.y, pos.z)&#xA;        SetEntityHeading(ped, pos.w)&#xA;        PostSpawnPlayer()&#xA;    end&#xA;    cb(&#39;ok&#39;)&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;qb-spawn &amp;gt; server.lua &amp;gt; line 3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;QBCore.Functions.CreateCallback(&#39;qb-spawn:server:getOwnedHouses&#39;, function(_, cb, cid)&#xA;    if cid ~= nil then&#xA;        local houses = MySQL.query.await(&#39;SELECT * FROM properties WHERE owner_citizenid = ?&#39;, {cid})&#xA;        if houses[1] ~= nil then&#xA;            cb(houses)&#xA;        else&#xA;            cb({})&#xA;        end&#xA;    else&#xA;        cb({})&#xA;    end&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Find the following events in &lt;code&gt;qb-garages&lt;/code&gt; and change: &lt;code&gt;qb-garages &amp;gt; server &amp;gt; main.lua &amp;gt; around line 120&lt;/code&gt; on event &lt;code&gt;qb-garage:server:checkOwnership&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Replace&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local hasHouseKey = exports[&#39;qb-houses&#39;]:hasKey(result[1].license, result[1].citizenid, house)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local hasHouseKey = exports[&#39;ps-housing&#39;]:IsOwner(src, house)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;qb-garages &amp;gt; client &amp;gt; main.lua &amp;gt; around line 451&lt;/code&gt; under event &lt;code&gt;qb-garages:client:addHouseGarage&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;RegisterNetEvent(&#39;qb-garages:client:removeHouseGarage&#39;, function(house)&#xA;    Config.HouseGarages[house] = nil&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the &lt;code&gt;properties.sql&lt;/code&gt; file, but be cautious. If a table named &lt;code&gt;properties&lt;/code&gt; already exists in your database, this operation will drop it, resulting in the loss of all its data.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete default &lt;a href=&#34;https://github.com/qbcore-framework/qb-apartments&#34;&gt;qb-apartments&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete default &lt;a href=&#34;https://github.com/qbcore-framework/qb-houses&#34;&gt;qb-houses&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Delete &lt;code&gt;qb-apartments/config.lua&lt;/code&gt; references in &lt;code&gt;qb-spawn&lt;/code&gt;, &lt;code&gt;qb-multicharacter&lt;/code&gt; and &lt;code&gt;qb-phone&lt;/code&gt; fxmanifest.lua (and any other scripts that may reference it).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure bl-realtor above ps-housing.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In your server.cfg, add &lt;code&gt;ensure ox_lib&lt;/code&gt; above all other resources&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install the dependencies below.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Dependency&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Byte-Labs-Project/bl-realtor&#34;&gt;bl-realtor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Deltanic/fivem-freecam&#34;&gt;five-freecam&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/overextended/ox_lib/releases&#34;&gt;ox_lib&lt;/a&gt; - Use the latest release. If you do not use the latest release, MAKE SURE TO BUILD THE UI. Find their docs &lt;a href=&#34;https://overextended.dev/ox_lib#building-the-ui&#34;&gt;here&lt;/a&gt; on how to build the UI.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/overextended/ox_target&#34;&gt;ox_target&lt;/a&gt; or &lt;a href=&#34;https://github.com/qbcore-framework/qb-target&#34;&gt;qb-target&lt;/a&gt; - Change in &lt;a href=&#34;https://github.com/Project-Sloth/ps-housing/raw/3c0f197b6d639f13235598393c84aac8d23d5f7a/shared/config.lua#L8&#34;&gt;Config&lt;/a&gt;, default is qb-target.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;For reference your server.cfg should be ensured like below:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;We highly recommend making a folder named [ps-housing] and add &lt;code&gt;bl-realtor&lt;/code&gt;, &lt;code&gt;fivem-freecam&lt;/code&gt;, &lt;code&gt;ox_lib&lt;/code&gt;, &lt;code&gt;ps-core&lt;/code&gt;, &lt;code&gt;ps-housing&lt;/code&gt; inside the folder.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;ensure ox_lib&#xA;ensure bl-realtor&#xA;ensure ps-housing&#xA;ensure fivem-freecam&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;To Do&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Remake Realtor UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Notes&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If a player is in their apartment/house and an admin does a &#34;Bring to me&#34; function, they will not see the player nor will the player see anyone else. This is because the player is still in their own unique routing bucket. &lt;strong&gt;Workaround&lt;/strong&gt;: To fix this, the player must go back into their apartment and leave on their own. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Likewise, if an admin tries to &#34;Go to&#34; or &#34;Spectate&#34; a player that is in their apartment/house, the admin will not be able to see the apartment or player because it is in a different routing bucket.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Credits&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ImXirvin&#34;&gt;Xirvin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/backsh00ter&#34;&gt;BackSH00TER&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Byte-Labs-Project&#34;&gt;Byte Labs Project&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discord.gg/projectsloth&#34;&gt;Project Sloth Team&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.k4mb1maps.com/&#34;&gt;K4MB1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CandrexDev&#34;&gt;Candrex&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>MaximumADHD/Moonlite</title>
    <updated>2023-07-27T01:38:44Z</updated>
    <id>tag:github.com,2023-07-27:/MaximumADHD/Moonlite</id>
    <link href="https://github.com/MaximumADHD/Moonlite" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A WIP lightweight in-game player for xSIXx&#39;s Moon Animator&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://i.imgur.com/aeQoOZ0.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;🌙 Moonlite&lt;/h1&gt; &#xA;&lt;p&gt;Moonlite is a work-in-progress (WIP), lightweight in-game player for sequences created in Moon Animator, a tool developed by xSIXx. This project is actively developed and maintained by MaximumADHD.&lt;/p&gt; &#xA;&lt;h1&gt;🔖 Current Version&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;0.6.1&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;🚀 API Documentation&lt;/h1&gt; &#xA;&lt;h2&gt;🌑 Moonlite&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;Moonlite = require(game.ReplicatedStorage.Moonlite)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;CreatePlayer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;Moonlite.CreatePlayer(save: StringValue) -&amp;gt; MoonliteTrack&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Loads the provided MoonAnimator save to be played back.&lt;/p&gt; &#xA;&lt;h2&gt;🌖 MoonliteTrack&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;type MoonliteTrack = Moonlite.Track&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;MoonliteTrack is a type exported from the module that represents a playback track.&lt;/p&gt; &#xA;&lt;h3&gt;Play&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;MoonliteTrack:Play() -&amp;gt; ()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Starts playing the track&#39;s elements.&lt;br&gt; Has no effect if already playing.&lt;/p&gt; &#xA;&lt;h3&gt;Stop&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;MoonliteTrack:Stop() -&amp;gt; ()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Stops all playing track elements.&lt;/p&gt; &#xA;&lt;h3&gt;Reset&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;MoonliteTrack:Reset() -&amp;gt; ()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Resets any modified properties to their declared defaults.&lt;br&gt; Note: Calling this while a track is playing is undefined behavior.&lt;/p&gt; &#xA;&lt;h3&gt;IsPlaying&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;MoonliteTrack:IsPlaying() -&amp;gt; boolean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Returns true if the track still has elements playing.&lt;/p&gt; &#xA;&lt;h3&gt;GetSetting&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;MoonliteTrack:GetSetting(name: string) -&amp;gt; any&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Gets a value stored in the track&#39;s working scratchpad.&lt;br&gt; Can be used to get custom data or make behavior tweaks to specials.&lt;/p&gt; &#xA;&lt;h3&gt;SetSetting&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;MoonliteTrack:SetSetting(name: string, value: any)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Sets a value in the track&#39;s working scratchpad.&lt;br&gt; Can be used to set custom data or make behavior tweaks to specials.&lt;/p&gt; &#xA;&lt;h3&gt;Looped&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;MoonliteTrack.Looped: boolean&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Whether the track playback will loop on completion.&lt;/p&gt; &#xA;&lt;h3&gt;Completed&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;MoonliteTrack.Completed: RBXScriptSignal&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Fired when playback of the track is completed.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>EQMacEmu/quests</title>
    <updated>2023-07-27T01:38:44Z</updated>
    <id>tag:github.com,2023-07-27:/EQMacEmu/quests</id>
    <link href="https://github.com/EQMacEmu/quests" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;quests for eqmacemu server&lt;/p&gt;</summary>
  </entry>
</feed>