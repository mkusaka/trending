<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-04T01:35:27Z</updated>
  <subtitle>Daily Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>RegularVynixu/Utilities</title>
    <updated>2022-11-04T01:35:27Z</updated>
    <id>tag:github.com,2022-11-04:/RegularVynixu/Utilities</id>
    <link href="https://github.com/RegularVynixu/Utilities" rel="alternate"></link>
    <summary type="html">&lt;p&gt;All random utility scripts I made will be posted here.&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>hood/popui.nvim</title>
    <updated>2022-11-04T01:35:27Z</updated>
    <id>tag:github.com,2022-11-04:/hood/popui.nvim</id>
    <link href="https://github.com/hood/popui.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NeoVim UI sweetness.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/hood/popui.nvim/master/logo.png&#34; alt=&#34;Logo&#34; title=&#34;Logo&#34;&gt; &#xA; &lt;h1&gt;popui.nvim&lt;/h1&gt; &#xA; &lt;h6&gt;NeoVim UI sweetness.&lt;/h6&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;What&#39;s &lt;code&gt;popui&lt;/code&gt; all about?&lt;/h2&gt; &#xA;&lt;p&gt;It&#39;s a tiny (currently 337 LoC) collection of custom UI utilities to make your NeoVim workflow faster. It consists of two (&lt;code&gt;ui-overrider&lt;/code&gt;, &lt;code&gt;input-overrider&lt;/code&gt;) utilities which override neovim&#39;s default &lt;code&gt;vim.ui.select&lt;/code&gt; menu and &lt;code&gt;vim.ui.input&lt;/code&gt; prompt, spawning a floating menu right where your cursor resides, and a &lt;code&gt;diagnostics-navigator&lt;/code&gt; utility to quickly navigate (and jump to) LSP diagnostics issues in the current buffer. &lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;See it in action below:&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;Code action menu popup&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/tjsUiTo.png&#34; alt=&#34;Snapshot #1&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Variable renaming input popup&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/d5COuVp.png&#34; alt=&#34;Snapshot #2&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Diagnostics navigator&lt;/h4&gt; (Displays all diagnostic messages for the current buffer. Press &#xA;&lt;cr&gt;&#xA;  to jump to the currently highlighted diagnostic coordinates.) &#xA; &lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ZHYi372.png&#34; alt=&#34;Snapshot #3&#34;&gt;&lt;/p&gt; &#xA; &lt;h2&gt;Installation&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;&#34; Using vim-plug&#xA;Plug &#39;hood/popui.nvim&#39;&#xA;&#xA;&#34; Using Vundle&#xA;Plugin &#39;hood/popui.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;Setup&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.ui.select = require&#34;popui.ui-overrider&#34;&#xA;vim.ui.input = require&#34;popui.input-overrider&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;nnoremap ,d :lua require&#39;popui.diagnostics-navigator&#39;()&amp;lt;CR&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;Customize border style&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;&#34; Available styles: &#34;sharp&#34; | &#34;rounded&#34; | &#34;double&#34;&#xA;let g:popui_border_style = &#34;double&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;Dependencies&lt;/h2&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;No dependencies baby!&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/cr&gt;</summary>
  </entry>
  <entry>
    <title>Mofiqul/dracula.nvim</title>
    <updated>2022-11-04T01:35:27Z</updated>
    <id>tag:github.com,2022-11-04:/Mofiqul/dracula.nvim</id>
    <link href="https://github.com/Mofiqul/dracula.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Dracula colorscheme for neovim written in Lua&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;üßõ‚Äç‚ôÇÔ∏è dracula.nvim&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;&lt;a href=&#34;https://draculatheme.com/&#34;&gt;Dracula&lt;/a&gt; colorscheme for &lt;a href=&#34;https://neovim.io/&#34;&gt;NEOVIM&lt;/a&gt; written in Lua&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Mofiqul/dracula.nvim/main/assets/1.png&#34; alt=&#34;TypeScript and NvimTree&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Mofiqul/dracula.nvim/main/assets/2.png&#34; alt=&#34;Lua&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚úîÔ∏è Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.8.0&lt;/li&gt; &#xA; &lt;li&gt;Treesitter (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;#Ô∏è Supported Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;LSP&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;Treesitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-compe&#34;&gt;nvim-compe&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-tree.lua&#34;&gt;NvimTree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-neo-tree/neo-tree.nvim&#34;&gt;NeoTree&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/nvim-bufferline.lua&#34;&gt;BufferLine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;Git Signs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hoob3rt/lualine.nvim&#34;&gt;Lualine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/lspsaga.nvim&#34;&gt;LSPSaga&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim&#34;&gt;indent-blankline&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/p00f/nvim-ts-rainbow&#34;&gt;nvim-ts-rainbow&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚¨áÔ∏è Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install via package manager&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Using Packer:&#xA;use &#39;Mofiqul/dracula.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Using Vim-Plug:&#xA;Plug &#39;Mofiqul/dracula.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua:&#xA;vim.cmd[[colorscheme dracula]]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Vim-Script:&#xA;colorscheme dracula&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using &lt;a href=&#34;https://github.com/hoob3rt/lualine.nvim&#34;&gt;&lt;code&gt;lualine&lt;/code&gt;&lt;/a&gt;, you can also enable the provided theme:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Make sure to set theme as &#39;dracula-nvim&#39; as dracula already exists in lualine built in themes&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;lualine&#39;).setup {&#xA;  options = {&#xA;    -- ...&#xA;    theme = &#39;dracula-nvim&#39;&#xA;    -- ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üîß Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The configuration must be run before &lt;code&gt;colorscheme&lt;/code&gt; command to take effect.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using lua&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local dracula = require(&#34;dracula&#34;)&#xA;dracula.setup({&#xA;  -- customize dracula color palette&#xA;  colors = {&#xA;    bg = &#34;#282A36&#34;,&#xA;    fg = &#34;#F8F8F2&#34;,&#xA;    selection = &#34;#44475A&#34;,&#xA;    comment = &#34;#6272A4&#34;,&#xA;    red = &#34;#FF5555&#34;,&#xA;    orange = &#34;#FFB86C&#34;,&#xA;    yellow = &#34;#F1FA8C&#34;,&#xA;    green = &#34;#50fa7b&#34;,&#xA;    purple = &#34;#BD93F9&#34;,&#xA;    cyan = &#34;#8BE9FD&#34;,&#xA;    pink = &#34;#FF79C6&#34;,&#xA;    bright_red = &#34;#FF6E6E&#34;,&#xA;    bright_green = &#34;#69FF94&#34;,&#xA;    bright_yellow = &#34;#FFFFA5&#34;,&#xA;    bright_blue = &#34;#D6ACFF&#34;,&#xA;    bright_magenta = &#34;#FF92DF&#34;,&#xA;    bright_cyan = &#34;#A4FFFF&#34;,&#xA;    bright_white = &#34;#FFFFFF&#34;,&#xA;    menu = &#34;#21222C&#34;,&#xA;    visual = &#34;#3E4452&#34;,&#xA;    gutter_fg = &#34;#4B5263&#34;,&#xA;    nontext = &#34;#3B4048&#34;,&#xA;  },&#xA;  -- show the &#39;~&#39; characters after the end of buffers&#xA;  show_end_of_buffer = true, -- default false&#xA;  -- use transparent background&#xA;  transparent_bg = true, -- default false&#xA;  -- set custom lualine background color&#xA;  lualine_bg_color = &#34;#44475a&#34;, -- default nil&#xA;  -- set italic comment&#xA;  italic_comment = true, -- default false&#xA;  -- overrides the default highlights see `:h synIDattr`&#xA;  overrides = {&#xA;    -- Examples&#xA;    -- NonText = { fg = dracula.colors().white }, -- set NonText fg to white&#xA;    -- NvimTreeIndentMarker = { link = &#34;NonText&#34; }, -- link to NonText highlight&#xA;    -- Nothing = {} -- clear highlight of Nothing&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The same works in viml&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;lua &amp;lt;&amp;lt; EOF&#xA;local dracula = require(&#34;dracula&#34;)&#xA;dracula.setup({&#xA;  -- customize dracula color palette&#xA;  colors = {&#xA;    bg = &#34;#282A36&#34;,&#xA;    fg = &#34;#F8F8F2&#34;,&#xA;    selection = &#34;#44475A&#34;,&#xA;    comment = &#34;#6272A4&#34;,&#xA;    red = &#34;#FF5555&#34;,&#xA;    orange = &#34;#FFB86C&#34;,&#xA;    yellow = &#34;#F1FA8C&#34;,&#xA;    green = &#34;#50fa7b&#34;,&#xA;    purple = &#34;#BD93F9&#34;,&#xA;    cyan = &#34;#8BE9FD&#34;,&#xA;    pink = &#34;#FF79C6&#34;,&#xA;    bright_red = &#34;#FF6E6E&#34;,&#xA;    bright_green = &#34;#69FF94&#34;,&#xA;    bright_yellow = &#34;#FFFFA5&#34;,&#xA;    bright_blue = &#34;#D6ACFF&#34;,&#xA;    bright_magenta = &#34;#FF92DF&#34;,&#xA;    bright_cyan = &#34;#A4FFFF&#34;,&#xA;    bright_white = &#34;#FFFFFF&#34;,&#xA;    menu = &#34;#21222C&#34;,&#xA;    visual = &#34;#3E4452&#34;,&#xA;    gutter_fg = &#34;#4B5263&#34;,&#xA;    nontext = &#34;#3B4048&#34;,&#xA;  },&#xA;  -- show the &#39;~&#39; characters after the end of buffers&#xA;  show_end_of_buffer = true, -- default false&#xA;  -- use transparent background&#xA;  transparent_bg = true, -- default false&#xA;  -- set custom lualine background color&#xA;  lualine_bg_color = &#34;#44475a&#34;, -- default nil&#xA;  -- set italic comment&#xA;  italic_comment = true, -- default false&#xA;  -- overrides the default highlights see `:h synIDattr`&#xA;  overrides = {&#xA;    -- Examples&#xA;    -- NonText = { fg = dracula.colors().white }, -- set NonText fg to white&#xA;    -- NvimTreeIndentMarker = { link = &#34;NonText&#34; }, -- link to NonText highlight&#xA;    -- Nothing = {} -- clear highlight of Nothing&#xA;  },&#xA;})&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üé® Importing colors for other usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local colors = require(&#39;dracula&#39;).colors()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will return the folowing table&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Mofiqul/dracula.nvim/main/assets/colors.png&#34; alt=&#34;colors&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>