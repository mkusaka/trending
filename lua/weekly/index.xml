<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-30T02:00:15Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>xAranaktu/FIFA-23-Live-Editor</title>
    <updated>2023-07-30T02:00:15Z</updated>
    <id>tag:github.com,2023-07-30:/xAranaktu/FIFA-23-Live-Editor</id>
    <link href="https://github.com/xAranaktu/FIFA-23-Live-Editor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FIFA 23 Live Editor&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;Welcome to the FIFA 23 Live Editor!&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/xAranaktu/FIFA-23-Live-Editor/main/changelog.txt&#34;&gt;Changes in latest version of the tool&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bit.ly/F23-LE-CT-DEV-BOARD&#34;&gt;FIFA 23 Live Editor &amp;amp; Cheat Table Development Board&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bit.ly/F23-Projects-Release-Schedule&#34;&gt;FIFA 23 Live Editor &amp;amp; Cheat Table Release Schedule&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check &lt;a href=&#34;https://github.com/xAranaktu/FIFA-23-Live-Editor/wiki&#34;&gt;WIKI&lt;/a&gt; for Guides and Tutorials&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Read Me Before You Pledge or Buy The Game&lt;/h3&gt; &#xA;&lt;p&gt;This year the game is protected with brand new EA Anticheat. Using the tool may flag your account and EA may ban it later on. You are using the tool at your own risk.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The tool is at early stage of developement, many features may not work or may be bugged. Wait until at least until December if you expect somewhat finished tool&lt;/li&gt; &#xA; &lt;li&gt;If you are scared of being banned then don&#39;t use the tool (at least for a while until, situation will clarify)&lt;/li&gt; &#xA; &lt;li&gt;This tool doesn&#39;t work online. You won&#39;t be able to connect with EA servers while using it. This is intended, and won&#39;t be &#34;fixed&#34;.&lt;/li&gt; &#xA; &lt;li&gt;I can&#39;t guarantee for how long the tool will be working. EA may update the game at any time and since then it may be not possible to update the Live Editor to make it compatible with latest game update.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;If you want to download the tool then DONT CLONE THE REPO... Get it from releases:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ocPeJiV.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/W6lPg65.jpeg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://i.imgur.com/o1naouS.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://i.imgur.com/0grWO3A.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://i.imgur.com/4JGPfWK.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://i.imgur.com/pwfIyfs.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>DNLHC/glance.nvim</title>
    <updated>2023-07-30T02:00:15Z</updated>
    <id>tag:github.com,2023-07-30:/DNLHC/glance.nvim</id>
    <link href="https://github.com/DNLHC/glance.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A pretty window for previewing, navigating and editing your LSP locations&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Glance&lt;/h1&gt; &#xA;&lt;p&gt;A pretty window for previewing, navigating and editing your LSP locations in one place, inspired by vscode&#39;s peek preview.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/86K5ljv.png&#34; alt=&#34;Glance references screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports following LSP methods: &lt;code&gt;definitions&lt;/code&gt;, &lt;code&gt;type definitions&lt;/code&gt;, &lt;code&gt;references&lt;/code&gt;, &lt;code&gt;implementations&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Automatically sets up highlights based on your colorscheme colors&lt;/li&gt; &#xA; &lt;li&gt;Allows editing previewed buffer inside the floating window&lt;/li&gt; &#xA; &lt;li&gt;Intuitive UI&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Properly configured LSP client&lt;/li&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.7.0&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred plugin manager.&lt;/p&gt; &#xA;&lt;h3&gt;Vim Plug&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;dnlhc/glance.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Packer&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use({&#xA;  &#34;dnlhc/glance.nvim&#34;,&#xA;  config = function()&#xA;    require(&#39;glance&#39;).setup({&#xA;      -- your configuration&#xA;    })&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The following is the default configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua configuration&#xA;local glance = require(&#39;glance&#39;)&#xA;local actions = glance.actions&#xA;&#xA;glance.setup({&#xA;  height = 18, -- Height of the window&#xA;  zindex = 45,&#xA;&#xA;  -- By default glance will open preview &#34;embedded&#34; within your active window&#xA;  -- when `detached` is enabled, glance will render above all existing windows&#xA;  -- and won&#39;t be restiricted by the width of your active window&#xA;  detached = true,&#xA;&#xA;  -- Or use a function to enable `detached` only when the active window is too small&#xA;  -- (default behavior)&#xA;  detached = function(winid)&#xA;    return vim.api.nvim_win_get_width(winid) &amp;lt; 100&#xA;  end,&#xA;&#xA;  preview_win_opts = { -- Configure preview window options&#xA;    cursorline = true,&#xA;    number = true,&#xA;    wrap = true,&#xA;  },&#xA;  border = {&#xA;    enable = false, -- Show window borders. Only horizontal borders allowed&#xA;    top_char = &#39;―&#39;,&#xA;    bottom_char = &#39;―&#39;,&#xA;  },&#xA;  list = {&#xA;    position = &#39;right&#39;, -- Position of the list window &#39;left&#39;|&#39;right&#39;&#xA;    width = 0.33, -- 33% width relative to the active window, min 0.1, max 0.5&#xA;  },&#xA;  theme = { -- This feature might not work properly in nvim-0.7.2&#xA;    enable = true, -- Will generate colors for the plugin based on your current colorscheme&#xA;    mode = &#39;auto&#39;, -- &#39;brighten&#39;|&#39;darken&#39;|&#39;auto&#39;, &#39;auto&#39; will set mode based on the brightness of your colorscheme&#xA;  },&#xA;  mappings = {&#xA;    list = {&#xA;      [&#39;j&#39;] = actions.next, -- Bring the cursor to the next item in the list&#xA;      [&#39;k&#39;] = actions.previous, -- Bring the cursor to the previous item in the list&#xA;      [&#39;&amp;lt;Down&amp;gt;&#39;] = actions.next,&#xA;      [&#39;&amp;lt;Up&amp;gt;&#39;] = actions.previous,&#xA;      [&#39;&amp;lt;Tab&amp;gt;&#39;] = actions.next_location, -- Bring the cursor to the next location skipping groups in the list&#xA;      [&#39;&amp;lt;S-Tab&amp;gt;&#39;] = actions.previous_location, -- Bring the cursor to the previous location skipping groups in the list&#xA;      [&#39;&amp;lt;C-u&amp;gt;&#39;] = actions.preview_scroll_win(5),&#xA;      [&#39;&amp;lt;C-d&amp;gt;&#39;] = actions.preview_scroll_win(-5),&#xA;      [&#39;v&#39;] = actions.jump_vsplit,&#xA;      [&#39;s&#39;] = actions.jump_split,&#xA;      [&#39;t&#39;] = actions.jump_tab,&#xA;      [&#39;&amp;lt;CR&amp;gt;&#39;] = actions.jump,&#xA;      [&#39;o&#39;] = actions.jump,&#xA;      [&#39;l&#39;] = actions.open_fold,&#xA;      [&#39;h&#39;] = actions.close_fold,&#xA;      [&#39;&amp;lt;leader&amp;gt;l&#39;] = actions.enter_win(&#39;preview&#39;), -- Focus preview window&#xA;      [&#39;q&#39;] = actions.close,&#xA;      [&#39;Q&#39;] = actions.close,&#xA;      [&#39;&amp;lt;Esc&amp;gt;&#39;] = actions.close,&#xA;      [&#39;&amp;lt;C-q&amp;gt;&#39;] = actions.quickfix,&#xA;      -- [&#39;&amp;lt;Esc&amp;gt;&#39;] = false -- disable a mapping&#xA;    },&#xA;    preview = {&#xA;      [&#39;Q&#39;] = actions.close,&#xA;      [&#39;&amp;lt;Tab&amp;gt;&#39;] = actions.next_location,&#xA;      [&#39;&amp;lt;S-Tab&amp;gt;&#39;] = actions.previous_location,&#xA;      [&#39;&amp;lt;leader&amp;gt;l&#39;] = actions.enter_win(&#39;list&#39;), -- Focus list window&#xA;    },&#xA;  },&#xA;  hooks = {},&#xA;  folds = {&#xA;    fold_closed = &#39;&#39;,&#xA;    fold_open = &#39;&#39;,&#xA;    folded = true, -- Automatically fold list on startup&#xA;  },&#xA;  indent_lines = {&#xA;    enable = true,&#xA;    icon = &#39;│&#39;,&#xA;  },&#xA;  winbar = {&#xA;    enable = true, -- Available strating from nvim-0.8+&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Hooks&lt;/h2&gt; &#xA;&lt;h3&gt;before_open&lt;/h3&gt; &#xA;&lt;p&gt;Runs after getting the results and before opening the window. Can be used to alter the default opening behavior or to modify the results (for example: filter out the unwanted locations)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: This is a blocking hook which means glance will not open unless you call the &lt;code&gt;open&lt;/code&gt; callback.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t open glance when there is only one result instead jump to that location&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;hooks = {&#xA;  before_open = function(results, open, jump, method)&#xA;    if #results == 1 then&#xA;      jump(results[1]) -- argument is optional&#xA;    else&#xA;      open(results) -- argument is optional&#xA;    end&#xA;  end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Don&#39;t open glance when there is only one result and it is located in the current buffer, open otherwise&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;hooks = {&#xA;  before_open = function(results, open, jump, method)&#xA;    local uri = vim.uri_from_bufnr(0)&#xA;    if #results == 1 then&#xA;      local target_uri = results[1].uri or results[1].targetUri&#xA;&#xA;      if target_uri == uri then&#xA;        jump(results[1])&#xA;      else&#xA;        open(results)&#xA;      end&#xA;    else&#xA;      open(results)&#xA;    end&#xA;  end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;before_close&lt;/h3&gt; &#xA;&lt;p&gt;Triggered right before the window is closed&lt;/p&gt; &#xA;&lt;h3&gt;after_close&lt;/h3&gt; &#xA;&lt;p&gt;Triggered after the window is closed&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:Glance references&lt;/code&gt; show references of the word under the cursor from the LSP server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:Glance definitions&lt;/code&gt; show definitions of the word under the cursor from the LSP server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:Glance type_definitions&lt;/code&gt; show type definitions of the word under the cursor from the LSP server&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:Glance implementations&lt;/code&gt; show implementations of the word under the cursor from the LSP server&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Example keybindings&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; VimScript&#xA;nnoremap gR &amp;lt;CMD&amp;gt;Glance references&amp;lt;CR&amp;gt;&#xA;nnoremap gD &amp;lt;CMD&amp;gt;Glance definitions&amp;lt;CR&amp;gt;&#xA;nnoremap gY &amp;lt;CMD&amp;gt;Glance type_definitions&amp;lt;CR&amp;gt;&#xA;nnoremap gM &amp;lt;CMD&amp;gt;Glance implementations&amp;lt;CR&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;vim.keymap.set(&#39;n&#39;, &#39;gD&#39;, &#39;&amp;lt;CMD&amp;gt;Glance definitions&amp;lt;CR&amp;gt;&#39;)&#xA;vim.keymap.set(&#39;n&#39;, &#39;gR&#39;, &#39;&amp;lt;CMD&amp;gt;Glance references&amp;lt;CR&amp;gt;&#39;)&#xA;vim.keymap.set(&#39;n&#39;, &#39;gY&#39;, &#39;&amp;lt;CMD&amp;gt;Glance type_definitions&amp;lt;CR&amp;gt;&#39;)&#xA;vim.keymap.set(&#39;n&#39;, &#39;gM&#39;, &#39;&amp;lt;CMD&amp;gt;Glance implementations&amp;lt;CR&amp;gt;&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Highlights&lt;/h2&gt; &#xA;&lt;p&gt;The following list shows all the highlight groups defined for glance.nvim&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;GlancePreviewNormal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlancePreviewMatch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlancePreviewCursorLine&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlancePreviewSignColumn&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlancePreviewEndOfBuffer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlancePreviewLineNr&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlancePreviewBorderBottom&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceWinBarFilename&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceWinBarFilepath&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceWinBarTitle&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceListNormal&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceListFilename&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceListFilepath&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceListCount&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceListMatch&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceListCursorLine&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceListEndOfBuffer&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceListBorderBottom&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceFoldIcon&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceIndent&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;GlanceBorderTop&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;nvim-telescope/telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/lspsaga.nvim&#34;&gt;glepnir/lspsaga.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/trouble.nvim&#34;&gt;folke/trouble.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rmagatti/goto-preview&#34;&gt;rmagatti/goto-preview&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>LuaLS/lua-language-server</title>
    <updated>2023-07-30T02:00:15Z</updated>
    <id>tag:github.com,2023-07-30:/LuaLS/lua-language-server</id>
    <link href="https://github.com/LuaLS/lua-language-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A language server that offers Lua language support - programmed in Lua&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lua-language-server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/LuaLS/lua-language-server/.github%2Fworkflows%2Fbuild.yml&#34; alt=&#34;build&#34;&gt; &lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/v/sumneko.lua&#34; alt=&#34;Version (including pre-releases)&#34;&gt; &lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/i/sumneko.lua&#34; alt=&#34;Installs&#34;&gt; &lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/d/sumneko.lua&#34; alt=&#34;Downloads&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Lua development just got a whole lot better&lt;/strong&gt;&lt;/em&gt; 🧠&lt;/p&gt; &#xA;&lt;p&gt;The Lua language server provides various language features for Lua to make development easier and faster. With around half a million installs on Visual Studio Code, it is the most popular extension for Lua language support.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚙️ Supports &lt;code&gt;Lua 5.4&lt;/code&gt;, &lt;code&gt;Lua 5.3&lt;/code&gt;, &lt;code&gt;Lua 5.2&lt;/code&gt;, &lt;code&gt;Lua 5.1&lt;/code&gt;, and &lt;code&gt;LuaJIT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;📄 Over 20 supported &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Annotations&#34;&gt;annotations&lt;/a&gt; for documenting your code&lt;/li&gt; &#xA; &lt;li&gt;↪ Go to definition&lt;/li&gt; &#xA; &lt;li&gt;🦺 Dynamic &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Type-Checking&#34;&gt;type checking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔍 Find references&lt;/li&gt; &#xA; &lt;li&gt;⚠️ &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Diagnostics&#34;&gt;Diagnostics/Warnings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🕵️ &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Syntax-Errors&#34;&gt;Syntax checking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📝 Element renaming&lt;/li&gt; &#xA; &lt;li&gt;🗨️ Hover to view details on variables, functions, and more&lt;/li&gt; &#xA; &lt;li&gt;🖊️ Autocompletion&lt;/li&gt; &#xA; &lt;li&gt;📚 Support for &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Libraries&#34;&gt;libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💅 &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Formatter&#34;&gt;Code formatting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💬 &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Formatter&#34;&gt;Spell checking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🛠️ Custom &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Plugins&#34;&gt;plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📖 &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Export-Documentation&#34;&gt;Documentation Generation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;The language server can be installed for use in Visual Studio Code, NeoVim, and any &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/implementors/tools/&#34;&gt;other clients&lt;/a&gt; that support the &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;Language Server Protocol&lt;/a&gt;. The language server can be configured using a &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Configuration-File&#34;&gt;configuration file&lt;/a&gt;. For a more detailed intro, check out the &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Getting-Started&#34;&gt;getting started page in the wiki&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Visual Studio Code&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=sumneko.lua&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/VS%20Code-Install-blue?style=for-the-badge&amp;amp;logo=visualstudiocode&#34; alt=&#34;Install in VS Code&#34; title=&#34;Install in VS Code&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The language server and Visual Studio Code client can be installed from &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=sumneko.lua&#34;&gt;the VS Code Marketplace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;NeoVim&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/raw/master/doc/server_configurations.md#lua_ls&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/NeoVim-Install-blue?style=for-the-badge&amp;amp;logo=neovim&#34; alt=&#34;Install for NeoVim&#34; title=&#34;Install for NeoVim&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;View the installation instructions for NeoVim in the &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/raw/master/doc/server_configurations.md#lua_ls&#34;&gt;nvim-lspconfig repo&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For a guide to getting started from scratch using Mason, read &lt;a href=&#34;https://dev.to/vonheikemen/getting-started-with-neovims-native-lsp-client-in-the-year-of-2022-the-easy-way-bp3&#34;&gt;Heiker&#39;s guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Command Line&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Getting-Started#command-line&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Command%20Line-Install-blue?style=for-the-badge&amp;amp;logo=windowsterminal&#34; alt=&#34;Install for command line&#34; title=&#34;Install for command line&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Getting-Started#command-line&#34;&gt;wiki for a guide&lt;/a&gt; to install the language server for use on the command line. This allows the language server to be used with &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/implementors/tools/&#34;&gt;other clients&lt;/a&gt; that follow the &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/overviews/lsp/overview/&#34;&gt;language server protocol&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Community Install Methods&lt;/h3&gt; &#xA;&lt;p&gt;The install methods below are maintained by community members.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bellini666/asdf-lua-language-server&#34;&gt;asdf plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/raw/master/changelog.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;Report an issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;Suggest a feature&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/discussions&#34;&gt;Discuss&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you find any mistakes, please &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;report it&lt;/a&gt; or open a &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/pulls&#34;&gt;pull request&lt;/a&gt; if you have a fix of your own ❤️&lt;/p&gt; &#xA; &lt;p&gt;如果你发现了任何错误，请&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;告诉我&lt;/a&gt;或使用&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/pulls&#34;&gt;Pull Requests&lt;/a&gt;来直接修复。❤️&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Available Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;en-us&lt;/code&gt; 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zh-cn&lt;/code&gt; 🇨🇳&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zh-tw&lt;/code&gt; 🇹🇼&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pt-br&lt;/code&gt; 🇧🇷&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; All translations are provided and collaborated on by the community. If you find an inappropriate or harmful translation, &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;please report it immediately&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Are you able to &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Translations&#34;&gt;provide a translation&lt;/a&gt;? It would be greatly appreciated!&lt;/p&gt; &#xA;&lt;p&gt;Thank you to &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/commits/master/locale&#34;&gt;all contributors of translations&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;The language server had &lt;strong&gt;opt-in&lt;/strong&gt; telemetry that collected usage data and sent it to the development team to help improve the extension. Read our &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/wiki/Home#privacy&#34;&gt;privacy policy&lt;/a&gt; to learn more. Telemetry was removed in &lt;code&gt;v3.6.5&lt;/code&gt; and is no longer part of the language server.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=sumneko/lua-language-server&#34; alt=&#34;GitHub Contributors Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;Software that the language server (or the development of it) uses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/bee.lua&#34;&gt;bee.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/luamake&#34;&gt;luamake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqmedeiros/lpeglabel&#34;&gt;LPegLabel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/LuaParser&#34;&gt;LuaParser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif&#34;&gt;ScreenToGif&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-languageserver-node&#34;&gt;vscode-languageclient&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/textmate/lua.tmbundle&#34;&gt;lua.tmbundle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emmylua.github.io&#34;&gt;EmmyLua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-glob&#34;&gt;lua-glob&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/utility&#34;&gt;utility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/vscode-lua-doc&#34;&gt;vscode-lua-doc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/json.lua&#34;&gt;json.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CppCXY/EmmyLuaCodeStyle&#34;&gt;EmmyLuaCodeStyle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kikito/inspect.lua&#34;&gt;inspect.lua&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>