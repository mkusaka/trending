<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-02T01:44:39Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tamilpp25/Grasscutter_Resources</title>
    <updated>2022-10-02T01:44:39Z</updated>
    <id>tag:github.com,2022-10-02:/tamilpp25/Grasscutter_Resources</id>
    <link href="https://github.com/tamilpp25/Grasscutter_Resources" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Certain anime game Repacked Resource from Multiple Sources&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Grasscutter_Resources&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Resource Version - Certain Anime Game V3.0.0&lt;/em&gt;&lt;br&gt; BinOuput is not &#34;Fully&#34; Updated to V3.0.0, Only Embryos &amp;amp; Scene Points&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ExcelBinOutput - [ V2.8 QuestExcelConfigData ]&lt;/li&gt; &#xA; &lt;li&gt;BinOutput&lt;/li&gt; &#xA; &lt;li&gt;Scripts&lt;/li&gt; &#xA; &lt;li&gt;Readable&lt;/li&gt; &#xA; &lt;li&gt;Subtitle&lt;/li&gt; &#xA; &lt;li&gt;TextMap&lt;/li&gt; &#xA; &lt;li&gt;CutsceneKeys&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Known Issue&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Cannot play V3.0 Quest&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Grasscutters/Grasscutter&#34;&gt;Grasscutter&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dimbreath&#34;&gt;Dimbreath&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/radioegor146&#34;&gt;radioegor146&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheLostTree&#34;&gt;TheLostTree&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lilmayofuksu/animepython&#34;&gt;lilmayofuksu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Melledy&#34;&gt;Melledy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GrownNed/&#34;&gt;GrownNed&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>hrsh7th/nvim-cmp</title>
    <updated>2022-10-02T01:44:39Z</updated>
    <id>tag:github.com,2022-10-02:/hrsh7th/nvim-cmp</id>
    <link href="https://github.com/hrsh7th/nvim-cmp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A completion plugin for neovim coded in Lua.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-cmp&lt;/h1&gt; &#xA;&lt;p&gt;A completion engine plugin for neovim written in Lua. Completion sources are installed from external repositories and &#34;sourced&#34;.&lt;/p&gt; &#xA;&lt;p&gt;&#xA; &lt;video src=&#34;https://user-images.githubusercontent.com/629908/139000570-3ac39587-a88b-43c6-b35e-207489719359.mp4&#34; width=&#34;100%&#34;&gt;&lt;/video&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Readme!&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;There is a Github issue that documents &lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp/issues/231&#34;&gt;breaking changes&lt;/a&gt; for nvim-cmp. Subscribe to the issue to be notified of upcoming breaking changes.&lt;/li&gt; &#xA; &lt;li&gt;This is my hobby project. You can support me via GitHub sponsors.&lt;/li&gt; &#xA; &lt;li&gt;Bug reports are welcome, but don&#39;t expect a fix unless you provide minimal configuration and steps to reproduce your issue.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Concept&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Full support for LSP completion related capabilities&lt;/li&gt; &#xA; &lt;li&gt;Powerful customizability via Lua functions&lt;/li&gt; &#xA; &lt;li&gt;Smart handling of key mappings&lt;/li&gt; &#xA; &lt;li&gt;No flicker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;h3&gt;Recommended Configuration&lt;/h3&gt; &#xA;&lt;p&gt;This example configuration uses &lt;code&gt;vim-plug&lt;/code&gt; as the plugin manager and &lt;code&gt;vim-vsnip&lt;/code&gt; as a snippet plugin.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;call plug#begin(s:plug_dir)&#xA;Plug &#39;neovim/nvim-lspconfig&#39;&#xA;Plug &#39;hrsh7th/cmp-nvim-lsp&#39;&#xA;Plug &#39;hrsh7th/cmp-buffer&#39;&#xA;Plug &#39;hrsh7th/cmp-path&#39;&#xA;Plug &#39;hrsh7th/cmp-cmdline&#39;&#xA;Plug &#39;hrsh7th/nvim-cmp&#39;&#xA;&#xA;&#34; For vsnip users.&#xA;Plug &#39;hrsh7th/cmp-vsnip&#39;&#xA;Plug &#39;hrsh7th/vim-vsnip&#39;&#xA;&#xA;&#34; For luasnip users.&#xA;&#34; Plug &#39;L3MON4D3/LuaSnip&#39;&#xA;&#34; Plug &#39;saadparwaiz1/cmp_luasnip&#39;&#xA;&#xA;&#34; For ultisnips users.&#xA;&#34; Plug &#39;SirVer/ultisnips&#39;&#xA;&#34; Plug &#39;quangnguyen30192/cmp-nvim-ultisnips&#39;&#xA;&#xA;&#34; For snippy users.&#xA;&#34; Plug &#39;dcampos/nvim-snippy&#39;&#xA;&#34; Plug &#39;dcampos/cmp-snippy&#39;&#xA;&#xA;call plug#end()&#xA;&#xA;set completeopt=menu,menuone,noselect&#xA;&#xA;lua &amp;lt;&amp;lt;EOF&#xA;  -- Set up nvim-cmp.&#xA;  local cmp = require&#39;cmp&#39;&#xA;&#xA;  cmp.setup({&#xA;    snippet = {&#xA;      -- REQUIRED - you must specify a snippet engine&#xA;      expand = function(args)&#xA;        vim.fn[&#34;vsnip#anonymous&#34;](args.body) -- For `vsnip` users.&#xA;        -- require(&#39;luasnip&#39;).lsp_expand(args.body) -- For `luasnip` users.&#xA;        -- require(&#39;snippy&#39;).expand_snippet(args.body) -- For `snippy` users.&#xA;        -- vim.fn[&#34;UltiSnips#Anon&#34;](args.body) -- For `ultisnips` users.&#xA;      end,&#xA;    },&#xA;    window = {&#xA;      -- completion = cmp.config.window.bordered(),&#xA;      -- documentation = cmp.config.window.bordered(),&#xA;    },&#xA;    mapping = cmp.mapping.preset.insert({&#xA;      [&#39;&amp;lt;C-b&amp;gt;&#39;] = cmp.mapping.scroll_docs(-4),&#xA;      [&#39;&amp;lt;C-f&amp;gt;&#39;] = cmp.mapping.scroll_docs(4),&#xA;      [&#39;&amp;lt;C-Space&amp;gt;&#39;] = cmp.mapping.complete(),&#xA;      [&#39;&amp;lt;C-e&amp;gt;&#39;] = cmp.mapping.abort(),&#xA;      [&#39;&amp;lt;CR&amp;gt;&#39;] = cmp.mapping.confirm({ select = true }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items.&#xA;    }),&#xA;    sources = cmp.config.sources({&#xA;      { name = &#39;nvim_lsp&#39; },&#xA;      { name = &#39;vsnip&#39; }, -- For vsnip users.&#xA;      -- { name = &#39;luasnip&#39; }, -- For luasnip users.&#xA;      -- { name = &#39;ultisnips&#39; }, -- For ultisnips users.&#xA;      -- { name = &#39;snippy&#39; }, -- For snippy users.&#xA;    }, {&#xA;      { name = &#39;buffer&#39; },&#xA;    })&#xA;  })&#xA;&#xA;  -- Set configuration for specific filetype.&#xA;  cmp.setup.filetype(&#39;gitcommit&#39;, {&#xA;    sources = cmp.config.sources({&#xA;      { name = &#39;cmp_git&#39; }, -- You can specify the `cmp_git` source if you were installed it.&#xA;    }, {&#xA;      { name = &#39;buffer&#39; },&#xA;    })&#xA;  })&#xA;&#xA;  -- Use buffer source for `/` and `?` (if you enabled `native_menu`, this won&#39;t work anymore).&#xA;  cmp.setup.cmdline({ &#39;/&#39;, &#39;?&#39; }, {&#xA;    mapping = cmp.mapping.preset.cmdline(),&#xA;    sources = {&#xA;      { name = &#39;buffer&#39; }&#xA;    }&#xA;  })&#xA;&#xA;  -- Use cmdline &amp;amp; path source for &#39;:&#39; (if you enabled `native_menu`, this won&#39;t work anymore).&#xA;  cmp.setup.cmdline(&#39;:&#39;, {&#xA;    mapping = cmp.mapping.preset.cmdline(),&#xA;    sources = cmp.config.sources({&#xA;      { name = &#39;path&#39; }&#xA;    }, {&#xA;      { name = &#39;cmdline&#39; }&#xA;    })&#xA;  })&#xA;&#xA;  -- Set up lspconfig.&#xA;  local capabilities = require(&#39;cmp_nvim_lsp&#39;).update_capabilities(vim.lsp.protocol.make_client_capabilities())&#xA;  -- Replace &amp;lt;YOUR_LSP_SERVER&amp;gt; with each lsp server you&#39;ve enabled.&#xA;  require(&#39;lspconfig&#39;)[&#39;&amp;lt;YOUR_LSP_SERVER&amp;gt;&#39;].setup {&#xA;    capabilities = capabilities&#xA;  }&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Where can I find more completion sources?&lt;/h3&gt; &#xA;&lt;p&gt;Have a look at the &lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp/wiki/List-of-sources&#34;&gt;Wiki&lt;/a&gt; and the &lt;code&gt;nvim-cmp&lt;/code&gt; &lt;a href=&#34;https://github.com/topics/nvim-cmp&#34;&gt;GitHub topic&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Where can I find advanced configuration examples?&lt;/h3&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp/wiki&#34;&gt;Wiki&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>craftzdog/dotfiles-public</title>
    <updated>2022-10-02T01:44:39Z</updated>
    <id>tag:github.com,2022-10-02:/craftzdog/dotfiles-public</id>
    <link href="https://github.com/craftzdog/dotfiles-public" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My personal dotfiles&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/craftzdog/dotfiles-public/master/images/screenshot-1.png&#34; alt=&#34;fish screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/craftzdog/dotfiles-public/master/images/screenshot-neovim.png&#34; alt=&#34;nvim screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Takuya&#39;s dotfiles&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Donâ€™t blindly use my settings unless you know what that entails. Use at your own risk!&lt;/p&gt; &#xA;&lt;h3&gt;Looking for a Markdown note-taking app?&lt;/h3&gt; &#xA;&lt;p&gt;Check out my app called &lt;a href=&#34;https://www.inkdrop.app/&#34;&gt;Inkdrop&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.inkdrop.app/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/craftzdog/dotfiles-public/master/images/screenshot-inkdrop.png&#34; alt=&#34;Inkdrop&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;vim (NeoVim) config&lt;/li&gt; &#xA; &lt;li&gt;tmux config&lt;/li&gt; &#xA; &lt;li&gt;git config&lt;/li&gt; &#xA; &lt;li&gt;fish config&lt;/li&gt; &#xA; &lt;li&gt;PowerShell config&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Neovim setup&lt;/h2&gt; &#xA;&lt;p&gt;Requires &lt;a href=&#34;https://neovim.io/&#34;&gt;Neovim&lt;/a&gt; (&amp;gt;= 0.7)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;wbthomason/packer.nvim&lt;/a&gt; - A plugin manager for Neovim&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/svrana/neosolarized.nvim&#34;&gt;svrana/neosolarized.nvim&lt;/a&gt; - A truecolor, solarized dark colorscheme&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;nvim-lualine/lualine.nvim&lt;/a&gt; - A blazing fast and easy to configure Neovim statusline written in Lua&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/onsails/lspkind-nvim&#34;&gt;onsails/lspkind-nvim&lt;/a&gt; - VSCode-like pictograms&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/L3MON4D3/LuaSnip&#34;&gt;L3MON4D3/LuaSnip&lt;/a&gt; - Snippet Engine for Neovim written in Lua&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-nvim-lsp&#34;&gt;hrsh7th/cmp-nvim-lsp&lt;/a&gt; - nvim-cmp source for neovim&#39;s built-in LSP&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-buffer&#34;&gt;hrsh7th/cmp-buffer&lt;/a&gt; - nvim-cmp source for buffer words&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;hrsh7th/nvim-cmp&lt;/a&gt; - A completion engine plugin for neovim written in Lua&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;neovim/nvim-lspconfig&lt;/a&gt; - A collection of configurations for Neovim&#39;s built-in LSP&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jose-elias-alvarez/null-ls.nvim&#34;&gt;jose-elias-alvarez/null-ls.nvim&lt;/a&gt; - Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MunifTanjim/prettier.nvim&#34;&gt;MunifTanjim/prettier.nvim&lt;/a&gt; - Prettier plugin for Neovim&#39;s built-in LSP client&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/mason.nvim&#34;&gt;williamboman/mason.nvim&lt;/a&gt; - Portable package manager for Neovim that runs everywhere Neovim runs. Easily install and manage LSP servers, DAP servers, linters, and formatters&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/mason-lspconfig.nvim&#34;&gt;williamboman/mason-lspconfig.nvim&lt;/a&gt; - Extension to mason.nvim that makes it easier to use lspconfig with mason.nvim&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/glepnir/lspsaga.nvim&#34;&gt;glepnir/lspsaga.nvim&lt;/a&gt; - A light-weight lsp plugin based on neovim&#39;s built-in lsp with a highly performant UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter/nvim-treesitter&lt;/a&gt; - &lt;a href=&#34;https://github.com/tree-sitter/tree-sitter&#34;&gt;Treesitter&lt;/a&gt; configurations and abstraction layer for Neovim&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-web-devicons&#34;&gt;kyazdani42/nvim-web-devicons&lt;/a&gt; - Lua &lt;code&gt;fork&lt;/code&gt; of vim-web-devicons for neovim&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;nvim-telescope/telescope.nvim&lt;/a&gt; - A highly extendable fuzzy finder over lists&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope-file-browser.nvim&#34;&gt;nvim-telescope/telescope-file-browser.nvim&lt;/a&gt; - File Browser extension for telescope.nvim&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/windwp/nvim-autopairs&#34;&gt;windwp/nvim-autopairs&lt;/a&gt; - Autopairs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/windwp/nvim-ts-autotag&#34;&gt;windwp/nvim-ts-autotag&lt;/a&gt; - Use treesitter to auto close and auto rename html tag&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/norcalli/nvim-colorizer.lua&#34;&gt;norcalli/nvim-colorizer.lua&lt;/a&gt; - A high-performance color highlighter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/nvim-bufferline.lua&#34;&gt;akinsho/nvim-bufferline.lua&lt;/a&gt; - A snazzy bufferline&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;lewis6991/gitsigns.nvim&lt;/a&gt; - Git integration for buffers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dinhhuy258/git.nvim&#34;&gt;dinhhuy258/git.nvim&lt;/a&gt; - A simple clone of the plugin vim-fugitive&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/zen-mode.nvim&#34;&gt;folke/zen-mode.nvim&lt;/a&gt; - Distraction-free mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/iamcco/markdown-preview.nvim&#34;&gt;iamcco/markdown-preview.nvim&lt;/a&gt; - Markdown live preview&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Shell setup (macOS &amp;amp; Linux)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fishshell.com/&#34;&gt;Fish shell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jorgebucaran/fisher&#34;&gt;Fisher&lt;/a&gt; - Plugin manager&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/IlanCosman/tide&#34;&gt;Tide&lt;/a&gt; - Shell theme. Use version 5: &lt;code&gt;fisher install ilancosman/tide@v5&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ryanoasis/nerd-fonts&#34;&gt;Nerd fonts&lt;/a&gt; - Powerline-patched fonts. I use Hack.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jethrokuan/z&#34;&gt;z for fish&lt;/a&gt; - Directory jumping&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://the.exa.website/&#34;&gt;Exa&lt;/a&gt; - &lt;code&gt;ls&lt;/code&gt; replacement&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/x-motemen/ghq&#34;&gt;ghq&lt;/a&gt; - Local Git repository organizer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/peco/peco&#34;&gt;peco&lt;/a&gt; - Interactive filtering&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;PowerShell setup (Windows)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://scoop.sh/&#34;&gt;Scoop&lt;/a&gt; - A command-line installer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitforwindows.org/&#34;&gt;Git for Windows&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ohmyposh.dev/&#34;&gt;Oh My Posh&lt;/a&gt; - Prompt theme engine&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/devblackops/Terminal-Icons&#34;&gt;Terminal Icons&lt;/a&gt; - Folder and file icons&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/en-us/powershell/module/psreadline/&#34;&gt;PSReadLine&lt;/a&gt; - Cmdlets for customizing the editing environment, used for autocompletion&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.powershellgallery.com/packages/z&#34;&gt;z&lt;/a&gt; - Directory jumper&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kelleyma49/PSFzf&#34;&gt;PSFzf&lt;/a&gt; - Fuzzy finder&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;p&gt;Watch my video tutorials:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=sSOfr2MtRU8&amp;amp;list=PLxQA0uNgQDCICMRwlOzWAZBPL05XBC_br&amp;amp;index=10&#34;&gt;My dev workflow using tmux and vim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=UZBjt04y4Oo&amp;amp;list=PLxQA0uNgQDCICMRwlOzWAZBPL05XBC_br&amp;amp;index=3&#34;&gt;My vim setup to speed up JavaScript coding for my Electron and React Native apps&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dev.to/craftzdog/my-vim-setup-to-speed-up-javascript-coding-for-my-electron-and-react-native-apps-4ebp&#34;&gt;Blogpost&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=qKpY7t5m35k&amp;amp;list=PLxQA0uNgQDCICMRwlOzWAZBPL05XBC_br&amp;amp;index=4&#34;&gt;A productive command-line Git workflow for indie app developers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dev.to/craftzdog/a-productive-command-line-git-workflow-for-indie-app-developers-k7d&#34;&gt;Blogpost&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=KKxhf50FIPI&#34;&gt;My Fish shell workflow for coding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5-aK2_WwrmM&#34;&gt;How to set up PowerShell prompt with Oh My Posh on Windows 11&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;About me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/inkdrop_app&#34;&gt;Twitter @inkdrop_app&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.inkdrop.app/&#34;&gt;Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.inkdrop.app/&#34;&gt;My product: Inkdrop - Markdown note-taking app&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>