<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-15T01:48:51Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MunifTanjim/nui.nvim</title>
    <updated>2023-10-15T01:48:51Z</updated>
    <id>tag:github.com,2023-10-15:/MunifTanjim/nui.nvim</id>
    <link href="https://github.com/MunifTanjim/nui.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UI Component Library for Neovim.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/MunifTanjim/nui.nvim/ci.yml?branch=main&amp;amp;label=CI&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub Workflow Status: CI&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/MunifTanjim/nui.nvim&#34;&gt;&lt;img src=&#34;https://img.shields.io/codecov/c/gh/MunifTanjim/nui.nvim/master?style=for-the-badge&#34; alt=&#34;Coverage&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://luarocks.org/modules/MunifTanjim/nui.nvim&#34;&gt;&lt;img src=&#34;https://img.shields.io/luarocks/v/MunifTanjim/nui.nvim?color=%232c3e67&amp;amp;style=for-the-badge&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/license/MunifTanjim/nui.nvim?color=%23000080&amp;amp;style=for-the-badge&#34; alt=&#34;License&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;nui.nvim&lt;/h1&gt; &#xA;&lt;p&gt;UI Component Library for Neovim.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/neovim/releases/tag/v0.5.0&#34;&gt;Neovim 0.5.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugins with your preferred plugin manager. For example, with &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;&lt;code&gt;vim-plug&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;MunifTanjim/nui.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Blocks&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/text&#34;&gt;NuiText&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Quickly add highlighted text on the buffer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/text&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.text&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.text&#34;&gt;Check Wiki Page for &lt;code&gt;nui.text&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/line&#34;&gt;NuiLine&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Quickly add line containing highlighted text chunks on the buffer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/line&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.line&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.line&#34;&gt;Check Wiki Page for &lt;code&gt;nui.line&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/table&#34;&gt;NuiTable&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Quickly render table-like structured content on the buffer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/table&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.table&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.table&#34;&gt;Check Wiki Page for &lt;code&gt;nui.table&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/tree&#34;&gt;NuiTree&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Quickly render tree-like structured content on the buffer.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/tree&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.tree&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.tree&#34;&gt;Check Wiki Page for &lt;code&gt;nui.tree&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Components&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/layout&#34;&gt;Layout&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/media/layout.gif&#34; alt=&#34;Layout GIF&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local Popup = require(&#34;nui.popup&#34;)&#xA;local Layout = require(&#34;nui.layout&#34;)&#xA;&#xA;local popup_one, popup_two = Popup({&#xA;  enter = true,&#xA;  border = &#34;single&#34;,&#xA;}), Popup({&#xA;  border = &#34;double&#34;,&#xA;})&#xA;&#xA;local layout = Layout(&#xA;  {&#xA;    position = &#34;50%&#34;,&#xA;    size = {&#xA;      width = 80,&#xA;      height = &#34;60%&#34;,&#xA;    },&#xA;  },&#xA;  Layout.Box({&#xA;    Layout.Box(popup_one, { size = &#34;40%&#34; }),&#xA;    Layout.Box(popup_two, { size = &#34;60%&#34; }),&#xA;  }, { dir = &#34;row&#34; })&#xA;)&#xA;&#xA;local current_dir = &#34;row&#34;&#xA;&#xA;popup_one:map(&#34;n&#34;, &#34;r&#34;, function()&#xA;  if current_dir == &#34;col&#34; then&#xA;    layout:update(Layout.Box({&#xA;      Layout.Box(popup_one, { size = &#34;40%&#34; }),&#xA;      Layout.Box(popup_two, { size = &#34;60%&#34; }),&#xA;    }, { dir = &#34;row&#34; }))&#xA;&#xA;    current_dir = &#34;row&#34;&#xA;  else&#xA;    layout:update(Layout.Box({&#xA;      Layout.Box(popup_two, { size = &#34;60%&#34; }),&#xA;      Layout.Box(popup_one, { size = &#34;40%&#34; }),&#xA;    }, { dir = &#34;col&#34; }))&#xA;&#xA;    current_dir = &#34;col&#34;&#xA;  end&#xA;end, {})&#xA;&#xA;layout:mount()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/layout&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.layout&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.layout&#34;&gt;Check Wiki Page for &lt;code&gt;nui.layout&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/popup&#34;&gt;Popup&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/media/popup.gif&#34; alt=&#34;Popup GIF&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local Popup = require(&#34;nui.popup&#34;)&#xA;local event = require(&#34;nui.utils.autocmd&#34;).event&#xA;&#xA;local popup = Popup({&#xA;  enter = true,&#xA;  focusable = true,&#xA;  border = {&#xA;    style = &#34;rounded&#34;,&#xA;  },&#xA;  position = &#34;50%&#34;,&#xA;  size = {&#xA;    width = &#34;80%&#34;,&#xA;    height = &#34;60%&#34;,&#xA;  },&#xA;})&#xA;&#xA;-- mount/open the component&#xA;popup:mount()&#xA;&#xA;-- unmount component when cursor leaves buffer&#xA;popup:on(event.BufLeave, function()&#xA;  popup:unmount()&#xA;end)&#xA;&#xA;-- set content&#xA;vim.api.nvim_buf_set_lines(popup.bufnr, 0, 1, false, { &#34;Hello World&#34; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/popup&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.popup&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.popup&#34;&gt;Check Wiki Page for &lt;code&gt;nui.popup&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/input&#34;&gt;Input&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/media/input.gif&#34; alt=&#34;Input GIF&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local Input = require(&#34;nui.input&#34;)&#xA;local event = require(&#34;nui.utils.autocmd&#34;).event&#xA;&#xA;local input = Input({&#xA;  position = &#34;50%&#34;,&#xA;  size = {&#xA;    width = 20,&#xA;  },&#xA;  border = {&#xA;    style = &#34;single&#34;,&#xA;    text = {&#xA;      top = &#34;[Howdy?]&#34;,&#xA;      top_align = &#34;center&#34;,&#xA;    },&#xA;  },&#xA;  win_options = {&#xA;    winhighlight = &#34;Normal:Normal,FloatBorder:Normal&#34;,&#xA;  },&#xA;}, {&#xA;  prompt = &#34;&amp;gt; &#34;,&#xA;  default_value = &#34;Hello&#34;,&#xA;  on_close = function()&#xA;    print(&#34;Input Closed!&#34;)&#xA;  end,&#xA;  on_submit = function(value)&#xA;    print(&#34;Input Submitted: &#34; .. value)&#xA;  end,&#xA;})&#xA;&#xA;-- mount/open the component&#xA;input:mount()&#xA;&#xA;-- unmount component when cursor leaves buffer&#xA;input:on(event.BufLeave, function()&#xA;  input:unmount()&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/input&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.input&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.input&#34;&gt;Check Wiki Page for &lt;code&gt;nui.input&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/menu&#34;&gt;Menu&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/media/menu.gif&#34; alt=&#34;Menu GIF&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local Menu = require(&#34;nui.menu&#34;)&#xA;local event = require(&#34;nui.utils.autocmd&#34;).event&#xA;&#xA;local menu = Menu({&#xA;  position = &#34;50%&#34;,&#xA;  size = {&#xA;    width = 25,&#xA;    height = 5,&#xA;  },&#xA;  border = {&#xA;    style = &#34;single&#34;,&#xA;    text = {&#xA;      top = &#34;[Choose-an-Element]&#34;,&#xA;      top_align = &#34;center&#34;,&#xA;    },&#xA;  },&#xA;  win_options = {&#xA;    winhighlight = &#34;Normal:Normal,FloatBorder:Normal&#34;,&#xA;  },&#xA;}, {&#xA;  lines = {&#xA;    Menu.item(&#34;Hydrogen (H)&#34;),&#xA;    Menu.item(&#34;Carbon (C)&#34;),&#xA;    Menu.item(&#34;Nitrogen (N)&#34;),&#xA;    Menu.separator(&#34;Noble-Gases&#34;, {&#xA;      char = &#34;-&#34;,&#xA;      text_align = &#34;right&#34;,&#xA;    }),&#xA;    Menu.item(&#34;Helium (He)&#34;),&#xA;    Menu.item(&#34;Neon (Ne)&#34;),&#xA;    Menu.item(&#34;Argon (Ar)&#34;),&#xA;  },&#xA;  max_width = 20,&#xA;  keymap = {&#xA;    focus_next = { &#34;j&#34;, &#34;&amp;lt;Down&amp;gt;&#34;, &#34;&amp;lt;Tab&amp;gt;&#34; },&#xA;    focus_prev = { &#34;k&#34;, &#34;&amp;lt;Up&amp;gt;&#34;, &#34;&amp;lt;S-Tab&amp;gt;&#34; },&#xA;    close = { &#34;&amp;lt;Esc&amp;gt;&#34;, &#34;&amp;lt;C-c&amp;gt;&#34; },&#xA;    submit = { &#34;&amp;lt;CR&amp;gt;&#34;, &#34;&amp;lt;Space&amp;gt;&#34; },&#xA;  },&#xA;  on_close = function()&#xA;    print(&#34;Menu Closed!&#34;)&#xA;  end,&#xA;  on_submit = function(item)&#xA;    print(&#34;Menu Submitted: &#34;, item.text)&#xA;  end,&#xA;})&#xA;&#xA;-- mount the component&#xA;menu:mount()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/menu&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.menu&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.menu&#34;&gt;Check Wiki Page for &lt;code&gt;nui.menu&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/split&#34;&gt;Split&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/media/split.gif&#34; alt=&#34;Split GIF&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local Split = require(&#34;nui.split&#34;)&#xA;local event = require(&#34;nui.utils.autocmd&#34;).event&#xA;&#xA;local split = Split({&#xA;  relative = &#34;editor&#34;,&#xA;  position = &#34;bottom&#34;,&#xA;  size = &#34;20%&#34;,&#xA;})&#xA;&#xA;-- mount/open the component&#xA;split:mount()&#xA;&#xA;-- unmount component when cursor leaves buffer&#xA;split:on(event.BufLeave, function()&#xA;  split:unmount()&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/lua/nui/split&#34;&gt;Check Detailed Documentation for &lt;code&gt;nui.split&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.split&#34;&gt;Check Wiki Page for &lt;code&gt;nui.split&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Extendibility&lt;/h2&gt; &#xA;&lt;p&gt;Each of the &lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/#blocks&#34;&gt;blocks&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/#components&#34;&gt;components&lt;/a&gt; can be extended to add new methods or change their behaviors.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local Timer = Popup:extend(&#34;Timer&#34;)&#xA;&#xA;function Timer:init(popup_options)&#xA;  local options = vim.tbl_deep_extend(&#34;force&#34;, popup_options or {}, {&#xA;    border = &#34;double&#34;,&#xA;    focusable = false,&#xA;    position = { row = 0, col = &#34;100%&#34; },&#xA;    size = { width = 10, height = 1 },&#xA;    win_options = {&#xA;      winhighlight = &#34;Normal:Normal,FloatBorder:SpecialChar&#34;,&#xA;    },&#xA;  })&#xA;&#xA;  Timer.super.init(self, options)&#xA;end&#xA;&#xA;function Timer:countdown(time, step, format)&#xA;  local function draw_content(text)&#xA;    local gap_width = 10 - vim.api.nvim_strwidth(text)&#xA;    vim.api.nvim_buf_set_lines(self.bufnr, 0, -1, false, {&#xA;      string.format(&#xA;        &#34;%s%s%s&#34;,&#xA;        string.rep(&#34; &#34;, math.floor(gap_width / 2)),&#xA;        text,&#xA;        string.rep(&#34; &#34;, math.ceil(gap_width / 2))&#xA;      ),&#xA;    })&#xA;  end&#xA;&#xA;  self:mount()&#xA;&#xA;  local remaining_time = time&#xA;&#xA;  draw_content(format(remaining_time))&#xA;&#xA;  vim.fn.timer_start(step, function()&#xA;    remaining_time = remaining_time - step&#xA;&#xA;    draw_content(format(remaining_time))&#xA;&#xA;    if remaining_time &amp;lt;= 0 then&#xA;      self:unmount()&#xA;    end&#xA;  end, { [&#34;repeat&#34;] = math.ceil(remaining_time / step) })&#xA;end&#xA;&#xA;local timer = Timer()&#xA;&#xA;timer:countdown(10000, 1000, function(time)&#xA;  return tostring(time / 1000) .. &#34;s&#34;&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;nui.object&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A small object library is bundled with &lt;code&gt;nui.nvim&lt;/code&gt;. It is, more or less, a clone of the &lt;a href=&#34;https://github.com/kikito/middleclass&#34;&gt;&lt;code&gt;kikito/middleclass&lt;/code&gt;&lt;/a&gt; library.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim/wiki/nui.object&#34;&gt;Check Wiki Page for &lt;code&gt;nui.object&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Licensed under the MIT License. Check the &lt;a href=&#34;https://raw.githubusercontent.com/MunifTanjim/nui.nvim/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>LunarVim/Launch.nvim</title>
    <updated>2023-10-15T01:48:51Z</updated>
    <id>tag:github.com,2023-10-15:/LunarVim/Launch.nvim</id>
    <link href="https://github.com/LunarVim/Launch.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🪨 This is my attempt at a basic stable starting point for a Neovim IDE.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A Basic Stable IDE config for Neovim&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Why does this repo exist?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This config attempts to provide a rock solid fully featured starting point for someone new to Neovim, or just tired of maintaining the basic IDE components of their config.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;What makes it &#34;rock solid&#34;?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;All the included plugins are pinned to a version that ensures they are compatible and will not update potentially introducing errors into your config. For every Neovim release I will update this repo along with the community to keep it up to date with the newest versions.&lt;/p&gt; &#xA;&lt;p&gt;As I mentioned, this config is meant as a starting point for people new to Neovim who want a familiar IDE experience. The config has a very simple structure that makes it easy to add new plugins.&lt;/p&gt; &#xA;&lt;h3&gt;Migration guide to lazy from packer&lt;/h3&gt; &#xA;&lt;p&gt;Now this config uses &lt;code&gt;lazy.nvim&lt;/code&gt; as a plugin manager, so if you are migrating from packer you should probably remove &lt;code&gt;$HOME/.local/share/nvim&lt;/code&gt; and re-open nvim to re-install the plugins to not face any issues.&lt;/p&gt; &#xA;&lt;h2&gt;Install Neovim 0.9&lt;/h2&gt; &#xA;&lt;p&gt;You can install Neovim with your package manager e.g. brew, apt, pacman etc.. but remember that when you update your packages Neovim may be upgraded to a newer version.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to make sure Neovim only updates when you want it to than I recommend installing from source:&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Verify the required &lt;a href=&#34;https://github.com/neovim/neovim/wiki/Building-Neovim#build-prerequisites&#34;&gt;build prerequisites&lt;/a&gt; for your system.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/neovim/neovim.git&#xA;cd neovim&#xA;git checkout release-0.9&#xA;make CMAKE_BUILD_TYPE=Release&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install the config&lt;/h2&gt; &#xA;&lt;p&gt;Make sure to remove or backup your current &lt;code&gt;nvim&lt;/code&gt; directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/LunarVim/nvim-basic-ide.git ~/.config/nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run &lt;code&gt;nvim&lt;/code&gt; and wait for the plugins to be installed&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; (You will notice treesitter pulling in a bunch of parsers the next time you open Neovim)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Checkout this file for some predefined keymaps: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/tree/master/lua/keymaps.lua&#34;&gt;keymaps&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get healthy&lt;/h2&gt; &#xA;&lt;p&gt;Open &lt;code&gt;nvim&lt;/code&gt; and enter the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:checkhealth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll probably notice you don&#39;t have support for copy/paste also that python and node haven&#39;t been setup&lt;/p&gt; &#xA;&lt;p&gt;So let&#39;s fix that&lt;/p&gt; &#xA;&lt;p&gt;First we&#39;ll fix copy/paste&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;On mac &lt;code&gt;pbcopy&lt;/code&gt; should be builtin&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On Ubuntu&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install xsel # for X11&#xA;sudo apt install wl-clipboard # for wayland&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Next we need to install python support (node is optional)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Neovim python support&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install pynvim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Neovim node support&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm i -g neovim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We will also need &lt;code&gt;ripgrep&lt;/code&gt; for Telescope to work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ripgrep&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install ripgrep&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; make sure you have &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; installed, I recommend a node manager like &lt;a href=&#34;https://github.com/Schniz/fnm&#34;&gt;fnm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Fonts&lt;/h2&gt; &#xA;&lt;p&gt;I recommend using the following repo to get a &#34;Nerd Font&#34; (Font that supports icons)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ronniedroid/getnf&#34;&gt;getnf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;LSP&lt;/h3&gt; &#xA;&lt;p&gt;To add a new LSP&lt;/p&gt; &#xA;&lt;p&gt;First Enter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:Mason&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and press &lt;code&gt;i&lt;/code&gt; on the Language Server you wish to install&lt;/p&gt; &#xA;&lt;p&gt;Next you will need to add the server to this list: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/tree/master/lua/utils/init.lua#L3&#34;&gt;servers&lt;/a&gt; Note: Builtin LSP doesn&#39;t contain all lsps from &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/raw/master/doc/server_configurations.md#terraform_lsp&#34;&gt;nvim-lspconfig&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you want to install any from there, for example terraform_lsp(which adds more functionality than terraformls, like complete resource listing),&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You can add the lsp name in &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/tree/master/user/utils/init.lua#L3-L13&#34;&gt;mason lsp block&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- lua/utils/init.lua&#xA;M.servers = {&#xA;&#x9;&#34;lua_ls&#34;,&#xA;&#x9;&#34;cssls&#34;,&#xA;&#x9;&#34;html&#34;,&#xA;&#x9;&#34;tsserver&#34;,&#xA;&#x9;&#34;pyright&#34;,&#xA;&#x9;&#34;bashls&#34;,&#xA;&#x9;&#34;jsonls&#34;,&#xA;&#x9;&#34;yamlls&#34;,&#xA;    &#x9;&#34;terraform_lsp&#34; -- New LSP&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Manually install the binary of the lsp and put it in your path by downloading the binary or through your package manager. For terraform_lsp &lt;a href=&#34;https://github.com/juliosueiras/terraform-lsp/releases&#34;&gt;example&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Formatters and linters&lt;/h3&gt; &#xA;&lt;p&gt;Make sure the formatter or linter is installed and add it to this setup function: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/raw/e6b6c96280ca730a2564f2e36050df055acfb1a8/lua/user/null-ls.lua#L22&#34;&gt;null-ls&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Some are already setup as examples, remove them if you want&lt;/p&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;h3&gt;You can install new plugins here: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/tree/master/lua/user&#34;&gt;plugins&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Heres the wiki for installing new plugins refer to this: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/wiki/adding_new_plugins&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goolord/alpha-nvim&#34;&gt;alpha-nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/famiu/bufdelete.nvim&#34;&gt;bufdelete.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/bufferline.nvim&#34;&gt;bufferline.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-buffer&#34;&gt;cmp-buffer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-nvim-lsp&#34;&gt;cmp-nvim-lsp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-nvim-lua&#34;&gt;cmp-nvim-lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-path&#34;&gt;cmp-path&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/saadparwaiz1/cmp_luasnip&#34;&gt;cmp_luasnip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/numToStr/Comment.nvim&#34;&gt;Comment.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ravenxrz/DAPInstall.nvim&#34;&gt;DAPInstall.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rafamadriz/friendly-snippets&#34;&gt;friendly-snippets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim&#34;&gt;indent-blankline.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/L3MON4D3/LuaSnip&#34;&gt;LuaSnip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/mason-lspconfig.nvim&#34;&gt;mason-lspconfig.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/mason.nvim&#34;&gt;mason.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jose-elias-alvarez/null-ls.nvim&#34;&gt;null-ls.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/windwp/nvim-autopairs&#34;&gt;nvim-autopairs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-dap-ui&#34;&gt;nvim-dap-ui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mfussenegger/nvim-dap&#34;&gt;nvim-dap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-tree.lua&#34;&gt;nvim-tree.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JoosepAlviste/nvim-ts-context-commentstring&#34;&gt;nvim-ts-context-commentstring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ahmedkhalf/project.nvim&#34;&gt;project.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/toggleterm.nvim&#34;&gt;toggleterm.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/tokyonight.nvim&#34;&gt;tokyonight.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RRethy/vim-illuminate&#34;&gt;vim-illuminate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;which-key.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The computing scientist&#39;s main challenge is not to get confused by the complexities of his own making.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;- Edsger W. Dijkstra&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nvimdev/dashboard-nvim</title>
    <updated>2023-10-15T01:48:51Z</updated>
    <id>tag:github.com,2023-10-15:/nvimdev/dashboard-nvim</id>
    <link href="https://github.com/nvimdev/dashboard-nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;vim dashboard&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Fancy and Blazing Fast start screen plugin of neovim &lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&#xA;    &lt;center&gt;&#xA;     Hyper&#xA;    &lt;/center&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&#xA;    &lt;center&gt;&#xA;     Doom&#xA;    &lt;/center&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt;&#xA;     &lt;img src=&#34;https://user-images.githubusercontent.com/41671631/215015845-b13343c4-427e-45d6-9f92-267ab909eff1.png&#34; width=&#34;80%&#34; height=&#34;80%/&#34;&gt;&#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;center&gt; &#xA;     &lt;img src=&#34;https://user-images.githubusercontent.com/41671631/214518543-d7d6afbf-f405-4a6f-a505-568c5a101e92.png&#34; width=&#34;80%&#34; height=&#34;80%/&#34;&gt; &#xA;    &lt;/center&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Feature&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Low memory usage. dashboard does not store the all user configs in memory like header etc these string will take some memory. now it will be clean after you open a file. you can still use dashboard command to open a new one , then dashboard will read the config from cache.&lt;/li&gt; &#xA; &lt;li&gt;Blazing fast&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Lazy.nvim&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#39;glepnir/dashboard-nvim&#39;,&#xA;  event = &#39;VimEnter&#39;,&#xA;  config = function()&#xA;    require(&#39;dashboard&#39;).setup {&#xA;      -- config&#xA;    }&#xA;  end,&#xA;  dependencies = { {&#39;nvim-tree/nvim-web-devicons&#39;}}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Packer&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;glepnir/dashboard-nvim&#39;,&#xA;  event = &#39;VimEnter&#39;,&#xA;  config = function()&#xA;    require(&#39;dashboard&#39;).setup {&#xA;      -- config&#xA;    }&#xA;  end,&#xA;  requires = {&#39;nvim-tree/nvim-web-devicons&#39;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;theme = &#39;hyper&#39; --  theme is doom and hyper default is hyper&#xA;disable_move    --  default is false disable move keymap for hyper&#xA;shortcut_type   --  shorcut type &#39;letter&#39; or &#39;number&#39;&#xA;change_to_vcs_root -- default is false,for open file in hyper mru. it will change to the root of vcs&#xA;config = {},    --  config used for theme&#xA;hide = {&#xA;  statusline    -- hide statusline default is true&#xA;  tabline       -- hide the tabline&#xA;  winbar        -- hide winbar&#xA;},&#xA;preview = {&#xA;  command       -- preview command&#xA;  file_path     -- preview file path&#xA;  file_height   -- preview file height&#xA;  file_width    -- preview file width&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Theme config&lt;/h2&gt; &#xA;&lt;p&gt;the &lt;code&gt;config&lt;/code&gt; field is used for theme. general field&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;config = {&#xA;  header -- type is table def&#xA;  week_header = {&#xA;    enable  --boolean use a week header&#xA;    concat  --concat string after time string line&#xA;    append  --table append after time string line&#xA;  },&#xA;  disable_move  -- boolean default is false disable move key&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hyper&lt;/h3&gt; &#xA;&lt;p&gt;when use &lt;code&gt;hyper&lt;/code&gt; theme the available options in &lt;code&gt;config&lt;/code&gt; is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;config = {&#xA;  shortcut = {&#xA;    -- action can be a function type&#xA;    { desc = string, group = &#39;highlight group&#39;, key = &#39;shortcut key&#39;, action = &#39;action when you press key&#39; },&#xA;  },&#xA;  packages = { enable = true }, -- show how many plugins neovim loaded&#xA;  -- limit how many projects list, action when you press key or enter it will run this action.&#xA;  -- action can be a functino type, e.g.&#xA;  -- action = func(path) vim.cmd(&#39;Telescope find_files cwd=&#39; .. path) end&#xA;  project = { enable = true, limit = 8, icon = &#39;your icon&#39;, label = &#39;&#39;, action = &#39;Telescope find_files cwd=&#39; },&#xA;  mru = { limit = 10, icon = &#39;your icon&#39;, label = &#39;&#39;, },&#xA;  footer = {}, -- footer&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Doom&lt;/h3&gt; &#xA;&lt;p&gt;when use &lt;code&gt;doom&lt;/code&gt; theme the available options in &lt;code&gt;config&lt;/code&gt; is&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;config = {&#xA;  center = {&#xA;    {&#xA;      icon = &#39;&#39;,&#xA;      icon_hl = &#39;group&#39;,&#xA;      desc = &#39;description&#39;,&#xA;      desc_hl = &#39;group&#39;,&#xA;      key = &#39;shortcut key in dashboard buffer not keymap !!&#39;,&#xA;      key_hl = &#39;group&#39;,&#xA;      action = &#39;&#39;,&#xA;    },&#xA;  },&#xA;  footer = {},&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;notice if you don&#39;t link config every highlight group. you can ignore this key. dashboard will use default highlight group like &lt;code&gt;DashboardKey/Icon/Desc&lt;/code&gt; instead&lt;/p&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Dashboard&lt;/code&gt; open dashboard&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;DbProjectDelete count&lt;/code&gt; delete project in cache works for hyper theme. count is number&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Highlight&lt;/h3&gt; &#xA;&lt;p&gt;all highlight groups&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;-- General&#xA;DashboardHeader DashboardFooter&#xA;-- Hyper theme&#xA;DashboardProjectTitle DashboardProjectTitleIcon DashboardProjectIcon&#xA;DashboardMruTitle DashboardMruIcon DashboardFiles DashboardShortCutIcon&#xA;-- Doome theme&#xA;DashboardDesc DashboardKey DashboardIcon DashboardShortCut&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Example config&lt;/h3&gt; &#xA;&lt;p&gt;example config of screenshot&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Hyper &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;  db.setup({&#xA;    theme = &#39;hyper&#39;,&#xA;    config = {&#xA;      week_header = {&#xA;       enable = true,&#xA;      },&#xA;      shortcut = {&#xA;        { desc = &#39;󰊳 Update&#39;, group = &#39;@property&#39;, action = &#39;Lazy update&#39;, key = &#39;u&#39; },&#xA;        {&#xA;          icon = &#39; &#39;,&#xA;          icon_hl = &#39;@variable&#39;,&#xA;          desc = &#39;Files&#39;,&#xA;          group = &#39;Label&#39;,&#xA;          action = &#39;Telescope find_files&#39;,&#xA;          key = &#39;f&#39;,&#xA;        },&#xA;        {&#xA;          desc = &#39; Apps&#39;,&#xA;          group = &#39;DiagnosticHint&#39;,&#xA;          action = &#39;Telescope app&#39;,&#xA;          key = &#39;a&#39;,&#xA;        },&#xA;        {&#xA;          desc = &#39; dotfiles&#39;,&#xA;          group = &#39;Number&#39;,&#xA;          action = &#39;Telescope dotfiles&#39;,&#xA;          key = &#39;d&#39;,&#xA;        },&#xA;      },&#xA;    },&#xA;  })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Doom &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;db.setup({&#xA;  theme = &#39;doom&#39;,&#xA;  config = {&#xA;    header = {}, --your header&#xA;    center = {&#xA;      {&#xA;        icon = &#39; &#39;,&#xA;        icon_hl = &#39;Title&#39;,&#xA;        desc = &#39;Find File           &#39;,&#xA;        desc_hl = &#39;String&#39;,&#xA;        key = &#39;b&#39;,&#xA;        keymap = &#39;SPC f f&#39;,&#xA;        key_hl = &#39;Number&#39;,&#xA;        action = &#39;lua print(2)&#39;&#xA;      },&#xA;      {&#xA;        icon = &#39; &#39;,&#xA;        desc = &#39;Find Dotfiles&#39;,&#xA;        key = &#39;f&#39;,&#xA;        keymap = &#39;SPC f d&#39;,&#xA;        action = &#39;lua print(3)&#39;&#xA;      },&#xA;    },&#xA;    footer = {}  --your footer&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt;Changed &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Removed Session as a start screen plugin speed is first.if you want use session you can take a look at &lt;a href=&#34;https://github.com/glepnir/dbsession.nvim&#34;&gt;glepnir/dbsession.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Removed Ueberzug script, as the Ueberzug author has deleted the repository.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;TODO&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I will write a plugin to implement some popular terminal evaluators image protocol then I think can make it work with dashboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Backers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RakerZh&#34;&gt;@RakerZh&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Donate&lt;/h1&gt; &#xA;&lt;p&gt;If you&#39;d like to support my work financially, buy me a drink through Github Sponsor or &lt;a href=&#34;https://paypal.me/bobbyhub&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PayPal-00457C?style=for-the-badge&amp;amp;logo=paypal&amp;amp;logoColor=white&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;LICENSE&lt;/h1&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>