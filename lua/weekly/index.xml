<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-09T01:42:15Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>windwp/nvim-ts-autotag</title>
    <updated>2024-06-09T01:42:15Z</updated>
    <id>tag:github.com,2024-06-09:/windwp/nvim-ts-autotag</id>
    <link href="https://github.com/windwp/nvim-ts-autotag" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Use treesitter to auto close and auto rename html tag&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-ts-autotag&lt;/h1&gt; &#xA;&lt;p&gt;Use treesitter to &lt;strong&gt;autoclose&lt;/strong&gt; and &lt;strong&gt;autorename&lt;/strong&gt; html tag&lt;/p&gt; &#xA;&lt;p&gt;It works with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;astro&lt;/li&gt; &#xA; &lt;li&gt;glimmer&lt;/li&gt; &#xA; &lt;li&gt;handlebars&lt;/li&gt; &#xA; &lt;li&gt;html&lt;/li&gt; &#xA; &lt;li&gt;javascript&lt;/li&gt; &#xA; &lt;li&gt;jsx&lt;/li&gt; &#xA; &lt;li&gt;markdown&lt;/li&gt; &#xA; &lt;li&gt;php&lt;/li&gt; &#xA; &lt;li&gt;rescript&lt;/li&gt; &#xA; &lt;li&gt;svelte&lt;/li&gt; &#xA; &lt;li&gt;tsx&lt;/li&gt; &#xA; &lt;li&gt;twig&lt;/li&gt; &#xA; &lt;li&gt;typescript&lt;/li&gt; &#xA; &lt;li&gt;vue&lt;/li&gt; &#xA; &lt;li&gt;xml&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;and more&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Before        Input         After&#xA;------------------------------------&#xA;&amp;lt;div           &amp;gt;              &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&#xA;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;    ciwspan&amp;lt;esc&amp;gt;   &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&#xA;------------------------------------&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Requires &lt;code&gt;Nvim 0.9.5&lt;/code&gt; and up.&lt;/p&gt; &#xA;&lt;p&gt;Note that &lt;code&gt;nvim-ts-autotag&lt;/code&gt; will not work unless you have treesitter parsers (like &lt;code&gt;html&lt;/code&gt;) installed for a given filetype. See &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt; for installing parsers.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;nvim-ts-autotag&#39;).setup({&#xA;  opts = {&#xA;    -- Defaults&#xA;    enable_close = true, -- Auto close tags&#xA;    enable_rename = true, -- Auto rename pairs of tags&#xA;    enable_close_on_slash = false -- Auto close on trailing &amp;lt;/&#xA;  },&#xA;  -- Also override individual filetype configs, these take priority.&#xA;  -- Empty by default, useful if one of the &#34;opts&#34; global settings&#xA;  -- doesn&#39;t work well in a specific filetype&#xA;  per_filetype = {&#xA;    [&#34;html&#34;] = {&#xA;      enable_close = false&#xA;    }&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] If you are setting up via &lt;code&gt;nvim-treesitter.configs&lt;/code&gt; it has been deprecated! Please migrate to the new way. It will be removed in &lt;code&gt;1.0.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;A note on lazy loading&lt;/h3&gt; &#xA;&lt;p&gt;For those of you using lazy loading through a plugin manager (like &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;) lazy loading is not particularly necessary for this plugin. &lt;code&gt;nvim-ts-autotag&lt;/code&gt; is efficient in choosing when it needs to load. If you still insist on lazy loading &lt;code&gt;nvim-ts-autotag&lt;/code&gt;, then two good events to use are &lt;code&gt;BufReadPre&lt;/code&gt; &amp;amp; &lt;code&gt;BufNewFile&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Extending the default config&lt;/h3&gt; &#xA;&lt;p&gt;Let&#39;s say that there&#39;s a language that &lt;code&gt;nvim-ts-autotag&lt;/code&gt; doesn&#39;t currently support and you&#39;d like to support it in your config. While it would be the preference of the author that you upstream your changes, perhaps you would rather not ðŸ˜¢.&lt;/p&gt; &#xA;&lt;p&gt;For example, if you have a language that has a very similar layout in its Treesitter Queries as &lt;code&gt;html&lt;/code&gt;, you could add an alias like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;nvim-ts-autotag&#39;).setup({&#xA;  aliases = {&#xA;    [&#34;your language here&#34;] = &#34;html&#34;,&#xA;  }&#xA;})&#xA;&#xA;-- or&#xA;local TagConfigs = require(&#34;nvim-ts-autotag.config.init&#34;)&#xA;TagConfigs:add_alias(&#34;your language here&#34;, &#34;html&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That will make &lt;code&gt;nvim-ts-autotag&lt;/code&gt; close tags according to the rules of the &lt;code&gt;html&lt;/code&gt; config in the given language.&lt;/p&gt; &#xA;&lt;p&gt;But what if a parser breaks for whatever reason, for example the upstream Treesitter tree changes its node names and now the default queries that &lt;code&gt;nvim-ts-autotag&lt;/code&gt; provides no longer work.&lt;/p&gt; &#xA;&lt;p&gt;Fear not! You can directly extend and override the existing configs. For example, let&#39;s say the start and end tag patterns have changed for &lt;code&gt;xml&lt;/code&gt;. We can directly override the &lt;code&gt;xml&lt;/code&gt; config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local TagConfigs = require(&#34;nvim-ts-autotag.config.init&#34;)&#xA;TagConfigs:update(TagConfigs:get(&#34;xml&#34;):override(&#34;xml&#34;, {&#xA;    start_tag_pattern = { &#34;STag&#34; },&#xA;    end_tag_pattern = { &#34;ETag&#34; },&#xA;}))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In fact, this very nearly what we do during our own internal initialization phase for &lt;code&gt;nvim-ts-autotag&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Enable update on insert&lt;/h3&gt; &#xA;&lt;p&gt;If you have that issue &lt;a href=&#34;https://github.com/windwp/nvim-ts-autotag/issues/19&#34;&gt;#19&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.lsp.handlers[&#39;textDocument/publishDiagnostics&#39;] = vim.lsp.with(&#xA;    vim.lsp.diagnostic.on_publish_diagnostics,&#xA;    {&#xA;        underline = true,&#xA;        virtual_text = {&#xA;            spacing = 5,&#xA;            severity_limit = &#39;Warning&#39;,&#xA;        },&#xA;        update_in_insert = true,&#xA;    }&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Thank &lt;a href=&#34;https://github.com/PriceHiller&#34;&gt;@PriceHiller&lt;/a&gt; for his work on this plugin.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsor&lt;/h2&gt; &#xA;&lt;p&gt;If you find this plugin useful, please consider sponsoring the project.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://paypal.me/trieule1vn&#34;&gt;Sponsor&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>omerxx/dotfiles</title>
    <updated>2024-06-09T01:42:15Z</updated>
    <id>tag:github.com,2024-06-09:/omerxx/dotfiles</id>
    <link href="https://github.com/omerxx/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My dotfiles synced form localhost and remote machines&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dotfiles symlinked on my machine&lt;/h1&gt; &#xA;&lt;h3&gt;Install with stow:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stow --target .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew installation:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Leaving a machine&#xA;brew leaves &amp;gt; leaves.txt&#xA;&#xA;# Fresh installation&#xA;xargs brew install &amp;lt; leaves.txt&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>