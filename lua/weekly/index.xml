<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-25T01:43:04Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LunarVim/nvim-basic-ide</title>
    <updated>2022-09-25T01:43:04Z</updated>
    <id>tag:github.com,2022-09-25:/LunarVim/nvim-basic-ide</id>
    <link href="https://github.com/LunarVim/nvim-basic-ide" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is my attempt at a basic stable starting point for a Neovim IDE.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A Basic Stable IDE config for Neovim&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Why does this repo exist?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;This config attempts to provide a rock solid fully featured starting point for someone new to Neovim, or just tired of maintaining the basic IDE components of their config.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;What makes it &#34;rock solid&#34;?&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;All of the included plugins are pinned to a version that ensures they are compatible and will not update potentially introducing errors into your config. For every Neovim release I will update this repo along with the community to keep it up to date with the newest versions.&lt;/p&gt; &#xA;&lt;p&gt;As I mentioned, this config is meant as a starting point for people new to Neovim who want a familiar IDE experience. The config has a very simple structure that makes it easy to add new plugins.&lt;/p&gt; &#xA;&lt;h2&gt;Install Neovim 0.7&lt;/h2&gt; &#xA;&lt;p&gt;You can install Neovim with your package manager e.g. brew, apt, pacman etc.. but remember that when you update your packages Neovim may be upgraded to a newer version.&lt;/p&gt; &#xA;&lt;p&gt;If you would like to make sure Neovim only updates when you want it to than I recommend installing from source:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/neovim/neovim.git&#xA;cd neovim&#xA;git checkout release-0.7&#xA;make CMAKE_BUILD_TYPE=Release&#xA;sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Install the config&lt;/h2&gt; &#xA;&lt;p&gt;Make sure to remove or move your current &lt;code&gt;nvim&lt;/code&gt; directory&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/LunarVim/nvim-basic-ide.git ~/.config/nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Run &lt;code&gt;nvim&lt;/code&gt; and wait for the plugins to be installed&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; (You will notice treesitter pulling in a bunch of parsers the next time you open Neovim)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Checkout this file for some predefined keymaps: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/raw/master/lua/user/keymaps.lua&#34;&gt;keymaps&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Get healthy&lt;/h2&gt; &#xA;&lt;p&gt;Open &lt;code&gt;nvim&lt;/code&gt; and enter the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:checkhealth&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You&#39;ll probably notice you don&#39;t have support for copy/paste also that python and node haven&#39;t been setup&lt;/p&gt; &#xA;&lt;p&gt;So let&#39;s fix that&lt;/p&gt; &#xA;&lt;p&gt;First we&#39;ll fix copy/paste&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;On mac &lt;code&gt;pbcopy&lt;/code&gt; should be builtin&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;On Ubuntu&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install xsel # for X11&#xA;sudo apt install wl-clipboard # for wayland&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Next we need to install python support (node is optional)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Neovim python support&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pip install pynvim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Neovim node support&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm i -g neovim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;We will also need &lt;code&gt;ripgrep&lt;/code&gt; for Telescope to work:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Ripgrep&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install ripgrep&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; make sure you have &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node&lt;/a&gt; installed, I recommend a node manager like &lt;a href=&#34;https://github.com/Schniz/fnm&#34;&gt;fnm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Fonts&lt;/h2&gt; &#xA;&lt;p&gt;I recommend using the following repo to get a &#34;Nerd Font&#34; (Font that supports icons)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ronniedroid/getnf&#34;&gt;getnf&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;LSP&lt;/h3&gt; &#xA;&lt;p&gt;To add a new LSP&lt;/p&gt; &#xA;&lt;p&gt;First Enter:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:LspInstallInfo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and press &lt;code&gt;i&lt;/code&gt; on the Language Server you wish to install&lt;/p&gt; &#xA;&lt;p&gt;Next you will need to add the server to this list: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/raw/8b9ec3bffe8c8577042baf07c75408532a733fea/lua/user/lsp/lsp-installer.lua#L6&#34;&gt;servers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Formatters and linters&lt;/h3&gt; &#xA;&lt;p&gt;Make sure the formatter or linter is installed and add it to this setup function: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/raw/8b9ec3bffe8c8577042baf07c75408532a733fea/lua/user/lsp/null-ls.lua#L13&#34;&gt;null-ls&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Some are already setup as examples, remove them if you want&lt;/p&gt; &#xA;&lt;h3&gt;Plugins&lt;/h3&gt; &#xA;&lt;p&gt;You can install new plugins here: &lt;a href=&#34;https://github.com/LunarVim/nvim-basic-ide/raw/8b9ec3bffe8c8577042baf07c75408532a733fea/lua/user/plugins.lua#L42&#34;&gt;plugins&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Plugins&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/windwp/nvim-autopairs&#34;&gt;nvim-autopairs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/numToStr/Comment.nvim&#34;&gt;Comment.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JoosepAlviste/nvim-ts-context-commentstring&#34;&gt;nvim-ts-context-commentstring&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-tree.lua&#34;&gt;nvim-tree.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/bufferline.nvim&#34;&gt;bufferline.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/moll/vim-bbye&#34;&gt;vim-bbye&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;lualine.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/akinsho/toggleterm.nvim&#34;&gt;toggleterm.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ahmedkhalf/project.nvim&#34;&gt;project.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/impatient.nvim&#34;&gt;impatient.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lukas-reineke/indent-blankline.nvim&#34;&gt;indent-blankline.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goolord/alpha-nvim&#34;&gt;alpha-nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/tokyonight.nvim&#34;&gt;tokyonight.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LunarVim/darkplus.nvim&#34;&gt;darkplus.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;nvim-cmp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-buffer&#34;&gt;cmp-buffer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-path&#34;&gt;cmp-path&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/saadparwaiz1/cmp_luasnip&#34;&gt;cmp_luasnip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-nvim-lsp&#34;&gt;cmp-nvim-lsp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/cmp-nvim-lua&#34;&gt;cmp-nvim-lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/L3MON4D3/LuaSnip&#34;&gt;LuaSnip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rafamadriz/friendly-snippets&#34;&gt;friendly-snippets&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/williamboman/nvim-lsp-installer&#34;&gt;nvim-lsp-installer&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jose-elias-alvarez/null-ls.nvim&#34;&gt;null-ls.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/RRethy/vim-illuminate&#34;&gt;vim-illuminate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lewis6991/gitsigns.nvim&#34;&gt;gitsigns.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mfussenegger/nvim-dap&#34;&gt;nvim-dap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rcarriga/nvim-dap-ui&#34;&gt;nvim-dap-ui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ravenxrz/DAPInstall.nvim&#34;&gt;DAPInstall.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The computing scientist&#39;s main challenge is not to get confused by the complexities of his own making.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;- Edsger W. Dijkstra&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ThePrimeagen/vim-be-good</title>
    <updated>2022-09-25T01:43:04Z</updated>
    <id>tag:github.com,2022-09-25:/ThePrimeagen/vim-be-good</id>
    <link href="https://github.com/ThePrimeagen/vim-be-good" rel="alternate"></link>
    <summary type="html">&lt;p&gt;vim-be-good is a nvim plugin designed to make you better at Vim Movements.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;vim-be-good&lt;/h1&gt; &#xA;&lt;p&gt;Vim be good is a plugin designed to make you better at vim by creating a game to practice basic movements in.&lt;/p&gt; &#xA;&lt;h2&gt;Programmed with Love and Fury&lt;/h2&gt; &#xA;&lt;p&gt;and tunes &lt;a href=&#34;https://www.youtube.com/watch?v=emOKaGi8u5U&#34;&gt;https://www.youtube.com/watch?v=emOKaGi8u5U&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;WARNING&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The code is a heaping pile of awfulness. It was developed live on Twitch, which means I did not carefully think through anything other than memes.&lt;/li&gt; &#xA; &lt;li&gt;If you wish to create your own game, look at how relative is done. Everything else should be straight forward, except for the parts that are not.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Difficulty&lt;/h2&gt; &#xA;&lt;p&gt;The difficulty only works on a few games for now. Still a work in progress, if you have any ideas, please submit them either as tickets or as a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Ideas?&lt;/h2&gt; &#xA;&lt;p&gt;Please submit a ticket for your idea!!!&lt;/p&gt; &#xA;&lt;h2&gt;Options&lt;/h2&gt; &#xA;&lt;h3&gt;Games - relative&lt;/h3&gt; &#xA;&lt;p&gt;By default vim be good returns random offset for game difficulty above noob, if you wish to set fixed offset set &lt;code&gt;vim_be_good_delete_me_offset&lt;/code&gt; to desired value.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;let g:vim_be_good_delete_me_offset = 35&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Instructions are at the top of games.&lt;/h2&gt; &#xA;&lt;p&gt;here too!&lt;/p&gt; &#xA;&lt;p&gt;To play &lt;code&gt;relative&lt;/code&gt; you need to delete the line that says &lt;code&gt;DELETE ME&lt;/code&gt;. Use relative jumps&lt;/p&gt; &#xA;&lt;p&gt;To play &lt;code&gt;ci{&lt;/code&gt; you need to replace the contents inside the &lt;em&gt;first&lt;/em&gt; { or [ with bar. HINT, use ci[ or ci{ and type bar.&lt;/p&gt; &#xA;&lt;p&gt;To play &lt;code&gt;whackamole&lt;/code&gt; you need to navigate to the character with the caret under it as fast as possible. Once you have reached the character, flip the character&#39;s case to complete the round.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h2&gt;MUST USE NEOVIM 5.x!!!!!!&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Use your favorite plugin manager to install! Only works on Nvim, the one true vim.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;Plug &#39;ThePrimeagen/vim-be-good&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Docker&lt;/h3&gt; &#xA;&lt;p&gt;If you would like, you can use docker to run the game. Doing this will automatically use the correct version of neovim for you, as well as run the game immediately when neovim starts.&lt;/p&gt; &#xA;&lt;h4&gt;Stable image&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/brandoncc/docker-vim-be-good/raw/master/stable/Dockerfile&#34;&gt;This image&lt;/a&gt; always runs the version of the game that was bundled when the image was built. Images are generally built within one day of the main branch receiving new commits, but you won&#39;t get the new images unless you manually run &lt;code&gt;docker pull brandoncc/vim-be-good:stable&lt;/code&gt; periodically.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm brandoncc/vim-be-good:stable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&#34;Latest&#34; image&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/brandoncc/docker-vim-be-good/raw/master/latest/Dockerfile&#34;&gt;This image&lt;/a&gt; runs &lt;code&gt;:PlugUpdate&lt;/code&gt; before running neovim. This adds about one second to the startup time of the game. The trade-off is that you are always playing the latest version of the game, as long as your machine is able to access Github.com to pull it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -it --rm brandoncc/vim-be-good:latest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Playing the games.&lt;/h2&gt; &#xA;&lt;p&gt;Before doing ANYTHING at all, make sure you are in an empty file. If the file you are in is not empty, VimBeGood will throw an error.&lt;/p&gt; &#xA;&lt;p&gt;Ok, you are in an empty file, so first execute the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-viml&#34;&gt;:VimBeGood&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will echo out the available set of games. Each game can take a set of options to change how it is played, the above help menu should include each game.&lt;/p&gt; &#xA;&lt;h2&gt;Future Games&lt;/h2&gt; &#xA;&lt;p&gt;Please make an issue if you have a command you wish to practice and i&#39;ll make it into a game!!&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;Please file an issue. But if you do, please run the logger first and paste in the input.&lt;/p&gt; &#xA;&lt;p&gt;To initialize the logger, add this to your vimrc&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;let g:vim_be_good_log_file = 1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;to get the log file executed &lt;code&gt;:echo stdpath(&#34;data&#34;)&lt;/code&gt; to find the path and then copy paste it into the issues.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fork&lt;/li&gt; &#xA; &lt;li&gt;Create a feature branch&lt;/li&gt; &#xA; &lt;li&gt;Make changes&lt;/li&gt; &#xA; &lt;li&gt;Modify the configuration to use local build: &lt;code&gt;~/.config/nvim/init.vim&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;    call plug#begin(&#39;~/.vim/plugged&#39;)&#xA;    Plug &#39;/tmp/vim-be-good&#39; &#34; path to your vim-be-good fork&#xA;    call plug#end()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;You can also just use nvim --cmd &#34;set rtp+=$(pwd)&#34; . to set your current&#xA;run time path&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make PR&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Live on Stream&lt;/h2&gt; &#xA;&lt;p&gt;Everything you see here has been developed on stream at &lt;a href=&#34;https://twitch.tv/ThePrimeagen&#34;&gt;ThePrimeagen&lt;/a&gt;. Stop by and troll away. Helpful troll hints would be to complement the size of my hands.&lt;/p&gt; &#xA;&lt;p&gt;Big shout outs to PolarMutex, Brandon CC (stands for credit card) and TEEEEEEEEEJ @brandoncc @bryall @tjdevries&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uga-rosa/ccc.nvim</title>
    <updated>2022-09-25T01:43:04Z</updated>
    <id>tag:github.com,2022-09-25:/uga-rosa/ccc.nvim</id>
    <link href="https://github.com/uga-rosa/ccc.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Super powerful color picker / colorizer plugin.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Selectable input/output mode&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/82267684/190847776-81763c84-2662-4693-97df-b15e8d9115ec.gif&#34; alt=&#34;toggle&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Restore previously used colors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/82267684/190847777-e1f434f9-a8f9-4cb9-b496-cbd849e71a9c.gif&#34; alt=&#34;prev&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Highlight colors that can be picked up by ccc.nvim&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/82267684/190941438-9dba6f6a-fc87-4d47-8106-bfc865913b97.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Use multiple color spaces simultaneously&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Advanced settings&lt;/li&gt; &#xA; &lt;li&gt;See wiki&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/82267684/190847778-751e7656-985b-47e7-890f-91339ee354e9.gif&#34; alt=&#34;multi&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ccc.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;reate &lt;strong&gt;C&lt;/strong&gt;olor &lt;strong&gt;C&lt;/strong&gt;ode in neovim.&lt;/p&gt; &#xA;&lt;p&gt;Super powerful color picker plugin.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Features &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;RGB, HSL, CMYK, and other color space sliders for color adjustment.&lt;/li&gt; &#xA;   &lt;li&gt;Dynamic highlighting of sliders.&lt;/li&gt; &#xA;   &lt;li&gt;Restore previously used colors.&lt;/li&gt; &#xA;   &lt;li&gt;Selectable output formats.&lt;/li&gt; &#xA;   &lt;li&gt;Transparent slider (for css &lt;code&gt;rgb()&lt;/code&gt;/&lt;code&gt;hsl()&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Highlight colors that can be picked up for current buffer.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;If you use release version (0.7.2), use branch&lt;/strong&gt; &lt;code&gt;0.7.2&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Setup&lt;/h1&gt; &#xA;&lt;p&gt;If you do not want to change the default setting, there is no need to call setup (Empty setup is done automatically by plugin/ccc.lua). See &lt;code&gt;ccc-option&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/uga-rosa/ccc.nvim/main/doc/ccc.txt&#34;&gt;doc&lt;/a&gt; for the options that can be specified.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local ccc = require(&#34;ccc&#34;)&#xA;local mapping = ccc.mapping&#xA;ccc.setup({&#xA;    -- Your favorite settings&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Interface&lt;/h1&gt; &#xA;&lt;p&gt;This plugin provides four commands and one mapping.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:CccPick&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Detects and replaces the color under the cursor.&lt;/li&gt; &#xA;   &lt;li&gt;Detectable formats are defined in &lt;code&gt;ccc-option-pickers&lt;/code&gt; (See &lt;a href=&#34;https://raw.githubusercontent.com/uga-rosa/ccc.nvim/main/doc/ccc.txt&#34;&gt;doc&lt;/a&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;If nothing is detected, the color is inserted at a cursor position.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;&amp;lt;Plug&amp;gt;(ccc-insert)&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Defined in insert mode.&lt;/li&gt; &#xA;   &lt;li&gt;Insert the color without detection.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:CccHighlighterEnable&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Highlight colors in the current buffer that ccc.nvim can pick up.&lt;/li&gt; &#xA;   &lt;li&gt;The following options are available. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;code&gt;:h ccc-option-highlighter-auto-enable&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;:h ccc-option-highlighter-filetypes&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;:h ccc-option-highlighter-events&lt;/code&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:CccHighlighterDisable&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Disable highlight.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:CccHighlighterToggle&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Toggle highlight.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Action&lt;/h1&gt; &#xA;&lt;p&gt;All functions are implemented as lua functions. To customize, use &lt;code&gt;ccc-option-mappings&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local ccc = require(&#34;ccc&#34;)&#xA;local mapping = ccc.mapping&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;complete&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Close the UI and perform a replace or insert.&lt;/li&gt; &#xA;   &lt;li&gt;If open the previous colors pallet, select the color under the cursor.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.complete()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;quit&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;q&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Alias of &lt;code&gt;:quit&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Cancel and close the UI without replace or insert.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.quit()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;toggle_input_mode&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;i&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle input mode. See &lt;code&gt;ccc-option-inputs&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/uga-rosa/ccc.nvim/main/doc/ccc.txt&#34;&gt;doc&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.toggle_input_mode()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;toggle_output_mode&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;o&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle output mode. See &lt;code&gt;ccc-option-outputs&lt;/code&gt; in &lt;a href=&#34;https://raw.githubusercontent.com/uga-rosa/ccc.nvim/main/doc/ccc.txt&#34;&gt;doc&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.toggle_output_mode()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;toggle_alpha&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;a&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle show/hide alpha (transparency) slider.&lt;/li&gt; &#xA;   &lt;li&gt;Transparency is used only when output mode is &lt;code&gt;css_rgb&lt;/code&gt; or &lt;code&gt;css_hsl&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.toggle_alpha()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;toggle_prev_colors&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;g&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Toggle show and hide the previous colors pallet.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.toggle_prev_colors()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Use the following to move colors.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;goto_next&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;goto_prev&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;goto_tail&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;goto_head&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;goto_next&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;w&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Go to next (right) color.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.goto_next()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;goto_prev&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;b&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Go to previous (left) color.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.goto_next()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;goto_tail&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;W&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Go to the last color.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.goto_next()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;goto_head&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;B&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Go to the first color.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.goto_next()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;increase&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;l&lt;/code&gt; / &lt;code&gt;d&lt;/code&gt; / &lt;code&gt;,&lt;/code&gt; (1 / 5 / 10)&lt;/li&gt; &#xA;   &lt;li&gt;Increase the value times delta of the slider.&lt;/li&gt; &#xA;   &lt;li&gt;The delta is defined each color system, e.g. RGB is 1.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.increase1()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.increase5()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.increase10()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.delta(integer)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;decrease&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;h&lt;/code&gt; / &lt;code&gt;s&lt;/code&gt; / &lt;code&gt;m&lt;/code&gt; (1 / 5 / 10)&lt;/li&gt; &#xA;   &lt;li&gt;Decrease the value times delta of the slider.&lt;/li&gt; &#xA;   &lt;li&gt;The delta is defined each color system, e.g. RGB is 1.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.decrease1()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.decrease5()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.decrease10()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.delta(integer)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;set&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Default mapping: &lt;code&gt;H&lt;/code&gt; / &lt;code&gt;M&lt;/code&gt; / &lt;code&gt;L&lt;/code&gt; (0 / 50 / 100), &lt;code&gt;1&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; (10% - 90%)&lt;/li&gt; &#xA;   &lt;li&gt;Set the value of the slider as a percentage.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.set0()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.set50()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;mapping.set100()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ccc.set_percent(integer)&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>