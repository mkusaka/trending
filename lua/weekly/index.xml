<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-12-15T01:43:05Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kdheepak/lazygit.nvim</title>
    <updated>2024-12-15T01:43:05Z</updated>
    <id>tag:github.com,2024-12-15:/kdheepak/lazygit.nvim</id>
    <link href="https://github.com/kdheepak/lazygit.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Plugin for calling lazygit from within neovim.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lazygit.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Plugin for calling &lt;a href=&#34;https://github.com/jesseduffield/lazygit&#34;&gt;lazygit&lt;/a&gt; from within neovim.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1813121/87866391-79fcfe00-c93e-11ea-94a9-204947de1b39.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/akinsho/nvim-toggleterm.lua#custom-terminals&#34;&gt;akinsho/nvim-toggleterm&lt;/a&gt; or &lt;a href=&#34;https://github.com/voldikss/vim-floaterm&#34;&gt;voldikss/vim-floaterm&lt;/a&gt; as an alternative to this package.&lt;/p&gt; &#xA;&lt;h3&gt;Install&lt;/h3&gt; &#xA;&lt;p&gt;Install using &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;&lt;code&gt;vim-plug&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; nvim v0.7.2&#xA;Plug &#39;kdheepak/lazygit.nvim&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install using &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;&lt;code&gt;packer.nvim&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- nvim v0.7.2&#xA;use({&#xA;    &#34;kdheepak/lazygit.nvim&#34;,&#xA;    -- optional for floating window border decoration&#xA;    requires = {&#xA;        &#34;nvim-lua/plenary.nvim&#34;,&#xA;    },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install using &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;&lt;code&gt;lazy.nvim&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- nvim v0.8.0&#xA;return {&#xA;    &#34;kdheepak/lazygit.nvim&#34;,&#xA;    lazy = true,&#xA;    cmd = {&#xA;        &#34;LazyGit&#34;,&#xA;        &#34;LazyGitConfig&#34;,&#xA;        &#34;LazyGitCurrentFile&#34;,&#xA;        &#34;LazyGitFilter&#34;,&#xA;        &#34;LazyGitFilterCurrentFile&#34;,&#xA;    },&#xA;    -- optional for floating window border decoration&#xA;    dependencies = {&#xA;        &#34;nvim-lua/plenary.nvim&#34;,&#xA;    },&#xA;    -- setting the keybinding for LazyGit with &#39;keys&#39; is recommended in&#xA;    -- order to load the plugin when the command is run for the first time&#xA;    keys = {&#xA;        { &#34;&amp;lt;leader&amp;gt;lg&#34;, &#34;&amp;lt;cmd&amp;gt;LazyGit&amp;lt;cr&amp;gt;&#34;, desc = &#34;LazyGit&#34; }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Feel free to use any plugin manager. Just remember that if you are not using the latest neovim release, you will need to use &lt;a href=&#34;https://github.com/kdheepak/lazygit.vim/tree/nvim-v0.4.3&#34;&gt;the &lt;code&gt;nvim-v0.4.3&lt;/code&gt; branch&lt;/a&gt;. Integration with &lt;code&gt;nvr&lt;/code&gt; works better on the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt; &#xA;&lt;p&gt;You can check what version of &lt;code&gt;neovim&lt;/code&gt; you have:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;nvim --version&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;The following are configuration options and their defaults.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:lazygit_floating_window_winblend = 0 &#34; transparency of floating window&#xA;let g:lazygit_floating_window_scaling_factor = 0.9 &#34; scaling factor for floating window&#xA;let g:lazygit_floating_window_border_chars = [&#39;╭&#39;,&#39;─&#39;, &#39;╮&#39;, &#39;│&#39;, &#39;╯&#39;,&#39;─&#39;, &#39;╰&#39;, &#39;│&#39;] &#34; customize lazygit popup window border characters&#xA;let g:lazygit_floating_window_use_plenary = 0 &#34; use plenary.nvim to manage floating window if available&#xA;let g:lazygit_use_neovim_remote = 1 &#34; fallback to 0 if neovim-remote is not installed&#xA;&#xA;let g:lazygit_use_custom_config_file_path = 0 &#34; config file path is evaluated if this value is 1&#xA;let g:lazygit_config_file_path = &#39;&#39; &#34; custom config file path&#xA;&#34; OR&#xA;let g:lazygit_config_file_path = [] &#34; list of custom config file paths&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.g.lazygit_floating_window_winblend = 0 -- transparency of floating window&#xA;vim.g.lazygit_floating_window_scaling_factor = 0.9 -- scaling factor for floating window&#xA;vim.g.lazygit_floating_window_border_chars = {&#39;╭&#39;,&#39;─&#39;, &#39;╮&#39;, &#39;│&#39;, &#39;╯&#39;,&#39;─&#39;, &#39;╰&#39;, &#39;│&#39;} -- customize lazygit popup window border characters&#xA;vim.g.lazygit_floating_window_use_plenary = 0 -- use plenary.nvim to manage floating window if available&#xA;vim.g.lazygit_use_neovim_remote = 1 -- fallback to 0 if neovim-remote is not installed&#xA;&#xA;vim.g.lazygit_use_custom_config_file_path = 0 -- config file path is evaluated if this value is 1&#xA;vim.g.lazygit_config_file_path = &#39;&#39; -- custom config file path&#xA;-- OR&#xA;vim.g.lazygit_config_file_path = {} -- table of custom config file paths&#xA;&#xA;vim.g.lazygit_on_exit_callback = nil -- optional function callback when exiting lazygit (useful for example to refresh some UI elements after lazy git has made some changes)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Call &lt;code&gt;:LazyGit&lt;/code&gt; to start a floating window with &lt;code&gt;lazygit&lt;/code&gt; in the current working directory. And set up a mapping to call &lt;code&gt;:LazyGit&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; setup mapping to call :LazyGit&#xA;nnoremap &amp;lt;silent&amp;gt; &amp;lt;leader&amp;gt;gg :LazyGit&amp;lt;CR&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Call &lt;code&gt;:LazyGitCurrentFile&lt;/code&gt; to start a floating window with &lt;code&gt;lazygit&lt;/code&gt; in the project root of the current file.&lt;/p&gt; &#xA;&lt;p&gt;Open the configuration file for &lt;code&gt;lazygit&lt;/code&gt; directly from vim.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;:LazyGitConfig&amp;lt;CR&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If the file does not exist it&#39;ll load the defaults for you.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/1813121/78830902-46721580-79d8-11ea-8809-291b346b6c42.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Open project commits with &lt;code&gt;lazygit&lt;/code&gt; directly from vim in floating window.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;:LazyGitFilter&amp;lt;CR&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open buffer commits with &lt;code&gt;lazygit&lt;/code&gt; directly from vim in floating window.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;:LazyGitFilterCurrentFile&amp;lt;CR&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using neovim-remote&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you have &lt;a href=&#34;https://github.com/mhinz/neovim-remote&#34;&gt;neovim-remote&lt;/a&gt; and have configured to use it in neovim, it&#39;ll launch the commit editor inside your neovim instance when you use &lt;code&gt;C&lt;/code&gt; inside &lt;code&gt;lazygit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;pip install neovim-remote&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add the following to your &lt;code&gt;~/.bashrc&lt;/code&gt;:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [ -n &#34;$NVIM_LISTEN_ADDRESS&#34; ]; then&#xA;    alias nvim=nvr -cc split --remote-wait +&#39;set bufhidden=wipe&#39;&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Set &lt;code&gt;EDITOR&lt;/code&gt; environment variable in &lt;code&gt;~/.bashrc&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;if [ -n &#34;$NVIM_LISTEN_ADDRESS&#34; ]; then&#xA;    export VISUAL=&#34;nvr -cc split --remote-wait +&#39;set bufhidden=wipe&#39;&#34;&#xA;    export EDITOR=&#34;nvr -cc split --remote-wait +&#39;set bufhidden=wipe&#39;&#34;&#xA;else&#xA;    export VISUAL=&#34;nvim&#34;&#xA;    export EDITOR=&#34;nvim&#34;&#xA;fi&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Add the following to &lt;code&gt;~/.vimrc&lt;/code&gt;:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;if has(&#39;nvim&#39;) &amp;amp;&amp;amp; executable(&#39;nvr&#39;)&#xA;  let $GIT_EDITOR = &#34;nvr -cc split --remote-wait +&#39;set bufhidden=wipe&#39;&#34;&#xA;endif&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you have &lt;code&gt;neovim-remote&lt;/code&gt; and don&#39;t want &lt;code&gt;lazygit.nvim&lt;/code&gt; to use it, you can disable it using the following configuration option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;let g:lazygit_use_neovim_remote = 0&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Using nvim --listen and nvim --server to edit files in same process&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use vanilla nvim server to edit files in the same nvim instance when you use &lt;code&gt;e&lt;/code&gt; inside &lt;code&gt;lazygit&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;You have to start nvim with the &lt;code&gt;--listen&lt;/code&gt; parameter. An easy way to ensure this is to use an alias:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# ~/.bashrc&#xA;alias vim=&#39;nvim --listen /tmp/nvim-server.pipe&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;You have to modify lazygit to attempt connecting to existing nvim instance on edit:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-yml&#34;&gt;# ~/.config/jesseduffield/lazygit/config.yml&#xA;os:&#xA;  editCommand: &#39;nvim&#39;&#xA;  editCommandTemplate: &#39;{{editor}} --server /tmp/nvim-server.pipe --remote-tab &#34;$(pwd)/{{filename}}&#34;&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Telescope Plugin&lt;/h3&gt; &#xA;&lt;p&gt;The Telescope plugin is used to track all git repository visited in one nvim session.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why a telescope Plugin&lt;/strong&gt; ?&lt;/p&gt; &#xA;&lt;p&gt;Assuming you have one or more submodule(s) in your project and you want to commit changes in both the submodule(s) and the main repo. Though switching between submodules and main repo is not straight forward. A solution at first could be:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;open a file inside the submodule&lt;/li&gt; &#xA; &lt;li&gt;open lazygit&lt;/li&gt; &#xA; &lt;li&gt;do commit&lt;/li&gt; &#xA; &lt;li&gt;then open a file in the main repo&lt;/li&gt; &#xA; &lt;li&gt;open lazygit&lt;/li&gt; &#xA; &lt;li&gt;do commit&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;That is really annoying. Instead, you can open it with telescope.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to use&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Install using &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;&lt;code&gt;packer.nvim&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- nvim v0.7.2&#xA;use({&#xA;    &#34;kdheepak/lazygit.nvim&#34;,&#xA;    requires = {&#xA;        &#34;nvim-telescope/telescope.nvim&#34;,&#xA;        &#34;nvim-lua/plenary.nvim&#34;,&#xA;    },&#xA;    config = function()&#xA;        require(&#34;telescope&#34;).load_extension(&#34;lazygit&#34;)&#xA;    end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install using &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;&lt;code&gt;lazy.nvim&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- nvim v0.8.0&#xA;{&#xA;    &#34;kdheepak/lazygit.nvim&#34;,&#xA;    lazy = false,&#xA;    cmd = {&#xA;        &#34;LazyGit&#34;,&#xA;        &#34;LazyGitConfig&#34;,&#xA;        &#34;LazyGitCurrentFile&#34;,&#xA;        &#34;LazyGitFilter&#34;,&#xA;        &#34;LazyGitFilterCurrentFile&#34;,&#xA;    },&#xA;    -- optional for floating window border decoration&#xA;    dependencies = {&#xA;        &#34;nvim-telescope/telescope.nvim&#34;,&#xA;        &#34;nvim-lua/plenary.nvim&#34;,&#xA;    },&#xA;    config = function()&#xA;        require(&#34;telescope&#34;).load_extension(&#34;lazygit&#34;)&#xA;    end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Lazy loading &lt;code&gt;lazygit.nvim&lt;/code&gt; for telescope functionality is not supported. Open an issue if you wish to have this feature.&lt;/p&gt; &#xA;&lt;p&gt;If you are not using Packer, to load the telescope extension, you have to add this line to your configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;telescope&#39;).load_extension(&#39;lazygit&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default the paths of each repo is stored only when lazygit is triggered. Though, this may not be convenient, so it possible to do something like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;autocmd BufEnter * :lua require(&#39;lazygit.utils&#39;).project_root_dir()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That makes sure that any opened buffer which is contained in a git repo will be tracked.&lt;/p&gt; &#xA;&lt;p&gt;Once you have loaded the extension, you can invoke the plugin using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;lua require(&#34;telescope&#34;).extensions.lazygit.lazygit()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Highlighting groups&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Highlight Group&lt;/th&gt; &#xA;   &lt;th&gt;Default Group&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LazyGitFloat&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;em&gt;Normal&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Float terminal foreground and background&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;LazyGitBorder&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;&lt;em&gt;Normal&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Float terminal border&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
</feed>