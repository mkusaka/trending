<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-16T01:44:51Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>folke/trouble.nvim</title>
    <updated>2022-10-16T01:44:51Z</updated>
    <id>tag:github.com,2022-10-16:/folke/trouble.nvim</id>
    <link href="https://github.com/folke/trouble.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üö¶ A pretty diagnostics, references, telescope results, quickfix and location list to help you solve all the trouble your code is causing.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üö¶ Trouble&lt;/h1&gt; &#xA;&lt;p&gt;A pretty list for showing diagnostics, references, telescope results, quickfix and location lists to help you solve all the trouble your code is causing.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/folke/trouble.nvim/main/media/shot.png&#34; alt=&#34;LSP Trouble Screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;pretty list of: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Diagnostics&lt;/li&gt; &#xA;   &lt;li&gt;LSP references&lt;/li&gt; &#xA;   &lt;li&gt;LSP implementations&lt;/li&gt; &#xA;   &lt;li&gt;LSP definitions&lt;/li&gt; &#xA;   &lt;li&gt;LSP type definitions&lt;/li&gt; &#xA;   &lt;li&gt;quickfix list&lt;/li&gt; &#xA;   &lt;li&gt;location list&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;Telescope&lt;/a&gt; search results&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;automatically updates on new diagnostics&lt;/li&gt; &#xA; &lt;li&gt;toggle &lt;strong&gt;diagnostics&lt;/strong&gt; mode between &lt;strong&gt;workspace&lt;/strong&gt; or &lt;strong&gt;document&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;interactive preview&lt;/strong&gt; in your last accessed window&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;cancel&lt;/em&gt; preview or &lt;em&gt;jump&lt;/em&gt; to the location&lt;/li&gt; &#xA; &lt;li&gt;configurable actions, signs, highlights,...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ö°Ô∏è Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= 0.5.0&lt;/li&gt; &#xA; &lt;li&gt;Properly configured Neovim LSP client&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kyazdani42/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt; is optional to enable file icons&lt;/li&gt; &#xA; &lt;li&gt;a theme with properly configured highlight groups for Neovim Diagnostics&lt;/li&gt; &#xA; &lt;li&gt;or install üåà &lt;a href=&#34;https://github.com/folke/lsp-colors.nvim&#34;&gt;lsp-colors&lt;/a&gt; to automatically create the missing highlight groups&lt;/li&gt; &#xA; &lt;li&gt;a &lt;a href=&#34;https://www.nerdfonts.com/&#34;&gt;patched font&lt;/a&gt; for the default severity and fold icons&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred package manager:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Vim Script&#xA;Plug &#39;kyazdani42/nvim-web-devicons&#39;&#xA;Plug &#39;folke/trouble.nvim&#39;&#xA;&#xA;lua &amp;lt;&amp;lt; EOF&#xA;  require(&#34;trouble&#34;).setup {&#xA;    -- your configuration comes here&#xA;    -- or leave it empty to use the default settings&#xA;    -- refer to the configuration section below&#xA;  }&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;use {&#xA;  &#34;folke/trouble.nvim&#34;,&#xA;  requires = &#34;kyazdani42/nvim-web-devicons&#34;,&#xA;  config = function()&#xA;    require(&#34;trouble&#34;).setup {&#xA;      -- your configuration comes here&#xA;      -- or leave it empty to use the default settings&#xA;      -- refer to the configuration section below&#xA;    }&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;‚öôÔ∏è Configuration&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;Trouble comes with the following defaults:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    position = &#34;bottom&#34;, -- position of the list can be: bottom, top, left, right&#xA;    height = 10, -- height of the trouble list when position is top or bottom&#xA;    width = 50, -- width of the list when position is left or right&#xA;    icons = true, -- use devicons for filenames&#xA;    mode = &#34;workspace_diagnostics&#34;, -- &#34;workspace_diagnostics&#34;, &#34;document_diagnostics&#34;, &#34;quickfix&#34;, &#34;lsp_references&#34;, &#34;loclist&#34;&#xA;    fold_open = &#34;Ôëº&#34;, -- icon used for open folds&#xA;    fold_closed = &#34;Ôë†&#34;, -- icon used for closed folds&#xA;    group = true, -- group results by file&#xA;    padding = true, -- add an extra new line on top of the list&#xA;    action_keys = { -- key mappings for actions in the trouble list&#xA;        -- map to {} to remove a mapping, for example:&#xA;        -- close = {},&#xA;        close = &#34;q&#34;, -- close the list&#xA;        cancel = &#34;&amp;lt;esc&amp;gt;&#34;, -- cancel the preview and get back to your last window / buffer / cursor&#xA;        refresh = &#34;r&#34;, -- manually refresh&#xA;        jump = {&#34;&amp;lt;cr&amp;gt;&#34;, &#34;&amp;lt;tab&amp;gt;&#34;}, -- jump to the diagnostic or open / close folds&#xA;        open_split = { &#34;&amp;lt;c-x&amp;gt;&#34; }, -- open buffer in new split&#xA;        open_vsplit = { &#34;&amp;lt;c-v&amp;gt;&#34; }, -- open buffer in new vsplit&#xA;        open_tab = { &#34;&amp;lt;c-t&amp;gt;&#34; }, -- open buffer in new tab&#xA;        jump_close = {&#34;o&#34;}, -- jump to the diagnostic and close the list&#xA;        toggle_mode = &#34;m&#34;, -- toggle between &#34;workspace&#34; and &#34;document&#34; diagnostics mode&#xA;        toggle_preview = &#34;P&#34;, -- toggle auto_preview&#xA;        hover = &#34;K&#34;, -- opens a small popup with the full multiline message&#xA;        preview = &#34;p&#34;, -- preview the diagnostic location&#xA;        close_folds = {&#34;zM&#34;, &#34;zm&#34;}, -- close all folds&#xA;        open_folds = {&#34;zR&#34;, &#34;zr&#34;}, -- open all folds&#xA;        toggle_fold = {&#34;zA&#34;, &#34;za&#34;}, -- toggle fold of current file&#xA;        previous = &#34;k&#34;, -- previous item&#xA;        next = &#34;j&#34; -- next item&#xA;    },&#xA;    indent_lines = true, -- add an indent guide below the fold icons&#xA;    auto_open = false, -- automatically open the list when you have diagnostics&#xA;    auto_close = false, -- automatically close the list when you have no diagnostics&#xA;    auto_preview = true, -- automatically preview the location of the diagnostic. &amp;lt;esc&amp;gt; to close preview and go back to last window&#xA;    auto_fold = false, -- automatically fold a file trouble list at creation&#xA;    auto_jump = {&#34;lsp_definitions&#34;}, -- for the given modes, automatically jump if there is only a single result&#xA;    signs = {&#xA;        -- icons / text used for a diagnostic&#xA;        error = &#34;Ôôô&#34;,&#xA;        warning = &#34;Ôî©&#34;,&#xA;        hint = &#34;Ô†µ&#34;,&#xA;        information = &#34;Ôëâ&#34;,&#xA;        other = &#34;Ô´†&#34;&#xA;    },&#xA;    use_diagnostic_signs = false -- enabling this will use the signs defined in your lsp client&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;üí° if you don&#39;t want to use icons or a patched font, you can use the settings below&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- settings without a patched font or icons&#xA;{&#xA;    icons = false,&#xA;    fold_open = &#34;v&#34;, -- icon used for open folds&#xA;    fold_closed = &#34;&amp;gt;&#34;, -- icon used for closed folds&#xA;    indent_lines = false, -- add an indent guide below the fold icons&#xA;    signs = {&#xA;        -- icons / text used for a diagnostic&#xA;        error = &#34;error&#34;,&#xA;        warning = &#34;warn&#34;,&#xA;        hint = &#34;hint&#34;,&#xA;        information = &#34;info&#34;&#xA;    },&#xA;    use_diagnostic_signs = false -- enabling this will use the signs defined in your lsp client&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;Trouble comes with the following commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Trouble [mode]&lt;/code&gt;: open the list&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TroubleClose [mode]&lt;/code&gt;: close the list&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TroubleToggle [mode]&lt;/code&gt;: toggle the list&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TroubleRefresh&lt;/code&gt;: manually refresh the active list&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Modes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;document_diagnostics:&lt;/strong&gt; document diagnostics from the builtin LSP client&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;workspace_diagnostics:&lt;/strong&gt; workspace diagnostics from the builtin LSP client&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;lsp_references:&lt;/strong&gt; references of the word under the cursor from the builtin LSP client&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;lsp_definitions:&lt;/strong&gt; definitions of the word under the cursor from the builtin LSP client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;lsp_type_definitions:&lt;/strong&gt; type definitions of the word under the cursor from the builtin LSP client&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;quickfix:&lt;/strong&gt; &lt;a href=&#34;https://neovim.io/doc/user/quickfix.html&#34;&gt;quickfix&lt;/a&gt; items&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;loclist:&lt;/strong&gt; items from the window&#39;s &lt;a href=&#34;https://neovim.io/doc/user/quickfix.html&#34;&gt;location list&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Example keybindings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Vim Script&#xA;nnoremap &amp;lt;leader&amp;gt;xx &amp;lt;cmd&amp;gt;TroubleToggle&amp;lt;cr&amp;gt;&#xA;nnoremap &amp;lt;leader&amp;gt;xw &amp;lt;cmd&amp;gt;TroubleToggle workspace_diagnostics&amp;lt;cr&amp;gt;&#xA;nnoremap &amp;lt;leader&amp;gt;xd &amp;lt;cmd&amp;gt;TroubleToggle document_diagnostics&amp;lt;cr&amp;gt;&#xA;nnoremap &amp;lt;leader&amp;gt;xq &amp;lt;cmd&amp;gt;TroubleToggle quickfix&amp;lt;cr&amp;gt;&#xA;nnoremap &amp;lt;leader&amp;gt;xl &amp;lt;cmd&amp;gt;TroubleToggle loclist&amp;lt;cr&amp;gt;&#xA;nnoremap gR &amp;lt;cmd&amp;gt;TroubleToggle lsp_references&amp;lt;cr&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Lua&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;xx&#34;, &#34;&amp;lt;cmd&amp;gt;TroubleToggle&amp;lt;cr&amp;gt;&#34;,&#xA;  {silent = true, noremap = true}&#xA;)&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;xw&#34;, &#34;&amp;lt;cmd&amp;gt;TroubleToggle workspace_diagnostics&amp;lt;cr&amp;gt;&#34;,&#xA;  {silent = true, noremap = true}&#xA;)&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;xd&#34;, &#34;&amp;lt;cmd&amp;gt;TroubleToggle document_diagnostics&amp;lt;cr&amp;gt;&#34;,&#xA;  {silent = true, noremap = true}&#xA;)&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;xl&#34;, &#34;&amp;lt;cmd&amp;gt;TroubleToggle loclist&amp;lt;cr&amp;gt;&#34;,&#xA;  {silent = true, noremap = true}&#xA;)&#xA;vim.keymap.set(&#34;n&#34;, &#34;&amp;lt;leader&amp;gt;xq&#34;, &#34;&amp;lt;cmd&amp;gt;TroubleToggle quickfix&amp;lt;cr&amp;gt;&#34;,&#xA;  {silent = true, noremap = true}&#xA;)&#xA;vim.keymap.set(&#34;n&#34;, &#34;gR&#34;, &#34;&amp;lt;cmd&amp;gt;TroubleToggle lsp_references&amp;lt;cr&amp;gt;&#34;,&#xA;  {silent = true, noremap = true}&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;p&gt;You can use the following functions in your keybindings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- jump to the next item, skipping the groups&#xA;require(&#34;trouble&#34;).next({skip_groups = true, jump = true});&#xA;&#xA;-- jump to the previous item, skipping the groups&#xA;require(&#34;trouble&#34;).previous({skip_groups = true, jump = true});&#xA;&#xA;-- jump to the first item, skipping the groups&#xA;require(&#34;trouble&#34;).first({skip_groups = true, jump = true});&#xA;&#xA;-- jump to the last item, skipping the groups&#xA;require(&#34;trouble&#34;).last({skip_groups = true, jump = true});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Telescope&lt;/h3&gt; &#xA;&lt;p&gt;You can easily open any search results in &lt;strong&gt;Trouble&lt;/strong&gt;, by defining a custom action:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local actions = require(&#34;telescope.actions&#34;)&#xA;local trouble = require(&#34;trouble.providers.telescope&#34;)&#xA;&#xA;local telescope = require(&#34;telescope&#34;)&#xA;&#xA;telescope.setup {&#xA;  defaults = {&#xA;    mappings = {&#xA;      i = { [&#34;&amp;lt;c-t&amp;gt;&#34;] = trouble.open_with_trouble },&#xA;      n = { [&#34;&amp;lt;c-t&amp;gt;&#34;] = trouble.open_with_trouble },&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;When you open telescope, you can now hit &lt;code&gt;&amp;lt;c-t&amp;gt;&lt;/code&gt; to open the results in &lt;strong&gt;Trouble&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üé® Colors&lt;/h2&gt; &#xA;&lt;p&gt;The table below shows all the highlight groups defined for Trouble.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Highlight Group&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleCount&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleError&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleNormal&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleTextInformation&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleSignWarning&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleLocation&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleWarning&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroublePreview&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleTextError&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleSignInformation&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleIndent&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleSource&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleSignHint&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleSignOther&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleFoldIcon&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleTextWarning&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleCode&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleInformation&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleSignError&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleFile&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleHint&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleTextHint&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;TroubleText&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>echasnovski/mini.nvim</title>
    <updated>2022-10-16T01:44:51Z</updated>
    <id>tag:github.com,2022-10-16:/echasnovski/mini.nvim</id>
    <link href="https://github.com/echasnovski/mini.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Library of 20+ independent Lua modules improving overall Neovim (version 0.6 and higher) experience with minimal effort&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/logo.png&#34; width=&#34;800em&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;!-- badges: start --&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://badgen.net/github/license/echasnovski/mini.nvim&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/tags/&#34;&gt;&lt;img src=&#34;https://badgen.net/github/tag/echasnovski/mini.nvim&#34; alt=&#34;GitHub tag&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/CHANGELOG.md&#34;&gt;&lt;img src=&#34;https://badgen.net/badge/Current%20version/development/cyan&#34; alt=&#34;Current version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;!-- badges: end --&gt; &#xA;&lt;p&gt;Library of 20+ independent Lua modules improving overall &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; (version 0.6 and higher) experience with minimal effort. They all share same configuration approaches and general design principles.&lt;/p&gt; &#xA;&lt;p&gt;Think about this project as &#34;Swiss Army knife&#34; among Neovim plugins: it has many different independent tools (modules) suitable for most common tasks. Each module can be used separately without any startup and usage overhead.&lt;/p&gt; &#xA;&lt;p&gt;If you want to help this project grow but don&#39;t know where to start, check out &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/CONTRIBUTING.md&#34;&gt;contributing guides&lt;/a&gt; or leave a Github star.&lt;/p&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/#modules&#34;&gt;Modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/#general-principles&#34;&gt;General principles&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/#plugin-colorschemes&#34;&gt;Plugin colorschemes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/#planned-modules&#34;&gt;Planned modules&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;There are two branches to install from:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;main&lt;/code&gt; (default, &lt;strong&gt;recommended&lt;/strong&gt;) will have latest development version of plugin. All changes since last stable release should be perceived as being in beta testing phase (meaning they already passed alpha-testing and are moderately settled).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;stable&lt;/code&gt; will be updated only upon releases with code tested during public beta-testing phase in &lt;code&gt;main&lt;/code&gt; branch.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Here are code snippets for some common installation methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;wbthomason/packer.nvim&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Code snippet&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Main&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;use &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;use { &#39;echasnovski/mini.nvim&#39;, branch = &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;junegunn/vim-plug&lt;/a&gt;:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Code snippet&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Main&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Plug &#39;echasnovski/mini.nvim&#39;, { &#39;branch&#39;: &#39;stable&#39; }&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: don&#39;t forget to call module&#39;s &lt;code&gt;setup()&lt;/code&gt; (if required) to enable its functionality.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: if you are on Windows, there might be problems with too long file paths (like &lt;code&gt;error: unable to create file &amp;lt;some file name&amp;gt;: Filename too long&lt;/code&gt;). Try doing one of the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Enable corresponding git global config value: &lt;code&gt;git config --system core.longpaths true&lt;/code&gt;. Then try to reinstall.&lt;/li&gt; &#xA; &lt;li&gt;Install plugin in other place with shorter path.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Module&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Overview&lt;/th&gt; &#xA;   &lt;th&gt;Details&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.ai&lt;/td&gt; &#xA;   &lt;td&gt;Extend and create &lt;code&gt;a&lt;/code&gt;/&lt;code&gt;i&lt;/code&gt; textobjects&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-ai.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-ai.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.align&lt;/td&gt; &#xA;   &lt;td&gt;Align text interactively&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-align.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-align.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.base16&lt;/td&gt; &#xA;   &lt;td&gt;Base16 colorscheme creation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-base16.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-base16.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.bufremove&lt;/td&gt; &#xA;   &lt;td&gt;Remove buffers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-bufremove.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-bufremove.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.comment&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-comment.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-comment.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.completion&lt;/td&gt; &#xA;   &lt;td&gt;Completion and signature help&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-completion.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-completion.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.cursorword&lt;/td&gt; &#xA;   &lt;td&gt;Autohighlight word under cursor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-cursorword.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-cursorword.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.doc&lt;/td&gt; &#xA;   &lt;td&gt;Generate Neovim help files&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-doc.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-doc.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.fuzzy&lt;/td&gt; &#xA;   &lt;td&gt;Fuzzy matching&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-fuzzy.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-fuzzy.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.indentscope&lt;/td&gt; &#xA;   &lt;td&gt;Visualize and operate on indent scope&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-indentscope.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-indentscope.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.jump&lt;/td&gt; &#xA;   &lt;td&gt;Jump forward/backward to a single character&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-jump.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-jump.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.jump2d&lt;/td&gt; &#xA;   &lt;td&gt;Jump within visible lines&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-jump2d.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-jump2d.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.map&lt;/td&gt; &#xA;   &lt;td&gt;Window with buffer text overview&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-map.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-map.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.misc&lt;/td&gt; &#xA;   &lt;td&gt;Miscellaneous functions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-misc.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-misc.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.pairs&lt;/td&gt; &#xA;   &lt;td&gt;Autopairs&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-pairs.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-pairs.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.sessions&lt;/td&gt; &#xA;   &lt;td&gt;Session management&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-sessions.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-sessions.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.starter&lt;/td&gt; &#xA;   &lt;td&gt;Start screen&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-starter.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-starter.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.statusline&lt;/td&gt; &#xA;   &lt;td&gt;Statusline&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-statusline.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-statusline.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.surround&lt;/td&gt; &#xA;   &lt;td&gt;Surround actions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-surround.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-surround.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.tabline&lt;/td&gt; &#xA;   &lt;td&gt;Tabline&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-tabline.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-tabline.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.test&lt;/td&gt; &#xA;   &lt;td&gt;Test Neovim plugins&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-test.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-test.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mini.trailspace&lt;/td&gt; &#xA;   &lt;td&gt;Trailspace (highlight and remove)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-trailspace.md&#34;&gt;README&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-trailspace.txt&#34;&gt;Help file&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.ai&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.ai&lt;/h3&gt; &#xA;&lt;p&gt;Extend and create &lt;code&gt;a&lt;/code&gt;/&lt;code&gt;i&lt;/code&gt; textobjects (like in &lt;code&gt;di(&lt;/code&gt; or &lt;code&gt;va&#34;&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;It enhances some builtin textobjects (like &lt;code&gt;a(&lt;/code&gt;, &lt;code&gt;a)&lt;/code&gt;, &lt;code&gt;a&#39;&lt;/code&gt;, and more), creates new ones (like &lt;code&gt;a*&lt;/code&gt;, &lt;code&gt;a&amp;lt;Space&amp;gt;&lt;/code&gt;, &lt;code&gt;af&lt;/code&gt;, &lt;code&gt;a?&lt;/code&gt;, and more), and allows user to create their own (like based on treesitter, and more).&lt;/li&gt; &#xA; &lt;li&gt;Supports dot-repeat, &lt;code&gt;v:count&lt;/code&gt;, different search methods, consecutive application, and customization via Lua patterns or functions.&lt;/li&gt; &#xA; &lt;li&gt;Has builtins for brackets, quotes, function call, argument, tag, user prompt, and any punctuation/digit/whitespace character.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-ai.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-ai.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.align&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.align&lt;/h3&gt; &#xA;&lt;p&gt;Align text interactively (with or without instant preview).&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-align.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-align.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.base16&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.base16&lt;/h3&gt; &#xA;&lt;p&gt;Fast implementation of &lt;a href=&#34;https://github.com/chriskempson/base16&#34;&gt;chriskempson/base16&lt;/a&gt; theme for manually supplied palette.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports 30+ plugin integrations.&lt;/li&gt; &#xA; &lt;li&gt;Has unique palette generator which needs only background and foreground colors.&lt;/li&gt; &#xA; &lt;li&gt;Comes with several hand-picked color schemes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-base16.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-base16.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.bufremove&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.bufremove&lt;/h3&gt; &#xA;&lt;p&gt;Buffer removing (unshow, delete, wipeout), which saves window layout.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-bufremove.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-bufremove.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.comment&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.comment&lt;/h3&gt; &#xA;&lt;p&gt;Fast and familiar per-line commenting.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-comment.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-comment.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.completion&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.completion&lt;/h3&gt; &#xA;&lt;p&gt;Autocompletion and signature help plugin.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Async (with customizable &#39;debounce&#39; delay) &#39;two-stage chain completion&#39;: first builtin LSP, then configurable fallback.&lt;/li&gt; &#xA; &lt;li&gt;Has functionality for completion item info and function signature (both in floating window appearing after customizable delay).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-completion.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-completion.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.cursorword&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.cursorword&lt;/h3&gt; &#xA;&lt;p&gt;Automatic highlighting of word under cursor (displayed after customizable delay).&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-cursorword.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-cursorword.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.doc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.doc&lt;/h3&gt; &#xA;&lt;p&gt;Generation of help files from EmmyLua-like annotations. Allows flexible customization of output via hook functions. Used for documenting this plugin.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-doc.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-doc.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.fuzzy&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.fuzzy&lt;/h3&gt; &#xA;&lt;p&gt;Minimal and fast fuzzy matching.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-fuzzy.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-fuzzy.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.indentscope&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.indentscope&lt;/h3&gt; &#xA;&lt;p&gt;Visualize and operate on indent scope. Supports customization of debounce delay, animation style, and different granularity of options for scope computing algorithm.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizable debounce delay, animation style, and scope computation options.&lt;/li&gt; &#xA; &lt;li&gt;Implements scope-related motions and textobjects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-indentscope.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-indentscope.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.jump&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.jump&lt;/h3&gt; &#xA;&lt;p&gt;Smarter forward/backward jumping to a single character.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-jump.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-jump.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.jump2d&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.jump2d&lt;/h3&gt; &#xA;&lt;p&gt;Jump within visible lines via iterative label filtering.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-jump2d.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-jump2d.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.map&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.map&lt;/h3&gt; &#xA;&lt;p&gt;Window with buffer text overview, scrollbar, and highlights.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-map.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-map.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.misc&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.misc&lt;/h3&gt; &#xA;&lt;p&gt;Miscellaneous useful functions.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-misc.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-misc.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.pairs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.pairs&lt;/h3&gt; &#xA;&lt;p&gt;Minimal and fast autopairs.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-pairs.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-pairs.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.sessions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.sessions&lt;/h3&gt; &#xA;&lt;p&gt;Session management (read, write, delete).&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-sessions.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-sessions.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.starter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.starter&lt;/h3&gt; &#xA;&lt;p&gt;Fast and flexible start screen&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-starter.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-starter.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.statusline&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.statusline&lt;/h3&gt; &#xA;&lt;p&gt;Minimal and fast statusline module with opinionated default look.&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-statusline.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-statusline.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.surround&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.surround&lt;/h3&gt; &#xA;&lt;p&gt;Fast and feature-rich surround plugin&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add, delete, replace, find, highlight surrounding (like pair of parenthesis, quotes, etc.).&lt;/li&gt; &#xA; &lt;li&gt;Supports dot-repeat, &lt;code&gt;v:count&lt;/code&gt;, different search methods, &#34;last&#34;/&#34;next&#34; extended mappings, customization via Lua patterns or functions, and more.&lt;/li&gt; &#xA; &lt;li&gt;Has builtins for brackets, function call, tag, user prompt, and any alphanumeric/punctuation/whitespace character.&lt;/li&gt; &#xA; &lt;li&gt;Has maintained configuration of setup similar to &#39;tpope/vim-surround&#39;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-surround.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-surround.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.tabline&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.tabline&lt;/h3&gt; &#xA;&lt;p&gt;Minimal and fast tabline showing listed buffers&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-tabline.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-tabline.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.test&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.test&lt;/h3&gt; &#xA;&lt;p&gt;Write and use extensive Neovim plugin tests&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports hierarchical tests, hooks, parametrization, filtering (like from current file or cursor position), screen tests, &#34;busted-style&#34; emulation, customizable reporters, and more.&lt;/li&gt; &#xA; &lt;li&gt;Designed to be used with provided wrapper for managing child Neovim processes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-test.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-test.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a name=&#34;mini.trailspace&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;mini.trailspace&lt;/h3&gt; &#xA;&lt;p&gt;Work with trailing whitespace&lt;/p&gt; &#xA;&lt;p&gt;For video demo and quick overview see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-trailspace.md&#34;&gt;README&lt;/a&gt;. For more details see its &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/doc/mini-trailspace.txt&#34;&gt;help file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;General principles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Design&lt;/strong&gt;. Each module is designed to solve a particular problem targeting balance between feature-richness (handling as many edge-cases as possible) and simplicity of implementation/support. Granted, not all of them ended up with the same balance, but it is the goal nevertheless.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Independence&lt;/strong&gt;. Modules are independent of each other and can be run without external dependencies. Although some of them may need dependencies for full experience.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Structure&lt;/strong&gt;. Each module is a submodule for a placeholder &#34;mini&#34; module. So, for example, &#34;surround&#34; module should be referred to as &#34;mini.surround&#34;. As later will be explained, this plugin can also be referred to as &#34;MiniSurround&#34;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Setup&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Each module (if needed) should be setup separately with &lt;code&gt;require(&amp;lt;name of module&amp;gt;).setup({})&lt;/code&gt; (possibly replace {} with your config table or omit to use defaults). You can supply only values which differ from defaults, which will be used for the rest ones.&lt;/li&gt; &#xA;   &lt;li&gt;Call to module&#39;s &lt;code&gt;setup()&lt;/code&gt; always creates a global Lua object with coherent camel-case name: &lt;code&gt;require(&#39;mini.surround&#39;).setup()&lt;/code&gt; creates &lt;code&gt;_G.MiniSurround&lt;/code&gt;. This allows for a simpler usage of plugin functionality: instead of &lt;code&gt;require(&#39;mini.surround&#39;)&lt;/code&gt; use &lt;code&gt;MiniSurround&lt;/code&gt; (or manually &lt;code&gt;:lua MiniSurround.*&lt;/code&gt; in command line); available from &lt;code&gt;v:lua&lt;/code&gt; like &lt;code&gt;v:lua.MiniSurround&lt;/code&gt;. Considering this, &#34;module&#34; and &#34;Lua object&#34; names can be used interchangeably: &#39;mini.surround&#39; and &#39;MiniSurround&#39; will mean the same thing.&lt;/li&gt; &#xA;   &lt;li&gt;Each supplied &lt;code&gt;config&lt;/code&gt; table is stored in &lt;code&gt;config&lt;/code&gt; field of global object. Like &lt;code&gt;MiniSurround.config&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Values of &lt;code&gt;config&lt;/code&gt;, which affect runtime activity, can be changed on the fly to have effect. For example, &lt;code&gt;MiniSurround.config.n_lines&lt;/code&gt; can be changed during runtime; but changing &lt;code&gt;MiniSurround.config.mappings&lt;/code&gt; won&#39;t have any effect (as mappings are created once during &lt;code&gt;setup()&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Buffer local configuration&lt;/strong&gt;. Each module can be additionally configured to use certain runtime config settings locally to buffer. See &lt;code&gt;mini.nvim-buffer-local-config&lt;/code&gt; section in help file for more information.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Disabling&lt;/strong&gt;. Each module&#39;s core functionality can be disabled globally or locally to buffer by creating appropriate global or buffer-scoped variables equal to &lt;code&gt;v:true&lt;/code&gt;. See &lt;code&gt;mini.nvim-disabling-recipes&lt;/code&gt; section in help file for common recipes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Highlight groups&lt;/strong&gt;. Appearance of module&#39;s output is controlled by certain highlight group (see &lt;code&gt;:h highlight-groups&lt;/code&gt;). To customize them, use &lt;code&gt;highlight&lt;/code&gt; command. &lt;strong&gt;Note&lt;/strong&gt;: currently not many Neovim themes support this plugin&#39;s highlight groups; fixing this situation is highly appreciated. To see a more calibrated look, use MiniBase16 or plugin&#39;s colorscheme &lt;code&gt;minischeme&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Stability&lt;/strong&gt;. Each module upon release is considered to be relatively stable: both in terms of setup and functionality. Any non-bugfix backward-incompatible change will be released gradually as much as possible.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Plugin colorschemes&lt;/h2&gt; &#xA;&lt;p&gt;This plugin comes with several color schemes (all of them are made with &#39;mini.base16&#39; and have both dark and light variants):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;minischeme&lt;/code&gt; - blue and yellow main colors with high contrast and saturation palette. All examples use this colorscheme.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;minicyan&lt;/code&gt; - cyan and grey main colors with moderate contrast and saturation palette.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Activate them as regular &lt;code&gt;colorscheme&lt;/code&gt; (for example, &lt;code&gt;:colorscheme minicyan&lt;/code&gt;). You can see how they look in &lt;a href=&#34;https://raw.githubusercontent.com/echasnovski/mini.nvim/main/readmes/mini-base16.md#demo&#34;&gt;demo of &#39;mini.base16&#39;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Planned modules&lt;/h2&gt; &#xA;&lt;p&gt;This is the list of modules I currently intend to implement eventually (as my free time and dedication will allow), in alphabetical order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#39;mini.align&#39; - align text with respect to some separators. Something like &lt;a href=&#34;https://github.com/junegunn/vim-easy-align&#34;&gt;junegunn/vim-easy-align&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&#39;mini.basics&#39; - configurable collection of options and mappings sets intended mostly for quick &#34;up and running&#34; Neovim config. Something like a combination of &lt;a href=&#34;https://github.com/tpope/vim-sensible&#34;&gt;tpope/vim-sensible&lt;/a&gt; and &lt;a href=&#34;https://github.com/tpope/vim-unimpaired&#34;&gt;tpope/vim-unimpaired&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&#39;mini.clue&#39; - &#34;show as you type&#34; floating window with customizable information. Something like &lt;a href=&#34;https://github.com/folke/which-key.nvim&#34;&gt;folke/which-key.nvim&lt;/a&gt; and &lt;a href=&#34;https://github.com/anuvyklack/hydra.nvim&#34;&gt;anuvyklack/hydra.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&#39;mini.filetree&#39; - file tree viewer. Simplified version of &lt;a href=&#34;https://github.com/kyazdani42/nvim-tree.lua&#34;&gt;kyazdani42/nvim-tree&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&#39;mini.root&#39; - automatically change current working directory. Something like &lt;a href=&#34;https://github.com/airblade/vim-rooter&#34;&gt;airblade/vim-rooter&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&#39;mini.snippets&#39; - work with snippets. Something like &lt;a href=&#34;https://github.com/L3MON4D3/LuaSnip&#34;&gt;L3MON4D3/LuaSnip&lt;/a&gt; but only with more straightforward functionality.&lt;/li&gt; &#xA; &lt;li&gt;&#39;mini.swap&#39; - exchange two regions of text. Something like &lt;a href=&#34;https://github.com/tommcdo/vim-exchange&#34;&gt;tommcdo/vim-exchange&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&#39;mini.terminals&#39; - coherently manage terminal windows and send text from buffers to terminal windows. Something like &lt;a href=&#34;https://github.com/kassio/neoterm&#34;&gt;kassio/neoterm&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Kong/kong</title>
    <updated>2022-10-16T01:44:51Z</updated>
    <id>tag:github.com,2022-10-16:/Kong/kong</id>
    <link href="https://github.com/Kong/kong" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü¶ç The Cloud-Native API Gateway&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://konghq.com/&#34;&gt;&lt;img src=&#34;https://konghq.com/wp-content/uploads/2018/05/kong-logo-github-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Kong/kong?style=flat-square&#34; alt=&#34;Stars&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/commit-activity/m/Kong/kong?style=flat-square&#34; alt=&#34;GitHub commit activity&#34;&gt; &lt;img src=&#34;https://img.shields.io/docker/pulls/_/kong?style=flat-square&#34; alt=&#34;Docker Pulls&#34;&gt; &lt;a href=&#34;https://github.com/Kong/kong/actions&#34;&gt;&lt;img src=&#34;https://github.com/Kong/kong/workflows/Build%20&amp;amp;%20Test/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/Kong/kong?color=green&amp;amp;label=Version&amp;amp;style=flat-square&#34; alt=&#34;Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue?style=flat-square&#34; alt=&#34;License&#34;&gt; &lt;img src=&#34;https://img.shields.io/twitter/follow/thekonginc?style=social&#34; alt=&#34;Twitter Follow&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Kong&lt;/strong&gt; or &lt;strong&gt;Kong API Gateway&lt;/strong&gt; is a cloud-native, platform-agnostic, scalable API Gateway distinguished for its high performance and extensibility via plugins.&lt;/p&gt; &#xA;&lt;p&gt;By providing functionality for proxying, routing, load balancing, health checking, authentication (and &lt;a href=&#34;https://raw.githubusercontent.com/Kong/kong/master/#features&#34;&gt;more&lt;/a&gt;), Kong serves as the central layer for orchestrating microservices or conventional API traffic with ease.&lt;/p&gt; &#xA;&lt;p&gt;Kong runs natively on Kubernetes thanks to its official &lt;a href=&#34;https://github.com/Kong/kubernetes-ingress-controller&#34;&gt;Kubernetes Ingress Controller&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://konghq.com/install/#kong-community&#34;&gt;Installation&lt;/a&gt; | &lt;a href=&#34;https://docs.konghq.com&#34;&gt;Documentation&lt;/a&gt; | &lt;a href=&#34;https://github.com/Kong/kong/discussions&#34;&gt;Discussions&lt;/a&gt; | &lt;a href=&#34;https://discuss.konghq.com&#34;&gt;Forum&lt;/a&gt; | &lt;a href=&#34;https://konghq.com/blog&#34;&gt;Blog&lt;/a&gt; | &lt;a href=&#34;https://hub.docker.com/r/kong/kong/tags&#34;&gt;Builds&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Let‚Äôs test drive Kong by adding authentication to an API in under 5 minutes.&lt;/p&gt; &#xA;&lt;p&gt;We suggest using the docker-compose distribution via the instructions below, but there is also a &lt;a href=&#34;https://docs.konghq.com/install/docker/&#34;&gt;docker installation&lt;/a&gt; procedure if you‚Äôd prefer to run the Kong API Gateway in DB-less mode.&lt;/p&gt; &#xA;&lt;p&gt;Whether you‚Äôre running in the cloud, on bare metal, or using containers, you can find every supported distribution on our &lt;a href=&#34;https://konghq.com/install/#kong-community&#34;&gt;official installation&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;To start, clone the Docker repository and navigate to the compose folder.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;  $ git clone https://github.com/Kong/docker-kong&#xA;  $ cd compose/&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Start the Gateway stack using:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;  $ KONG_DATABASE=postgres docker-compose --profile database up&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Gateway will be available on the following ports on localhost:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;:8000&lt;/code&gt; on which Kong listens for incoming HTTP traffic from your clients, and forwards it to your upstream services. &lt;code&gt;:8001&lt;/code&gt; on which the Admin API used to configure Kong listens.&lt;/p&gt; &#xA;&lt;p&gt;Next, follow the &lt;a href=&#34;https://docs.konghq.com/gateway-oss/latest/getting-started/configuring-a-service/&#34;&gt;quick start guide&lt;/a&gt; to tour the Gateway features.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;By centralizing common API functionality across all your organization&#39;s services, the Kong API Gateway creates more freedom for engineering teams to focus on the challenges that matter most.&lt;/p&gt; &#xA;&lt;p&gt;The top Kong features include:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Advanced routing, load balancing, health checking - all configurable via a RESTful admin API or declarative configuration.&lt;/li&gt; &#xA; &lt;li&gt;Authentication and authorization for APIs using methods like JWT, basic auth, OAuth, ACLs and more.&lt;/li&gt; &#xA; &lt;li&gt;Proxy, SSL/TLS termination, and connectivity support for L4 or L7 traffic.&lt;/li&gt; &#xA; &lt;li&gt;Plugins for enforcing traffic controls, rate limiting, req/res transformations, logging, monitoring and including a plugin developer hub.&lt;/li&gt; &#xA; &lt;li&gt;Sophisticated deployment models like Declarative Databaseless Deployment and Hybrid Deployment (control plane/data plane separation) without any vendor lock-in.&lt;/li&gt; &#xA; &lt;li&gt;Native &lt;a href=&#34;https://github.com/Kong/kubernetes-ingress-controller&#34;&gt;ingress controller&lt;/a&gt; support for serving Kubernetes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://konghq.com/&#34;&gt;&lt;img src=&#34;https://konghq.com/wp-content/uploads/2018/05/kong-benefits-github-readme.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Plugin Hub&lt;/h3&gt; &#xA;&lt;p&gt;Plugins provide advanced functionality that extends the use of the Gateway. Many of the Kong Inc. and community-developed plugins like AWS Lambda, Correlation ID, and Response Transformer are showcased at the &lt;a href=&#34;https://docs.konghq.com/hub/&#34;&gt;Plugin Hub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Contribute to the Plugin Hub and ensure your next innovative idea is published and available to the broader community!&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We ‚ù§Ô∏è pull requests, and we‚Äôre continually working hard to make it as easy as possible for developers to contribute. Before beginning development with the Kong API Gateway, please familiarize yourself with the following developer resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Contributor Guide (&lt;a href=&#34;https://raw.githubusercontent.com/Kong/kong/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;) to learn about how to contribute to Kong.&lt;/li&gt; &#xA; &lt;li&gt;Development Guide (&lt;a href=&#34;https://raw.githubusercontent.com/Kong/kong/master/DEVELOPER.md&#34;&gt;DEVELOPER.md&lt;/a&gt;): Setting up your development environment.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kong/kong/master/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/Kong/kong/master/COPYRIGHT&#34;&gt;COPYRIGHT&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Use the &lt;a href=&#34;https://docs.konghq.com/latest/plugin-development/&#34;&gt;Plugin Development Guide&lt;/a&gt; for building new and creative plugins, or browse the online version of Kong&#39;s source code documentation in the &lt;a href=&#34;https://docs.konghq.com/latest/pdk/&#34;&gt;Plugin Development Kit (PDK) Reference&lt;/a&gt;. Developers can build plugins in &lt;a href=&#34;https://docs.konghq.com/gateway-oss/latest/plugin-development/&#34;&gt;Lua&lt;/a&gt;, &lt;a href=&#34;https://docs.konghq.com/gateway-oss/latest/external-plugins/#developing-go-plugins&#34;&gt;Go&lt;/a&gt; or &lt;a href=&#34;https://docs.konghq.com/gateway-oss/latest/external-plugins/#developing-javascript-plugins&#34;&gt;JavaScript&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://raw.githubusercontent.com/Kong/kong/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt; for more details about a given release. The &lt;a href=&#34;https://semver.org&#34;&gt;SemVer Specification&lt;/a&gt; is followed when versioning Gateway releases.&lt;/p&gt; &#xA;&lt;h2&gt;Join the Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Join the Kong discussions at the Kong Nation forum: &lt;a href=&#34;https://discuss.konghq.com/&#34;&gt;https://discuss.konghq.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Follow us on Twitter: &lt;a href=&#34;https://twitter.com/thekonginc&#34;&gt;https://twitter.com/thekonginc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Check out the docs: &lt;a href=&#34;https://docs.konghq.com/&#34;&gt;https://docs.konghq.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Keep updated on YouTube by subscribing: &lt;a href=&#34;https://www.youtube.com/c/KongInc/videos&#34;&gt;https://www.youtube.com/c/KongInc/videos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Read up on the latest happenings at our blog: &lt;a href=&#34;https://konghq.com/blog/&#34;&gt;https://konghq.com/blog/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Visit our homepage to learn more: &lt;a href=&#34;https://konghq.com/&#34;&gt;https://konghq.com/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Konnect Cloud&lt;/h2&gt; &#xA;&lt;p&gt;Kong Inc. offers commercial subscriptions that enhance the Kong API Gateway in a variety of ways. Customers of Kong&#39;s &lt;a href=&#34;https://konghq.com/kong-konnect/&#34;&gt;Konnect Cloud&lt;/a&gt; subscription take advantage of additional gateway functionality, commercial support, and access to Kong&#39;s managed (SaaS) control plane platform. The Konnect Cloud platform features include real-time analytics, a service catalog, developer portals, and so much more! &lt;a href=&#34;https://konnect.konghq.com/register/?utm_medium=Referral&amp;amp;utm_source=Github&amp;amp;utm_campaign=kong-gateway&amp;amp;utm_content=konnect-promo-in-gateway&amp;amp;utm_term=get-started&#34;&gt;Get started&lt;/a&gt; with Konnect Cloud.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2016-2022 Kong Inc.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>