<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-07-06T01:43:31Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Stephan-S/FS25_AutoDrive</title>
    <updated>2025-07-06T01:43:31Z</updated>
    <id>tag:github.com,2025-07-06:/Stephan-S/FS25_AutoDrive</id>
    <link href="https://github.com/Stephan-S/FS25_AutoDrive" rel="alternate"></link>
    <summary type="html">&lt;p&gt;FS25 version of the AutoDrive mod&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FS25_AutoDrive&lt;/h1&gt; &#xA;&lt;p&gt;FS25 version of the AutoDrive mod&lt;/p&gt; &#xA;&lt;h3&gt;Latest Release: 3.0.0.6&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Stephan-S/FS25_AutoDrive/total?label=Downloads&amp;amp;style=plastic&#34; alt=&#34;GitHub all releases&#34;&gt;&lt;br&gt; Direct Download: &lt;a href=&#34;https://github.com/Stephan-S/FS25_AutoDrive/releases/latest/download/FS25_AutoDrive.zip&#34;&gt;https://github.com/Stephan-S/FS25_AutoDrive/releases/latest/download/FS25_AutoDrive.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Discord Server:&lt;/h2&gt; &#xA;&lt;p&gt;For help &amp;amp; support, feel free to join us on Discord: &lt;a href=&#34;https://discord.gg/2XfnM59DFy&#34;&gt;https://discord.gg/2XfnM59DFy&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;For a little thank you&lt;/h3&gt; &#xA;&lt;p&gt;If you like our work, feel free to buy us a coffee (of which we drink quite a lot :D )&lt;br&gt; For now, there is no general link for the team, so each contributer can post his/her preferred donation link here :-)&lt;br&gt; But remember, this is absolutely not required. We value any issues and feature requests the same!&lt;br&gt; And to all who do donate: Thank you very much :-)&lt;/p&gt; &#xA;&lt;h4&gt;Stephan (Founder):&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.me/StephanSchlosser&#34;&gt;https://www.paypal.me/StephanSchlosser&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Iwan1803 (Community Manager, Supporter &amp;amp; Tester):&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://iwan1803.de/urls/tip&#34;&gt;https://iwan1803.de/urls/tip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Axel &amp;amp; Tommo (Modder)&lt;/h4&gt; &#xA;&lt;h4&gt;Willi (Supporter &amp;amp; Tester)&lt;/h4&gt; &#xA;&lt;h2&gt;Placeable Crossings and Reversing (separate mods)&lt;/h2&gt; &#xA;&lt;p&gt;Direct Download: &lt;a href=&#34;https://github.com/Williwillswisse/AD_xCrossing/releases/latest/download/FS25_AutoDrive_xCrossing.zip&#34;&gt;https://github.com/Williwillswisse/AD_xCrossing/releases/latest/download/FS25_AutoDrive_xCrossing.zip&lt;/a&gt; &lt;br&gt; Direct Download: &lt;a href=&#34;https://github.com/Williwillswisse/AD_T_intersection/releases/latest/download/FS25_AutoDrive_T_intersection.zip&#34;&gt;https://github.com/Williwillswisse/AD_T_intersection/releases/latest/download/FS25_AutoDrive_T_intersection.zip&lt;/a&gt; &lt;br&gt; Direct Download: &lt;a href=&#34;https://github.com/Williwillswisse/AD_reverseToMarker/releases/latest/download/FS25_AutoDrive_reverseToMarker.zip&#34;&gt;https://github.com/Williwillswisse/AD_reverseToMarker/releases/latest/download/FS25_AutoDrive_reverseToMarker.zip&lt;/a&gt; &lt;br&gt; Repository: &lt;a href=&#34;https://github.com/Williwillswisse&#34;&gt;https://github.com/Williwillswisse&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Placeables with already prepared AD routes (separate mods)&lt;/h2&gt; &#xA;&lt;p&gt;A growing number of ingame placeables, e.g. buildings, silos, productions and so on with integrated AD routes. &lt;br&gt; Download: &lt;a href=&#34;https://hof-hirschfeld.de/category/autodrive/&#34;&gt;https://hof-hirschfeld.de/category/autodrive/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Course Editor&lt;/h2&gt; &#xA;&lt;p&gt;The course editor is now maintained by @KillBait and can be found here: &lt;a href=&#34;https://github.com/KillBait/AutoDrive_Course_Editor&#34;&gt;https://github.com/KillBait/AutoDrive_Course_Editor&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kawre/leetcode.nvim</title>
    <updated>2025-07-06T01:43:31Z</updated>
    <id>tag:github.com,2025-07-06:/kawre/leetcode.nvim</id>
    <link href="https://github.com/kawre/leetcode.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Neovim plugin enabling you to solve LeetCode problems.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;leetcode.nvim&lt;/h1&gt; &#xA; &lt;p&gt;üî• Solve &lt;a href=&#34;https://leetcode.com&#34;&gt;LeetCode&lt;/a&gt; problems within &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; üî•&lt;/p&gt; &#xA; &lt;!-- üá∫üá∏ English, üá®üá≥ &lt;a href=&#34;README.zh.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; --&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kawre/leetcode.nvim/assets/69250723/aee6584c-e099-4409-b114-123cb32b7563&#34;&gt;https://github.com/kawre/leetcode.nvim/assets/69250723/aee6584c-e099-4409-b114-123cb32b7563&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ú® Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;üìå an intuitive dashboard for effortless navigation within &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üòç question description formatting for a better readability&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üìà &lt;a href=&#34;https://leetcode.com&#34;&gt;LeetCode&lt;/a&gt; profile statistics within &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üîÄ support for daily and random questions&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;üíæ caching for optimized performance&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¨ Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; &amp;gt;= 0.9.0&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#picker&#34;&gt;Picker&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MunifTanjim/nui.nvim&#34;&gt;nui.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tree-sitter/tree-sitter-html&#34;&gt;tree-sitter-html&lt;/a&gt; &lt;em&gt;&lt;strong&gt;(optional, but highly recommended)&lt;/strong&gt;&lt;/em&gt; used for formatting the question description. Can be installed with &lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.nerdfonts.com&#34;&gt;Nerd Font&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt; &lt;em&gt;&lt;strong&gt;(optional)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì¶ Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;kawre/leetcode.nvim&#34;,&#xA;    build = &#34;:TSUpdate html&#34;, -- if you have `nvim-treesitter` installed&#xA;    dependencies = {&#xA;        -- include a picker of your choice, see picker section for more details&#xA;        &#34;nvim-lua/plenary.nvim&#34;,&#xA;        &#34;MunifTanjim/nui.nvim&#34;,&#xA;    },&#xA;    opts = {&#xA;        -- configuration goes here&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üõ†Ô∏è Configuration&lt;/h2&gt; &#xA;&lt;p&gt;To see full configuration types see &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/lua/leetcode/config/template.lua&#34;&gt;template.lua&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;‚öôÔ∏è default configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    ---@type string&#xA;    arg = &#34;leetcode.nvim&#34;,&#xA;&#xA;    ---@type lc.lang&#xA;    lang = &#34;cpp&#34;,&#xA;&#xA;    cn = { -- leetcode.cn&#xA;        enabled = false, ---@type boolean&#xA;        translator = true, ---@type boolean&#xA;        translate_problems = true, ---@type boolean&#xA;    },&#xA;&#xA;    ---@type lc.storage&#xA;    storage = {&#xA;        home = vim.fn.stdpath(&#34;data&#34;) .. &#34;/leetcode&#34;,&#xA;        cache = vim.fn.stdpath(&#34;cache&#34;) .. &#34;/leetcode&#34;,&#xA;    },&#xA;&#xA;    ---@type table&amp;lt;string, boolean&amp;gt;&#xA;    plugins = {&#xA;        non_standalone = false,&#xA;    },&#xA;&#xA;    ---@type boolean&#xA;    logging = true,&#xA;&#xA;    injector = {}, ---@type table&amp;lt;lc.lang, lc.inject&amp;gt;&#xA;&#xA;    cache = {&#xA;        update_interval = 60 * 60 * 24 * 7, ---@type integer 7 days&#xA;    },&#xA;&#xA;    editor = {&#xA;        reset_previous_code = true, ---@type boolean&#xA;        fold_imports = true, ---@type boolean&#xA;    },&#xA;&#xA;    console = {&#xA;        open_on_runcode = true, ---@type boolean&#xA;&#xA;        dir = &#34;row&#34;, ---@type lc.direction&#xA;&#xA;        size = { ---@type lc.size&#xA;            width = &#34;90%&#34;,&#xA;            height = &#34;75%&#34;,&#xA;        },&#xA;&#xA;        result = {&#xA;            size = &#34;60%&#34;, ---@type lc.size&#xA;        },&#xA;&#xA;        testcase = {&#xA;            virt_text = true, ---@type boolean&#xA;&#xA;            size = &#34;40%&#34;, ---@type lc.size&#xA;        },&#xA;    },&#xA;&#xA;    description = {&#xA;        position = &#34;left&#34;, ---@type lc.position&#xA;&#xA;        width = &#34;40%&#34;, ---@type lc.size&#xA;&#xA;        show_stats = true, ---@type boolean&#xA;    },&#xA;&#xA;    ---@type lc.picker&#xA;    picker = { provider = nil },&#xA;&#xA;    hooks = {&#xA;        ---@type fun()[]&#xA;        [&#34;enter&#34;] = {},&#xA;&#xA;        ---@type fun(question: lc.ui.Question)[]&#xA;        [&#34;question_enter&#34;] = {},&#xA;&#xA;        ---@type fun()[]&#xA;        [&#34;leave&#34;] = {},&#xA;    },&#xA;&#xA;    keys = {&#xA;        toggle = { &#34;q&#34; }, ---@type string|string[]&#xA;        confirm = { &#34;&amp;lt;CR&amp;gt;&#34; }, ---@type string|string[]&#xA;&#xA;        reset_testcases = &#34;r&#34;, ---@type string&#xA;        use_testcase = &#34;U&#34;, ---@type string&#xA;        focus_testcases = &#34;H&#34;, ---@type string&#xA;        focus_result = &#34;L&#34;, ---@type string&#xA;    },&#xA;&#xA;    ---@type lc.highlights&#xA;    theme = {},&#xA;&#xA;    ---@type boolean&#xA;    image_support = false,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;arg&lt;/h3&gt; &#xA;&lt;p&gt;Argument for &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type string&#xA;arg = &#34;leetcode.nvim&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;small&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#-usage&#34;&gt;usage&lt;/a&gt; for more info&lt;/small&gt;&lt;/p&gt; &#xA;&lt;h3&gt;lang&lt;/h3&gt; &#xA;&lt;p&gt;Language to start your session with&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type lc.lang&#xA;lang = &#34;cpp&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;available languages&lt;/summary&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt;Language&lt;/th&gt; &#xA;    &lt;th&gt;lang&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;C++&lt;/td&gt; &#xA;    &lt;td&gt;cpp&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Java&lt;/td&gt; &#xA;    &lt;td&gt;java&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Python&lt;/td&gt; &#xA;    &lt;td&gt;python&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Python3&lt;/td&gt; &#xA;    &lt;td&gt;python3&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;C&lt;/td&gt; &#xA;    &lt;td&gt;c&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;C#&lt;/td&gt; &#xA;    &lt;td&gt;csharp&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;JavaScript&lt;/td&gt; &#xA;    &lt;td&gt;javascript&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;TypeScript&lt;/td&gt; &#xA;    &lt;td&gt;typescript&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;PHP&lt;/td&gt; &#xA;    &lt;td&gt;php&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Swift&lt;/td&gt; &#xA;    &lt;td&gt;swift&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Kotlin&lt;/td&gt; &#xA;    &lt;td&gt;kotlin&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Dart&lt;/td&gt; &#xA;    &lt;td&gt;dart&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Go&lt;/td&gt; &#xA;    &lt;td&gt;golang&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Ruby&lt;/td&gt; &#xA;    &lt;td&gt;ruby&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Scala&lt;/td&gt; &#xA;    &lt;td&gt;scala&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Rust&lt;/td&gt; &#xA;    &lt;td&gt;rust&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Racket&lt;/td&gt; &#xA;    &lt;td&gt;racket&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Erlang&lt;/td&gt; &#xA;    &lt;td&gt;erlang&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Elixir&lt;/td&gt; &#xA;    &lt;td&gt;elixir&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Bash&lt;/td&gt; &#xA;    &lt;td&gt;bash&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;cn&lt;/h3&gt; &#xA;&lt;p&gt;Use &lt;a href=&#34;https://leetcode.cn&#34;&gt;leetcode.cn&lt;/a&gt; instead of &lt;a href=&#34;https://leetcode.com&#34;&gt;leetcode.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;cn = { -- leetcode.cn&#xA;    enabled = false, ---@type boolean&#xA;    translator = true, ---@type boolean&#xA;    translate_problems = true, ---@type boolean&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;storage&lt;/h3&gt; &#xA;&lt;p&gt;storage directories&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type lc.storage&#xA;storage = {&#xA;    home = vim.fn.stdpath(&#34;data&#34;) .. &#34;/leetcode&#34;,&#xA;    cache = vim.fn.stdpath(&#34;cache&#34;) .. &#34;/leetcode&#34;,&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;plugins&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#-plugins&#34;&gt;plugins list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type table&amp;lt;string, boolean&amp;gt;&#xA;plugins = {&#xA;    non_standalone = false,&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;logging&lt;/h3&gt; &#xA;&lt;p&gt;Whether to log &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt; status notifications&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type boolean&#xA;logging = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;injector&lt;/h3&gt; &#xA;&lt;p&gt;Inject code before or after your solution, injected code won&#39;t be submitted or run.&lt;/p&gt; &#xA;&lt;p&gt;Imports will be injected at the top of the buffer, automatically folded by default.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;injector = { ---@type table&amp;lt;lc.lang, lc.inject&amp;gt;&#xA;    [&#34;python3&#34;] = {&#xA;        imports = function(default_imports)&#xA;            vim.list_extend(default_imports, { &#34;from .leetcode import *&#34; })&#xA;            return default_imports&#xA;        end,&#xA;        after = { &#34;def test():&#34;, &#34;    print(&#39;test&#39;)&#34; },&#xA;    },&#xA;    [&#34;cpp&#34;] = {&#xA;        imports = function()&#xA;            -- return a different list to omit default imports&#xA;            return { &#34;#include &amp;lt;bits/stdc++.h&amp;gt;&#34;, &#34;using namespace std;&#34; }&#xA;        end,&#xA;        after = &#34;int main() {}&#34;,&#xA;    },&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;picker&lt;/h3&gt; &#xA;&lt;p&gt;Supported picker providers are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim&#34;&gt;&lt;code&gt;snacks-picker&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ibhagwan/fzf-lua&#34;&gt;&lt;code&gt;fzf-lua&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;&lt;code&gt;telescope&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If &lt;code&gt;provider&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt; will try to resolve the first available one in the order above.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type lc.picker&#xA;picker = { provider = nil },&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;hooks&lt;/h3&gt; &#xA;&lt;p&gt;List of functions that get executed on specified event&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;hooks = {&#xA;    ---@type fun()[]&#xA;    [&#34;enter&#34;] = {},&#xA;&#xA;    ---@type fun(question: lc.ui.Question)[]&#xA;    [&#34;question_enter&#34;] = {},&#xA;&#xA;    ---@type fun()[]&#xA;    [&#34;leave&#34;] = {},&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;theme&lt;/h3&gt; &#xA;&lt;p&gt;Override the &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/lua/leetcode/theme/default.lua&#34;&gt;default theme&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Each value is the same type as val parameter in &lt;code&gt;:help nvim_set_hl&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type lc.highlights&#xA;theme = {&#xA;    [&#34;alt&#34;] = {&#xA;        bg = &#34;#FFFFFF&#34;,&#xA;    },&#xA;    [&#34;normal&#34;] = {&#xA;        fg = &#34;#EA4AAA&#34;,&#xA;    },&#xA;},&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;image support&lt;/h3&gt; &#xA;&lt;p&gt;Whether to render question description images using &lt;a href=&#34;https://github.com/3rd/image.nvim&#34;&gt;image.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Enabling this will disable question description wrap, because of &lt;a href=&#34;https://github.com/3rd/image.nvim/issues/62#issuecomment-1778082534&#34;&gt;https://github.com/3rd/image.nvim/issues/62#issuecomment-1778082534&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;---@type boolean&#xA;image_support = false,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;üìã Commands&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;Leet&lt;/code&gt; opens menu dashboard&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;menu&lt;/code&gt; same as &lt;code&gt;Leet&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;exit&lt;/code&gt; close &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;console&lt;/code&gt; opens console pop-up for currently opened question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;info&lt;/code&gt; opens a pop-up containing information about the currently opened question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;tabs&lt;/code&gt; opens a picker with all currently opened question tabs&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;yank&lt;/code&gt; yanks the code section&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;lang&lt;/code&gt; opens a picker to change the language of the current question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;run&lt;/code&gt; run currently opened question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;test&lt;/code&gt; same as &lt;code&gt;Leet run&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;submit&lt;/code&gt; submit currently opened question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;random&lt;/code&gt; opens a random question&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;daily&lt;/code&gt; opens the question of today problem&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;list&lt;/code&gt; opens a picker with all available leetcode problems&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;open&lt;/code&gt; opens the current question in a default browser&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;restore&lt;/code&gt; try to restore default question layout&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;last_submit&lt;/code&gt; tries to replace the editor code section with the latest submitted code&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;reset&lt;/code&gt; resets editor code section to the default snippet&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;inject&lt;/code&gt; re-injects editor code, keeping the code section intact&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;fold&lt;/code&gt; applies folding to the current question imports section&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- - `session` --&gt; &#xA;&lt;!--   - `create` create a new session --&gt; &#xA;&lt;!--   - `change` change the current session --&gt; &#xA;&lt;!----&gt; &#xA;&lt;!--   - `update` update the current session in case it went out of sync --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;desc&lt;/code&gt; toggle question description&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;toggle&lt;/code&gt; same as &lt;code&gt;Leet desc&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;stats&lt;/code&gt; toggle description stats visibility&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;cookie&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;update&lt;/code&gt; opens a prompt to enter a new cookie&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;delete&lt;/code&gt; deletes stored cookie and logs out of &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;update&lt;/code&gt; fetches all available problems and updates the local cache of &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Some commands can take optional arguments. To stack argument values separate them by a &lt;code&gt;,&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Leet list&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Leet list status=&amp;lt;status&amp;gt; difficulty=&amp;lt;difficulty&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;Leet random&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Leet random status=&amp;lt;status&amp;gt; difficulty=&amp;lt;difficulty&amp;gt; tags=&amp;lt;tags&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üöÄ Usage&lt;/h2&gt; &#xA;&lt;p&gt;This plugin can be initiated in two ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;To start &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt;, simply pass &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#arg&#34;&gt;&lt;code&gt;arg&lt;/code&gt;&lt;/a&gt; as the &lt;em&gt;first and &lt;strong&gt;only&lt;/strong&gt;&lt;/em&gt; &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; argument&lt;/p&gt; &lt;pre&gt;&lt;code&gt;nvim leetcode.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;:Leet&lt;/code&gt; command to open &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt; within your preferred dashboard plugin. The only requirement is that &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; must not have any listed buffers open. To bypass this requirement use &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#non-standalone-mode&#34;&gt;&lt;code&gt;non_standalone&lt;/code&gt;&lt;/a&gt; plugin.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Switching between test cases&lt;/h3&gt; &#xA;&lt;p&gt;To switch between test cases, press the number of the test case &lt;code&gt;1&lt;/code&gt; for Case (1), &lt;code&gt;2&lt;/code&gt; for Case (2), etc&lt;/p&gt; &#xA;&lt;h3&gt;Switching between questions&lt;/h3&gt; &#xA;&lt;p&gt;To switch between questions, use &lt;code&gt;Leet tabs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Sign In&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] Be sure to copy the &lt;code&gt;Cookie&lt;/code&gt; from request headers, not the &lt;code&gt;set-cookie&lt;/code&gt; from response headers.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kawre/leetcode.nvim/assets/69250723/b7be8b95-5e2c-4153-8845-4ad3abeda5c3&#34;&gt;https://github.com/kawre/leetcode.nvim/assets/69250723/b7be8b95-5e2c-4153-8845-4ad3abeda5c3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üç¥ Recipes&lt;/h2&gt; &#xA;&lt;h3&gt;üí§ lazy loading with &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] opting for either option makes the alternative launch method unavailable due to lazy loading&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;with &lt;a href=&#34;https://raw.githubusercontent.com/kawre/leetcode.nvim/master/#arg&#34;&gt;&lt;code&gt;arg&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local leet_arg = &#34;leetcode.nvim&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;kawre/leetcode.nvim&#34;,&#xA;    lazy = leet_arg ~= vim.fn.argv(0, -1),&#xA;    opts = { arg = leet_arg },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;with &lt;code&gt;:Leet&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;kawre/leetcode.nvim&#34;,&#xA;    cmd = &#34;Leet&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ü™ü Windows&lt;/h3&gt; &#xA;&lt;p&gt;If you are using Windows, it is recommended to use &lt;a href=&#34;https://www.cygwin.com/&#34;&gt;Cygwin&lt;/a&gt; for a more consistent and Unix-like experience.&lt;/p&gt; &#xA;&lt;h2&gt;üß© Plugins&lt;/h2&gt; &#xA;&lt;h3&gt;Non-Standalone mode&lt;/h3&gt; &#xA;&lt;p&gt;To run &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt; in a non-standalone mode (i.e. not with argument or an empty Neovim session), enable the &lt;code&gt;non_standalone&lt;/code&gt; plugin in your config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;plugins = {&#xA;    non_standalone = true,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can then exit &lt;a href=&#34;https://github.com/kawre/leetcode.nvim&#34;&gt;leetcode.nvim&lt;/a&gt; using &lt;code&gt;:Leet exit&lt;/code&gt; command&lt;/p&gt; &#xA;&lt;h2&gt;üôå Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Dhanus3133/Leetbuddy.nvim&#34;&gt;Leetbuddy.nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/goolord/alpha-nvim&#34;&gt;alpha-nvim&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Safe3/uusec-waf</title>
    <updated>2025-07-06T01:43:31Z</updated>
    <id>tag:github.com,2025-07-06:/Safe3/uusec-waf</id>
    <link href="https://github.com/Safe3/uusec-waf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An industry-leading free, high-performance, AI and semantic technology Web Application Firewall and API Security Gateway (WAAP) - UUSEC WAF.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://www.uusec.com/&#34;&gt;üè† Website&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target=&#34;_blank&#34; href=&#34;https://raw.githubusercontent.com/Safe3/uusec-waf/main/README_CN.md&#34;&gt;‰∏≠ÊñáÁâà&lt;/a&gt; &lt;br&gt;&lt;br&gt; ‚≠êPlease help us with a star to support our continuous improvement, thank you! &lt;/p&gt; &#xA;&lt;h1&gt;Introduction&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Safe3/uuWAF&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Safe3/uuWAF.svg?label=Follow%C2%A0uuWAF&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Safe3/uuWAF/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discuss-Join-7289da.svg?style=for-the-badge&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;UUSEC WAF&lt;/strong&gt; Web Application Firewall is an industrial grade free, high-performance, and highly scalable web application and API security protection product that supports AI and semantic engines. It is a comprehensive website protection product launched by UUSEC Technology, which first realizes the three-layer defense function of traffic layer, system layer, and runtime layer.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://uuwaf.uusec.com/_media/waf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;GitHub Daily Trend&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=x8oHis0gzlE&#34; title=&#34;UUSEC WAF&#34;&gt;&lt;img src=&#34;https://res.cloudinary.com/marcomontalbano/image/upload/v1742432660/video_to_markdown/images/youtube--x8oHis0gzlE-c05b58ac6eb4c4700831b2b3070cd403.jpg&#34; alt=&#34;UUSEC WAF&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üéØ&lt;/span&gt; Technical advantages&lt;/h2&gt; &#xA;&lt;p&gt;&lt;span&gt;‚õé&lt;/span&gt; Intelligent 0-day defense&lt;/p&gt; &#xA;&lt;p&gt;UUSEC WAF innovatively applies machine learning technology, using anomaly detection algorithms to distinguish and identify HTTP normal and attack traffic, and models whitelist threats to normal traffic. By using machine learning algorithms to automatically learn the parameter characteristics of normal traffic and convert them into corresponding parameter whitelist rule libraries, it is possible to intercept attacks without adding rules when facing various sudden 0-day vulnerabilities, eliminating the pain of website managers having to work late to upgrade as soon as vulnerabilities appear.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ôâ&lt;/span&gt; Ultimate CDN acceleration&lt;/p&gt; &#xA;&lt;p&gt;UUSEC self-developed cache cleaning feature surpasses the arbitrary cache cleaning function only available in the commercial version of nginx, proxy_cache_purge. The commercial version of nginx only supports * pattern matching to clean the cache, while UUSEC WAF further supports regular expression matching URL path cache cleaning, which has higher flexibility and practicality compared to the commercial version of nginx. Users can enjoy ultimate CDN acceleration while more conveniently solving cache expiration issues.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ôç&lt;/span&gt; Powerful proactive defense&lt;/p&gt; &#xA;&lt;p&gt;The self-developed &#39;HIPS&#39; and &#39;RASP&#39; functions of UUSEC WAF can achieve more powerful dual layer defense at the system layer and application runtime layer, effectively preventing zero day vulnerability attacks. Host layer active defense can intercept low-level attacks at the system kernel layer, such as restricting process network communication, process creation, file read and write, system privilege escalation, system overflow attacks, etc. Runtime application self-defense RASP is inserted into runtime engines such as Java JVM and PHP Zend to effectively track runtime context and intercept various web 0-day vulnerability attacks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ôé&lt;/span&gt; Advanced semantic engine&lt;/p&gt; &#xA;&lt;p&gt;UUSEC WAF adopts four industry-leading semantic analysis based detection engines, namely SQL, XSS, RCE, and LFI. Combined with multiple deep decoding engines, it can truly restore HTTP content such as base64, JSON, and form data, effectively resisting various attack methods that bypass WAF. Compared with traditional regular matching, it has the characteristics of high accuracy, low false alarm rate, and high efficiency. Administrators do not need to maintain a complex rule library to intercept multiple types of attacks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;‚ôä&lt;/span&gt; Advanced rule engine&lt;/p&gt; &#xA;&lt;p&gt;UUSEC WAF actively utilizes the high-performance and highly flexible features of nginx and luajit. In addition to providing a traditional rule creation mode that is user-friendly for ordinary users, it also offers a highly scalable and flexible Lua script rule writing function, allowing advanced security administrators with certain programming skills to create a series of advanced vulnerability protection rules that traditional WAF cannot achieve. Users can write a series of plugins to extend the existing functions of WAF. This makes it easier to intercept complex vulnerabilities.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöÄ&lt;/span&gt; One click Installation&lt;/h2&gt; &#xA;&lt;p&gt;UUSEC WAF provides you with a powerful and flexible API for extending and writing security rules. After being published in the management backend, all rules take effect immediately without restarting, far exceeding most free WAF products on the market such as ModSecurity. The rules are shown below:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://uuwaf.uusec.com/_media/rule.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;üè†Please visit the official website to see more details: &lt;a href=&#34;https://uuwaf.uusec.com/&#34;&gt;https://uuwaf.uusec.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The installation of the UUSEC WAF is very simple, usually completed within a few minutes, and the specific time depends on the network download situation.&lt;/p&gt; &#xA;&lt;p&gt;Attention: Please try to choose a pure Linux x86_64 environment server for installation, because the UUSEC WAF adopts cloud WAF reverse proxy mode, which requires the use of ports 80 and 443 by default.&lt;/p&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Software dependencies: Docker CE version 20.10.14 or above, Docker Compose version 2.0.0 or above.&lt;/p&gt; &#xA;&lt;p&gt;If you encounter the inability to automatically install Docker Engine, please install it manually.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] ‰∏≠ÂõΩÁî®Êà∑ËØ∑ËÆøÈóÆ &lt;a href=&#34;https://waf.uusec.com/&#34;&gt;‰∏≠ÊñáÂÆòÁΩë&lt;/a&gt; ÂÆâË£Ö‰∏≠ÊñáÁâàÔºå‰ª•‰∏ãÊ≠•È™§ÂÆâË£ÖÂõΩÈôÖÁâàÂèØËÉΩ‰ºöÂØºËá¥Êó†Ê≥ï‰ΩøÁî®ÔºÅ&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo bash -c &#34;$(curl -fsSL https://uuwaf.uusec.com/installer.sh)&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Subsequently, &lt;code&gt;bash /opt/waf/manager.sh&lt;/code&gt; is used to manage the UUSEC WAF container, including starting, stopping, updating, uninstalling, etc.&lt;/p&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Login to the management: Access &lt;a href=&#34;https://ip:4443&#34;&gt;https://ip:4443&lt;/a&gt; ,the IP address is the server IP address for installing the UUSEC WAF, the default username is &lt;code&gt;admin&lt;/code&gt;, and the default password is &lt;code&gt;#Passw0rd&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add a site: Go to the &#34;Sites&#34; menu, click the &#34;Add Site&#34; button, and follow the prompts to add the site domain name and website server IP.&lt;/li&gt; &#xA; &lt;li&gt;Add SSL certificate: Go to the certificate management menu, click the &#34;Add Certificate&#34; button, and upload the HTTPS certificate and private key file of the domain name. If you don‚Äòt have a SSL certificate, you can also apply for a Let&#39;s Encrypt free SSL certificate and renew it automatically before the certificate expires.&lt;/li&gt; &#xA; &lt;li&gt;Change the DNS address of the domain: Go to the domain name service provider&#39;s management backend and change the IP address recorded in the DNS A of the domain name to the IP address of the UUSEC WAF server.&lt;/li&gt; &#xA; &lt;li&gt;Test connectivity: Visit the site domain to see if the website can be opened, and check if the returned HTTP header server field is uuWAF.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For more solutions to problems encountered during use, please refer to &lt;a href=&#34;https://uuwaf.uusec.com/#/guide/problems&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ú®&lt;/span&gt; Effect Evaluation&lt;/h2&gt; &#xA;&lt;p&gt;For reference only&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Metric&lt;/th&gt; &#xA;   &lt;th&gt;ModSecurity, Level 1&lt;/th&gt; &#xA;   &lt;th&gt;CloudFlare, Free&lt;/th&gt; &#xA;   &lt;th&gt;UUSEC WAF, Free&lt;/th&gt; &#xA;   &lt;th&gt;UUSEC WAF, Pro&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Total Samples&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;33669&lt;/td&gt; &#xA;   &lt;td&gt;33669&lt;/td&gt; &#xA;   &lt;td&gt;33669&lt;/td&gt; &#xA;   &lt;td&gt;33669&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Detection&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;69.74%&lt;/td&gt; &#xA;   &lt;td&gt;10.70%&lt;/td&gt; &#xA;   &lt;td&gt;74.77%&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;98.97%&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;False Positive&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;17.58%&lt;/td&gt; &#xA;   &lt;td&gt;0.07%&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.09%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;0.01%&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Accuracy&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;82.20%&lt;/td&gt; &#xA;   &lt;td&gt;98.40%&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;99.42%&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;99.95%&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;span&gt;üíù&lt;/span&gt; Contribution List&lt;/h2&gt; &#xA;&lt;p&gt;How to contribute? reference: &lt;a href=&#34;https://uuwaf.uusec.com/#/guide/contribute&#34;&gt;https://uuwaf.uusec.com/#/guide/contribute&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to puhui222, MCQSJ, k4n5ha0 and more for the contribution made to the UUSEC WAF!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dartnode.com&#34; title=&#34;Powered by DartNode - Free VPS for Open Source&#34;&gt;&lt;img src=&#34;https://dartnode.com/branding/DN-Open-Source-sm.png&#34; alt=&#34;Powered by DartNode&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üòò&lt;/span&gt; Join the discussion&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to participate in discussions on various bugs, functional requirements, and usage issues related to the UUSEC WAF through the following channels:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Problem submission: &lt;a href=&#34;https://github.com/Safe3/uuWAF/issues&#34;&gt;https://github.com/Safe3/uuWAF/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Discussion Community: &lt;a href=&#34;https://github.com/Safe3/uuWAF/discussions&#34;&gt;https://github.com/Safe3/uuWAF/discussions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>