<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-04T01:44:44Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>koreader/koreader</title>
    <updated>2022-12-04T01:44:44Z</updated>
    <id>tag:github.com,2022-12-04:/koreader/koreader</id>
    <link href="https://github.com/koreader/koreader" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An ebook reader application supporting PDF, DjVu, EPUB, FB2 and many more formats, running on Cervantes, Kindle, Kobo, PocketBook and Android devices&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://koreader.rocks&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/koreader/koreader.github.io/master/koreader-logo.png&#34; alt=&#34;KOReader&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;KOReader is a document viewer primarily aimed at e-ink readers.&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koreader/koreader/master/COPYING&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/koreader/koreader&#34; alt=&#34;AGPL Licence&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/koreader/koreader/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/koreader/koreader.svg?sanitize=true&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/koreader/koreader&#34;&gt;&lt;img src=&#34;https://img.shields.io/gitter/room/koreader/koreader?color=red&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.mobileread.com/forums/forumdisplay.php?f=276&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/forum-on_mobileread-lightgrey&#34; alt=&#34;Mobileread&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/koreader/koreader&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/koreader/koreader.svg?style=shield&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/koreader/koreader&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/koreader/koreader/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/koreader/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/koreader/-/koreader/svg-badge.svg?sanitize=true&#34; alt=&#34;Weblate Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/koreader/koreader/releases&#34;&gt;Download&lt;/a&gt; • &lt;a href=&#34;http://koreader.rocks/koreader-user-guide.pdf&#34;&gt;User guide&lt;/a&gt; • &lt;a href=&#34;https://github.com/koreader/koreader/wiki&#34;&gt;Wiki&lt;/a&gt; • &lt;a href=&#34;http://koreader.rocks/doc/&#34;&gt;Developer docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Main features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;portable&lt;/strong&gt;: runs on embedded devices (Cervantes, Kindle, Kobo, PocketBook, reMarkable), Android and Linux computers. Developers can run a KOReader emulator in Linux and MacOS.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;multi-format documents&lt;/strong&gt;: supports fixed page formats (PDF, DjVu, CBT, CBZ) and reflowable e-book formats (EPUB, FB2, Mobi, DOC, CHM, TXT). Scanned PDF/DjVu documents can also be reflowed with the built-in K2pdfopt library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;full-featured reading&lt;/strong&gt;: multi-lingual user interface with a highly customizable reader view and many typesetting options. You can set arbitrary page margins, override line spacing and choose external fonts and styles. It has multi-lingual hyphenation dictionaries bundled into the application.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;integrated&lt;/strong&gt; with &lt;em&gt;calibre&lt;/em&gt; (search metadata, receive ebooks wirelessly, browse library via OPDS), &lt;em&gt;Wallabag&lt;/em&gt;, &lt;em&gt;Wikipedia&lt;/em&gt;, &lt;em&gt;Google Translate&lt;/em&gt; and other content providers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;optimized for e-ink devices&lt;/strong&gt;: custom UI without animation, with paginated menus, adjustable text contrast, and easy zoom to fit content or page in paged media.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;extensible&lt;/strong&gt;: via plugins&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;fast&lt;/strong&gt;: on some older devices, it has been measured to have less than half the page-turn delay as the built in reading software.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;and much more&lt;/strong&gt;: look up words with StarDict dictionaries / Wikipedia, add your own online OPDS catalogs and RSS feeds, over-the-air software updates, an FTP client, an SSH server, …&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please check the &lt;a href=&#34;http://koreader.rocks/koreader-user-guide.pdf&#34;&gt;user guide&lt;/a&gt; and the &lt;a href=&#34;https://github.com/koreader/koreader/wiki&#34;&gt;wiki&lt;/a&gt; to discover more features and to help us document them.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/koreader/koreader-artwork/raw/master/koreader-menu.png&#34;&gt;&lt;img src=&#34;https://github.com/koreader/koreader-artwork/raw/master/koreader-menu-thumbnail.png&#34; alt=&#34;&#34; width=&#34;200px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/koreader/koreader-artwork/raw/master/koreader-footnotes.png&#34;&gt;&lt;img src=&#34;https://github.com/koreader/koreader-artwork/raw/master/koreader-footnotes-thumbnail.png&#34; alt=&#34;&#34; width=&#34;200px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/koreader/koreader-artwork/raw/master/koreader-dictionary.png&#34;&gt;&lt;img src=&#34;https://github.com/koreader/koreader-artwork/raw/master/koreader-dictionary-thumbnail.png&#34; alt=&#34;&#34; width=&#34;200px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Please follow the model specific steps for your device:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/koreader/koreader/wiki/Installation-on-Android-devices&#34;&gt;Android&lt;/a&gt; • &lt;a href=&#34;https://github.com/koreader/koreader/wiki/Installation-on-BQ-devices&#34;&gt;Cervantes&lt;/a&gt; • &lt;a href=&#34;https://github.com/koreader/koreader/wiki/Installation-on-Kindle-devices&#34;&gt;Kindle&lt;/a&gt; • &lt;a href=&#34;https://github.com/koreader/koreader/wiki/Installation-on-Kobo-devices&#34;&gt;Kobo&lt;/a&gt; • &lt;a href=&#34;https://github.com/koreader/koreader/wiki/Installation-on-desktop-linux&#34;&gt;Linux&lt;/a&gt; • &lt;a href=&#34;https://github.com/koreader/koreader/wiki/Installation-on-PocketBook-devices&#34;&gt;Pocketbook&lt;/a&gt; • &lt;a href=&#34;https://github.com/koreader/koreader/wiki/Installation-on-Remarkable&#34;&gt;reMarkable&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/koreader/koreader/master/doc/Building.md&#34;&gt;Setting up a build environment&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/koreader/koreader/master/doc/Collaborating_with_Git.md&#34;&gt;Collaborating with Git&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/koreader/koreader/master/doc/Building_targets.md&#34;&gt;Building targets&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/koreader/koreader/master/doc/Porting.md&#34;&gt;Porting&lt;/a&gt; • &lt;a href=&#34;http://koreader.rocks/doc/&#34;&gt;Developer docs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;KOReader is developed and supported by volunteers all around the world. There are many ways you can help:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/koreader/koreader/issues?q=is%3Aopen+is%3Aissue+label%3Abug&#34;&gt;fix bugs&lt;/a&gt; and &lt;a href=&#34;https://github.com/koreader/koreader/issues?q=is%3Aopen+is%3Aissue+label%3Aenhancement&#34;&gt;implement new features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://hosted.weblate.org/engage/koreader/?utm_source=widget&#34;&gt;translate the program into your language&lt;/a&gt; or improve an existing translation&lt;/li&gt; &#xA; &lt;li&gt;document lesser-known features on the &lt;a href=&#34;https://github.com/koreader/koreader/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;help others with your knowledge on the &lt;a href=&#34;http://www.mobileread.com/forums/forumdisplay.php?f=276&#34;&gt;forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Right now we only support &lt;a href=&#34;https://liberapay.com/KOReader&#34;&gt;liberapay&lt;/a&gt; donations, but you can also create a &lt;a href=&#34;https://www.bountysource.com/teams/koreader&#34;&gt;bounty&lt;/a&gt; to motivate others to work on a specific bug or feature request.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/koreader/koreader/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/koreader/koreader?color=orange&#34; alt=&#34;Last commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/koreader/koreader/pulse&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/koreader/koreader&#34; alt=&#34;Commit activity&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kevinhwang91/nvim-ufo</title>
    <updated>2022-12-04T01:44:44Z</updated>
    <id>tag:github.com,2022-12-04:/kevinhwang91/nvim-ufo</id>
    <link href="https://github.com/kevinhwang91/nvim-ufo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Not UFO in the sky, but an ultra fold in Neovim.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-ufo&lt;/h1&gt; &#xA;&lt;p&gt;The goal of nvim-ufo is to make Neovim&#39;s fold look modern and keep high performance.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/17562139/173796287-9842fb3a-37c2-47fb-8968-6e7600c0fcef.mp4&#34;&gt;https://user-images.githubusercontent.com/17562139/173796287-9842fb3a-37c2-47fb-8968-6e7600c0fcef.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/kevinhwang91/nvim-ufo/issues/4&#34;&gt;setup foldcolumn like demo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#table-of-contents&#34;&gt;Table of contents&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#quickstart&#34;&gt;Quickstart&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#minimal-configuration&#34;&gt;Minimal configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#documentation&#34;&gt;Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#how-does-nvim-ufo-get-the-folds&#34;&gt;How does nvim-ufo get the folds?&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#setup-and-description&#34;&gt;Setup and description&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#preview-function-table&#34;&gt;Preview function table&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#commands&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#api&#34;&gt;API&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#highlight-groups&#34;&gt;Highlight groups&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#advanced-configuration&#34;&gt;Advanced configuration&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#customize-configuration&#34;&gt;Customize configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#customize-fold-text&#34;&gt;Customize fold text&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#feedback&#34;&gt;Feedback&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Penetrate color for folded lines like other modern editors/IDEs&lt;/li&gt; &#xA; &lt;li&gt;Never block Neovim&lt;/li&gt; &#xA; &lt;li&gt;Adding folds high accuracy with Folding Range in LSP&lt;/li&gt; &#xA; &lt;li&gt;Support fallback and customize strategy for fold provider&lt;/li&gt; &#xA; &lt;li&gt;Peek folded line and jump the desired location with less redraw&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;Neovim&lt;/a&gt; 0.6.1 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/neoclide/coc.nvim&#34;&gt;coc.nvim&lt;/a&gt; (optional)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-treesitter/nvim-treesitter&#34;&gt;nvim-treesitter&lt;/a&gt; (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Installation&lt;/h3&gt; &#xA;&lt;p&gt;Install with &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;Packer.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#39;kevinhwang91/nvim-ufo&#39;, requires = &#39;kevinhwang91/promise-async&#39;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Minimal configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#39;kevinhwang91/nvim-ufo&#39;, requires = &#39;kevinhwang91/promise-async&#39;}&#xA;&#xA;vim.o.foldcolumn = &#39;1&#39; -- &#39;0&#39; is not bad&#xA;vim.o.foldlevel = 99 -- Using ufo provider need a large value, feel free to decrease the value&#xA;vim.o.foldlevelstart = 99&#xA;vim.o.foldenable = true&#xA;&#xA;-- Using ufo provider need remap `zR` and `zM`. If Neovim is 0.6.1, remap yourself&#xA;vim.keymap.set(&#39;n&#39;, &#39;zR&#39;, require(&#39;ufo&#39;).openAllFolds)&#xA;vim.keymap.set(&#39;n&#39;, &#39;zM&#39;, require(&#39;ufo&#39;).closeAllFolds)&#xA;&#xA;-- Option 1: coc.nvim as LSP client&#xA;use {&#39;neoclide/coc.nvim&#39;, branch = &#39;master&#39;, run = &#39;yarn install --frozen-lockfile&#39;}&#xA;require(&#39;ufo&#39;).setup()&#xA;--&#xA;&#xA;-- Option 2: nvim lsp as LSP client&#xA;-- Tell the server the capability of foldingRange,&#xA;-- Neovim hasn&#39;t added foldingRange to default capabilities, users must add it manually&#xA;local capabilities = vim.lsp.protocol.make_client_capabilities()&#xA;capabilities.textDocument.foldingRange = {&#xA;    dynamicRegistration = false,&#xA;    lineFoldingOnly = true&#xA;}&#xA;local language_servers = {} -- like {&#39;gopls&#39;, &#39;clangd&#39;}&#xA;for _, ls in ipairs(language_servers) do&#xA;    require(&#39;lspconfig&#39;)[ls].setup({&#xA;        capabilities = capabilities,&#xA;        other_fields = ...&#xA;    })&#xA;end&#xA;require(&#39;ufo&#39;).setup()&#xA;--&#xA;&#xA;-- Option 3: treesitter as a main provider instead&#xA;-- Only depend on `nvim-treesitter/queries/filetype/folds.scm`,&#xA;-- performance and stability are better than `foldmethod=nvim_treesitter#foldexpr()`&#xA;use {&#39;nvim-treesitter/nvim-treesitter&#39;, run = &#39;:TSUpdate&#39;}&#xA;require(&#39;ufo&#39;).setup({&#xA;    provider_selector = function(bufnr, filetype, buftype)&#xA;        return {&#39;treesitter&#39;, &#39;indent&#39;}&#xA;    end&#xA;})&#xA;--&#xA;&#xA;-- Option 4: disable all providers for all buffers&#xA;-- Not recommend, AFAIK, the ufo&#39;s providers are the best performance in Neovim&#xA;require(&#39;ufo&#39;).setup({&#xA;    provider_selector = function(bufnr, filetype, buftype)&#xA;        return &#39;&#39;&#xA;    end&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;p&gt;Use fold as usual.&lt;/p&gt; &#xA;&lt;p&gt;Using a provider of ufo, must set a large value for &lt;code&gt;foldlevel&lt;/code&gt;, this is the limitation of &lt;code&gt;foldmethod=manual&lt;/code&gt;. A small value may close fold automatically if the fold ranges updated.&lt;/p&gt; &#xA;&lt;p&gt;After running &lt;code&gt;zR&lt;/code&gt; and &lt;code&gt;zM&lt;/code&gt; normal commands will change the &lt;code&gt;foldlevel&lt;/code&gt;, ufo provide the APIs &lt;code&gt;openAllFolds&lt;/code&gt;/&lt;code&gt;closeAllFolds&lt;/code&gt; to open/close all folds but keep &lt;code&gt;foldlevel&lt;/code&gt; value, need to remap them.&lt;/p&gt; &#xA;&lt;p&gt;Like &lt;code&gt;zR&lt;/code&gt; and &lt;code&gt;zM&lt;/code&gt;, if you used &lt;code&gt;zr&lt;/code&gt; and &lt;code&gt;zm&lt;/code&gt; before, please use &lt;code&gt;closeFoldsWith&lt;/code&gt; API to close folds like &lt;code&gt;set foldlevel=n&lt;/code&gt; but keep &lt;code&gt;foldlevel&lt;/code&gt; value.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;h3&gt;How does nvim-ufo get the folds?&lt;/h3&gt; &#xA;&lt;p&gt;If ufo detect &lt;code&gt;foldmethod&lt;/code&gt; option is not &lt;code&gt;diff&lt;/code&gt; or &lt;code&gt;marker&lt;/code&gt;, it will request the providers to get the folds, the request strategy is formed by the main and the fallback. The default value of main is &lt;code&gt;lsp&lt;/code&gt; and the default value of fallback is &lt;code&gt;indent&lt;/code&gt; which implemented by ufo.&lt;/p&gt; &#xA;&lt;p&gt;For example, Changing the text in a buffer will request the providers for folds.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;foldmethod&lt;/code&gt; option will finally become &lt;code&gt;manual&lt;/code&gt; if ufo is working.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Setup and description&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    open_fold_hl_timeout = {&#xA;        description = [[Time in millisecond between the range to be highlgihted and to be cleared&#xA;                    while opening the folded line, `0` value will disable the highlight]],&#xA;        default = 400&#xA;    },&#xA;    provider_selector = {&#xA;        description = [[A function as a selector for fold providers. For now, there are&#xA;                    &#39;lsp&#39; and &#39;treesitter&#39; as main provider, &#39;indent&#39; as fallback provider]],&#xA;        default = nil&#xA;    },&#xA;    close_fold_kinds = {&#xA;        description = [[After the buffer is displayed (opened for the first time), close the&#xA;                    folds whose range with `kind` field is included in this option. For now,&#xA;                    &#39;lsp&#39; provider&#39;s standardized kinds are &#39;comment&#39;, &#39;imports&#39; and &#39;region&#39;,&#xA;                    run `UfoInspect` for details if your provider has extended the kinds.]],&#xA;        default = {}&#xA;    },&#xA;    fold_virt_text_handler = {&#xA;        description = [[A function customize fold virt text, see ### Customize fold text]],&#xA;        default = nil&#xA;    },&#xA;    enable_get_fold_virt_text = {&#xA;        description = [[Enable a function with `lnum` as a parameter to capture the virtual text&#xA;                    for the folded lines and export the function to `get_fold_virt_text` field of&#xA;                    ctx table as 6th parameter in `fold_virt_text_handler`]],&#xA;        default = false&#xA;    },&#xA;    preview = {&#xA;        description = [[Configure the options for preview window and remap the keys for current&#xA;                    buffer and preview buffer if the preview window is displayed.&#xA;                    Never worry about the users&#39;s keymaps are overridden by ufo, ufo will save&#xA;                    them and restore them if preview window is closed.]],&#xA;        win_config = {&#xA;            border = {&#xA;                description = [[The border for preview window,&#xA;                    `:h nvim_open_win() | call search(&#39;border:&#39;)`]],&#xA;                default = &#39;rounded&#39;,&#xA;            },&#xA;            winblend = {&#xA;                description = [[The winblend for preview window, `:h winblend`]],&#xA;                default = 12,&#xA;            },&#xA;            winhighlight = {&#xA;                description = [[The winhighlight for preview window, `:h winhighlight`]],&#xA;                default = &#39;Normal:Normal&#39;,&#xA;            },&#xA;            maxheight = {&#xA;                description = [[The max height of preview window]],&#xA;                default = 20,&#xA;            }&#xA;        },&#xA;        mappings = {&#xA;            description = [[The table for {function = key}]],&#xA;            default = [[see ###Preview function table for detail]],&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;:h ufo&lt;/code&gt; may help you to get the all default configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Preview function table&lt;/h3&gt; &#xA;&lt;!-- markdownlint-disable MD013 --&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Function&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;   &lt;th&gt;Def Key&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scrollB&lt;/td&gt; &#xA;   &lt;td&gt;Type &lt;code&gt;CTRL-B&lt;/code&gt; in preview window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scrollF&lt;/td&gt; &#xA;   &lt;td&gt;Type &lt;code&gt;CTRL-F&lt;/code&gt; in preview window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scrollU&lt;/td&gt; &#xA;   &lt;td&gt;Type &lt;code&gt;CTRL-U&lt;/code&gt; in preview window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scrollD&lt;/td&gt; &#xA;   &lt;td&gt;Type &lt;code&gt;CTRL-D&lt;/code&gt; in preview window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scrollE&lt;/td&gt; &#xA;   &lt;td&gt;Type &lt;code&gt;CTRL-E&lt;/code&gt; in preview window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-E&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;scrollY&lt;/td&gt; &#xA;   &lt;td&gt;Type &lt;code&gt;CTRL-Y&lt;/code&gt; in preview window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-Y&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;In normal window: Close preview window&lt;br&gt;In preview window: Close preview window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;q&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;switch&lt;/td&gt; &#xA;   &lt;td&gt;In normal window: Go to preview window&lt;br&gt;In preview window: Go to normal window&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;Tab&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;trace&lt;/td&gt; &#xA;   &lt;td&gt;In normal window: Trace code based on topline&lt;br&gt;In preview window: Trace code based on cursor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-enable MD013--&gt; &#xA;&lt;p&gt;Additional mouse supported:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;ScrollWheelUp&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ScrollWheelDown&amp;gt;&lt;/code&gt;: Scroll preview window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;2-LeftMouse&amp;gt;&lt;/code&gt;: Same as &lt;code&gt;trace&lt;/code&gt; action in preview window.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;code&gt;trace&lt;/code&gt; action will open all fold for the folded lines&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UfoEnable&lt;/td&gt; &#xA;   &lt;td&gt;Enable ufo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UfoDisable&lt;/td&gt; &#xA;   &lt;td&gt;Disable ufo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UfoInspect&lt;/td&gt; &#xA;   &lt;td&gt;Inspect current buffer information&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UfoAttach&lt;/td&gt; &#xA;   &lt;td&gt;Attach current buffer to enable all features&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UfoDetach&lt;/td&gt; &#xA;   &lt;td&gt;Attach current buffer to disable all features&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UfoEnableFold&lt;/td&gt; &#xA;   &lt;td&gt;Enable to get folds and update them at once for current buffer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;UfoDisableFold&lt;/td&gt; &#xA;   &lt;td&gt;Disable to get folds for current buffer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;API&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/lua/ufo.lua&#34;&gt;ufo.lua&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Highlight groups&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; hi default UfoFoldedFg guifg=Normal.foreground&#xA;&#34; hi default UfoFoldedBg guibg=Folded.background&#xA;hi default link UfoPreviewSbar PmenuSbar&#xA;hi default link UfoPreviewThumb PmenuThumb&#xA;hi default link UfoPreviewWinBar UfoFoldedBg&#xA;hi default link UfoPreviewCursorLine Visual&#xA;hi default link UfoFoldedEllipsis Comment&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;UfoFoldedFg&lt;/code&gt;: Foreground for raw text of folded line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UfoFoldedBg&lt;/code&gt;: Background of folded line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UfoPreviewSbar&lt;/code&gt;: Scroll bar of preview window, only take effect if the border is missing right horizontal line, like &lt;code&gt;border = &#39;none&#39;&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UfoPreviewCursorLine&lt;/code&gt;: Highlight current line in preview window if it isn&#39;t the start of folded lines.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UfoPreviewWinBar&lt;/code&gt;: Virtual winBar of preview window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UfoPreviewThumb&lt;/code&gt;: Thumb of preview window.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;UfoFoldedEllipsis&lt;/code&gt;: Ellipsis at the end of folded line, invalid if &lt;code&gt;fold_virt_text_handler&lt;/code&gt; is set.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Advanced configuration&lt;/h2&gt; &#xA;&lt;p&gt;Configuration can be found at &lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/doc/example.lua&#34;&gt;example.lua&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Customize configuration&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local ftMap = {&#xA;    vim = &#39;indent&#39;,&#xA;    python = {&#39;indent&#39;},&#xA;    git = &#39;&#39;&#xA;}&#xA;require(&#39;ufo&#39;).setup({&#xA;    open_fold_hl_timeout = 150,&#xA;    close_fold_kinds = {&#39;imports&#39;, &#39;comment&#39;},&#xA;    preview = {&#xA;        win_config = {&#xA;            border = {&#39;&#39;, &#39;─&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;─&#39;, &#39;&#39;, &#39;&#39;},&#xA;            winhighlight = &#39;Normal:Folded&#39;,&#xA;            winblend = 0&#xA;        },&#xA;        mappings = {&#xA;            scrollU = &#39;&amp;lt;C-u&amp;gt;&#39;,&#xA;            scrollD = &#39;&amp;lt;C-d&amp;gt;&#39;&#xA;        }&#xA;    },&#xA;    provider_selector = function(bufnr, filetype, buftype)&#xA;        -- if you prefer treesitter provider rather than lsp,&#xA;        -- return ftMap[filetype] or {&#39;treesitter&#39;, &#39;indent&#39;}&#xA;        return ftMap[filetype]&#xA;&#xA;        -- refer to ./doc/example.lua for detail&#xA;    end&#xA;})&#xA;vim.keymap.set(&#39;n&#39;, &#39;zR&#39;, require(&#39;ufo&#39;).openAllFolds)&#xA;vim.keymap.set(&#39;n&#39;, &#39;zM&#39;, require(&#39;ufo&#39;).closeAllFolds)&#xA;vim.keymap.set(&#39;n&#39;, &#39;zr&#39;, require(&#39;ufo&#39;).openFoldsExceptKinds)&#xA;vim.keymap.set(&#39;n&#39;, &#39;zm&#39;, require(&#39;ufo&#39;).closeFoldsWith) -- closeAllFolds == closeFoldsWith(0)&#xA;vim.keymap.set(&#39;n&#39;, &#39;K&#39;, function()&#xA;    local winid = require(&#39;ufo&#39;).peekFoldedLinesUnderCursor()&#xA;    if not winid then&#xA;        -- choose one of coc.nvim and nvim lsp&#xA;        vim.fn.CocActionAsync(&#39;definitionHover&#39;) -- coc.nvim&#xA;        vim.lsp.buf.hover()&#xA;    end&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Customize fold text&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;864px&#34; src=&#34;https://user-images.githubusercontent.com/17562139/174121926-e90a962d-9fc9-428a-bd53-274ed392c68d.png&#34;&gt; &lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local handler = function(virtText, lnum, endLnum, width, truncate)&#xA;    local newVirtText = {}&#xA;    local suffix = (&#39;  %d &#39;):format(endLnum - lnum)&#xA;    local sufWidth = vim.fn.strdisplaywidth(suffix)&#xA;    local targetWidth = width - sufWidth&#xA;    local curWidth = 0&#xA;    for _, chunk in ipairs(virtText) do&#xA;        local chunkText = chunk[1]&#xA;        local chunkWidth = vim.fn.strdisplaywidth(chunkText)&#xA;        if targetWidth &amp;gt; curWidth + chunkWidth then&#xA;            table.insert(newVirtText, chunk)&#xA;        else&#xA;            chunkText = truncate(chunkText, targetWidth - curWidth)&#xA;            local hlGroup = chunk[2]&#xA;            table.insert(newVirtText, {chunkText, hlGroup})&#xA;            chunkWidth = vim.fn.strdisplaywidth(chunkText)&#xA;            -- str width returned from truncate() may less than 2nd argument, need padding&#xA;            if curWidth + chunkWidth &amp;lt; targetWidth then&#xA;                suffix = suffix .. (&#39; &#39;):rep(targetWidth - curWidth - chunkWidth)&#xA;            end&#xA;            break&#xA;        end&#xA;        curWidth = curWidth + chunkWidth&#xA;    end&#xA;    table.insert(newVirtText, {suffix, &#39;MoreMsg&#39;})&#xA;    return newVirtText&#xA;end&#xA;&#xA;-- global handler&#xA;require(&#39;ufo&#39;).setup({&#xA;    fold_virt_text_handler = handler&#xA;})&#xA;&#xA;-- buffer scope handler&#xA;-- will override global handler if it is existed&#xA;local bufnr = vim.api.nvim_get_current_buf()&#xA;require(&#39;ufo&#39;).setFoldVirtTextHandler(bufnr, handler)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you get an issue or come up with an awesome idea, don&#39;t hesitate to open an issue in github.&lt;/li&gt; &#xA; &lt;li&gt;If you think this plugin is useful or cool, consider rewarding it a star.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The project is licensed under a BSD-3-clause license. See &lt;a href=&#34;https://raw.githubusercontent.com/kevinhwang91/nvim-ufo/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>qbcore-framework/qb-inventory</title>
    <updated>2022-12-04T01:44:44Z</updated>
    <id>tag:github.com,2022-12-04:/qbcore-framework/qb-inventory</id>
    <link href="https://github.com/qbcore-framework/qb-inventory" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Slot Based Inventory System Used With QB-Core 🎒&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;qb-inventory&lt;/h1&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;QBCore Framework&#xA;Copyright (C) 2021 Joshua Eger&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-core&#34;&gt;qb-core&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-logs&#34;&gt;qb-logs&lt;/a&gt; - For logging transfer and other history&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-traphouse&#34;&gt;qb-traphouse&lt;/a&gt; - Trap house system for qbcore&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-radio&#34;&gt;qb-radio&lt;/a&gt; - Radio system for communication&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-drugs&#34;&gt;qb-drugs&lt;/a&gt; - Drugs and Weed Planting System&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/qbcore-framework/qb-shops&#34;&gt;qb-shops&lt;/a&gt; - Needed in order to add shops&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/GR0MDFN.png&#34; alt=&#34;General&#34;&gt; &lt;img src=&#34;https://i.imgur.com/C6gAOWi.png&#34; alt=&#34;ID Card&#34;&gt; &lt;img src=&#34;https://i.imgur.com/RbCvHJb.png&#34; alt=&#34;Weapon&#34;&gt; &lt;img src=&#34;https://i.imgur.com/7Da7UEX.png&#34; alt=&#34;Shop&#34;&gt; &lt;img src=&#34;https://i.imgur.com/peONaL9.png&#34; alt=&#34;Crafting&#34;&gt; &lt;img src=&#34;https://i.imgur.com/LjDEYWa.png&#34; alt=&#34;Glovebox&#34;&gt; &lt;img src=&#34;https://i.imgur.com/IoGYZbv.png&#34; alt=&#34;Trunk&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Item crafting&lt;/li&gt; &#xA; &lt;li&gt;Weapon attachment crafting&lt;/li&gt; &#xA; &lt;li&gt;Stashes (Personal and/or Shared)&lt;/li&gt; &#xA; &lt;li&gt;Vehicle Trunk &amp;amp; Glovebox&lt;/li&gt; &#xA; &lt;li&gt;Weapon serial number&lt;/li&gt; &#xA; &lt;li&gt;Shops&lt;/li&gt; &#xA; &lt;li&gt;Item Drops&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Manual&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the script and put it in the &lt;code&gt;[qb]&lt;/code&gt; directory.&lt;/li&gt; &#xA; &lt;li&gt;Import &lt;code&gt;qb-inventory.sql&lt;/code&gt; in your database&lt;/li&gt; &#xA; &lt;li&gt;Add the following code to your server.cfg/resouces.cfg&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;ensure qb-core&#xA;ensure qb-logs&#xA;ensure qb-inventory&#xA;ensure qb-traphouse&#xA;ensure qb-radio&#xA;ensure qb-drugs&#xA;ensure qb-shops&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Config = {}&#xA;&#xA;Config.UseTarget = GetConvar(&#39;UseTarget&#39;, &#39;false&#39;) == &#39;true&#39; -- Use qb-target interactions (don&#39;t change this, go to your server.cfg and add `setr UseTarget true` to use this and just that from true to false or the other way around)&#xA;&#xA;Config.MaxInventoryWeight = 120000 -- Max weight a player can carry (default 120kg, written in grams)&#xA;Config.MaxInventorySlots = 41 -- Max inventory slots for a player&#xA;&#xA;Config.CleanupDropTime = 15 * 60 -- How many seconds it takes for drops to be untouched before being deleted&#xA;Config.MaxDropViewDistance = 12.5 -- The distance in GTA Units that a drop can be seen&#xA;Config.UseItemDrop = false -- This will enable item object to spawn on drops instead of markers&#xA;Config.ItemDropObject = `prop_nigel_bag_pickup` -- if Config.UseItemDrop is true, this will be the prop that spawns for the item&#xA;&#xA;Config.VendingObjects = {&#xA;    &#34;prop_vend_soda_01&#34;,&#xA;    &#34;prop_vend_soda_02&#34;,&#xA;    &#34;prop_vend_water_01&#34;&#xA;}&#xA;&#xA;Config.BinObjects = {&#xA;    &#34;prop_bin_05a&#34;,&#xA;}&#xA;&#xA;Config.CraftingObject = `prop_toolchest_05`&#xA;&#xA;Config.VendingItem = {&#xA;    [1] = {&#xA;        name = &#34;kurkakola&#34;,&#xA;        price = 4,&#xA;        amount = 50,&#xA;        info = {},&#xA;        type = &#34;item&#34;,&#xA;        slot = 1,&#xA;    },&#xA;    [2] = {&#xA;        name = &#34;water_bottle&#34;,&#xA;        price = 4,&#xA;        amount = 50,&#xA;        info = {},&#xA;        type = &#34;item&#34;,&#xA;        slot = 2,&#xA;    },&#xA;}&#xA;&#xA;Config.CraftingItems = {&#xA;    [1] = {&#xA;        name = &#34;lockpick&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 22,&#xA;            [&#34;plastic&#34;] = 32,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 1,&#xA;        threshold = 0,&#xA;        points = 1,&#xA;    },&#xA;    [2] = {&#xA;        name = &#34;screwdriverset&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 30,&#xA;            [&#34;plastic&#34;] = 42,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 2,&#xA;        threshold = 0,&#xA;        points = 2,&#xA;    },&#xA;    [3] = {&#xA;        name = &#34;electronickit&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 30,&#xA;            [&#34;plastic&#34;] = 45,&#xA;            [&#34;aluminum&#34;] = 28,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 3,&#xA;        threshold = 0,&#xA;        points = 3,&#xA;    },&#xA;    [4] = {&#xA;        name = &#34;radioscanner&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;electronickit&#34;] = 2,&#xA;            [&#34;plastic&#34;] = 52,&#xA;            [&#34;steel&#34;] = 40,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 4,&#xA;        threshold = 0,&#xA;        points = 4,&#xA;    },&#xA;    [5] = {&#xA;        name = &#34;gatecrack&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 10,&#xA;            [&#34;plastic&#34;] = 50,&#xA;            [&#34;aluminum&#34;] = 30,&#xA;            [&#34;iron&#34;] = 17,&#xA;            [&#34;electronickit&#34;] = 2,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 5,&#xA;        threshold = 110,&#xA;        points = 5,&#xA;    },&#xA;    [6] = {&#xA;        name = &#34;handcuffs&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 36,&#xA;            [&#34;steel&#34;] = 24,&#xA;            [&#34;aluminum&#34;] = 28,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 6,&#xA;        threshold = 160,&#xA;        points = 6,&#xA;    },&#xA;    [7] = {&#xA;        name = &#34;repairkit&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 32,&#xA;            [&#34;steel&#34;] = 43,&#xA;            [&#34;plastic&#34;] = 61,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 7,&#xA;        threshold = 200,&#xA;        points = 7,&#xA;    },&#xA;    [8] = {&#xA;        name = &#34;pistol_ammo&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;metalscrap&#34;] = 50,&#xA;            [&#34;steel&#34;] = 37,&#xA;            [&#34;copper&#34;] = 26,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 8,&#xA;        threshold = 250,&#xA;        points = 8,&#xA;    },&#xA;    [9] = {&#xA;        name = &#34;ironoxide&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;iron&#34;] = 60,&#xA;            [&#34;glass&#34;] = 30,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 9,&#xA;        threshold = 300,&#xA;        points = 9,&#xA;    },&#xA;    [10] = {&#xA;        name = &#34;aluminumoxide&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;aluminum&#34;] = 60,&#xA;            [&#34;glass&#34;] = 30,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 10,&#xA;        threshold = 300,&#xA;        points = 10,&#xA;    },&#xA;    [11] = {&#xA;        name = &#34;armor&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;iron&#34;] = 33,&#xA;            [&#34;steel&#34;] = 44,&#xA;            [&#34;plastic&#34;] = 55,&#xA;            [&#34;aluminum&#34;] = 22,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 11,&#xA;        threshold = 350,&#xA;        points = 11,&#xA;    },&#xA;    [12] = {&#xA;        name = &#34;drill&#34;,&#xA;        amount = 50,&#xA;        info = {},&#xA;        costs = {&#xA;            [&#34;iron&#34;] = 50,&#xA;            [&#34;steel&#34;] = 50,&#xA;            [&#34;screwdriverset&#34;] = 3,&#xA;            [&#34;advancedlockpick&#34;] = 2,&#xA;        },&#xA;        type = &#34;item&#34;,&#xA;        slot = 12,&#xA;        threshold = 1750,&#xA;        points = 12,&#xA;    },&#xA;}&#xA;&#xA;Config.AttachmentCraftingLocation = vector3(88.91, 3743.88, 40.77)&#xA;&#xA;Config.AttachmentCrafting = {&#xA;    [&#34;items&#34;] = {&#xA;        [1] = {&#xA;            name = &#34;pistol_extendedclip&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 140,&#xA;                [&#34;steel&#34;] = 250,&#xA;                [&#34;rubber&#34;] = 60,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 1,&#xA;            threshold = 0,&#xA;            points = 1,&#xA;        },&#xA;        [2] = {&#xA;            name = &#34;pistol_suppressor&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 165,&#xA;                [&#34;steel&#34;] = 285,&#xA;                [&#34;rubber&#34;] = 75,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 2,&#xA;            threshold = 10,&#xA;            points = 2,&#xA;        },&#xA;        [3] = {&#xA;            name = &#34;smg_extendedclip&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 190,&#xA;                [&#34;steel&#34;] = 305,&#xA;                [&#34;rubber&#34;] = 85,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 3,&#xA;            threshold = 25,&#xA;            points = 3,&#xA;        },&#xA;        [4] = {&#xA;            name = &#34;microsmg_extendedclip&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 205,&#xA;                [&#34;steel&#34;] = 340,&#xA;                [&#34;rubber&#34;] = 110,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 4,&#xA;            threshold = 50,&#xA;            points = 4,&#xA;        },&#xA;        [5] = {&#xA;            name = &#34;smg_drum&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 230,&#xA;                [&#34;steel&#34;] = 365,&#xA;                [&#34;rubber&#34;] = 130,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 5,&#xA;            threshold = 75,&#xA;            points = 5,&#xA;        },&#xA;        [6] = {&#xA;            name = &#34;smg_scope&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 255,&#xA;                [&#34;steel&#34;] = 390,&#xA;                [&#34;rubber&#34;] = 145,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 6,&#xA;            threshold = 100,&#xA;            points = 6,&#xA;        },&#xA;        [7] = {&#xA;            name = &#34;assaultrifle_extendedclip&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 270,&#xA;                [&#34;steel&#34;] = 435,&#xA;                [&#34;rubber&#34;] = 155,&#xA;                [&#34;smg_extendedclip&#34;] = 1,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 7,&#xA;            threshold = 150,&#xA;            points = 7,&#xA;        },&#xA;        [8] = {&#xA;            name = &#34;assaultrifle_drum&#34;,&#xA;            amount = 50,&#xA;            info = {},&#xA;            costs = {&#xA;                [&#34;metalscrap&#34;] = 300,&#xA;                [&#34;steel&#34;] = 469,&#xA;                [&#34;rubber&#34;] = 170,&#xA;                [&#34;smg_extendedclip&#34;] = 2,&#xA;            },&#xA;            type = &#34;item&#34;,&#xA;            slot = 8,&#xA;            threshold = 200,&#xA;            points = 8,&#xA;        },&#xA;    }&#xA;}&#xA;&#xA;BackEngineVehicles = {&#xA;    [`ninef`] = true,&#xA;    [`adder`] = true,&#xA;    [`vagner`] = true,&#xA;    [`t20`] = true,&#xA;    [`infernus`] = true,&#xA;    [`zentorno`] = true,&#xA;    [`reaper`] = true,&#xA;    [`comet2`] = true,&#xA;    [`comet3`] = true,&#xA;    [`jester`] = true,&#xA;    [`jester2`] = true,&#xA;    [`cheetah`] = true,&#xA;    [`cheetah2`] = true,&#xA;    [`prototipo`] = true,&#xA;    [`turismor`] = true,&#xA;    [`pfister811`] = true,&#xA;    [`ardent`] = true,&#xA;    [`nero`] = true,&#xA;    [`nero2`] = true,&#xA;    [`tempesta`] = true,&#xA;    [`vacca`] = true,&#xA;    [`bullet`] = true,&#xA;    [`osiris`] = true,&#xA;    [`entityxf`] = true,&#xA;    [`turismo2`] = true,&#xA;    [`fmj`] = true,&#xA;    [`re7b`] = true,&#xA;    [`tyrus`] = true,&#xA;    [`italigtb`] = true,&#xA;    [`penetrator`] = true,&#xA;    [`monroe`] = true,&#xA;    [`ninef2`] = true,&#xA;    [`stingergt`] = true,&#xA;    [`surfer`] = true,&#xA;    [`surfer2`] = true,&#xA;    [`gp1`] = true,&#xA;    [`autarch`] = true,&#xA;    [`tyrant`] = true&#xA;}&#xA;&#xA;Config.MaximumAmmoValues = {&#xA;    [&#34;pistol&#34;] = 250,&#xA;    [&#34;smg&#34;] = 250,&#xA;    [&#34;shotgun&#34;] = 200,&#xA;    [&#34;rifle&#34;] = 250,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>