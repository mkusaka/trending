<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-06-01T01:41:26Z</updated>
  <subtitle>Weekly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>greggh/claude-code.nvim</title>
    <updated>2025-06-01T01:41:26Z</updated>
    <id>tag:github.com,2025-06-01:/greggh/claude-code.nvim</id>
    <link href="https://github.com/greggh/claude-code.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Seamless integration between Claude Code AI assistant and Neovim&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code Neovim Plugin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/greggh/claude-code.nvim/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/greggh/claude-code.nvim?style=flat-square&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/greggh/claude-code.nvim/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/greggh/claude-code.nvim?style=flat-square&#34; alt=&#34;GitHub Stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/greggh/claude-code.nvim/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/greggh/claude-code.nvim?style=flat-square&#34; alt=&#34;GitHub Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/greggh/claude-code.nvim/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/greggh/claude-code.nvim/ci.yml?branch=main&amp;amp;style=flat-square&amp;amp;logo=github&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Neovim-0.7%2B-blueviolet?style=flat-square&amp;amp;logo=neovim&#34; alt=&#34;Neovim Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/greggh/claude-code.nvim/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Tests-44%20passing-success?style=flat-square&amp;amp;logo=github-actions&#34; alt=&#34;Tests&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/greggh/claude-code.nvim/releases/tag/v0.4.2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Version-0.4.2-blue?style=flat-square&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/greggh/claude-code.nvim/discussions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/discussions/greggh/claude-code.nvim?style=flat-square&amp;amp;logo=github&#34; alt=&#34;Discussions&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;A seamless integration between &lt;a href=&#34;https://github.com/anthropics/claude-code&#34;&gt;Claude Code&lt;/a&gt; AI assistant and Neovim&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/#features&#34;&gt;Features&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/#requirements&#34;&gt;Requirements&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/#installation&#34;&gt;Installation&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/#configuration&#34;&gt;Configuration&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/#usage&#34;&gt;Usage&lt;/a&gt; • &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/#contributing&#34;&gt;Contributing&lt;/a&gt; • &lt;a href=&#34;https://github.com/greggh/claude-code.nvim/discussions&#34;&gt;Discussions&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/greggh/claude-code.nvim/raw/main/assets/claude-code.png?raw=true&#34; alt=&#34;Claude Code in Neovim&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin was built entirely with Claude Code in a Neovim terminal, and then inside itself using Claude Code for everything!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🚀 Toggle Claude Code in a terminal window with a single key press&lt;/li&gt; &#xA; &lt;li&gt;🧠 Support for command-line arguments like &lt;code&gt;--continue&lt;/code&gt; and custom variants&lt;/li&gt; &#xA; &lt;li&gt;🔄 Automatically detect and reload files modified by Claude Code&lt;/li&gt; &#xA; &lt;li&gt;⚡ Real-time buffer updates when files are changed externally&lt;/li&gt; &#xA; &lt;li&gt;📱 Customizable window position and size&lt;/li&gt; &#xA; &lt;li&gt;🤖 Integration with which-key (if available)&lt;/li&gt; &#xA; &lt;li&gt;📂 Automatically uses git project root as working directory (when available)&lt;/li&gt; &#xA; &lt;li&gt;🧩 Modular and maintainable code structure&lt;/li&gt; &#xA; &lt;li&gt;📋 Type annotations with LuaCATS for better IDE support&lt;/li&gt; &#xA; &lt;li&gt;✅ Configuration validation to prevent errors&lt;/li&gt; &#xA; &lt;li&gt;🧪 Testing framework for reliability (44 comprehensive tests)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim 0.7.0 or later&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/claude-code&#34;&gt;Claude Code CLI&lt;/a&gt; tool installed and available in your PATH&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt; (dependency for git operations)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/CHANGELOG.md&#34;&gt;CHANGELOG.md&lt;/a&gt; for version history and updates.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Using &lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return {&#xA;  &#34;greggh/claude-code.nvim&#34;,&#xA;  dependencies = {&#xA;    &#34;nvim-lua/plenary.nvim&#34;, -- Required for git operations&#xA;  },&#xA;  config = function()&#xA;    require(&#34;claude-code&#34;).setup()&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;greggh/claude-code.nvim&#39;,&#xA;  requires = {&#xA;    &#39;nvim-lua/plenary.nvim&#39;, -- Required for git operations&#xA;  },&#xA;  config = function()&#xA;    require(&#39;claude-code&#39;).setup()&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#39;nvim-lua/plenary.nvim&#39;&#xA;Plug &#39;greggh/claude-code.nvim&#39;&#xA;&#34; After installing, add this to your init.vim:&#xA;&#34; lua require(&#39;claude-code&#39;).setup()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;The plugin can be configured by passing a table to the &lt;code&gt;setup&lt;/code&gt; function. Here&#39;s the default configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;claude-code&#34;).setup({&#xA;  -- Terminal window settings&#xA;  window = {&#xA;    split_ratio = 0.3,      -- Percentage of screen for the terminal window (height for horizontal, width for vertical splits)&#xA;    position = &#34;botright&#34;,  -- Position of the window: &#34;botright&#34;, &#34;topleft&#34;, &#34;vertical&#34;, &#34;rightbelow vsplit&#34;, etc.&#xA;    enter_insert = true,    -- Whether to enter insert mode when opening Claude Code&#xA;    hide_numbers = true,    -- Hide line numbers in the terminal window&#xA;    hide_signcolumn = true, -- Hide the sign column in the terminal window&#xA;  },&#xA;  -- File refresh settings&#xA;  refresh = {&#xA;    enable = true,           -- Enable file change detection&#xA;    updatetime = 100,        -- updatetime when Claude Code is active (milliseconds)&#xA;    timer_interval = 1000,   -- How often to check for file changes (milliseconds)&#xA;    show_notifications = true, -- Show notification when files are reloaded&#xA;  },&#xA;  -- Git project settings&#xA;  git = {&#xA;    use_git_root = true,     -- Set CWD to git root when opening Claude Code (if in git project)&#xA;  },&#xA;  -- Command settings&#xA;  command = &#34;claude&#34;,        -- Command used to launch Claude Code&#xA;  -- Command variants&#xA;  command_variants = {&#xA;    -- Conversation management&#xA;    continue = &#34;--continue&#34;, -- Resume the most recent conversation&#xA;    resume = &#34;--resume&#34;,     -- Display an interactive conversation picker&#xA;&#xA;    -- Output options&#xA;    verbose = &#34;--verbose&#34;,   -- Enable verbose logging with full turn-by-turn output&#xA;  },&#xA;  -- Keymaps&#xA;  keymaps = {&#xA;    toggle = {&#xA;      normal = &#34;&amp;lt;C-,&amp;gt;&#34;,       -- Normal mode keymap for toggling Claude Code, false to disable&#xA;      terminal = &#34;&amp;lt;C-,&amp;gt;&#34;,     -- Terminal mode keymap for toggling Claude Code, false to disable&#xA;      variants = {&#xA;        continue = &#34;&amp;lt;leader&amp;gt;cC&#34;, -- Normal mode keymap for Claude Code with continue flag&#xA;        verbose = &#34;&amp;lt;leader&amp;gt;cV&#34;,  -- Normal mode keymap for Claude Code with verbose flag&#xA;      },&#xA;    },&#xA;    window_navigation = true, -- Enable window navigation keymaps (&amp;lt;C-h/j/k/l&amp;gt;)&#xA;    scrolling = true,         -- Enable scrolling keymaps (&amp;lt;C-f/b&amp;gt;) for page up/down&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; In your Vim/Neovim commands or init file:&#xA;:ClaudeCode&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Or from Lua:&#xA;vim.cmd[[ClaudeCode]]&#xA;&#xA;-- Or map to a key:&#xA;vim.keymap.set(&#39;n&#39;, &#39;&amp;lt;leader&amp;gt;cc&#39;, &#39;&amp;lt;cmd&amp;gt;ClaudeCode&amp;lt;CR&amp;gt;&#39;, { desc = &#39;Toggle Claude Code&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;p&gt;Basic command:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:ClaudeCode&lt;/code&gt; - Toggle the Claude Code terminal window&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Conversation management commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:ClaudeCodeContinue&lt;/code&gt; - Resume the most recent conversation&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:ClaudeCodeResume&lt;/code&gt; - Display an interactive conversation picker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Output options command:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:ClaudeCodeVerbose&lt;/code&gt; - Enable verbose logging with full turn-by-turn output&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: Commands are automatically generated for each entry in your &lt;code&gt;command_variants&lt;/code&gt; configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Key Mappings&lt;/h3&gt; &#xA;&lt;p&gt;Default key mappings:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;ac&lt;/code&gt; - Toggle Claude Code terminal window (normal mode)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-,&amp;gt;&lt;/code&gt; - Toggle Claude Code terminal window (both normal and terminal modes)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Variant mode mappings (if configured):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;cC&lt;/code&gt; - Toggle Claude Code with --continue flag&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;leader&amp;gt;cV&lt;/code&gt; - Toggle Claude Code with --verbose flag&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Additionally, when in the Claude Code terminal:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-h&amp;gt;&lt;/code&gt; - Move to the window on the left&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-j&amp;gt;&lt;/code&gt; - Move to the window below&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-k&amp;gt;&lt;/code&gt; - Move to the window above&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-l&amp;gt;&lt;/code&gt; - Move to the window on the right&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-f&amp;gt;&lt;/code&gt; - Scroll full-page down&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt; - Scroll full-page up&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: After scrolling with &lt;code&gt;&amp;lt;C-f&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt;, you&#39;ll need to press the &lt;code&gt;i&lt;/code&gt; key to re-enter insert mode so you can continue typing to Claude Code.&lt;/p&gt; &#xA;&lt;p&gt;When Claude Code modifies files that are open in Neovim, they&#39;ll be automatically reloaded.&lt;/p&gt; &#xA;&lt;h2&gt;How it Works&lt;/h2&gt; &#xA;&lt;p&gt;This plugin:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Creates a terminal buffer running the Claude Code CLI&lt;/li&gt; &#xA; &lt;li&gt;Sets up autocommands to detect file changes on disk&lt;/li&gt; &#xA; &lt;li&gt;Automatically reloads files when they&#39;re modified by Claude Code&lt;/li&gt; &#xA; &lt;li&gt;Provides convenient keymaps and commands for toggling the terminal&lt;/li&gt; &#xA; &lt;li&gt;Automatically detects git repositories and sets working directory to the git root&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! Please check out our &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; for details on how to get started.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT License - See &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;For a complete guide on setting up a development environment, installing all required tools, and understanding the project structure, please refer to &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/DEVELOPMENT.md&#34;&gt;DEVELOPMENT.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Development Setup&lt;/h3&gt; &#xA;&lt;p&gt;The project includes comprehensive setup for development:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Complete installation instructions for all platforms in &lt;a href=&#34;https://raw.githubusercontent.com/greggh/claude-code.nvim/main/DEVELOPMENT.md&#34;&gt;DEVELOPMENT.md&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pre-commit hooks for code quality&lt;/li&gt; &#xA; &lt;li&gt;Testing framework with 44 comprehensive tests&lt;/li&gt; &#xA; &lt;li&gt;Linting and formatting tools&lt;/li&gt; &#xA; &lt;li&gt;Weekly dependency updates workflow for Claude CLI and actions&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Run tests&#xA;make test&#xA;&#xA;# Check code quality&#xA;make lint&#xA;&#xA;# Set up pre-commit hooks&#xA;scripts/setup-hooks.sh&#xA;&#xA;# Format code&#xA;make format&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/greggh/claude-code.nvim/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; - Get help, share ideas, and connect with other users&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/greggh/claude-code.nvim/issues&#34;&gt;GitHub Issues&lt;/a&gt; - Report bugs or suggest features&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/greggh/claude-code.nvim/pulls&#34;&gt;GitHub Pull Requests&lt;/a&gt; - Contribute to the project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/anthropics/claude-code&#34;&gt;Claude Code&lt;/a&gt; by Anthropic - This plugin was entirely built using Claude Code. Development cost: $5.42 with 17m 12.9s of API time&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;Plenary.nvim&lt;/a&gt; - Core dependency for testing framework and Git operations&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt; - Versioning standard used in this project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.contributor-covenant.org/&#34;&gt;Contributor Covenant&lt;/a&gt; - Code of Conduct standard&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://keepachangelog.com/&#34;&gt;Keep a Changelog&lt;/a&gt; - Changelog format&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://luals.github.io/wiki/annotations/&#34;&gt;LuaCATS&lt;/a&gt; - Type annotations for better IDE support&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JohnnyMorganz/StyLua&#34;&gt;StyLua&lt;/a&gt; - Lua code formatter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lunarmodules/luacheck&#34;&gt;Luacheck&lt;/a&gt; - Lua static analyzer and linter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Made with ❤️ by &lt;a href=&#34;https://github.com/greggh&#34;&gt;Gregg Housh&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Grokitach/Stalker_GAMMA</title>
    <updated>2025-06-01T01:41:26Z</updated>
    <id>tag:github.com,2025-06-01:/Grokitach/Stalker_GAMMA</id>
    <link href="https://github.com/Grokitach/Stalker_GAMMA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;S.T.A.L.K.E.R. Anomaly G.A.M.M.A. modpack definition files.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/84c1bc08-f957-4372-bc98-3bef29f666d1&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Description&lt;/h2&gt; &#xA;&lt;p&gt;G.A.M.M.A. stands for Gigantic Automated Modular Modpack for Anomaly. This modpack for the 100% free and standalone STALKER Anomaly changes &lt;em&gt;every&lt;/em&gt; aspect of the game, from the entire economy to the minute detail statistic of every gun and artefact.&lt;/p&gt; &#xA;&lt;p&gt;From a technical point of view, the main motivation behind this project is to provide an easy to install, automatically updated and modular modding platform for Stalker Anomaly. From a gameplay point of view, the default parameters and mods activated with G.A.M.M.A. aim at providing a balanced survival, scavenging, cooking, crafting and repairing focused experience with a streamlined gameplay. GAMMA aims at creating a meaningful and enjoyable sense of progression in the sandbox Chernobyl Exclusion Zone of STALKER Anomaly.&lt;/p&gt; &#xA;&lt;p&gt;The sense of progression in GAMMA is achieved through different aspects, that you can customise to some extent:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The more to the north you go, the more dangerous the Zone is (stronger stalkers, stronger mutants, more deadly anomalies, stronger radiations) but the better are the rewards (better gear, better toolkits, better artefacts).&lt;/li&gt; &#xA; &lt;li&gt;Gear acquisition is locked behind getting toolkits that are obtained by visiting rare stashes acquired by accomplishing several maps.&lt;/li&gt; &#xA; &lt;li&gt;Guns with green barrels will deal full damage and just need few parts of good quality to stop jamming (without the need of toolkits or repair kits).&lt;/li&gt; &#xA; &lt;li&gt;The gear you find on enemies need to be repaired using repair kits crafted using toolkits.&lt;/li&gt; &#xA; &lt;li&gt;The artefacts you find are immediately useable but need to be empowered by combining artefacts to achieve higher protection levels (using a specific tool buyable at Ecologists).&lt;/li&gt; &#xA; &lt;li&gt;Access to the North of the Zone is locked behind completing the Miracle Machine and the Brain Scorcher.&lt;/li&gt; &#xA; &lt;li&gt;GAMMA removes all gear trading, meaning you cannot buy or sell weapons or armor.&lt;/li&gt; &#xA; &lt;li&gt;GAMMA removes random stash loot, so you can&#39;t just run to the meta stashes and have endgame equipment instantly.&lt;/li&gt; &#xA; &lt;li&gt;The healing system uses multiple body parts that get damaged individually and that you heal by using first-aid kits/bandages/stimpacks followed by post-heal items such as antibiotics, antidotes, painkillers, and anti-inflammatory drugs.&lt;/li&gt; &#xA; &lt;li&gt;GAMMA completely revamps the STALKER Anomaly graphics, gun models, animations, A-life, Combat AI and much more thanks to the many mods made by the community.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;This modpack is 100% copyright free since it redistributes little to no copyrighted content developed by other modders. Indeed, G.A.M.M.A. downloads every add-on directly from moddb or github, and installs them automatically. You will thus directly support modders by installing G.A.M.M.A. On top of this, each addon original source (moddb or github page) is directly accessible from the Mod Organizer 2 instance by right-clicking addons &amp;gt; visit moddb.com.&lt;/p&gt; &#xA;&lt;h2&gt;Installation and content of this repository&lt;/h2&gt; &#xA;&lt;p&gt;S.T.A.L.K.E.R. Anomaly G.A.M.M.A. modpack &#34;actively updated&#34; files are stored in this repository.&lt;/p&gt; &#xA;&lt;p&gt;For the complete client (heavy, rarely modified files) necessary for this repository to work, you need to download it and follow the installation instructions stored in the associated discord server. A team of people is ready to help you with your questions and potential issues related to this project: &lt;a href=&#34;https://discord.gg/stalker-gamma&#34;&gt;https://discord.gg/stalker-gamma&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Any Pull Request should be made &lt;strong&gt;to the dev2 branch&lt;/strong&gt;. Anyone can contribute to this project.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;S.T.A.L.K.E.R. G.A.M.M.A. is a fan-created modification for S.T.A.L.K.E.R. games, developed and wholly owned by GSC Game World. S.T.A.L.K.E.R. G.A.M.M.A. is not an official product of GSC Game World and is a derivative work based on their S.T.A.L.K.E.R. games.&lt;/p&gt; &#xA;&lt;p&gt;You can support GSC by buying the original games here (although, they are not needed to play GAMMA):&lt;/p&gt; &#xA;&lt;p&gt;Steam: &lt;a href=&#34;https://store.steampowered.com/franchise/stalker&#34;&gt;https://store.steampowered.com/franchise/stalker&lt;/a&gt; GOG: &lt;a href=&#34;https://www.gog.com/en/game/stalker_shadow_of_chernobyl&#34;&gt;https://www.gog.com/en/game/stalker_shadow_of_chernobyl&lt;/a&gt; | &lt;a href=&#34;https://www.gog.com/en/game/stalker_clear_sky&#34;&gt;https://www.gog.com/en/game/stalker_clear_sky&lt;/a&gt; | &lt;a href=&#34;https://www.gog.com/en/game/stalker_call_of_pripyat&#34;&gt;https://www.gog.com/en/game/stalker_call_of_pripyat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;GAMMA is a large project using the work of many talented modders, and each and everyone one of them are contributing to making Stalker Anomaly a better experience. You can check the entire modlist, modder names and mod pages link used by GAMMA here: &lt;a href=&#34;https://stalker-gamma.com/api/list&#34;&gt;https://stalker-gamma.com/api/list&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;I would like to thank all the modders involved in this project by making all the GAMMA addons free to use, edit and repost with modifications as long as the source is indicated (original addon author, from Stalker GAMMA). For numbered addons (105-), original authors must be contacted before repost and modifications. Repost of unmodified individual parts of this project are not recommended and may harm the community in the long run because updates happen quite often in this repository and it is thus better to directly post links to the relevant files stored here.&lt;/p&gt; &#xA;&lt;h2&gt;Other Projects&lt;/h2&gt; &#xA;&lt;p&gt;I also made a modpack for Dragon&#39;s Dogma 2 called &#34;Dragon&#39;s Dogamma&#34;, for which I notably remade the entire gear looting system to put more emphasis on exploration and boss hunting instead of buying gear from shops: &lt;a href=&#34;https://github.com/Grokitach/Dragons-Dogamma&#34;&gt;https://github.com/Grokitach/Dragons-Dogamma&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>