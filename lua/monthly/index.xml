<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-04-01T01:58:16Z</updated>
  <subtitle>Monthly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>zbirenbaum/copilot.lua</title>
    <updated>2025-04-01T01:58:16Z</updated>
    <id>tag:github.com,2025-04-01:/zbirenbaum/copilot.lua</id>
    <link href="https://github.com/zbirenbaum/copilot.lua" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fully featured &amp; enhanced replacement for copilot.vim complete with API for interacting with Github Copilot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;copilot.lua&lt;/h1&gt; &#xA;&lt;p&gt;This plugin is the pure lua replacement for &lt;a href=&#34;https://github.com/github/copilot.vim&#34;&gt;github/copilot.vim&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Motivation behind `copilot.lua`&lt;/summary&gt; &#xA; &lt;p&gt;While using &lt;code&gt;copilot.vim&lt;/code&gt;, for the first time since I started using neovim my laptop began to overheat. Additionally, I found the large chunks of ghost text moving around my code, and interfering with my existing cmp ghost text disturbing. As lua is far more efficient and makes things easier to integrate with modern plugins, this repository was created.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Curl&lt;/li&gt; &#xA; &lt;li&gt;NeoVim 0.10.0 or higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred plugin manager. For example, with &lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;packer.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use { &#34;zbirenbaum/copilot.lua&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Authentication&lt;/h3&gt; &#xA;&lt;p&gt;You can authenticate using one of the following methods:&lt;/p&gt; &#xA;&lt;h4&gt;Permanent sign-in (Recommended)&lt;/h4&gt; &#xA;&lt;p&gt;Once copilot is running, run &lt;code&gt;:Copilot auth&lt;/code&gt; to start the authentication process.&lt;/p&gt; &#xA;&lt;h4&gt;Token&lt;/h4&gt; &#xA;&lt;p&gt;Get a token from the github cli using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;gh auth token&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set either the environment variable &lt;code&gt;GITHUB_COPILOT_TOKEN&lt;/code&gt; or &lt;code&gt;GH_COPILOT_TOKEN&lt;/code&gt; to that token. Note that if you have the variable set, even empty, the LSP will attempt to use it to log in.&lt;/p&gt; &#xA;&lt;h2&gt;Setup and Configuration&lt;/h2&gt; &#xA;&lt;p&gt;You have to run the &lt;code&gt;require(&#34;copilot&#34;).setup(options)&lt;/code&gt; function in order to start Copilot. If no options are provided, the defaults are used.&lt;/p&gt; &#xA;&lt;p&gt;Because the copilot server takes some time to start up, it is recommended that you lazy load copilot. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#34;zbirenbaum/copilot.lua&#34;,&#xA;  cmd = &#34;Copilot&#34;,&#xA;  event = &#34;InsertEnter&#34;,&#xA;  config = function()&#xA;    require(&#34;copilot&#34;).setup({})&#xA;  end,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The following is the default configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#39;copilot&#39;).setup({&#xA;  panel = {&#xA;    enabled = true,&#xA;    auto_refresh = false,&#xA;    keymap = {&#xA;      jump_prev = &#34;[[&#34;,&#xA;      jump_next = &#34;]]&#34;,&#xA;      accept = &#34;&amp;lt;CR&amp;gt;&#34;,&#xA;      refresh = &#34;gr&#34;,&#xA;      open = &#34;&amp;lt;M-CR&amp;gt;&#34;&#xA;    },&#xA;    layout = {&#xA;      position = &#34;bottom&#34;, -- | top | left | right | horizontal | vertical&#xA;      ratio = 0.4&#xA;    },&#xA;  },&#xA;  suggestion = {&#xA;    enabled = true,&#xA;    auto_trigger = false,&#xA;    hide_during_completion = true,&#xA;    debounce = 75,&#xA;    keymap = {&#xA;      accept = &#34;&amp;lt;M-l&amp;gt;&#34;,&#xA;      accept_word = false,&#xA;      accept_line = false,&#xA;      next = &#34;&amp;lt;M-]&amp;gt;&#34;,&#xA;      prev = &#34;&amp;lt;M-[&amp;gt;&#34;,&#xA;      dismiss = &#34;&amp;lt;C-]&amp;gt;&#34;,&#xA;    },&#xA;  },&#xA;  filetypes = {&#xA;    yaml = false,&#xA;    markdown = false,&#xA;    help = false,&#xA;    gitcommit = false,&#xA;    gitrebase = false,&#xA;    hgcommit = false,&#xA;    svn = false,&#xA;    cvs = false,&#xA;    [&#34;.&#34;] = false,&#xA;  },&#xA;  logger = {&#xA;    file = vim.fn.stdpath(&#34;log&#34;) .. &#34;/copilot-lua.log&#34;,&#xA;    file_log_level = vim.log.levels.OFF,&#xA;    print_log_level = vim.log.levels.WARN,&#xA;    trace_lsp = &#34;off&#34;, -- &#34;off&#34; | &#34;messages&#34; | &#34;verbose&#34;&#xA;    trace_lsp_progress = false,&#xA;    log_lsp_messages = false,&#xA;  },&#xA;  copilot_node_command = &#39;node&#39;, -- Node.js version must be &amp;gt; 20&#xA;  workspace_folders = {},&#xA;  copilot_model = &#34;&#34;,  -- Current LSP default is gpt-35-turbo, supports gpt-4o-copilot&#xA;  root_dir = function()&#xA;    return vim.fs.dirname(vim.fs.find(&#34;.git&#34;, { upward = true })[1])&#xA;  end,&#xA;  should_attach = function(_, _)&#xA;    if not vim.bo.buflisted then&#xA;      logger.debug(&#34;not attaching, buffer is not &#39;buflisted&#39;&#34;)&#xA;      return false&#xA;    end&#xA;&#xA;    if vim.bo.buftype ~= &#34;&#34; then&#xA;      logger.debug(&#34;not attaching, buffer &#39;buftype&#39; is &#34; .. vim.bo.buftype)&#xA;      return false&#xA;    end&#xA;&#xA;    return true&#xA;  end,&#xA;  server = {&#xA;    type = &#34;nodejs&#34;, -- &#34;nodejs&#34; | &#34;binary&#34;&#xA;    custom_server_filepath = nil,&#xA;  },&#xA;  server_opts_overrides = {},&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;panel&lt;/h3&gt; &#xA;&lt;p&gt;Panel can be used to preview suggestions in a split window. You can run the &lt;code&gt;:Copilot panel&lt;/code&gt; command to open it.&lt;/p&gt; &#xA;&lt;p&gt;If &lt;code&gt;auto_refresh&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the suggestions are refreshed as you type in the buffer.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;copilot.panel&lt;/code&gt; module exposes the following functions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;copilot.panel&#34;).accept()&#xA;require(&#34;copilot.panel&#34;).jump_next()&#xA;require(&#34;copilot.panel&#34;).jump_prev()&#xA;require(&#34;copilot.panel&#34;).open({position, ratio})&#xA;require(&#34;copilot.panel&#34;).toggle()&#xA;require(&#34;copilot.panel&#34;).refresh()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;suggestion&lt;/h3&gt; &#xA;&lt;p&gt;When &lt;code&gt;auto_trigger&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, copilot starts suggesting as soon as you enter insert mode. When &lt;code&gt;auto_trigger&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, use the &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;prev&lt;/code&gt; or &lt;code&gt;accept&lt;/code&gt; keymap to trigger copilot suggestion.&lt;/p&gt; &#xA;&lt;p&gt;To toggle auto trigger for the current buffer, use &lt;code&gt;require(&#34;copilot.suggestion&#34;).toggle_auto_trigger()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Copilot suggestion is automatically hidden when &lt;code&gt;popupmenu-completion&lt;/code&gt; is open. In case you use a custom menu for completion, you can set the &lt;code&gt;copilot_suggestion_hidden&lt;/code&gt; buffer variable to &lt;code&gt;true&lt;/code&gt; to have the same behavior.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Example using nvim-cmp&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;cmp.event:on(&#34;menu_opened&#34;, function()&#xA;  vim.b.copilot_suggestion_hidden = true&#xA;end)&#xA;&#xA;cmp.event:on(&#34;menu_closed&#34;, function()&#xA;  vim.b.copilot_suggestion_hidden = false&#xA;end)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Example using blink.cmp&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_create_autocmd(&#34;User&#34;, {&#xA;  pattern = &#34;BlinkCmpMenuOpen&#34;,&#xA;  callback = function()&#xA;    vim.b.copilot_suggestion_hidden = true&#xA;  end,&#xA;})&#xA;&#xA;vim.api.nvim_create_autocmd(&#34;User&#34;, {&#xA;  pattern = &#34;BlinkCmpMenuClose&#34;,&#xA;  callback = function()&#xA;    vim.b.copilot_suggestion_hidden = false&#xA;  end,&#xA;})&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;The &lt;code&gt;copilot.suggestion&lt;/code&gt; module exposes the following functions:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;copilot.suggestion&#34;).is_visible()&#xA;require(&#34;copilot.suggestion&#34;).accept(modifier)&#xA;require(&#34;copilot.suggestion&#34;).accept_word()&#xA;require(&#34;copilot.suggestion&#34;).accept_line()&#xA;require(&#34;copilot.suggestion&#34;).next()&#xA;require(&#34;copilot.suggestion&#34;).prev()&#xA;require(&#34;copilot.suggestion&#34;).dismiss()&#xA;require(&#34;copilot.suggestion&#34;).toggle_auto_trigger()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;filetypes&lt;/h3&gt; &#xA;&lt;p&gt;Specify filetypes for attaching copilot.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;copilot&#34;).setup {&#xA;  filetypes = {&#xA;    markdown = true, -- overrides default&#xA;    terraform = false, -- disallow specific filetype&#xA;    sh = function ()&#xA;      if string.match(vim.fs.basename(vim.api.nvim_buf_get_name(0)), &#39;^%.env.*&#39;) then&#xA;        -- disable for .env files&#xA;        return false&#xA;      end&#xA;      return true&#xA;    end,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you add &lt;code&gt;&#34;*&#34;&lt;/code&gt; as a filetype, the default configuration for &lt;code&gt;filetypes&lt;/code&gt; won&#39;t be used anymore. e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;copilot&#34;).setup {&#xA;  filetypes = {&#xA;    javascript = true, -- allow specific filetype&#xA;    typescript = true, -- allow specific filetype&#xA;    [&#34;*&#34;] = false, -- disable for all other filetypes and ignore default `filetypes`&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;logger&lt;/h3&gt; &#xA;&lt;p&gt;Logs will be written to the &lt;code&gt;file&lt;/code&gt; for anything of &lt;code&gt;file_log_level&lt;/code&gt; or higher. Logs will be printed to NeoVim (using &lt;code&gt;notify&lt;/code&gt;) for anything of &lt;code&gt;print_log_level&lt;/code&gt; or higher. To turn either off, simply set its level to &lt;code&gt;vim.log.levels.OFF&lt;/code&gt;. File logging is done asynchronously to minimize performance impacts, however there is still some overhead.&lt;/p&gt; &#xA;&lt;p&gt;Log levels used are the ones defined in &lt;code&gt;vim.log&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.log = {&#xA;  levels = {&#xA;    TRACE = 0,&#xA;    DEBUG = 1,&#xA;    INFO = 2,&#xA;    WARN = 3,&#xA;    ERROR = 4,&#xA;    OFF = 5,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;trace_lsp&lt;/code&gt; controls logging of LSP trace messages (&lt;code&gt;$/logTrace&lt;/code&gt;) can either be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;off&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;messages&lt;/code&gt; which will output the LSP messages&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;verbose&lt;/code&gt; which adds additonal information to the message.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;When &lt;code&gt;trace_lsp_progress&lt;/code&gt; is true, LSP progress messages (&lt;code&gt;$/progress&lt;/code&gt;) will also be logged. When &lt;code&gt;log_lsp_messages&lt;/code&gt; is true, LSP log messages (&lt;code&gt;window/logMessage&lt;/code&gt;) events will be logged.&lt;/p&gt; &#xA;&lt;p&gt;Careful turning on all logging features as the log files may get very large over time, and are not pruned by the application.&lt;/p&gt; &#xA;&lt;h3&gt;copilot_node_command&lt;/h3&gt; &#xA;&lt;p&gt;Use this field to provide the path to a specific node version such as one installed by nvm. Node.js version must be 20 or newer.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;copilot_node_command = vim.fn.expand(&#34;$HOME&#34;) .. &#34;/.config/nvm/versions/node/v20.0.1/bin/node&#34;, -- Node.js version must be &amp;gt; 20&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;server_opts_overrides&lt;/h3&gt; &#xA;&lt;p&gt;Override copilot lsp client settings. The &lt;code&gt;settings&lt;/code&gt; field is where you can set the values of the options defined in &lt;a href=&#34;https://raw.githubusercontent.com/zbirenbaum/copilot.lua/master/SettingsOpts.md&#34;&gt;SettingsOpts.md&lt;/a&gt;. These options are specific to the copilot lsp and can be used to customize its behavior. Ensure that the name field is not overridden as is is used for efficiency reasons in numerous checks to verify copilot is actually running. See &lt;code&gt;:h vim.lsp.start_client&lt;/code&gt; for list of options.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;copilot&#34;).setup {&#xA;  server_opts_overrides = {&#xA;    trace = &#34;verbose&#34;,&#xA;    settings = {&#xA;      advanced = {&#xA;        listCount = 10, -- #completions for panel&#xA;        inlineSuggestCount = 3, -- #completions for getCompletions&#xA;      }&#xA;    },&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;workspace_folders&lt;/h3&gt; &#xA;&lt;p&gt;Workspace folders improve Copilot&#39;s suggestions. By default, the root_dir is used as a wokspace_folder.&lt;/p&gt; &#xA;&lt;p&gt;Additional folders can be added through the configuration as such:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;workspace_folders = {&#xA;  &#34;/home/user/gits&#34;,&#xA;  &#34;/home/user/projects&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;They can also be added runtime, using the command &lt;code&gt;:Copilot workspace add [folderpath]&lt;/code&gt; where &lt;code&gt;[folderpath]&lt;/code&gt; is the workspace folder.&lt;/p&gt; &#xA;&lt;h3&gt;root_dir&lt;/h3&gt; &#xA;&lt;p&gt;This allows changing the function that gets the root folder, the default looks for a parent folder that contains the folder &lt;code&gt;.git&lt;/code&gt;. If none is found, it will use the current working directory.&lt;/p&gt; &#xA;&lt;h3&gt;should_attach&lt;/h3&gt; &#xA;&lt;p&gt;This function is called to determine if copilot should attach to the buffer or not. It is useful if you would like to go beyond the filetypes and have more control over when copilot should attach. You can also use it to attach to buflisted buffers by simply omitting that portion from the function. Since this happens before attaching to the buffer, it is good to prevent Copilot from reading sensitive files.&lt;/p&gt; &#xA;&lt;p&gt;An example of this would be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;copilot&#34;).setup {&#xA;  should_attach = function(_, bufname)&#xA;    if string.match(bufname, &#34;env&#34;) then&#xA;      return false&#xA;    end&#xA;&#xA;    return true&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;server&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION] &amp;gt; &lt;code&gt;&#34;binary&#34;&lt;/code&gt; mode is still very much experimental, please report any issues you encounter.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;code&gt;type&lt;/code&gt; can be either &lt;code&gt;&#34;nodejs&#34;&lt;/code&gt; or &lt;code&gt;&#34;binary&#34;&lt;/code&gt;. The binary version will be downloaded if used.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;custom_server_filepath&lt;/code&gt; is used to specify the path of either the path (filename included) of the &lt;code&gt;js&lt;/code&gt; file if using &lt;code&gt;&#34;nodejs&#34;&lt;/code&gt; or the path to the binary if using &lt;code&gt;&#34;binary&#34;&lt;/code&gt;. When using &lt;code&gt;&#34;binary&#34;&lt;/code&gt;, the download process will be disabled and the binary will be used directly. example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;copilot&#34;).setup {&#xA;  server = {&#xA;    type = &#34;nodejs&#34;,&#xA;    custom_server_filepath = &#34;/home/user/copilot-lsp/language-server.js&#34;,,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;copilot.lua&lt;/code&gt; defines the &lt;code&gt;:Copilot&lt;/code&gt; command that can perform various actions. It has completion support, so try it out.&lt;/p&gt; &#xA;&lt;h2&gt;Integrations&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;code&gt;copilot.api&lt;/code&gt; module can be used to build integrations on top of &lt;code&gt;copilot.lua&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zbirenbaum/copilot-cmp&#34;&gt;zbirenbaum/copilot-cmp&lt;/a&gt;: Integration with &lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;&lt;code&gt;nvim-cmp&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/giuxtaposition/blink-cmp-copilot&#34;&gt;giuxtaposition/blink-cmp-copilot&lt;/a&gt;: Integration with &lt;a href=&#34;https://github.com/Saghen/blink.cmp&#34;&gt;&lt;code&gt;blink.cmp&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fang2hou/blink-copilot&#34;&gt;fang2hou/blink-copilot&lt;/a&gt;: Integration with &lt;a href=&#34;https://github.com/Saghen/blink.cmp&#34;&gt;&lt;code&gt;blink.cmp&lt;/code&gt;&lt;/a&gt;, with some differences.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/AndreM222/copilot-lualine&#34;&gt;AndreM222/copilot-lualine&lt;/a&gt;: Integration with &lt;a href=&#34;https://github.com/nvim-lualine/lualine.nvim&#34;&gt;&lt;code&gt;lualine.nvim&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>CopilotC-Nvim/CopilotChat.nvim</title>
    <updated>2025-04-01T01:58:16Z</updated>
    <id>tag:github.com,2025-04-01:/CopilotC-Nvim/CopilotChat.nvim</id>
    <link href="https://github.com/CopilotC-Nvim/CopilotChat.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Chat with GitHub Copilot in Neovim&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;Copilot Chat for Neovim&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/CopilotC-Nvim/CopilotChat.nvim?logo=github&amp;amp;style=for-the-badge&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/actions/workflows/ci.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/CopilotC-Nvim/CopilotChat.nvim/ci.yml?logo=github&amp;amp;style=for-the-badge&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://copilotc-nvim.github.io/CopilotChat.nvim/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/documentation-up-green.svg?logo=vim&amp;amp;style=for-the-badge&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/CopilotC-Nvim/CopilotChat.nvim/main/#contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/all-contributors/CopilotC-Nvim/CopilotChat.nvim?color=ee8449&amp;amp;logo=github&amp;amp;label=contributors&amp;amp;style=for-the-badge&#34; alt=&#34;Contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/vy6hJsTWaZ&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1200633211236122665?logo=discord&amp;amp;label=discord&amp;amp;style=for-the-badge&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://dotfyle.com/plugins/CopilotC-Nvim/CopilotChat.nvim&#34;&gt;&lt;img src=&#34;https://dotfyle.com/plugins/CopilotC-Nvim/CopilotChat.nvim/shield?style=for-the-badge&#34; alt=&#34;Dotfyle&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://github.com/user-attachments/assets/9ee30811-0fb8-4500-91f6-34ea6b26adea&#34; alt=&#34;image&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/8cad5643-63b2-4641-a5c4-68bc313f20e6&#34;&gt;https://github.com/user-attachments/assets/8cad5643-63b2-4641-a5c4-68bc313f20e6&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;CopilotChat.nvim is a Neovim plugin that brings GitHub Copilot Chat capabilities directly into your editor. It provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🤖 GitHub Copilot Chat integration with official model and agent support (GPT-4o, Claude 3.7 Sonnet, Gemini 2.0 Flash, and more)&lt;/li&gt; &#xA; &lt;li&gt;💻 Rich workspace context powered by smart embeddings system&lt;/li&gt; &#xA; &lt;li&gt;🔒 Explicit context sharing - only sends what you specifically request, either as context or selection&lt;/li&gt; &#xA; &lt;li&gt;🔌 Modular provider architecture supporting both official and custom LLM backends (Ollama, LM Studio, Mistral.ai and more)&lt;/li&gt; &#xA; &lt;li&gt;📝 Interactive chat UI with completion, diffs and quickfix integration&lt;/li&gt; &#xA; &lt;li&gt;🎯 Powerful prompt system with composable templates and sticky prompts&lt;/li&gt; &#xA; &lt;li&gt;🔄 Extensible context providers for granular workspace understanding (buffers, files, git diffs, URLs, and more)&lt;/li&gt; &#xA; &lt;li&gt;⚡ Efficient token usage with tiktoken token counting and memory management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neovim.io/&#34;&gt;Neovim 0.10.0+&lt;/a&gt; - Older versions are not officially supported&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://curl.se/&#34;&gt;curl&lt;/a&gt; - Version 8.0.0+ recommended for best compatibility&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/settings/copilot&#34;&gt;Copilot chat in the IDE&lt;/a&gt; enabled in GitHub settings&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] For Neovim &amp;lt; 0.11.0, add &lt;code&gt;noinsert&lt;/code&gt; or &lt;code&gt;noselect&lt;/code&gt; to your &lt;code&gt;completeopt&lt;/code&gt; otherwise chat autocompletion will not work. For best autocompletion experience, also add &lt;code&gt;popup&lt;/code&gt; to your &lt;code&gt;completeopt&lt;/code&gt; (even on Neovim 0.11.0+).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Optional Dependencies&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gptlang/lua-tiktoken&#34;&gt;tiktoken_core&lt;/a&gt; - For accurate token counting&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Arch Linux: Install &lt;a href=&#34;https://aur.archlinux.org/packages/luajit-tiktoken-bin&#34;&gt;&lt;code&gt;luajit-tiktoken-bin&lt;/code&gt;&lt;/a&gt; or &lt;a href=&#34;https://aur.archlinux.org/packages/lua51-tiktoken-bin&#34;&gt;&lt;code&gt;lua51-tiktoken-bin&lt;/code&gt;&lt;/a&gt; from AUR&lt;/li&gt; &#xA;   &lt;li&gt;Via luarocks: &lt;code&gt;sudo luarocks install --lua-version 5.1 tiktoken_core&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Manual: Download from &lt;a href=&#34;https://github.com/gptlang/lua-tiktoken/releases&#34;&gt;lua-tiktoken releases&lt;/a&gt; and save as &lt;code&gt;tiktoken_core.so&lt;/code&gt; in your Lua path&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; - For git diff context features&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BurntSushi/ripgrep&#34;&gt;ripgrep&lt;/a&gt; - For improved search performance&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://lynx.invisible-island.net/&#34;&gt;lynx&lt;/a&gt; - For improved URL context features&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Integration with pickers&lt;/h2&gt; &#xA;&lt;p&gt;For various plugin pickers to work correctly, you need to replace &lt;code&gt;vim.ui.select&lt;/code&gt; with your desired picker (as the default &lt;code&gt;vim.ui.select&lt;/code&gt; is very basic). Here are some examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ibhagwan/fzf-lua?tab=readme-ov-file#neovim-api&#34;&gt;fzf-lua&lt;/a&gt; - call &lt;code&gt;require(&#39;fzf-lua&#39;).register_ui_select()&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope-ui-select.nvim?tab=readme-ov-file#telescope-setup-and-configuration&#34;&gt;telescope&lt;/a&gt; - setup &lt;code&gt;telescope-ui-select.nvim&lt;/code&gt; plugin&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/folke/snacks.nvim/raw/main/docs/picker.md#%EF%B8%8F-config&#34;&gt;snacks.picker&lt;/a&gt; - enable &lt;code&gt;ui_select&lt;/code&gt; config&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.pick/raw/main/lua/mini/pick.lua#L1229&#34;&gt;mini.pick&lt;/a&gt; - set &lt;code&gt;vim.ui.select = require(&#39;mini.pick&#39;).ui_select&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Plugin features that use picker:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:CopilotChatPrompts&lt;/code&gt; - for selecting prompts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:CopilotChatModels&lt;/code&gt; - for selecting models&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:CopilotChatAgents&lt;/code&gt; - for selecting agents&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;#&amp;lt;context&amp;gt;:&amp;lt;input&amp;gt;&lt;/code&gt; - for selecting context input&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;return {&#xA;  {&#xA;    &#34;CopilotC-Nvim/CopilotChat.nvim&#34;,&#xA;    dependencies = {&#xA;      { &#34;github/copilot.vim&#34; }, -- or zbirenbaum/copilot.lua&#xA;      { &#34;nvim-lua/plenary.nvim&#34;, branch = &#34;master&#34; }, -- for curl, log and async functions&#xA;    },&#xA;    build = &#34;make tiktoken&#34;, -- Only on MacOS or Linux&#xA;    opts = {&#xA;      -- See Configuration section for options&#xA;    },&#xA;    -- See Commands section for default commands if you want to lazy load on them&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/jellydn&#34;&gt;@jellydn&lt;/a&gt; for &lt;a href=&#34;https://github.com/jellydn/lazy-nvim-ide/raw/main/lua/plugins/extras/copilot-chat-v2.lua&#34;&gt;configuration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Similar to the lazy setup, you can use the following configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;call plug#begin()&#xA;Plug &#39;github/copilot.vim&#39;&#xA;Plug &#39;nvim-lua/plenary.nvim&#39;&#xA;Plug &#39;CopilotC-Nvim/CopilotChat.nvim&#39;&#xA;call plug#end()&#xA;&#xA;lua &amp;lt;&amp;lt; EOF&#xA;require(&#34;CopilotChat&#34;).setup {&#xA;  -- See Configuration section for options&#xA;}&#xA;EOF&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Manual&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Put the files in the right place&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;mkdir -p ~/.config/nvim/pack/copilotchat/start&#xA;cd ~/.config/nvim/pack/copilotchat/start&#xA;&#xA;git clone https://github.com/github/copilot.vim&#xA;git clone https://github.com/nvim-lua/plenary.nvim&#xA;&#xA;git clone https://github.com/CopilotC-Nvim/CopilotChat.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Add to your configuration (e.g. &lt;code&gt;~/.config/nvim/init.lua&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;CopilotChat&#34;).setup {&#xA;  -- See Configuration section for options&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/deathbeam&#34;&gt;@deathbeam&lt;/a&gt; for &lt;a href=&#34;https://github.com/deathbeam/dotfiles/raw/master/nvim/.config/nvim/lua/config/copilot.lua&#34;&gt;configuration&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;p&gt;Commands are used to control the chat interface:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChat &amp;lt;input&amp;gt;?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open chat with optional input&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatOpen&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Open chat window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatClose&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Close chat window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatToggle&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle chat window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatStop&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Stop current output&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatReset&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reset chat window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatSave &amp;lt;name&amp;gt;?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Save chat history&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatLoad &amp;lt;name&amp;gt;?&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Load chat history&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatPrompts&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;View/select prompt templates&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatModels&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;View/select available models&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChatAgents&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;View/select available agents&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;:CopilotChat&amp;lt;PromptName&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Use specific prompt template&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Key Mappings&lt;/h2&gt; &#xA;&lt;p&gt;Default mappings in the chat interface:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Insert&lt;/th&gt; &#xA;   &lt;th&gt;Normal&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;Tab&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Trigger/accept completion menu for tokens&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-c&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;q&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Close the chat window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-l&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-l&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Reset and clear the chat window&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-s&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Submit the current prompt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;grr&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Toggle sticky prompt for line under cursor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;grx&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Clear all sticky prompts in prompt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-y&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;&amp;lt;C-y&amp;gt;&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Accept nearest diff&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gj&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Jump to section of nearest diff&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gqa&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add all answers from chat to quickfix list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gqd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add all diffs from chat to quickfix list&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gy&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Yank nearest diff to register&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gd&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show diff between source and nearest diff&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gi&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show info about current chat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gc&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show current chat context&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Show help message&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The mappings can be customized by setting the &lt;code&gt;mappings&lt;/code&gt; table in your configuration. Each mapping can have:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;normal&lt;/code&gt;: Key for normal mode&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;insert&lt;/code&gt;: Key for insert mode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, to change the submit prompt mapping or show_diff full diff option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    mappings = {&#xA;      submit_prompt = {&#xA;        normal = &#39;&amp;lt;Leader&amp;gt;s&#39;,&#xA;        insert = &#39;&amp;lt;C-s&amp;gt;&#39;&#xA;      }&#xA;      show_diff = {&#xA;        full_diff = true&#xA;      }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Prompts&lt;/h2&gt; &#xA;&lt;h3&gt;Predefined Prompts&lt;/h3&gt; &#xA;&lt;p&gt;Predefined prompt templates for common tasks. Reference them with &lt;code&gt;/PromptName&lt;/code&gt; in chat, use &lt;code&gt;:CopilotChat&amp;lt;PromptName&amp;gt;&lt;/code&gt; or &lt;code&gt;:CopilotChatPrompts&lt;/code&gt; to select them:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Prompt&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Explain&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Write an explanation for the selected code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Review&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Review the selected code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Fix&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rewrite the code with bug fixes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Optimize&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Optimize code for performance and readability&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Docs&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add documentation comments to the code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Tests&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Generate tests for the code&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;Commit&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Write commit message using commitizen convention&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Define your own prompts in the configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  prompts = {&#xA;    MyCustomPrompt = {&#xA;      prompt = &#39;Explain how it works.&#39;,&#xA;      system_prompt = &#39;You are very good at explaining stuff&#39;,&#xA;      mapping = &#39;&amp;lt;leader&amp;gt;ccmc&#39;,&#xA;      description = &#39;My custom prompt description&#39;,&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;System Prompts&lt;/h3&gt; &#xA;&lt;p&gt;System prompts define the AI model&#39;s behavior. Reference them with &lt;code&gt;/PROMPT_NAME&lt;/code&gt; in chat:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Prompt&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;COPILOT_BASE&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;All prompts should be built on top of this&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;COPILOT_INSTRUCTIONS&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Base instructions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;COPILOT_EXPLAIN&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds coding tutor behavior&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;COPILOT_REVIEW&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds code review behavior with diagnostics&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Define your own system prompts in the configuration (similar to &lt;code&gt;prompts&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  prompts = {&#xA;    Yarrr = {&#xA;      system_prompt = &#39;You are fascinated by pirates, so please respond in pirate speak.&#39;,&#xA;    },&#xA;    NiceInstructions = {&#xA;      system_prompt = &#39;You are a nice coding tutor, so please respond in a friendly and helpful manner.&#39; .. require(&#39;CopilotChat.config.prompts&#39;).COPILOT_BASE.system_prompt,&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Sticky Prompts&lt;/h3&gt; &#xA;&lt;p&gt;Sticky prompts persist across chat sessions. They&#39;re useful for maintaining context or agent selection. They work as follows:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Prefix text with &lt;code&gt;&amp;gt; &lt;/code&gt; using markdown blockquote syntax&lt;/li&gt; &#xA; &lt;li&gt;The prompt will be copied at the start of every new chat prompt&lt;/li&gt; &#xA; &lt;li&gt;Edit sticky prompts freely while maintaining the &lt;code&gt;&amp;gt; &lt;/code&gt; prefix&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;gt; #files&#xA;&amp;gt; List all files in the workspace&#xA;&#xA;&amp;gt; @models Using Mistral-small&#xA;&amp;gt; What is 1 + 11&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also set default sticky prompts in the configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  sticky = {&#xA;    &#39;@models Using Mistral-small&#39;,&#xA;    &#39;#files&#39;,&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Models and Agents&lt;/h2&gt; &#xA;&lt;h3&gt;Models&lt;/h3&gt; &#xA;&lt;p&gt;You can control which AI model to use in three ways:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;List available models with &lt;code&gt;:CopilotChatModels&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set model in prompt with &lt;code&gt;$model_name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure default model via &lt;code&gt;model&lt;/code&gt; config key&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For supported models, see:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/copilot/using-github-copilot/ai-models/changing-the-ai-model-for-copilot-chat#ai-models-for-copilot-chat&#34;&gt;Copilot Chat Models&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marketplace/models&#34;&gt;GitHub Marketplace Models&lt;/a&gt; (experimental, limited usage)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Agents&lt;/h3&gt; &#xA;&lt;p&gt;Agents determine the AI assistant&#39;s capabilities. Control agents in three ways:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;List available agents with &lt;code&gt;:CopilotChatAgents&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Set agent in prompt with &lt;code&gt;@agent_name&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Configure default agent via &lt;code&gt;agent&lt;/code&gt; config key&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;The default &#34;noop&#34; agent is &lt;code&gt;none&lt;/code&gt;. For more information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/copilot/using-github-copilot/using-extensions-to-integrate-external-tools-with-copilot-chat&#34;&gt;Extension Agents Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marketplace?type=apps&amp;amp;copilot_app=true&#34;&gt;Available Agents&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contexts&lt;/h2&gt; &#xA;&lt;p&gt;Contexts provide additional information to the chat. Add context using &lt;code&gt;#context_name[:input]&lt;/code&gt; syntax:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Context&lt;/th&gt; &#xA;   &lt;th&gt;Input Support&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;buffer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (number)&lt;/td&gt; &#xA;   &lt;td&gt;Current or specified buffer content&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;buffers&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (type)&lt;/td&gt; &#xA;   &lt;td&gt;All buffers content (listed/all)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;file&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (path)&lt;/td&gt; &#xA;   &lt;td&gt;Content of specified file&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;files&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (glob)&lt;/td&gt; &#xA;   &lt;td&gt;Workspace files&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;filenames&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (glob)&lt;/td&gt; &#xA;   &lt;td&gt;Workspace file names&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;git&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (ref)&lt;/td&gt; &#xA;   &lt;td&gt;Git diff (unstaged/staged/commit)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;url&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (url)&lt;/td&gt; &#xA;   &lt;td&gt;Content from URL&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;register&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (name)&lt;/td&gt; &#xA;   &lt;td&gt;Content of vim register&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;quickfix&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;-&lt;/td&gt; &#xA;   &lt;td&gt;Quickfix list file contents&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;system&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✓ (command)&lt;/td&gt; &#xA;   &lt;td&gt;Output of shell command&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP] The AI is aware of these context providers and may request additional context if needed by asking you to input a specific context command like &lt;code&gt;#file:path/to/file.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;gt; #buffer&#xA;&amp;gt; #buffer:2&#xA;&amp;gt; #files:\*.lua&#xA;&amp;gt; #filenames&#xA;&amp;gt; #git:staged&#xA;&amp;gt; #url:https://example.com&#xA;&amp;gt; #system:`ls -la | grep lua`&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Define your own contexts in the configuration with input handling and resolution:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  contexts = {&#xA;    birthday = {&#xA;      input = function(callback)&#xA;        vim.ui.select({ &#39;user&#39;, &#39;napoleon&#39; }, {&#xA;          prompt = &#39;Select birthday&amp;gt; &#39;,&#xA;        }, callback)&#xA;      end,&#xA;      resolve = function(input)&#xA;        return {&#xA;          {&#xA;            content = input .. &#39; birthday info&#39;,&#xA;            filename = input .. &#39;_birthday&#39;,&#xA;            filetype = &#39;text&#39;,&#xA;          }&#xA;        }&#xA;      end&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;External Contexts&lt;/h3&gt; &#xA;&lt;p&gt;For external contexts, see the &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/discussions/categories/contexts&#34;&gt;contexts discussion page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Selections&lt;/h2&gt; &#xA;&lt;p&gt;Selections determine the source content for chat interactions.&lt;/p&gt; &#xA;&lt;p&gt;Available selections are located in &lt;code&gt;local select = require(&#34;CopilotChat.select&#34;)&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Selection&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;visual&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Current visual selection&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;buffer&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Current buffer content&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;line&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Current line content&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;unnamed&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Unnamed register (last deleted/changed/yanked content)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can set a default selection in the configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  -- Default uses visual selection or falls back to buffer&#xA;  selection = function(source)&#xA;    return select.visual(source) or select.buffer(source)&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Providers&lt;/h2&gt; &#xA;&lt;p&gt;Providers are modules that implement integration with different AI providers.&lt;/p&gt; &#xA;&lt;h3&gt;Built-in Providers&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;copilot&lt;/code&gt; - Default GitHub Copilot provider used for chat&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;github_models&lt;/code&gt; - Provider for GitHub Marketplace models&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;copilot_embeddings&lt;/code&gt; - Provider for Copilot embeddings, not standalone&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Provider Interface&lt;/h3&gt; &#xA;&lt;p&gt;Custom providers can implement these methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  -- Optional: Disable provider&#xA;  disabled?: boolean,&#xA;&#xA;  -- Optional: Embeddings provider name or function&#xA;  embed?: string|function,&#xA;&#xA;  -- Optional: Get extra request headers with optional expiration time&#xA;  get_headers?(): table&amp;lt;string,string&amp;gt;, number?,&#xA;&#xA;  -- Optional: Get API endpoint URL&#xA;  get_url?(opts: CopilotChat.Provider.options): string,&#xA;&#xA;  -- Optional: Prepare request input&#xA;  prepare_input?(inputs: table&amp;lt;CopilotChat.Provider.input&amp;gt;, opts: CopilotChat.Provider.options): table,&#xA;&#xA;  -- Optional: Prepare response output&#xA;  prepare_output?(output: table, opts: CopilotChat.Provider.options): CopilotChat.Provider.output,&#xA;&#xA;  -- Optional: Get available models&#xA;  get_models?(headers: table): table&amp;lt;CopilotChat.Provider.model&amp;gt;,&#xA;&#xA;  -- Optional: Get available agents&#xA;  get_agents?(headers: table): table&amp;lt;CopilotChat.Provider.agent&amp;gt;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;External Providers&lt;/h3&gt; &#xA;&lt;p&gt;For external providers (Ollama, LM Studio, Mistral.ai), see the &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/discussions/categories/providers&#34;&gt;providers discussion page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Configuration&lt;/h1&gt; &#xA;&lt;h2&gt;Default Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Below are all available configuration options with their default values:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;&#xA;  -- Shared config starts here (can be passed to functions at runtime and configured via setup function)&#xA;&#xA;  system_prompt = &#39;COPILOT_INSTRUCTIONS&#39;, -- System prompt to use (can be specified manually in prompt via /).&#xA;&#xA;  model = &#39;gpt-4o-2024-11-20&#39;, -- Default model to use, see &#39;:CopilotChatModels&#39; for available models (can be specified manually in prompt via $).&#xA;  agent = &#39;copilot&#39;, -- Default agent to use, see &#39;:CopilotChatAgents&#39; for available agents (can be specified manually in prompt via @).&#xA;  context = nil, -- Default context or array of contexts to use (can be specified manually in prompt via #).&#xA;  sticky = nil, -- Default sticky prompt or array of sticky prompts to use at start of every new chat.&#xA;&#xA;  temperature = 0.1, -- GPT result temperature&#xA;  headless = false, -- Do not write to chat buffer and use history (useful for using custom processing)&#xA;  stream = nil, -- Function called when receiving stream updates (returned string is appended to the chat buffer)&#xA;  callback = nil, -- Function called when full response is received (retuned string is stored to history)&#xA;  remember_as_sticky = true, -- Remember model/agent/context as sticky prompts when asking questions&#xA;&#xA;  -- default selection&#xA;  -- see select.lua for implementation&#xA;  selection = function(source)&#xA;    return select.visual(source) or select.buffer(source)&#xA;  end,&#xA;&#xA;  -- default window options&#xA;  window = {&#xA;    layout = &#39;vertical&#39;, -- &#39;vertical&#39;, &#39;horizontal&#39;, &#39;float&#39;, &#39;replace&#39;&#xA;    width = 0.5, -- fractional width of parent, or absolute width in columns when &amp;gt; 1&#xA;    height = 0.5, -- fractional height of parent, or absolute height in rows when &amp;gt; 1&#xA;    -- Options below only apply to floating windows&#xA;    relative = &#39;editor&#39;, -- &#39;editor&#39;, &#39;win&#39;, &#39;cursor&#39;, &#39;mouse&#39;&#xA;    border = &#39;single&#39;, -- &#39;none&#39;, single&#39;, &#39;double&#39;, &#39;rounded&#39;, &#39;solid&#39;, &#39;shadow&#39;&#xA;    row = nil, -- row position of the window, default is centered&#xA;    col = nil, -- column position of the window, default is centered&#xA;    title = &#39;Copilot Chat&#39;, -- title of chat window&#xA;    footer = nil, -- footer of chat window&#xA;    zindex = 1, -- determines if window is on top or below other floating windows&#xA;  },&#xA;&#xA;  show_help = true, -- Shows help message as virtual lines when waiting for user input&#xA;  highlight_selection = true, -- Highlight selection&#xA;  highlight_headers = true, -- Highlight headers in chat, disable if using markdown renderers (like render-markdown.nvim)&#xA;  references_display = &#39;virtual&#39;, -- &#39;virtual&#39;, &#39;write&#39;, Display references in chat as virtual text or write to buffer&#xA;  auto_follow_cursor = true, -- Auto-follow cursor in chat&#xA;  auto_insert_mode = false, -- Automatically enter insert mode when opening window and on new prompt&#xA;  insert_at_end = false, -- Move cursor to end of buffer when inserting text&#xA;  clear_chat_on_new_prompt = false, -- Clears chat on every new prompt&#xA;&#xA;  -- Static config starts here (can be configured only via setup function)&#xA;&#xA;  debug = false, -- Enable debug logging (same as &#39;log_level = &#39;debug&#39;)&#xA;  log_level = &#39;info&#39;, -- Log level to use, &#39;trace&#39;, &#39;debug&#39;, &#39;info&#39;, &#39;warn&#39;, &#39;error&#39;, &#39;fatal&#39;&#xA;  proxy = nil, -- [protocol://]host[:port] Use this proxy&#xA;  allow_insecure = false, -- Allow insecure server connections&#xA;&#xA;  chat_autocomplete = true, -- Enable chat autocompletion (when disabled, requires manual `mappings.complete` trigger)&#xA;&#xA;  log_path = vim.fn.stdpath(&#39;state&#39;) .. &#39;/CopilotChat.log&#39;, -- Default path to log file&#xA;  history_path = vim.fn.stdpath(&#39;data&#39;) .. &#39;/copilotchat_history&#39;, -- Default path to stored history&#xA;&#xA;  question_header = &#39;# User &#39;, -- Header to use for user questions&#xA;  answer_header = &#39;# Copilot &#39;, -- Header to use for AI answers&#xA;  error_header = &#39;# Error &#39;, -- Header to use for errors&#xA;  separator = &#39;───&#39;, -- Separator to use in chat&#xA;&#xA;  -- default providers&#xA;  -- see config/providers.lua for implementation&#xA;  providers = {&#xA;    copilot = {&#xA;    },&#xA;    github_models = {&#xA;    },&#xA;    copilot_embeddings = {&#xA;    },&#xA;  },&#xA;&#xA;  -- default contexts&#xA;  -- see config/contexts.lua for implementation&#xA;  contexts = {&#xA;    buffer = {&#xA;    },&#xA;    buffers = {&#xA;    },&#xA;    file = {&#xA;    },&#xA;    files = {&#xA;    },&#xA;    git = {&#xA;    },&#xA;    url = {&#xA;    },&#xA;    register = {&#xA;    },&#xA;    quickfix = {&#xA;    },&#xA;    system = {&#xA;    }&#xA;  },&#xA;&#xA;  -- default prompts&#xA;  -- see config/prompts.lua for implementation&#xA;  prompts = {&#xA;    Explain = {&#xA;      prompt = &#39;Write an explanation for the selected code as paragraphs of text.&#39;,&#xA;      system_prompt = &#39;COPILOT_EXPLAIN&#39;,&#xA;    },&#xA;    Review = {&#xA;      prompt = &#39;Review the selected code.&#39;,&#xA;      system_prompt = &#39;COPILOT_REVIEW&#39;,&#xA;    },&#xA;    Fix = {&#xA;      prompt = &#39;There is a problem in this code. Identify the issues and rewrite the code with fixes. Explain what was wrong and how your changes address the problems.&#39;,&#xA;    },&#xA;    Optimize = {&#xA;      prompt = &#39;Optimize the selected code to improve performance and readability. Explain your optimization strategy and the benefits of your changes.&#39;,&#xA;    },&#xA;    Docs = {&#xA;      prompt = &#39;Please add documentation comments to the selected code.&#39;,&#xA;    },&#xA;    Tests = {&#xA;      prompt = &#39;Please generate tests for my code.&#39;,&#xA;    },&#xA;    Commit = {&#xA;      prompt = &#39;Write commit message for the change with commitizen convention. Keep the title under 50 characters and wrap message at 72 characters. Format as a gitcommit code block.&#39;,&#xA;      context = &#39;git:staged&#39;,&#xA;    },&#xA;  },&#xA;&#xA;  -- default mappings&#xA;  -- see config/mappings.lua for implementation&#xA;  mappings = {&#xA;    complete = {&#xA;      insert = &#39;&amp;lt;Tab&amp;gt;&#39;,&#xA;    },&#xA;    close = {&#xA;      normal = &#39;q&#39;,&#xA;      insert = &#39;&amp;lt;C-c&amp;gt;&#39;,&#xA;    },&#xA;    reset = {&#xA;      normal = &#39;&amp;lt;C-l&amp;gt;&#39;,&#xA;      insert = &#39;&amp;lt;C-l&amp;gt;&#39;,&#xA;    },&#xA;    submit_prompt = {&#xA;      normal = &#39;&amp;lt;CR&amp;gt;&#39;,&#xA;      insert = &#39;&amp;lt;C-s&amp;gt;&#39;,&#xA;    },&#xA;    toggle_sticky = {&#xA;      normal = &#39;grr&#39;,&#xA;    },&#xA;    clear_stickies = {&#xA;      normal = &#39;grx&#39;,&#xA;    },&#xA;    accept_diff = {&#xA;      normal = &#39;&amp;lt;C-y&amp;gt;&#39;,&#xA;      insert = &#39;&amp;lt;C-y&amp;gt;&#39;,&#xA;    },&#xA;    jump_to_diff = {&#xA;      normal = &#39;gj&#39;,&#xA;    },&#xA;    quickfix_answers = {&#xA;      normal = &#39;gqa&#39;,&#xA;    },&#xA;    quickfix_diffs = {&#xA;      normal = &#39;gqd&#39;,&#xA;    },&#xA;    yank_diff = {&#xA;      normal = &#39;gy&#39;,&#xA;      register = &#39;&#34;&#39;, -- Default register to use for yanking&#xA;    },&#xA;    show_diff = {&#xA;      normal = &#39;gd&#39;,&#xA;      full_diff = false, -- Show full diff instead of unified diff when showing diff window&#xA;    },&#xA;    show_info = {&#xA;      normal = &#39;gi&#39;,&#xA;    },&#xA;    show_context = {&#xA;      normal = &#39;gc&#39;,&#xA;    },&#xA;    show_help = {&#xA;      normal = &#39;gh&#39;,&#xA;    },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customizing Buffers&lt;/h2&gt; &#xA;&lt;p&gt;Types of copilot buffers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;copilot-chat&lt;/code&gt; - Main chat buffer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;copilot-overlay&lt;/code&gt; - Overlay buffers (e.g. help, info, diff)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can set local options for plugin buffers like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.api.nvim_create_autocmd(&#39;BufEnter&#39;, {&#xA;    pattern = &#39;copilot-*&#39;,&#xA;    callback = function()&#xA;        -- Set buffer-local options&#xA;        vim.opt_local.relativenumber = false&#xA;        vim.opt_local.number = false&#xA;        vim.opt_local.conceallevel = 0&#xA;    end&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Customizing Highlights&lt;/h2&gt; &#xA;&lt;p&gt;Types of copilot highlights:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;CopilotChatHeader&lt;/code&gt; - Header highlight in chat buffer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CopilotChatSeparator&lt;/code&gt; - Separator highlight in chat buffer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CopilotChatStatus&lt;/code&gt; - Status and spinner in chat buffer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CopilotChatHelp&lt;/code&gt; - Help messages in chat buffer (help, references)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CopilotChatSelection&lt;/code&gt; - Selection highlight in source buffer&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CopilotChatKeyword&lt;/code&gt; - Keyword highlight in chat buffer (e.g. prompts, contexts)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CopilotChatInput&lt;/code&gt; - Input highlight in chat buffer (for contexts)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;API Reference&lt;/h1&gt; &#xA;&lt;h2&gt;Core&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local chat = require(&#34;CopilotChat&#34;)&#xA;&#xA;-- Basic Chat Functions&#xA;chat.ask(prompt, config)      -- Ask a question with optional config&#xA;chat.response()               -- Get the last response text&#xA;chat.resolve_prompt()         -- Resolve prompt references&#xA;chat.resolve_context()        -- Resolve context embeddings (WARN: async, requires plenary.async.run)&#xA;chat.resolve_agent()          -- Resolve agent from prompt (WARN: async, requires plenary.async.run)&#xA;chat.resolve_model()          -- Resolve model from prompt (WARN: async, requires plenary.async.run)&#xA;&#xA;-- Window Management&#xA;chat.open(config)             -- Open chat window with optional config&#xA;chat.close()                  -- Close chat window&#xA;chat.toggle(config)           -- Toggle chat window visibility with optional config&#xA;chat.reset()                  -- Reset the chat&#xA;chat.stop()                   -- Stop current output&#xA;&#xA;-- Source Management&#xA;chat.get_source()             -- Get the current source buffer and window&#xA;chat.set_source(winnr)        -- Set the source window&#xA;&#xA;-- Selection Management&#xA;chat.get_selection()                                   -- Get the current selection&#xA;chat.set_selection(bufnr, start_line, end_line, clear) -- Set or clear selection&#xA;&#xA;-- Prompt &amp;amp; Context Management&#xA;chat.select_prompt(config)    -- Open prompt selector with optional config&#xA;chat.select_model()           -- Open model selector&#xA;chat.select_agent()           -- Open agent selector&#xA;chat.prompts()                -- Get all available prompts&#xA;&#xA;-- Completion&#xA;chat.trigger_complete()       -- Trigger completion in chat window&#xA;chat.complete_info()          -- Get completion info for custom providers&#xA;chat.complete_items()         -- Get completion items (WARN: async, requires plenary.async.run)&#xA;&#xA;-- History Management&#xA;chat.save(name, history_path) -- Save chat history&#xA;chat.load(name, history_path) -- Load chat history&#xA;&#xA;-- Configuration&#xA;chat.setup(config)            -- Update configuration&#xA;chat.log_level(level)         -- Set log level (debug, info, etc.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Chat Window&lt;/h2&gt; &#xA;&lt;p&gt;You can also access the chat window UI methods through the &lt;code&gt;chat.chat&lt;/code&gt; object:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local window = require(&#34;CopilotChat&#34;).chat&#xA;&#xA;-- Chat UI State&#xA;window:visible()             -- Check if chat window is visible&#xA;window:focused()             -- Check if chat window is focused&#xA;&#xA;-- Content Management&#xA;window:get_prompt()          -- Get current prompt from chat window&#xA;window:set_prompt(prompt)    -- Set prompt in chat window&#xA;window:add_sticky(sticky)    -- Add sticky prompt to chat window&#xA;window:append(text)          -- Append text to chat window&#xA;window:clear()               -- Clear chat window content&#xA;window:finish()              -- Finish writing to chat window&#xA;&#xA;-- Navigation&#xA;window:follow()              -- Move cursor to end of chat content&#xA;window:focus()               -- Focus the chat window&#xA;&#xA;-- Advanced Features&#xA;window:get_closest_section() -- Get section closest to cursor&#xA;window:get_closest_block()   -- Get code block closest to cursor&#xA;window:overlay(opts)         -- Show overlay with specified options&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;-- Open chat, ask a question and handle response&#xA;require(&#34;CopilotChat&#34;).open()&#xA;require(&#34;CopilotChat&#34;).ask(&#34;Explain this code&#34;, {&#xA;  callback = function(response)&#xA;    vim.notify(&#34;Got response: &#34; .. response:sub(1, 50) .. &#34;...&#34;)&#xA;    return response&#xA;  end,&#xA;  context = &#34;buffer&#34;&#xA;})&#xA;&#xA;-- Save and load chat history&#xA;require(&#34;CopilotChat&#34;).save(&#34;my_debugging_session&#34;)&#xA;require(&#34;CopilotChat&#34;).load(&#34;my_debugging_session&#34;)&#xA;&#xA;-- Use custom context and model&#xA;require(&#34;CopilotChat&#34;).ask(&#34;How can I optimize this?&#34;, {&#xA;  model = &#34;gpt-4o&#34;,&#xA;  context = {&#34;buffer&#34;, &#34;git:staged&#34;}&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more examples, see the &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/wiki/Examples-and-Tips&#34;&gt;examples wiki page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;To set up the environment:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/CopilotC-Nvim/CopilotChat.nvim&#xA;cd CopilotChat.nvim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Install development dependencies:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install pre-commit hooks&#xA;make install-pre-commit&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run tests:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repository&lt;/li&gt; &#xA; &lt;li&gt;Create your feature branch&lt;/li&gt; &#xA; &lt;li&gt;Make your changes&lt;/li&gt; &#xA; &lt;li&gt;Run tests and lint checks&lt;/li&gt; &#xA; &lt;li&gt;Submit a pull request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/CopilotC-Nvim/CopilotChat.nvim/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for detailed guidelines.&lt;/p&gt; &#xA;&lt;h1&gt;Contributors&lt;/h1&gt; &#xA;&lt;p&gt;Thanks goes to these wonderful people (&lt;a href=&#34;https://allcontributors.org/docs/en/emoji-key&#34;&gt;emoji key&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; &#xA;&lt;!-- prettier-ignore-start --&gt; &#xA;&lt;!-- markdownlint-disable --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/gptlang&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/121417512?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;gptlang&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;gptlang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=gptlang&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=gptlang&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://productsway.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/870029?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Dung Duc Huynh (Kaka)&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dung Duc Huynh (Kaka)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=jellydn&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=jellydn&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://qoobes.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/58834655?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ahmed Haracic&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ahmed Haracic&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=qoobes&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://youtube.com/@ziontee113&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/102876811?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Trí Thiện Nguyễn&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Trí Thiện Nguyễn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=ziontee113&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Cassius0924&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62874592?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;He Zhizhou&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;He Zhizhou&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=Cassius0924&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.linkedin.com/in/guruprakashrajakkannu/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/9963717?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Guruprakash Rajakkannu&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Guruprakash Rajakkannu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=rguruprakash&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/kristofka&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/140354?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;kristofka&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;kristofka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=kristofka&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/PostCyberPunk&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/134976996?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;PostCyberPunk&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;PostCyberPunk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=PostCyberPunk&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/ktns&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1302759?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Katsuhiko Nishimra&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Katsuhiko Nishimra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=ktns&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/errnoh&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/373946?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Erno Hopearuoho&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Erno Hopearuoho&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=errnoh&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/shaungarwood&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4156525?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Shaun Garwood&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Shaun Garwood&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=shaungarwood&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/neutrinoA4&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/122616073?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;neutrinoA4&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;neutrinoA4&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=neutrinoA4&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=neutrinoA4&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/banjocat&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3247309?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jack Muratore&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jack Muratore&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=banjocat&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/AdrielVelazquez&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3443378?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Adriel Velazquez&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Adriel Velazquez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=AdrielVelazquez&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=AdrielVelazquez&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/deathbeam&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5115805?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Tomas Slusny&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tomas Slusny&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=deathbeam&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=deathbeam&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://nisalvd.netlify.com/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/30633436?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Nisal&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nisal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=nisalVD&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://www.gaardhus.dk&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/46934916?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Tobias Gårdhus&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tobias Gårdhus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=gaardhus&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://www.patreon.com/PetrDlouhy&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/156755?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Petr Dlouhý&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Petr Dlouhý&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=PetrDlouhy&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://www.dylanmadisetti.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2689338?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Dylan Madisetti&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dylan Madisetti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=dmadisetti&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/aweis89&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5186956?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Aaron Weisberg&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Aaron Weisberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=aweis89&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=aweis89&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/tlacuilose&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/65783495?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Jose Tlacuilo&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Jose Tlacuilo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=tlacuilose&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=tlacuilose&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://kevintraver.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/196406?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Kevin Traver&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kevin Traver&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=kevintraver&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=kevintraver&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/D7ry&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/92609548?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;dTry&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;dTry&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=D7ry&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://blog.ornew.io&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/19766770?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Arata Furukawa&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Arata Furukawa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=ornew&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/lingjie00&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/64540764?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ling&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ling&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=lingjie00&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/frolvanya&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/59515280?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Ivan Frolov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Ivan Frolov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=frolvanya&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://www.folkelemaitre.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/292349?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Folke Lemaitre&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Folke Lemaitre&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=folke&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=folke&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/GitMurf&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/64155612?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;GitMurf&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;GitMurf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=GitMurf&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;http://dimalip.in&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6877858?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Dmitrii Lipin&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Dmitrii Lipin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=festeh&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://nvimer.org&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/41784264?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;jinzhongjia&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;jinzhongjia&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=jinzhongjia&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/guill&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3157454?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;guill&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;guill&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=guill&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/sjonpaulbrown-cc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/81941908?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sjon-Paul Brown&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sjon-Paul Brown&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=sjonpaulbrown-cc&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/renxzen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/13023797?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Renzo Mondragón&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Renzo Mondragón&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=renxzen&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=renxzen&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/fjchen7&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10106636?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;fjchen7&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;fjchen7&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=fjchen7&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/radwo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/184065?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Radosław Woźniak&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Radosław Woźniak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=radwo&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/JakubPecenka&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/87969308?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;JakubPecenka&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JakubPecenka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=JakubPecenka&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/thomastthai&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16532581?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;thomastthai&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;thomastthai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=thomastthai&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://lisk.in/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/300342?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Tomáš Janoušek&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tomáš Janoušek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=liskin&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/Moriango&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/43554061?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Toddneal Stallworth&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Toddneal Stallworth&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=Moriango&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/taketwo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1241736?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sergey Alexandrov&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sergey Alexandrov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=taketwo&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/lemeb&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7331643?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Léopold Mebazaa&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Léopold Mebazaa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=lemeb&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://atko.space&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/14937572?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;JunKi Jin&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;JunKi Jin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=atkodev&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/abdennourzahaf&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/62243290?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;abdennourzahaf&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;abdennourzahaf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=abdennourzahaf&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/josiahdenton&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/44758384?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Josiah&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Josiah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=josiahdenton&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/tku137&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3052212?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Tony Fischer&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Tony Fischer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=tku137&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=tku137&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://qiita.com/program3152019&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/64008205?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Kohei Wada&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Kohei Wada&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=Kohei-Wada&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://zags.dev&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/79172513?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sebastian Yaghoubi&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sebastian Yaghoubi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=syaghoubi00&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/johncming&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/11719334?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;johncming&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;johncming&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=johncming&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/dzonatan&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5166666?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Rokas Brazdžionis&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Rokas Brazdžionis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=dzonatan&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/unlimitedsola&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3632663?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Sola&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Sola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=unlimitedsola&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt; &lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=unlimitedsola&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/ThisIsMani&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/84711804?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Mani Chandra&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Mani Chandra&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=ThisIsMani&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://nischalbasuti.github.io/&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/14853910?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Nischal Basuti&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Nischal Basuti&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=nischalbasuti&#34; title=&#34;Documentation&#34;&gt;📖&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://teoljungberg.com&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/810650?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Teo Ljungberg&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Teo Ljungberg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=teoljungberg&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34; valign=&#34;top&#34; width=&#34;14.28%&#34;&gt;&lt;a href=&#34;https://github.com/JPricey&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4826348?v=4?s=100&#34; width=&#34;100px;&#34; alt=&#34;Joe Price&#34;&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joe Price&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://github.com/CopilotC-Nvim/CopilotChat.nvim/commits?author=JPricey&#34; title=&#34;Code&#34;&gt;💻&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;!-- markdownlint-restore --&gt; &#xA;&lt;!-- prettier-ignore-end --&gt; &#xA;&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; &#xA;&lt;p&gt;This project follows the &lt;a href=&#34;https://github.com/all-contributors/all-contributors&#34;&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome!&lt;/p&gt; &#xA;&lt;h1&gt;Stargazers&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/CopilotC-Nvim/CopilotChat.nvim&#34;&gt;&lt;img src=&#34;https://starchart.cc/CopilotC-Nvim/CopilotChat.nvim.svg?variant=adaptive&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>overextended/ox_lib</title>
    <updated>2025-04-01T01:58:16Z</updated>
    <id>tag:github.com,2025-04-01:/overextended/ox_lib</id>
    <link href="https://github.com/overextended/ox_lib" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A FiveM resource and script library for Lua and JS.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ox_lib&lt;/h1&gt; &#xA;&lt;p&gt;A FiveM library and resource implementing reusable modules, methods, and UI elements.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/overextended/ox_lib/total?logo=github&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/overextended/ox_lib/latest/total?logo=github&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/contributors/overextended/ox_lib?logo=github&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/overextended/ox_lib?logo=github&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;For guidelines to contributing to the project, and to see our Contributor License Agreement, see &lt;a href=&#34;https://raw.githubusercontent.com/overextended/ox_lib/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For additional legal notices, refer to &lt;a href=&#34;https://raw.githubusercontent.com/overextended/ox_lib/master/NOTICE.md&#34;&gt;NOTICE.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;📚 Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://overextended.dev/ox_lib&#34;&gt;https://overextended.dev/ox_lib&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💾 Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/overextended/ox_lib/releases/latest/download/ox_lib.zip&#34;&gt;https://github.com/overextended/ox_lib/releases/latest/download/ox_lib.zip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📦 npm package&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@overextended/ox_lib&#34;&gt;https://www.npmjs.com/package/@overextended/ox_lib&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🖥️ Lua Language Server&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=sumneko.lua&#34;&gt;Lua Language Server&lt;/a&gt; to ease development with annotations, type checking, diagnostics, and more.&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=overextended.cfxlua-vscode&#34;&gt;cfxlua-vscode&lt;/a&gt; to add natives and cfxlua runtime declarations to LLS.&lt;/li&gt; &#xA; &lt;li&gt;You can load ox_lib into your global development environment by modifying workspace/user settings &#34;Lua.workspace.library&#34; with the resource path. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;e.g. &#34;c:/fxserver/resources/ox_lib&#34;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>