<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-07-01T01:50:14Z</updated>
  <subtitle>Monthly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pwntester/octo.nvim</title>
    <updated>2024-07-01T01:50:14Z</updated>
    <id>tag:github.com,2024-07-01:/pwntester/octo.nvim</id>
    <link href="https://github.com/pwntester/octo.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Edit and review GitHub issues and pull requests from the comfort of your favorite editor&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/repo-size/pwntester/octo.nvim&#34; alt=&#34;GitHub repository size&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/pwntester/octo.nvim&#34; alt=&#34;Issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/pwntester/octo.nvim&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://saythanks.io/to/alvaro%40pwntester.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/say-thanks-modal.svg?sanitize=true&#34; alt=&#34;Say thanks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim/commits/main&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/last-commit/pwntester/octo.nvim&#34; alt=&#34;Latest commit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pwntester/octo.nvim/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/pwntester/octo.nvim&#34; alt=&#34;Repository&#39;s starts&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h1&gt;&lt;span&gt;🐙&lt;/span&gt; Octo.nvim&lt;/h1&gt; &#xA;&lt;p&gt;Edit and review GitHub issues and pull requests from the comfort of your favorite editor.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/pwntester&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&#34; alt=&#34;BuyMeACoffee&#34; width=&#34;140&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🌲 Table of Contents&lt;/h2&gt; &#xA;&lt;!--toc:start--&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#octopus-octonvim&#34;&gt;&lt;span&gt;🐙&lt;/span&gt; Octo.nvim&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-table-of-contents&#34;&gt;🌲 Table of Contents&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-features&#34;&gt;💫 Features&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-requirements&#34;&gt;🎯 Requirements&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-installation&#34;&gt;📦 Installation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-configuration&#34;&gt;🔧 Configuration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-usage&#34;&gt;🚀 Usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-commands&#34;&gt;🤖 Commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-examples&#34;&gt;🔥 Examples&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-pr-reviews&#34;&gt;📋 PR reviews&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-completion&#34;&gt;🍞 Completion&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-colors&#34;&gt;🎨 Colors&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-status-column&#34;&gt;🗿 Status Column&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-demos&#34;&gt;📺 Demos&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-faq&#34;&gt;🙋 FAQ&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-contributing&#34;&gt;🙌 Contributing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-credits&#34;&gt;🌟 Credits&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-say-thanks&#34;&gt;🙏 Say Thanks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/#-license&#34;&gt;📜 License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA;  &lt;!--toc:end--&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💫 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit GitHub issues and PRs&lt;/li&gt; &#xA; &lt;li&gt;Add/Modify/Delete comments&lt;/li&gt; &#xA; &lt;li&gt;Add/Remove label, reactions, assignees, project cards, reviewers, etc.&lt;/li&gt; &#xA; &lt;li&gt;Add Review PRs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🎯 Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neovim.io/&#34;&gt;Neovim &lt;code&gt;&amp;gt;=0.10.0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://cli.github.com/&#34;&gt;GitHub CLI&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you&#39;d like to use &lt;a href=&#34;https://docs.github.com/en/issues/planning-and-tracking-with-projects&#34;&gt;Projects v2&lt;/a&gt; you will need to add the &lt;code&gt;read:project&lt;/code&gt; scope to your &lt;code&gt;gh&lt;/code&gt; token. You can do so by running &lt;code&gt;gh auth refresh -s read:project&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;If you&#39;d like to actually modify projects you can instead add the &lt;code&gt;project&lt;/code&gt; scope to your token instead.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/nvim-lua/plenary.nvim&#34;&gt;plenary.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install one of: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/nvim-telescope/telescope.nvim&#34;&gt;telescope.nvim&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/ibhagwan/fzf-lua&#34;&gt;fzf-lua&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Install &lt;a href=&#34;https://github.com/nvim-tree/nvim-web-devicons&#34;&gt;nvim-web-devicons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 Installation&lt;/h2&gt; &#xA;&lt;p&gt;Use your favourite plugin manager to install it, e.g.:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;  &#39;pwntester/octo.nvim&#39;,&#xA;  requires = {&#xA;    &#39;nvim-lua/plenary.nvim&#39;,&#xA;    &#39;nvim-telescope/telescope.nvim&#39;,&#xA;    -- OR &#39;ibhagwan/fzf-lua&#39;,&#xA;    &#39;nvim-tree/nvim-web-devicons&#39;,&#xA;  },&#xA;  config = function ()&#xA;    require&#34;octo&#34;.setup()&#xA;  end&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🔧 Configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require&#34;octo&#34;.setup({&#xA;  use_local_fs = false,                    -- use local files on right side of reviews&#xA;  enable_builtin = false,                  -- shows a list of builtin actions when no action is provided&#xA;  default_remote = {&#34;upstream&#34;, &#34;origin&#34;}; -- order to try remotes&#xA;  default_merge_method = &#34;commit&#34;,         -- default merge method which should be used when calling `Octo pr merge`, could be `commit`, `rebase` or `squash`&#xA;  ssh_aliases = {},                        -- SSH aliases. e.g. `ssh_aliases = {[&#34;github.com-work&#34;] = &#34;github.com&#34;}`&#xA;  picker = &#34;telescope&#34;,                    -- or &#34;fzf-lua&#34;&#xA;  picker_config = {&#xA;    use_emojis = false,                    -- only used by &#34;fzf-lua&#34; picker for now&#xA;    mappings = {                           -- mappings for the pickers&#xA;      open_in_browser = { lhs = &#34;&amp;lt;C-b&amp;gt;&#34;, desc = &#34;open issue in browser&#34; },&#xA;      copy_url = { lhs = &#34;&amp;lt;C-y&amp;gt;&#34;, desc = &#34;copy url to system clipboard&#34; },&#xA;      checkout_pr = { lhs = &#34;&amp;lt;C-o&amp;gt;&#34;, desc = &#34;checkout pull request&#34; },&#xA;      merge_pr = { lhs = &#34;&amp;lt;C-r&amp;gt;&#34;, desc = &#34;merge pull request&#34; },&#xA;    },&#xA;  },&#xA;  comment_icon = &#34;▎&#34;,                      -- comment marker&#xA;  outdated_icon = &#34;󰅒 &#34;,                    -- outdated indicator&#xA;  resolved_icon = &#34; &#34;,                    -- resolved indicator&#xA;  reaction_viewer_hint_icon = &#34; &#34;;        -- marker for user reactions&#xA;  user_icon = &#34; &#34;;                        -- user icon&#xA;  timeline_marker = &#34; &#34;;                  -- timeline marker&#xA;  timeline_indent = &#34;2&#34;;                   -- timeline indentation&#xA;  right_bubble_delimiter = &#34;&#34;;            -- bubble delimiter&#xA;  left_bubble_delimiter = &#34;&#34;;             -- bubble delimiter&#xA;  github_hostname = &#34;&#34;;                    -- GitHub Enterprise host&#xA;  snippet_context_lines = 4;               -- number or lines around commented lines&#xA;  gh_cmd = &#34;gh&#34;,                           -- Command to use when calling Github CLI&#xA;  gh_env = {},                             -- extra environment variables to pass on to GitHub CLI, can be a table or function returning a table&#xA;  timeout = 5000,                          -- timeout for requests between the remote server&#xA;  default_to_projects_v2 = false,          -- use projects v2 for the `Octo card ...` command by default. Both legacy and v2 commands are available under `Octo cardlegacy ...` and `Octo cardv2 ...` respectively.&#xA;  ui = {&#xA;    use_signcolumn = false,                -- show &#34;modified&#34; marks on the sign column&#xA;    use_signstatus = true,                 -- show &#34;modified&#34; marks on the status column&#xA;  },&#xA;  issues = {&#xA;    order_by = {                           -- criteria to sort results of `Octo issue list`&#xA;      field = &#34;CREATED_AT&#34;,                -- either COMMENTS, CREATED_AT or UPDATED_AT (https://docs.github.com/en/graphql/reference/enums#issueorderfield)&#xA;      direction = &#34;DESC&#34;                   -- either DESC or ASC (https://docs.github.com/en/graphql/reference/enums#orderdirection)&#xA;    }&#xA;  },&#xA;  pull_requests = {&#xA;    order_by = {                           -- criteria to sort the results of `Octo pr list`&#xA;      field = &#34;CREATED_AT&#34;,                -- either COMMENTS, CREATED_AT or UPDATED_AT (https://docs.github.com/en/graphql/reference/enums#issueorderfield)&#xA;      direction = &#34;DESC&#34;                   -- either DESC or ASC (https://docs.github.com/en/graphql/reference/enums#orderdirection)&#xA;    },&#xA;    always_select_remote_on_create = false -- always give prompt to select base remote repo when creating PRs&#xA;  },&#xA;  file_panel = {&#xA;    size = 10,                             -- changed files panel rows&#xA;    use_icons = true                       -- use web-devicons in file panel (if false, nvim-web-devicons does not need to be installed)&#xA;  },&#xA;  colors = {                               -- used for highlight groups (see Colors section below)&#xA;    white = &#34;#ffffff&#34;,&#xA;    grey = &#34;#2A354C&#34;,&#xA;    black = &#34;#000000&#34;,&#xA;    red = &#34;#fdb8c0&#34;,&#xA;    dark_red = &#34;#da3633&#34;,&#xA;    green = &#34;#acf2bd&#34;,&#xA;    dark_green = &#34;#238636&#34;,&#xA;    yellow = &#34;#d3c846&#34;,&#xA;    dark_yellow = &#34;#735c0f&#34;,&#xA;    blue = &#34;#58A6FF&#34;,&#xA;    dark_blue = &#34;#0366d6&#34;,&#xA;    purple = &#34;#6f42c1&#34;,&#xA;  },&#xA;  mappings_disable_default = false,        -- disable default mappings if true, but will still adapt user mappings&#xA;  mappings = {&#xA;    issue = {&#xA;      close_issue = { lhs = &#34;&amp;lt;space&amp;gt;ic&#34;, desc = &#34;close issue&#34; },&#xA;      reopen_issue = { lhs = &#34;&amp;lt;space&amp;gt;io&#34;, desc = &#34;reopen issue&#34; },&#xA;      list_issues = { lhs = &#34;&amp;lt;space&amp;gt;il&#34;, desc = &#34;list open issues on same repo&#34; },&#xA;      reload = { lhs = &#34;&amp;lt;C-r&amp;gt;&#34;, desc = &#34;reload issue&#34; },&#xA;      open_in_browser = { lhs = &#34;&amp;lt;C-b&amp;gt;&#34;, desc = &#34;open issue in browser&#34; },&#xA;      copy_url = { lhs = &#34;&amp;lt;C-y&amp;gt;&#34;, desc = &#34;copy url to system clipboard&#34; },&#xA;      add_assignee = { lhs = &#34;&amp;lt;space&amp;gt;aa&#34;, desc = &#34;add assignee&#34; },&#xA;      remove_assignee = { lhs = &#34;&amp;lt;space&amp;gt;ad&#34;, desc = &#34;remove assignee&#34; },&#xA;      create_label = { lhs = &#34;&amp;lt;space&amp;gt;lc&#34;, desc = &#34;create label&#34; },&#xA;      add_label = { lhs = &#34;&amp;lt;space&amp;gt;la&#34;, desc = &#34;add label&#34; },&#xA;      remove_label = { lhs = &#34;&amp;lt;space&amp;gt;ld&#34;, desc = &#34;remove label&#34; },&#xA;      goto_issue = { lhs = &#34;&amp;lt;space&amp;gt;gi&#34;, desc = &#34;navigate to a local repo issue&#34; },&#xA;      add_comment = { lhs = &#34;&amp;lt;space&amp;gt;ca&#34;, desc = &#34;add comment&#34; },&#xA;      delete_comment = { lhs = &#34;&amp;lt;space&amp;gt;cd&#34;, desc = &#34;delete comment&#34; },&#xA;      next_comment = { lhs = &#34;]c&#34;, desc = &#34;go to next comment&#34; },&#xA;      prev_comment = { lhs = &#34;[c&#34;, desc = &#34;go to previous comment&#34; },&#xA;      react_hooray = { lhs = &#34;&amp;lt;space&amp;gt;rp&#34;, desc = &#34;add/remove 🎉 reaction&#34; },&#xA;      react_heart = { lhs = &#34;&amp;lt;space&amp;gt;rh&#34;, desc = &#34;add/remove ❤️ reaction&#34; },&#xA;      react_eyes = { lhs = &#34;&amp;lt;space&amp;gt;re&#34;, desc = &#34;add/remove 👀 reaction&#34; },&#xA;      react_thumbs_up = { lhs = &#34;&amp;lt;space&amp;gt;r+&#34;, desc = &#34;add/remove 👍 reaction&#34; },&#xA;      react_thumbs_down = { lhs = &#34;&amp;lt;space&amp;gt;r-&#34;, desc = &#34;add/remove 👎 reaction&#34; },&#xA;      react_rocket = { lhs = &#34;&amp;lt;space&amp;gt;rr&#34;, desc = &#34;add/remove 🚀 reaction&#34; },&#xA;      react_laugh = { lhs = &#34;&amp;lt;space&amp;gt;rl&#34;, desc = &#34;add/remove 😄 reaction&#34; },&#xA;      react_confused = { lhs = &#34;&amp;lt;space&amp;gt;rc&#34;, desc = &#34;add/remove 😕 reaction&#34; },&#xA;    },&#xA;    pull_request = {&#xA;      checkout_pr = { lhs = &#34;&amp;lt;space&amp;gt;po&#34;, desc = &#34;checkout PR&#34; },&#xA;      merge_pr = { lhs = &#34;&amp;lt;space&amp;gt;pm&#34;, desc = &#34;merge commit PR&#34; },&#xA;      squash_and_merge_pr = { lhs = &#34;&amp;lt;space&amp;gt;psm&#34;, desc = &#34;squash and merge PR&#34; },&#xA;      rebase_and_merge_pr = { lhs = &#34;&amp;lt;space&amp;gt;prm&#34;, desc = &#34;rebase and merge PR&#34; },&#xA;      list_commits = { lhs = &#34;&amp;lt;space&amp;gt;pc&#34;, desc = &#34;list PR commits&#34; },&#xA;      list_changed_files = { lhs = &#34;&amp;lt;space&amp;gt;pf&#34;, desc = &#34;list PR changed files&#34; },&#xA;      show_pr_diff = { lhs = &#34;&amp;lt;space&amp;gt;pd&#34;, desc = &#34;show PR diff&#34; },&#xA;      add_reviewer = { lhs = &#34;&amp;lt;space&amp;gt;va&#34;, desc = &#34;add reviewer&#34; },&#xA;      remove_reviewer = { lhs = &#34;&amp;lt;space&amp;gt;vd&#34;, desc = &#34;remove reviewer request&#34; },&#xA;      close_issue = { lhs = &#34;&amp;lt;space&amp;gt;ic&#34;, desc = &#34;close PR&#34; },&#xA;      reopen_issue = { lhs = &#34;&amp;lt;space&amp;gt;io&#34;, desc = &#34;reopen PR&#34; },&#xA;      list_issues = { lhs = &#34;&amp;lt;space&amp;gt;il&#34;, desc = &#34;list open issues on same repo&#34; },&#xA;      reload = { lhs = &#34;&amp;lt;C-r&amp;gt;&#34;, desc = &#34;reload PR&#34; },&#xA;      open_in_browser = { lhs = &#34;&amp;lt;C-b&amp;gt;&#34;, desc = &#34;open PR in browser&#34; },&#xA;      copy_url = { lhs = &#34;&amp;lt;C-y&amp;gt;&#34;, desc = &#34;copy url to system clipboard&#34; },&#xA;      goto_file = { lhs = &#34;gf&#34;, desc = &#34;go to file&#34; },&#xA;      add_assignee = { lhs = &#34;&amp;lt;space&amp;gt;aa&#34;, desc = &#34;add assignee&#34; },&#xA;      remove_assignee = { lhs = &#34;&amp;lt;space&amp;gt;ad&#34;, desc = &#34;remove assignee&#34; },&#xA;      create_label = { lhs = &#34;&amp;lt;space&amp;gt;lc&#34;, desc = &#34;create label&#34; },&#xA;      add_label = { lhs = &#34;&amp;lt;space&amp;gt;la&#34;, desc = &#34;add label&#34; },&#xA;      remove_label = { lhs = &#34;&amp;lt;space&amp;gt;ld&#34;, desc = &#34;remove label&#34; },&#xA;      goto_issue = { lhs = &#34;&amp;lt;space&amp;gt;gi&#34;, desc = &#34;navigate to a local repo issue&#34; },&#xA;      add_comment = { lhs = &#34;&amp;lt;space&amp;gt;ca&#34;, desc = &#34;add comment&#34; },&#xA;      delete_comment = { lhs = &#34;&amp;lt;space&amp;gt;cd&#34;, desc = &#34;delete comment&#34; },&#xA;      next_comment = { lhs = &#34;]c&#34;, desc = &#34;go to next comment&#34; },&#xA;      prev_comment = { lhs = &#34;[c&#34;, desc = &#34;go to previous comment&#34; },&#xA;      react_hooray = { lhs = &#34;&amp;lt;space&amp;gt;rp&#34;, desc = &#34;add/remove 🎉 reaction&#34; },&#xA;      react_heart = { lhs = &#34;&amp;lt;space&amp;gt;rh&#34;, desc = &#34;add/remove ❤️ reaction&#34; },&#xA;      react_eyes = { lhs = &#34;&amp;lt;space&amp;gt;re&#34;, desc = &#34;add/remove 👀 reaction&#34; },&#xA;      react_thumbs_up = { lhs = &#34;&amp;lt;space&amp;gt;r+&#34;, desc = &#34;add/remove 👍 reaction&#34; },&#xA;      react_thumbs_down = { lhs = &#34;&amp;lt;space&amp;gt;r-&#34;, desc = &#34;add/remove 👎 reaction&#34; },&#xA;      react_rocket = { lhs = &#34;&amp;lt;space&amp;gt;rr&#34;, desc = &#34;add/remove 🚀 reaction&#34; },&#xA;      react_laugh = { lhs = &#34;&amp;lt;space&amp;gt;rl&#34;, desc = &#34;add/remove 😄 reaction&#34; },&#xA;      react_confused = { lhs = &#34;&amp;lt;space&amp;gt;rc&#34;, desc = &#34;add/remove 😕 reaction&#34; },&#xA;      review_start = { lhs = &#34;&amp;lt;space&amp;gt;vs&#34;, desc = &#34;start a review for the current PR&#34; },&#xA;      review_resume = { lhs = &#34;&amp;lt;space&amp;gt;vr&#34;, desc = &#34;resume a pending review for the current PR&#34; },&#xA;    },&#xA;    review_thread = {&#xA;      goto_issue = { lhs = &#34;&amp;lt;space&amp;gt;gi&#34;, desc = &#34;navigate to a local repo issue&#34; },&#xA;      add_comment = { lhs = &#34;&amp;lt;space&amp;gt;ca&#34;, desc = &#34;add comment&#34; },&#xA;      add_suggestion = { lhs = &#34;&amp;lt;space&amp;gt;sa&#34;, desc = &#34;add suggestion&#34; },&#xA;      delete_comment = { lhs = &#34;&amp;lt;space&amp;gt;cd&#34;, desc = &#34;delete comment&#34; },&#xA;      next_comment = { lhs = &#34;]c&#34;, desc = &#34;go to next comment&#34; },&#xA;      prev_comment = { lhs = &#34;[c&#34;, desc = &#34;go to previous comment&#34; },&#xA;      select_next_entry = { lhs = &#34;]q&#34;, desc = &#34;move to previous changed file&#34; },&#xA;      select_prev_entry = { lhs = &#34;[q&#34;, desc = &#34;move to next changed file&#34; },&#xA;      select_first_entry = { lhs = &#34;[Q&#34;, desc = &#34;move to first changed file&#34; },&#xA;      select_last_entry = { lhs = &#34;]Q&#34;, desc = &#34;move to last changed file&#34; },&#xA;      close_review_tab = { lhs = &#34;&amp;lt;C-c&amp;gt;&#34;, desc = &#34;close review tab&#34; },&#xA;      react_hooray = { lhs = &#34;&amp;lt;space&amp;gt;rp&#34;, desc = &#34;add/remove 🎉 reaction&#34; },&#xA;      react_heart = { lhs = &#34;&amp;lt;space&amp;gt;rh&#34;, desc = &#34;add/remove ❤️ reaction&#34; },&#xA;      react_eyes = { lhs = &#34;&amp;lt;space&amp;gt;re&#34;, desc = &#34;add/remove 👀 reaction&#34; },&#xA;      react_thumbs_up = { lhs = &#34;&amp;lt;space&amp;gt;r+&#34;, desc = &#34;add/remove 👍 reaction&#34; },&#xA;      react_thumbs_down = { lhs = &#34;&amp;lt;space&amp;gt;r-&#34;, desc = &#34;add/remove 👎 reaction&#34; },&#xA;      react_rocket = { lhs = &#34;&amp;lt;space&amp;gt;rr&#34;, desc = &#34;add/remove 🚀 reaction&#34; },&#xA;      react_laugh = { lhs = &#34;&amp;lt;space&amp;gt;rl&#34;, desc = &#34;add/remove 😄 reaction&#34; },&#xA;      react_confused = { lhs = &#34;&amp;lt;space&amp;gt;rc&#34;, desc = &#34;add/remove 😕 reaction&#34; },&#xA;    },&#xA;    submit_win = {&#xA;      approve_review = { lhs = &#34;&amp;lt;C-a&amp;gt;&#34;, desc = &#34;approve review&#34; },&#xA;      comment_review = { lhs = &#34;&amp;lt;C-m&amp;gt;&#34;, desc = &#34;comment review&#34; },&#xA;      request_changes = { lhs = &#34;&amp;lt;C-r&amp;gt;&#34;, desc = &#34;request changes review&#34; },&#xA;      close_review_tab = { lhs = &#34;&amp;lt;C-c&amp;gt;&#34;, desc = &#34;close review tab&#34; },&#xA;    },&#xA;    review_diff = {&#xA;      submit_review = { lhs = &#34;&amp;lt;leader&amp;gt;vs&#34;, desc = &#34;submit review&#34; },&#xA;      discard_review = { lhs = &#34;&amp;lt;leader&amp;gt;vd&#34;, desc = &#34;discard review&#34; },&#xA;      add_review_comment = { lhs = &#34;&amp;lt;space&amp;gt;ca&#34;, desc = &#34;add a new review comment&#34; },&#xA;      add_review_suggestion = { lhs = &#34;&amp;lt;space&amp;gt;sa&#34;, desc = &#34;add a new review suggestion&#34; },&#xA;      focus_files = { lhs = &#34;&amp;lt;leader&amp;gt;e&#34;, desc = &#34;move focus to changed file panel&#34; },&#xA;      toggle_files = { lhs = &#34;&amp;lt;leader&amp;gt;b&#34;, desc = &#34;hide/show changed files panel&#34; },&#xA;      next_thread = { lhs = &#34;]t&#34;, desc = &#34;move to next thread&#34; },&#xA;      prev_thread = { lhs = &#34;[t&#34;, desc = &#34;move to previous thread&#34; },&#xA;      select_next_entry = { lhs = &#34;]q&#34;, desc = &#34;move to previous changed file&#34; },&#xA;      select_prev_entry = { lhs = &#34;[q&#34;, desc = &#34;move to next changed file&#34; },&#xA;      select_first_entry = { lhs = &#34;[Q&#34;, desc = &#34;move to first changed file&#34; },&#xA;      select_last_entry = { lhs = &#34;]Q&#34;, desc = &#34;move to last changed file&#34; },&#xA;      close_review_tab = { lhs = &#34;&amp;lt;C-c&amp;gt;&#34;, desc = &#34;close review tab&#34; },&#xA;      toggle_viewed = { lhs = &#34;&amp;lt;leader&amp;gt;&amp;lt;space&amp;gt;&#34;, desc = &#34;toggle viewer viewed state&#34; },&#xA;      goto_file = { lhs = &#34;gf&#34;, desc = &#34;go to file&#34; },&#xA;    },&#xA;    file_panel = {&#xA;      submit_review = { lhs = &#34;&amp;lt;leader&amp;gt;vs&#34;, desc = &#34;submit review&#34; },&#xA;      discard_review = { lhs = &#34;&amp;lt;leader&amp;gt;vd&#34;, desc = &#34;discard review&#34; },&#xA;      next_entry = { lhs = &#34;j&#34;, desc = &#34;move to next changed file&#34; },&#xA;      prev_entry = { lhs = &#34;k&#34;, desc = &#34;move to previous changed file&#34; },&#xA;      select_entry = { lhs = &#34;&amp;lt;cr&amp;gt;&#34;, desc = &#34;show selected changed file diffs&#34; },&#xA;      refresh_files = { lhs = &#34;R&#34;, desc = &#34;refresh changed files panel&#34; },&#xA;      focus_files = { lhs = &#34;&amp;lt;leader&amp;gt;e&#34;, desc = &#34;move focus to changed file panel&#34; },&#xA;      toggle_files = { lhs = &#34;&amp;lt;leader&amp;gt;b&#34;, desc = &#34;hide/show changed files panel&#34; },&#xA;      select_next_entry = { lhs = &#34;]q&#34;, desc = &#34;move to previous changed file&#34; },&#xA;      select_prev_entry = { lhs = &#34;[q&#34;, desc = &#34;move to next changed file&#34; },&#xA;      select_first_entry = { lhs = &#34;[Q&#34;, desc = &#34;move to first changed file&#34; },&#xA;      select_last_entry = { lhs = &#34;]Q&#34;, desc = &#34;move to last changed file&#34; },&#xA;      close_review_tab = { lhs = &#34;&amp;lt;C-c&amp;gt;&#34;, desc = &#34;close review tab&#34; },&#xA;      toggle_viewed = { lhs = &#34;&amp;lt;leader&amp;gt;&amp;lt;space&amp;gt;&#34;, desc = &#34;toggle viewer viewed state&#34; },&#xA;    },&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;🚀 Usage&lt;/h2&gt; &#xA;&lt;p&gt;Just edit the issue title, body or comments as a regular buffer and use &lt;code&gt;:w(rite)&lt;/code&gt; to sync the issue with GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;🤖 Commands&lt;/h2&gt; &#xA;&lt;p&gt;There is only an &lt;code&gt;Octo &amp;lt;object&amp;gt; &amp;lt;action&amp;gt; [arguments]&lt;/code&gt; command: If no command is passed, the argument to &lt;code&gt;Octo&lt;/code&gt; is treated as a URL from where an issue or pr repo and number are extracted.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Object&lt;/th&gt; &#xA;   &lt;th&gt;Action&lt;/th&gt; &#xA;   &lt;th&gt;Arguments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;issue&lt;/td&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;Close the current issue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reopen&lt;/td&gt; &#xA;   &lt;td&gt;Reopen the current issue&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create [repo]&lt;/td&gt; &#xA;   &lt;td&gt;Creates a new issue in the current or specified repo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;edit [repo] &#xA;    &lt;number&gt;&lt;/number&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Edit issue &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; in current or specified repo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;list [repo] [key=value] (1)&lt;/td&gt; &#xA;   &lt;td&gt;List all issues satisfying given filter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search&lt;/td&gt; &#xA;   &lt;td&gt;Live issue search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reload&lt;/td&gt; &#xA;   &lt;td&gt;Reload issue. Same as doing &lt;code&gt;e!&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;browser&lt;/td&gt; &#xA;   &lt;td&gt;Open current issue in the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td&gt;Copies the URL of the current issue to the system clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pr&lt;/td&gt; &#xA;   &lt;td&gt;list [repo] [key=value] (2)&lt;/td&gt; &#xA;   &lt;td&gt;List all PRs satisfying given filter&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search&lt;/td&gt; &#xA;   &lt;td&gt;Live issue search&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;edit [repo] &#xA;    &lt;number&gt;&lt;/number&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Edit PR &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; in current or specified repo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reopen&lt;/td&gt; &#xA;   &lt;td&gt;Reopen the current PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create&lt;/td&gt; &#xA;   &lt;td&gt;Creates a new PR for the current branch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;Close the current PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;checkout&lt;/td&gt; &#xA;   &lt;td&gt;Checkout PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;commits&lt;/td&gt; &#xA;   &lt;td&gt;List all PR commits&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;changes&lt;/td&gt; &#xA;   &lt;td&gt;Show all PR changes (diff hunks)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;diff&lt;/td&gt; &#xA;   &lt;td&gt;Show PR diff&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;merge [commit|rebase|squash] [delete]&lt;/td&gt; &#xA;   &lt;td&gt;Merge current PR using the specified method&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ready&lt;/td&gt; &#xA;   &lt;td&gt;Mark a draft PR as ready for review&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;draft&lt;/td&gt; &#xA;   &lt;td&gt;Send a ready PR back to draft&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;checks&lt;/td&gt; &#xA;   &lt;td&gt;Show the status of all checks run on the PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;reload&lt;/td&gt; &#xA;   &lt;td&gt;Reload PR. Same as doing &lt;code&gt;e!&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;browser&lt;/td&gt; &#xA;   &lt;td&gt;Open current PR in the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td&gt;Copies the URL of the current PR to the system clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;repo&lt;/td&gt; &#xA;   &lt;td&gt;list (3)&lt;/td&gt; &#xA;   &lt;td&gt;List repos user owns, contributes or belong to&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;fork&lt;/td&gt; &#xA;   &lt;td&gt;Fork repo&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;browser&lt;/td&gt; &#xA;   &lt;td&gt;Open current repo in the browser&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;url&lt;/td&gt; &#xA;   &lt;td&gt;Copies the URL of the current repo to the system clipboard&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;view&lt;/td&gt; &#xA;   &lt;td&gt;Open a repo by path ({organization}/{name})&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;gist&lt;/td&gt; &#xA;   &lt;td&gt;list [repo] [key=value] (4)&lt;/td&gt; &#xA;   &lt;td&gt;List user gists&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;comment&lt;/td&gt; &#xA;   &lt;td&gt;add&lt;/td&gt; &#xA;   &lt;td&gt;Add a new comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;delete&lt;/td&gt; &#xA;   &lt;td&gt;Delete a comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;thread&lt;/td&gt; &#xA;   &lt;td&gt;resolve&lt;/td&gt; &#xA;   &lt;td&gt;Mark a review thread as resolved&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;unresolve&lt;/td&gt; &#xA;   &lt;td&gt;Mark a review thread as unresolved&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;label&lt;/td&gt; &#xA;   &lt;td&gt;add [label]&lt;/td&gt; &#xA;   &lt;td&gt;Add a label from available label menu&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove [label]&lt;/td&gt; &#xA;   &lt;td&gt;Remove a label&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;create [label]&lt;/td&gt; &#xA;   &lt;td&gt;Create a new label&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;assignee&lt;/td&gt; &#xA;   &lt;td&gt;add [login]&lt;/td&gt; &#xA;   &lt;td&gt;Assign a user&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove [login]&lt;/td&gt; &#xA;   &lt;td&gt;Unassign a user&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reviewer&lt;/td&gt; &#xA;   &lt;td&gt;add [login]&lt;/td&gt; &#xA;   &lt;td&gt;Assign a PR reviewer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;reaction&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;thumbs_up&lt;/code&gt; | &lt;code&gt;+1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add 👍 reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;thumbs_down&lt;/code&gt; | &lt;code&gt;-1&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add 👎 reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;eyes&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add 👀 reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;laugh&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add 😄 reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;confused&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add 😕 reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rocket&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add 🚀 reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;heart&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add ❤️ reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hooray&lt;/code&gt; | &lt;code&gt;party&lt;/code&gt; | &lt;code&gt;tada&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Add 🎉 reaction&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;card&lt;/td&gt; &#xA;   &lt;td&gt;add&lt;/td&gt; &#xA;   &lt;td&gt;Assign issue/PR to a project new card&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;remove&lt;/td&gt; &#xA;   &lt;td&gt;Delete project card&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;move&lt;/td&gt; &#xA;   &lt;td&gt;Move project card to different project/column&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;review&lt;/td&gt; &#xA;   &lt;td&gt;start&lt;/td&gt; &#xA;   &lt;td&gt;Start a new review&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;submit&lt;/td&gt; &#xA;   &lt;td&gt;Submit the review&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;resume&lt;/td&gt; &#xA;   &lt;td&gt;Edit a pending review for current PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;discard&lt;/td&gt; &#xA;   &lt;td&gt;Deletes a pending review for current PR if any&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;comments&lt;/td&gt; &#xA;   &lt;td&gt;View pending review comments&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;commit&lt;/td&gt; &#xA;   &lt;td&gt;Pick a specific commit to review&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;close&lt;/td&gt; &#xA;   &lt;td&gt;Close the review window and return to the PR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;actions&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Lists all available Octo actions&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;search&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;query&gt;&lt;/query&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Search GitHub for issues and PRs matching the &lt;a href=&#34;https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests&#34;&gt;query&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;[repo]&lt;/code&gt;: If repo is not provided, it will be derived from &lt;code&gt;&amp;lt;cwd&amp;gt;/.git/config&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In-menu mappings:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;: Edit Issue&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt;: Opens issue in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-y&amp;gt;&lt;/code&gt;: Copies URL to system clipboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://docs.github.com/en/free-pro-team@latest/graphql/reference/input-objects#issuefilters&#34;&gt;Available filter keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;since&lt;/li&gt; &#xA; &lt;li&gt;createdBy&lt;/li&gt; &#xA; &lt;li&gt;assignee&lt;/li&gt; &#xA; &lt;li&gt;mentioned&lt;/li&gt; &#xA; &lt;li&gt;labels&lt;/li&gt; &#xA; &lt;li&gt;milestone&lt;/li&gt; &#xA; &lt;li&gt;states&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;In-menu mappings:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;: Edit PR&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt;: Opens PR in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-o&amp;gt;&lt;/code&gt;: Checkout PR&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-y&amp;gt;&lt;/code&gt;: Copies URL to system clipboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pwntester/octo.nvim/raw/master/lua/octo/pickers/telescope/provider.lua#L34&#34;&gt;Available filter keys&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;baseRefName&lt;/li&gt; &#xA; &lt;li&gt;headRefName&lt;/li&gt; &#xA; &lt;li&gt;labels&lt;/li&gt; &#xA; &lt;li&gt;states&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;In-menu mappings:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;: View repo&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-b&amp;gt;&lt;/code&gt;: Opens repo in the browser&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-y&amp;gt;&lt;/code&gt;: Copies URL to system clipboard&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;In-menu mappings:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;: Append Gist to buffer &lt;a href=&#34;https://cli.github.com/manual/gh_gist_list&#34;&gt;Available keys&lt;/a&gt;: &lt;code&gt;repo&lt;/code&gt;|&lt;code&gt;public&lt;/code&gt;|&lt;code&gt;secret&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔥 Examples&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Octo https://github.com/pwntester/octo.nvim/issues/12&#xA;Octo issue create&#xA;Octo issue create pwntester/octo.nvim&#xA;Octo comment add&#xA;Octo reaction add hooray&#xA;Octo issue edit pwntester/octo.nvim 1&#xA;Octo issue edit 1&#xA;Octo issue list createdBy=pwntester&#xA;Octo issue list neovim/neovim labels=bug,help\ wanted states=OPEN&#xA;Octo search assignee:pwntester is:pr&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;📋 PR reviews&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open the PR (e.g. &lt;code&gt;Octo &amp;lt;PR url&amp;gt;&lt;/code&gt; or &lt;code&gt;Octo pr list&lt;/code&gt; or &lt;code&gt;Octo pr edit &amp;lt;PR number&amp;gt;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Start a review with &lt;code&gt;Octo review start&lt;/code&gt; or resume a pending review with &lt;code&gt;Octo review resume&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A new tab will show a panel with changed files and two windows showing the diff on any of them.&lt;/li&gt; &#xA; &lt;li&gt;Change panel entries with &lt;code&gt;]q&lt;/code&gt; and &lt;code&gt;[q&lt;/code&gt; or by selecting an entry in the window&lt;/li&gt; &#xA; &lt;li&gt;Add comments with &lt;code&gt;&amp;lt;space&amp;gt;ca&lt;/code&gt; or suggestions with &lt;code&gt;&amp;lt;space&amp;gt;sa&lt;/code&gt; on single or multiple visual-selected lines &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;A new buffer will appear in the alternate diff window. The cursor will be positioned in the new buffer&lt;/li&gt; &#xA;   &lt;li&gt;When ready, save the buffer to commit changes to GitHub&lt;/li&gt; &#xA;   &lt;li&gt;Move back to the diff window and move the cursor, the thread buffer will hide&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Hold the cursor on a line with a comment to show a thread buffer with all the thread comments &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;To modify, delete, react or reply to a comment, move to the window containing the thread buffer&lt;/li&gt; &#xA;   &lt;li&gt;Perform any operations as if you were in a regular issue buffer&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Review pending comments with &lt;code&gt;Octo review comments&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Use &#xA;    &lt;cr&gt;&#xA;      to jump to the selected pending comment&#xA;    &lt;/cr&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;If you want to review a specific commit, use &lt;code&gt;Octo review commit&lt;/code&gt; to pick a commit. The file panel will get filtered to show only files changed by that commit. Any comments placed on these files will be applied at that specific commit level and will be added to the pending review.&lt;/li&gt; &#xA; &lt;li&gt;When ready, submit the review with &lt;code&gt;Octo review submit&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;A new float window will pop up. Enter the top level review comment and exit to normal mode. Then press &lt;code&gt;&amp;lt;C-m&amp;gt;&lt;/code&gt; to submit a comment, &lt;code&gt;&amp;lt;C-a&amp;gt;&lt;/code&gt; to approve it or &lt;code&gt;&amp;lt;C-r&amp;gt;&lt;/code&gt; to request changes&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🍞 Completion&lt;/h2&gt; &#xA;&lt;p&gt;Octo provides a built-in omnifunc completion for issues, PRs and users that you can trigger using &lt;code&gt;&amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&lt;/code&gt;. Alternately, if you use &lt;a href=&#34;https://github.com/hrsh7th/nvim-cmp&#34;&gt;&lt;code&gt;nvim-cmp&lt;/code&gt;&lt;/a&gt; for completion, you can use the &lt;a href=&#34;https://github.com/petertriho/cmp-git/&#34;&gt;&lt;code&gt;cmp-git&lt;/code&gt;&lt;/a&gt; source to provide issues, PRs, commits and users completion.&lt;/p&gt; &#xA;&lt;h2&gt;🎨 Colors&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Highlight Group&lt;/th&gt; &#xA;   &lt;th&gt;Defaults to&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDirty&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;ErrorMsg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoIssueTitle&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;PreProc&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoIssueId&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Question&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoEmpty&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoFloat&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NormalNC&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDate&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoSymbol&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoTimelineItemHeading&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDetailsLabel&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Title&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoMissingDetails&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Comment&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDetailsValue&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Identifier&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoDiffHunkPosition&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NormalFloat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoCommentLine&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;TabLineSel&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoEditable&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NormalFloat bg&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoViewer&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoBubble&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;NormalFloat&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoBubbleGreen&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoBubbleRed&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoUser&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoBubble&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoUserViewer&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoViewer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoReaction&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoBubble&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoReactionViewer&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoViewer&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoPassingTest&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoFailingTest&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoPullAdditions&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoPullDeletions&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoPullModifications&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateOpen&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateClosed&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateMerge&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStatePending&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GitHub color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateApproved&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoStateOpen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateChangesRequested&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoStateClosed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateCommented&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Normal&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;em&gt;OctoStateDismissed&lt;/em&gt;&lt;/td&gt; &#xA;   &lt;td&gt;OctoStateClosed&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The term &lt;code&gt;GitHub color&lt;/code&gt; refers to the colors used in the WebUI. The (addition) &lt;code&gt;viewer&lt;/code&gt; means the user of the plugin or more precisely the user authenticated via the &lt;code&gt;gh&lt;/code&gt; CLI tool used to retrieve the data from GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;📺 Demos&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/125701/124568675-76130600-de45-11eb-9944-2607c5863f37.gif&#34; alt=&#34;issues&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/125701/124568138-e8cfb180-de44-11eb-994a-0791d8be63ad.gif&#34; alt=&#34;prs&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🙋 FAQ&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;I get a warning saying &lt;code&gt;Cannot request projects v2, missing scope &#39;read:project&#39;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;That&#39;s expected. The new support for projects v2 support requires the &lt;code&gt;read:project&lt;/code&gt; scope on your GitHub token.&lt;/p&gt; &#xA;&lt;p&gt;You add the scope by using &lt;code&gt;gh auth refresh -s read:project&lt;/code&gt; or you can suppress this warning by setting the following in your config&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;{&#xA;  suppress_missing_scope = {&#xA;    projects_v2 = true,&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I disable bubbles for XYZ?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each text-object that makes use of a bubble (except labels) do use their own highlight group that links per default to the main bubble highlight group. To disable most bubbles at once you can simply link &lt;code&gt;OctoBubble&lt;/code&gt; to &lt;code&gt;Normal&lt;/code&gt;. To only disable them for a certain plain do the same for the specific sub-group (e.g. &lt;code&gt;OctoUser&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why do my issue titles or markdown syntax do not get highlighted properly?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;The title, body and comments of an issue or PR are special as they get special highlighting applied and is an editable section. Due to the latter property it gets the &lt;code&gt;OctoEditable&lt;/code&gt; highlighting via a special signs &lt;code&gt;linehl&lt;/code&gt; setting. This takes precedence over the buffer internal highlights. To only get the background highlighted by the editable section, set &lt;code&gt;OctoEditable&lt;/code&gt; to a highlight with a background color definition only.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Why am I getting authentication error from gh?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This means that are either using a GITHUB_TOKEN to authenticate or &lt;code&gt;gh&lt;/code&gt; is not authenticated.&lt;/p&gt; &#xA;&lt;p&gt;In case of the former, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;GITHUB_TOKEN= gh auth login&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... and choose a method to authorise access for &lt;code&gt;gh&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;gh&lt;/code&gt; must store the credentials so it can work in a subshell.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Can I use treesitter markdown parser with octo buffers?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Just add the following lines to your TreeSitter config:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.treesitter.language.register(&#39;markdown&#39;, &#39;octo&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I filter PRs by filter keys that aren&#39;t available?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use the search command &lt;code&gt;:Octo search [query]&lt;/code&gt;. The &lt;a href=&#34;https://docs.github.com/en/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax&#34;&gt;search syntax&lt;/a&gt; and available search terms are available in &lt;a href=&#34;https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests#search-by-author&#34;&gt;GitHub documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For example to search for PRs with author you can use this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:Octo search is:pr author:pwntester repo:github/codeql&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: You need to provide the &lt;code&gt;repo&lt;/code&gt;, otherwise it will search for every PR by that user.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;How to enable autocompletion for issues/prs (&lt;code&gt;#&lt;/code&gt;) and users (&lt;code&gt;@&lt;/code&gt;)?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the following mappings for &lt;code&gt;octo&lt;/code&gt; file type:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;vim.keymap.set(&#34;i&#34;, &#34;@&#34;, &#34;@&amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&#34;, { silent = true, buffer = true })&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;vim.keymap.set(&#34;i&#34;, &#34;#&#34;, &#34;#&amp;lt;C-x&amp;gt;&amp;lt;C-o&amp;gt;&#34;, { silent = true, buffer = true })&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;How can I disable default key mappings?&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Set &lt;code&gt;mappings_disable_default = true&lt;/code&gt; in user config.&lt;/p&gt; &#xA;&lt;h2&gt;🙌 Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING&lt;/code&gt;&lt;/a&gt; for ways to get started.&lt;/p&gt; &#xA;&lt;p&gt;Please adhere to this project&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/pwntester/octo.nvim/master/CODE_OF_CONDUCT.md&#34;&gt;&lt;code&gt;CODE_OF_CONDUCT&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🌟 Credits&lt;/h2&gt; &#xA;&lt;p&gt;The PR review panel is heavily inspired in &lt;a href=&#34;https://github.com/sindrets/diffview.nvim&#34;&gt;diffview.nvim&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🙏 Say Thanks&lt;/h2&gt; &#xA;&lt;p&gt;If you like this plugin and would like to buy me a coffee, you can!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/pwntester&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-violet.png&#34; alt=&#34;BuyMeACoffee&#34; width=&#34;140&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/sponsors/pwntester&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/sponsors/pwntester?style=social&#34; alt=&#34;GitHub Sponsors&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;📜 License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/licenses/mit/&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>omerxx/dotfiles</title>
    <updated>2024-07-01T01:50:14Z</updated>
    <id>tag:github.com,2024-07-01:/omerxx/dotfiles</id>
    <link href="https://github.com/omerxx/dotfiles" rel="alternate"></link>
    <summary type="html">&lt;p&gt;My dotfiles synced form localhost and remote machines&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dotfiles symlinked on my machine&lt;/h1&gt; &#xA;&lt;h3&gt;Install with stow:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stow --target .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Homebrew installation:&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Leaving a machine&#xA;brew leaves &amp;gt; leaves.txt&#xA;&#xA;# Fresh installation&#xA;xargs brew install &amp;lt; leaves.txt&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>folke/flash.nvim</title>
    <updated>2024-07-01T01:50:14Z</updated>
    <id>tag:github.com,2024-07-01:/folke/flash.nvim</id>
    <link href="https://github.com/folke/flash.nvim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Navigate your code with search labels, enhanced character motions and Treesitter integration&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;⚡flash.nvim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;flash.nvim&lt;/code&gt; lets you navigate your code with search labels, enhanced character motions, and Treesitter integration.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Search Integration&lt;/th&gt; &#xA;   &lt;th&gt;Standalone Jump&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/folke/flash.nvim/assets/292349/e0ac4cbc-fa54-4505-8261-43ec0505518d&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/folke/flash.nvim/assets/292349/90af85e3-3f22-4c51-af4b-2a2488c9560b&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;code&gt;f&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Treesitter&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/folke/flash.nvim/assets/292349/379cb2de-8ec3-4acf-8811-d3590a5854b6&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;img src=&#34;https://github.com/folke/flash.nvim/assets/292349/b963b05e-3d28-45ff-b43a-928a06e5f92a&#34;&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;✨ Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🔍 &lt;strong&gt;Search Integration&lt;/strong&gt;: integrate &lt;strong&gt;flash.nvim&lt;/strong&gt; with your regular search using &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;. Labels appear next to the matches, allowing you to quickly jump to any location. Labels are guaranteed not to exist as a continuation of the search pattern.&lt;/li&gt; &#xA; &lt;li&gt;⌨️ &lt;strong&gt;type as many characters as you want&lt;/strong&gt; before using a jump label.&lt;/li&gt; &#xA; &lt;li&gt;⚡ &lt;strong&gt;Enhanced &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt; motions&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;🌳 &lt;strong&gt;Treesitter Integration&lt;/strong&gt;: all parents of the Treesitter node under your cursor are highlighted with a label for quick selection of a specific Treesitter node.&lt;/li&gt; &#xA; &lt;li&gt;🎯 &lt;strong&gt;Jump Mode&lt;/strong&gt;: a standalone jumping mode similar to search&lt;/li&gt; &#xA; &lt;li&gt;🔎 &lt;strong&gt;Search Modes&lt;/strong&gt;: &lt;code&gt;exact&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt; (regex), and &lt;code&gt;fuzzy&lt;/code&gt; search modes&lt;/li&gt; &#xA; &lt;li&gt;🪟 &lt;strong&gt;Multi Window&lt;/strong&gt; jumping&lt;/li&gt; &#xA; &lt;li&gt;🌐 &lt;strong&gt;Remote Actions&lt;/strong&gt;: perform motions in remote locations&lt;/li&gt; &#xA; &lt;li&gt;⚫ &lt;strong&gt;dot-repeatable&lt;/strong&gt; jumps&lt;/li&gt; &#xA; &lt;li&gt;📡 &lt;strong&gt;highly extensible&lt;/strong&gt;: check the &lt;a href=&#34;https://github.com/folke/flash.nvim#-examples&#34;&gt;examples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📋 Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Neovim &amp;gt;= &lt;strong&gt;0.8.0&lt;/strong&gt; (needs to be built with &lt;strong&gt;LuaJIT&lt;/strong&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📦 Installation&lt;/h2&gt; &#xA;&lt;p&gt;Install the plugin with your preferred package manager:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/folke/lazy.nvim&#34;&gt;lazy.nvim&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;!-- setup:start --&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  &#34;folke/flash.nvim&#34;,&#xA;  event = &#34;VeryLazy&#34;,&#xA;  ---@type Flash.Config&#xA;  opts = {},&#xA;  -- stylua: ignore&#xA;  keys = {&#xA;    { &#34;s&#34;, mode = { &#34;n&#34;, &#34;x&#34;, &#34;o&#34; }, function() require(&#34;flash&#34;).jump() end, desc = &#34;Flash&#34; },&#xA;    { &#34;S&#34;, mode = { &#34;n&#34;, &#34;x&#34;, &#34;o&#34; }, function() require(&#34;flash&#34;).treesitter() end, desc = &#34;Flash Treesitter&#34; },&#xA;    { &#34;r&#34;, mode = &#34;o&#34;, function() require(&#34;flash&#34;).remote() end, desc = &#34;Remote Flash&#34; },&#xA;    { &#34;R&#34;, mode = { &#34;o&#34;, &#34;x&#34; }, function() require(&#34;flash&#34;).treesitter_search() end, desc = &#34;Treesitter Search&#34; },&#xA;    { &#34;&amp;lt;c-s&amp;gt;&#34;, mode = { &#34;c&#34; }, function() require(&#34;flash&#34;).toggle() end, desc = &#34;Toggle Flash Search&#34; },&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- setup:end --&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;⚠️ When creating the keymaps manually either use a lua function like &lt;code&gt;function() require(&#34;flash&#34;).jump() end&lt;/code&gt; as the &lt;strong&gt;rhs&lt;/strong&gt;, or a string like &lt;code&gt;&amp;lt;cmd&amp;gt;lua require(&#34;flash&#34;).jump()&amp;lt;cr&amp;gt;&lt;/code&gt;. &lt;strong&gt;DO NOT&lt;/strong&gt; use &lt;code&gt;:lua&lt;/code&gt;, since that will break &lt;strong&gt;&lt;em&gt;dot-repeat&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;⚙️ Configuration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;flash.nvim&lt;/strong&gt; is highly configurable. Please refer to the default settings below.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Default Settings&lt;/summary&gt; &#xA; &lt;!-- config:start --&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  -- labels = &#34;abcdefghijklmnopqrstuvwxyz&#34;,&#xA;  labels = &#34;asdfghjklqwertyuiopzxcvbnm&#34;,&#xA;  search = {&#xA;    -- search/jump in all windows&#xA;    multi_window = true,&#xA;    -- search direction&#xA;    forward = true,&#xA;    -- when `false`, find only matches in the given direction&#xA;    wrap = true,&#xA;    ---@type Flash.Pattern.Mode&#xA;    -- Each mode will take ignorecase and smartcase into account.&#xA;    -- * exact: exact match&#xA;    -- * search: regular search&#xA;    -- * fuzzy: fuzzy search&#xA;    -- * fun(str): custom function that returns a pattern&#xA;    --   For example, to only match at the beginning of a word:&#xA;    --   mode = function(str)&#xA;    --     return &#34;\\&amp;lt;&#34; .. str&#xA;    --   end,&#xA;    mode = &#34;exact&#34;,&#xA;    -- behave like `incsearch`&#xA;    incremental = false,&#xA;    -- Excluded filetypes and custom window filters&#xA;    ---@type (string|fun(win:window))[]&#xA;    exclude = {&#xA;      &#34;notify&#34;,&#xA;      &#34;cmp_menu&#34;,&#xA;      &#34;noice&#34;,&#xA;      &#34;flash_prompt&#34;,&#xA;      function(win)&#xA;        -- exclude non-focusable windows&#xA;        return not vim.api.nvim_win_get_config(win).focusable&#xA;      end,&#xA;    },&#xA;    -- Optional trigger character that needs to be typed before&#xA;    -- a jump label can be used. It&#39;s NOT recommended to set this,&#xA;    -- unless you know what you&#39;re doing&#xA;    trigger = &#34;&#34;,&#xA;    -- max pattern length. If the pattern length is equal to this&#xA;    -- labels will no longer be skipped. When it exceeds this length&#xA;    -- it will either end in a jump or terminate the search&#xA;    max_length = false, ---@type number|false&#xA;  },&#xA;  jump = {&#xA;    -- save location in the jumplist&#xA;    jumplist = true,&#xA;    -- jump position&#xA;    pos = &#34;start&#34;, ---@type &#34;start&#34; | &#34;end&#34; | &#34;range&#34;&#xA;    -- add pattern to search history&#xA;    history = false,&#xA;    -- add pattern to search register&#xA;    register = false,&#xA;    -- clear highlight after jump&#xA;    nohlsearch = false,&#xA;    -- automatically jump when there is only one match&#xA;    autojump = false,&#xA;    -- You can force inclusive/exclusive jumps by setting the&#xA;    -- `inclusive` option. By default it will be automatically&#xA;    -- set based on the mode.&#xA;    inclusive = nil, ---@type boolean?&#xA;    -- jump position offset. Not used for range jumps.&#xA;    -- 0: default&#xA;    -- 1: when pos == &#34;end&#34; and pos &amp;lt; current position&#xA;    offset = nil, ---@type number&#xA;  },&#xA;  label = {&#xA;    -- allow uppercase labels&#xA;    uppercase = true,&#xA;    -- add any labels with the correct case here, that you want to exclude&#xA;    exclude = &#34;&#34;,&#xA;    -- add a label for the first match in the current window.&#xA;    -- you can always jump to the first match with `&amp;lt;CR&amp;gt;`&#xA;    current = true,&#xA;    -- show the label after the match&#xA;    after = true, ---@type boolean|number[]&#xA;    -- show the label before the match&#xA;    before = false, ---@type boolean|number[]&#xA;    -- position of the label extmark&#xA;    style = &#34;overlay&#34;, ---@type &#34;eol&#34; | &#34;overlay&#34; | &#34;right_align&#34; | &#34;inline&#34;&#xA;    -- flash tries to re-use labels that were already assigned to a position,&#xA;    -- when typing more characters. By default only lower-case labels are re-used.&#xA;    reuse = &#34;lowercase&#34;, ---@type &#34;lowercase&#34; | &#34;all&#34; | &#34;none&#34;&#xA;    -- for the current window, label targets closer to the cursor first&#xA;    distance = true,&#xA;    -- minimum pattern length to show labels&#xA;    -- Ignored for custom labelers.&#xA;    min_pattern_length = 0,&#xA;    -- Enable this to use rainbow colors to highlight labels&#xA;    -- Can be useful for visualizing Treesitter ranges.&#xA;    rainbow = {&#xA;      enabled = false,&#xA;      -- number between 1 and 9&#xA;      shade = 5,&#xA;    },&#xA;    -- With `format`, you can change how the label is rendered.&#xA;    -- Should return a list of `[text, highlight]` tuples.&#xA;    ---@class Flash.Format&#xA;    ---@field state Flash.State&#xA;    ---@field match Flash.Match&#xA;    ---@field hl_group string&#xA;    ---@field after boolean&#xA;    ---@type fun(opts:Flash.Format): string[][]&#xA;    format = function(opts)&#xA;      return { { opts.match.label, opts.hl_group } }&#xA;    end,&#xA;  },&#xA;  highlight = {&#xA;    -- show a backdrop with hl FlashBackdrop&#xA;    backdrop = true,&#xA;    -- Highlight the search matches&#xA;    matches = true,&#xA;    -- extmark priority&#xA;    priority = 5000,&#xA;    groups = {&#xA;      match = &#34;FlashMatch&#34;,&#xA;      current = &#34;FlashCurrent&#34;,&#xA;      backdrop = &#34;FlashBackdrop&#34;,&#xA;      label = &#34;FlashLabel&#34;,&#xA;    },&#xA;  },&#xA;  -- action to perform when picking a label.&#xA;  -- defaults to the jumping logic depending on the mode.&#xA;  ---@type fun(match:Flash.Match, state:Flash.State)|nil&#xA;  action = nil,&#xA;  -- initial pattern to use when opening flash&#xA;  pattern = &#34;&#34;,&#xA;  -- When `true`, flash will try to continue the last search&#xA;  continue = false,&#xA;  -- Set config to a function to dynamically change the config&#xA;  config = nil, ---@type fun(opts:Flash.Config)|nil&#xA;  -- You can override the default options for a specific mode.&#xA;  -- Use it with `require(&#34;flash&#34;).jump({mode = &#34;forward&#34;})`&#xA;  ---@type table&amp;lt;string, Flash.Config&amp;gt;&#xA;  modes = {&#xA;    -- options used when flash is activated through&#xA;    -- a regular search with `/` or `?`&#xA;    search = {&#xA;      -- when `true`, flash will be activated during regular search by default.&#xA;      -- You can always toggle when searching with `require(&#34;flash&#34;).toggle()`&#xA;      enabled = false,&#xA;      highlight = { backdrop = false },&#xA;      jump = { history = true, register = true, nohlsearch = true },&#xA;      search = {&#xA;        -- `forward` will be automatically set to the search direction&#xA;        -- `mode` is always set to `search`&#xA;        -- `incremental` is set to `true` when `incsearch` is enabled&#xA;      },&#xA;    },&#xA;    -- options used when flash is activated through&#xA;    -- `f`, `F`, `t`, `T`, `;` and `,` motions&#xA;    char = {&#xA;      enabled = true,&#xA;      -- dynamic configuration for ftFT motions&#xA;      config = function(opts)&#xA;        -- autohide flash when in operator-pending mode&#xA;        opts.autohide = opts.autohide or (vim.fn.mode(true):find(&#34;no&#34;) and vim.v.operator == &#34;y&#34;)&#xA;&#xA;        -- disable jump labels when not enabled, when using a count,&#xA;        -- or when recording/executing registers&#xA;        opts.jump_labels = opts.jump_labels&#xA;          and vim.v.count == 0&#xA;          and vim.fn.reg_executing() == &#34;&#34;&#xA;          and vim.fn.reg_recording() == &#34;&#34;&#xA;&#xA;        -- Show jump labels only in operator-pending mode&#xA;        -- opts.jump_labels = vim.v.count == 0 and vim.fn.mode(true):find(&#34;o&#34;)&#xA;      end,&#xA;      -- hide after jump when not using jump labels&#xA;      autohide = false,&#xA;      -- show jump labels&#xA;      jump_labels = false,&#xA;      -- set to `false` to use the current line only&#xA;      multi_line = true,&#xA;      -- When using jump labels, don&#39;t use these keys&#xA;      -- This allows using those keys directly after the motion&#xA;      label = { exclude = &#34;hjkliardc&#34; },&#xA;      -- by default all keymaps are enabled, but you can disable some of them,&#xA;      -- by removing them from the list.&#xA;      -- If you rather use another key, you can map them&#xA;      -- to something else, e.g., { [&#34;;&#34;] = &#34;L&#34;, [&#34;,&#34;] = H }&#xA;      keys = { &#34;f&#34;, &#34;F&#34;, &#34;t&#34;, &#34;T&#34;, &#34;;&#34;, &#34;,&#34; },&#xA;      ---@alias Flash.CharActions table&amp;lt;string, &#34;next&#34; | &#34;prev&#34; | &#34;right&#34; | &#34;left&#34;&amp;gt;&#xA;      -- The direction for `prev` and `next` is determined by the motion.&#xA;      -- `left` and `right` are always left and right.&#xA;      char_actions = function(motion)&#xA;        return {&#xA;          [&#34;;&#34;] = &#34;next&#34;, -- set to `right` to always go right&#xA;          [&#34;,&#34;] = &#34;prev&#34;, -- set to `left` to always go left&#xA;          -- clever-f style&#xA;          [motion:lower()] = &#34;next&#34;,&#xA;          [motion:upper()] = &#34;prev&#34;,&#xA;          -- jump2d style: same case goes next, opposite case goes prev&#xA;          -- [motion] = &#34;next&#34;,&#xA;          -- [motion:match(&#34;%l&#34;) and motion:upper() or motion:lower()] = &#34;prev&#34;,&#xA;        }&#xA;      end,&#xA;      search = { wrap = false },&#xA;      highlight = { backdrop = true },&#xA;      jump = { register = false },&#xA;    },&#xA;    -- options used for treesitter selections&#xA;    -- `require(&#34;flash&#34;).treesitter()`&#xA;    treesitter = {&#xA;      labels = &#34;abcdefghijklmnopqrstuvwxyz&#34;,&#xA;      jump = { pos = &#34;range&#34; },&#xA;      search = { incremental = false },&#xA;      label = { before = true, after = true, style = &#34;inline&#34; },&#xA;      highlight = {&#xA;        backdrop = false,&#xA;        matches = false,&#xA;      },&#xA;    },&#xA;    treesitter_search = {&#xA;      jump = { pos = &#34;range&#34; },&#xA;      search = { multi_window = true, wrap = true, incremental = false },&#xA;      remote_op = { restore = true },&#xA;      label = { before = true, after = true, style = &#34;inline&#34; },&#xA;    },&#xA;    -- options used for remote flash&#xA;    remote = {&#xA;      remote_op = { restore = true, motion = true },&#xA;    },&#xA;  },&#xA;  -- options for the floating window that shows the prompt,&#xA;  -- for regular jumps&#xA;  prompt = {&#xA;    enabled = true,&#xA;    prefix = { { &#34;⚡&#34;, &#34;FlashPromptIcon&#34; } },&#xA;    win_config = {&#xA;      relative = &#34;editor&#34;,&#xA;      width = 1, -- when &amp;lt;=1 it&#39;s a percentage of the editor width&#xA;      height = 1,&#xA;      row = -1, -- when negative it&#39;s an offset from the bottom&#xA;      col = 0, -- when negative it&#39;s an offset from the right&#xA;      zindex = 1000,&#xA;    },&#xA;  },&#xA;  -- options for remote operator pending mode&#xA;  remote_op = {&#xA;    -- restore window views and cursor position&#xA;    -- after doing a remote operation&#xA;    restore = false,&#xA;    -- For `jump.pos = &#34;range&#34;`, this setting is ignored.&#xA;    -- `true`: always enter a new motion when doing a remote operation&#xA;    -- `false`: use the window&#39;s cursor position and jump target&#xA;    -- `nil`: act as `true` for remote windows, `false` for the current window&#xA;    motion = false,&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;!-- config:end --&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🚀 Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Treesitter&lt;/strong&gt;: &lt;code&gt;require(&#34;flash&#34;).treesitter(opts?)&lt;/code&gt; opens &lt;strong&gt;flash&lt;/strong&gt; in &lt;strong&gt;Treesitter&lt;/strong&gt; mode&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;use a jump label, or use &lt;code&gt;;&lt;/code&gt; and &lt;code&gt;,&lt;/code&gt; to increase/decrease the selection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;regular search&lt;/strong&gt;: search as you normally do, but enhanced with jump labels. You need to set &lt;code&gt;opts.modes.search.enabled = true&lt;/code&gt;, or toggle it with &lt;code&gt;require(&#34;flash&#34;).toggle()&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;f&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt; motions:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;After typing &lt;code&gt;f{char}&lt;/code&gt; or &lt;code&gt;F{char},&lt;/code&gt; you can repeat the motion with &lt;code&gt;f&lt;/code&gt; or go to the previous match with &lt;code&gt;F&lt;/code&gt; to undo a jump.&lt;/li&gt; &#xA;   &lt;li&gt;Similarly, after typing &lt;code&gt;t{char}&lt;/code&gt; or &lt;code&gt;T{char},&lt;/code&gt; you can repeat the motion with &lt;code&gt;t&lt;/code&gt; or go to the previous match with &lt;code&gt;T&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;You can also go to the next match with &lt;code&gt;;&lt;/code&gt; or previous match with &lt;code&gt;,&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Any highlights clear automatically when moving, changing buffers, or pressing &lt;code&gt;&amp;lt;esc&amp;gt;&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;toggle Search&lt;/strong&gt;: &lt;code&gt;require(&#34;flash&#34;).toggle(boolean?)&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;toggles &lt;strong&gt;flash&lt;/strong&gt; on or off while using regular search&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Treesitter Search&lt;/strong&gt;: &lt;code&gt;require(&#34;flash&#34;).treesitter_search(opts?)&lt;/code&gt; opens &lt;strong&gt;flash&lt;/strong&gt; in &lt;strong&gt;Treesitter Search&lt;/strong&gt; mode&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;combination of &lt;strong&gt;Treesitter&lt;/strong&gt; and &lt;strong&gt;Search&lt;/strong&gt; modes&lt;/li&gt; &#xA;   &lt;li&gt;do something like &lt;code&gt;yR&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;you can now start typing a search pattern.&lt;/li&gt; &#xA;   &lt;li&gt;arround your matches, all the surrounding Treesitter nodes will be labeled.&lt;/li&gt; &#xA;   &lt;li&gt;select a label to perform the operator on the new selection&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;remote&lt;/strong&gt;: &lt;code&gt;require(&#34;flash&#34;).remote(opts?)&lt;/code&gt; opens &lt;strong&gt;flash&lt;/strong&gt; in &lt;strong&gt;remote&lt;/strong&gt; mode&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;equivalent to:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  remote_op = {&#xA;    restore = true,&#xA;    motion = true,&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;this is only useful in operator pending mode.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;For example, press &lt;code&gt;yr&lt;/code&gt; to start yanking and open flash&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;select a label to set the cursor position&lt;/li&gt; &#xA;     &lt;li&gt;perform any motion, like &lt;code&gt;iw&lt;/code&gt; or even start flash Treesitter with &lt;code&gt;S&lt;/code&gt;&lt;/li&gt; &#xA;     &lt;li&gt;the yank will be performed on the new selection&lt;/li&gt; &#xA;     &lt;li&gt;you&#39;ll be back in the original window / position&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;You can also configure the &lt;code&gt;remote_op&lt;/code&gt; options by default, so that &lt;code&gt;ys&lt;/code&gt;, behaves like &lt;code&gt;yr&lt;/code&gt; for remote operations&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  remote_op = {&#xA;    restore = true,&#xA;    motion = nil,&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;jump&lt;/strong&gt;: &lt;code&gt;require(&#34;flash&#34;).jump(opts?)&lt;/code&gt; opens &lt;strong&gt;flash&lt;/strong&gt; with the given options&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;type any number of characters before typing a jump label&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;VS Code&lt;/strong&gt;: some functionality is changed/disabled when running &lt;strong&gt;flash&lt;/strong&gt; in &lt;strong&gt;VS Code&lt;/strong&gt;:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;prompt&lt;/code&gt; is disabled&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;highlights&lt;/code&gt; are set to different defaults that will actually work in VS Code&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📡 API&lt;/h2&gt; &#xA;&lt;p&gt;The options for &lt;code&gt;require(&#34;flash&#34;).jump(opts?)&lt;/code&gt;, are the same as those in the config section, but can additionally have the following fields:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;matcher&lt;/code&gt;: a custom function that generates matches for a given window&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;labeler&lt;/code&gt;: a custom function to label matches&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can also add labels in the &lt;code&gt;matcher&lt;/code&gt; function and then set &lt;code&gt;labeler&lt;/code&gt; to an empty function &lt;code&gt;labeler = function() end&lt;/code&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Type Definitions&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-typescript&#34;&gt;type FlashMatcher = (win: number, state: FlashState) =&amp;gt; FlashMatch[];&#xA;type FlashLabeler = (matches: FlashMatch[], state: FlashState) =&amp;gt; void;&#xA;&#xA;interface FlashMatch {&#xA;  win: number;&#xA;  pos: [number, number]; // (1,0)-indexed&#xA;  end_pos: [number, number]; // (1,0)-indexed&#xA;  label?: string | false; // set to false to never show a label for this match&#xA;  highlight?: boolean; // override opts.highlight.matches for this match&#xA;}&#xA;&#xA;// Check the code for the full definition&#xA;// of Flash.State at `lua/flash/state.lua`&#xA;type FlashState = {};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;💡 Examples&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Forward search only&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  search = { forward = true, wrap = false, multi_window = false },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Backward search only&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  search = { forward = false, wrap = false, multi_window = false },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show diagnostics at target, without changing cursor position&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  action = function(match, state)&#xA;    vim.api.nvim_win_call(match.win, function()&#xA;      vim.api.nvim_win_set_cursor(match.win, match.pos)&#xA;      vim.diagnostic.open_float()&#xA;    end)&#xA;    state:restore()&#xA;  end,&#xA;})&#xA;&#xA;-- More advanced example that also highlights diagnostics:&#xA;require(&#34;flash&#34;).jump({&#xA;  matcher = function(win)&#xA;    ---@param diag Diagnostic&#xA;    return vim.tbl_map(function(diag)&#xA;      return {&#xA;        pos = { diag.lnum + 1, diag.col },&#xA;        end_pos = { diag.end_lnum + 1, diag.end_col - 1 },&#xA;      }&#xA;    end, vim.diagnostic.get(vim.api.nvim_win_get_buf(win)))&#xA;  end,&#xA;  action = function(match, state)&#xA;    vim.api.nvim_win_call(match.win, function()&#xA;      vim.api.nvim_win_set_cursor(match.win, match.pos)&#xA;      vim.diagnostic.open_float()&#xA;    end)&#xA;    state:restore()&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Match beginning of words only&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  search = {&#xA;    mode = function(str)&#xA;      return &#34;\\&amp;lt;&#34; .. str&#xA;    end,&#xA;  },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Initialize flash with the word under the cursor&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  pattern = vim.fn.expand(&#34;&amp;lt;cword&amp;gt;&#34;),&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Jump to a line&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  search = { mode = &#34;search&#34;, max_length = 0 },&#xA;  label = { after = { 0, 0 } },&#xA;  pattern = &#34;^&#34;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Select any word&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({&#xA;  pattern = &#34;.&#34;, -- initialize pattern with any char&#xA;  search = {&#xA;    mode = function(pattern)&#xA;      -- remove leading dot&#xA;      if pattern:sub(1, 1) == &#34;.&#34; then&#xA;        pattern = pattern:sub(2)&#xA;      end&#xA;      -- return word pattern and proper skip pattern&#xA;      return ([[\&amp;lt;%s\w*\&amp;gt;]]):format(pattern), ([[\&amp;lt;%s]]):format(pattern)&#xA;    end,&#xA;  },&#xA;  -- select the range&#xA;  jump = { pos = &#34;range&#34; },&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;code&gt;f&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt; with labels&lt;/summary&gt; &#xA; &lt;p&gt;Use the options below:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;  modes = {&#xA;    char = {&#xA;      jump_labels = true&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Telescope integration&lt;/summary&gt; &#xA; &lt;p&gt;This will allow you to use &lt;code&gt;s&lt;/code&gt; in normal mode and &lt;code&gt;&amp;lt;c-s&amp;gt;&lt;/code&gt; in insert mode, to jump to a label in Telescope results.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;{&#xA;    &#34;nvim-telescope/telescope.nvim&#34;,&#xA;    optional = true,&#xA;    opts = function(_, opts)&#xA;      local function flash(prompt_bufnr)&#xA;        require(&#34;flash&#34;).jump({&#xA;          pattern = &#34;^&#34;,&#xA;          label = { after = { 0, 0 } },&#xA;          search = {&#xA;            mode = &#34;search&#34;,&#xA;            exclude = {&#xA;              function(win)&#xA;                return vim.bo[vim.api.nvim_win_get_buf(win)].filetype ~= &#34;TelescopeResults&#34;&#xA;              end,&#xA;            },&#xA;          },&#xA;          action = function(match)&#xA;            local picker = require(&#34;telescope.actions.state&#34;).get_current_picker(prompt_bufnr)&#xA;            picker:set_selection(match.pos[1] - 1)&#xA;          end,&#xA;        })&#xA;      end&#xA;      opts.defaults = vim.tbl_deep_extend(&#34;force&#34;, opts.defaults or {}, {&#xA;        mappings = {&#xA;          n = { s = flash },&#xA;          i = { [&#34;&amp;lt;c-s&amp;gt;&#34;] = flash },&#xA;        },&#xA;      })&#xA;    end,&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Continue last search&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;flash&#34;).jump({continue = true})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;2-char jump, similar to &lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/readmes/mini-jump2d.md&#34;&gt; mini.jump2d &lt;/a&gt; or &lt;a href=&#34;https://github.com/phaazon/hop.nvim&#34;&gt; HopWord (hop.nvim) &lt;/a&gt; &lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local Flash = require(&#34;flash&#34;)&#xA;&#xA;---@param opts Flash.Format&#xA;local function format(opts)&#xA;  -- always show first and second label&#xA;  return {&#xA;    { opts.match.label1, &#34;FlashMatch&#34; },&#xA;    { opts.match.label2, &#34;FlashLabel&#34; },&#xA;  }&#xA;end&#xA;&#xA;Flash.jump({&#xA;  search = { mode = &#34;search&#34; },&#xA;  label = { after = false, before = { 0, 0 }, uppercase = false, format = format },&#xA;  pattern = [[\&amp;lt;]],&#xA;  action = function(match, state)&#xA;    state:hide()&#xA;    Flash.jump({&#xA;      search = { max_length = 0 },&#xA;      highlight = { matches = false },&#xA;      label = { format = format },&#xA;      matcher = function(win)&#xA;        -- limit matches to the current label&#xA;        return vim.tbl_filter(function(m)&#xA;          return m.label == match.label and m.win == win&#xA;        end, state.results)&#xA;      end,&#xA;      labeler = function(matches)&#xA;        for _, m in ipairs(matches) do&#xA;          m.label = m.label2 -- use the second label&#xA;        end&#xA;      end,&#xA;    })&#xA;  end,&#xA;  labeler = function(matches, state)&#xA;    local labels = state:labels()&#xA;    for m, match in ipairs(matches) do&#xA;      match.label1 = labels[math.floor((m - 1) / #labels) + 1]&#xA;      match.label2 = labels[(m - 1) % #labels + 1]&#xA;      match.label = match.label1&#xA;    end&#xA;  end,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;🌈 Highlights&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Group&lt;/th&gt; &#xA;   &lt;th&gt;Default&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FlashBackdrop&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Comment&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;backdrop&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FlashMatch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Search&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;search matches&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FlashCurrent&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;IncSearch&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;current match&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FlashLabel&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Substitute&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;jump label&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FlashPrompt&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;MsgArea&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;prompt&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FlashPromptIcon&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Special&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;prompt icon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;FlashCursor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;cursor&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;📦 Alternatives&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggandor/leap.nvim&#34;&gt;leap.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggandor/lightspeed.nvim&#34;&gt;lightspeed.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/justinmk/vim-sneak&#34;&gt;vim-sneak&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/readmes/mini-jump.md&#34;&gt;mini.jump&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/echasnovski/mini.nvim/raw/main/readmes/mini-jump2d.md&#34;&gt;mini.jump2d&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/phaazon/hop.nvim&#34;&gt;hop.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/rlane/pounce.nvim&#34;&gt;pounce.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/woosaaahh/sj.nvim&#34;&gt;sj.nvim&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mfussenegger/nvim-treehopper&#34;&gt;nvim-treehopper&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ggandor/flit.nvim&#34;&gt;flit.nvim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>