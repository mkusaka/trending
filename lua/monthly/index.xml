<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-01T01:50:47Z</updated>
  <subtitle>Monthly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LuaLS/lua-language-server</title>
    <updated>2025-01-01T01:50:47Z</updated>
    <id>tag:github.com,2025-01-01:/LuaLS/lua-language-server</id>
    <link href="https://github.com/LuaLS/lua-language-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A language server that offers Lua language support - programmed in Lua&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lua-language-server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/LuaLS/lua-language-server/.github%2Fworkflows%2Fbuild.yml&#34; alt=&#34;build&#34;&gt; &lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/v/sumneko.lua&#34; alt=&#34;Version (including pre-releases)&#34;&gt; &lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/i/sumneko.lua&#34; alt=&#34;Installs&#34;&gt; &lt;img src=&#34;https://img.shields.io/visual-studio-marketplace/d/sumneko.lua&#34; alt=&#34;Downloads&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Lua development just got a whole lot better&lt;/strong&gt;&lt;/em&gt; 🧠&lt;/p&gt; &#xA;&lt;p&gt;The Lua language server provides various language features for Lua to make development easier and faster. With nearly a million installs in Visual Studio Code, it is the most popular extension for Lua language support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://luals.github.io&#34;&gt;See our website for more info&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;⚙️ Supports &lt;code&gt;Lua 5.4&lt;/code&gt;, &lt;code&gt;Lua 5.3&lt;/code&gt;, &lt;code&gt;Lua 5.2&lt;/code&gt;, &lt;code&gt;Lua 5.1&lt;/code&gt;, and &lt;code&gt;LuaJIT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;📄 Over 20 supported &lt;a href=&#34;https://luals.github.io/wiki/annotations/&#34;&gt;annotations&lt;/a&gt; for documenting your code&lt;/li&gt; &#xA; &lt;li&gt;↪ Go to definition&lt;/li&gt; &#xA; &lt;li&gt;🦺 Dynamic &lt;a href=&#34;https://luals.github.io/wiki/type-checking/&#34;&gt;type checking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🔍 Find references&lt;/li&gt; &#xA; &lt;li&gt;⚠️ &lt;a href=&#34;https://luals.github.io/wiki/diagnostics/&#34;&gt;Diagnostics/Warnings&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🕵️ &lt;a href=&#34;https://luals.github.io/wiki/syntax-errors/&#34;&gt;Syntax checking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📝 Element renaming&lt;/li&gt; &#xA; &lt;li&gt;🗨️ Hover to view details on variables, functions, and more&lt;/li&gt; &#xA; &lt;li&gt;🖊️ Autocompletion&lt;/li&gt; &#xA; &lt;li&gt;📚 Support for &lt;a href=&#34;https://luals.github.io/wiki/settings/#workspacelibrary&#34;&gt;libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💅 &lt;a href=&#34;https://luals.github.io/wiki/formatter/&#34;&gt;Code formatting&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;💬 &lt;a href=&#34;https://luals.github.io/wiki/diagnostics/#spell-check&#34;&gt;Spell checking&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;🛠️ Custom &lt;a href=&#34;https://luals.github.io/wiki/plugins/&#34;&gt;plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;📖 &lt;a href=&#34;https://luals.github.io/wiki/export-docs/&#34;&gt;Documentation Generation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;The language server can be installed for use in Visual Studio Code, NeoVim, and any &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/implementors/tools/&#34;&gt;other clients&lt;/a&gt; that support the &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;Language Server Protocol&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://luals.github.io/#install&#34;&gt;installation instructions on our website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://luals.github.io/#vscode-install&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/VS%20Code-Install-blue?style=for-the-badge&amp;amp;logo=visualstudiocode&#34; alt=&#34;Install in VS Code&#34; title=&#34;Install in VS Code&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://luals.github.io/#neovim-install&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/NeoVim-Install-blue?style=for-the-badge&amp;amp;logo=neovim&#34; alt=&#34;Install for NeoVim&#34; title=&#34;Install for NeoVim&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://luals.github.io/#other-install&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Other-Install-blue?style=for-the-badge&amp;amp;logo=windowsterminal&#34; alt=&#34;Other&#34; title=&#34;Install for command line&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Community Install Methods&lt;/h3&gt; &#xA;&lt;p&gt;The install methods below are maintained by community members.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bellini666/asdf-lua-language-server&#34;&gt;asdf plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/raw/master/changelog.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://luals.github.io/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://luals.github.io/wiki/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;Report an issue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;Suggest a feature&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/discussions&#34;&gt;Discuss&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;If you find any mistakes, please &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;report it&lt;/a&gt; or open a &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/pulls&#34;&gt;pull request&lt;/a&gt; if you have a fix of your own ❤️&lt;/p&gt; &#xA; &lt;p&gt;如果你发现了任何错误，请&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;告诉我&lt;/a&gt;或使用&lt;a href=&#34;https://github.com/LuaLS/lua-language-server/pulls&#34;&gt;Pull Requests&lt;/a&gt;来直接修复。❤️&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Available Languages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;en-us&lt;/code&gt; 🇺🇸&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zh-cn&lt;/code&gt; 🇨🇳&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;zh-tw&lt;/code&gt; 🇹🇼&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;pt-br&lt;/code&gt; 🇧🇷&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; All translations are provided and collaborated on by the community. If you find an inappropriate or harmful translation, &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/issues&#34;&gt;please report it immediately&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Are you able to &lt;a href=&#34;https://luals.github.io/wiki/translations&#34;&gt;provide a translation&lt;/a&gt;? It would be greatly appreciated!&lt;/p&gt; &#xA;&lt;p&gt;Thank you to &lt;a href=&#34;https://github.com/LuaLS/lua-language-server/commits/master/locale&#34;&gt;all contributors of translations&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;Privacy&lt;/h2&gt; &#xA;&lt;p&gt;The language server had &lt;strong&gt;opt-in&lt;/strong&gt; telemetry that collected usage data and sent it to the development team to help improve the extension. Read our &lt;a href=&#34;https://luals.github.io/privacy#language-server&#34;&gt;privacy policy&lt;/a&gt; to learn more. Telemetry was removed in &lt;code&gt;v3.6.5&lt;/code&gt; and is no longer part of the language server.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://contrib.rocks/image?repo=sumneko/lua-language-server&#34; alt=&#34;GitHub Contributors Image&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credit&lt;/h2&gt; &#xA;&lt;p&gt;Software that the language server (or the development of it) uses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/bee.lua&#34;&gt;bee.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/luamake&#34;&gt;luamake&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sqmedeiros/lpeglabel&#34;&gt;LPegLabel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/LuaParser&#34;&gt;LuaParser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/NickeManarin/ScreenToGif&#34;&gt;ScreenToGif&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-languageserver-node&#34;&gt;vscode-languageclient&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/textmate/lua.tmbundle&#34;&gt;lua.tmbundle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://emmylua.github.io&#34;&gt;EmmyLua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/lua-glob&#34;&gt;lua-glob&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LuaLS/utility&#34;&gt;utility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/vscode-lua-doc&#34;&gt;vscode-lua-doc&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/actboy168/json.lua&#34;&gt;json.lua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CppCXY/EmmyLuaCodeStyle&#34;&gt;EmmyLuaCodeStyle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/kikito/inspect.lua&#34;&gt;inspect.lua&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Saghen/blink.cmp</title>
    <updated>2025-01-01T01:50:47Z</updated>
    <id>tag:github.com,2025-01-01:/Saghen/blink.cmp</id>
    <link href="https://github.com/Saghen/blink.cmp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Performant, batteries-included completion plugin for Neovim&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING] This plugin is &lt;em&gt;beta&lt;/em&gt; quality. Expect breaking changes and many bugs&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Blink Completion (blink.cmp)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;blink.cmp&lt;/strong&gt; is a completion plugin with support for LSPs and external sources that updates on every keystroke with minimal overhead (0.5-4ms async). It use a &lt;a href=&#34;https://github.com/saghen/frizbee&#34;&gt;custom SIMD fuzzy searcher&lt;/a&gt; to easily handle &amp;gt;20k items. It provides extensibility via hooks into the trigger, sources and rendering pipeline. Plenty of work has been put into making each stage of the pipeline as intelligent as possible, such as frecency and proximity bonus on fuzzy matching, and this work is on-going.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/user-attachments/assets/9849e57a-3c2c-49a8-959c-dbb7fef78c80&#34;&gt;https://github.com/user-attachments/assets/9849e57a-3c2c-49a8-959c-dbb7fef78c80&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Works out of the box with no additional configuration&lt;/li&gt; &#xA; &lt;li&gt;Updates on every keystroke (0.5-4ms async, single core)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/saghen/frizbee&#34;&gt;Typo resistant fuzzy&lt;/a&gt; with frecency and proximity bonus&lt;/li&gt; &#xA; &lt;li&gt;Extensive LSP support (&lt;a href=&#34;https://raw.githubusercontent.com/Saghen/blink.cmp/main/docs/development/lsp-tracker.md&#34;&gt;tracker&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Native &lt;code&gt;vim.snippet&lt;/code&gt; support (including &lt;code&gt;friendly-snippets&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;External sources support (&lt;a href=&#34;https://github.com/saghen/blink.compat&#34;&gt;compatibility layer for &lt;code&gt;nvim-cmp&lt;/code&gt; sources&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Auto-bracket support based on semantic tokens&lt;/li&gt; &#xA; &lt;li&gt;Signature help (experimental, opt-in)&lt;/li&gt; &#xA; &lt;li&gt;Command line completion&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Saghen/blink.cmp/main/#compared-to-nvim-cmp&#34;&gt;Comparison with nvim-cmp&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Head over to the &lt;a href=&#34;https://cmp.saghen.dev&#34;&gt;documentation website&lt;/a&gt; for installation instructions and configuration options.&lt;/p&gt; &#xA;&lt;h2&gt;Special Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/hrsh7th/&#34;&gt;@hrsh7th&lt;/a&gt; nvim-cmp used as inspiration and cmp-path/cmp-cmdline implementations modified for path/cmdline sources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/garymjr&#34;&gt;@garymjr&lt;/a&gt; nvim-snippets implementation modified for snippets source&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/redxtech&#34;&gt;@redxtech&lt;/a&gt; Help with design and testing&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/aaditya-sahay&#34;&gt;@aaditya-sahay&lt;/a&gt; Help with rust, design and testing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/stefanboca&#34;&gt;@stefanboca&lt;/a&gt; Author of &lt;a href=&#34;https://github.com/saghen/blink.compat&#34;&gt;blink.compat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lopi-py&#34;&gt;@lopi-py&lt;/a&gt; Contributes to the windowing code&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/scottmckendry&#34;&gt;@scottmckendry&lt;/a&gt; Contributes to the CI and prebuilt binaries&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Balssh&#34;&gt;@balssh&lt;/a&gt; Manages nixpkg and nixvim&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>neovim/nvim-lspconfig</title>
    <updated>2025-01-01T01:50:47Z</updated>
    <id>tag:github.com,2025-01-01:/neovim/nvim-lspconfig</id>
    <link href="https://github.com/neovim/nvim-lspconfig" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Quickstart configs for Nvim LSP&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;nvim-lspconfig&lt;/h1&gt; &#xA;&lt;p&gt;nvim-lspconfig is a &#34;data only&#34; repo, providing basic, default &lt;a href=&#34;https://neovim.io/doc/user/lsp.html&#34;&gt;Nvim LSP client&lt;/a&gt; configurations for various LSP servers.&lt;/p&gt; &#xA;&lt;p&gt;View the &lt;a href=&#34;https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/doc/configs.md&#34;&gt;documentation for all configs&lt;/a&gt; or &lt;code&gt;:help lspconfig-all&lt;/code&gt; from Nvim.&lt;/p&gt; &#xA;&lt;h2&gt;Important ⚠️&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you found a bug in the Nvim LSP functionality (&lt;code&gt;:help lsp&lt;/code&gt;), &lt;a href=&#34;https://github.com/neovim/neovim/issues/new?assignees=&amp;amp;labels=bug%2Clsp&amp;amp;template=lsp_bug_report.yml&#34;&gt;report it to Neovim core&lt;/a&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Do not&lt;/strong&gt; report it here. Only configuration data lives here.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;These configs are &lt;strong&gt;best-effort and supported by the community.&lt;/strong&gt; See &lt;a href=&#34;https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/#contributions&#34;&gt;contributions&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repo only provides &lt;em&gt;configurations&lt;/em&gt;. Its programmatic API is deprecated and should not be used externally. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/neovim/neovim/issues/28479&#34;&gt;Work is planned&lt;/a&gt; to selectively upstream the &#34;framework&#34; parts (&lt;em&gt;not&lt;/em&gt; the configs) of nvim-lspconfig, to Nvim core, and deprecate them in nvim-lspconfig.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://luarocks.org/modules/neovim/nvim-lspconfig&#34;&gt;&lt;img src=&#34;https://img.shields.io/luarocks/v/neovim/nvim-lspconfig?logo=lua&amp;amp;color=purple&#34; alt=&#34;LuaRocks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Requires Nvim 0.9 above. Update Nvim and nvim-lspconfig before reporting an issue.&lt;/li&gt; &#xA; &lt;li&gt;Install nvim-lspconfig using Vim&#39;s &#34;packages&#34; feature: &lt;pre&gt;&lt;code&gt;git clone https://github.com/neovim/nvim-lspconfig ~/.config/nvim/pack/nvim/start/nvim-lspconfig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Or use a 3rd-party plugin manager (consult the documentation for your plugin manager).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Quickstart&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install a language server, e.g. &lt;a href=&#34;https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/doc/configs.md#pyright&#34;&gt;pyright&lt;/a&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm i -g pyright&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add the language server setup to your init.lua. &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require&#39;lspconfig&#39;.pyright.setup{}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ensure your project/workspace contains a root marker which matches the server requirements specified in &lt;code&gt;:help lspconfig-all&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Open a code file in Nvim. LSP will attach and provide diagnostics. &lt;pre&gt;&lt;code&gt;nvim main.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;:checkhealth lsp&lt;/code&gt; to see the status or to troubleshoot.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Read &lt;code&gt;:help lspconfig&lt;/code&gt; for details. Read &lt;code&gt;:help lspconfig-all&lt;/code&gt; for the full list of server-specific details. For servers not on your &lt;code&gt;$PATH&lt;/code&gt; (e.g., &lt;code&gt;jdtls&lt;/code&gt;, &lt;code&gt;elixirls&lt;/code&gt;), you must manually set the &lt;code&gt;cmd&lt;/code&gt; parameter when calling &lt;code&gt;setup()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Nvim sets some default options and mappings when a buffer attaches to LSP (see &lt;a href=&#34;https://neovim.io/doc/user/lsp.html#lsp-config&#34;&gt;&lt;code&gt;:help lsp-config&lt;/code&gt;&lt;/a&gt;). In particular:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neovim.io/doc/user/tagsrch.html#tag-function&#34;&gt;&lt;code&gt;&#39;tagfunc&#39;&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enables &#34;go to definition&#34; capabilities using &lt;a href=&#34;https://neovim.io/doc/user/tagsrch.html#CTRL-%5D&#34;&gt;&lt;code&gt;&amp;lt;C-]&amp;gt;&lt;/code&gt;&lt;/a&gt; and other &lt;a href=&#34;https://neovim.io/doc/user/tagsrch.html#tag-commands&#34;&gt;tag commands&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neovim.io/doc/user/options.html#&#39;omnifunc&#39;&#34;&gt;&lt;code&gt;&#39;omnifunc&#39;&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enables (manual) omni mode completion with &lt;code&gt;&amp;lt;C-X&amp;gt;&amp;lt;C-O&amp;gt;&lt;/code&gt; in Insert mode. For &lt;em&gt;auto&lt;/em&gt;completion, an &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/wiki/Autocompletion&#34;&gt;autocompletion plugin&lt;/a&gt; is required.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://neovim.io/doc/user/options.html#&#39;formatexpr&#39;&#34;&gt;&lt;code&gt;&#39;formatexpr&#39;&lt;/code&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Enables LSP formatting with &lt;a href=&#34;https://neovim.io/doc/user/change.html#gq&#34;&gt;&lt;code&gt;gq&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;K&lt;/code&gt; maps to &lt;a href=&#34;https://neovim.io/doc/user/lsp.html#vim.lsp.buf.hover()&#34;&gt;&lt;code&gt;vim.lsp.buf.hover()&lt;/code&gt;&lt;/a&gt; in Normal mode.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;[d&lt;/code&gt; and &lt;code&gt;]d&lt;/code&gt; map to &lt;code&gt;vim.diagnostic.goto_prev()&lt;/code&gt; and &lt;code&gt;vim.diagnostic.goto_next()&lt;/code&gt;, respectively.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;C-W&amp;gt;d&lt;/code&gt; maps to &lt;code&gt;vim.diagnostic.open_float()&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Further customization can be achieved using the &lt;a href=&#34;https://neovim.io/doc/user/lsp.html#LspAttach&#34;&gt;&lt;code&gt;LspAttach&lt;/code&gt;&lt;/a&gt; autocommand event. The &lt;a href=&#34;https://neovim.io/doc/user/lsp.html#LspAttach&#34;&gt;&lt;code&gt;LspDetach&lt;/code&gt;&lt;/a&gt; autocommand event can be used to &#34;cleanup&#34; mappings if a buffer becomes detached from an LSP server. See &lt;a href=&#34;https://neovim.io/doc/user/lsp.html#LspAttach&#34;&gt;&lt;code&gt;:h LspAttach&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://neovim.io/doc/user/lsp.html#LspDetach&#34;&gt;&lt;code&gt;:h LspDetach&lt;/code&gt;&lt;/a&gt; for details and examples. See &lt;a href=&#34;https://neovim.io/doc/user/lsp.html#lsp-buf&#34;&gt;&lt;code&gt;:h lsp-buf&lt;/code&gt;&lt;/a&gt; for details on other LSP functions.&lt;/p&gt; &#xA;&lt;p&gt;Additional configuration options can be provided for each LSP server by passing arguments to the &lt;code&gt;setup&lt;/code&gt; function. See &lt;code&gt;:h lspconfig-setup&lt;/code&gt; for details. Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local lspconfig = require(&#39;lspconfig&#39;)&#xA;lspconfig.rust_analyzer.setup {&#xA;  -- Server-specific settings. See `:help lspconfig-setup`&#xA;  settings = {&#xA;    [&#39;rust-analyzer&#39;] = {},&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;The most common reasons a language server does not start or attach are:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Language server is not installed. nvim-lspconfig does not install language servers for you. You should be able to run the &lt;code&gt;cmd&lt;/code&gt; defined in each server&#39;s Lua module from the command line and see that the language server starts. If the &lt;code&gt;cmd&lt;/code&gt; is an executable name instead of an absolute path to the executable, ensure it is on your path.&lt;/li&gt; &#xA; &lt;li&gt;Missing filetype plugins. Certain languages are not detecting by Vim/Nvim because they have not yet been added to the filetype detection system. Ensure &lt;code&gt;:set ft?&lt;/code&gt; shows the filetype and not an empty value.&lt;/li&gt; &#xA; &lt;li&gt;Not triggering root detection. &lt;strong&gt;Some&lt;/strong&gt; language servers will only start if it is opened in a directory, or child directory, containing a file which signals the &lt;em&gt;root&lt;/em&gt; of the project. Most of the time, this is a &lt;code&gt;.git&lt;/code&gt; folder, but each server defines the root config in the lua file. See &lt;a href=&#34;https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/doc/configs.md&#34;&gt;doc/configs.md&lt;/a&gt; or the source for the list of root directories.&lt;/li&gt; &#xA; &lt;li&gt;You must pass &lt;code&gt;capabilities&lt;/code&gt; for &lt;strong&gt;each&lt;/strong&gt; &lt;code&gt;setup {}&lt;/code&gt; if you want these to take effect.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Do not call &lt;code&gt;setup {}&lt;/code&gt; twice for the same server&lt;/strong&gt;. The second call to &lt;code&gt;setup {}&lt;/code&gt; will overwrite the first.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Bug reports&lt;/h2&gt; &#xA;&lt;p&gt;If you found a bug with LSP functionality, &lt;a href=&#34;https://github.com/neovim/neovim/issues/new?assignees=&amp;amp;labels=bug%2Clsp&amp;amp;template=lsp_bug_report.yml&#34;&gt;report it to Neovim core&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Before reporting a bug, check your logs and the output of &lt;code&gt;:LspInfo&lt;/code&gt;. Add the following to your init.vim to enable logging:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;vim.lsp.set_log_level(&#34;debug&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Attempt to run the language server, and open the log with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;:LspLog&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Most of the time, the reason for failure is present in the logs.&lt;/p&gt; &#xA;&lt;h2&gt;Commands&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspInfo&lt;/code&gt; (deprecated alias to &lt;code&gt;:che lspconfig&lt;/code&gt;) shows the status of active and configured language servers.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspStart &amp;lt;config_name&amp;gt;&lt;/code&gt; Start the requested server name. Will only successfully start if the command detects a root directory matching the current config. Pass &lt;code&gt;autostart = false&lt;/code&gt; to your &lt;code&gt;.setup{}&lt;/code&gt; call for a language server if you would like to launch clients solely with this command. Defaults to all servers matching current buffer filetype.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspStop [&amp;lt;client_id_or_name&amp;gt; ...]&lt;/code&gt; Stops the given server(s). Defaults to stopping all servers active on the current buffer. To force stop add &lt;code&gt;++force&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspRestart [&amp;lt;client_id_or_name&amp;gt; ...]&lt;/code&gt; Restarts the given client(s), and attempts to reattach to all previously attached buffers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;If a language server is missing from &lt;a href=&#34;https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/doc/configs.md&#34;&gt;configs.md&lt;/a&gt;, contributing a new configuration for it helps others, especially if the server requires special setup. Follow these steps:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Create a new file at &lt;code&gt;lua/lspconfig/configs/SERVER_NAME.lua&lt;/code&gt;. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Copy an &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/raw/master/lua/lspconfig/configs/&#34;&gt;existing config&lt;/a&gt; to get started. Most configs are simple. For an extensive example see &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/raw/master/lua/lspconfig/configs/texlab.lua&#34;&gt;texlab.lua&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ask questions on &lt;a href=&#34;https://github.com/neovim/neovim/discussions&#34;&gt;GitHub Discussions&lt;/a&gt; or in the &lt;a href=&#34;https://app.element.io/#/room/%23neovim:matrix.org&#34;&gt;Neovim Matrix room&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Release process&lt;/h3&gt; &#xA;&lt;p&gt;To publish a release:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create and push a new &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig/tags&#34;&gt;tag&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;After pushing the tag, a &lt;a href=&#34;https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/.github/workflows/release.yml&#34;&gt;GitHub action&lt;/a&gt; will automatically package the plugin and publish the release to LuaRocks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright Neovim contributors. All rights reserved.&lt;/p&gt; &#xA;&lt;p&gt;nvim-lspconfig is licensed under the terms of the Apache 2.0 license.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/neovim/nvim-lspconfig/master/LICENSE.md&#34;&gt;LICENSE.md&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>