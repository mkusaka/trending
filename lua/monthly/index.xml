<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Lua Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-02T02:44:59Z</updated>
  <subtitle>Monthly Trending of Lua in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Koko-boya/Grasscutter_Resources</title>
    <updated>2022-06-02T02:44:59Z</updated>
    <id>tag:github.com,2022-06-02:/Koko-boya/Grasscutter_Resources</id>
    <link href="https://github.com/Koko-boya/Grasscutter_Resources" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Combined Resource Folder from Multiple Sources of certain anime game&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Grasscutter_Resources&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;em&gt;Resource Version - &#34;Certain Anime Game&#34; 2.7.0&lt;/em&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ExcelBinOutput&lt;/li&gt; &#xA; &lt;li&gt;BinOutput&lt;/li&gt; &#xA; &lt;li&gt;Scripts [Lua From &lt;a href=&#34;https://github.com/lilmayofuksu/animepython&#34;&gt;lilmayofuksu/animepython&lt;/a&gt; - 2.6.51)&lt;/li&gt; &#xA; &lt;li&gt;Readable&lt;/li&gt; &#xA; &lt;li&gt;Subtitle&lt;/li&gt; &#xA; &lt;li&gt;TextMap&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Grasscutters/Grasscutter&#34;&gt;Grasscutter&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Dimbreath&#34;&gt;Dimbreath&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/radioegor146&#34;&gt;radioegor146&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TheLostTree&#34;&gt;TheLostTree&lt;/a&gt; &lt;br&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/lilmayofuksu/animepython&#34;&gt;lilmayofuksu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>PathOfBuildingCommunity/PathOfBuilding</title>
    <updated>2022-06-02T02:44:59Z</updated>
    <id>tag:github.com,2022-06-02:/PathOfBuildingCommunity/PathOfBuilding</id>
    <link href="https://github.com/PathOfBuildingCommunity/PathOfBuilding" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Offline build planner for Path of Exile.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Path of Building Community Fork&lt;/h1&gt; &#xA;&lt;h2&gt;Formerly known as LocalIdentity Fork&lt;/h2&gt; &#xA;&lt;p&gt;This is a fork of Openarl&#39;s Path Of Building that includes many extra features not in the base version of PoB&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Adds support for new and updated uniques from league 3.8 onwards&lt;/li&gt; &#xA; &lt;li&gt;Pantheon support&lt;/li&gt; &#xA; &lt;li&gt;Impale DPS support&lt;/li&gt; &#xA; &lt;li&gt;Enemy armour and physical damage reduction calculations&lt;/li&gt; &#xA; &lt;li&gt;Catalysts&lt;/li&gt; &#xA; &lt;li&gt;Dual influence crafting&lt;/li&gt; &#xA; &lt;li&gt;Search for all dropdown boxes&lt;/li&gt; &#xA; &lt;li&gt;Barrage Support skill gem&lt;/li&gt; &#xA; &lt;li&gt;Ensnaring Arrow support&lt;/li&gt; &#xA; &lt;li&gt;Thread of Hope support&lt;/li&gt; &#xA; &lt;li&gt;Crimson Dance support&lt;/li&gt; &#xA; &lt;li&gt;Void Shot support&lt;/li&gt; &#xA; &lt;li&gt;Delve helmet mod support&lt;/li&gt; &#xA; &lt;li&gt;Breakdown for aura and curse effect&lt;/li&gt; &#xA; &lt;li&gt;List of recently imported accounts to the Import/Export Build tab&lt;/li&gt; &#xA; &lt;li&gt;More tree highlighting options for node power&lt;/li&gt; &#xA; &lt;li&gt;Support for fossil mods in the crafting window. Including correct parsing for some mods that previously didn&#39;t work (e.g., 60% chance to deal 100% more poison/bleed damage)&lt;/li&gt; &#xA; &lt;li&gt;Add parsing for more nodes on the tree (i.e., Slayer, Champion, Berserker, Chieftain, Hierophant, Trickster, Assassin, Necromancer and Elementalist ascendancy nodes)&lt;/li&gt; &#xA; &lt;li&gt;Add oil combinations to notables on the passive tree&lt;/li&gt; &#xA; &lt;li&gt;Support for Elusive and Nightblade support gem&lt;/li&gt; &#xA; &lt;li&gt;Incremental shock values (not a locked 50%)&lt;/li&gt; &#xA; &lt;li&gt;Fixed Close Combat and Multistrike to have their correct damage values&lt;/li&gt; &#xA; &lt;li&gt;Logic for melee distance scaling attack multipliers (Close Combat and Slayer&#39;s Impact node)&lt;/li&gt; &#xA; &lt;li&gt;Withered now shows on the configuration screen&lt;/li&gt; &#xA; &lt;li&gt;Support for Ryslatha&#39;s Coil, Vaal Arc Lucky Buff, Perquil&#39;s Toe and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Feature Requests&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://feathub.com/LocalIdentity/PathOfBuilding&#34;&gt;&lt;img src=&#34;https://feathub.com/LocalIdentity/PathOfBuilding?format=svg&#34; alt=&#34;Feature Requests&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Head over to the &lt;a href=&#34;https://github.com/PathOfBuildingCommunity/PathOfBuilding/releases&#34;&gt;Releases&lt;/a&gt; page to download the install wizard or portable zip.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;You can find instructions on how to contribute code and bug reports &lt;a href=&#34;https://raw.githubusercontent.com/PathOfBuildingCommunity/PathOfBuilding/dev/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;You can find the full version history &lt;a href=&#34;https://raw.githubusercontent.com/PathOfBuildingCommunity/PathOfBuilding/dev/CHANGELOG.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Welcome to Path of Building, an offline build planner for Path of Exile!&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Comprehensive offence + defence calculations: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Calculate your skill DPS, damage over time, life/mana/ES totals and much more!&lt;/li&gt; &#xA;   &lt;li&gt;Can factor in auras, buffs, charges, curses, monster resistances and more, to estimate your effective DPS&lt;/li&gt; &#xA;   &lt;li&gt;Also calculates life/mana reservations&lt;/li&gt; &#xA;   &lt;li&gt;Shows a summary of character stats in the side bar, as well as a detailed calculations breakdown tab which can show you how the stats were derived&lt;/li&gt; &#xA;   &lt;li&gt;Supports all skills and support gems, and most passives and item modifiers &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Throughout the program, supported modifiers will show in blue and unsupported ones in red&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Full support for minions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Passive skill tree planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Support for jewels including most radius/conversion jewels&lt;/li&gt; &#xA;   &lt;li&gt;Features alternate path tracing (mouse over a sequence of nodes while holding shift, then click to allocate them all)&lt;/li&gt; &#xA;   &lt;li&gt;Fully integrated with the offence/defence calculations; see exactly how each node will affect your character!&lt;/li&gt; &#xA;   &lt;li&gt;Can import PathOfExile.com and PoEPlanner.com passive tree links; links shortened with PoEURL.com also work&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Skill planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add any number of main or supporting skills to your build&lt;/li&gt; &#xA;   &lt;li&gt;Supporting skills (auras, curses, buffs) can be toggled on and off&lt;/li&gt; &#xA;   &lt;li&gt;Automatically applies Socketed Gem modifiers from the item a skill is socketed into&lt;/li&gt; &#xA;   &lt;li&gt;Automatically applies support gems granted by items&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Item planner: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Add items from in game by copying and pasting them straight into the program!&lt;/li&gt; &#xA;   &lt;li&gt;Automatically adds quality to non-corrupted items&lt;/li&gt; &#xA;   &lt;li&gt;Fully integrated with the offence/defence calculations; see exactly how much of an upgrade a given item is!&lt;/li&gt; &#xA;   &lt;li&gt;Contains a searchable database of all uniques that are currently in game (and some that aren&#39;t yet!) &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can choose the modifier rolls when you add a unique to your build&lt;/li&gt; &#xA;     &lt;li&gt;Includes all league-specific items and legacy variants&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Features an item crafting system: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can select from any of the game&#39;s base item types&lt;/li&gt; &#xA;     &lt;li&gt;You can select prefix/suffix modifiers from lists&lt;/li&gt; &#xA;     &lt;li&gt;Custom modifiers can be added, with Master and Essence modifiers available&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Also contains a database of rare item templates: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Allows you to create rare items for your build to approximate the gear you will be using&lt;/li&gt; &#xA;     &lt;li&gt;Choose which modifiers appear on each item, and the rolls for each modifier, to suit your needs&lt;/li&gt; &#xA;     &lt;li&gt;Has templates that should cover the majority of builds (inb4 &#39;why is there no coral amulet?&#39;)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Other features: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;You can import passive tree, items, and skills from existing characters&lt;/li&gt; &#xA;   &lt;li&gt;Share builds with other users by generating a share code&lt;/li&gt; &#xA;   &lt;li&gt;Automatic updating; most updates will only take a couple of seconds to apply&lt;/li&gt; &#xA;   &lt;li&gt;Somewhat more open source than usual (look in &#34;%ProgramData%\Path of Building&#34; if you&#39;re interested)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/23911/153694681-cbc7b83a-970c-4020-b9e3-2a09f0808e38.png&#34; alt=&#34;ss1&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/23911/153694692-0309bab1-6776-43ac-bb5a-6cc40265c7c7.png&#34; alt=&#34;ss2&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/23911/153694693-2471e491-6ed9-47ae-abcc-a3bff81cdc7c.png&#34; alt=&#34;ss3&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licence&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;For 3rd-party licences, see &lt;a href=&#34;https://raw.githubusercontent.com/PathOfBuildingCommunity/PathOfBuilding/dev/LICENSE.md&#34;&gt;LICENSE&lt;/a&gt;. The licencing information is considered to be part of the documentation.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>williamboman/nvim-lsp-installer</title>
    <updated>2022-06-02T02:44:59Z</updated>
    <id>tag:github.com,2022-06-02:/williamboman/nvim-lsp-installer</id>
    <link href="https://github.com/williamboman/nvim-lsp-installer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Neovim plugin that allow you to seamlessly manage LSP servers with :LspInstall. With full Windows support!&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/6705160/118490159-f064bb00-b71d-11eb-883e-4affbd020074.png&#34; alt=&#34;nvim-lsp-installer&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#usage&#34;&gt;Usage&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#setup&#34;&gt;Setup&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#commands&#34;&gt;Commands&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#available-lsps&#34;&gt;Available LSPs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#logo&#34;&gt;Logo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#default-configuration&#34;&gt;Default configuration&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;Neovim plugin that allow you to manage LSP servers (servers are installed inside &lt;code&gt;:echo stdpath(&#34;data&#34;)&lt;/code&gt; by default). It works in tandem with &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;&lt;code&gt;lspconfig&lt;/code&gt;&lt;/a&gt;&lt;sup&gt;1&lt;/sup&gt; by registering a hook that enhances the &lt;code&gt;PATH&lt;/code&gt; environment variable, allowing neovim&#39;s LSP client to locate the server executable installed by nvim-lsp-installer.&lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;p&gt;On top of just providing commands for installing &amp;amp; uninstalling LSP servers, it:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;provides a graphical UI&lt;/li&gt; &#xA; &lt;li&gt;provides the ability to check for, and upgrade to, new server versions through a single interface&lt;/li&gt; &#xA; &lt;li&gt;supports installing custom versions of LSP servers (for example &lt;code&gt;:LspInstall rust_analyzer@nightly&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;relaxes the minimum requirements by attempting multiple different utilities (for example, only one of &lt;code&gt;wget&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, or &lt;code&gt;Invoke-WebRequest&lt;/code&gt; is required for HTTP requests)&lt;/li&gt; &#xA; &lt;li&gt;hosts &lt;a href=&#34;https://github.com/williamboman/nvim-lspconfig-test&#34;&gt;a suite of system tests&lt;/a&gt; for all supported servers&lt;/li&gt; &#xA; &lt;li&gt;has full support for Windows &lt;img src=&#34;https://user-images.githubusercontent.com/6705160/131256603-cacf7f66-dfa9-4515-8ae4-0e42d08cfc6a.png&#34; height=&#34;20&#34;&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;sup&gt;1 - while lspconfig is the main target, this plugin may also be used for other use cases&lt;/sup&gt; &lt;br&gt; &lt;sup&gt;2 - some servers don&#39;t provide an executable, in which case the full command to spawn the server is provided instead&lt;/sup&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/150685720-782e33ba-172c-44b6-8558-fb4e98495294.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/150685404-2cd34b25-166e-4c84-b9dd-1d5580dc2bdd.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/150685322-a537f021-5850-4bbc-8be2-1ece5678d205.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/150685324-1310ae7d-67bf-4053-872c-d27e8a4c4b80.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/150686052-fd5c4d54-b4da-4cb3-bb82-a094526ee5b5.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6705160/150686059-f1be8131-1274-4f62-9aa8-345599cbd8bc.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Requires neovim &lt;code&gt;&amp;gt;= 0.7.0&lt;/code&gt; and &lt;a href=&#34;https://github.com/neovim/nvim-lspconfig&#34;&gt;nvim-lspconfig&lt;/a&gt;. The &lt;em&gt;full requirements&lt;/em&gt; to install &lt;em&gt;all&lt;/em&gt; servers are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Unix systems: git(1), curl(1) or wget(1), unzip(1), tar(1), gzip(1)&lt;/li&gt; &#xA; &lt;li&gt;For Windows systems: powershell, git, tar, and &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7zip&lt;/a&gt; or &lt;a href=&#34;https://peazip.github.io/&#34;&gt;peazip&lt;/a&gt; or &lt;a href=&#34;https://github.com/mholt/archiver&#34;&gt;archiver&lt;/a&gt; or &lt;a href=&#34;https://www.winzip.com/&#34;&gt;winzip&lt;/a&gt; or &lt;a href=&#34;https://www.win-rar.com/&#34;&gt;WinRAR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Node.js (LTS) &amp;amp; npm&lt;/li&gt; &#xA; &lt;li&gt;Python3 &amp;amp; pip3&lt;/li&gt; &#xA; &lt;li&gt;go &amp;gt;= 1.17&lt;/li&gt; &#xA; &lt;li&gt;JDK&lt;/li&gt; &#xA; &lt;li&gt;Ruby &amp;amp; gem&lt;/li&gt; &#xA; &lt;li&gt;PHP &amp;amp; Composer&lt;/li&gt; &#xA; &lt;li&gt;dotnet&lt;/li&gt; &#xA; &lt;li&gt;pwsh&lt;/li&gt; &#xA; &lt;li&gt;Julia&lt;/li&gt; &#xA; &lt;li&gt;valac (and meson &amp;amp; ninja)&lt;/li&gt; &#xA; &lt;li&gt;rebar3&lt;/li&gt; &#xA; &lt;li&gt;cargo&lt;/li&gt; &#xA; &lt;li&gt;ghcup&lt;/li&gt; &#xA; &lt;li&gt;luarocks&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/wbthomason/packer.nvim&#34;&gt;Packer&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;    &#34;williamboman/nvim-lsp-installer&#34;,&#xA;    &#34;neovim/nvim-lspconfig&#34;,&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;vim-plug&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;Plug &#34;williamboman/nvim-lsp-installer&#34;&#xA;Plug &#34;neovim/nvim-lspconfig&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;p&gt;In order for nvim-lsp-installer to register the necessary hooks at the right moment, &lt;strong&gt;make sure you call the &lt;code&gt;.setup()&lt;/code&gt; function before you set up any servers with &lt;code&gt;lspconfig&lt;/code&gt;&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;nvim-lsp-installer&#34;).setup {}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt; Important if you use packer.nvim! (click to expand) &lt;/summary&gt; &#xA; &lt;br&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;Do not separate the nvim-lsp-installer setup from lspconfig, for example via the &lt;code&gt;config&lt;/code&gt; hook. Make sure to colocate the nvim-lsp-installer setup with the lspconfig setup. This is because load order of plugins is not guaranteed, leading to nvim-lsp-installer&#39;s &lt;code&gt;config&lt;/code&gt; function potentially executing after lspconfig&#39;s.&lt;/p&gt; &#xA;  &lt;p&gt;❌ Do not do this:&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;    {&#xA;        &#34;williamboman/nvim-lsp-installer&#34;,&#xA;        config = function()&#xA;            require(&#34;nvim-lsp-installer&#34;).setup {}&#xA;        end&#xA;    },&#xA;    {&#xA;        &#34;neovim/nvim-lspconfig&#34;,&#xA;        config = function()&#xA;            local lspconfig = require(&#34;lspconfig&#34;)&#xA;            lspconfig.sumneko_lua.setup {}&#xA;        end&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;blockquote&gt; &#xA;  &lt;p&gt;✅ Instead, do this:&lt;/p&gt; &#xA; &lt;/blockquote&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;use {&#xA;    &#34;williamboman/nvim-lsp-installer&#34;,&#xA;    {&#xA;        &#34;neovim/nvim-lspconfig&#34;,&#xA;        config = function()&#xA;            require(&#34;nvim-lsp-installer&#34;).setup {}&#xA;            local lspconfig = require(&#34;lspconfig&#34;)&#xA;            lspconfig.sumneko_lua.setup {}&#xA;        end&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#configuration&#34;&gt;Configuration&lt;/a&gt; section for information about which settings are available.&lt;/p&gt; &#xA;&lt;h3&gt;Commands&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspInstallInfo&lt;/code&gt; - opens a graphical overview of your language servers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspInstall [--sync] [server] ...&lt;/code&gt; - installs/reinstalls language servers. Runs in a blocking fashion if the &lt;code&gt;--sync&lt;/code&gt; argument is passed (only recommended for scripting purposes).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspUninstall [--sync] &amp;lt;server&amp;gt; ...&lt;/code&gt; - uninstalls language servers. Runs in a blocking fashion if the &lt;code&gt;--sync&lt;/code&gt; argument is passed (only recommended for scripting purposes).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspUninstallAll [--no-confirm]&lt;/code&gt; - uninstalls all language servers&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspInstallLog&lt;/code&gt; - opens the log file in a new tab window&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;:LspPrintInstalled&lt;/code&gt; - prints all installed language servers&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;You may optionally configure certain behavior of nvim-lsp-installer when calling the &lt;code&gt;.setup()&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;p&gt;Refer to the &lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/#default-configuration&#34;&gt;default configuration&lt;/a&gt; for all available settings.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;require(&#34;nvim-lsp-installer&#34;).setup({&#xA;    automatic_installation = true, -- automatically detect which servers to install (based on which servers are set up via lspconfig)&#xA;    ui = {&#xA;        icons = {&#xA;            server_installed = &#34;✓&#34;,&#xA;            server_pending = &#34;➜&#34;,&#xA;            server_uninstalled = &#34;✗&#34;&#xA;        }&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Available LSPs&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Server name&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;AWK&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;awk_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Angular&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;angularls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ansible&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ansiblels&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Arduino &lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/lua/nvim-lsp-installer/servers/arduino_language_server/README.md&#34;&gt;(docs!!!)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;arduino_language_server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Assembly (GAS/NASM, GO)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;asm_lsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Astro&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;astro&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bash&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bashls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Beancount&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;beancount&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bicep&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bicep&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ccls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;clangd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;csharp_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C# &lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/lua/nvim-lsp-installer/servers/omnisharp/README.md&#34;&gt;(docs)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;omnisharp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C++&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ccls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C++&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;clangd&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CMake&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CSS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cssls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CSS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cssmodules_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clarity&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;clarity_lsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Clojure&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;clojure_lsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;CodeQL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;codeqlls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Crystal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;crystalline&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Crystal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;scry&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Cucumber&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;cucumber_language_server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dart&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dartls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Deno&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;denols&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dhall&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dhall_lsp_server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Diagnostic (general purpose server)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;diagnosticls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dlang&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;serve_d&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Docker&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dockerls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dot&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;dotls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;EFM (general purpose server)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;efm&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ESLint &lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/lua/nvim-lsp-installer/servers/eslint/README.md&#34;&gt;(docs)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;eslint&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Elixir&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;elixirls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Elm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;elmls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ember&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ember&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Emmet&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;emmet_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Erlang&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;erlangls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;F#&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fsautocomplete&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Flux&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;flux_lsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Foam (OpenFOAM)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;foam_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Fortran&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;fortls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;golangci_lint_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;gopls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Grammarly&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;grammarly&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GraphQL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;graphql&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Groovy&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;groovyls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HTML&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;html&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Haskell&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Haxe&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;haxe_language_server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hoon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;hoon_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JSON&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jsonls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jdtls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;quick_lint_js&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;JavaScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tsserver&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jsonnet&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jsonnet_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Julia &lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/lua/nvim-lsp-installer/servers/julials/README.md&#34;&gt;(docs)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;julials&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kotlin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;kotlin_language_server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LaTeX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ltex&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;LaTeX&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;texlab&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lelwel&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;lelwel_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Lua&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sumneko_lua&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Markdown&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;prosemd_lsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Markdown&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;remark_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Markdown&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;zk&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Metamath Zero&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mm0_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nickel&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nickel_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nim&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;nimls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OCaml&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ocamlls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OCaml&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ocamllsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Objective C&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;ccls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OneScript, 1C:Enterprise&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;bsl_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;OpenCL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;opencl_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;intelephense&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;phpactor&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PHP&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;psalm&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Perl&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;perlnavigator&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Powershell&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;powershell_es&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Prisma&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;prismals&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Puppet&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;puppet&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;PureScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;purescriptls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;jedi_language_server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pyright&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sourcery&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Python &lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/lua/nvim-lsp-installer/servers/pylsp/README.md&#34;&gt;(docs)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;pylsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;R&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;r_language_server&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ReScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rescriptls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Reason&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;reason_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Robot Framework&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;robotframework_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rome&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rome&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ruby&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;solargraph&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;rust_analyzer&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sqlls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SQL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sqls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Salt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;salt_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shopify Theme Check&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;theme_check&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Slint&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;slint_lsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Solidity&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;solang&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Solidity&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;solc&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Solidity (VSCode)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;solidity_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sorbet&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sorbet&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sphinx&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;esbonio&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Stylelint&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;stylelint_lsp&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Svelte&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;svelte&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Swift&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;sourcekit&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SystemVerilog&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;svls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SystemVerilog&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;verible&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TOML&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;taplo&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tailwind CSS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tailwindcss&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Teal&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;teal_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Terraform&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;terraformls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Terraform &lt;a href=&#34;https://raw.githubusercontent.com/williamboman/nvim-lsp-installer/main/lua/nvim-lsp-installer/servers/tflint/README.md&#34;&gt;(docs)&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tflint&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TypeScript&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;tsserver&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;V&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vala&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vala_ls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;VimL&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vimls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vue&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;volar&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Vue&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;vuels&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;XML&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;lemminx&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;YAML&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;yamlls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Zig&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;zls&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Logo&lt;/h2&gt; &#xA;&lt;p&gt;Illustrations in the logo are derived from &lt;a href=&#34;https://schauderbasis.de/&#34;&gt;@Kaligule&lt;/a&gt;&#39;s &#34;Robots&#34; collection.&lt;/p&gt; &#xA;&lt;h2&gt;Default configuration&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-lua&#34;&gt;local DEFAULT_SETTINGS = {&#xA;    -- A list of servers to automatically install if they&#39;re not already installed. Example: { &#34;rust_analyzer&#34;, &#34;sumneko_lua&#34; }&#xA;    -- This setting has no relation with the `automatic_installation` setting.&#xA;    ensure_installed = {},&#xA;&#xA;    -- Whether servers that are set up (via lspconfig) should be automatically installed if they&#39;re not already installed.&#xA;    -- This setting has no relation with the `ensure_installed` setting.&#xA;    -- Can either be:&#xA;    --   - false: Servers are not automatically installed.&#xA;    --   - true: All servers set up via lspconfig are automatically installed.&#xA;    --   - { exclude: string[] }: All servers set up via lspconfig, except the ones provided in the list, are automatically installed.&#xA;    --       Example: automatic_installation = { exclude = { &#34;rust_analyzer&#34;, &#34;solargraph&#34; } }&#xA;    automatic_installation = false,&#xA;&#xA;    ui = {&#xA;        -- Whether to automatically check for outdated servers when opening the UI window.&#xA;        check_outdated_servers_on_open = true,&#xA;&#xA;        icons = {&#xA;            -- The list icon to use for installed servers.&#xA;            server_installed = &#34;◍&#34;,&#xA;            -- The list icon to use for servers that are pending installation.&#xA;            server_pending = &#34;◍&#34;,&#xA;            -- The list icon to use for servers that are not installed.&#xA;            server_uninstalled = &#34;◍&#34;,&#xA;        },&#xA;        keymaps = {&#xA;            -- Keymap to expand a server in the UI&#xA;            toggle_server_expand = &#34;&amp;lt;CR&amp;gt;&#34;,&#xA;            -- Keymap to install the server under the current cursor position&#xA;            install_server = &#34;i&#34;,&#xA;            -- Keymap to reinstall/update the server under the current cursor position&#xA;            update_server = &#34;u&#34;,&#xA;            -- Keymap to check for new version for the server under the current cursor position&#xA;            check_server_version = &#34;c&#34;,&#xA;            -- Keymap to update all installed servers&#xA;            update_all_servers = &#34;U&#34;,&#xA;            -- Keymap to check which installed servers are outdated&#xA;            check_outdated_servers = &#34;C&#34;,&#xA;            -- Keymap to uninstall a server&#xA;            uninstall_server = &#34;X&#34;,&#xA;        },&#xA;    },&#xA;&#xA;    -- The directory in which to install all servers.&#xA;    install_root_dir = path.concat { vim.fn.stdpath &#34;data&#34;, &#34;lsp_servers&#34; },&#xA;&#xA;    pip = {&#xA;        -- These args will be added to `pip install` calls. Note that setting extra args might impact intended behavior&#xA;        -- and is not recommended.&#xA;        --&#xA;        -- Example: { &#34;--proxy&#34;, &#34;https://proxyserver&#34; }&#xA;        install_args = {},&#xA;    },&#xA;&#xA;    -- Controls to which degree logs are written to the log file. It&#39;s useful to set this to vim.log.levels.DEBUG when&#xA;    -- debugging issues with server installations.&#xA;    log_level = vim.log.levels.INFO,&#xA;&#xA;    -- Limit for the maximum amount of servers to be installed at the same time. Once this limit is reached, any further&#xA;    -- servers that are requested to be installed will be put in a queue.&#xA;    max_concurrent_installers = 4,&#xA;&#xA;    github = {&#xA;        -- The template URL to use when downloading assets from GitHub.&#xA;        -- The placeholders are the following (in order):&#xA;        -- 1. The repository (e.g. &#34;rust-lang/rust-analyzer&#34;)&#xA;        -- 2. The release version (e.g. &#34;v0.3.0&#34;)&#xA;        -- 3. The asset name (e.g. &#34;rust-analyzer-v0.3.0-x86_64-unknown-linux-gnu.tar.gz&#34;)&#xA;        download_url_template = &#34;https://github.com/%s/releases/download/%s/%s&#34;,&#xA;    },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>