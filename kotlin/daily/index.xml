<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-12T01:33:58Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tiann/KernelSU</title>
    <updated>2022-12-12T01:33:58Z</updated>
    <id>tag:github.com,2022-12-12:/tiann/KernelSU</id>
    <link href="https://github.com/tiann/KernelSU" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Kernel based root solution for Android GKI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KernelSU&lt;/h1&gt; &#xA;&lt;p&gt;A Kernel based root solution for Android GKI.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Flash a custom kernel with KernelSU, you can build it yourself or use prebuilt boot.img.&lt;/li&gt; &#xA; &lt;li&gt;Install Manager App and enjoy :)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;h3&gt;Build GKI Kernel&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the GKI source first, you can refer the &lt;a href=&#34;https://source.android.com/docs/core/architecture/kernel/generic-kernel-image&#34;&gt;GKI build instruction&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;cd &lt;code&gt;&amp;lt;GKI kernel source dir&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;curl -LSs &#34;https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh&#34; | bash -&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build the kernel.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Build the Manager App&lt;/h3&gt; &#xA;&lt;p&gt;Just open Android Studio and import the project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.gnu.org/copyleft/gpl.html&#34;&gt;GPL-3&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.zx2c4.com/kernel-assisted-superuser/about/&#34;&gt;kernel-assisted-superuser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brevent/genuine/&#34;&gt;genuine&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/m0nad/Diamorphine&#34;&gt;Diamorphine&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>termux/termux-styling</title>
    <updated>2022-12-12T01:33:58Z</updated>
    <id>tag:github.com,2022-12-12:/termux/termux-styling</id>
    <link href="https://github.com/termux/termux-styling" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Termux add-on app for customizing the terminal font and color theme.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Termux:Styling&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/termux/termux-styling/actions&#34;&gt;&lt;img src=&#34;https://github.com/termux/termux-styling/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/termux/termux&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/termux/termux.svg?sanitize=true&#34; alt=&#34;Join the chat at https://gitter.im/termux/termux&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://termux.org&#34;&gt;Termux&lt;/a&gt; add-on app to customize the terminal font and color theme.&lt;/p&gt; &#xA;&lt;p&gt;When developing (or packaging), note that this app needs to be signed with the same key as the main Termux app in order to have the permission to modify the required font or color files.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Termux:Styling application can be obtained from &lt;a href=&#34;https://f-droid.org/en/packages/com.termux.styling/&#34;&gt;F-Droid&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Additionally we provide per-commit debug builds for those who want to try out the latest features or test their pull request. This build can be obtained from one of the workflow runs listed on &lt;a href=&#34;https://github.com/termux/termux-styling/actions&#34;&gt;Github Actions&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;Signature keys of all offered builds are different. Before you switch the installation source, you will have to uninstall the Termux application and all currently installed plugins.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;When inside Termux, long press anywhere on the terminal.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;More...&lt;/code&gt; in the resulting dialog.&lt;/li&gt; &#xA; &lt;li&gt;Select &lt;code&gt;Style&lt;/code&gt; in the next dialog.&lt;/li&gt; &#xA; &lt;li&gt;Click either &lt;code&gt;CHOOSE COLOR&lt;/code&gt; or &lt;code&gt;CHOOSE FONT&lt;/code&gt; depending on what you want to customize.&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>skydoves/chatgpt-android</title>
    <updated>2022-12-12T01:33:58Z</updated>
    <id>tag:github.com,2022-12-12:/skydoves/chatgpt-android</id>
    <link href="https://github.com/skydoves/chatgpt-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📱 ChatGPT Android demonstrates OpenAI&#39;s ChatGPT on Android with Stream Chat SDK for Compose.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;ChatGPT Android&lt;/h1&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=21&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves/chatgpt-android/actions/workflows/android.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/skydoves/chatgpt-android/actions/workflows/android.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves&#34;&gt;&lt;img alt=&#34;Profile&#34; src=&#34;https://skydoves.github.io/badges/skydoves.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview0.png&#34; alt=&#34;drawing&#34; width=&#34;270px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview1.png&#34; alt=&#34;drawing&#34; width=&#34;270px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview2.gif&#34; alt=&#34;drawing&#34; width=&#34;269px&#34;&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; demonstrates &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;OpenAI&#39;s ChatGPT&lt;/a&gt; on Android with &lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Stream Chat SDK for Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this repository is to demonstrate below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Demonstrates &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt;&#39;s unofficial APIs.&lt;/li&gt; &#xA; &lt;li&gt;Implementing entire UI elements with Jetpack Compose.&lt;/li&gt; &#xA; &lt;li&gt;Implementation of Android architecture components with Jetpack libraries such as Hilt and AppStartup.&lt;/li&gt; &#xA; &lt;li&gt;Performing background tasks with Kotlin Coroutines.&lt;/li&gt; &#xA; &lt;li&gt;Integrating chat systems with Stream Chat SDK for real-time event handling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📲 Download APK&lt;/h2&gt; &#xA;&lt;p&gt;Go to the &lt;a href=&#34;https://github.com/skydoves/chatgpt-android/releases&#34;&gt;Releases&lt;/a&gt; to download the latest APK.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This app is using unofficial APIs, so normally it takes 10~15 seconds to get the entire response and the app might not work as your expected anytime.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/138428440-b92e5fb7-89f8-41aa-96b1-71a5486c5849.png&#34; align=&#34;right&#34; width=&#34;12%&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;🛥 Stream Chat SDK&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; is built with &lt;strong&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Stream Chat SDK for Compose&lt;/a&gt;&lt;/strong&gt; to implement messaging systems. If you’re interested in adding powerful In-App Messaging to your app, check out the &lt;strong&gt;&lt;a href=&#34;https://getstream.io/tutorials/android-chat?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Android Chat Messaging Tutorial&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getStream/stream-chat-android&#34;&gt;Stream Chat SDK for Android on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getStream/android-samples&#34;&gt;Android Samples for Stream Chat SDK on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getstream.io/chat/docs/sdk/android/compose/overview/&#34;&gt;Stream Chat Compose UI Componenets Guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🛠 Tech Sacks &amp;amp; Open Source Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimum SDK level 21.&lt;/li&gt; &#xA; &lt;li&gt;100% &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; based + &lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;Coroutines&lt;/a&gt; + &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/&#34;&gt;Flow&lt;/a&gt; for asynchronous.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Compose Chat SDK for Messaging&lt;/a&gt;: The Jetpack Compose Chat Messaging SDK is built on a low-level chat client and provides modular, customizable Compose UI components that you can easily drop into your app.&lt;/li&gt; &#xA; &lt;li&gt;Jetpack &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compose: Android’s modern toolkit for building native UI.&lt;/li&gt; &#xA;   &lt;li&gt;ViewModel: UI related data holder and lifecycle aware.&lt;/li&gt; &#xA;   &lt;li&gt;App Startup: Provides a straightforward, performant way to initialize components at application startup.&lt;/li&gt; &#xA;   &lt;li&gt;Navigation: For navigating screens and &lt;a href=&#34;https://developer.android.com/jetpack/compose/libraries#hilt&#34;&gt;Hilt Navigation Compose&lt;/a&gt; for injecting dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;Room: Constructs Database by providing an abstraction layer over SQLite to allow fluent database access.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dagger.dev/hilt/&#34;&gt;Hilt&lt;/a&gt;: Dependency Injection.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skydoves/landscapist#glide&#34;&gt;Landscapist Glide&lt;/a&gt;, &lt;a href=&#34;https://github.com/skydoves/landscapist#animation&#34;&gt;animation&lt;/a&gt;, &lt;a href=&#34;https://github.com/skydoves/landscapist#placeholder&#34;&gt;placeholder&lt;/a&gt;: Jetpack Compose image loading library that fetches and displays network images with Glide, Coil, and Fresco.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/retrofit&#34;&gt;Retrofit2 &amp;amp; OkHttp3&lt;/a&gt;: Construct the REST APIs and paging network data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skydoves/Sandwich&#34;&gt;Sandwich&lt;/a&gt;: Construct a lightweight and modern response interface to handle network payload for Android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/moshi/&#34;&gt;Moshi&lt;/a&gt;: A modern JSON library for Kotlin and Java.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/ksp&#34;&gt;ksp&lt;/a&gt;: Kotlin Symbol Processing API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GetStream/stream-log&#34;&gt;StreamLog&lt;/a&gt;: A lightweight and extensible logger library for Kotlin and Android.&lt;/li&gt; &#xA; &lt;li&gt;Baseline Profiles: To improve app performance by including a list of classes and methods specifications in your APK that can be used by Android Runtime.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⚙️ How to build the project?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt; and &lt;strong&gt;login&lt;/strong&gt; or &lt;strong&gt;signin&lt;/strong&gt; on the website.&lt;/li&gt; &#xA; &lt;li&gt;Open the &lt;strong&gt;Developer Tools&lt;/strong&gt; on your Chrome.&lt;/li&gt; &#xA; &lt;li&gt;Type anything again, such as &#34;Hi&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Network&lt;/strong&gt; tab on the top menu like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/gpt2.png&#34; alt=&#34;gpt&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Click any &lt;strong&gt;conversation&lt;/strong&gt; and the &lt;strong&gt;Payload&lt;/strong&gt; tap like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/gpt0.png&#34; alt=&#34;gpt&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;You will see the &lt;strong&gt;conversation_id&lt;/strong&gt; and &lt;strong&gt;parent_message_id&lt;/strong&gt;, and copy them.&lt;/li&gt; &#xA; &lt;li&gt;Click the &lt;strong&gt;Headers&lt;/strong&gt; tap next to the &lt;strong&gt;Payload&lt;/strong&gt; tap like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/gpt1.png&#34; alt=&#34;gpt&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt;Then you will see the &lt;strong&gt;authorization&lt;/strong&gt; field and copy them without the &#34;Bearer&#34; string.&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;code&gt;local.properties&lt;/code&gt; file and add the properties like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/gpt3.png&#34; alt=&#34;gpt&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;GPT_SESSION=..&#xA;CONVERSATION_ID=..&#xA;PARENT_MESSAGE_ID=..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;10&#34;&gt; &#xA; &lt;li&gt;Build the project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🏛️ Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; follows the &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;Google&#39;s official architecture guidance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure0.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; was built with &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;Guide to app architecture&lt;/a&gt;, so it would be a great sample to show how the architecture works in real-world projects.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;The overall architecture is composed of two layers; UI Layer and the data layer. Each layer has dedicated components and they each have different responsibilities. The arrow means the component has a dependency on the target component following its direction.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture Overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure1.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each layer has different responsibilities below. Basically, they follow &lt;a href=&#34;https://developer.android.com/topic/architecture/ui-layer#udf&#34;&gt;unidirectional event/data flow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;UI Layer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure2.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The UI Layer consists of UI elements like buttons, menus, tabs that could interact with users and &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModel&lt;/a&gt; that holds app states and restores data when configuration changes.&lt;/p&gt; &#xA;&lt;h3&gt;Data Layer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure3.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The data Layer consists of repositories, which include business logic, such as querying data from the local database and requesting remote data from the network. It is implemented as an offline-first source of business logic and follows the &lt;a href=&#34;https://en.wikipedia.org/wiki/Single_source_of_truth&#34;&gt;single source of truth&lt;/a&gt; principle.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information about the overall architecture, check out &lt;strong&gt;&lt;a href=&#34;https://getstream.io/blog/build-whatsapp-clone/&#34;&gt;Build a Real-Time WhatsApp Clone With Jetpack Compose&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Modularization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure4.png&#34; alt=&#34;modules&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; adopted modularization strategies below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reusability&lt;/strong&gt;: Modulizing reusable codes properly enable opportunities for code sharing and limits code accessibility in other modules at the same time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Parallel Building&lt;/strong&gt;: Each module can be run in parallel and it reduces the build time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Decentralized focusing&lt;/strong&gt;: Each developer team can assign their dedicated module and they can focus on their own modules.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💯 MAD Score&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/158918011-bc766482-ec83-47dd-9237-d8a226cab263.png&#34; alt=&#34;summary&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤝 Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Most of the features are not completed except the chat feature, so anyone can contribute and improve this project following the &lt;a href=&#34;https://github.com/skydoves/chatgpt-android/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guideline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Find this repository useful? 💙&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/chatgpt-android/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;⭐&lt;/span&gt; &lt;br&gt; Also, follow &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;maintainers&lt;/a&gt;&lt;/strong&gt; on GitHub for our next creations! 🤩&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;Designed and developed by 2022 skydoves (Jaewoong Eum)&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>