<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-08T01:37:00Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fwcd/kotlin-language-server</title>
    <updated>2023-04-08T01:37:00Z</updated>
    <id>tag:github.com,2023-04-08:/fwcd/kotlin-language-server</id>
    <link href="https://github.com/fwcd/kotlin-language-server" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin code completion, linting and more for any editor/IDE using the Language Server Protocol&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kotlin Language Server&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fwcd/kotlin-language-server/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/fwcd/kotlin-language-server&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fwcd/kotlin-language-server/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/fwcd/kotlin-language-server/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/fwcd/kotlin-language-server/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/fwcd/kotlin-language-server/total&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/cNtppzN&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-on%20discord-7289da&#34; alt=&#34;Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://microsoft.github.io/language-server-protocol/&#34;&gt;language server&lt;/a&gt; that provides smart code completion, diagnostics, hover, document symbols, definition lookup, method signature help and more for &lt;a href=&#34;https://kotlinlang.org&#34;&gt;Kotlin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/Icon128.png&#34; alt=&#34;Icon&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Any editor conforming to LSP is supported, including &lt;a href=&#34;https://github.com/fwcd/vscode-kotlin&#34;&gt;VSCode&lt;/a&gt; and &lt;a href=&#34;https://github.com/fwcd/atom-ide-kotlin&#34;&gt;Atom&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/BUILDING.md&#34;&gt;BUILDING.md&lt;/a&gt; for build instructions&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/EDITORS.md&#34;&gt;Editor Integration&lt;/a&gt; for editor-specific instructions&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/TROUBLESHOOTING.md&#34;&gt;Troubleshooting&lt;/a&gt; for tips on troubleshooting errors&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/fwcd/kotlin-language-server/projects/1&#34;&gt;Roadmap&lt;/a&gt; for features, planned additions, bugfixes and changes&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/fwcd/kotlin-quick-start&#34;&gt;Kotlin Quick Start&lt;/a&gt; for a sample project&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/fwcd/kotlin-debug-adapter&#34;&gt;Kotlin Debug Adapter&lt;/a&gt; for debugging support on JVM&lt;/li&gt; &#xA; &lt;li&gt;See &lt;a href=&#34;https://github.com/fwcd/tree-sitter-kotlin&#34;&gt;tree-sitter-kotlin&lt;/a&gt; for an experimental &lt;a href=&#34;https://tree-sitter.github.io/tree-sitter/&#34;&gt;Tree-Sitter&lt;/a&gt; grammar&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Packaging&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://repology.org/project/kotlin-language-server/versions&#34;&gt;&lt;img src=&#34;https://repology.org/badge/vertical-allrepos/kotlin-language-server.svg?sanitize=true&#34; alt=&#34;Packaging status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;This repository needs your help!&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/georgewfraser&#34;&gt;The original author&lt;/a&gt; created this project while he was considering using Kotlin in his work. He ended up deciding not to and is not really using Kotlin these days though this is a pretty fully-functional language server that just needs someone to use it every day for a while and iron out the last few pesky bugs.&lt;/p&gt; &#xA;&lt;p&gt;There are two hard parts of implementing a language server:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Figuring out the dependencies&lt;/li&gt; &#xA; &lt;li&gt;Incrementally re-compiling as the user types&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The project uses the internal APIs of the &lt;a href=&#34;https://github.com/JetBrains/kotlin/tree/master/compiler&#34;&gt;Kotlin compiler&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Figuring out the dependencies&lt;/h3&gt; &#xA;&lt;p&gt;Dependencies are determined by the &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/shared/src/main/kotlin/org/javacs/kt/classpath/DefaultClassPathResolver.kt&#34;&gt;DefaultClassPathResolver.kt&lt;/a&gt;, which invokes Maven or Gradle to get a list of classpath JARs. Alternatively, projects can also &#39;manually&#39; provide a list of dependencies through a shell script, located either at &lt;code&gt;[project root]/kotlinLspClasspath.{sh,bat,cmd}&lt;/code&gt; or &lt;code&gt;[config root]/KotlinLanguageServer/classpath.{sh,bat,cmd}&lt;/code&gt;, which outputs a list of JARs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Example of the &lt;code&gt;~/.config/KotlinLanguageServer/classpath.sh&lt;/code&gt; on Linux:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash&#xA;echo /my/path/kotlin-compiler-1.4.10/lib/kotlin-stdlib.jar:/my/path/my-lib.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Example of the &lt;code&gt;%HOMEPATH%\.config\KotlinLanguageServer\classpath.bat&lt;/code&gt; on Windows:&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;@echo off&#xA;echo C:\my\path\kotlin-compiler-1.4.10\lib\kotlin-stdlib.jar;C:\my\path\my-lib.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Incrementally re-compiling as the user types&lt;/h3&gt; &#xA;&lt;p&gt;I get incremental compilation at the file-level by keeping the same &lt;code&gt;KotlinCoreEnvironment&lt;/code&gt; alive between compilations in &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/server/src/main/kotlin/org/javacs/kt/compiler/Compiler.kt&#34;&gt;Compiler.kt&lt;/a&gt;. There is a performance benchmark in &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/server/src/test/kotlin/org/javacs/kt/OneFilePerformance.kt&#34;&gt;OneFilePerformance.kt&lt;/a&gt; that verifies this works.&lt;/p&gt; &#xA;&lt;p&gt;Getting incremental compilation at the expression level is a bit more complicated:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fully compile a file and store in &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/server/src/main/kotlin/org/javacs/kt/CompiledFile.kt&#34;&gt;CompiledFile&lt;/a&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;val content: String&lt;/code&gt; A snapshot of the source code&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;val parse: KtFile&lt;/code&gt; The parsed AST&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;val compile: BindingContext&lt;/code&gt; Additional information about the AST from typechecking&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;After the user edits the file: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Find the smallest section the encompasses all the user changes&lt;/li&gt; &#xA;   &lt;li&gt;Get the &lt;code&gt;LexicalScope&lt;/code&gt; encompassing this region from the &lt;code&gt;BindingContext&lt;/code&gt; that was generated by the full-compile&lt;/li&gt; &#xA;   &lt;li&gt;Create a fake, in-memory .kt file with just the expression we want to re-compile &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/fwcd/kotlin-language-server/raw/427cfa7a688d6d2ff202625ebad1ea605e3b8c37/server/src/main/kotlin/org/javacs/kt/CompiledFile.kt#L125&#34;&gt;Add space&lt;/a&gt; at the top of the file so the line numbers match up&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Re-compile this tiny fake file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The incremental expression compilation logic is all in &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/server/src/main/kotlin/org/javacs/kt/CompiledFile.kt&#34;&gt;CompiledFile.kt&lt;/a&gt;. The Kotlin AST has a built-in repair API, which seems to be how IntelliJ works, but as far as I can tell this API does not work if the surrounding IntelliJ machinery is not present. Hence I created the &#34;fake tiny file&#34; incremental-compilation mechanism, which seems to be quite fast and predictable.&lt;/p&gt; &#xA;&lt;p&gt;There is an extensive suite of behavioral &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/server/src/test/kotlin/org/javacs/kt&#34;&gt;tests&lt;/a&gt;, which are all implemented in terms of the language server protocol, so you should be able to refactor the code any way you like and the tests should still work.&lt;/p&gt; &#xA;&lt;h2&gt;Modules&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;server&lt;/td&gt; &#xA;   &lt;td&gt;The language server executable&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;shared&lt;/td&gt; &#xA;   &lt;td&gt;Classpath resolution and utilities&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Scripts&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Command&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;release_version.py&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;python3 scripts/release_version.py&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Creates a tag for the current version and bumps the development version&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Protocol Extensions&lt;/h2&gt; &#xA;&lt;p&gt;The Kotlin language server supports some non-standard requests through LSP. See &lt;a href=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/server/src/main/kotlin/org/javacs/kt/KotlinProtocolExtensions.kt&#34;&gt;KotlinProtocolExtensions&lt;/a&gt; for a description of the interface. The general syntax for these methods is &lt;code&gt;kotlin/someCustomMethod&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;h3&gt;Autocomplete&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/images/Autocomplete.png&#34; alt=&#34;Autocomplete&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Signature help&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/images/SignatureHelp.png&#34; alt=&#34;Signature Help&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Hover&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/images/Hover.png&#34; alt=&#34;Hover&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Go-to-definition, find all references&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/images/FindAllReferences.png&#34; alt=&#34;Find all references&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Document symbols&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/images/DocumentSymbols.png&#34; alt=&#34;Document symbols&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Global symbols&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fwcd/kotlin-language-server/main/images/GlobalSymbols.png&#34; alt=&#34;Global symbols&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/georgewfraser&#34;&gt;georgewfraser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/fwcd&#34;&gt;fwcd&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>