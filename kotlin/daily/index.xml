<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-15T09:00:50Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>sum20156/QuickDevIntellijPlugin</title>
    <updated>2024-05-15T09:00:50Z</updated>
    <id>tag:github.com,2024-05-15:/sum20156/QuickDevIntellijPlugin</id>
    <link href="https://github.com/sum20156/QuickDevIntellijPlugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>khushpanchal/Ketch</title>
    <updated>2024-05-15T09:00:50Z</updated>
    <id>tag:github.com,2024-05-15:/khushpanchal/Ketch</id>
    <link href="https://github.com/khushpanchal/Ketch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Android File downloader library based on WorkManager.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://jitpack.io/#khushpanchal/Ketch&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/khushpanchal/Ketch.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Ketch&lt;/h1&gt; &#xA;&lt;h2&gt;An Android File downloader library based on WorkManager&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;950&#34; src=&#34;https://raw.githubusercontent.com/khushpanchal/Ketch/master/assets/Ketch_logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;About Ketch&lt;/h1&gt; &#xA;&lt;p&gt;Ketch is simple, powerful, customisable file downloader library for Android built entirely in Kotlin. It simplifies the process of downloading files in Android applications by leveraging the power of WorkManager. Ketch guarantees the download irrespective of application state.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;500&#34; alt=&#34;High level design&#34; src=&#34;https://raw.githubusercontent.com/khushpanchal/Ketch/master/assets/Sample_app.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;Why use Ketch&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ketch can download any type of file. (jpg, png, gif, mp4, mp3, pdf, apk and many more)&lt;/li&gt; &#xA; &lt;li&gt;Ketch guarantees file download unless cancelled explicitly or download is failed.&lt;/li&gt; &#xA; &lt;li&gt;Ketch provide all download info including speed, file size, progress.&lt;/li&gt; &#xA; &lt;li&gt;Ketch provide various callbacks like onQueue, onStart, onProgress, onSuccess, onFailure, onCancel.&lt;/li&gt; &#xA; &lt;li&gt;Ketch provide observable flow of download items.&lt;/li&gt; &#xA; &lt;li&gt;Ketch can download multiple files in parallel.&lt;/li&gt; &#xA; &lt;li&gt;Ketch support cancellation of downloads.&lt;/li&gt; &#xA; &lt;li&gt;Ketch support large file downloads.&lt;/li&gt; &#xA; &lt;li&gt;Ketch provide various customisation including custom timeout and custom notification.&lt;/li&gt; &#xA; &lt;li&gt;Ketch is simple and very easy to use.&lt;/li&gt; &#xA; &lt;li&gt;Ketch provide notification for each download providing download info (speed, time left, total size, progress) with cancel action.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img height=&#34;200&#34; alt=&#34;High level design&#34; src=&#34;https://raw.githubusercontent.com/khushpanchal/Ketch/master/assets/Sample_notification.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;How to use Ketch&lt;/h1&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;To integrate Ketch library into your Android project, follow these simple steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update your settings.gradle file with the following dependency.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Groovy&#34;&gt;dependencyResolutionManagement {&#xA;  repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)&#xA;  repositories {&#xA;    google()&#xA;    mavenCentral()&#xA;    maven { url &#39;https://jitpack.io&#39; } // this one&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Update your module level build.gradle file with the following dependency.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Groovy&#34;&gt;dependencies {&#xA;  implementation &#39;com.github.khushpanchal:Ketch:1.0.0&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Simplest way to use Ketch:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Inside Activity or Fragment, create the instance of Ketch&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  private lateinit var ketch: Ketch&#xA;  override fun onCreate(savedInstanceState: Bundle?) {&#xA;    super.onCreate(savedInstanceState)&#xA;    ketch = Ketch.init(this)&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Call the download() function, pass the url, and get callback&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  val request = ketch.download(url,&#xA;    onQueue = {},&#xA;    onStart = { length -&amp;gt; },&#xA;    onProgress = { progress, speedInBytePerMs, length -&amp;gt; },&#xA;    onSuccess = { },&#xA;    onFailure = { error -&amp;gt; },&#xA;    onCancel = { }&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;h3&gt;Important Note: Add the appropriate storage permission based on API level or onFailure(error) callback will be triggered. Check out sample app for reference.&lt;/h3&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To cancel the download&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;    ketch.cancel(request.id)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To enable the notification:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;Add the notification permission in manifest file.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; &amp;lt;uses-permission android:name=&#34;android.permission.POST_NOTIFICATIONS&#34;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Request permission from user (required from Android 13 (API level 33)). Check out sample app for reference.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Pass the notification config while initialization&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  ketch = Ketch.init(this,&#xA;           notificationConfig = NotificationConfig(&#xA;               enabled = true,&#xA;               smallIcon = R.drawable.ic_launcher_foreground // It is required to pass the smallIcon for notification.&#xA;           )&#xA;         )&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Customisation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Provide file name and path for download. (It is recommended to pass the fileName or library will assign random name)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;ketch.download(url,&#xA; path, //Default path: Download directory&#xA; fileName //Default fileName: Random UUID.&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Provide headers with network request.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;ketch.download(url,&#xA; headers = headers, //Default: Empty hashmap&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Tag: Group various downloads by providing additional Tag. (This tag can be use to cancel the download as well)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;ketch.download(url,&#xA; tag = tag, //Default: null&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Cancellation: In addition to cancel by request id, provides cancellation by tag and cancel all downloads.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  ketch.cancel(tag)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  ketch.cancelAll()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Observing: Provides state flow of download items (Each item carries download info like url, fileName, path, tag, status, progress, length, timeQueued, speed, id)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  //To observe from Fragment&#xA;  viewLifecycleOwner.lifecycleScope.launch {&#xA;    repeatOnLifecycle(Lifecycle.State.STARTED) {&#xA;      ketch.observeDownloads()&#xA;        .collect { &#xA;           //set items to adapter&#xA;        }&#xA;    }&#xA;  }&#xA;  //observe from viewModel to survive configuration change&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  // To stop observing&#xA;  ketch.stopObserving()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download config: Provides custom connect and read timeout&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  ketch = Ketch.init(this,&#xA;              downloadConfig = DownloadConfig(&#xA;                  connectTimeOutInMs = 20000L, //Default: 10000L&#xA;                  readTimeOutInMs = 15000L //Default: 10000L&#xA;              )&#xA;            )&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Notification config: Provide custom notification config&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;  ketch = Ketch.init(this,&#xA;              notificationConfig = NotificationConfig(&#xA;                 enabled = true, //Default: false&#xA;                 channelName = channelName, //Default: &#34;File Download&#34;&#xA;                 channelDescription = channelDescription, //Default: &#34;Notify file download status&#34;&#xA;                 importance = importance, //Default: NotificationManager.IMPORTANCE_HIGH&#xA;                 smallIcon = smallIcon, //It is required&#xA;              )&#xA;            )&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Blog&lt;/h1&gt; &#xA;&lt;p&gt;Check out the blog to understand working of Ketch (High Level Design): &lt;a href=&#34;https://medium.com/@khush.panchal123/ketch-android-file-downloader-library-7369f7b93bd1&#34;&gt;https://medium.com/@khush.panchal123/ketch-android-file-downloader-library-7369f7b93bd1&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contact Me&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.linkedin.com/in/khush-panchal-241098170/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/KhushPanchal15&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:khush.panchal123@gmail.com&#34;&gt;Gmail&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Check out my blogs: &lt;a href=&#34;https://medium.com/@khush.panchal123&#34;&gt;https://medium.com/@khush.panchal123&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;If this project helps you, show love ❤️ by putting a ⭐ on &lt;a href=&#34;https://github.com/khushpanchal/Ketch&#34;&gt;this&lt;/a&gt; project ✌️&lt;/h2&gt; &#xA;&lt;h2&gt;Contribute to the project&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to provide feedback, report an issue, or contribute to Ketch. Head over to &lt;a href=&#34;https://github.com/khushpanchal/Ketch&#34;&gt;GitHub repository&lt;/a&gt;, create an issue or find the pending issue. All pull requests are welcome 😄&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;   Copyright (C) 2024 Khush Panchal&#xA;&#xA;   Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;   you may not use this file except in compliance with the License.&#xA;   You may obtain a copy of the License at&#xA;&#xA;       http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;   Unless required by applicable law or agreed to in writing, software&#xA;   distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;   See the License for the specific language governing permissions and&#xA;   limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Ijaiswalshivam/Talk-In</title>
    <updated>2024-05-15T09:00:50Z</updated>
    <id>tag:github.com,2024-05-15:/Ijaiswalshivam/Talk-In</id>
    <link href="https://github.com/Ijaiswalshivam/Talk-In" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Talk-In: Text Messaging Chat App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://media.licdn.com/dms/image/D4D0BAQEpT4N2-geGhw/company-logo_200_200/0/1688662723423?e=1723680000&amp;amp;v=beta&amp;amp;t=N_GRW7j75ddQzmfINVyqArWKv7mEMmoRS0wfW62iCq0&#34; alt=&#34;App Logo&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is a simple text messaging chat app developed using Kotlin. It allows users to send and receive text messages in real-time.&lt;/p&gt; &#xA;&lt;h2&gt;Upcoming Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Real-time Messaging:&lt;/strong&gt; Users can send and receive text messages instantly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User Authentication:&lt;/strong&gt; Secure user authentication system to ensure only authorized users can access the app.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;User Profiles:&lt;/strong&gt; Users can create and customize their profiles with profile pictures and status messages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contacts:&lt;/strong&gt; Users can add, remove, and manage their contacts list.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Group Chat:&lt;/strong&gt; Users can create and participate in group chats with multiple participants.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message Encryption:&lt;/strong&gt; Messages are encrypted to ensure privacy and security.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Push Notifications:&lt;/strong&gt; Users receive push notifications for new messages and other important events.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Emoji Support:&lt;/strong&gt; Users can send emojis to express themselves better.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dark Mode:&lt;/strong&gt; Optional dark mode for better usability in low-light environments.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Voice Messaging:&lt;/strong&gt; Implement voice messaging functionality for users to send voice messages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;File Sharing:&lt;/strong&gt; Allow users to share files such as images, videos, and documents.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message Reactions:&lt;/strong&gt; Users can react to messages with emojis or predefined reactions.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message Editing:&lt;/strong&gt; Enable users to edit sent messages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message Deletion:&lt;/strong&gt; Allow users to delete sent messages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message Search:&lt;/strong&gt; Implement a search feature to search through message history.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Custom Themes:&lt;/strong&gt; Allow users to customize the app&#39;s appearance with different themes and color schemes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Message Timestamps:&lt;/strong&gt; Show timestamps for each message to indicate when it was sent.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Offline Mode:&lt;/strong&gt; Implement offline mode for users to read and compose messages even without an internet connection.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backup and Restore:&lt;/strong&gt; Enable users to backup and restore their chat history.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Integration with Other Platforms:&lt;/strong&gt; Integrate the app with other messaging platforms such as WhatsApp, Facebook Messenger, or Telegram.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Technologies Used:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Kotlin:&lt;/strong&gt; The primary programming language used for app development. &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;kotlin website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Firebase:&lt;/strong&gt; Firebase Authentication for user authentication and Firebase Realtime Database for real-time messaging. &lt;a href=&#34;https://firebase.google.com/&#34;&gt;firebase website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Android SDK:&lt;/strong&gt; Android Software Development Kit for building Android apps. &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;sdk website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;MVVM Architecture:&lt;/strong&gt; Model-View-ViewModel architecture pattern for clean and maintainable code. &lt;a href=&#34;https://medium.com/@dheerubhadoria/android-mvvm-how-to-use-mvvm-in-android-example-7dec84a1fb73&#34;&gt;know more about MVVM website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Retrofit:&lt;/strong&gt; For making HTTP requests to the server for additional functionalities like profile updates and group chat management. &lt;a href=&#34;https://square.github.io/retrofit/&#34;&gt;Retrofit website&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Glide:&lt;/strong&gt; For efficient image loading and caching. &lt;a href=&#34;https://github.com/bumptech/glide&#34;&gt;glide website&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Fork It: Fork the project to create your own copy.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/&amp;lt;your-account-username&amp;gt;/&amp;lt;your-forked-project&amp;gt;.git&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the project in Android Studio.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Connect your Android device or start an emulator.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run the app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Do the contribution you want do.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! If you&#39;d like to contribute to this project, follow the steps&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;🌿Branch Out: Create a new branch with a meaningful name. Branching allows you to work on a separate line of development without affecting the main codebase.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git checkout -b &amp;lt;your_branch_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;✍️Make Changes: Work your magic on the codebase. Modify existing files, add new ones, or remove unnecessary ones as needed.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;📁Track Changes: After making your modifications, add the changed files to the staging area.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git add .&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🚚Commit: Commit your changes with a descriptive message that summarizes the changes you&#39;ve made.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git commit -m &#34;&amp;lt;commit message&amp;gt;&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🚀Push Changes: Push your committed changes to your forked repository on GitHub. This will allow you to create a pull request from your branch.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git push -u origin &amp;lt;your_branch_name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;🌐Create Pull Request: Head to GitHub, navigate to your forked repository, and initiate a pull request by clicking &#34;Compare &amp;amp; pull request&#34;.&lt;/p&gt; &lt;p&gt;In the pull request description, provide a clear and concise summary of the changes you&#39;ve made, along with any relevant information or context. This will help the project maintainers understand your contribution and review it more efficiently.&lt;/p&gt; &lt;p&gt;Once you&#39;ve created the pull request, it will be reviewed by the project maintainers. They may request changes, provide feedback, or merge your contribution into the main codebase. Remember, this process is essential for contributing to open-source projects on GitHub. Following these steps ensures that your changes are properly tracked, reviewed, and integrated into the project while maintaining code integrity and collaboration.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Alternatively using GitHub Desktop&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open GitHub Desktop:&lt;/strong&gt; Launch GitHub Desktop and log in to your GitHub account if you haven&#39;t already.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the Repository:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If you haven&#39;t cloned the ResourceHub repository yet, you can do so by clicking on the &#34;File&#34; menu and selecting &#34;Clone Repository.&#34;&lt;/li&gt; &#xA;   &lt;li&gt;Choose the repository from the list of repositories on GitHub and clone it to your local machine.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Switch to the Correct Branch:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ensure you are on the branch that you want to submit a pull request for.&lt;/li&gt; &#xA;   &lt;li&gt;If you need to switch branches, you can do so by clicking on the &#34;Current Branch&#34; dropdown menu and selecting the desired branch.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Make Changes:&lt;/strong&gt; Make your changes to the code or files in the repository using your preferred code editor.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commit Changes:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;In GitHub Desktop, you&#39;ll see a list of the files you&#39;ve changed. Check the box next to each file you want to include in the commit.&lt;/li&gt; &#xA;   &lt;li&gt;Enter a summary and description for your changes in the &#34;Summary&#34; and &#34;Description&#34; fields, respectively. Click the &#34;Commit to &#xA;    &lt;branch-name&gt;&#xA;     &#34; button to commit your changes to the local branch.&#xA;    &lt;/branch-name&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Push Changes to GitHub:&lt;/strong&gt; After committing your changes, click the &#34;Push origin&#34; button in the top right corner of GitHub Desktop to push your changes to your forked repository on GitHub.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a Pull Request:&lt;/strong&gt; Go to the GitHub website and navigate to your fork of the ResourceHub repository. You should see a button to &#34;Compare &amp;amp; pull request&#34; between your fork and the original repository. Click on it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Review and Submit:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On the pull request page, review your changes and add any additional information, such as a title and description, that you want to include with your pull request.&lt;/li&gt; &#xA;   &lt;li&gt;Once you&#39;re satisfied, click the &#34;Create pull request&#34; button to submit your pull request.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Wait for Review:&lt;/strong&gt; Your pull request will now be available for review by the project maintainers. They may provide feedback or ask for changes before merging your pull request into the main branch of the ResourceHub repository.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you find this project useful, please consider giving it a star! ⭐️&lt;/p&gt; &#xA;&lt;h2&gt;Contact for help:&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Admin- Shivam Jaiswal For questions or inquiries, please contact &lt;a href=&#34;mailto:Forcollegeintern@gmail.com&#34;&gt;Shivam Jaiswal&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mentors- Aman Nishad , Amanpreet Kaur For questions or inquiries, please contact &lt;a href=&#34;mailto:amannishad0512@gmail.com&#34;&gt;Aman Nishad&lt;/a&gt; For questions or inquiries, please contact &lt;a href=&#34;mailto:preetkaur93@gmail.com&#34;&gt;Amanpreet Kaur&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>