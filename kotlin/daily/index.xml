<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-22T01:45:47Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uber/RIBs</title>
    <updated>2022-07-22T01:45:47Z</updated>
    <id>tag:github.com,2022-07-22:/uber/RIBs</id>
    <link href="https://github.com/uber/RIBs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Uber&#39;s cross-platform mobile architecture framework.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/uber/ribs/raw/assets/rib_horizontal_black.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; alt=&#34;RIBs&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/uber/RIBs/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/uber/RIBs/actions/workflows/android.yml/badge.svg?branch=main&#34; alt=&#34;Android CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/com.uber.rib/rib-android&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.uber.rib/rib-android.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/ribs&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/RIBs.svg?sanitize=true&#34; alt=&#34;Cocoapods Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?sanitize=true&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RIBs is the cross-platform architecture framework behind many mobile apps at Uber. The name RIBs is short for Router, Interactor and Builder, which are core components of this architecture. This framework is designed for mobile apps with a large number of engineers and nested states.&lt;/p&gt; &#xA;&lt;p&gt;The RIBs architecture provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shared architecture across iOS and Android.&lt;/strong&gt; Build cross-platform apps that have similar architecture, enabling iOS and Android teams to cross-review business logic code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Testability and Isolation.&lt;/strong&gt; Classes must be easy to unit test and reason about in isolation. Individual RIB classes have distinct responsibilities like: routing, business, view logic, creation. Plus, most RIB logic is decoupled from child RIB logic. This makes RIB classes easy to test and reason about independently.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tooling for developer productivity.&lt;/strong&gt; RIBs come with IDE tooling around code generation, memory leak detection, static analysis and runtime integrations - all which improve developer productivity for large teams or small.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;An architecture that scales.&lt;/strong&gt; This architecture has proven to scale to hundreds of engineers working on the same codebase and apps with hundreds of RIBs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To get started with RIBs, please refer to the &lt;a href=&#34;https://github.com/uber/RIBs/wiki&#34;&gt;RIBs documentation&lt;/a&gt;. This describes key concepts on RIBs, from what they are for, their structure and common use cases.&lt;/p&gt; &#xA;&lt;p&gt;To get more hands on with RIBs, we have written a &lt;a href=&#34;https://github.com/uber/RIBs/wiki&#34;&gt;series of tutorials&lt;/a&gt; that run you through the main aspects of the architecture with hands-on examples.&lt;/p&gt; &#xA;&lt;p&gt;To read about the backstory on why we created RIBs, see &lt;a href=&#34;https://eng.uber.com/new-rider-app/&#34;&gt;this blog post&lt;/a&gt; we wrote when releasing RIBs in production the first time and see &lt;a href=&#34;https://www.youtube.com/watch?v=Q5cTT0M0YXg&#34;&gt;this short video&lt;/a&gt; where we discussed how the RIBs architecture works.&lt;/p&gt; &#xA;&lt;h4&gt;What is the difference between RIBs and MV*/VIPER?&lt;/h4&gt; &#xA;&lt;p&gt;MVC, MVP, MVI, MVVM and VIPER are architecture patterns. RIBs is a framework. What differentiates RIBs from frameworks based on MV*/VIPER is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Business logic drives the app, not the view tree&lt;/strong&gt;. Unlike with MV*/VIPER, a RIB does not have to have a view. This means that the app hierarchy is driven by the business logic, not the view tree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Independent business logic and view trees&lt;/strong&gt;. RIBs decouple how the business logic scopes are structured from view hierarchies. This allows the application to have a deep business logic tree, isolating business logic nodes, while maintaining a shallow view hierarchy making layouts, animations and transitions easy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are some other novel things about RIBs. However, these could also be implemented with other MV*/VIPER frameworks. These are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-platform approach&lt;/strong&gt;, allowing iOS and Android architecture to stay in sync.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tooling for easier adoption&lt;/strong&gt; on larger apps or teams. Tooling we are open sourcing includes IDE plugins for code generation and static code analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strong opinions about how state should be communicated&lt;/strong&gt;, using DI and Rx. Each RIB defines its dependencies and what dependencies it needs from its parent. Parent components that fulfill a child’s parent dependencies are provided to child Builders as a constructor dependency to allow for hierarchical DI scoping. This means that information is communicated via these dependencies up and down the tree.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Integrate using your preferred installation mechanism&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For usage of the tooling built around RIBs, please see the &lt;a href=&#34;https://github.com/uber/RIBs/wiki#rib-tooling&#34;&gt;Tooling section&lt;/a&gt; in our documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Installation for Android&lt;/h2&gt; &#xA;&lt;p&gt;To integrate the recommended minimum setup for RIBs add the following to your &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;  annotationProcessor &#39;com.uber.rib:rib-compiler-test:0.13.0&#39;&#xA;  implementation &#39;com.uber.rib:rib-android:0.13.0&#39;&#xA;  testImplementation &#39;com.uber.rib:rib-test:0.13.0&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are a number of extension packages available as well including Kotlin extensions, Jetpack Compose support, Coroutines support&lt;/p&gt; &#xA;&lt;h2&gt;Installation for iOS&lt;/h2&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;p&gt;To integrate RIBs into your project add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;RIBs&#39;, &#39;~&amp;gt; 0.9&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Carthage&lt;/h4&gt; &#xA;&lt;p&gt;To integrate RIBs into your project using Carthage add the following to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;github &#34;uber/RIBs&#34; ~&amp;gt; 0.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;p&gt;If you like RIBs, check out other related open source projects from our team:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/needle&#34;&gt;Needle&lt;/a&gt;: a compile-time safe Swift dependency injection framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/motif&#34;&gt;Motif&lt;/a&gt;: An abstract on top of Dagger offering simpler APIs for nested scopes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-concurrency&#34;&gt;Swift Concurrency&lt;/a&gt;: a set of concurrency utility classes used by Uber, inspired by the equivalent &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/package-summary.html&#34;&gt;java.util.concurrent&lt;/a&gt; package classes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-abstract-class&#34;&gt;Swift Abstract Class&lt;/a&gt;: a light-weight library along with an executable that enables compile-time safe abstract class development for Swift projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-common&#34;&gt;Swift Common&lt;/a&gt;: common libraries used by this set of Swift open source projects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2017 Uber Technologies&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Knight-ZXW/BlockCanaryX</title>
    <updated>2022-07-22T01:45:47Z</updated>
    <id>tag:github.com,2022-07-22:/Knight-ZXW/BlockCanaryX</id>
    <link href="https://github.com/Knight-ZXW/BlockCanaryX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥基于堆栈采样，使用函数火焰图的形式展示Android Main Looper的慢消息处理过程，定位阻塞原因&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;BlockCananry &lt;a href=&#34;https://github.com/Knight-ZXW/BlockCanaryX&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/io.github.knight-zxw/blockcanary/badge.svg?style=flat&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;该库通过监听主线程Looper的消息处理时间，并通过stackSampler定时采样主线程的堆栈，当检测 到主线程Looper消息慢处理时，会通过&lt;code&gt;Notification&lt;/code&gt;的方式告知用户，当用户点击卡顿详情时， 会跳转到一个Web页面，以火焰图的形式展示消息处理时间内的函数运行情况&lt;/p&gt; &#xA;&lt;h1&gt;项目说明&lt;/h1&gt; &#xA;&lt;p&gt;1.本项目的初衷是为了介绍 &lt;a href=&#34;https://juejin.cn/post/7107137302043820039&#34;&gt;https://juejin.cn/post/7107137302043820039&lt;/a&gt; 这篇文章的内容，这个项目我基本上是利用周末一天的时间完成的，因此有很多不完善的地方，比如 消息没有支持清除的功能，因为本人平时工作时间较忙，另外正在准备开发一个开源的APM平台，因此不能保证这个项目的一些功能性的建议能够立刻完善(BUG除外)，烦请见谅。 如果你有兴趣继续优化这个项目可以直接Fork这个项目，提交MR。&lt;/p&gt; &#xA;&lt;h1&gt;功能界面&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Knight-ZXW/BlockCanaryX/main/imgs/blocking_list.jpeg&#34; width=&#34;260&#34; height=&#34;500&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Knight-ZXW/BlockCanaryX/main/imgs/blocking_flamegraph.jpeg&#34; width=&#34;260&#34; height=&#34;500&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/Knight-ZXW/BlockCanaryX/main/imgs/notification.jpeg&#34; width=&#34;260&#34; height=&#34;500&#34;&gt; &lt;/p&gt; &#xA;&lt;h1&gt;引入&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    //引入卡顿监控实现依赖库&#xA;    implementation &#39;io.github.knight-zxw:blockcanary:${latestVersion}&#39;&#xA;    //引入卡顿消息通知及相关展示UI&#xA;    implementation &#39;io.github.knight-zxw:blockcanary-ui:${latestVersion}&#39;&#xA;&#xA;    // 如果你只想在debug包引入，不希望被引入release包，可以使用 debugImplementation&#xA;    //debugImplementation &#39;io.github.knight-zxw:blockcanary:${latestVersion}&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;使用方法&lt;/h1&gt; &#xA;&lt;p&gt;默认情况下，blockcanary 基于androidx 的startup框架，会自动进行初始化。 如果需要个性化配置，则需要通过 在res/values 下配置资源值的方式 关闭自动化初始化&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;item name=&#34;block_canary_auto_install&#34; type=&#34;bool&#34;&amp;gt;false&amp;lt;/item&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;手动初始化的示例代码&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// 一般在 application onCreate阶段配置&#xA;val blockCanaryConfig = BlockCanaryConfig.newBuilder().build()&#xA;BlockCanary.install(application,blockCanaryConfig)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;待支持功能/优化&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 卡顿消息支持一键清除、过期自动清除&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 记录消息处理消耗的cpu时间&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 记录慢消息执行时，所在的前台Activity, APP的状态、&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>yechaoa/MaterialDesign</title>
    <updated>2022-07-22T01:45:47Z</updated>
    <id>tag:github.com,2022-07-22:/yechaoa/MaterialDesign</id>
    <link href="https://github.com/yechaoa/MaterialDesign" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Material Design Samples。ConstraintLayout、MaterialButton、ShapeableImageView、TabLayout、SearchView...&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MaterialDesign&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/language-kotlin-orange.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/CSDN-yechaoa-green.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Starred please &lt;span&gt;💋&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h3&gt;环境（Configuration）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android Studio Bumblebee | 2021.1.1 Patch 3&lt;/li&gt; &#xA; &lt;li&gt;Android Gradle Plugin 7.2&lt;/li&gt; &#xA; &lt;li&gt;Kotlin 1.6.20&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;效果（Example）&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/search_view.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/drawer.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/snackbar.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;搜索&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;侧边栏、抽屉&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;底部提示&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/scrolling.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/scrolling_tab.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/tab.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;滑动收起&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Tab滑动收起&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;自定义Tab&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/navigation.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/text.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/swipe.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;底部导航&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;输入框&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;下拉刷新&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/bottom_sheet.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/tab_layout.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/material_button.png&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;底部弹窗&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;TabLayout&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;MaterialButton&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/shapeable_image_view.png&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/badge_drawable.png&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/card_view.png&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ShapeableImageView&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;BadgeDrawable&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;CardView&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/dynamic_color.gif&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/notification_1.png&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yechaoa/MaterialDesign/master/gif/notification_2.png&#34; width=&#34;285&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Dynamic Color&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Notification_1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Notification_2&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;组件（Components）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ShapeableImageView&lt;/li&gt; &#xA; &lt;li&gt;MaterialButton&lt;/li&gt; &#xA; &lt;li&gt;BadgeDrawable&lt;/li&gt; &#xA; &lt;li&gt;DrawerLayout&lt;/li&gt; &#xA; &lt;li&gt;BottomSheetDialog&lt;/li&gt; &#xA; &lt;li&gt;ConstraintLayout&lt;/li&gt; &#xA; &lt;li&gt;CoordinatorLayout&lt;/li&gt; &#xA; &lt;li&gt;CollapsingToolbarLayout&lt;/li&gt; &#xA; &lt;li&gt;NestedScrollView&lt;/li&gt; &#xA; &lt;li&gt;AppBarLayout&lt;/li&gt; &#xA; &lt;li&gt;Toolbar&lt;/li&gt; &#xA; &lt;li&gt;FloatingActionButton&lt;/li&gt; &#xA; &lt;li&gt;TabLayout&lt;/li&gt; &#xA; &lt;li&gt;BottomNavigationView&lt;/li&gt; &#xA; &lt;li&gt;CardView&lt;/li&gt; &#xA; &lt;li&gt;Snackbar&lt;/li&gt; &#xA; &lt;li&gt;SwipeRefreshLayout&lt;/li&gt; &#xA; &lt;li&gt;TextInputLayout&lt;/li&gt; &#xA; &lt;li&gt;TextInputEditText&lt;/li&gt; &#xA; &lt;li&gt;NavigationView&lt;/li&gt; &#xA; &lt;li&gt;SearchView&lt;/li&gt; &#xA; &lt;li&gt;Dynamic Color&lt;/li&gt; &#xA; &lt;li&gt;Notification&lt;/li&gt; &#xA; &lt;li&gt;...&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;近期更新（Update）&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;【2022-06-26】Add Notification&lt;/li&gt; &#xA; &lt;li&gt;【2022-05-01】Android 12 Dynamic Color&lt;/li&gt; &#xA; &lt;li&gt;【2022-04-30】Update CardView&lt;/li&gt; &#xA; &lt;li&gt;【2022-04-27】Migrating from M2 to M3&lt;/li&gt; &#xA; &lt;li&gt;【2022-04-25】Update TabLayout&lt;/li&gt; &#xA; &lt;li&gt;【2022-01-16】Add BadgeDrawable&lt;/li&gt; &#xA; &lt;li&gt;【2021-05-29】Add ShapeableImageView&lt;/li&gt; &#xA; &lt;li&gt;【2021-05-23】Add MaterialButton&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;系列博客（Blog）&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://blog.csdn.net/yechaoa/article/category/7228044&#34;&gt;http://blog.csdn.net/yechaoa/article/category/7228044&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>