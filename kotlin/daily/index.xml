<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-03-27T01:30:19Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>nameisjayant/composeOneScreens</title>
    <updated>2024-03-27T01:30:19Z</updated>
    <id>tag:github.com,2024-03-27:/nameisjayant/composeOneScreens</id>
    <link href="https://github.com/nameisjayant/composeOneScreens" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Aim of this repository is to design single screen page UIS with Jetpack Compose (more focus on the complex ui&#39;s).&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Jetpack Compose Single Screen Page UIS&lt;/h2&gt; &#xA;&lt;p&gt; Aim of this repository is to design single screen page UIS with Jetpack Compose (mainly focus on the complex ui&#39;s).&lt;/p&gt; &#xA;&lt;h2&gt;Purpose&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Purpose of making this repository is to learn how to make or write complex ui screen codes in jetpack compose.&lt;/li&gt; &#xA; &lt;li&gt;It also focus on the clean and reusable codes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üñ•Ô∏è Screenshots&lt;/h2&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Task Management UI&lt;/th&gt; &#xA;   &lt;th&gt;NFT Mobile UI&lt;/th&gt; &#xA;   &lt;th&gt;Electric Car Charging UI&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nameisjayant/composeOneScreens/main/screenshots/taskManagement.png&#34; height=&#34;500&#34; alt=&#34;task_management&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nameisjayant/composeOneScreens/main/screenshots/NFT.png&#34; height=&#34;500&#34; alt=&#34;nft_mobile&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nameisjayant/composeOneScreens/main/screenshots/electric_car.png&#34; height=&#34;500&#34; alt=&#34;electric+_car&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Chat UI&lt;/th&gt; &#xA;   &lt;th&gt;Instagram Home UI&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nameisjayant/composeOneScreens/main/screenshots/chat.png&#34; height=&#34;500&#34; alt=&#34;chat_ui&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/nameisjayant/composeOneScreens/main/screenshots/instagram.png&#34; height=&#34;500&#34; alt=&#34;insta_ui&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Packages&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;components&lt;/code&gt;: Includes all the common components here.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;feature&lt;/code&gt;: For including any UI. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;screens&lt;/code&gt; : Includes any single screen UI.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you have any single page complex screen UI , you are most welcome.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Find this project useful ? ‚ù§Ô∏è&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Support it by clicking the ‚≠êÔ∏è button on the upper right of this page. ‚úåÔ∏è&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Copyright 2023 Jayant Kumar&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>pedroSG94/RootEncoder</title>
    <updated>2024-03-27T01:30:19Z</updated>
    <id>tag:github.com,2024-03-27:/pedroSG94/RootEncoder</id>
    <link href="https://github.com/pedroSG94/RootEncoder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RootEncoder for Android (rtmp-rtsp-stream-client-java) is a stream encoder to push video/audio to media servers using protocols RTMP, RTSP, SRT and UDP with all code written in Java/Kotlin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RootEncoder for Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://android-arsenal.com/details/1/5333&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android%20Arsenal-rtmp%20rtsp%20stream%20client%20java-green.svg?style=true&#34; alt=&#34;Android Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jitpack.io/#pedroSG94/RootEncoder&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/pedroSG94/RootEncoder.svg?sanitize=true&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pedroSG94.github.io/RootEncoder&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/library-documentation-orange&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Sponsored with üíñ &amp;nbsp; by&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://getstream.io/?utm_source=github.com/pedroSG94/rtmp-rtsp-stream-client-java&amp;amp;utm_medium=github&amp;amp;utm_campaign=oss_sponsorship&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://stream-blog-v2.imgix.net/blog/wp-content/uploads/f7401112f41742c4e173c30d4f318cb8/stream_logo_white.png?w=350&#34; alt=&#34;Stream Chat&#34; style=&#34;margin: 8px&#34;&gt; &lt;/a&gt; &lt;br&gt; Enterprise Grade APIs for Feeds &amp;amp; Chat. &lt;a href=&#34;https://getstream.io/tutorials/android-chat/?utm_source=https://github.com/pedroSG94/rtmp-rtsp-stream-client-java&amp;amp;utm_medium=github&amp;amp;utm_content=developer&amp;amp;utm_term=java&#34; target=&#34;_blank&#34;&gt;Try the Android Chat tutorial&lt;/a&gt; üí¨ &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;RootEncoder (rtmp-rtsp-stream-client-java) is a stream encoder to push video/audio to media servers using protocols RTMP, RTSP and SRT with all code written in Java/Kotlin&lt;/p&gt; &#xA;&lt;p&gt;Note: The library was renamed from rtmp-rtsp-stream-client-java to RootEncoder after add SRT protocol because the name has no sense anymore&lt;/p&gt; &#xA;&lt;h2&gt;iOS version (under develop):&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pedroSG94/RootEncoder-iOS&#34;&gt;https://github.com/pedroSG94/RootEncoder-iOS&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pedroSG94/RootEncoder/wiki&#34;&gt;https://github.com/pedroSG94/RootEncoder/wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Permissions:&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;uses-permission android:name=&#34;android.permission.INTERNET&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.RECORD_AUDIO&#34; /&amp;gt;&#xA;&amp;lt;uses-permission android:name=&#34;android.permission.CAMERA&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Compile&lt;/h2&gt; &#xA;&lt;p&gt;To use this library in your project with gradle add this to your build.gradle:&lt;/p&gt; &#xA;&lt;h3&gt;Version 2.2.6 or less&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;allprojects {&#xA;  repositories {&#xA;    maven { url &#39;https://jitpack.io&#39; }&#xA;  }&#xA;}&#xA;dependencies {&#xA;  implementation &#39;com.github.pedroSG94.RootEncoder:rtplibrary:2.2.6&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Version 2.2.7 or more&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;allprojects {&#xA;  repositories {&#xA;    maven { url &#39;https://jitpack.io&#39; }&#xA;  }&#xA;}&#xA;dependencies {&#xA;  implementation &#39;com.github.pedroSG94.RootEncoder:library:2.4.4&#39;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Android min API 16.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Encoder:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Support &lt;a href=&#34;https://developer.android.com/reference/android/hardware/Camera.html&#34;&gt;camera1&lt;/a&gt; and &lt;a href=&#34;https://developer.android.com/reference/android/hardware/camera2/package-summary.html&#34;&gt;camera2&lt;/a&gt; API&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Encoder type buffer to buffer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Encoder type surface to buffer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Audio noise suppressor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Audio echo cancellation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Disable/Enable video and audio while streaming.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Switch camera while streaming.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Change video bitrate while streaming (API 19+).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AV1, H264, H265, G711, AAC and OPUS hardware/software encoding.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Force video and audio Codec to use hardware/software encoding (Not recommended).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Record MP4 file while streaming (API 18+).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Set Image, Gif or Text to stream on real time.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; OpenGL real time filters. &lt;a href=&#34;https://github.com/pedroSG94/RootEncoder/wiki/Real-time-filters&#34;&gt;More info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stream from video and audio files like mp4, webm, mp3, etc (Limited by device decoders). &lt;a href=&#34;https://github.com/pedroSG94/RootEncoder/wiki/Stream-from-file&#34;&gt;More info&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Stream device screen (API 21+).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RTMP:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get upload bandwidth used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RTSP auth (adobe and llnw).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AV1, H265 (&lt;a href=&#34;https://github.com/veovera/enhanced-rtmp/tree/main&#34;&gt;Using RTMP enhanced&lt;/a&gt;), H264, AAC and G711 support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RTMPS (under TLS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RTMPT and RTMPTS (tunneled and tunneled under TLS)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AMF0&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; AMF3&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;RTSP:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get upload bandwidth used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RTMP auth (basic and digest).&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; AV1, H264, H265, AAC, G711 and OPUS support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; TCP/UDP.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; RTSPS.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;SRT (beta):&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get upload bandwidth used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; H264, H265, AAC and OPUS support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Resend lost packets&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Encrypt (AES128, AES192 and AES256)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; SRT auth.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://haivision.github.io/srt-rfc/draft-sharabayko-srt.html&#34;&gt;https://haivision.github.io/srt-rfc/draft-sharabayko-srt.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;UDP (beta):&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Get upload bandwidth used.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; H264, H265, AAC and OPUS support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Unicast, Multicast and Broadcast support.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; MPEG2-TS support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other related projects:&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pedroSG94/RTSP-Server&#34;&gt;https://github.com/pedroSG94/RTSP-Server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;3rd party projects:&lt;/h3&gt; &#xA;&lt;p&gt;Projects related with the library developed by other users. Contact with user owner if you have any problem or question.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/FunnyDevs/rtmp-rtsp-stream-client-java-recordcontrollers&#34;&gt;https://github.com/FunnyDevs/rtmp-rtsp-stream-client-java-recordcontrollers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Real time filters:&lt;/h2&gt; &#xA;&lt;h3&gt;NOTE:&lt;/h3&gt; &#xA;&lt;p&gt;In library version 2.0.9, the filters was refactored. Check the wiki link to migrate your implementation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pedroSG94/RootEncoder/wiki/Real-time-filters&#34;&gt;https://github.com/pedroSG94/RootEncoder/wiki/Real-time-filters&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Looking for sponsors&lt;/h2&gt; &#xA;&lt;p&gt;This library need sponsors to get new devices or pay platforms to test and debug errors. Any donation or sponsor is welcome! If you are interested. You can contact me by email or donate directly on &lt;a href=&#34;https://github.com/sponsors/pedroSG94&#34;&gt;Github&lt;/a&gt; or &lt;a href=&#34;https://www.paypal.com/paypalme/pedroSG94&#34;&gt;Paypal&lt;/a&gt; Thank you!&lt;/p&gt; &#xA;&lt;h2&gt;Use examples:&lt;/h2&gt; &#xA;&lt;h3&gt;Rotation example&lt;/h3&gt; &#xA;&lt;p&gt;This is the recommend way to use the library. This example support screen rotation, stream orientation (vertical, horizontal) filters and change video/audio sources on fly: &lt;a href=&#34;https://github.com/pedroSG94/RootEncoder/tree/master/app/src/main/java/com/pedro/streamer/rotation&#34;&gt;https://github.com/pedroSG94/RootEncoder/tree/master/app/src/main/java/com/pedro/streamer/rotation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Screen example&lt;/h3&gt; &#xA;&lt;p&gt;Example to stream using Screen as video source using a service to stream in background: &lt;a href=&#34;https://github.com/pedroSG94/RootEncoder/tree/master/app/src/main/java/com/pedro/streamer/screen&#34;&gt;https://github.com/pedroSG94/RootEncoder/tree/master/app/src/main/java/com/pedro/streamer/screen&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;From file example&lt;/h3&gt; &#xA;&lt;p&gt;Code example to stream using a video file as video/audio source: &lt;a href=&#34;https://github.com/pedroSG94/RootEncoder/tree/master/app/src/main/java/com/pedro/streamer/file&#34;&gt;https://github.com/pedroSG94/RootEncoder/tree/master/app/src/main/java/com/pedro/streamer/file&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Old Api example&lt;/h3&gt; &#xA;&lt;p&gt;Code example for low API devices (Android API 16+): &lt;a href=&#34;https://github.com/pedroSG94/RootEncoder/tree/master/app/src/main/java/com/pedro/streamer/oldapi&#34;&gt;https://github.com/pedroSG94/RootEncoder/tree/master/app/src/main/java/com/pedro/streamer/oldapi&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>