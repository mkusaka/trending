<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-01T01:39:43Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MobileNativeFoundation/Store</title>
    <updated>2023-03-01T01:39:43Z</updated>
    <id>tag:github.com,2023-03-01:/MobileNativeFoundation/Store</id>
    <link href="https://github.com/MobileNativeFoundation/Store" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Kotlin Multiplatform Library for Building Network-Resilient Applications&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/MobileNativeFoundation/Store/main/Images/friendly_robot.png&#34; width=&#34;120&#34;&gt; &#xA; &lt;h1 style=&#34;font-size:48px&#34;&gt;Store5&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h4&gt;Full documentation can be found on our &lt;a href=&#34;https://mobilenativefoundation.github.io/Store/&#34;&gt;website&lt;/a&gt;!&lt;/h4&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Concepts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/store/store/&#34;&gt;Store&lt;/a&gt; is a typed repository that returns a flow of &lt;a href=&#34;https://github.com/MobileNativeFoundation/Store/raw/main/store/src/commonMain/kotlin/org/mobilenativefoundation/store/store5/StoreReadResponse.kt#L39&#34;&gt;Data&lt;/a&gt; /&lt;a href=&#34;https://github.com/MobileNativeFoundation/Store/raw/main/store/src/commonMain/kotlin/org/mobilenativefoundation/store/store5/StoreReadResponse.kt#L34&#34;&gt;Loading&lt;/a&gt; /&lt;a href=&#34;https://github.com/MobileNativeFoundation/Store/raw/main/store/src/commonMain/kotlin/org/mobilenativefoundation/store/store5/StoreReadResponse.kt#L51&#34;&gt;Error&lt;/a&gt; from local and network data sources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/overview/&#34;&gt;MutableStore&lt;/a&gt; is a mutable repository implementation that allows create &lt;strong&gt;(C)&lt;/strong&gt;, read &lt;strong&gt;(R)&lt;/strong&gt;, update &lt;strong&gt;(U)&lt;/strong&gt;, and delete &lt;strong&gt;(D)&lt;/strong&gt; operations for local and network resources&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/implementations/source-of-truth/&#34;&gt;SourceOfTruth&lt;/a&gt; persists items&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/implementations/fetcher/&#34;&gt;Fetcher&lt;/a&gt; defines how data will be fetched over network&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/implementations/updater/&#34;&gt;Updater&lt;/a&gt; defines how local changes will be pushed to network&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/implementations/bookkeeper/&#34;&gt;Bookkeeper&lt;/a&gt; tracks metadata of local changes and records synchronization failures&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/implementations/validator/&#34;&gt;Validator&lt;/a&gt; returns whether an item is valid&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/implementations/converter/&#34;&gt;Converter&lt;/a&gt; converts items between &lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/generics/network&#34;&gt;Network&lt;/a&gt; /&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/generics/sot&#34;&gt;Local&lt;/a&gt; /&lt;a href=&#34;https://mobilenativefoundation.github.io/Store/mutable-store/building/generics/common&#34;&gt;Output&lt;/a&gt; representations&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Including Store In Your Project&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx-atomicfu&#34;&gt;AtomicFU&lt;/a&gt; is required (&lt;a href=&#34;https://github.com/MobileNativeFoundation/Store/issues/503&#34;&gt;#503&lt;/a&gt;)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation &#34;org.mobilenativefoundation.store:store5:5.0.0-alpha04&#34;&#xA;implementation &#34;org.jetbrains.kotlinx:atomicfu:0.18.5&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Multiplatform (Common, JVM, Native, JS)&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;commonMain {&#xA;  dependencies {&#xA;    implementation(&#34;org.mobilenativefoundation.store:store5:5.0.0-alpha04&#34;)&#xA;    implementation(&#34;org.jetbrains.kotlinx:atomicfu:0.18.5&#34;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Getting Started&lt;/h3&gt; &#xA;&lt;h4&gt;Building Your First Store&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;StoreBuilder&#xA;  .from&amp;lt;Key, Network, Output, Local&amp;gt;(fetcher, sourceOfTruth)&#xA;  .converter(converter)&#xA;  .validator(validator)&#xA;  .build(updater, bookkeeper)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Creating&lt;/h4&gt; &#xA;&lt;h5&gt;Request&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;store.write(&#xA;  request = StoreWriteRequest.of&amp;lt;Key, Output, Response&amp;gt;(&#xA;    key = key,&#xA;    value = value&#xA;  )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Response&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;1. StoreWriteResponse.Success.Typed&amp;lt;Response&amp;gt;(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Reading&lt;/h4&gt; &#xA;&lt;h5&gt;Request&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;store.stream&amp;lt;Response&amp;gt;(request = StoreReadRequest.cached(key, refresh = false))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Response&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;1. StoreReadResponse.Data(value, origin = StoreReadResponseOrigin.Cache)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Updating&lt;/h4&gt; &#xA;&lt;h5&gt;Request&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;store.write(&#xA;  request = StoreWriteRequest.of&amp;lt;Key, Output, Response&amp;gt;(&#xA;    key = key,&#xA;    value = newValue&#xA;  )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Response&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;1. StoreWriteResponse.Success.Typed&amp;lt;Response&amp;gt;(response)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Deleting&lt;/h4&gt; &#xA;&lt;h5&gt;Request&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;store.clear(key)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Copyright (c) 2022 Mobile Native Foundation.&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>