<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-02T01:34:54Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Dhaval2404/ImagePicker</title>
    <updated>2022-11-02T01:34:54Z</updated>
    <id>tag:github.com,2022-11-02:/Dhaval2404/ImagePicker</id>
    <link href="https://github.com/Dhaval2404/ImagePicker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üì∏Image Picker for Android, Pick an image from Gallery or Capture a new image with Camera&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üì∏Image Picker Library for Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jitpack.io/#Dhaval2404/ImagePicker&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/Dhaval2404/ImagePicker.svg?sanitize=true&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/dhaval2404/imagePicker/all.svg?style=flat-square&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=19&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API-19%2B-brightgreen.svg?style=flat&#34; alt=&#34;API&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/Dhaval2404/ImagePicker/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Build Status&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/language-Kotlin-orange.svg?sanitize=true&#34; alt=&#34;Language&#34;&gt; &lt;a href=&#34;https://android-arsenal.com/details/1/7510&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android%20Arsenal-ImagePicker-green.svg?style=flat&#34; alt=&#34;Android Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ktlint.github.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg?sanitize=true&#34; alt=&#34;ktlint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRWelcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://badges.frapsoft.com/os/v1/open-source.svg?v=102&#34; alt=&#34;Open Source Love&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=Check+out+an+ImagePicker+library+to+Pick+an+image+from+the+Gallery+or+Capture+an+image+with+Camera.+https%3A%2F%2Fgithub.com%2FDhaval2404%2FImagePicker+%40dhaval2404+%23Android+%23Kotlin+%23AndroidDev&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/url/https/github.com/Dhaval2404/ImagePicker.svg?style=social&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;sub&gt;Built with ‚ù§Ô∏é by &lt;a href=&#34;https://twitter.com/Dhaval2404&#34;&gt;Dhaval Patel&lt;/a&gt; and &lt;a href=&#34;https://github.com/dhaval2404/imagepicker/graphs/contributors&#34;&gt; contributors &lt;/a&gt; &lt;/sub&gt;&#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Easy to use and configurable library to &lt;strong&gt;Pick an image from the Gallery or Capture image using Camera&lt;/strong&gt;. It also allows to &lt;strong&gt;Crop and Compresses the Image based on Aspect Ratio, Resolution and Image Size&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Almost 90% of the app that I have developed has an Image upload feature. Along with the image selection, Sometimes I needed a crop feature for profile image for that I&#39;ve used uCrop. Most of the time I need to compress the image as the image captured from the camera is more than 5-10 MBs and sometimes we have a requirement to upload images with specific resolution/size, in that case, image compress is the way to go option. To simplify the image pick/capture option I have created ImagePicker library. I hope it will be useful to all.&lt;/p&gt; &#xA;&lt;h1&gt;üê±‚ÄçüèçFeatures:&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Pick Gallery Image&lt;/li&gt; &#xA; &lt;li&gt;Pick Image from Google Drive&lt;/li&gt; &#xA; &lt;li&gt;Capture Camera Image&lt;/li&gt; &#xA; &lt;li&gt;Crop Image (Crop image based on provided aspect ratio or let user choose one)&lt;/li&gt; &#xA; &lt;li&gt;Compress Image (Compress image based on provided resolution and size)&lt;/li&gt; &#xA; &lt;li&gt;Retrieve Image Result as Uri object (Retrieve as File object feature is removed in v2.0 to support scope storage)&lt;/li&gt; &#xA; &lt;li&gt;Handle runtime permission for camera&lt;/li&gt; &#xA; &lt;li&gt;Does not require storage permission to pick gallery image or capture new image.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;üé¨Preview&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Profile Image Picker&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Gallery Only&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Camera Only&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/Dhaval2404/ImagePicker/raw/master/art/imagepicker_profile_demo.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/Dhaval2404/ImagePicker/raw/master/art/imagepicker_gallery_demo.gif.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/Dhaval2404/ImagePicker/raw/master/art/imagepicker_camera_demo.gif.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;üíªUsage&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Gradle dependency:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;allprojects {&#xA;   repositories {&#xA;       &#x9;maven { url &#34;https://jitpack.io&#34; }&#xA;   }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;implementation &#39;com.github.dhaval2404:imagepicker:2.1&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;If you are yet to Migrate on AndroidX, Use support build artifact:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;implementation &#39;com.github.dhaval2404:imagepicker-support:1.7.1&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The ImagePicker configuration is created using the builder pattern.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Kotlin&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;        .crop()&#x9;    &#x9;&#x9;&#x9;//Crop image(Optional), Check Customization for more option&#xA;        .compress(1024)&#x9;&#x9;&#x9;//Final image size will be less than 1 MB(Optional)&#xA;        .maxResultSize(1080, 1080)&#x9;//Final image resolution will be less than 1080 x 1080(Optional)&#xA;        .start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;        .crop()&#x9;    &#x9;&#x9;&#x9;//Crop image(Optional), Check Customization for more option&#xA;        .compress(1024)&#x9;&#x9;&#x9;//Final image size will be less than 1 MB(Optional)&#xA;        .maxResultSize(1080, 1080)&#x9;//Final image resolution will be less than 1080 x 1080(Optional)&#xA;        .start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Handling results&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Override &lt;code&gt;onActivityResult&lt;/code&gt; method and handle ImagePicker result.&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {&#xA;     super.onActivityResult(requestCode, resultCode, data)&#xA;     if (resultCode == Activity.RESULT_OK) {&#xA;         //Image Uri will not be null for RESULT_OK&#xA;         val uri: Uri = data?.data!!&#xA;&#xA;         // Use Uri object instead of File to avoid storage permissions&#xA;         imgProfile.setImageURI(fileUri)&#xA;     } else if (resultCode == ImagePicker.RESULT_ERROR) {&#xA;         Toast.makeText(this, ImagePicker.getError(data), Toast.LENGTH_SHORT).show()&#xA;     } else {&#xA;         Toast.makeText(this, &#34;Task Cancelled&#34;, Toast.LENGTH_SHORT).show()&#xA;     }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Inline method (with registerForActivityResult, Only Works with FragmentActivity and AppCompatActivity)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;i. Add required dependency for registerForActivityResult API&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;implementation &#34;androidx.activity:activity-ktx:1.2.3&#34;&#xA;implementation &#34;androidx.fragment:fragment-ktx:1.3.3&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;ii. Declare this method inside fragment or activity class&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;private val startForProfileImageResult =&#xA;    registerForActivityResult(ActivityResultContracts.StartActivityForResult()) { result: ActivityResult -&amp;gt;&#xA;        val resultCode = result.resultCode&#xA;        val data = result.data&#xA;&#xA;        if (resultCode == Activity.RESULT_OK) {&#xA;            //Image Uri will not be null for RESULT_OK&#xA;            val fileUri = data?.data!!&#xA;&#xA;            mProfileUri = fileUri&#xA;            imgProfile.setImageURI(fileUri)&#xA;        } else if (resultCode == ImagePicker.RESULT_ERROR) {&#xA;            Toast.makeText(this, ImagePicker.getError(data), Toast.LENGTH_SHORT).show()&#xA;        } else {&#xA;            Toast.makeText(this, &#34;Task Cancelled&#34;, Toast.LENGTH_SHORT).show()&#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;iii. Create ImagePicker instance and launch intent&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;        .compress(1024)         //Final image size will be less than 1 MB(Optional)&#xA;        .maxResultSize(1080, 1080)  //Final image resolution will be less than 1080 x 1080(Optional)&#xA;        .createIntent { intent -&amp;gt;&#xA;            startForProfileImageResult.launch(intent)&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;üé®Customization&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Pick image using Gallery&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;&#x9;.galleryOnly()&#x9;//User can only select image from Gallery&#xA;&#x9;.start()&#x9;//Default Request Code is ImagePicker.REQUEST_CODE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Capture image using Camera&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;&#x9;.cameraOnly()&#x9;//User can only capture image using Camera&#xA;&#x9;.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Crop image&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;&#x9;.crop()&#x9;    //Crop image and let user choose aspect ratio.&#xA;&#x9;.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Crop image with fixed Aspect Ratio&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;&#x9;.crop(16f, 9f)&#x9;//Crop image with 16:9 aspect ratio&#xA;&#x9;.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Crop square image(e.g for profile)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;    .cropSquare()&#x9;//Crop square image, its same as crop(1f, 1f)&#xA;    .start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Compress image size(e.g image should be maximum 1 MB)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;&#x9;.compress(1024)&#x9;//Final image size will be less than 1 MB&#xA;&#x9;.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Set Resize image resolution&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;&#x9;.maxResultSize(620, 620)&#x9;//Final image resolution will be less than 620 x 620&#xA;&#x9;.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Intercept ImageProvider, Can be used for analytics&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;    .setImageProviderInterceptor { imageProvider -&amp;gt; //Intercept ImageProvider&#xA;        Log.d(&#34;ImagePicker&#34;, &#34;Selected ImageProvider: &#34;+imageProvider.name)&#xA;    }&#xA;    .start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Intercept Dialog dismiss event&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;&#x9;.setDismissListener {&#xA;&#x9;&#x9;// Handle dismiss event&#xA;&#x9;&#x9;Log.d(&#34;ImagePicker&#34;, &#34;onDismiss&#34;);&#xA;&#x9;}&#xA;&#x9;.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Specify Directory to store captured, cropped or compressed images. &lt;em&gt;Do not use external public storage directory (i.e. Environment.getExternalStorageDirectory())&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;   /// Provide directory path to save images, Added example saveDir method. You can choose directory as per your need.&#xA;&#xA;   //  Path: /storage/sdcard0/Android/data/package/files&#xA;   .saveDir(getExternalFilesDir(null)!!)&#xA;   //  Path: /storage/sdcard0/Android/data/package/files/DCIM&#xA;   .saveDir(getExternalFilesDir(Environment.DIRECTORY_DCIM)!!)&#xA;   //  Path: /storage/sdcard0/Android/data/package/files/Download&#xA;   .saveDir(getExternalFilesDir(Environment.DIRECTORY_DOWNLOADS)!!)&#xA;   //  Path: /storage/sdcard0/Android/data/package/files/Pictures&#xA;   .saveDir(getExternalFilesDir(Environment.DIRECTORY_PICTURES)!!)&#xA;   //  Path: /storage/sdcard0/Android/data/package/files/Pictures/ImagePicker&#xA;   .saveDir(File(getExternalFilesDir(Environment.DIRECTORY_PICTURES)!!, &#34;ImagePicker&#34;))&#xA;   //  Path: /storage/sdcard0/Android/data/package/files/ImagePicker&#xA;   .saveDir(getExternalFilesDir(&#34;ImagePicker&#34;)!!)&#xA;   //  Path: /storage/sdcard0/Android/data/package/cache/ImagePicker&#xA;   .saveDir(File(getExternalCacheDir(), &#34;ImagePicker&#34;))&#xA;   //  Path: /data/data/package/cache/ImagePicker&#xA;   .saveDir(File(getCacheDir(), &#34;ImagePicker&#34;))&#xA;   //  Path: /data/data/package/files/ImagePicker&#xA;   .saveDir(File(getFilesDir(), &#34;ImagePicker&#34;))&#xA;&#xA;  // Below saveDir path will not work, So do not use it&#xA;  //  Path: /storage/sdcard0/DCIM&#xA;  //  .saveDir(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM))&#xA;  //  Path: /storage/sdcard0/Pictures&#xA;  //  .saveDir(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES))&#xA;  //  Path: /storage/sdcard0/ImagePicker&#xA;  //  .saveDir(File(Environment.getExternalStorageDirectory(), &#34;ImagePicker&#34;))&#xA;&#xA;    .start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Limit MIME types while choosing a gallery image&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;    .galleryMimeTypes(  //Exclude gif images&#xA;        mimeTypes = arrayOf(&#xA;          &#34;image/png&#34;,&#xA;          &#34;image/jpg&#34;,&#xA;          &#34;image/jpeg&#34;&#xA;        )&#xA;      )&#xA;    .start()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also specify the request code with ImagePicker&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;ImagePicker.with(this)&#xA;&#x9;.maxResultSize(620, 620)&#xA;&#x9;.start(101)&#x9;//Here 101 is request code, you may use this in onActivityResult&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add Following parameters in your &lt;strong&gt;colors.xml&lt;/strong&gt; file, If you want to customize uCrop Activity.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;resources&amp;gt;&#xA;    &amp;lt;!-- Here you can add color of your choice  --&amp;gt;&#xA;    &amp;lt;color name=&#34;ucrop_color_toolbar&#34;&amp;gt;@color/teal_500&amp;lt;/color&amp;gt;&#xA;    &amp;lt;color name=&#34;ucrop_color_statusbar&#34;&amp;gt;@color/teal_700&amp;lt;/color&amp;gt;&#xA;    &amp;lt;color name=&#34;ucrop_color_widget_active&#34;&amp;gt;@color/teal_500&amp;lt;/color&amp;gt;&#xA;&amp;lt;/resources&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;üí•Compatibility&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Library - Android Kitkat 4.4+ (API 19)&lt;/li&gt; &#xA; &lt;li&gt;Sample - Android Kitkat 4.4+ (API 19)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;‚úîÔ∏èChangelog&lt;/h1&gt; &#xA;&lt;h3&gt;Version: 2.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added uzbekistan translation (Special Thanks to Khudoyshukur Juraev)&lt;/li&gt; &#xA; &lt;li&gt;Removed requestLegacyExternalStorage flag&lt;/li&gt; &#xA; &lt;li&gt;Removed unused string resources&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 2.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added arabic translation &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/pull/157&#34;&gt;#157&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/zhangzhu95&#34;&gt;zhangzhu95&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Added norwegian translation &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/pull/163&#34;&gt;#163&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/TorkelV&#34;&gt;TorkelV&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Added german translation &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/pull/192&#34;&gt;#192&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/MDXDave&#34;&gt;MDXDave&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Added method to return Intent for manual launching ImagePicker &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/pull/182&#34;&gt;#182&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/tobiasKaminsky&#34;&gt;tobiasKaminsky&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Added support for android 11 &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/199&#34;&gt;#199&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed android scope storage issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/29&#34;&gt;#29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Removed storage permissions &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/29&#34;&gt;#29&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed calculateInSampleSize leads to overly degraded quality &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/152&#34;&gt;#152&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/FlorianDenis&#34;&gt;FlorianDenis&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Fixed camera app not found issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/162&#34;&gt;#162&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed Playstore requestLegacyExternalStorage flag issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/199&#34;&gt;#199&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.8&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added dialog dismiss listener (Special Thanks to &lt;a href=&#34;https://github.com/kibotu&#34;&gt;kibotu&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Added text localization (Special Thanks to &lt;a href=&#34;https://github.com/yamin8000&#34;&gt;yamin8000&lt;/a&gt; and Jose Bravo)&lt;/li&gt; &#xA; &lt;li&gt;Fixed crash issue on missing camera app &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/69&#34;&gt;#69&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue selecting images from download folder &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/86&#34;&gt;#86&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed exif information lost issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/121&#34;&gt;#121&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed crash issue on large image crop &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/122&#34;&gt;#122&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed saving image in cache issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/127&#34;&gt;#127&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.7&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added option to limit MIME types while choosing a gallery image (Special Thanks to &lt;a href=&#34;https://github.com/Marchuck&#34;&gt;Marchuck&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Introduced ImageProviderInterceptor, Can be used for analytics (Special Thanks to &lt;a href=&#34;https://github.com/Marchuck&#34;&gt;Marchuck&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Fixed .crop() opening gallery or camera twice &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/32&#34;&gt;#32&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed FileProvider of the library clashes with the FileProvider of the app &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/51&#34;&gt;#51&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/OyaCanli&#34;&gt;OyaCanli&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Added option to set Storage Directory &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/52&#34;&gt;#52&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed NullPointerException in FileUriUtils.getPathFromRemoteUri() &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/61&#34;&gt;#61&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/himphen&#34;&gt;himphen&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Fixed UCropActivity Crash Android 4.4 (KiKat) &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/82&#34;&gt;#82&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed PNG image saved as JPG after crop issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/94&#34;&gt;#94&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Fixed PNG image saved as JPG after compress issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/105&#34;&gt;#105&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Added Polish text translation &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/115&#34;&gt;#115&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/MarcelKijanka&#34;&gt;MarcelKijanka&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Failed to find configured root exception &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/116&#34;&gt;#116&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.6&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Improved UI/UX of sample app&lt;/li&gt; &#xA; &lt;li&gt;Removed Bitmap Deprecated Property &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/33&#34;&gt;#33&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/nauhalf&#34;&gt;nauhalf&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Camera opens twice when &#34;Don&#39;t keep activities&#34; option is ON &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/41&#34;&gt;#41&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/benji101&#34;&gt;benji101&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Fixed uCrop Crash Issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/42&#34;&gt;#42&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.5&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Fixed app crash issue, due to Camera Permission in manifest &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/34&#34;&gt;#34&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Added Option for Dynamic Crop Ratio. Let User choose aspect ratio &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/36&#34;&gt;#36&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/Dor-Sloim&#34;&gt;Dor-Sloim&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.4&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimized Uri to File Conversion (Inspired by &lt;a href=&#34;https://github.com/flutter/plugins/tree/master/packages/image_picker&#34;&gt;Flutter ImagePicker&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Removed redundant CAMERA permission &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/26&#34;&gt;#26&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/PerrchicK&#34;&gt;PerrchicK&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.3&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sample app made compatible with Android Kitkat 4.4+ (API 19)&lt;/li&gt; &#xA; &lt;li&gt;Fixed Uri to File Conversion issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/8&#34;&gt;#8&lt;/a&gt; (Special Thanks to &lt;a href=&#34;https://github.com/squeeish&#34;&gt;squeeish&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.2&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Added Support for Inline Activity Result(Special Thanks to &lt;a href=&#34;https://github.com/soareseneves&#34;&gt;soareseneves&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Fixed issue &lt;a href=&#34;https://github.com/Dhaval2404/ImagePicker/issues/6&#34;&gt;#6&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.1&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Optimized Compression Logic&lt;/li&gt; &#xA; &lt;li&gt;Replace white screen with transparent one.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Version: 1.0&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Initial Build&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üìÉ Libraries Used&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;uCrop &lt;a href=&#34;https://github.com/Yalantis/uCrop&#34;&gt;https://github.com/Yalantis/uCrop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Compressor &lt;a href=&#34;https://github.com/zetbaitsu/Compressor&#34;&gt;https://github.com/zetbaitsu/Compressor&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Let us know!&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;ll be really happy if you sent us links to your projects where you use our component. Just send an email to &lt;strong&gt;&lt;a href=&#34;mailto:dhavalpatel244@gmail.com&#34;&gt;dhavalpatel244@gmail.com&lt;/a&gt;&lt;/strong&gt; And do let us know if you have any questions or suggestion regarding the library.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2019-2021, Dhaval Patel&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;     http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>