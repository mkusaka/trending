<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-14T01:30:05Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hua0512/stream-rec</title>
    <updated>2024-05-14T01:30:05Z</updated>
    <id>tag:github.com,2024-05-14:/hua0512/stream-rec</id>
    <link href="https://github.com/hua0512/stream-rec" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automatic streaming record tool powered by Kotlin coroutines, flow, serialization, sqldelight, and ktor. ËôéÁâô/ÊäñÈü≥/ÊñóÈ±º/Twitch/PandaTVÁõ¥Êí≠ÔºåÂºπÂπïËá™Âä®ÂΩïÂà∂&lt;/p&gt;&lt;hr&gt;&lt;h4 align=&#34;right&#34;&gt; &lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&#34;https://github.com/hua0512/stream-rec/raw/main/docs/README_zh.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; &lt;/h4&gt; &#xA;&lt;h1&gt;Stream-rec&lt;/h1&gt; &#xA;&lt;p&gt;Stream-rec is an automatic stream recording tool for various streaming services.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s powered by Kotlin, &lt;a href=&#34;https://ktor.io/&#34;&gt;Ktor&lt;/a&gt;, and &lt;a href=&#34;https://ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This project is the result of my personal need for a tool that can automatically record live streams and upload them to cloud storage.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; This project is the result of my personal learning of Kotlin Coroutines, flow, Ktor, dao, repository pattern and other technologies.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic stream recording, with configurable quality and format.&lt;/li&gt; &#xA; &lt;li&gt;Automatic file naming based on the stream title and start time.&lt;/li&gt; &#xA; &lt;li&gt;Automatic Danmu(Bullet comments) recording&lt;/li&gt; &#xA; &lt;li&gt;Persistent storage of stream and upload information (using SQLite)&lt;/li&gt; &#xA; &lt;li&gt;Integration with &lt;a href=&#34;https://rclone.org/&#34;&gt;Rclone&lt;/a&gt; for uploading to cloud storage&lt;/li&gt; &#xA; &lt;li&gt;Configurable via web interface.&lt;/li&gt; &#xA; &lt;li&gt;Docker support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Supported streaming services&lt;/h1&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Service&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Recording&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Danmu&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Url format&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Douyin&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;https://www.live.douyin.com/{douyinId}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Douyu&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;https://www.douyu.com/{room}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Huya&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;https://www.huya.com/{room}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;PandaTV&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;https://www.pandalive.co.kr/live/play/{room}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Twitch&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚úÖ&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;code&gt;https://www.twitch.tv/{room}&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;AfreecaTv&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Bilibili&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Niconico&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Youtube&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;‚ùå&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;More services will be supported in the future (if I have time, PRs are welcomed).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Screenshots&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hua0512/stream-rec/main/docs/images/en/login.png&#34; alt=&#34;login.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hua0512/stream-rec/main/docs/images/en/dashboard.png&#34; alt=&#34;dashboard.png&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/hua0512/stream-rec/main/docs/images/en/streamers.png&#34; alt=&#34;streamers.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;h1&gt;1. Docker Compose (Recommended)&lt;/h1&gt; &#xA;&lt;h2&gt;1.1 Configuring the docker-compose.yml file&lt;/h2&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt;, take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/hua0512/stream-rec/main/docs/example-docker-compose.yml&#34;&gt;example&lt;/a&gt; configuration file.&lt;/p&gt; &#xA;&lt;p&gt;Please read the comments in the configuration file for more information and make sure to modify crucial parts like passwords, paths, etc.&lt;/p&gt; &#xA;&lt;h2&gt;1.2 Running the Docker compose&lt;/h2&gt; &#xA;&lt;p&gt;Make sure you are in the same directory as the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, then run the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker compose up -d &amp;amp;&amp;amp; docker compose logs -f&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now, you are all set! You can access the web interface at &lt;code&gt;http://localhost:15275&lt;/code&gt; and start configuring the tool ( see &lt;a href=&#34;https://raw.githubusercontent.com/hua0512/stream-rec/main/docs/Configuration.md&#34;&gt;Configuration&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;br&gt; You can detach from the logs by pressing &lt;code&gt;Ctrl + C&lt;/code&gt;. And you can reattach to the logs by running &lt;code&gt;docker compose logs -f&lt;/code&gt;. To stop the containers, run &lt;code&gt;docker compose down&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;2. Building from source&lt;/h1&gt; &#xA;&lt;h2&gt;2.1 Prerequisites&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Internet access, obviously üòÇ&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt; (optional, for cloning the repository)&lt;/li&gt; &#xA; &lt;li&gt;A java development kit (JDK) (version 17 or later), &lt;a href=&#34;https://docs.aws.amazon.com/corretto/latest/corretto-17-ug/downloads-list.html&#34;&gt;Amazon Corretto 17&lt;/a&gt; is recommended.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ffmpeg.org/download.html&#34;&gt;FFmpeg&lt;/a&gt; (Make sure it&#39;s in your &lt;code&gt;PATH&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://streamlink.github.io/install.html&#34;&gt;Streamlink&lt;/a&gt; (optional, for recording streams, make sure it&#39;s in your &lt;code&gt;PATH&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://rclone.org/downloads/&#34;&gt;Rclone&lt;/a&gt; (optional, for uploading to cloud storage, make sure it&#39;s in your &lt;code&gt;PATH&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/download.html&#34;&gt;Sqlite3&lt;/a&gt; (for storing stream, upload information, make sure it&#39;s in your &lt;code&gt;PATH&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2.2 Building the backend&lt;/h2&gt; &#xA;&lt;p&gt;To build the project, first clone the repository and navigate to the root directory of the project.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/hua0512/stream-rec.git&#xA;cd stream-rec&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, build the project using the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew stream-rec:build -x test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The built fat jar file &lt;code&gt;stream-rec.jar&lt;/code&gt; will be located in the &lt;code&gt;stream-rec/build/libs&lt;/code&gt; directory.&lt;/p&gt; &#xA;&lt;h2&gt;2.2.1 Running the jar file&lt;/h2&gt; &#xA;&lt;p&gt;To run the jar file, use the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;java -jar stream-rec/build/libs/stream-rec.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Several environment variables can be set to configure the tool:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DB_PATH&lt;/code&gt;: Path to the SQLite database folder. (default: &lt;code&gt;./db&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;JWT_SECRET&lt;/code&gt;: Secret key for JWT token generation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LOG_LEVEL&lt;/code&gt;: Log level (default: &lt;code&gt;info&lt;/code&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;LOGIN_SECRET&lt;/code&gt;: Login password for the web interface (default: &lt;code&gt;stream-rec&lt;/code&gt;).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;java -DDB_PATH=/path/to/your/db -DLOG_LEVEL=DEBUG -DJWT_SECRET=SECRET -DLOGIN_SECRET=123 -jar stream-rec/build/libs/stream-rec.jar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; Things to note:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Please set the &lt;code&gt;LOGIN_SECRET&lt;/code&gt; environment variable to a secure password. This password is used to log in to the web interface.&lt;/li&gt; &#xA;  &lt;li&gt;This password cannot be changed after the first run.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;2.3 Building the frontend&lt;/h2&gt; &#xA;&lt;p&gt;Frontend is used to configure the tool, it&#39;s a simple web interface built with React.&lt;/p&gt; &#xA;&lt;p&gt;Navigate to &lt;a href=&#34;https://github.com/hua0512/stream-rec-front&#34;&gt;frontend&lt;/a&gt; repository and follow the build instructions.&lt;/p&gt; &#xA;&lt;p&gt;After that, you can start configuring the tool by accessing the web interface at &lt;code&gt;http://localhost:15275&lt;/code&gt;. Take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/hua0512/stream-rec/main/docs/Configuration.md&#34;&gt;Configuration&lt;/a&gt; page for more information.&lt;/p&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;p&gt;Check logs under &lt;code&gt;logs&lt;/code&gt; directory, by default, it will be created in the same directory as the &lt;code&gt;DB_PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;There¬¥s a environment variable &lt;code&gt;LOG_LEVEL&lt;/code&gt; that can be set to &lt;code&gt;debug&lt;/code&gt; to enable debug logs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributions are welcome! If you have any ideas, suggestions, or bug reports, please feel free to open an issue or a pull request.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href=&#34;https://raw.githubusercontent.com/hua0512/stream-rec/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MinecraftFunctionPlusPlus/MCFPP</title>
    <updated>2024-05-14T01:30:05Z</updated>
    <id>tag:github.com,2024-05-14:/MinecraftFunctionPlusPlus/MCFPP</id>
    <link href="https://github.com/MinecraftFunctionPlusPlus/MCFPP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MCFPP is a brand new objected-oriented language that can be compiled into Minecraft Datapack.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/90548686/236462051-b901f99c-bdef-435c-8ca2-0dda37b25285.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/MinecraftFunctionPlusPlus/MCFPP/kotlin-latest/README_CN.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h1&gt;Introduce&lt;/h1&gt; &#xA;&lt;p&gt;MCFPP is a brand new objected-oriented language that can be compiled into Minecraft Datapack. It aims to write datapacks in a syntax similar to C language, and introduces commonly used concepts in programming, thereby making the writing of datapacks more efficient.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This project is still in the early stage of development and cannot be used for actual use. Some functions have not been implemented, and features may change in future versions. The library is also not complete.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h1&gt;QuickStart&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://alumopper.github.io/mcfppguide/en-US/quickstart&#34;&gt;MCFPP Guider&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Relative Projects&lt;/h1&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/Voziv/MCSharp&#34;&gt;MCSharp&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;MCSharp is a CSharp library. Using MCSharp, developers can develop datapacks using CSharp. However, this project has been stopped due to technical issues. MCFPP inherits part of the ideas of MCSharp.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/XiLaiTL/JustMCF&#34;&gt;justMCF&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;JustMCF is a project to simplify mcfunction projects. Using JustMCF, you can not only use the original commands, but also use the simplified commands designed by the project, which can make your commands more concise and efficient.&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://raw.githubusercontent.com/MinecraftFunctionPlusPlus/MCFPP/kotlin-latest/TODO.md&#34;&gt;Update Plan&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Code optimization&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Garbage collection mechanism&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; More variable features (const, dynamic, import)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Interface&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Inheritance and polymorphism&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Struct&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Operator overload&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Inline Function&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Sandbox&lt;/li&gt; &#xA; &lt;li&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;[ ] Syntactic sugar form of native&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Versioned compilation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Basic library&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Enum&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;h2&gt;basic logical statements&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;void example(){&#xA;  int i = @s.pos[0];&#xA;  if(i &amp;gt; 0){&#xA;    @s.say(&#34;Hello Minecraft!&#34;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;object-oriented programming&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;class Example{&#xA;  int i;&#xA;  public Example(int i){&#xA;    this.i = i;&#xA;  }&#xA;  public void print(){&#xA;    sys.print(this.i);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;libraries&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;import mcfpp.math;&#xA;&#xA;void example{&#xA;    float i = 1.5;&#xA;    float out;&#xA;    out = pow(i, 2);&#xA;    print(out);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>