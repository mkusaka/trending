<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-20T01:43:50Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Bloom-host/Petal</title>
    <updated>2022-07-20T01:43:50Z</updated>
    <id>tag:github.com,2022-07-20:/Bloom-host/Petal</id>
    <link href="https://github.com/Bloom-host/Petal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A performance-oriented fork of Purpur intended to increase performance for entity-heavy servers by implementing multi-threaded and asynchronous improvements.&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://bloom.host/assets/images/petal-logo.png&#34; alt=&#34;petal_logo&#34; width=&#34;80&#34; height=&#34;80&#34;&gt; &#xA;&lt;h1&gt;Petal Performance Minecraft JAR&lt;/h1&gt; &#xA;&lt;p&gt;Petal is a performance-oriented fork of Purpur intended to increase performance for entity-heavy servers by implementing multi-threaded and asynchronous improvements.&lt;/p&gt; &#xA;&lt;h2&gt;Sponsored by Bloom Host&lt;/h2&gt; &#xA;&lt;img src=&#34;https://bloom.host/assets/images/logo-white.svg?sanitize=true&#34; alt=&#34;bloom_logo&#34; width=&#34;240&#34; height=&#34;80&#34;&gt; &#xA;&lt;p&gt;Development of this fork is sponsored by &lt;a href=&#34;https://bloom.host&#34;&gt;Bloom Host&lt;/a&gt;, your home for the highest performance dedicated-core Minecraft hosting, VPS hosting, and bare metal dedicated servers. Bloom serves thousands of customers across the world with locations in Virginia, Dallas, Los Angeles, Miami, Germany, and soon to be Singapore!&lt;/p&gt; &#xA;&lt;p&gt;Join the &lt;a href=&#34;https://discord.gg/bloom&#34;&gt;Bloom Host discord&lt;/a&gt; to connect with over 4,000 members and learn more about their services. Petal ticket support is limited to customers of Bloom Host, but a community support channel is available in the Bloom discord for anybody to use.&lt;/p&gt; &#xA;&lt;p&gt;For a limited time, you can enjoy 15% off your first invoice for any Minecraft/VPS hosting product with the coupon code &lt;code&gt;PETALPOWER&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Petal focuses on two specific improvements for entity-heavy servers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Async Pathfinding&lt;/strong&gt; Entity pathfinding is offloaded to asynchronous threads to significantly reduce processing from the main thread&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Multi-threaded Entity Tracking&lt;/strong&gt; Entity tracking can take advantage of multiple threads to greatly reduce dependence on main thread processing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As Petal is forked from Purpur, it enjoys several performance features from other projects including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sentry Integration&lt;/strong&gt; Easily track all errors coming from your server in excruciating detail (Pufferfish)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Better Entity Performance&lt;/strong&gt; Reduces the performance impact of entities by skipping useless work and making barely-noticeable changes to behavior (Pufferfish)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Partial Asynchronous Processing&lt;/strong&gt; Partially offloads some heavy work to other threads where possible without sacrificing stability (Pufferfish)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;8x Faster Map Rendering&lt;/strong&gt; Reduces or eliminates lag spikes caused by plugins like ImageOnMap or ImageMaps (Pufferfish)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;30% faster hoppers&lt;/strong&gt; over Paper (Airplane)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Reduced GC times &amp;amp; frequency&lt;/strong&gt; from removing useless allocations, which also improves CPU performance (Airplane)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast raytracing&lt;/strong&gt; which improves performance of any entity which utilizes line of sight, mainly Villagers (Airplane)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built-in profiler&lt;/strong&gt; which has 0 performance hit and easy to read metrics for both server owners and developers (Airplane)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Testimonials&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Petal has significantly improved entity performance on our 1.19 servers such as survival &amp;amp; skyblock. This has allowed us to increase per player mob spawn caps &amp;amp; increase frequency of mob spawning without having to worry about taking a performance hit.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;-Foxcraft&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;The latest JAR can currently be found on the releases page &lt;a href=&#34;https://github.com/Bloom-host/Petal/releases&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Petal is licensed under GPLv3.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kambara/air-visualizer</title>
    <updated>2022-07-20T01:43:50Z</updated>
    <id>tag:github.com,2022-07-20:/kambara/air-visualizer</id>
    <link href="https://github.com/kambara/air-visualizer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AirVisualizer&lt;/h1&gt; &#xA;&lt;p&gt;Android application that visualizes airflow using the BOS method.&lt;/p&gt; &#xA;&lt;h2&gt;Background images&lt;/h2&gt; &#xA;&lt;p&gt;Place a background image of the noise pattern behind the object being photographed. Use the following image on your monitor or print it out on paper.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kambara/air-visualizer-background/tree/master/images&#34;&gt;kambara/air-visualizer-background/images&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use a tripod in a stable location&lt;/li&gt; &#xA; &lt;li&gt;Only tested on Pixel 3&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>pact-foundation/pact-jvm</title>
    <updated>2022-07-20T01:43:50Z</updated>
    <id>tag:github.com,2022-07-20:/pact-foundation/pact-jvm</id>
    <link href="https://github.com/pact-foundation/pact-jvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JVM version of Pact. Enables consumer driven contract testing, providing a mock service and DSL for the consumer project, and interaction playback and verification for the service provider project.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pact-JVM&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pact-foundation/pact-jvm/actions?query=workflow%3A%22Pact-JVM+Build%22&#34;&gt;&lt;img src=&#34;https://github.com/pact-foundation/pact-jvm/workflows/Pact-JVM%20Build/badge.svg?sanitize=true&#34; alt=&#34;Pact-JVM Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/au.com.dius.pact.core/model&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/au.com.dius.pact.core/model/badge.svg?style=flat&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;JVM implementation of the consumer driven contract library &lt;a href=&#34;https://github.com/pact-foundation/pact-specification&#34;&gt;pact&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;From the &lt;a href=&#34;https://github.com/pact-foundation/pact-ruby&#34;&gt;Ruby Pact website&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Define a pact between service consumers and providers, enabling &#34;consumer driven contract&#34; testing.&lt;/p&gt; &#xA; &lt;p&gt;Pact provides an RSpec DSL for service consumers to define the HTTP requests they will make to a service provider and the HTTP responses they expect back. These expectations are used in the consumers specs to provide a mock service provider. The interactions are recorded, and played back in the service provider specs to ensure the service provider actually does provide the response the consumer expects.&lt;/p&gt; &#xA; &lt;p&gt;This allows testing of both sides of an integration point using fast unit tests.&lt;/p&gt; &#xA; &lt;p&gt;This gem is inspired by the concept of &#34;Consumer driven contracts&#34;. See &lt;a href=&#34;https://martinfowler.com/articles/consumerDrivenContracts.html&#34;&gt;https://martinfowler.com/articles/consumerDrivenContracts.html&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://dius.com.au/2016/02/03/pact-101-getting-started-with-pact-and-consumer-driven-contract-testing/&#34;&gt;Getting started with Pact&lt;/a&gt; for more information on how to get going.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Twitter: &lt;a href=&#34;https://twitter.com/pact_up&#34;&gt;@pact_up&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Slack: &lt;a href=&#34;https://slack.pact.io/&#34;&gt;Join the chat at https://slack.pact.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Stack Overflow: &lt;a href=&#34;https://stackoverflow.com/questions/tagged/pact&#34;&gt;https://stackoverflow.com/questions/tagged/pact&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For examples of using pact-jvm with spring boot, have a look at &lt;a href=&#34;https://github.com/Mikuu/Pact-JVM-Example&#34;&gt;https://github.com/Mikuu/Pact-JVM-Example&lt;/a&gt; and &lt;a href=&#34;https://github.com/mstine/microservices-pact&#34;&gt;https://github.com/mstine/microservices-pact&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tutorial (60 minutes)&lt;/h2&gt; &#xA;&lt;p&gt;Learn everything in Pact in 60 minutes: &lt;a href=&#34;https://github.com/pact-foundation/pact-workshop-jvm-spring&#34;&gt;https://github.com/pact-foundation/pact-workshop-jvm-spring&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The workshop takes you through all of the key concepts of consumer and provider testing using a Spring boot application.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Additional documentation can be found at &lt;a href=&#34;http://docs.pact.io&#34;&gt;docs.pact.io&lt;/a&gt;, in the &lt;a href=&#34;https://github.com/realestate-com-au/pact/wiki&#34;&gt;Pact Wiki&lt;/a&gt;, and in the &lt;a href=&#34;https://github.com/DiUS/pact-jvm/wiki&#34;&gt;Pact-JVM wiki&lt;/a&gt;. &lt;a href=&#34;https://stackoverflow.com/questions/tagged/pact&#34;&gt;Stack Overflow&lt;/a&gt; is also a good source of help, as is the &lt;a href=&#34;https://slack.pact.io&#34;&gt;Slack workspace&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported JDK and specification versions:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Specification&lt;/th&gt; &#xA;   &lt;th&gt;JDK&lt;/th&gt; &#xA;   &lt;th&gt;Kotlin Version&lt;/th&gt; &#xA;   &lt;th&gt;Latest Version&lt;/th&gt; &#xA;   &lt;th&gt;Notes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v4.4.x/README.md&#34;&gt;4.4.x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;V4 + plugins&lt;/td&gt; &#xA;   &lt;td&gt;11+&lt;/td&gt; &#xA;   &lt;td&gt;1.6.20&lt;/td&gt; &#xA;   &lt;td&gt;4.4.0-beta.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v4.3.x/README.md&#34;&gt;4.3.x&lt;/a&gt; master&lt;/td&gt; &#xA;   &lt;td&gt;V4&lt;/td&gt; &#xA;   &lt;td&gt;11+&lt;/td&gt; &#xA;   &lt;td&gt;1.5.21&lt;/td&gt; &#xA;   &lt;td&gt;4.3.9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/upgrade-to-4.3.x.md&#34;&gt;Upgrade notes&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v4.1.x/README.md&#34;&gt;4.1.x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;V3&lt;/td&gt; &#xA;   &lt;td&gt;8-12&lt;/td&gt; &#xA;   &lt;td&gt;1.3.72&lt;/td&gt; &#xA;   &lt;td&gt;4.1.38&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Previous versions (not actively supported)&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Branch&lt;/th&gt; &#xA;   &lt;th&gt;Specification&lt;/th&gt; &#xA;   &lt;th&gt;JDK&lt;/th&gt; &#xA;   &lt;th&gt;Kotlin Version&lt;/th&gt; &#xA;   &lt;th&gt;Scala Versions&lt;/th&gt; &#xA;   &lt;th&gt;Latest Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v4.2.x/README.md&#34;&gt;4.2.x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;V4 (1)&lt;/td&gt; &#xA;   &lt;td&gt;11-15 (2)&lt;/td&gt; &#xA;   &lt;td&gt;1.4.32&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;4.2.21&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v4.x/README.md&#34;&gt;4.0.x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;V3&lt;/td&gt; &#xA;   &lt;td&gt;8-12&lt;/td&gt; &#xA;   &lt;td&gt;1.3.71&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;4.0.10&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v3.6.x/README.md&#34;&gt;3.6.x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;V3&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;1.3.71&lt;/td&gt; &#xA;   &lt;td&gt;2.12&lt;/td&gt; &#xA;   &lt;td&gt;3.6.15&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v3.5.x/README.md&#34;&gt;3.5.x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;V3&lt;/td&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;1.1.4-2&lt;/td&gt; &#xA;   &lt;td&gt;2.12, 2.11&lt;/td&gt; &#xA;   &lt;td&gt;3.5.25&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v3.5.x-jre7/README.md&#34;&gt;3.5.x-jre7&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;V3&lt;/td&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;1.1.4-2&lt;/td&gt; &#xA;   &lt;td&gt;2.11&lt;/td&gt; &#xA;   &lt;td&gt;3.5.7-jre7.0&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/v2.x/README.md&#34;&gt;2.4.x&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;V2&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;N/A&lt;/td&gt; &#xA;   &lt;td&gt;2.10, 2.11&lt;/td&gt; &#xA;   &lt;td&gt;2.4.20&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;1:&lt;/strong&gt; V4 specification support is only partially implemented with 4.2.x&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2:&lt;/strong&gt; v4.2.x may run on JDK 16, but the build for it does not.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The JARs produced by this project have changed with 4.1.x to better align with Java 9 JPMS. The artefacts are now:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;au.com.dius.pact:consumer&#xA;au.com.dius.pact.consumer:groovy&#xA;au.com.dius.pact.consumer:junit&#xA;au.com.dius.pact.consumer:junit5&#xA;au.com.dius.pact.consumer:java8&#xA;au.com.dius.pact.consumer:specs2_2.13&#xA;au.com.dius.pact:pact-jvm-server&#xA;au.com.dius.pact:provider&#xA;au.com.dius.pact.provider:scalatest_2.13&#xA;au.com.dius.pact.provider:spring&#xA;au.com.dius.pact.provider:maven&#xA;au.com.dius.pact:provider&#xA;au.com.dius.pact.provider:junit&#xA;au.com.dius.pact.provider:junit5&#xA;au.com.dius.pact.provider:scalasupport_2.13&#xA;au.com.dius.pact.provider:lein&#xA;au.com.dius.pact.provider:gradle&#xA;au.com.dius.pact.provider:specs2_2.13&#xA;au.com.dius.pact.provider:junit5spring&#xA;au.com.dius.pact.core:support&#xA;au.com.dius.pact.core:model&#xA;au.com.dius.pact.core:matchers&#xA;au.com.dius.pact.core:pactbroker&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Service Consumers&lt;/h2&gt; &#xA;&lt;p&gt;Pact-JVM has a number of ways you can write your service consumer tests.&lt;/p&gt; &#xA;&lt;h3&gt;I Use Scala&lt;/h3&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://github.com/jbwheatley/pact4s&#34;&gt;pact4s&lt;/a&gt; or &lt;a href=&#34;https://github.com/ITV/scala-pact&#34;&gt;scala-pact&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;I Use Java&lt;/h3&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/consumer/junit&#34;&gt;junit&lt;/a&gt; for JUnit 4 tests and &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/consumer/junit5&#34;&gt;junit5&lt;/a&gt; for JUnit 5 tests. Also, if you are using Java 11 or above, there is &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/consumer&#34;&gt;an updated DSL for consumer tests&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you are using Java 8, there is no separate Java 8 support library anymore, see the above library.&lt;/p&gt; &#xA;&lt;h3&gt;I Use Groovy or Grails&lt;/h3&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/consumer/groovy&#34;&gt;groovy&lt;/a&gt; or &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/consumer/junit&#34;&gt;junit&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;(Use Clojure I)&lt;/h3&gt; &#xA;&lt;p&gt;Clojure can call out to Java, so have a look at &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/consumer/junit&#34;&gt;junit&lt;/a&gt;. For an example look at &lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/master/consumer/junit/src/test/clojure/au/com/dius/pact/consumer/junit/example_clojure_consumer_pact_test.clj&#34;&gt;example_clojure_consumer_pact_test.clj&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;I Use some other jvm language or test framework&lt;/h3&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/consumer&#34;&gt;Consumer&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;My Consumer interacts with a Message Queue&lt;/h3&gt; &#xA;&lt;p&gt;As part of the V3 pact specification, we have defined a new pact file for interactions with message queues. For an implementation of a Groovy consumer test with a message pact, have a look at &lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/master/consumer/groovy/src/test/groovy/au/com/dius/pact/consumer/groovy/messaging/PactMessageBuilderSpec.groovy&#34;&gt;PactMessageBuilderSpec.groovy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Service Providers&lt;/h2&gt; &#xA;&lt;p&gt;Once you have run your consumer tests, you will have generated some Pact files. You can then verify your service providers with these files.&lt;/p&gt; &#xA;&lt;h3&gt;I am writing a provider and want to ...&lt;/h3&gt; &#xA;&lt;h4&gt;verify pacts with SBT&lt;/h4&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://github.com/jbwheatley/pact4s&#34;&gt;pact4s&lt;/a&gt; or &lt;a href=&#34;https://github.com/ITV/scala-pact&#34;&gt;scala-pact&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;verify pacts with Gradle&lt;/h4&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider/gradle&#34;&gt;pact gradle plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;verify pacts with Maven&lt;/h4&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider/maven&#34;&gt;pact maven plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;verify pacts with JUnit tests&lt;/h4&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider/junit&#34;&gt;junit provider support&lt;/a&gt; for JUnit 4 tests and &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider/junit5&#34;&gt;junit5&lt;/a&gt; for JUnit 5 tests&lt;/p&gt; &#xA;&lt;h4&gt;verify pacts with Leiningen&lt;/h4&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider/lein&#34;&gt;pact leiningen plugin&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;verify pacts with a Spring MVC project&lt;/h4&gt; &#xA;&lt;p&gt;Have a look at &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider/spring&#34;&gt;spring&lt;/a&gt; or &lt;a href=&#34;https://github.com/realestate-com-au/pact-jvm-provider-spring-mvc&#34;&gt;Spring MVC Pact Test Runner&lt;/a&gt; (Not maintained).&lt;/p&gt; &#xA;&lt;h4&gt;I want to verify pacts but don&#39;t want to use sbt or gradle or leiningen&lt;/h4&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider&#34;&gt;provider&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;verify interactions with a message queue&lt;/h4&gt; &#xA;&lt;p&gt;As part of the V3 pact specification, we have defined a new pact file for interactions with message queues. The Gradle pact plugin supports a mechanism where you can verify V3 message pacts, have a look at &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider/gradle#verifying-a-message-provider&#34;&gt;pact gradle plugin&lt;/a&gt;. The JUnit pact library also supports verification of V3 message pacts, have a look at &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/provider/junit#verifying-a-message-provider&#34;&gt;junit&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;I Use Ruby or Go or something else&lt;/h3&gt; &#xA;&lt;p&gt;The pact-jvm libraries are pure jvm technologies and do not have any native dependencies.&lt;/p&gt; &#xA;&lt;p&gt;However, if you have a ruby provider, the json produced by this library is compatible with the ruby pact library. You&#39;ll want to look at: &lt;a href=&#34;https://github.com/pact-foundation/pact-ruby&#34;&gt;Ruby Pact&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For .Net, there is &lt;a href=&#34;https://github.com/pact-foundation/pact-net&#34;&gt;Pact-net&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For JS, there is &lt;a href=&#34;https://github.com/pact-foundation/pact-js&#34;&gt;Pact-JS&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Go, there is &lt;a href=&#34;https://github.com/pact-foundation/pact-go&#34;&gt;Pact-go&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For Rust, there is &lt;a href=&#34;https://github.com/pact-foundation/pact-reference/tree/master/rust/pact_consumer&#34;&gt;Pact-Rust&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Have a look at &lt;a href=&#34;https://github.com/realestate-com-au/pact/wiki#implementations-in-other-languages&#34;&gt;implementations in other languages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;I Use something completely different&lt;/h3&gt; &#xA;&lt;p&gt;There&#39;s a limit to how much we can help, however check out &lt;a href=&#34;https://raw.githubusercontent.com/pact-foundation/pact-jvm/master/pact-jvm-server&#34;&gt;pact-jvm-server&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How do I transport my pacts from consumers to providers?&lt;/h2&gt; &#xA;&lt;p&gt;You want to look at: &lt;a href=&#34;https://github.com/pact-foundation/pact_broker&#34;&gt;Pact Broker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Which is a project that aims at providing tooling to coordinate pact generation and delivery between projects.&lt;/p&gt; &#xA;&lt;h2&gt;I want to contribute&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DiUS/pact-jvm/raw/master/CONTRIBUTING.md&#34;&gt;Documentation for contributors is here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Test Analytics&lt;/h1&gt; &#xA;&lt;p&gt;We are tracking anonymous analytics to gather important usage statistics like JVM version and operating system. To disable tracking, set the &#39;pact_do_not_track&#39; system property or environment variable to &#39;true&#39;.&lt;/p&gt;</summary>
  </entry>
</feed>