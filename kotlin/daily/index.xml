<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-08-29T01:31:48Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>DataDog/dd-sdk-android</title>
    <updated>2024-08-29T01:31:48Z</updated>
    <id>tag:github.com,2024-08-29:/DataDog/dd-sdk-android</id>
    <link href="https://github.com/DataDog/dd-sdk-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Datadog SDK for Android (Compatible with Kotlin and Java)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datadog SDK for Android and Android TV&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A client-side Android and Android TV library to interact with Datadog.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Log Collection&lt;/h3&gt; &#xA;&lt;p&gt;See the dedicated &lt;a href=&#34;https://docs.datadoghq.com/logs/log_collection/android/?tab=kotlin&#34;&gt;Datadog Android Log Collection documentation&lt;/a&gt; to learn how to forward logs from your Android or Android TV application to Datadog.&lt;/p&gt; &#xA;&lt;h3&gt;Real User Monitoring&lt;/h3&gt; &#xA;&lt;p&gt;See the dedicated &lt;a href=&#34;https://docs.datadoghq.com/real_user_monitoring/android/?tab=kotlin&#34;&gt;Datadog Android RUM Collection documentation&lt;/a&gt; to learn how to send RUM data from your Android or Android TV application to Datadog.&lt;/p&gt; &#xA;&lt;h2&gt;Log Integrations&lt;/h2&gt; &#xA;&lt;h3&gt;Timber&lt;/h3&gt; &#xA;&lt;p&gt;If your existing codebase is using Timber, you can forward all those logs to Datadog automatically by using the &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-timber/README.md&#34;&gt;dedicated library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;RUM Integrations&lt;/h2&gt; &#xA;&lt;h3&gt;Coil&lt;/h3&gt; &#xA;&lt;p&gt;If you use Coil to load images in your application, see Datadog&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-coil/README.md&#34;&gt;dedicated library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Fresco&lt;/h3&gt; &#xA;&lt;p&gt;If you use Fresco to load images in your application, see Datadog&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-fresco/README.md&#34;&gt;dedicated library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Glide&lt;/h3&gt; &#xA;&lt;p&gt;If you use Glide to load images in your application, see Datadog&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-glide/README.md&#34;&gt;dedicated library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Jetpack Compose&lt;/h3&gt; &#xA;&lt;p&gt;If you use Jetpack Compose in your application, see Datadog&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-compose/README.md&#34;&gt;dedicated library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;SQLDelight&lt;/h3&gt; &#xA;&lt;p&gt;If you use SQLDelight in your application, see Datadog&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-sqldelight/README.md&#34;&gt;dedicated library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;RxJava&lt;/h3&gt; &#xA;&lt;p&gt;If you use RxJava in your application, see Datadog&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-rx/README.md&#34;&gt;dedicated library&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Picasso&lt;/h3&gt; &#xA;&lt;p&gt;If you use Picasso, use it with the &lt;code&gt;OkHttpClient&lt;/code&gt; that&#39;s been instrumented with the Datadog SDK for RUM and APM information about network requests made by Picasso.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;        val picasso = Picasso.Builder(context)&#xA;                .downloader(OkHttp3Downloader(okHttpClient))&#xA;                // …&#xA;                .build()&#xA;        Picasso.setSingletonInstance(picasso)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Retrofit&lt;/h3&gt; &#xA;&lt;p&gt;If you use Retrofit, use it with the &lt;code&gt;OkHttpClient&lt;/code&gt; that&#39;s been instrumented with the Datadog SDK for RUM and APM information about network requests made with Retrofit.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;        val retrofitClient = Retrofit.Builder()&#xA;                .client(okHttpClient)&#xA;                // …&#xA;                .build()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Apollo (GraphQL)&lt;/h3&gt; &#xA;&lt;p&gt;If you use Apollo, use it with the &lt;code&gt;OkHttpClient&lt;/code&gt; that&#39;s been instrumented with the Datadog SDK for RUM and APM information about all the queries performed through Apollo client.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;        val apolloClient =  ApolloClient.builder()&#xA;                 .okHttpClient(okHttpClient)&#xA;                 .serverUrl(&amp;lt;APOLLO_SERVER_URL&amp;gt;)&#xA;                 .build()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kotlin Coroutines&lt;/h3&gt; &#xA;&lt;p&gt;If you use Kotlin Coroutines, see Datadog&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-rum-coroutines/README.md&#34;&gt;dedicated library with extensions for RUM&lt;/a&gt; and with &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/integrations/dd-sdk-android-trace-coroutines/README.md&#34;&gt;extensions for Trace&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Looking up your logs&lt;/h2&gt; &#xA;&lt;p&gt;When you open your console in Datadog, navigate to the &lt;a href=&#34;https://app.datadoghq.com/logs&#34;&gt;Log Explorer&lt;/a&gt;. In the search bar, type &lt;code&gt;source:android&lt;/code&gt;. This filters your logs to only show the ones coming from Android or Android TV applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/docs/images/screenshot_logs.png&#34; alt=&#34;Datadog Mobile Logs&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Looking up your spans&lt;/h2&gt; &#xA;&lt;p&gt;When you open your console in Datadog, navigate to &lt;a href=&#34;https://app.datadoghq.com/apm/services&#34;&gt;&lt;strong&gt;APM&lt;/strong&gt; &amp;gt; &lt;strong&gt;Services&lt;/strong&gt;&lt;/a&gt;. In the list of services, you can see all your Android and Android TV applications (by default, the service name matches your application&#39;s package name, for example: &lt;code&gt;com.example.android&lt;/code&gt;). You can access all the traces started from your application.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/docs/images/screenshot_apm.png&#34; alt=&#34;Datadog Mobile Logs&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Looking up your RUM events&lt;/h2&gt; &#xA;&lt;p&gt;When you open your console in Datadog, navigate to the &lt;a href=&#34;https://app.datadoghq.com/rum/explorer&#34;&gt;RUM Explorer&lt;/a&gt;. In the side bar, you can select your application and explore Sessions, Views, Actions, Errors, Resources, and Long Tasks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/docs/images/screenshot_rum.png&#34; alt=&#34;Datadog Mobile Logs&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Troubleshooting&lt;/h2&gt; &#xA;&lt;p&gt;If you encounter any issue when using the Datadog SDK for Android and Android TV, please take a look at the &lt;a href=&#34;https://docs.datadoghq.com/real_user_monitoring/mobile_and_tv_monitoring/troubleshooting/android/&#34;&gt;troubleshooting checklist&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/docs/advanced_troubleshooting.md&#34;&gt;common problems&lt;/a&gt;, or at the existing &lt;a href=&#34;https://github.com/DataDog/dd-sdk-android/issues?q=is%3Aissue&#34;&gt;issues&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;div class=&#34;alert alert-warning&#34;&gt;&#xA;  Datadog cannot guarantee the Android and Android TV SDK&#39;s performance on Roku devices running with Android OS. If you encounter any issues when using the SDK for these devices, contact &#xA; &lt;a href=&#34;https://docs.datadoghq.com/help/&#34;&gt;Datadog Support&lt;/a&gt; or open an issue in our GitHub project. &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests are welcome. First, open an issue to discuss what you would like to change. For more information, read the &lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DataDog/dd-sdk-android/develop/LICENSE&#34;&gt;Apache License, v2.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>