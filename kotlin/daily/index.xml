<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-21T01:40:37Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>shaokeyibb/HeLangKotlinScriptImpl</title>
    <updated>2022-08-21T01:40:37Z</updated>
    <id>tag:github.com,2022-08-21:/shaokeyibb/HeLangKotlinScriptImpl</id>
    <link href="https://github.com/shaokeyibb/HeLangKotlinScriptImpl" rel="alternate"></link>
    <summary type="html">&lt;p&gt;次世代赛博编程语言何语言现已兼容 JVM 平台！&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;HeLangKotlinScriptImpl：何语言 Kotlin 脚本版&lt;/h1&gt; &#xA;&lt;p&gt;Next-Generation Cyber Programming Language from Li Tang, &lt;strong&gt;with powerful JVM support&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;灵感：&lt;a href=&#34;https://github.com/kifuan/helang&#34;&gt;kifuan/helang: 何语言，次世代赛博编程语言。 (github.com)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;您所熟悉的何语言，现已强势来到 JVM 平台！我们做到了与 JVM 平台的完全兼容，同时完全自研，源代码自主可控！这简直是太酷了，完全符合我对未来生活的想象。&lt;/p&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;拉取源代码&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; git clone git@github.com:shaokeyibb/HeLangKotlinScriptImpl.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;编译&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; gradlew shadowJar&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;运行&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;&amp;gt; java -jar .\build\libs\HeLangKotlinScriptImpl-1.0-SNAPSHOT-all.jar hello.he.kts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;添加 &lt;code&gt;-debug&lt;/code&gt; 参数查看 Debug 信息，修改 &lt;code&gt;hello.he.kts&lt;/code&gt; 为其他路径来执行其他的 He Lang 脚本&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;语法&lt;/h2&gt; &#xA;&lt;p&gt;基本语法请参见 &lt;a href=&#34;https://github.com/kifuan/helang&#34;&gt;kifuan/helang: 何语言，次世代赛博编程语言。 (github.com)&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;但是！出于一些赛博之力的限制，何语言 Kotlin 脚本版和何语言原版有些许差异：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;首先，创建变量应当使用后置类型风格，就像友商 Kotlin 那样&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;我们使用 &lt;code&gt;createU8(size)&lt;/code&gt; 函数创建 u8，而不是 &lt;code&gt;[size]&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;所有 &lt;code&gt;|&lt;/code&gt; 应当带上反引号 `，即 `|`&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;最后，我们得到这样的代码：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val forceCon: u8 = createU8(68)&#xA;&#xA;forceCon[1 `|` 2 `|` 6 `|` 7 `|` 11 `|` 52 `|` 57 `|` 58 `|` 65] = 10&#xA;&#xA;print(forceCon)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;输出：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;[10, 10, 0, 0, 0, 10, 10, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;更不可能的是，HeLangKotlinScriptImpl &lt;strong&gt;完全兼容 JVM&lt;/strong&gt;（并不是基于 JVM，只是兼容，小心我告你），这意味着，你可以无缝切换到 HeLangKotlinScriptImpl 中，这太酷了对吗。&lt;/p&gt; &#xA;&lt;h2&gt;Hello, world!&lt;/h2&gt; &#xA;&lt;p&gt;赋能单片机开发，何语言 Kotlin 脚本版现已兼容 sprint！使用 &lt;code&gt;sprint&lt;/code&gt; 函数以提升你的代码性能（？）：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Hello, world!&#xA;sprint(72 `|` 101 `|` 108 `|` 108 `|` 111 `|` 44 `|` 32 `|` 119 `|` 111 `|` 114 `|` 108 `|` 100 `|` 33)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;自增运算&lt;/h2&gt; &#xA;&lt;p&gt;我们对 He Lang 标准做了一些微妙的更改，现在，自增运算返回一个新的 &lt;code&gt;u8&lt;/code&gt;，而原 &lt;code&gt;u8&lt;/code&gt; 不会产生变化：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;var a: u8 = 1 `|` 2 `|` 3&#xA;a = ++a&#xA;// 2 | 3 | 4&#xA;print(a);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;查看你是否在 Cyber Spaces&lt;/h2&gt; &#xA;&lt;p&gt;运行这个非常好函数来检测你是否处于 &lt;strong&gt;Cyber Spaces&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Getting your location...&#xA;// Your location is CHINA.&#xA;// What a pity! It seems that you are not in the Cyber Spaces.&#xA;cyberspaces()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;5G测速&lt;/h2&gt; &#xA;&lt;p&gt;何语言 Kotlin 脚本版现已内置 5G 测速功能，这简直酷毙了不是吗？&lt;/p&gt; &#xA;&lt;p&gt;一切的一切非常简单，只需要调用：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;test5g()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;即可从本行开始5G测速。&lt;/p&gt; &#xA;&lt;h2&gt;总结&lt;/h2&gt; &#xA;&lt;p&gt;Enjoy！&lt;/p&gt; &#xA;&lt;h2&gt;开源&lt;/h2&gt; &#xA;&lt;p&gt;HeLangKotlinScriptImpl is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/shaokeyibb/HeLangKotlinScriptImpl/master/LICENSE&#34;&gt;WTFPL&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lz233/Tarnhelm</title>
    <updated>2022-08-21T01:40:37Z</updated>
    <id>tag:github.com,2022-08-21:/lz233/Tarnhelm</id>
    <link href="https://github.com/lz233/Tarnhelm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The magic to clean sharing links up.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lz233/Tarnhelm/master/art/icon-color.png&#34; width=&#34;20%&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Tarnhelm&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=cn.ac.lz233.tarnhelm&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/lz233/Tarnhelm/master/art/google-play-badge.png&#34; width=&#34;25%&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;The magic to clean sharing links up.&lt;/p&gt; &#xA;&lt;p&gt;きれいなリンクを、あなたに。&lt;/p&gt; &#xA;&lt;p&gt;清理分享链接的魔法。&lt;/p&gt; &#xA;&lt;p&gt;更多信息，参见：&lt;a href=&#34;https://tarnhelm.project.ac.cn/&#34;&gt;tarnhelm.project.ac.cn&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>