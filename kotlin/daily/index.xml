<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-02T01:33:51Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>skydoves/FlexibleBottomSheet</title>
    <updated>2023-12-02T01:33:51Z</updated>
    <id>tag:github.com,2023-12-02:/skydoves/FlexibleBottomSheet</id>
    <link href="https://github.com/skydoves/FlexibleBottomSheet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üê¨ Advanced Jetpack Compose bottom sheet for segmented sizing and non-modal type, similar to Google Maps.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;FlexibleBottomSheet&lt;/h1&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=21&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves/FlexibleBottomSheet/actions/workflows/android.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/skydoves/FlexibleBottomSheet/actions/workflows/android.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves&#34;&gt;&lt;img alt=&#34;Profile&#34; src=&#34;https://skydoves.github.io/badges/skydoves.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; üê¨ FlexibleBottomSheet is an advanced Jetpack Compose bottom sheet that allows you to implement segmented sizing and non-modal type, similar to Google Maps. It also offers additional conveniences, including specifying sheet sizes, monitoring sheet states, and more customization. &lt;/p&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview0.png&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview1.png&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview2.png&#34; width=&#34;270&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/search?q=g:%22com.github.skydoves%22%20AND%20a:%22flexible-core%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.github.skydoves/flexible-core.svg?label=Maven%20Central&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gradle&lt;/h3&gt; &#xA;&lt;p&gt;Add the dependency below to your &lt;strong&gt;module&lt;/strong&gt;&#39;s &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    // compose material&#xA;    implementation(&#34;com.github.skydoves:flexible-bottomsheet-material:0.1.0&#34;)&#xA;&#xA;    // compose material3&#xA;    implementation(&#34;com.github.skydoves:flexible-bottomsheet-material3:0.1.0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can implement a flexible bottom sheet with &lt;code&gt;FlexibleBottomSheet&lt;/code&gt;, similar to the &lt;code&gt;ModalBottomSheet&lt;/code&gt; provided by &lt;a href=&#34;https://developer.android.com/jetpack/androidx/releases/compose-material3&#34;&gt;Compose Material 3&lt;/a&gt;. Essentially, you can achieve the same behavior as &lt;code&gt;ModalBottomSheet&lt;/code&gt; by not altering any properties.&lt;/p&gt; &#xA;&lt;h3&gt;FlexibleBottomSheet&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview3.gif&#34; width=&#34;280px&#34; align=&#34;right&#34;&gt; &#xA;&lt;p&gt;This is a basic example of the &lt;code&gt;FlexibleBottomSheet&lt;/code&gt;, which is modal, allowing customized sheet sizes for each expanded status, and offers three different expanded statuses (fully, intermediately, slightly):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;FlexibleBottomSheet(&#xA;  onDismissRequest = onDismissRequest,&#xA;  sheetState = rememberFlexibleBottomSheetState(&#xA;    flexibleSheetSize = FlexibleSheetSize(&#xA;      fullyExpanded = 0.9f,&#xA;      intermediatelyExpanded = 0.5f,&#xA;      slightlyExpanded = 0.15f,&#xA;    ),&#xA;    isModal = true,&#xA;    skipSlightlyExpanded = false,&#xA;  ),&#xA;  containerColor = Color.Black,&#xA;) {&#xA;  Text(&#xA;    modifier = Modifier&#xA;      .fillMaxWidth()&#xA;      .padding(8.dp),&#xA;    text = &#34;This is Flexible Bottom Sheet&#34;,&#xA;    textAlign = TextAlign.Center,&#xA;    color = Color.White,&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;FlexibleBottomSheetState&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;FlexibleBottomSheetState&lt;/code&gt; is a crucial concept that must be bound to &lt;code&gt;FlexibleBottomSheet&lt;/code&gt; to manage its state changes. It also enables you to customize UI/UX behaviors for the bottom sheet and take manual control over expanding/hiding the bottom sheet. You can remember the &lt;code&gt;FlexibleBottomSheetState&lt;/code&gt; by using &lt;code&gt;rememberFlexibleBottomSheetState&lt;/code&gt; as demonstrated in the example below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;FlexibleBottomSheet(&#xA;  onDismissRequest = onDismissRequest,&#xA;  sheetState = rememberFlexibleBottomSheetState(&#xA;    skipSlightlyExpanded = false,&#xA;    skipIntermediatelyExpanded = false,&#xA;    isModal = true,&#xA;    containSystemBars = false,&#xA;    allowNestedScroll = true,&#xA;    flexibleSheetSize = FlexibleSheetSize(&#xA;      fullyExpanded = 1.0f,&#xA;      intermediatelyExpanded = 0.5f,&#xA;      slightlyExpanded = 0.25f&#xA;    )&#xA;  ),&#xA;) {&#xA;  ..&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can expand or hide the bottom sheet manually by utilizing the &lt;code&gt;FlexibleBototmSheetState&lt;/code&gt; like the code below:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview4.gif&#34; width=&#34;300px&#34; align=&#34;right&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val scope = rememberCoroutineScope()&#xA;val sheetState = rememberFlexibleBottomSheetState(&#xA;  flexibleSheetSize = FlexibleSheetSize(fullyExpanded = 0.9f),&#xA;  isModal = true,&#xA;  skipSlightlyExpanded = false,&#xA;)&#xA;&#xA;FlexibleBottomSheet(&#xA;  sheetState = sheetState,&#xA;  containerColor = Color.Black,&#xA;  onDismissRequest = onDismissRequest&#xA;) {&#xA;  Button(&#xA;    modifier = Modifier.align(Alignment.CenterHorizontally),&#xA;    onClick = {&#xA;      scope.launch {&#xA;        when (sheetState.swipeableState.currentValue) {&#xA;          FlexibleSheetValue.SlightlyExpanded -&amp;gt; sheetState.intermediatelyExpand()&#xA;          FlexibleSheetValue.IntermediatelyExpanded -&amp;gt; sheetState.fullyExpand()&#xA;          else -&amp;gt; sheetState.hide()&#xA;        }&#xA;      }&#xA;    },&#xA;  ) {&#xA;    Text(text = &#34;Expand Or Hide&#34;)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;BottomSheet Expanded Status&lt;/h3&gt; &#xA;&lt;p&gt;The flexible bottom sheet offers four primary sheet statuses known as &lt;code&gt;FlexibleValues&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fully Expanded&lt;/strong&gt;: The sheet is visible at its fully-expanded height. This is mandatory and cannot be skipped.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intermediately Expanded&lt;/strong&gt;: The sheet is visible at an intermediate expanded height. This can be skipped by setting &lt;code&gt;skipIntermediatelyExpanded&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Slightly Expanded&lt;/strong&gt;: The sheet is visible at a slightly expanded height. This is skipped by default but can be enabled by setting &lt;code&gt;skipSlightlyExpanded&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Hidden&lt;/strong&gt;: The sheet is completely not visible on the screen.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You have the option to skip the &lt;strong&gt;Intermediately Expanded&lt;/strong&gt; and &lt;strong&gt;Slightly Expanded&lt;/strong&gt; states, as demonstrated below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;FlexibleBottomSheet(&#xA;  onDismissRequest = onDismissRequest,&#xA;  sheetState = rememberFlexibleBottomSheetState(&#xA;    skipSlightlyExpanded = false,&#xA;    skipIntermediatelyExpanded = false&#xA;  ),&#xA;) {&#xA;  ..&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Expanded Sizes&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;FlexibleBottomSheet&lt;/strong&gt; offers you to customize the expanded size the content size of bottom sheet based on its states. These constraints are calculated by multiplying the ratio with the maximum display height excluding the systembars (status and navigation bars). You can simply customize the expanded sheet size by setting &lt;code&gt;FlexibleSheetSize&lt;/code&gt; to the &lt;code&gt;rememberFlexibleBottomSheetState&lt;/code&gt; like the code below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;FlexibleBottomSheet(&#xA;  onDismissRequest = onDismissRequest,&#xA;  sheetState = rememberFlexibleBottomSheetState(&#xA;    flexibleSheetSize = FlexibleSheetSize(&#xA;      fullyExpanded = 0.85f,&#xA;      intermediatelyExpanded = 0.45f,&#xA;      slightlyExpanded = 0.15f,&#xA;    ),&#xA;  )&#xA;) {&#xA;  ..&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Fully (0.85)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Intermediately (0.45)&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Slightly (0.15)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview5.png&#34; align=&#34;center&#34; width=&#34;320px&#34; height=&#34;480px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview6.png&#34; align=&#34;center&#34; width=&#34;320px&#34; height=&#34;480px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview7.png&#34; align=&#34;center&#34; width=&#34;320px&#34; height=&#34;480px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Non-Modal BottomSheet&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview0.png&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview1.png&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview2.png&#34; width=&#34;270&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you need to interact outside of the bottom sheet while the sheet is displayed on the screen, similar to the Google Maps style, you can easily achieve this by setting the &lt;code&gt;isModal&lt;/code&gt; as &lt;strong&gt;false&lt;/strong&gt; property for the &lt;code&gt;FlexibleBottomSheet&lt;/code&gt; composable, as shown below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;FlexibleBottomSheet(&#xA;  onDismissRequest = onDismissRequest,&#xA;  sheetState = rememberFlexibleBottomSheetState(&#xA;    isModal = false,&#xA;    skipSlightlyExpanded = false,&#xA;  ),&#xA;) {&#xA;  ..&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will see the result below:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview10.gif&#34; width=&#34;320px&#34;&gt; &#xA;&lt;h3&gt;Dynamic Content By Monitoring Value Changes&lt;/h3&gt; &#xA;&lt;p&gt;You can dynamically compose your bottom sheet content by tracking the bottom sheet state changes. The sample code below demonstrates how you can easily observe the sheet state and adjust the text size accordingly:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview8.gif&#34; width=&#34;290px&#34; align=&#34;right&#34;&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;var currentSheetTarget by remember { &#xA;  mutableStateOf(FlexibleSheetValue.IntermediatelyExpanded) &#xA;}&#xA;&#xA;FlexibleBottomSheet(&#xA;  onDismissRequest = onDismissRequest,&#xA;  sheetState = rememberFlexibleBottomSheetState(&#xA;    skipSlightlyExpanded = false&#xA;  ),&#xA;  onTargetChanges = { sheetValue -&amp;gt;&#xA;    currentSheetTarget = sheetValue&#xA;  },&#xA;  containerColor = Color.Black,&#xA;) {&#xA;  Text(&#xA;    modifier = Modifier&#xA;      .fillMaxWidth()&#xA;      .padding(8.dp),&#xA;    text = &#34;This is Flexible Bottom Sheet&#34;,&#xA;    textAlign = TextAlign.Center,&#xA;    color = Color.White,&#xA;    fontSize = when (currentSheetTarget) {&#xA;      FlexibleSheetValue.FullyExpanded -&amp;gt; 28.sp&#xA;      FlexibleSheetValue.IntermediatelyExpanded -&amp;gt; 20.sp&#xA;      else -&amp;gt; 12.sp&#xA;    },&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can also implement dynamical content by utilizing with Compose animation library &lt;a href=&#34;https://github.com/skydoves/Orbital&#34;&gt;Orbital&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview9.gif&#34; width=&#34;320px&#34; align=&#34;cemter&#34;&gt; &#xA;&lt;h3&gt;Nested Scroll&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;FlexibleBottomSheet&lt;/code&gt; inherently supports nested scrolling, allowing seamless integration with components like &lt;code&gt;LazyColumn&lt;/code&gt;, &lt;code&gt;LazyRow&lt;/code&gt;, and others. However, if you wish to disable nested scrolling, you can achieve this by setting &lt;code&gt;allowNestedScroll&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; within the &lt;code&gt;rememberFlexibleBottomSheetState&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;FlexibleBottomSheet(&#xA;  onDismissRequest = onDismissRequest,&#xA;  sheetState = rememberFlexibleBottomSheetState(&#xA;    allowNestedScroll = false&#xA;  ),&#xA;) {&#xA;  ..&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You will see the difference below:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Enabled&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Disabled&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview11.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/FlexibleBottomSheet/main/previews/preview12.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Find this repository useful? &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/FlexibleBottomSheet/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;‚≠ê&lt;/span&gt; &lt;br&gt; Also, &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;follow me&lt;/a&gt;&lt;/strong&gt; on GitHub for my next creations! ü§©&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;Designed and developed by 2023 skydoves (Jaewoong Eum)&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>awslabs/aws-sdk-kotlin</title>
    <updated>2023-12-02T01:33:51Z</updated>
    <id>tag:github.com,2023-12-02:/awslabs/aws-sdk-kotlin</id>
    <link href="https://github.com/awslabs/aws-sdk-kotlin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multiplatform AWS SDK for Kotlin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AWS SDK for Kotlin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/aws-sdk-kotlin/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-APACHE2-blue.svg?sanitize=true&#34; alt=&#34;Apache 2 licensed&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=g:aws.sdk.kotlin&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/aws.sdk.kotlin/s3.svg?label=Maven&#34; alt=&#34;Maven&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repo contains the AWS SDK for Kotlin and its &lt;a href=&#34;https://github.com/awslabs/aws-sdk-kotlin/projects/2&#34;&gt;public roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/sdk-for-kotlin/&#34;&gt;SDK Homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/sdk-for-kotlin/latest/developer-guide/home.html&#34;&gt;Developer Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sdk.amazonaws.com/kotlin/api/latest/index.html&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/awsdocs/aws-doc-sdk-examples/tree/main/kotlin&#34;&gt;Samples&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/aws-sdk-kotlin/main/docs/GettingStarted.md&#34;&gt;Getting Started Guide&lt;/a&gt; to learn how to use the AWS SDK for Kotlin in your program.&lt;/p&gt; &#xA;&lt;h2&gt;Feedback&lt;/h2&gt; &#xA;&lt;p&gt;The SDK uses &lt;strong&gt;GitHub Issues&lt;/strong&gt; to track feature requests and issues with the SDK. In addition, we use &lt;strong&gt;GitHub Projects&lt;/strong&gt; to provide a high level overview of our roadmap and the features we are actively working on.&lt;/p&gt; &#xA;&lt;p&gt;You can provide feedback or report a bug by submitting an &lt;a href=&#34;https://github.com/awslabs/aws-sdk-kotlin/issues/new/choose&#34;&gt;issue&lt;/a&gt;. This is the preferred mechanism to give feedback so that other users can engage in the conversation, +1 issues, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you are interested in contributing to the AWS SDK for Kotlin, please take a look at &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/aws-sdk-kotlin/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Versioning&lt;/h2&gt; &#xA;&lt;p&gt;See our &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/aws-sdk-kotlin/main/VERSIONING.md&#34;&gt;VERSIONING&lt;/a&gt; policy for how the SDK is versioned.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;h3&gt;Generate SDK(s)&lt;/h3&gt; &#xA;&lt;p&gt;Generated sources are not checked into the repository, you first have to generate the clients before you can build them. A &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/aws-sdk-kotlin/main/docs/generate-sdk.md&#34;&gt;step-by-step guide&lt;/a&gt; is available that demonstrates building the AWS DynamoDB service, or if you have a good working knowledge of Gradle, see below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew --no-daemon :codegen:sdk:bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: This task will respect the AWS services specified by project properties. See options below. NOTE: To re-run codegen for the same set of services multiple times add the &lt;code&gt;--rerun-tasks&lt;/code&gt; flag.&lt;/p&gt; &#xA;&lt;p&gt;After generating the services you care about they are available to build:&lt;/p&gt; &#xA;&lt;p&gt;e.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew :services:lambda:build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Where the task follows the pattern: &lt;code&gt;:services:SERVICE:build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;To see list of all projects run &lt;code&gt;./gradlew projects&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h5&gt;Generating a single service&lt;/h5&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/aws-sdk-kotlin/main/#build-properties&#34;&gt;Build Properties&lt;/a&gt; below to specify this in a config file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew --no-daemon -Paws.services=+lambda  :codegen:sdk:bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Testing Locally&lt;/h5&gt; &#xA;&lt;p&gt;Testing generated services generally requires publishing artifacts (e.g. client-runtime) of &lt;code&gt;smithy-kotlin&lt;/code&gt;, &lt;code&gt;aws-crt-kotlin&lt;/code&gt;, and &lt;code&gt;aws-sdk-kotin&lt;/code&gt; to maven local.&lt;/p&gt; &#xA;&lt;h4&gt;Generating API Documentation&lt;/h4&gt; &#xA;&lt;p&gt;API documentation is generated using &lt;a href=&#34;http://kotlin.github.io/dokka&#34;&gt;Dokka&lt;/a&gt; which is the official documentation tool maintained by JetBrains for documenting Kotlin code.&lt;/p&gt; &#xA;&lt;p&gt;Unlike Java, Kotlin uses its own &lt;a href=&#34;https://kotlinlang.org/docs/kotlin-doc.html&#34;&gt;KDoc&lt;/a&gt; format.&lt;/p&gt; &#xA;&lt;p&gt;To generate API reference documentation for the AWS Kotlin SDK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew --no-daemon --no-parallel dokkaHtmlMultiModule&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will output HTML formatted documentation to &lt;code&gt;build/dokka/htmlMultiModule&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;NOTE: You currently need an HTTP server to view the documentation in browser locally. You can either use the builtin server in Intellij or use your favorite local server (e.g. &lt;code&gt;python3 -m http.server&lt;/code&gt;). See &lt;a href=&#34;https://github.com/Kotlin/dokka/issues/1795&#34;&gt;Kotlin/dokka#1795&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Build Properties&lt;/h3&gt; &#xA;&lt;p&gt;You can define a &lt;code&gt;local.properties&lt;/code&gt; config file at the root of the project to modify build behavior.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;compositeProjects&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify paths to repos the SDK depends upon such as &lt;code&gt;smithy-kotlin&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;aws.services&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify inclusions (+ prefix) and exclusions (- prefix) of service names to generate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;aws.protocols&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Specify inclusions (+ prefix) and exclusions (- prefix) of AWS protocols to generate&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;Composite Projects&lt;/h4&gt; &#xA;&lt;p&gt;Dependencies of the SDK can be added as composite build such that multiple repos may appear as one holistic source project in the IDE.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# comma separated list of paths to `includeBuild()`&#xA;# This is useful for local development of smithy-kotlin in particular &#xA;compositeProjects=../smithy-kotlin&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Generating Specific Services Based on Name or Protocol&lt;/h4&gt; &#xA;&lt;p&gt;A comma separated list of services to include or exclude for generation from codegen/sdk/aws-models may be specified with the &lt;code&gt;aws.services&lt;/code&gt; property. A list of protocols of services to generate may be specified with the &lt;code&gt;aws.protocols&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;p&gt;Included services require a &#39;+&#39; character prefix and excluded services require a &#39;-&#39; character. If any items are specified for inclusion, only specified included members will be generated. If no items are specified for inclusion, all members not excluded will be generated. When unspecified all services found in the directory specified by the &lt;code&gt;modelsDir&lt;/code&gt; property are generated. Service names match the filenames in the models directory &lt;code&gt;service.VERSION.json&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Some example entries for &lt;code&gt;local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# Generate only AWS Lambda:&#xA;aws.services=+lambda&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# Generate all services but AWS location and AWS DynamoDB:&#xA;aws.services=-location,-dynamodb&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;# Generate all services except those using the restJson1 protocol:&#xA;aws.protocols=-restJson1&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Debugging&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/awslabs/aws-sdk-kotlin/main/docs/debugging.md&#34;&gt;Debugging&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://github.com/awslabs/aws-sdk-kotlin/security/policy&#34;&gt;security policy&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Supported targets&lt;/h2&gt; &#xA;&lt;p&gt;The SDK supports the following targets:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/awslabs/aws-sdk-kotlin/main/docs/targets.md#jvm&#34;&gt;JVM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/awslabs/aws-sdk-kotlin/main/docs/targets.md#android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>