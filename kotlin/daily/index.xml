<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-17T01:40:26Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google-developer-training/basic-android-kotlin-compose-training-practice-problems</title>
    <updated>2023-02-17T01:40:26Z</updated>
    <id>tag:github.com,2023-02-17:/google-developer-training/basic-android-kotlin-compose-training-practice-problems</id>
    <link href="https://github.com/google-developer-training/basic-android-kotlin-compose-training-practice-problems" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Practice Problems - Solution Code&lt;/h1&gt; &#xA;&lt;p&gt;Practice problems test learner&#39;s understanding of the concepts that they studied. The problems are themed around real-world use cases.&lt;/p&gt; &#xA;&lt;p&gt;This repo contains solution to the practice problems. Following is the list of practice problems:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-developer-training/basic-android-kotlin-compose-training-practice-problems/tree/main/Unit%201/Pathway%203/ComposeArticle&#34;&gt;Compose Article&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For Learn Together app, build a screen which displays article about Jetpack Compose Tutorial&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-developer-training/basic-android-kotlin-compose-training-practice-problems/tree/main/Unit%201/Pathway%203/TaskCompleted&#34;&gt;Task Completed&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For Task Manager app, build a screen which displays All tasks completed screen.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-developer-training/basic-android-kotlin-compose-training-practice-problems/tree/main/Unit%201/Pathway%203/ComposeQuadrant&#34;&gt;Compose Quadrant&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Build an app that displays the information about the Composable functions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Consider the solutions as one way to solve the problems and feel free to experiment however you feel comfortable.&lt;/p&gt; &#xA;&lt;h2&gt;Pre-requisites&lt;/h2&gt; &#xA;&lt;p&gt;You need to know:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;How to load the project from Github into Android Studio and run the app in Android Studio.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Recommendation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Try to solve the problems before you check the solution.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>SEAbdulbasit/TravelApp-KMP</title>
    <updated>2023-02-17T01:40:26Z</updated>
    <id>tag:github.com,2023-02-17:/SEAbdulbasit/TravelApp-KMP</id>
    <link href="https://github.com/SEAbdulbasit/TravelApp-KMP" rel="alternate"></link>
    <summary type="html">&lt;p&gt;JetBrains Compose Multiplatform UI App (Android, iOS). MVVM - Kotlin MultiPlatform (KMP)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TravepApp-KMP&lt;/h1&gt; &#xA;&lt;p&gt;This is an exploration app for Compose Multiplatform UI. Currently this app have Android and iOS part. Will be adding Desktop and Web Apps. For more details on Compose Multiplatform UI visit: &lt;a href=&#34;https://github.com/JetBrains/compose-jb/&#34;&gt;https://github.com/JetBrains/compose-jb/&lt;/a&gt; The support for iOS on Compose Multiplatform is still in experimental phase.&lt;/p&gt; &#xA;&lt;p&gt;This is just a demonstration, the code is still not in perfect form.&lt;/p&gt; &#xA;&lt;p&gt;For rest api, I am using &lt;a href=&#34;https://mockoon.com/&#34;&gt;Makoon&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Running the App:&lt;/h2&gt; &#xA;&lt;p&gt;For running the app, you need an api to feed data. For Rest api, I am using &lt;a href=&#34;https://mockoon.com/&#34;&gt;Makoon&lt;/a&gt;. You can create a local enviroment and add countrieslist api. Here you can find the sample response here: &lt;a href=&#34;https://github.com/SEAbdulbasit/TravelApp-KMP/raw/master/TravelApp-KMM.json&#34;&gt;https://github.com/SEAbdulbasit/TravelApp-KMP/blob/master/TravelApp-KMM.json&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;on iOS&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/33172684/218648261-1ee20808-5944-4cfb-bb44-e03600680bbe.png&#34; alt=&#34;Simulator Screen Shot - iPhone 14 - 2023-02-14 at 10 33 24&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/33172684/218648312-54ac11ba-cc1b-4099-931f-1072d26854a4.png&#34; alt=&#34;Simulator Screen Shot - iPhone 14 - 2023-02-14 at 10 33 49&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/33172684/218648353-041a7b0d-7532-47c9-8faa-f1cb993b970b.png&#34; alt=&#34;Simulator Screen Shot - iPhone 14 - 2023-02-14 at 10 34 11&#34;&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;on Android&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/33172684/218650285-2872c54e-e6cf-4888-8199-ab60f109e27a.mp4&#34;&gt;https://user-images.githubusercontent.com/33172684/218650285-2872c54e-e6cf-4888-8199-ab60f109e27a.mp4&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>droidconKE/droidconKE2023Android</title>
    <updated>2023-02-17T01:40:26Z</updated>
    <id>tag:github.com,2023-02-17:/droidconKE/droidconKE2023Android</id>
    <link href="https://github.com/droidconKE/droidconKE2023Android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;droidcon KE 22 ðŸ”¥ðŸ”¨&lt;/h1&gt; &#xA;&lt;p&gt;Android app for the 3rd Android Developer conference- droidcon to be held in Nairobi from November 16-18th 2022.&lt;/p&gt; &#xA;&lt;p&gt;This project is the Android app for the conference. The app supports devices running Android 5.0+, and is optimized for phones and tablets of all shapes and sizes.&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Jetpack Compose&lt;/li&gt; &#xA; &lt;li&gt;Coroutines - For Concurrency and Asynchronous tasks&lt;/li&gt; &#xA; &lt;li&gt;Ktor - For network requests&lt;/li&gt; &#xA; &lt;li&gt;Hilt - For Dependency Injection&lt;/li&gt; &#xA; &lt;li&gt;Crashlytics&lt;/li&gt; &#xA; &lt;li&gt;Coil - For Image Loading and Caching&lt;/li&gt; &#xA; &lt;li&gt;Lint Checks - &lt;a href=&#34;https://ktlint.github.io/&#34;&gt;Ktlint&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The proposed architecture is as follows;&lt;/p&gt; &#xA;&lt;h3&gt;Data&lt;/h3&gt; &#xA;&lt;p&gt;This layer will include;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Network Calls&lt;/li&gt; &#xA; &lt;li&gt;Caching&lt;/li&gt; &#xA; &lt;li&gt;Storing and fetching Preferences.&lt;/li&gt; &#xA; &lt;li&gt;The repository implementation&lt;/li&gt; &#xA; &lt;li&gt;The relevant data models&lt;/li&gt; &#xA; &lt;li&gt;Relevant Mappers&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Domain&lt;/h3&gt; &#xA;&lt;p&gt;This layer will contain;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;The repository&lt;/li&gt; &#xA; &lt;li&gt;The relevant domain models.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Presentation&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;View&lt;/li&gt; &#xA; &lt;li&gt;ViewModels&lt;/li&gt; &#xA; &lt;li&gt;Relevant Mappers&lt;/li&gt; &#xA; &lt;li&gt;Relevant Models.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;App will have the following features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sessions&lt;/li&gt; &#xA; &lt;li&gt;Feed&lt;/li&gt; &#xA; &lt;li&gt;About&lt;/li&gt; &#xA; &lt;li&gt;Home&lt;/li&gt; &#xA; &lt;li&gt;Speakers&lt;/li&gt; &#xA; &lt;li&gt;Sponsors&lt;/li&gt; &#xA; &lt;li&gt;Authentication&lt;/li&gt; &#xA; &lt;li&gt;Feedback&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Designs&lt;/h2&gt; &#xA;&lt;p&gt;This is the link to the app designs:&lt;br&gt; [Light Theme] (&lt;a href=&#34;https://xd.adobe.com/view/dd5d0245-b92b-4678-9d4a-48b3a6f48191-880e/&#34;&gt;https://xd.adobe.com/view/dd5d0245-b92b-4678-9d4a-48b3a6f48191-880e/&lt;/a&gt;)&lt;br&gt; [Dark Theme] (&lt;a href=&#34;https://xd.adobe.com/view/5ec235b6-c3c6-49a9-b783-1f1303deb1a8-0b91/&#34;&gt;https://xd.adobe.com/view/5ec235b6-c3c6-49a9-b783-1f1303deb1a8-0b91/&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;The app uses a design system: Chai&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;The project uses &lt;a href=&#34;https://docs.gradle.org/current/userguide/platforms.html#sub:version-catalog&#34;&gt;Versions Catalog&lt;/a&gt; to set up and share dependencies across the modules. The main reasons for choosing to adopt Versions Catalog are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Central place to define dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Easy syntax.&lt;/li&gt; &#xA; &lt;li&gt;Does not compromise on build speeds as changes do not need the module to be compiled.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To add a dependency, navigate to &lt;strong&gt;gradle/libs.versions.toml&lt;/strong&gt;* file, which has all the dependencies for the whole project. This file has the following sections:&lt;/p&gt; &#xA;&lt;p&gt;[versions] is used to declare the version numbers that will be referenced later by plugins and libraries. [libraries] Define the libraries that will be later accessed in our Gradle files. [bundles] Are used to define a set of dependencies. For this, we have &lt;code&gt;compose&lt;/code&gt;, &lt;code&gt;room&lt;/code&gt;, &lt;code&gt;lifecycle&lt;/code&gt; and &lt;code&gt;ktor&lt;/code&gt; as examples. [plugins] Used to define plugins.&lt;/p&gt; &#xA;&lt;p&gt;You need to add your dependency version in [versions]. This is unnecessary if you are not sharing the version across different dependencies. After defining the version, add your library in the [libraries] section as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;compose-activity = &#34;androidx.activity:activity-compose:1.5.0&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Moreover, if you have already defined the version in [versions], you define it as:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;androidx-splashscreen = { module = &#34;androidx.core:core-splashscreen&#34;, version.ref = &#34;splash&#34; }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;You can use separators such as -, _v, . that will be normalized by Gradle to . in the Catalog and allow you to create subsections.&lt;/li&gt; &#xA; &lt;li&gt;Define variables using &lt;strong&gt;CamelCase&lt;/strong&gt;.\&lt;/li&gt; &#xA; &lt;li&gt;Check if the library can be added to any existing bundles.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Material 3 Bottom Sheets&lt;/h2&gt; &#xA;&lt;p&gt;At the time of working on this app, Material 3 didn&#39;t have BottomSheet classes. Solution was to copy them from AOSP. They can be found in the &lt;code&gt;com/android254/presentation/common/bottomsheet&lt;/code&gt; packages and have been used to do the Share feed and Fitter Bottom Sheets. You can find more information &lt;a href=&#34;https://stackoverflow.com/questions/72518262/how-to-implement-bottomsheet-in-material-3-jetpack-compose-android&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are always welcome!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/droidconKE/droidconKE2023Android/main/CONTRIBUTING.md&#34;&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for ways to get started.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;We would endlessly like to thank the following contributors&lt;/p&gt; &#xA;&lt;!-- readme: contributors -start --&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/jumaallan&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/25085146?v=4&#34; width=&#34;100;&#34; alt=&#34;jumaallan&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Juma Allan&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/chepsi&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/61404564?v=4&#34; width=&#34;100;&#34; alt=&#34;chepsi&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Evans Chepsiror&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/wangerekaharun&#34;&gt; &lt;img src=&#34;https://avatars.githubusercontent.com/u/15122455?v=4&#34; width=&#34;100;&#34; alt=&#34;wangerekaharun&#34;&gt; &lt;br&gt; &lt;sub&gt;&lt;b&gt;Harun Wangereka&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt;&#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;!-- readme: contributors -end --&gt;</summary>
  </entry>
</feed>