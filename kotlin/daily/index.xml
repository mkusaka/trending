<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-12T01:33:42Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>odtheking/Odin</title>
    <updated>2024-05-12T01:33:42Z</updated>
    <id>tag:github.com,2024-05-12:/odtheking/Odin</id>
    <link href="https://github.com/odtheking/Odin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Odin is a Forge mod for Hypixel Skyblock, offering features designed to enhance your gameplay.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Odin &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/2nCbC9hkxT&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/1041616706327552000?label=discord&amp;amp;color=9089DA&amp;amp;logo=discord&amp;amp;style=for-the-badge&#34; alt=&#34;discord badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Made%20With-Kotlin-orange?style=for-the-badge&amp;amp;logo=kotlin&amp;amp;logocolor=white&#34; alt=&#34;made with kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/odtheking/Odin&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/odtheking/Odin/total?style=for-the-badge&#34; alt=&#34;downloads&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;Odin is a forge mod for Hypixel Skyblock on the minecraft version 1.8.9. The mod specializes in Kuudra &amp;amp; Dungeons and offers a bunch of additional features for all parts of Hypixel Skyblock. The mod is also designed to be as lightweight as possible to ensure that it does not impact the game&#39;s performance.&lt;/p&gt; &#xA;&lt;p&gt;The mod contains two versions which are two separate builds. Utilizing Gradle MultiProject functionality enables us to develop two separate versions of the mod within the same repository while keeping the unique additions to each version separate. If you have any questions regarding the mod, please feel free to ask in the Discord server.&lt;/p&gt; &#xA;&lt;p&gt;To open the main menu use &lt;code&gt;/od&lt;/code&gt;, &lt;code&gt;/odin&lt;/code&gt; or &lt;code&gt;/odinclient&lt;/code&gt; in chat. For extensive command help use &lt;code&gt;/od help&lt;/code&gt; in chat.&lt;/p&gt; &#xA;&lt;p&gt;We have an installation guide which you can access clicking &lt;a href=&#34;https://odtheking.github.io/Odin/installation_guide&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Suggestions and bug reports are welcome, please use the &lt;a href=&#34;https://discord.gg/2nCbC9hkxT&#34;&gt;Discord&lt;/a&gt; for that.&lt;/p&gt; &#xA;&lt;p&gt;For an organized feature list check the website &lt;a href=&#34;https://odtheking.github.io/Odin/feature_list_legit&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>CofbroTeam/Doraemon</title>
    <updated>2024-05-12T01:33:42Z</updated>
    <id>tag:github.com,2024-05-12:/CofbroTeam/Doraemon</id>
    <link href="https://github.com/CofbroTeam/Doraemon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⭐ ⭐ ⭐不止签到！更有一键同步作业功能！⭐ ⭐ ⭐ UI友好的安卓-Android移动端学习通签到助手，支持普通签到，扫码签到，图片签到，二维码签到，定位签到，签到码签到，手势签到，作业提醒：push通知，短信通知！！&lt;/p&gt;&lt;hr&gt;&lt;center&gt;&#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;p&gt;&lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/aa7e4302-59c6-4184-8390-d1022f9b2b2a&#34; width=&#34;300&#34; height=&#34;300&#34;&gt;&lt;/p&gt; &#xA;  &lt;p&gt;&lt;img alt=&#34;version&#34; src=&#34;https://img.shields.io/github/last-commit/CofbroTeam/Doraemon.svg?style=for-the-badge&amp;amp;label=%E6%9C%80%E5%90%8E%E6%9B%B4%E6%96%B0&amp;amp;logo=velog&amp;amp;logoColor=BE95FF&amp;amp;color=7B68EE&#34;&gt; &lt;img alt=&#34;stars&#34; src=&#34;https://img.shields.io/github/stars/CofbroTeam/Doraemon.svg?style=for-the-badge&amp;amp;label=Stars&amp;amp;logo=undertale&amp;amp;logoColor=orange&amp;amp;color=orange&#34;&gt; &lt;img alt=&#34;forks&#34; src=&#34;https://img.shields.io/github/forks/CofbroTeam/Doraemon.svg?style=for-the-badge&amp;amp;label=Forks&amp;amp;logo=stackshare&amp;amp;logoColor=f92f60&amp;amp;color=f92f60&#34;&gt; &lt;img alt=&#34;pr&#34; src=&#34;https://img.shields.io/github/issues-pr-closed/CofbroTeam/Doraemon.svg?style=for-the-badge&amp;amp;label=PR&amp;amp;logo=addthis&amp;amp;logoColor=green&amp;amp;color=0AC18E&#34;&gt; &lt;img alt=&#34;issues&#34; src=&#34;https://img.shields.io/github/issues/CofbroTeam/Doraemon.svg?style=for-the-badge&amp;amp;label=Issues&amp;amp;logo=openbugbounty&amp;amp;logoColor=e38dff&amp;amp;color=e38dff&#34;&gt;&lt;/p&gt; &#xA; &lt;/div&gt;&#xA;&lt;/center&gt; &#xA;&lt;hr&gt; &#xA;&lt;div align=&#34;center&#34; style=&#34;font-weight:bold&#34;&gt;&#xA; &lt;b&gt;学习通智能签到助手︱还你一个不被签到问题打扰、认真学习的梦&lt;/b&gt;&#xA;&lt;/div&gt; &#xA;&lt;h2&gt;🗒️ 各级页面&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;登录页&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;课程列表页&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;签到列表页&lt;/strong&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;strong&gt;定位签到页&lt;/strong&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/31bf4fd1-e112-4082-8bf6-1d8fe89dde0c&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/fccb8e7b-16aa-415f-8f8a-4cbf3151bec3&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/27c5d615-a85e-4bf7-b1bf-a3b1b0b849e8&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/e3835137-50d0-47bd-bcc0-2f4b18750218&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;作业列表页&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;作业上传页&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;账号绑定页&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;个人页&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/fd5c12de-ebfa-49ea-ad36-acccaf9f07c8&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/81e06049-799c-41b5-841c-f2ed27746643&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/185a9037-2159-46fa-9481-1cba4497397d&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/5209454c-47e7-46a0-8b65-37ff7cde7e1f&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;签到日志页&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;建议页&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;好友聊天页&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;线上代签&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/43a94c9a-9776-4ef5-8783-1615f045d216&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/60eb6700-be6d-494e-8594-491a62d905c3&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/0fc55057-3292-49fa-847f-b3043491be8e&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/9e8cecdb-26f8-4efc-ad93-c2baac1988d3&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;检查更新页&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;抢答页&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;智能哆啦&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;strong&gt;敬请期待&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/05818664-5dc1-43ba-959d-7c59e19d6e15&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/ab64d827-cdee-4e10-aeba-d3eabad9d0c8&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&#xA;    &lt;div align=&#34;center&#34;&gt; &#xA;     &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/0216f8de-db95-4b9e-9860-5b58cd9d2c29&#34;&gt; &#xA;    &lt;/div&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;✨ 特点&lt;/h2&gt; &#xA;&lt;p&gt;👏 &lt;strong&gt;Doraemon&lt;/strong&gt; 拥有清晰明了的 UI 界面以及易于操作的特点。除此之外，还具备：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 普通签到&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 签到码签到&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 手势签到&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 定位签到：修改任意经纬度&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 图片签到：相册上传任意图片或者使用他人已上传的图片进行签到&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 扫码签到：只能老老实实扫码，目前暂时无法越过服务端拿到 &lt;code&gt;enc&lt;/code&gt;，不过后面支持一人扫码，多人签到的功能&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 二维码定位签到！&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 绑定好友，一键全签。一个宿舍以后上课只去一人！&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 群聊签到&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 极速抢答&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 好友系统！&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 作业通知：push通知，短信通知！&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 应用挂后台，自动侦测签到！&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; 作业一键同步给所有好友：同步作业给好友成功，经好友同意，好友自动完成作业提交！&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; ……&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;功能持续更新中，欢迎感兴趣的同学一起参与进来。&lt;/p&gt; &#xA;&lt;h2&gt;🖱️ 使用&lt;/h2&gt; &#xA;&lt;p&gt;目前项目还处于开发阶段，如果您想尝鲜已开发的功能或者迫切需要使用签到功能，请在 &lt;code&gt;issue&lt;/code&gt; 中告诉我们。&lt;/p&gt; &#xA;&lt;h3&gt;1. 链接&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CofbroTeam/Doraemon/releases&#34;&gt;尝鲜版请前往 releases&lt;/a&gt;。由于项目处于开发阶段，并且我们没有测试同学，因此如果大家在使用过程中遇到 &lt;code&gt;bug&lt;/code&gt;，或者对本项目有更好的 &lt;code&gt;需求和建议&lt;/code&gt;，烦请在 &lt;code&gt;issue&lt;/code&gt; 中提出，一起让 Doraemon 更加完善。&lt;/p&gt; &#xA;&lt;h3&gt;2. QR-Code&lt;/h3&gt; &#xA;&lt;p&gt;请使用浏览器或手机自带的二维码扫描器扫描。&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img src=&#34;https://github.com/CofbroTeam/Doraemon/assets/101956946/60125d13-97d2-4515-a3e4-6460ac97c9d0&#34; width=&#34;200&#34; height=&#34;200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⚡ 特别说明&lt;/h2&gt; &#xA;&lt;p&gt;开发阶段，正常情况下&lt;strong&gt;14天集成一次&lt;/strong&gt;，如果想随时使用最新代码，请自行在 &lt;code&gt;Actions&lt;/code&gt; 中获取 &lt;code&gt;apk&lt;/code&gt;。&lt;br&gt;如果您有任何问题，欢迎在 &lt;code&gt;issues&lt;/code&gt; 中提出，或加入 QQ 群详细交流。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.yuque.com/cofbro/doraemon&#34;&gt;Doraemon文档，强烈建议观看&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;❤️ 如何贡献你的代码 &amp;amp; 提出宝贵的建议&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;贡献代码：&lt;code&gt;Fork&lt;/code&gt; -&amp;gt; &lt;code&gt;Pull Request&lt;/code&gt;，或者直接联系我，将您添加为项目成员。&lt;/li&gt; &#xA; &lt;li&gt;建议：首先提出 &lt;code&gt;issue&lt;/code&gt;，描述您的问题，如果有 &lt;code&gt;UI&lt;/code&gt; 或者 &lt;code&gt;功能&lt;/code&gt; 方面的建议请配上简单明了的图文。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;✒️ 开发规范&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用 kt 或者 java，命名统一使用驼峰命名法&lt;/li&gt; &#xA; &lt;li&gt;所有 kt/java 文件需要以 &lt;code&gt;xxxActivity/xxxFragment&lt;/code&gt; 命名，&lt;code&gt;xxx&lt;/code&gt; 需要包含业务名称，比如登录页：&lt;code&gt;LoginActivity&lt;/code&gt;。其中的 &lt;code&gt;xml&lt;/code&gt; 文件里的 &lt;code&gt;id&lt;/code&gt; 需要符合 &lt;code&gt;控件缩写_业务名称&lt;/code&gt; 要求，比如 &lt;code&gt;TextView&lt;/code&gt; 的 &lt;code&gt;id&lt;/code&gt; : &lt;code&gt;tv_login&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;保持代码可阅读性的前提下，尽量使代码行缩进减小&lt;/li&gt; &#xA; &lt;li&gt;开发时，自己拉一条分支出来，一般命名为 &lt;code&gt;features/业务名_你的昵称&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;提交代码，先提交到自己的分支，然后再提 &lt;code&gt;PR/Pull Request&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;❗ 免责声明&lt;/h2&gt; &#xA;&lt;p&gt;本项目仅作为交流学习使用，通过本项目加深网络通信、接口编写、交互设计等方面知识的理解，请勿用作商业用途，任何人或组织使用项目中代码进行的任何违法行为与本人无关。如有触及相关平台规定或者权益，烦请联系我们删除。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ivision-research/burpscript</title>
    <updated>2024-05-12T01:33:42Z</updated>
    <id>tag:github.com,2024-05-12:/ivision-research/burpscript</id>
    <link href="https://github.com/ivision-research/burpscript" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Burpscript&lt;/h1&gt; &#xA;&lt;p&gt;Burpscript adds dynamic scripting abilities to Burp Suite, allowing you to write scripts in Python or Javascript to manipulate HTTP requests and responses.&lt;/p&gt; &#xA;&lt;p&gt;Features:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Python 3 and JavaScript support&lt;/li&gt; &#xA; &lt;li&gt;Manipulate requests and responses from the Proxy or other tools such as the Repeater&lt;/li&gt; &#xA; &lt;li&gt;Conditionally drop requests &amp;amp; responses, or send them to the Intercept tab for manual inspection&lt;/li&gt; &#xA; &lt;li&gt;Hot reloading of scripts on file change&lt;/li&gt; &#xA; &lt;li&gt;Quickly enable/disable scripts&lt;/li&gt; &#xA; &lt;li&gt;Built-in cryptographic utilities&lt;/li&gt; &#xA; &lt;li&gt;Filter DSL for easily determining if the plugin&#39;s registered handlers should handle a request or response&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Beta Notice&lt;/h2&gt; &#xA;&lt;p&gt;Please note that, while we use this tool internally, it is still &lt;em&gt;beta software&lt;/em&gt; and there may be bugs. Please file issues if/when you encounter a bug!&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;The best way to build this project is to enter the &lt;code&gt;nix&lt;/code&gt; development environment and then use the build script.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ nix develop&#xA;# Build with Python support&#xA;$ ./build.sh&#xA;# Build with both Python and JavaScript Support&#xA;$ ./build.sh --js --python&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The resulting jar file will be in &lt;code&gt;build/libs/burpscript-plugin-&amp;lt;version&amp;gt;.jar&lt;/code&gt;, which you can then install into Burp Suite through the Extensions -&amp;gt; Add window. For more information, see &lt;a href=&#34;https://portswigger.net/burp/documentation/desktop/extensions/managing-extensions&#34;&gt;Managing extensions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To use this plugin, you&#39;ll need to launch burp with the &lt;code&gt;-Dpolyglotimpl.DisableClassPathIsolation=true&lt;/code&gt; JVM arg (see below for an example). Sadly this also disables optimizations (&lt;a href=&#34;https://github.com/oracle/graaljs/issues/764&#34;&gt;https://github.com/oracle/graaljs/issues/764&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;Linux&lt;/h3&gt; &#xA;&lt;p&gt;For a typical Burp installation at &lt;code&gt;/path/to/burp/&lt;/code&gt;, add &lt;code&gt;-Dpolyglotimpl.DisableClassPathIsolation=true&lt;/code&gt; on its own line to the &lt;code&gt;/path/to/burp/BurpSuitePro.vmoptions&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h3&gt;MacOS&lt;/h3&gt; &#xA;&lt;p&gt;Add &lt;code&gt;-Dpolyglotimpl.DisableClassPathIsolation=true&lt;/code&gt; on its own line to &lt;code&gt;/Applications/Burp Suite Professional.app/Contents/vmoptions.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Burpscript supports writing scripts in JavaScript or Python. When a script is added, Burpscript will call specially named handler functions defined in the script when a request or response is received, allowing scripts an opportunity to manipulate them as they pass through the proxy. Scripts can also define filter expressions using a &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/FILTER_EXPRESSIONS.md&#34;&gt;Lisp-like DSL&lt;/a&gt; to determine which requests and responses they should be applied to.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/examples&#34;&gt;examples&lt;/a&gt; directory&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/src/main/kotlin/com/carvesystems/burpscript/ScriptHttpRequest.kt&#34;&gt;ScriptHttpRequest&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/src/main/kotlin/com/carvesystems/burpscript/ScriptHttpResponse.kt&#34;&gt;ScriptHttpResponse&lt;/a&gt; classes. These define the API that scripts can use to modify requests and responses.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/MontoyaApi.html&#34;&gt;Burp Montoya API Javadoc&lt;/a&gt;. In particular, &lt;a href=&#34;https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/http/handler/HttpRequestToBeSent.html&#34;&gt;HttpRequestToBeSent&lt;/a&gt; and &lt;a href=&#34;https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/http/handler/HttpResponseReceived.html&#34;&gt;HttpResponseReceived&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Python&lt;/h3&gt; &#xA;&lt;p&gt;Python scripts look like this. Examples can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/examples/python&#34;&gt;examples&lt;/a&gt; directory, and for more information about how Python behaves when interacting with Java, see the &lt;a href=&#34;https://www.graalvm.org/latest/reference-manual/python/Interoperability/&#34;&gt;GraalVM interop reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;REQ_FILTER = &#34;&#34;&#34;...&#34;&#34;&#34;&#xA;RES_FILTER = &#34;&#34;&#34;...&#34;&#34;&#34;&#xA;&#xA;def initialize():&#xA;    print(&#34;Initialized Python script&#34;)&#xA;&#xA;&#xA;def cleanup():&#xA;    print(&#34;Cleaning up Python script&#34;)&#xA;&#xA;&#xA;def on_request(req):&#xA;    print(f&#34;{req.method()} - {req.url()}&#34;)&#xA;    return req.withBody(&#34;Modified&#34;)&#xA;&#xA;&#xA;def on_response(res):&#xA;    print(f&#34;{res.statusCode()} - {res.reasonPhrase()}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;JavaScript&lt;/h3&gt; &#xA;&lt;p&gt;Scripts can be written as either ES6 or CommonJS style modules. Examples can be found in the &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/examples/js&#34;&gt;examples&lt;/a&gt; directory, and for more information about how JavaScript behaves when interacting with Java, see the &lt;a href=&#34;https://www.graalvm.org/latest/reference-manual/js/Interoperability/&#34;&gt;GraalVM interop reference&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Scripts with the file extension &lt;code&gt;.mjs&lt;/code&gt;, are treated as ES6 modules, where exported handlers look like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export const RES_FILTER = &#34;...&#34;&#xA;export const REQ_FILTER = &#34;...&#34;&#xA;&#xA;export function initialize() {&#xA;    console.log(&#34;Initialized the JavaScript module&#34;);&#xA;}&#xA;&#xA;export function cleanup() {&#xA;    console.log(&#34;Cleaning up JavaScript&#34;);&#xA;}&#xA;&#xA;export function onRequest(req) {&#xA;    console.log(`${req.method()} - ${req.url()}`)&#xA;    return req.withBody(&#34;Modified&#34;)&#xA;}&#xA;&#xA;export function onResponse(res) {&#xA;    console.log(`${res.statusCode()} - ${res.reasonPhrase()}`);&#xA;    return res;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Scripts with the extension&lt;code&gt;.js&lt;/code&gt;, are treated as CommonJS modules, where handlers are exported with &lt;code&gt;module.exports&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;module.exports = {&#xA;    RES_FILTER: &#34;...&#34;,&#xA;    REQ_FILTER: &#34;...&#34;,&#xA;    initialize: function() {&#xA;        ...&#xA;    },&#xA;    cleanup: function() {&#xA;        ...&#xA;    },&#xA;    onRequest: function(req) {&#xA;        ...&#xA;    },&#xA;    onResponse: function(res) {&#xA;        ...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Addons&lt;/h3&gt; &#xA;&lt;p&gt;Scripts may also define handlers using an &#34;Addon&#34; style, similar to Mitmproxy. Each addon can define their own filter expressions and handlers. This is useful for organizing complex scripts or sharing addons between different scripts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;class AddonOne:&#xA;    REQ_FILTER = &#34;...&#34;&#xA;    def on_request(self, req):&#xA;        ...&#xA;&#xA;class AddonTwo:&#xA;    RES_FILTER = &#34;...&#34;&#xA;    def on_response(self, res):&#xA;        ...&#xA;&#xA;addons = [AddonOne(), AddonTwo()]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class AddonOne {&#xA;    // The methods must be declared this way&#xA;    onRequest = function(req) {&#xA;        ...&#xA;    }&#xA;}&#xA;&#xA;class AddonTwo {&#xA;    RES_FILTER = &#34;...&#34;&#xA;    onResponse = function(res) {&#xA;        ...&#xA;    }&#xA;}&#xA;&#xA;export const addons = [new AddonOne(), new AddonTwo()]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Script Globals&lt;/h3&gt; &#xA;&lt;p&gt;Scripts have the following global parameters available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;api&lt;/code&gt; - a &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/(https://portswigger.github.io/burp-extensions-montoya-api/javadoc/burp/api/montoya/MontoyaApi.html)&#34;&gt;MontoyaApi&lt;/a&gt; instance&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;helpers&lt;/code&gt; - an instance of &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/src/main/kotlin/com/carvesystems/burpscript/ScriptHelpers.kt&#34;&gt;ScriptHelpers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;log&lt;/code&gt; - an instance of &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/src/main/kotlin/com/carvesystems/burpscript/Logger.kt&#34;&gt;ScriptLogger&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Printing&lt;/h3&gt; &#xA;&lt;p&gt;Scripts can print messages to the Burpscript Extension tab using the &lt;code&gt;log&lt;/code&gt; object, or with &lt;code&gt;console.log&lt;/code&gt; in JavaScript, and &lt;code&gt;print&lt;/code&gt; in Python. Regular messages go to the Output tab, and errors and exceptions go to the Errors tab (see &lt;a href=&#34;https://portswigger.net/burp/documentation/desktop/extensions/managing-extensions&#34;&gt;Managing extensions&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;log.info(&#34;This is an info message&#34;)&#xA;log.error(&#34;This is an error message&#34;, Exception(&#34;Oh no!&#34;)) # Goes to Errors tab&#xA;print(&#34;This is an info message&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;log.info(&#34;This is an info message&#34;);&#xA;log.error(&#34;This is an exception&#34;, new Error(&#34;On no!&#34;)); // Goes to Errors tab&#xA;console.log(&#34;This is an info message&#34;);&#xA;console.error(&#34;This is an error message&#34;); // Goes to Errors tab&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Using Java&lt;/h3&gt; &#xA;&lt;p&gt;Java classes can also be imported and used directly from scripts. In python the &lt;code&gt;java&lt;/code&gt; module can be imported. In JavaScript, the &lt;code&gt;Java&lt;/code&gt; global object is available. These can be used to import Java types and use them in scripts.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import java&#xA;&#xA;HttpParameter = java.type(&#34;burp.api.montoya.http.message.params.HttpParameter&#34;)&#xA;HttpParameterType = java.type(&#34;burp.api.montoya.http.message.params.HttpParameterType&#34;)&#xA;&#xA;def on_request(req):&#xA;    return req.withParameter(&#xA;        HttpParameter.parameter(&#34;__carve&#34;, &#34;injected&#34;, HttpParameterType.URL)&#xA;    )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const HttpParameter = Java.type(&#34;burp.api.montoya.http.message.params.HttpParameter&#34;)&#xA;const HttpParameterType = Java.type(&#34;burp.api.montoya.http.message.params.HttpParameterType&#34;)&#xA;&#xA;export function onRequest(req) {&#xA;    return req.withParameter(&#xA;        HttpParameter.parameter(&#34;__carve&#34;, &#34;injected&#34;, HttpParameterType.URL)&#xA;    )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Importing&lt;/h3&gt; &#xA;&lt;p&gt;Scripts can import other modules that reside in the same directory.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# common.py&#xA;def do_something():&#xA;    ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# script.py&#xA;from common import do_something&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;JavaScript (ES6)&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// common.mjs&#xA;export function doSomething() {&#xA;    ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// script.mjs&#xA;import { doSomething } from &#39;./common.mjs&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Limitations&lt;/h3&gt; &#xA;&lt;p&gt;There are some limitations with the polyglot API and how values are handled between the script and JVM. If you run into issues with this, it may be difficult to debug exactly what has gone wrong. We&#39;re working on helper functions to make these issues easier to deal with. Also, sometimes &lt;code&gt;import&lt;/code&gt; statements in Python don&#39;t work. If you run into such issues, sometimes it may be easier to use &lt;code&gt;helpers.exec(...)&lt;/code&gt; or &lt;code&gt;helpers.execStdin(...)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Filter Expressions&lt;/h2&gt; &#xA;&lt;p&gt;Filter expressions are a Lisp-like DSL for selecting requests/responses that should be forwarded on to a script. See &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/FILTER_EXPRESSIONS.md&#34;&gt;FILTER_EXPRESSIONS.md&lt;/a&gt; for documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Configuration is available via the &lt;code&gt;${XDG_CONFIG_HOME:-$HOME/.config}/burpscript/conf.json&lt;/code&gt; file. An example config is shown in &lt;a href=&#34;https://raw.githubusercontent.com/ivision-research/burpscript/main/examples/conf.json&#34;&gt;the examples dir&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>