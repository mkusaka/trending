<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-03T01:43:39Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/iosched</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/google/iosched</id>
    <link href="https://github.com/google/iosched" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Google I/O Android App&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google I/O Android App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/google/iosched&#34;&gt;&lt;img src=&#34;https://travis-ci.org/google/iosched.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;2021 Update&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Due to global events, Google I/O 2020 was canceled and Google I/O 2021 is an online-only event, so the companion app hasn&#39;t been updated since 2019. However, the &lt;code&gt;iosched&lt;/code&gt; team has continued adding several architecture improvements to its codebase. The general look and feel of the app is unchanged, and the app still uses the data from Google I/O 2019.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Major improvements implemented in 2021:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Migration from LiveData to Kotlin Flows to observe data.&lt;/li&gt; &#xA; &lt;li&gt;Support for large screens and other form factors.&lt;/li&gt; &#xA; &lt;li&gt;Migration from SharedPreferences to &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/datastore&#34;&gt;Jetpack DataStore&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;(Experimental) Partial migration to Jetpack Compose (in the &lt;a href=&#34;https://github.com/google/iosched/tree/compose&#34;&gt;&lt;code&gt;compose&lt;/code&gt;&lt;/a&gt; branch)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Description&lt;/h1&gt; &#xA;&lt;p&gt;Google I/O is a developer conference with several days of deep technical content featuring technical sessions and hundreds of demonstrations from developers showcasing their technologies.&lt;/p&gt; &#xA;&lt;p&gt;This project is the Android app for the conference.&lt;/p&gt; &#xA;&lt;h1&gt;Running the app&lt;/h1&gt; &#xA;&lt;p&gt;The project contains a &lt;code&gt;staging&lt;/code&gt; variant that replaces some modules at compile time so they don&#39;t depend on remote services such as Firebase. This allows you to try out and test the app without the API keys.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;The app displays a list of conference events - sessions, office hours, app reviews, codelabs, etc. - and allows the user to filter these events by event types and by topics (Android, Firebase, etc.). Users can see details about events, and they can star events that interest them. Conference attendees can reserve events to guarantee a seat.&lt;/p&gt; &#xA;&lt;p&gt;Other features include a Map of the venue, informational pages to guide attendees during the conference in Info, and time-relevant information during the conference in Home.&lt;/p&gt; &#xA;&lt;div&gt; &#xA; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/google/iosched/main/schedule.png&#34; alt=&#34;Schedule screenshot&#34; height=&#34;640&#34; width=&#34;320&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1&gt;Development Environment&lt;/h1&gt; &#xA;&lt;p&gt;The app is written entirely in Kotlin and uses the Gradle build system.&lt;/p&gt; &#xA;&lt;p&gt;To build the app, use the &lt;code&gt;gradlew build&lt;/code&gt; command or use &#34;Import Project&#34; in Android Studio. Android Studio Arctic Fox or newer is required and may be downloaded &lt;a href=&#34;https://developer.android.com/studio/preview&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;The architecture is built around &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/&#34;&gt;Android Architecture Components&lt;/a&gt; and follows the recommendations laid out in the &lt;a href=&#34;https://developer.android.com/jetpack/docs/guide&#34;&gt;Guide to App Architecture&lt;/a&gt;. Logic is kept away from Activities and Fragments and moved to &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModel&lt;/a&gt;s. Data is observed using &lt;a href=&#34;https://developer.android.com/kotlin/flow/stateflow-and-sharedflow&#34;&gt;Kotlin Flows&lt;/a&gt; and the &lt;a href=&#34;https://developer.android.com/topic/libraries/data-binding/&#34;&gt;Data Binding Library&lt;/a&gt; binds UI components in layouts to the app&#39;s data sources.&lt;/p&gt; &#xA;&lt;p&gt;The Repository layer handles data operations. IOSched&#39;s data comes from a few different sources - user data is stored in &lt;a href=&#34;https://firebase.google.com/docs/firestore/&#34;&gt;Cloud Firestore&lt;/a&gt; (either remotely or in a local cache for offline use), user preferences and settings are stored in DataStore, conference data is stored remotely and is fetched and stored in memory for the app to use, etc. - and the repository modules are responsible for handling all data operations and abstracting the data sources from the rest of the app.&lt;/p&gt; &#xA;&lt;p&gt;A lightweight domain layer sits between the data layer and the presentation layer, and handles discrete pieces of business logic off the UI thread. See the &lt;code&gt;.\*UseCase.kt&lt;/code&gt; files under &lt;code&gt;shared/domain&lt;/code&gt; for &lt;a href=&#34;https://github.com/google/iosched/search?q=UseCase&amp;amp;unscoped_q=UseCase&#34;&gt;examples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://developer.android.com/guide/navigation&#34;&gt;Navigation component&lt;/a&gt; is used to implement navigation in the app, handling Fragment transactions and providing a consistent user experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/jetpack/androidx/releases/room&#34;&gt;Room&lt;/a&gt; is used for Full Text Search using &lt;a href=&#34;https://developer.android.com/reference/androidx/room/Fts4&#34;&gt;Fts4&lt;/a&gt; to search for a session, speaker, or codelab.&lt;/p&gt; &#xA;&lt;p&gt;UI tests are written with &lt;a href=&#34;https://developer.android.com/training/testing/espresso/&#34;&gt;Espresso&lt;/a&gt; and unit tests use Junit4 with &lt;a href=&#34;https://github.com/mockito/mockito&#34;&gt;Mockito&lt;/a&gt; when necessary.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://developer.android.com/studio/profile/benchmark&#34;&gt;Jetpack Benchmark library&lt;/a&gt; makes it easy to benchmark your code from within Android Studio. The library handles warmup, measures your code performance, and outputs benchmarking results to the Android Studio console. We added a few benchmark tests around critical paths during app startup - in particular, the parsing of the bootstrap data. This enables us to automate measuring and monitoring initial startup time. Here is an example from a benchmark run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Started running tests&#xA;&#xA;Connected to process 30763 on device &#39;google-pixel_3&#39;.&#xA;benchmark:&#xA;benchmark:    76,076,101 ns BootstrapConferenceDataSourceBenchmark.benchmark_json_parsing&#xA;Tests ran to completion.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Dependency Injection is implemented with &lt;a href=&#34;https://developer.android.com/training/dependency-injection/hilt-android&#34;&gt;Hilt&lt;/a&gt;. For more details on migrating from &lt;em&gt;dagger-android&lt;/em&gt; to Hilt, read the (&lt;a href=&#34;https://medium.com/androiddevelopers/migrating-the-google-i-o-app-to-hilt-f3edf03affe5&#34;&gt;migration article&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/training/animation/screen-slide-2&#34;&gt;ViewPager2&lt;/a&gt; offers enhanced functionality over the original ViewPager library, such as right-to-left and vertical orientation support. For more details on migrating from ViewPager to ViewPager2, please see this &lt;a href=&#34;https://developer.android.com/training/animation/vp2-migration&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Firebase&lt;/h2&gt; &#xA;&lt;p&gt;The app makes considerable use of the following Firebase components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/firestore/&#34;&gt;Cloud Firestore&lt;/a&gt; is our source for all user data (events starred or reserved by a user). Firestore gave us automatic sync and also seamlessly managed offline functionality for us.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/functions/&#34;&gt;Firebase Cloud Functions&lt;/a&gt; allowed us to run backend code. The reservations feature heavily depended on Cloud Functions working in conjuction with Firestore.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/cloud-messaging/concept-options&#34;&gt;Firebase Cloud Messaging&lt;/a&gt; let us inform the app about changes to conference data on our server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://firebase.google.com/docs/remote-config/&#34;&gt;Remote Config&lt;/a&gt; helped us manage in-app constants.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For 2020, the implementation was migrated to the Firebase Kotlin extension (KTX) libraries to write more idiomatic Kotlin code when calling Firebase APIs. To learn more, read this &lt;a href=&#34;https://firebase.googleblog.com/2020/03/firebase-kotlin-ga.html&#34;&gt;Firebase blog article&lt;/a&gt; on the Firebase KTX libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Kotlin&lt;/h2&gt; &#xA;&lt;p&gt;The app is entirely written in Kotlin and uses Jetpack&#39;s &lt;a href=&#34;https://developer.android.com/kotlin/ktx&#34;&gt;Android Ktx extensions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Asynchronous tasks are handled with &lt;a href=&#34;https://developer.android.com/kotlin/coroutines&#34;&gt;coroutines&lt;/a&gt;. Coroutines allow for simple and safe management of one-shot operations as well as building and consuming streams of data using &lt;a href=&#34;https://developer.android.com/kotlin/flow&#34;&gt;Kotlin Flows&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All build scripts are written with the &lt;a href=&#34;https://docs.gradle.org/current/userguide/kotlin_dsl.html&#34;&gt;Kotlin DSL&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Copyright&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2014 Google Inc. All rights reserved.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>tachiyomiorg/tachiyomi-extensions</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/tachiyomiorg/tachiyomi-extensions</id>
    <link href="https://github.com/tachiyomiorg/tachiyomi-extensions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Source extensions for the Tachiyomi app.&lt;/p&gt;&lt;hr&gt;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Build&lt;/th&gt; &#xA;   &lt;th&gt;Support Server&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/tachiyomiorg/tachiyomi-extensions/actions/workflows/build_push.yml&#34;&gt;&lt;img src=&#34;https://github.com/tachiyomiorg/tachiyomi-extensions/workflows/CI/badge.svg?event=push&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://discord.gg/tachiyomi&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/349436576037732353.svg?label=discord&amp;amp;labelColor=7289da&amp;amp;color=2c2f33&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;&lt;img src=&#34;https://raw.githubusercontent.com/tachiyomiorg/tachiyomi-extensions/master/.github/readme-images/app-icon.png&#34; alt=&#34;app icon&#34;&gt;Tachiyomi Extensions&lt;/h1&gt; &#xA;&lt;p&gt;Tachiyomi is a free and open source manga reader for Android 6.0 and above.&lt;/p&gt; &#xA;&lt;p&gt;This repository contains the available extension catalogues for the &lt;a href=&#34;https://github.com/tachiyomiorg/tachiyomi&#34;&gt;Tachiyomi&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;Extension sources can be downloaded, installed, and uninstalled via the main Tachiyomi app. They are installed and uninstalled like regular apps, in &lt;code&gt;.apk&lt;/code&gt; format.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;p&gt;If you prefer to directly download the APK files, they are available via &lt;a href=&#34;https://tachiyomi.org/extensions/&#34;&gt;https://tachiyomi.org/extensions/&lt;/a&gt; or directly in this GitHub repository in the &lt;a href=&#34;https://github.com/tachiyomiorg/tachiyomi-extensions/tree/repo/apk&#34;&gt;&lt;code&gt;repo&lt;/code&gt; branch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Requests&lt;/h1&gt; &#xA;&lt;p&gt;Source requests here are meant as up-for-grabs for any developer, thus it&#39;s impossible to provide a time estimation for any of them. Furthermore, some sites are impossible to do, usually because of various technical reasons.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Contributions are welcome!&lt;/p&gt; &#xA;&lt;p&gt;Check out the repo&#39;s &lt;a href=&#34;https://github.com/tachiyomiorg/tachiyomi-extensions/issues&#34;&gt;issue backlog&lt;/a&gt; for source requests and bug reports.&lt;/p&gt; &#xA;&lt;p&gt;To get started with development, see &lt;a href=&#34;https://raw.githubusercontent.com/tachiyomiorg/tachiyomi-extensions/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;It might also be good to read our &lt;a href=&#34;https://raw.githubusercontent.com/tachiyomiorg/tachiyomi-extensions/master/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2015 Javier Tomás&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The developer of this application does not have any affiliation with the content providers available.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mozilla-mobile/fenix</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/mozilla-mobile/fenix</id>
    <link href="https://github.com/mozilla-mobile/fenix" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Firefox for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Firefox for Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://firefox-ci-tc.services.mozilla.com/api/github/v1/repository/mozilla-mobile/fenix/main/latest&#34;&gt;&lt;img src=&#34;https://firefox-ci-tc.services.mozilla.com/api/github/v1/repository/mozilla-mobile/fenix/main/badge.svg?sanitize=true&#34; alt=&#34;Task Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/mozilla-mobile/fenix&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/mozilla-mobile/fenix/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Fenix (internal codename) is the all-new Firefox for Android browser, based on &lt;a href=&#34;https://mozilla.github.io/geckoview/&#34;&gt;GeckoView&lt;/a&gt; and &lt;a href=&#34;https://mozac.org/&#34;&gt;Mozilla Android Components&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.mozilla.firefox&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;90&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Getting Involved&lt;/h2&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://www.mozilla.org/en-US/about/governance/policies/participation/&#34;&gt;Community Participation Guidelines&lt;/a&gt; and the &lt;a href=&#34;https://bugzilla.mozilla.org/page.cgi?id=etiquette.html&#34;&gt;Bugzilla Etiquette guidelines&lt;/a&gt; before filing an issue. This is our professional working environment as much as it is our bug tracker, and we want to keep our workspace clean and healthy.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/CONTRIBUTING.md&#34;&gt;Guide to Contributing&lt;/a&gt; (&lt;strong&gt;New contributors start here!&lt;/strong&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Browse our &lt;a href=&#34;https://github.com/mozilla-mobile/fenix/issues&#34;&gt;current Issues&lt;/a&gt;, or &lt;a href=&#34;https://bugzilla.mozilla.org/enter_bug.cgi?assigned_to=nobody%40mozilla.org&amp;amp;bug_ignored=0&amp;amp;bug_severity=normal&amp;amp;bug_status=NEW&amp;amp;cf_fx_iteration=---&amp;amp;cf_fx_points=---&amp;amp;component=Security%3A%20Android&amp;amp;contenttypemethod=list&amp;amp;contenttypeselection=text%2Fplain&amp;amp;defined_groups=1&amp;amp;flag_type-4=X&amp;amp;flag_type-607=X&amp;amp;flag_type-791=X&amp;amp;flag_type-800=X&amp;amp;flag_type-803=X&amp;amp;flag_type-936=X&amp;amp;flag_type-937=X&amp;amp;form_name=enter_bug&amp;amp;groups=mobile-core-security&amp;amp;maketemplate=Remember%20values%20as%20bookmarkable%20template&amp;amp;op_sys=Unspecified&amp;amp;priority=--&amp;amp;product=Fenix&amp;amp;rep_platform=Unspecified&amp;amp;target_milestone=---&amp;amp;version=unspecified&#34;&gt;file a security issue&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Matrix: &lt;a href=&#34;https://chat.mozilla.org/#/room/#fenix:mozilla.org&#34;&gt;#fenix:mozilla.org channel&lt;/a&gt; (&lt;strong&gt;We&#39;re available Monday-Friday, GMT and PST working hours&lt;/strong&gt;). Related channels:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://chat.mozilla.org/#/room/#mobile-test-eng:mozilla.org&#34;&gt;#mobile-test-eng:mozilla.org channel&lt;/a&gt;: for UI test automation&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://chat.mozilla.org/#/room/#perf-android-frontend:mozilla.org&#34;&gt;#perf-android-frontend:mozilla.org channel&lt;/a&gt;: for front-end (JVM) performance of Android apps&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://chat.mozilla.org/#/room/#android-tips:mozilla.org&#34;&gt;#android-tips:mozilla.org channel&lt;/a&gt;: for tips on Android development&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Check out the &lt;a href=&#34;https://github.com/mozilla-mobile/fenix/wiki&#34;&gt;project wiki&lt;/a&gt; for more information.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;See &lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/writing_lint_rules.md&#34;&gt;our guide on Writing Custom Lint Rules&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Localization happens on &lt;a href=&#34;https://pontoon.mozilla.org/projects/android-l10n/&#34;&gt;Pontoon&lt;/a&gt;. Please get in touch with delphine (at) mozilla (dot) com directly for more information.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Beginners!&lt;/strong&gt; - Watch out for &lt;a href=&#34;https://github.com/mozilla-mobile/fenix/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22&#34;&gt;Issues with the &#34;Good First Issue&#34; label&lt;/a&gt;. These are easy bugs that have been left for first timers to have a go, get involved and make a positive contribution to the project!&lt;/p&gt; &#xA;&lt;h2&gt;I want to open a Pull Request!&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to participate in this open source project. We love Pull Requests, Bug Reports, ideas, (security) code reviews or any other kind of positive contribution.&lt;/p&gt; &#xA;&lt;p&gt;Since we are a small team, however, &lt;strong&gt;we do not have the bandwidth to review unsolicited PRs&lt;/strong&gt;. Please follow our &lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/CONTRIBUTING_code.md#creating-a-pull-request&#34;&gt;Pull Request guidelines&lt;/a&gt;, or &lt;strong&gt;we may close the PR&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To make it easier to review, we have these PR requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Every PR must have &lt;strong&gt;exactly&lt;/strong&gt; one issue associated with it.&lt;/li&gt; &#xA; &lt;li&gt;Write a clear explanation of what the code is doing when opening the pull request, and optionally add comments to the PR.&lt;/li&gt; &#xA; &lt;li&gt;Make sure there are tests - or ask for help on how the code should be tested in the Issue!&lt;/li&gt; &#xA; &lt;li&gt;Keep PRs small and to the point. For extra code-health changes, either file a separate issue, or make it a separate PR that can be easily reviewed.&lt;/li&gt; &#xA; &lt;li&gt;Use micro-commits. This makes it easier and faster to review.&lt;/li&gt; &#xA; &lt;li&gt;Add a screenshot for UX changes (this is part of the PR checklist)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;As a small team, we have to prioritize our work, and reviewing PRs takes time. We receive lots of PRs every day, so if you can keep your PRs small, it helps our small team review and merge code faster, minimizing stale code.&lt;/p&gt; &#xA;&lt;p&gt;Keep in mind that the team is very overloaded, so PRs sometimes wait for a &lt;em&gt;very&lt;/em&gt; long time. However this is not for lack of interest, but because we find ourselves in a constant need to prioritize certain issues/PRs over others. If you think your issue/PR is very important, try to popularize it by getting other users to comment and share their point of view.&lt;/p&gt; &#xA;&lt;h2&gt;I want to file an issue!&lt;/h2&gt; &#xA;&lt;p&gt;Great! We encourage you to participate in this open source project. We love Pull Requests, Bug Reports, ideas, (security) code reviews or any other kind of positive contribution.&lt;/p&gt; &#xA;&lt;p&gt;To make it easier to triage, we have these issue requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Please do your best to search for duplicate issues before filing a new issue so we can keep our issue board clean.&lt;/li&gt; &#xA; &lt;li&gt;Every issue should have &lt;strong&gt;exactly&lt;/strong&gt; one bug/feature request described in it. Please do not file meta feedback list tickets as it is difficult to parse them and address their individual points.&lt;/li&gt; &#xA; &lt;li&gt;Feature Requests are better when they’re open-ended instead of demanding a specific solution -ie “I want an easier way to do X” instead of “add Y”&lt;/li&gt; &#xA; &lt;li&gt;Issues are not the place to go off topic or debate. If you have questions, please join the &lt;a href=&#34;https://chat.mozilla.org/#/room/#fenix:mozilla.org&#34;&gt;#fenix:mozilla.org channel&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Please always remember our &lt;a href=&#34;https://www.mozilla.org/en-US/about/governance/policies/participation/&#34;&gt;Community Participation Guidelines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Please do not tag specific team members to try to get your issue looked at faster. We have a triage process that will tag and label issues correctly in due time. If you think an issue is very severe, you can ask about it in Matrix.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please keep in mind that even though a feature you have in mind may seem like a small ask, as a small team, we have to prioritize our planned work and every new feature adds complexity and maintenance and may take up design, research, marketing, product, and engineering time. We appreciate everyone’s passion but we will not be able to incorporate every feature request or even fix every bug. That being said, just because we haven&#39;t replied, doesn&#39;t mean we don&#39;t care about the issue, please be patient with our response times as we&#39;re very busy.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;p&gt;Pre-requisites:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android SDK&lt;/li&gt; &#xA; &lt;li&gt;To run command line tools, you&#39;ll need to configure Java: see &lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/configure_java.md&#34;&gt;our how-to guide&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone or Download the repository:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone https://github.com/mozilla-mobile/fenix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;&lt;strong&gt;Import&lt;/strong&gt; the project into Android Studio &lt;strong&gt;or&lt;/strong&gt; build on the command line:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew clean app:assembleDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If this errors out, make sure that you have an &lt;code&gt;ANDROID_SDK_ROOT&lt;/code&gt; environment variable pointing to the right path.&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure to select the correct build variant in Android Studio. See the next section.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Make sure to select &#34;Default APK&#34; under Installation Options inside Run/Debug configuration: see &lt;a href=&#34;https://bugzilla.mozilla.org/show_bug.cgi?id=1529082&#34;&gt;this bug&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Build Variants&lt;/h3&gt; &#xA;&lt;p&gt;For general development, we recommend the &lt;strong&gt;debug&lt;/strong&gt; build variant. Here&#39;s an explanation of each variant:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;debug&lt;/strong&gt;: the default for developers, similar to most other Android apps. It is debuggable, uses a Nightly GeckoView with debug symbols, adds tools like LeakCanary for troublingshooting, and does not strip unused code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;nightly&lt;/strong&gt;: what we ship to the Firefox Nightly channel, using GeckoView Nightly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;beta&lt;/strong&gt;: what we ship to the Firefox Beta channel, using GeckoView Beta. It is more stable than nightly.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;release&lt;/strong&gt;: what we ship as Firefox for Android, using GeckoView Release. It is the most stable.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;nightly, beta, and release are unsigned and &lt;code&gt;debuggable=false&lt;/code&gt; by default. If you want these variants to be:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;automatically signed, see &lt;a href=&#34;https://raw.githubusercontent.com/mozilla-mobile/fenix/main/#automatically-sign-release-builds&#34;&gt;Automatically signing release builds&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;debuggable=true&lt;/code&gt;, see &lt;a href=&#34;https://raw.githubusercontent.com/mozilla-mobile/fenix/main/#building-debuggable-release-variants&#34;&gt;Building debuggable release variants&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Performance Build Variants&lt;/h4&gt; &#xA;&lt;p&gt;For accurate performance measurements, read this section!&lt;/p&gt; &#xA;&lt;p&gt;To analyze performance during &lt;strong&gt;local development&lt;/strong&gt; build a production variant locally (this could either be the Nightly, beta or release). Otherwise, you could also grab a pre-existing APK if you don&#39;t need to test some local changes. Then, use the Firefox profiler to profile what you need!&lt;/p&gt; &#xA;&lt;p&gt;For more information on how to use the profiler or how to use the build, refer to this &lt;a href=&#34;https://wiki.mozilla.org/Performance/How_to_get_started_on_Fenix&#34;&gt;how to measure performance with the build&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to run &lt;strong&gt;performance tests/benchmarks&lt;/strong&gt; in automation or locally use a production build since it is much closer in behavior compared to what users see in the wild.&lt;/p&gt; &#xA;&lt;p&gt;Before you can install any release builds, &lt;strong&gt;You will need to sign production build variants:&lt;/strong&gt; see &lt;a href=&#34;https://raw.githubusercontent.com/mozilla-mobile/fenix/main/#automatically-sign-release-builds&#34;&gt;Automatically signing release builds&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h5&gt;Known disabled-by-default features&lt;/h5&gt; &#xA;&lt;p&gt;Some features are disabled by default when Fenix is built locally. This can be problematic at times for checking performance since you might want to know how your code behaves with those features. The known features that are disabled by default are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Sentry&lt;/li&gt; &#xA; &lt;li&gt;Adjust&lt;/li&gt; &#xA; &lt;li&gt;Mozilla Location Services (also known as MLS)&lt;/li&gt; &#xA; &lt;li&gt;Firebase Push Services&lt;/li&gt; &#xA; &lt;li&gt;Telemetry (only disabled by default in debug builds)&lt;/li&gt; &#xA; &lt;li&gt;Nimbus&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Pre-push hooks&lt;/h2&gt; &#xA;&lt;p&gt;To reduce review turn-around time, we&#39;d like all pushes to run tests locally. We&#39;d recommend you use our provided pre-push hook in &lt;code&gt;config/pre-push-recommended.sh&lt;/code&gt;. Using this hook will guarantee your hook gets updated as the repository changes. This hook tries to run as much as possible without taking too much time.&lt;/p&gt; &#xA;&lt;p&gt;Before you can run the hook, you&#39;ll need to configure Java properly because it relies on command line tools: see &lt;a href=&#34;https://github.com/mozilla-mobile/shared-docs/raw/master/android/configure_java.md&#34;&gt;our how-to guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To add it on Mac/Linux, run this command from the project root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;ln -s ../../config/pre-push-recommended.sh .git/hooks/pre-push&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for Windows run this command using the Command Prompt with administrative privileges:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mklink .git\hooks\pre-push ..\..\config\pre-push-recommended.sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or using PowerShell:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;New-Item -ItemType SymbolicLink -Path .git\hooks\pre-push -Value (Resolve-Path config\pre-push-recommended.sh)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To push without running the pre-push hook (e.g. doc updates):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git push &amp;lt;remote&amp;gt; --no-verify&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note: If while pushing you encounter this error &#34;Could not initialize class org.codehaus.groovy.runtime.InvokerHelper&#34; and are currently on Java14 then downgrading your Java version to Java13 or lower can resolve the issue&lt;/p&gt; &#xA;&lt;p&gt;Steps to downgrade Java Version on Mac with Brew:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Homebrew (&lt;a href=&#34;https://brew.sh/&#34;&gt;https://brew.sh/&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;brew update&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;To uninstall your current java version, run &lt;code&gt;sudo rm -fr /Library/Java/JavaVirtualMachines/&amp;lt;jdk-version&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;brew tap homebrew/cask-versions&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;brew search java&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;If you see java11, then run &lt;code&gt;brew install java11&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Verify java-version by running &lt;code&gt;java -version&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;local.properties helpers&lt;/h2&gt; &#xA;&lt;p&gt;You can speed up local development by setting a few helper flags available in &lt;code&gt;local.properties&lt;/code&gt;. Some flags will make it easy to work across multiple layers of the dependency stack - specifically, with android-components, geckoview or application-services.&lt;/p&gt; &#xA;&lt;h3&gt;Automatically sign release builds&lt;/h3&gt; &#xA;&lt;p&gt;To sign your release builds with your debug key automatically, add the following to &lt;code&gt;&amp;lt;proj-root&amp;gt;/local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;autosignReleaseWithDebugKey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With this line, release build variants will automatically be signed with your debug key (like debug builds), allowing them to be built and installed directly through Android Studio or the command line.&lt;/p&gt; &#xA;&lt;p&gt;This is helpful when you&#39;re building release variants frequently, for example to test feature flags and or do performance analyses.&lt;/p&gt; &#xA;&lt;h3&gt;Building debuggable release variants&lt;/h3&gt; &#xA;&lt;p&gt;Nightly, Beta and Release variants are getting published to Google Play and therefore are not debuggable. To locally create debuggable builds of those variants, add the following to &lt;code&gt;&amp;lt;proj-root&amp;gt;/local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;debuggable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Setting raptor manifest flag&lt;/h3&gt; &#xA;&lt;p&gt;To set the raptor manifest flag in Nightly, Beta and Release variants, add the following to &lt;code&gt;&amp;lt;proj-root&amp;gt;/local.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;raptorEnabled&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Auto-publication workflow for android-components and application-services&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re making changes to these projects and want to test them in Fenix, auto-publication workflow is the fastest, most reliable way to do that.&lt;/p&gt; &#xA;&lt;p&gt;In &lt;code&gt;local.properties&lt;/code&gt;, specify a relative path to your local &lt;code&gt;android-components&lt;/code&gt; and/or &lt;code&gt;application-services&lt;/code&gt; checkouts. E.g.:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;autoPublish.android-components.dir=../android-components&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;autoPublish.application-services.dir=../application-services&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Once these flags are set, your Fenix builds will include any local modifications present in these projects.&lt;/p&gt; &#xA;&lt;p&gt;See a &lt;a href=&#34;https://www.youtube.com/watch?v=qZKlBzVvQGc&#34;&gt;demo of auto-publication workflow in action&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order to build successfully, you need to check out a commit in the dependency repository that has no breaking changes. The two best ways to do this are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run the &lt;code&gt;&amp;lt;android-components&amp;gt;/tools/list_compatible_dependency_versions.py&lt;/code&gt; script to output a compatible commit&lt;/li&gt; &#xA; &lt;li&gt;Check out the latest commit from main in this repository and the dependency repository. However, this may fail if there were breaking changes added recently to the dependency.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;re trying to build fenix with a local ac AND a local GV, you&#39;ll have to use another method: see &lt;a href=&#34;https://github.com/mozilla-mobile/fenix/raw/main/docs/substituting-local-ac-and-gv.md&#34;&gt;this doc&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Using Nimbus servers during local development&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re working with the Nimbus experiments platform, by default for local development Fenix configures Nimbus to not use a server.&lt;/p&gt; &#xA;&lt;p&gt;If you wish to use a Nimbus server during local development, you can add a &lt;code&gt;https://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt; endpoint to the &lt;code&gt;local.properties&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;nimbus.remote-settings.url&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Testing experimental branches should be possible without a server.&lt;/p&gt; &#xA;&lt;h3&gt;GeckoView&lt;/h3&gt; &#xA;&lt;p&gt;Specify a relative path to your local &lt;code&gt;mozilla-central&lt;/code&gt; checkout via &lt;code&gt;dependencySubstitutions.geckoviewTopsrcdir&lt;/code&gt;, and optional a path to m-c object directory via &lt;code&gt;dependencySubstitutions.geckoviewTopobjdir&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If these are configured, local builds of GeckoView will be used instead of what&#39;s configured in Dependencies.kt. For more details, see &lt;a href=&#34;https://firefox-source-docs.mozilla.org/mobile/android/geckoview/contributor/geckoview-quick-start.html#include-geckoview-as-a-dependency&#34;&gt;https://firefox-source-docs.mozilla.org/mobile/android/geckoview/contributor/geckoview-quick-start.html#include-geckoview-as-a-dependency&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;See notes on building successfully in the &lt;code&gt;android-components&lt;/code&gt; auto-publication section.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;This Source Code Form is subject to the terms of the Mozilla Public&#xA;License, v. 2.0. If a copy of the MPL was not distributed with this&#xA;file, You can obtain one at http://mozilla.org/MPL/2.0/&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>nomisRev/ktor-arrow-example</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/nomisRev/ktor-arrow-example</id>
    <link href="https://github.com/nomisRev/ktor-arrow-example" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Small example that shows Arrow Validation with KotlinX Serialization&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ktor Arrow Real World Example&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;While most &#34;todo&#34; demos provide an excellent cursory glance at a framework&#39;s capabilities, they typically don&#39;t convey the knowledge &amp;amp; perspective required to actually build real applications with it.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;em&gt;Read the &lt;a href=&#34;https://medium.com/@ericsimons/introducing-realworld-6016654d36b5&#34;&gt;full blog post announcing RealWorld on Medium.&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;Over 100 implementations have been created using various languages, libraries, and frameworks.&lt;/p&gt; &#xA;&lt;p&gt;Explore them on &lt;a href=&#34;https://codebase.show/projects/realworld&#34;&gt;&lt;strong&gt;CodebaseShow&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In order for Real World back-end and front-end examples to be able to work together we need to follow a predefined &lt;a href=&#34;https://github.com/gothinkster/realworld/raw/main/api/openapi.yml&#34;&gt;openapi.yml&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How it works&lt;/h2&gt; &#xA;&lt;p&gt;This example uses &lt;a href=&#34;https://kotlinlang.org/docs/home.html&#34;&gt;Kotlin&lt;/a&gt; with &lt;a href=&#34;https://ktor.io/&#34;&gt;Ktor&lt;/a&gt; and &lt;a href=&#34;https://arrow-kt.io/&#34;&gt;Arrow&lt;/a&gt; as the main building blocks. Other technologies used:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cashapp.github.io/sqldelight/&#34;&gt;SqlDelight&lt;/a&gt; for the persistence layer&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotest.io/&#34;&gt;Kotest&lt;/a&gt; for testing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Running the project&lt;/h2&gt; &#xA;&lt;p&gt;To run the project, you first need to start the environment. This can be done with &lt;code&gt;docker-compose up&lt;/code&gt;, and then you can start the Ktor server with &lt;code&gt;./gradlew run&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;docker-compose up&#xA;./gradlew run&#xA;curl 0.0.0.0:8080/health&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>LawnchairLauncher/lawnicons</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/LawnchairLauncher/lawnicons</id>
    <link href="https://github.com/LawnchairLauncher/lawnicons" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lawnicons&lt;/h1&gt; &#xA;&lt;p&gt;Lawnicons is an add-on for adding themed icons to &lt;a href=&#34;https://github.com/LawnchairLauncher/lawnchair&#34;&gt;Lawnchair 12&lt;/a&gt;, the latest version of Lawnchair Launcher. This addon is now the source of all themed icons, for simplicity.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://github.com/LawnchairLauncher/lawnicons/releases&#34;&gt;Releases&lt;/a&gt; section to download the latest stable build of Lawnicons.&lt;/p&gt; &#xA;&lt;p&gt;For the development versions with new icons, go to the &lt;a href=&#34;https://github.com/LawnchairLauncher/lawnicons/actions&#34;&gt;Actions&lt;/a&gt; tab, click the first workflow run, and scroll and find the &lt;code&gt;Debug Apk&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that you&#39;ll need to have a GitHub account to download the debug apk.&lt;/p&gt; &#xA;&lt;h2&gt;Adding icons&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/LawnchairLauncher/lawnicons/develop/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for info on adding icons.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Lawnicons is licensed under the &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;Apache License 2.0&lt;/a&gt;. See &lt;a href=&#34;https://raw.githubusercontent.com/LawnchairLauncher/lawnicons/develop/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for additional information.&lt;/p&gt; &#xA;&lt;h2&gt;Quick links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LawnchairLauncher/lawnchair&#34;&gt;Lawnchair GitHub page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>vector-im/element-android</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/vector-im/element-android</id>
    <link href="https://github.com/vector-im/element-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A glossy Matrix collaboration client for Android.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://buildkite.com/matrix-dot-org/element-android/builds?branch=develop&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/ad0065c1b70f557cd3b1d3d68f9c2154010f83c4d6f71706a9.svg?branch=develop&#34; alt=&#34;Buildkite&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://translate.element.io/engage/element-android/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://translate.element.io/widgets/element-android/-/svg-badge.svg?sanitize=true&#34; alt=&#34;Weblate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#element-android:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/matrix/element-android:matrix.org.svg?label=%23element-android:matrix.org&amp;amp;logo=matrix&amp;amp;server_fqdn=matrix.org&#34; alt=&#34;Element Android Matrix room #element-android:matrix.org&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=im.vector.app.android&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=im.vector.app.android&amp;amp;metric=alert_status&#34; alt=&#34;Quality Gate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=im.vector.app.android&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=im.vector.app.android&amp;amp;metric=vulnerabilities&#34; alt=&#34;Vulnerabilities&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://sonarcloud.io/dashboard?id=im.vector.app.android&#34;&gt;&lt;img src=&#34;https://sonarcloud.io/api/project_badges/measure?project=im.vector.app.android&amp;amp;metric=bugs&#34; alt=&#34;Bugs&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Element Android&lt;/h1&gt; &#xA;&lt;p&gt;Element Android is an Android Matrix Client provided by &lt;a href=&#34;https://element.io/&#34;&gt;Element&lt;/a&gt;. The app can be run on every Android devices with Android OS Lollipop and more (API 21).&lt;/p&gt; &#xA;&lt;p&gt;It is a total rewrite of &lt;a href=&#34;https://github.com/vector-im/riot-android&#34;&gt;Riot-Android&lt;/a&gt; with a new user experience.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=im.vector.app&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vector-im/element-android/develop/resources/img/google-play-badge.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;60&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/app/im.vector.app&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vector-im/element-android/develop/resources/img/f-droid-badge.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;60&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Nightly build: &lt;a href=&#34;https://buildkite.com/matrix-dot-org/element-android/builds?branch=develop&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/ad0065c1b70f557cd3b1d3d68f9c2154010f83c4d6f71706a9.svg?branch=develop&#34; alt=&#34;Buildkite&#34;&gt;&lt;/a&gt; Nightly test status: &lt;a href=&#34;https://github.com/vector-im/element-android/actions/workflows/nightly.yml&#34;&gt;&lt;img src=&#34;https://github.com/vector-im/element-android/actions/workflows/nightly.yml/badge.svg?sanitize=true&#34; alt=&#34;allScreensTest&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;New Android SDK&lt;/h1&gt; &#xA;&lt;p&gt;Element is based on a new Android SDK fully written in Kotlin (like Element). In order to make the early development as fast as possible, Element and the new SDK currently share the same git repository.&lt;/p&gt; &#xA;&lt;p&gt;At each Element release, the SDK module is copied to a dedicated repository: &lt;a href=&#34;https://github.com/matrix-org/matrix-android-sdk2&#34;&gt;https://github.com/matrix-org/matrix-android-sdk2&lt;/a&gt;. That way, third party apps can add a regular gradle dependency to use it. So more details on how to do that here: &lt;a href=&#34;https://github.com/matrix-org/matrix-android-sdk2&#34;&gt;https://github.com/matrix-org/matrix-android-sdk2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;The version 1.0.0 of Element still misses some features which was previously included in Riot-Android. The team will work to add them on a regular basis.&lt;/p&gt; &#xA;&lt;h1&gt;Releases to app stores&lt;/h1&gt; &#xA;&lt;p&gt;There is some delay between when a release is created and when it appears in the app stores (Google Play Store and F-Droid). Here are some of the reasons:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Not all versioned releases that appear on GitHub are considered stable. Each release is first considered beta: this continues for at least two days. If the release is stable (no serious issues or crashes are reported), then it is released as a production release in Google Play Store, and a request is sent to F-Droid too.&lt;/li&gt; &#xA; &lt;li&gt;Each release on the Google Play Store undergoes review by Google before it comes out. This can take an unpredictable amount of time. In some cases it has taken several weeks.&lt;/li&gt; &#xA; &lt;li&gt;In order for F-Droid to guarantee that the app you receive exactly matches the public source code, they build releases themselves. When a release is considered stable, Element staff inform the F-Droid maintainers and it is added to the build queue. Depending on the load on F-Droid&#39;s infrastructure, it can take some time for releases to be built. This always takes at least 24 hours, and can take several days.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you would like to receive releases more quickly (bearing in mind that they may not be stable) you have a number of options:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/apps/testing/im.vector.app&#34;&gt;Sign up to receive beta releases&lt;/a&gt; via the Google Play Store.&lt;/li&gt; &#xA; &lt;li&gt;Install a &lt;a href=&#34;https://github.com/vector-im/element-android/releases&#34;&gt;release APK&lt;/a&gt; directly - download the relevant .apk file and allow installing from untrusted sources in your device settings. Note: these releases are the Google Play version, which depend on some Google services. If you prefer to avoid that, try the latest dev builds, and choose the F-Droid version.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re really brave, install the &lt;a href=&#34;https://buildkite.com/matrix-dot-org/element-android/builds/latest?branch=develop&amp;amp;state=passed&#34;&gt;very latest dev build&lt;/a&gt; - click on &lt;em&gt;Assemble (GPlay or FDroid) Debug version&lt;/em&gt; then on &lt;em&gt;Artifacts&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://github.com/vector-im/element-android/raw/develop/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; if you want to contribute on Matrix Android projects!&lt;/p&gt; &#xA;&lt;p&gt;Come chat with the community in the dedicated Matrix &lt;a href=&#34;https://matrix.to/#/#element-android:matrix.org&#34;&gt;room&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Triaging issues&lt;/h2&gt; &#xA;&lt;p&gt;Issues are triaged by community members and the Android App Team, following the &lt;a href=&#34;https://github.com/vector-im/element-meta/wiki/Triage-process&#34;&gt;triage process&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We use &lt;a href=&#34;https://github.com/vector-im/element-meta/wiki/Issue-labelling&#34;&gt;issue labels&lt;/a&gt; to sort all incoming issues.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/nowinandroid</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/android/nowinandroid</id>
    <link href="https://github.com/android/nowinandroid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fully functional Android app built entirely with Kotlin and Jetpack Compose&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/nia-splash.jpg&#34; alt=&#34;Now in Android&#34; title=&#34;Now in Android&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Now in Android App [Work in progress 🚧]&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the &lt;a href=&#34;https://developer.android.com/series/now-in-android&#34;&gt;Now in Android&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;p&gt;Now in Android is a fully functional Android app built entirely with Kotlin and Jetpack Compose. It follows Android design and development best practices and is intended to be a useful reference for developers. As a running app, it&#39;s intended to help developers keep up-to-date with the world of Android development by providing regular news updates.&lt;/p&gt; &#xA;&lt;p&gt;The app is currently in early stage development and is not yet available on the Play Store.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;Now in Android displays content from the &lt;a href=&#34;https://developer.android.com/series/now-in-android&#34;&gt;Now in Android&lt;/a&gt; series. Users can browse for links to recent videos, articles and other content. Users can also follow topics they are interested in or follow specific authors.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/screenshot-1-foryou.png&#34; alt=&#34;Screenshot showing For You screen&#34; title=&#34;Screenshot showing For You screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/screenshot-2-interests.png&#34; alt=&#34;Screenshot showing Interests screen&#34; title=&#34;Screenshot showing Interests screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/screenshot-3-topicdetail.png&#34; alt=&#34;Screenshot showing Topic detail screen&#34; title=&#34;Screenshot showing Topic detail screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development Environment&lt;/h1&gt; &#xA;&lt;p&gt;Now in Android uses the Gradle build system and can be imported directly into the latest stable version of Android Studio (available &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;here&lt;/a&gt;). The &lt;code&gt;debug&lt;/code&gt; build can be built and run using the default configuration.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;re up and running, you can refer to the learning journeys below to get a better understanding of which libraries and tools are being used, the reasoning behind the approaches to UI, testing, architecture and more, and how all of these different pieces of the project fit together to create a complete app.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Building the app using an M1 Mac will require the use of &lt;a href=&#34;https://support.apple.com/en-gb/HT211861&#34;&gt;Rosetta&lt;/a&gt;. See &lt;a href=&#34;https://github.com/protocolbuffers/protobuf/issues/9397#issuecomment-1086138036&#34;&gt;the following bug&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;The Now in Android app follows the &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;official architecture guidance&lt;/a&gt; and is described in detail in the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ArchitectureLearningJourney.md&#34;&gt;architecture learning journey&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Build&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;code&gt;debug&lt;/code&gt; variant of &lt;code&gt;app&lt;/code&gt; uses local data to allow immediate building and exploring the UI.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;staging&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; variants of &lt;code&gt;app&lt;/code&gt; make real network calls to a backend server, providing up-to-date data as new episodes of Now in Android are released. At this time, there is not a public backend available.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;benchmark&lt;/code&gt; variant of &lt;code&gt;app&lt;/code&gt; is used to test startup performance and generate a baseline profile (see below for more information).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;app-nia-catalog&lt;/code&gt; is a standalone app that displays the list of components that are stylized for Now in Android.&lt;/p&gt; &#xA;&lt;h1&gt;Testing&lt;/h1&gt; &#xA;&lt;p&gt;To facilitate testing of components, Now in Android uses dependency injection with &lt;a href=&#34;https://developer.android.com/training/dependency-injection/hilt-android&#34;&gt;Hilt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Most data layer components are defined as interfaces. Then, concrete implementations (with various dependencies) are bound to provide those interfaces to other components in the app. In tests, Now in Android notably does &lt;em&gt;not&lt;/em&gt; use any mocking libraries. Instead, the production implementations can be replaced with test doubles using Hilt&#39;s testing APIs (or via manual constructor injection for &lt;code&gt;ViewModel&lt;/code&gt; tests).&lt;/p&gt; &#xA;&lt;p&gt;These test doubles implement the same interface as the production implementations, and generally provide a simplified (but still realistic) implementation with additional testing hooks. This results in less brittle tests that may exercise more production code, instead of just verifying specific calls against mocks.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In instrumentation tests, a temporary folder is used to store the user&#39;s preferences, which is wiped after reach test. This allows using the real &lt;code&gt;DataStore&lt;/code&gt; and exercising all related code, instead of mocking the flow of data updates.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There are &lt;code&gt;Test&lt;/code&gt; implementations of each repository, which implement the normal, full repository interface and also provide test-only hooks. &lt;code&gt;ViewModel&lt;/code&gt; tests use these &lt;code&gt;Test&lt;/code&gt; repositories, and thus can use the test-only hooks to manipulate the the state of the &lt;code&gt;Test&lt;/code&gt; repository and verify the resulting behavior, instead of checking that specific repository methods were called.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;UI&lt;/h1&gt; &#xA;&lt;p&gt;UI components are designed according to &lt;a href=&#34;https://m3.material.io/&#34;&gt;Material 3 guidelines&lt;/a&gt; and built entirely using &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The app has two themes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic color - uses colors based on the &lt;a href=&#34;https://material.io/blog/announcing-material-you&#34;&gt;user&#39;s current color theme&lt;/a&gt; (if supported)&lt;/li&gt; &#xA; &lt;li&gt;Default theme - uses predefined colors when dynamic color is not supported&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each theme also supports dark mode.&lt;/p&gt; &#xA;&lt;p&gt;The app uses adaptive layouts to &lt;a href=&#34;https://developer.android.com/guide/topics/large-screens/support-different-screen-sizes&#34;&gt;support different screen sizes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find out more about the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ArchitectureLearningJourney.md#ui-layer&#34;&gt;UI architecture here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Baseline profiles&lt;/h1&gt; &#xA;&lt;p&gt;The baseline profile for this app is located at &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/app/src/main/baseline-prof.txt&#34;&gt;&lt;code&gt;app/src/main/baseline-prof.txt&lt;/code&gt;&lt;/a&gt;. It contains rules that enable AOT compilation of the critical user path taken during app launch. For more information on baseline profiles, read &lt;a href=&#34;https://developer.android.com/studio/profile/baselineprofiles&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: The baseline profile needs to be re-generated for release builds that touched code which changes app startup.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To generate the baseline profile, select the &lt;code&gt;benchmark&lt;/code&gt; build variant and run the &lt;code&gt;BaselineProfileGenerator&lt;/code&gt; benchmark test on an AOSP Android Emulator. Then copy the resulting baseline profile from the emulator to &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/app/src/main/baseline-prof.txt&#34;&gt;&lt;code&gt;app/src/main/baseline-prof.txt&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Now in Android is distributed under the terms of the Apache License (Version 2.0). See the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/LICENSE&#34;&gt;license&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>moezbhatti/qksms</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/moezbhatti/qksms</id>
    <link href="https://github.com/moezbhatti/qksms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The most beautiful SMS messenger for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4358785/39079306-a5a409b6-44e5-11e8-8589-b4acd63b636e.jpg&#34; alt=&#34;QKSMS&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;QKSMS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/moezbhatti/qksms/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/moezbhatti/qksms/tree/master.svg?style=svg&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/qksms&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/qksms/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://liberapay.com/moezbhatti/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-liberapay-yellow.svg?sanitize=true&#34; alt=&#34;Liberapay donation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qklabs.com/donate-btc/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-bitcoin-yellow.svg?sanitize=true&#34; alt=&#34;Bitcoin donation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qklabs.com/donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-paypal-yellow.svg?sanitize=true&#34; alt=&#34;PayPal donation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;QKSMS is an open source replacement to the &lt;a href=&#34;https://github.com/android/platform_packages_apps_mms&#34;&gt;stock messaging app&lt;/a&gt; on Android. It is currently available on the &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.moez.QKSMS&#34;&gt;Google Play Store&lt;/a&gt; and on &lt;a href=&#34;https://f-droid.org/repository/browse/?fdid=com.moez.QKSMS&#34;&gt;F-Droid&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.moez.QKSMS&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png&#34; alt=&#34;Download on Google Play&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://f-droid.org/repository/browse/?fdid=com.moez.QKSMS&#34;&gt;&lt;img src=&#34;https://f-droid.org/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reporting bugs&lt;/h2&gt; &#xA;&lt;p&gt;A great bug report contains a description of the problem and steps to reproduce the problem. We need to know what we&#39;re looking for and where to look for it.&lt;/p&gt; &#xA;&lt;p&gt;When reporting a bug, please make sure to provide the following information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Steps to reproduce the issue&lt;/li&gt; &#xA; &lt;li&gt;QKSMS version&lt;/li&gt; &#xA; &lt;li&gt;Device / OS information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to add translations to QKSMS, please join the project on &lt;a href=&#34;https://crowdin.com/project/qksms&#34;&gt;Crowdin&lt;/a&gt;. Translations that are committed directly to source files will not be accepted.&lt;/p&gt; &#xA;&lt;h2&gt;Thank you&lt;/h2&gt; &#xA;&lt;p&gt;A special thank you to Jake (&lt;a href=&#34;https://github.com/klinker41&#34;&gt;@klinker41&lt;/a&gt;) and Luke Klinker (&lt;a href=&#34;https://github.com/klinker24&#34;&gt;@klinker24&lt;/a&gt;) for their work on &lt;a href=&#34;https://github.com/klinker41/android-smsmms&#34;&gt;android-smsmms&lt;/a&gt;, which has been an unspeakably large help in implementing MMS into QKSMS.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;QKSMS is developed and maintained by &lt;a href=&#34;https://github.com/moezbhatti&#34;&gt;Moez Bhatti&lt;/a&gt;. Feel free to reach out to &lt;a href=&#34;mailto:moez@qklabs.com&#34;&gt;moez@qklabs.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;QKSMS is released under the &lt;strong&gt;The GNU General Public License v3.0 (GPLv3)&lt;/strong&gt;, which can be found in the &lt;code&gt;LICENSE&lt;/code&gt; file in the root of this project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>detekt/detekt</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/detekt/detekt</id>
    <link href="https://github.com/detekt/detekt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Static code analysis for Kotlin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;detekt&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kotlinlang.slack.com/archives/C88E12QH4&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%23detekt-on_slack-red.svg?logo=slack&#34; alt=&#34;Join the chat at #detekt on KotlinLang&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://detekt.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/visit-website-red.svg?logo=firefox&#34; alt=&#34;Visit the website at detekt.dev/&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/io.gitlab.arturbosch.detekt/detekt-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.gitlab.arturbosch.detekt/detekt-cli?label=MavenCentral&amp;amp;logo=apache-maven&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://plugins.gradle.org/plugin/io.gitlab.arturbosch.detekt&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v/https/plugins.gradle.org/m2/io/gitlab/arturbosch/detekt/io.gitlab.arturbosch.detekt.gradle.plugin/maven-metadata.xml.svg?label=Gradle&amp;amp;logo=gradle&#34; alt=&#34;Gradle Plugin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/detekt/detekt/workflows/Pre%20Merge%20Checks/badge.svg?branch=main&#34; alt=&#34;Pre Merge Checks&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/detekt/detekt&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/detekt/detekt/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/KotlinBy/awesome-kotlin&#34;&gt;&lt;img src=&#34;https://kotlin.link/awesome-kotlin.svg?sanitize=true&#34; alt=&#34;Awesome Kotlin Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/custom%2B25591%2Fgithub.com%2Fdetekt%2Fdetekt?ref=badge_small&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/custom%2B25591%2Fgithub.com%2Fdetekt%2Fdetekt.svg?type=small&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Meet &lt;em&gt;detekt&lt;/em&gt;, a static code analysis tool for the &lt;em&gt;Kotlin&lt;/em&gt; programming language. It operates on the abstract syntax tree provided by the Kotlin compiler.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/detekt/detekt/main/docs/images/detekt_in_action.png&#34; alt=&#34;detekt in action&#34; title=&#34;detekt in action&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code smell analysis for your Kotlin projects&lt;/li&gt; &#xA; &lt;li&gt;Complexity reports based on lines of code, cyclomatic complexity and amount of code smells&lt;/li&gt; &#xA; &lt;li&gt;Highly configurable rule sets&lt;/li&gt; &#xA; &lt;li&gt;Suppression of findings with Kotlin&#39;s &lt;code&gt;@Suppress&lt;/code&gt; and Java&#39;s &lt;code&gt;@SuppressWarnings&lt;/code&gt; annotations&lt;/li&gt; &#xA; &lt;li&gt;Specification of quality gates which will break your build&lt;/li&gt; &#xA; &lt;li&gt;Code Smell baseline and suppression for legacy projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/detekt/detekt/main/#with-gradle&#34;&gt;Gradle plugin&lt;/a&gt; for code analysis via Gradle builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/sonar-kotlin&#34;&gt;SonarQube integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extensibility by enabling incorporation of personal rule sets, &lt;code&gt;FileProcessListener&#39;s&lt;/code&gt; and &lt;code&gt;OutputReport&#39;s&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/detekt-intellij-plugin&#34;&gt;IntelliJ integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Third party integrations for &lt;a href=&#34;https://github.com/Ozsie/detekt-maven-plugin&#34;&gt;Maven&lt;/a&gt;, &lt;a href=&#34;https://github.com/buildfoundation/bazel_rules_detekt/&#34;&gt;Bazel&lt;/a&gt; and Github Actions (&lt;a href=&#34;https://github.com/marketplace/actions/detekt-all&#34;&gt;Docker based&lt;/a&gt; and &lt;a href=&#34;https://github.com/marketplace/actions/setup-detekt&#34;&gt;Javascript based&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Project Website&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://detekt.dev/&#34;&gt;the project website&lt;/a&gt; for installation guides, release notes, migration guides, rule descriptions and configuration options.&lt;/p&gt; &#xA;&lt;h4&gt;Quick-Links&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/changelog.html&#34;&gt;Changelog and migration guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/cli.html&#34;&gt;Available CLI options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/complexity.html&#34;&gt;Rule set and rule descriptions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/extensions.html&#34;&gt;Writing custom rules and extending detekt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/suppressing-rules.html&#34;&gt;Suppressing issues in code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/baseline.html&#34;&gt;Suppressing issues via baseline file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/configurations.html&#34;&gt;Configuring detekt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sample Gradle integrations examples: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/detekt/raw/main/build.gradle.kts&#34;&gt;multi project (Kotlin DSL)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/arturbosch/kutils/raw/master/build.gradle&#34;&gt;single project (Groovy DSL)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/sonar-kotlin/raw/main/pom.xml&#34;&gt;single project (Unofficial Maven plugin)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Start ...&lt;/h3&gt; &#xA;&lt;h4&gt;with the command-line interface&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -sSLO https://github.com/detekt/detekt/releases/download/v[version]/detekt-cli-[version]-all.jar&#xA;java -jar detekt-cli-[version]-all.jar --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find &lt;a href=&#34;https://detekt.dev/cli.html&#34;&gt;other ways to install detekt here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;with Gradle&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;    id(&#34;io.gitlab.arturbosch.detekt&#34;).version(&#34;[version]&#34;)&#xA;}&#xA;&#xA;repositories {&#xA;    mavenCentral()&#xA;}&#xA;&#xA;detekt {&#xA;    buildUponDefaultConfig = true // preconfigure defaults&#xA;    allRules = false // activate all available (even unstable) rules.&#xA;    config = files(&#34;$projectDir/config/detekt.yml&#34;) // point to your custom config defining rules to run, overwriting default behavior&#xA;    baseline = file(&#34;$projectDir/config/baseline.xml&#34;) // a way of suppressing issues before introducing detekt&#xA;}&#xA;&#xA;tasks.withType&amp;lt;Detekt&amp;gt;().configureEach {&#xA;    reports {&#xA;        html.required.set(true) // observe findings in your browser with structure and code snippets&#xA;        xml.required.set(true) // checkstyle like format mainly for integrations like Jenkins&#xA;        txt.required.set(true) // similar to the console output, contains issue signature to manually edit baseline files&#xA;        sarif.required.set(true) // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations with Github Code Scanning&#xA;    }&#xA;}&#xA;&#xA;// Groovy DSL&#xA;tasks.withType(Detekt).configureEach {&#xA;    jvmTarget = &#34;1.8&#34;&#xA;}&#xA;tasks.withType(DetektCreateBaselineTask).configureEach {&#xA;    jvmTarget = &#34;1.8&#34;&#xA;}&#xA;&#xA;// or&#xA;&#xA;// Kotlin DSL&#xA;tasks.withType&amp;lt;Detekt&amp;gt;().configureEach {&#xA;    jvmTarget = &#34;1.8&#34;&#xA;}&#xA;tasks.withType&amp;lt;DetektCreateBaselineTask&amp;gt;().configureEach {&#xA;    jvmTarget = &#34;1.8&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://search.maven.org/artifact/io.gitlab.arturbosch.detekt/detekt-cli&#34;&gt;maven central&lt;/a&gt; for releases and &lt;a href=&#34;https://oss.sonatype.org/#view-repositories;snapshots~browsestorage~io/gitlab/arturbosch/detekt&#34;&gt;sonatype&lt;/a&gt; for snapshots.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use a SNAPSHOT version, you can find more info on &lt;a href=&#34;https://detekt.dev/snapshots.html&#34;&gt;this documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;p&gt;Gradle 6.1+ is the minimum requirement. However, the recommended versions together with the other tools recommended versions are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Detekt Version&lt;/th&gt; &#xA;   &lt;th&gt;Gradle&lt;/th&gt; &#xA;   &lt;th&gt;Kotlin&lt;/th&gt; &#xA;   &lt;th&gt;AGP&lt;/th&gt; &#xA;   &lt;th&gt;Java Target Level&lt;/th&gt; &#xA;   &lt;th&gt;JDK Max Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.20.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;7.4.2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.6.20&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;7.1.3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.8&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;17&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The list of &lt;a href=&#34;https://detekt.dev/compatibility.html&#34;&gt;recommended versions for previous detekt version is listed here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Adding more rule sets&lt;/h3&gt; &#xA;&lt;p&gt;detekt itself provides a wrapper over &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt; as a &lt;code&gt;formatting&lt;/code&gt; rule set which can be easily added to the Gradle configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies {&#xA;    detektPlugins(&#34;io.gitlab.arturbosch.detekt:detekt-formatting:[version]&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Likewise custom &lt;a href=&#34;https://detekt.dev/extensions.html&#34;&gt;extensions&lt;/a&gt; can be added to detekt.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/detekt/detekt/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to all the people who contributed to detekt!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/detekt/detekt/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=detekt/detekt&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Mentions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://androidweekly.net/issues/issue-259&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/androidweekly.net-259-orange.svg?style=flat-square&#34; alt=&#34;androidweekly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://androidweekly.cn/android-dev-wekly-issue-154/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/androidweekly.cn-154-orange.svg?style=flat-square&#34; alt=&#34;androidweekly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;As mentioned in...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.droidcon.com/2021/11/17/detekt-state-of-the-union-2/&#34;&gt;driodcon London 2021 - Detekt - State of the Union&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yjhQiP0329M&#34;&gt;KotlinConf 2018 - Safe(r) Kotlin Code - Static Analysis Tools for Kotlin by Marvin Ramin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LT6m5_LO2DQ&#34;&gt;droidcon NYC 2018 - Static Code Analysis For Kotlin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kotlin on Code Quality Tools - by @vanniktech &lt;a href=&#34;https://docs.google.com/presentation/d/1sUoQCRHTR01JfaS67Qkd7K1rdRLOhO6QGCelZZwxOKs/edit&#34;&gt;Slides&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=FKDNE6PPTTE&#34;&gt;Presentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.raywenderlich.com/24470020-integrating-detekt-in-the-workflow&#34;&gt;Integrating detekt in the Workflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.frankel.ch/check-quality-kotlin-code/&#34;&gt;Check the quality of Kotlin code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://smyachenkov.com/posts/kotlin-static-analysis-tools/&#34;&gt;Kotlin Static Analysis Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doi.org/10.1145/3267183.3267186&#34;&gt;Are you still smelling it?: A comparative study between Java and Kotlin language&lt;/a&gt; by &lt;a href=&#34;https://github.com/matheusflauzino/smells-experiment-Kotlin-and-Java&#34;&gt;Flauzino et al.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://galler.dev/preventing-software-antipatterns-with-detekt/&#34;&gt;Preventing software antipatterns with Detekt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Integrations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codacy.com&#34;&gt;Codacy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanniktech/gradle-code-quality-tools-plugin&#34;&gt;Gradle plugin that configures Error Prone, Checkstyle, PMD, CPD, Lint, Detekt &amp;amp; Ktlint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomasbjerre/violations-lib&#34;&gt;Violations Lib&lt;/a&gt; is a Java library for parsing report files like static code analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TouK/sputnik&#34;&gt;sputnik&lt;/a&gt; is a free tool for static code review and provides support for detekt&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/novoda/gradle-static-analysis-plugin&#34;&gt;Novoda Gradle Static Analysis plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ozsie/detekt-maven-plugin&#34;&gt;Detekt Maven plugin&lt;/a&gt; that wraps the Detekt CLI&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/buildfoundation/bazel_rules_detekt&#34;&gt;Detekt Bazel plugin&lt;/a&gt; that wraps the Detekt CLI&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/btkelly/gnag&#34;&gt;Gradle plugin that helps facilitate GitHub PR checking and automatic commenting of violations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codefactor.io/&#34;&gt;Codefactor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marketplace/actions/detekt-all&#34;&gt;GitHub Action: Detekt All&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/intellij-platform-plugin-template&#34;&gt;IntelliJ Platform Plugin Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marketplace/muse-dev&#34;&gt;Sonatype Lift&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Custom rules and reports from 3rd parties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cph-cachet/detekt-verify-implementation&#34;&gt;detekt-verify-implementation&lt;/a&gt; by cph-cachet&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mkohm/detekt-hint&#34;&gt;detekt-hint&lt;/a&gt; by mkohm is a plugin to detekt that provides detection of design principle violations through integration with Danger&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/cromefire_/detekt-gitlab-report&#34;&gt;GitLab report format&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Credits&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jetbrains/&#34;&gt;JetBrains&lt;/a&gt; - Creating IntelliJ + Kotlin&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pmd/pmd&#34;&gt;PMD&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/checkstyle/checkstyle&#34;&gt;Checkstyle&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt; - Ideas for threshold values and style rules&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>cashapp/turbine</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/cashapp/turbine</id>
    <link href="https://github.com/cashapp/turbine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A small testing library for kotlinx.coroutines Flow&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Turbine&lt;/h1&gt; &#xA;&lt;p&gt;Turbine is a small testing library for kotlinx.coroutines &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-flow/&#34;&gt;&lt;code&gt;Flow&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;flowOf(&#34;one&#34;, &#34;two&#34;).test {&#xA;  assertEquals(&#34;one&#34;, awaitItem())&#xA;  assertEquals(&#34;two&#34;, awaitItem())&#xA;  awaitComplete()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;A turbine is a rotary mechanical device that extracts energy from a fluid flow and converts it into useful work.&lt;/p&gt; &#xA; &lt;p&gt;– &lt;a href=&#34;https://en.wikipedia.org/wiki/Turbine&#34;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;  mavenCentral()&#xA;}&#xA;dependencies {&#xA;  testImplementation &#39;app.cash.turbine:turbine:0.8.0&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Snapshots of the development version are available in Sonatype&#39;s snapshots repository.&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;  maven {&#xA;    url &#39;https://oss.sonatype.org/content/repositories/snapshots/&#39;&#xA;  }&#xA;}&#xA;dependencies {&#xA;  testImplementation &#39;app.cash.turbine:turbine:0.9.0-SNAPSHOT&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;The entrypoint for the library is the &lt;code&gt;test&lt;/code&gt; extension for &lt;code&gt;Flow&amp;lt;T&amp;gt;&lt;/code&gt; which accepts a validation block. Like &lt;code&gt;collect&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; is a suspending function that will not return until the flow is complete or canceled.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;someFlow.test {&#xA;  // Validation code here!&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Consuming Events&lt;/h3&gt; &#xA;&lt;p&gt;Inside the &lt;code&gt;test&lt;/code&gt; block you must consume all received events from the flow. Failing to consume all events will fail your test.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;flowOf(&#34;one&#34;, &#34;two&#34;).test {&#xA;  assertEquals(&#34;one&#34;, awaitItem())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;Exception in thread &#34;main&#34; AssertionError:&#xA;  Unconsumed events found:&#xA;   - Item(two)&#xA;   - Complete&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;As the exception indicates, consuming the &lt;code&gt;&#34;two&#34;&lt;/code&gt; item is not enough. The complete event must also be consumed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;flowOf(&#34;one&#34;, &#34;two&#34;).test {&#xA;  assertEquals(&#34;one&#34;, awaitItem())&#xA;  assertEquals(&#34;two&#34;, awaitItem())&#xA;  awaitComplete()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Received events can be explicitly ignored, however.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;flowOf(&#34;one&#34;, &#34;two&#34;).test {&#xA;  assertEquals(&#34;one&#34;, awaitItem())&#xA;  cancelAndIgnoreRemainingEvents()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additionally, we can receive the most recent emitted item and ignore the previous ones.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;flowOf(&#34;one&#34;, &#34;two&#34;, &#34;three&#34;)&#xA;  .map {&#xA;    delay(100)&#xA;    it&#xA;  }&#xA;  .test {&#xA;    // 0 - 100ms -&amp;gt; no emission yet&#xA;    // 100ms - 200ms -&amp;gt; &#34;one&#34; is emitted&#xA;    // 200ms - 300ms -&amp;gt; &#34;two&#34; is emitted&#xA;    // 300ms - 400ms -&amp;gt; &#34;three&#34; is emitted&#xA;    delay(250)&#xA;    assertEquals(&#34;two&#34;, expectMostRecentItem())&#xA;    cancelAndIgnoreRemainingEvents()&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Consuming Errors&lt;/h3&gt; &#xA;&lt;p&gt;Unlike &lt;code&gt;collect&lt;/code&gt;, a flow which causes an exception will still be exposed as an event that you must consume.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;flow { throw RuntimeException(&#34;broken!&#34;) }.test {&#xA;  assertEquals(&#34;broken!&#34;, awaitError().message)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Failure to consume an error will result in the same unconsumed event exception as above, but with the exception added as the cause so that the full stacktrace is available.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;flow { throw RuntimeException(&#34;broken!&#34;) }.test { }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;java.lang.AssertionError: Unconsumed events found:&#xA; - Error(RuntimeException)&#xA;    at app.cash.turbine.ChannelBasedFlowTurbine.ensureAllEventsConsumed(FlowTurbine.kt:240)&#xA;    ... 53 more&#xA;Caused by: java.lang.RuntimeException: broken!&#xA;    at example.MainKt$main$1.invokeSuspend(Main.kt:7)&#xA;    ... 32 more&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Asynchronous Flows&lt;/h3&gt; &#xA;&lt;p&gt;Calls to &lt;code&gt;awaitItem()&lt;/code&gt;, &lt;code&gt;awaitComplete()&lt;/code&gt;, and &lt;code&gt;awaitError()&lt;/code&gt; are suspending and will wait for events from asynchronous flows.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;channelFlow {&#xA;  withContext(IO) {&#xA;    Thread.sleep(100)&#xA;    send(&#34;item&#34;)&#xA;  }&#xA;}.test {&#xA;  assertEquals(&#34;item&#34;, awaitItem())&#xA;  awaitComplete()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Asynchronous flows can be canceled at any time so long as you have consumed all emitted events. Allowing the &lt;code&gt;test&lt;/code&gt; lambda to complete will implicitly cancel the flow.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;channelFlow {&#xA;  withContext(IO) {&#xA;    repeat(10) {&#xA;      Thread.sleep(200)&#xA;      send(&#34;item $it&#34;)&#xA;    }&#xA;  }&#xA;}.test {&#xA;  assertEquals(&#34;item 0&#34;, awaitItem())&#xA;  assertEquals(&#34;item 1&#34;, awaitItem())&#xA;  assertEquals(&#34;item 2&#34;, awaitItem())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Flows can also be explicitly canceled at any point.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;channelFlow {&#xA;  withContext(IO) {&#xA;    repeat(10) {&#xA;      Thread.sleep(200)&#xA;      send(&#34;item $it&#34;)&#xA;    }&#xA;  }&#xA;}.test {&#xA;  Thread.sleep(700)&#xA;  cancel()&#xA;&#xA;  assertEquals(&#34;item 0&#34;, awaitItem())&#xA;  assertEquals(&#34;item 1&#34;, awaitItem())&#xA;  assertEquals(&#34;item 2&#34;, awaitItem())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Hot Flows&lt;/h3&gt; &#xA;&lt;p&gt;Emissions to hot flows that don&#39;t have active consumers are dropped. Call &lt;code&gt;test&lt;/code&gt; on a flow &lt;em&gt;before&lt;/em&gt; emitting or the item will be missed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val mutableSharedFlow = MutableSharedFlow&amp;lt;Int&amp;gt;(replay = 0)&#xA;mutableSharedFlow.emit(1)&#xA;mutableSharedFlow.test {&#xA;  assertEquals(awaitItem(), 1)&#xA;  cancelAndConsumeRemainingEvents()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;kotlinx.coroutines.test.UncompletedCoroutinesError: After waiting for 60000 ms, the test coroutine is not completing, there were active child jobs: [ScopeCoroutine{Completing}@478db956]&#xA;&#x9;at app//kotlinx.coroutines.test.TestBuildersKt__TestBuildersKt$runTestCoroutine$3$3.invokeSuspend(TestBuilders.kt:304)&#xA;&#x9;at ???(Coroutine boundary.?(?)&#xA;&#x9;at kotlinx.coroutines.test.TestBuildersKt__TestBuildersKt.runTestCoroutine(TestBuilders.kt:288)&#xA;&#x9;at kotlinx.coroutines.test.TestBuildersKt__TestBuildersKt$runTest$1$1.invokeSuspend(TestBuilders.kt:167)&#xA;&#x9;at kotlinx.coroutines.test.TestBuildersJvmKt$createTestResult$1.invokeSuspend(TestBuildersJvm.kt:13)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Proper usage of Turbine with hot flows looks like the following.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val mutableSharedFlow = MutableSharedFlow&amp;lt;Int&amp;gt;(replay = 0)&#xA;mutableSharedFlow.test {&#xA;  mutableSharedFlow.emit(1)&#xA;  assertEquals(awaitItem(), 1)&#xA;  cancelAndConsumeRemainingEvents()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The hot flow types Kotlin currently provides are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;MutableStateFlow&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;StateFlow&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;MutableSharedFlow&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SharedFlow&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Channels converted to flow with &lt;code&gt;Channel.consumeAsFlow&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Multiple turbines&lt;/h3&gt; &#xA;&lt;p&gt;Multiple flows can be tested at once using the &lt;code&gt;testIn&lt;/code&gt; function which returns the turbine test object which would otherwise be used as a lambda receiver in the &lt;code&gt;test&lt;/code&gt; function.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;runTest {&#xA;  val turbine1 = flowOf(1).testIn(this)&#xA;  val turbine2 = flowOf(2).testIn(this)&#xA;  assertEquals(1, turbine1.awaitItem())&#xA;  assertEquals(2, turbine2.awaitItem())&#xA;  turbine1.awaitComplete()&#xA;  turbine2.awaitComplete()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unconsumed events will throw an exception when the scope ends.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;runTest {&#xA;  val turbine1 = flowOf(1).testIn(this)&#xA;  val turbine2 = flowOf(2).testIn(this)&#xA;  assertEquals(1, turbine1.awaitItem())&#xA;  assertEquals(2, turbine2.awaitItem())&#xA;  turbine1.awaitComplete()&#xA;  // turbine2.awaitComplete()   &amp;lt;-- NEWLY COMMENTED OUT&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;kotlinx.coroutines.CompletionHandlerException: Exception in completion handler InvokeOnCompletion@6d167f58[job@3403e2ac] for TestScope[test started]&#xA;&#x9;at app//kotlinx.coroutines.JobSupport.completeStateFinalization(JobSupport.kt:320)&#xA;&#x9;at app//kotlinx.coroutines.JobSupport.tryFinalizeSimpleState(JobSupport.kt:295)&#xA;&#x9;... 70 more&#xA;Caused by: app.cash.turbine.AssertionError: Unconsumed events found:&#xA; - Complete&#xA;&#x9;at app//app.cash.turbine.ChannelBasedFlowTurbine.ensureAllEventsConsumed(FlowTurbine.kt:333)&#xA;&#x9;at app//app.cash.turbine.FlowTurbineKt$testIn$1.invoke(FlowTurbine.kt:115)&#xA;&#x9;at app//app.cash.turbine.FlowTurbineKt$testIn$1.invoke(FlowTurbine.kt:112)&#xA;&#x9;at app//kotlinx.coroutines.InvokeOnCompletion.invoke(JobSupport.kt:1391)&#xA;&#x9;at app//kotlinx.coroutines.JobSupport.completeStateFinalization(JobSupport.kt:318)&#xA;&#x9;... 72 more&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Unlike the &lt;code&gt;test&lt;/code&gt; lambda, flows are not automatically canceled. Long-running asynchronous or infinite flows must be explicitly canceled.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;runTest {&#xA;  val state = MutableStateFlow(1)&#xA;  val turbine = state.testIn(this)&#xA;  assertEquals(1, turbine.awaitItem())&#xA;  state.emit(2)&#xA;  assertEquals(2, turbine.awaitItem())&#xA;  turbine.cancel()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2018 Square, Inc.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>libre-tube/LibreTube</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/libre-tube/LibreTube</id>
    <link href="https://github.com/libre-tube/LibreTube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An alternative frontend for YouTube, for Android. [WIP]&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://libre-tube.github.io/assets/gh-banner.png&#34; width=&#34;auto&#34; height=&#34;auto&#34; alt=&#34;LibreTube&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/license-widget.svg?sanitize=true&#34; alt=&#34;GPL-v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#LibreTube:matrix.org&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/mat-widget.svg?sanitize=true&#34; alt=&#34;Matrix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/libretube&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/tg-widget.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/libretube&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/tw-widget.svg?sanitize=true&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/Libretube/&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/rd-widget.svg?sanitize=true&#34; alt=&#34;Reddit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.github.libretube/&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/fdrload.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libre-tube/LibreTube/releases/latest&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/ghload.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/LibreTube&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/tgload.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_1.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_2.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_3.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_3.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_4.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_4.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_5.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_5.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_6.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_6.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_7.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_7.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_8.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_8.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_9.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_9.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User Accounts&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Subscriptions&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User Playlists&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Channel Playlists&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Search Filters&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SponsorBlock&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Subtitles&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Comments&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Whether you have ideas, translations, design changes, code cleaning, or real heavy code changes, help is always welcome. The more is done the better it gets!&lt;/p&gt; &#xA;&lt;p&gt;WARNING: THIS IS A BETA VERSION, THEREFORE YOU MAY ENCOUNTER BUGS. IF YOU DO, OPEN AN ISSUE VIA OUR GITHUB REPOSITORY.&lt;/p&gt; &#xA;&lt;h3&gt;Translation&lt;/h3&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/projects/libretube/#languages&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/libretube/-/287x66-grey.png&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Donate&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;BTC:&lt;/strong&gt; &lt;code&gt;bc1q0hk2smc74ej8fxupfrp05wk867e54e2zztnxfc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;XMR:&lt;/strong&gt; &lt;code&gt;44txdmy4E5bDzMYQJh1ZSoHbrp1sWfpGa2FYg26L2ya8EaRejPsh42yVrYhepW9P4YWvrqmTZvms35z5FDgqy1xcVewk18d&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mirrors (read-only)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/libretube/LibreTube&#34;&gt;GitLab&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>2dust/v2rayNG</title>
    <updated>2022-06-03T01:43:39Z</updated>
    <id>tag:github.com,2022-06-03:/2dust/v2rayNG</id>
    <link href="https://github.com/2dust/v2rayNG" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A V2Ray client for Android, support Xray core and v2fly core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;v2rayNG&lt;/h1&gt; &#xA;&lt;p&gt;A V2Ray client for Android, support &lt;a href=&#34;https://github.com/XTLS/Xray-core&#34;&gt;Xray core&lt;/a&gt; and &lt;a href=&#34;https://github.com/v2fly/v2ray-core&#34;&gt;v2fly core&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/about/versions/lollipop&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API-21%2B-yellow.svg?style=flat&#34; alt=&#34;API&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Kotlin-1.6.10-blue.svg?sanitize=true&#34; alt=&#34;Kotlin Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/2dust/v2rayNG/commits/master&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/2dust/v2rayNG&#34; alt=&#34;GitHub commit activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/2dust/v2rayng&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/2dust/v2rayng/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/2dust/v2rayNG/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/2dust/v2rayNG/latest/total?logo=github&#34; alt=&#34;GitHub Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/v2rayn&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Chat%20on-Telegram-brightgreen.svg?sanitize=true&#34; alt=&#34;Chat on Telegram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.v2ray.ang&#34;&gt; &lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png&#34; width=&#34;165&#34; height=&#34;64&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;h4&gt;Geoip and Geosite&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;geoip.dat and geosite.dat files are in &lt;code&gt;Android/data/com.v2ray.ang/files/assets&lt;/code&gt; (path may differ on some Android device)&lt;/li&gt; &#xA; &lt;li&gt;download feature will get enhanced version in this &lt;a href=&#34;https://github.com/Loyalsoldier/v2ray-rules-dat&#34;&gt;repo&lt;/a&gt; (Note it need a working proxy)&lt;/li&gt; &#xA; &lt;li&gt;latest official &lt;a href=&#34;https://github.com/v2fly/domain-list-community&#34;&gt;domain list&lt;/a&gt; and &lt;a href=&#34;https://github.com/v2fly/geoip&#34;&gt;ip list&lt;/a&gt; can be imported manually&lt;/li&gt; &#xA; &lt;li&gt;possible to use third party dat file in the same folder, like &lt;a href=&#34;https://guide.v2fly.org/routing/sitedata.html#%E5%A4%96%E7%BD%AE%E7%9A%84%E5%9F%9F%E5%90%8D%E6%96%87%E4%BB%B6&#34;&gt;h2y&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;More in our &lt;a href=&#34;https://github.com/2dust/v2rayNG/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h3&gt;Development guide&lt;/h3&gt; &#xA;&lt;p&gt;Android project under V2rayNG folder can be compiled directly in Android Studio, or using Gradle wrapper. But the v2ray core inside the aar is (probably) outdated.&lt;br&gt; The aar can be compiled from the Golang project under AndroidLibV2rayLite folder. For a quick start, read guide for &lt;a href=&#34;https://github.com/golang/go/wiki/Mobile&#34;&gt;Go Mobile&lt;/a&gt; and &lt;a href=&#34;https://tutorialedge.net/golang/makefiles-for-go-developers/&#34;&gt;Makefiles for Go Developers&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;v2rayNG can run on Android Emulators. For WSA, VPN permission need to be granted via &lt;code&gt;appops set [package name] ACTIVATE_VPN allow&lt;/code&gt;&lt;/p&gt;</summary>
  </entry>
</feed>