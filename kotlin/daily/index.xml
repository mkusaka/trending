<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-15T01:38:42Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>hmrc/tax-kalculator</title>
    <updated>2023-03-15T01:38:42Z</updated>
    <id>tag:github.com,2023-03-15:/hmrc/tax-kalculator</id>
    <link href="https://github.com/hmrc/tax-kalculator" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin Multiplatform Project for calculating take-home pay 💰&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;tax-kalculator&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.bitrise.io/app/cd7fb52c258b9273&#34;&gt;&lt;img src=&#34;https://app.bitrise.io/app/cd7fb52c258b9273/status.svg?token=lntO8o4xz5AUEvLwVzbo3A&amp;amp;branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitHub.com/hmrc/tax-kalculator/releases/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/hmrc/tax-kalculator.svg?sanitize=true&#34; alt=&#34;Github&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/SwiftPM-Compatible-success.svg?sanitize=true&#34; alt=&#34;swift-pm&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Contents&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/#calculate-take-home-pay&#34;&gt;Calculate take-home pay&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/#utilities&#34;&gt;Utilities&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/#validation&#34;&gt;Validation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/#development&#34;&gt;Development&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/#usage&#34;&gt;Usage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/#release-process&#34;&gt;Release process&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/#how-to-update-rates-for%E2%80%93new-tax-years&#34;&gt;How to update rates for new tax years&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Calculate take home pay&lt;/h2&gt; &#xA;&lt;p&gt;Create an instance of &lt;code&gt;Calculator&lt;/code&gt;, providing values as per the following example:&lt;/p&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val calculator = Calculator(&#xA;    taxCode = &#34;1257L&#34;,               // Required&#xA;    wages = 20000.0,                 // Required&#xA;    payPeriod = YEARLY,              // Required&#xA;    isPensionAge = false,            // Optional (Default: false)&#xA;    howManyAWeek = null,             // Optional (Default: null)&#xA;    taxYear = TaxYear.currentTaxYear // Optional (Default: Current Tax Year)&#xA;)&#xA;&#xA;val response = calculator.run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let calculator = Calculator(&#xA;    taxCode: &#34;1257L&#34;,&#xA;    wages: 20000.0,&#xA;    payPeriod: period,&#xA;    isPensionAge: false,&#xA;    howManyAWeek: KotlinDouble(double: 35),&#xA;    taxYear: TaxYear.companion.currentTaxYear&#xA;)&#xA;&#xA;let calculation = try calculator.run()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The default values are working in Android (and other JVM) but currently do not seem to be present in iOS, so pass in the default values for now.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Returns an object of type &lt;code&gt;CalculatorResponse&lt;/code&gt;. This class is broken up into &lt;code&gt;weekly&lt;/code&gt;, &lt;code&gt;four_weekly&lt;/code&gt;, &lt;code&gt;monthly&lt;/code&gt; and &lt;code&gt;yearly&lt;/code&gt;. Each of these members is of type &lt;code&gt;CalculatorResponsePayPeriod&lt;/code&gt; and the members of this class are what will return the values (relative to their PayPeriod) needed for the app, they are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;taxToPay&lt;/code&gt; of type &lt;code&gt;Double&lt;/code&gt; (This will be capped at a maximum of 50% of their wages)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;maxTaxAmountExceeded&lt;/code&gt; of type &lt;code&gt;Boolean&lt;/code&gt; (This will always be false unless taxToPay is adjusted for 50%)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;employeesNI&lt;/code&gt; of type &lt;code&gt;Double&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;employersNI&lt;/code&gt; of type &lt;code&gt;Double&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;wages&lt;/code&gt; of type &lt;code&gt;Double&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;taxBreakdown&lt;/code&gt; of type &lt;code&gt;List&amp;lt;BandBreakdown&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;taxFree&lt;/code&gt; of type &lt;code&gt;Double&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;totalDeductions&lt;/code&gt; of type &lt;code&gt;Double&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;takeHome&lt;/code&gt; of type &lt;code&gt;Double&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;For tax breakdown this is the amount of tax per tax band which has two members, &lt;code&gt;percentage: Double&lt;/code&gt; and &lt;code&gt;amount: Double&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Utilities&lt;/h2&gt; &#xA;&lt;h3&gt;Default Tax Code&lt;/h3&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val taxCode = CalculatorUtils.defaultTaxCode(taxYear = 2022)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let taxCode = CalculatorUtils.shared.defaultTaxCode(taxYear: 2022)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Current Tax Year&lt;/h3&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val year = CalculatorUtils.currentTaxYear()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let year = CalculatorUtils.shared.currentTaxYear()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Validation&lt;/h2&gt; &#xA;&lt;h3&gt;Validate a tax code:&lt;/h3&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val isValid = TaxCodeValidator.isValidTaxCode(taxCode = &#34;1257L&#34;) // TaxCodeValidationResponse(true)&#xA;val isValid = TaxCodeValidator.isValidTaxCode(taxCode = &#34;OO9999&#34;) // TaxCodeValidationResponse(false, ValidationError.WrongTaxCodePrefix)&#xA;val isValid = TaxCodeValidator.isValidTaxCode(taxCode = &#34;9999R&#34;) // TaxCodeValidationResponse(false, ValidationError.WrongTaxCodeSuffix)&#xA;val isValid = TaxCodeValidator.isValidTaxCode(taxCode = &#34;HELLO&#34;) // TaxCodeValidationResponse(false, ValidationError.WrongTaxCodeNumber)&#xA;val isValid = TaxCodeValidator.isValidTaxCode(taxCode = &#34;110&#34;) // TaxCodeValidationResponse(false, ValidationError.Other)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let isValid = TaxCodeValidator.shared.isValidTaxCode(taxCode: &#34;1257L&#34;) // TaxCodeValidationResponse(true)&#xA;let isValid = TaxCodeValidator.shared.isValidTaxCode(taxCode: &#34;OO9999&#34;) // TaxCodeValidationResponse(false, ValidationError.WrongTaxCodePrefix)&#xA;let isValid = TaxCodeValidator.shared.isValidTaxCode(taxCode: &#34;9999R&#34;) // TaxCodeValidationResponse(false, ValidationError.WrongTaxCodeSuffix)&#xA;let isValid = TaxCodeValidator.shared.isValidTaxCode(taxCode: &#34;HELLO&#34;) // TaxCodeValidationResponse(false, ValidationError.WrongTaxCodeNumber)&#xA;let isValid = TaxCodeValidator.shared.isValidTaxCode(taxCode: &#34;110&#34;) // TaxCodeValidationResponse(false, ValidationError.Other)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Validate wages:&lt;/h3&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val isValidWages = WageValidator.isValidWages(wages = 1000) // true&#xA;val isAboveMinimumWages = WageValidator.isAboveMinimumWages(wages = 0.0) // false&#xA;val isBelowMaximumWages = WageValidator.isBelowMaximumWages(wages = 120000.0) // true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;iOS&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let isValidWages = WageValidator.shared.isValidWages(wages: 1000) // true&#xA;let isAboveMinimumWages = WageValidator.shared.isAboveMinimumWages(wages: 0.0) // false&#xA;let isBelowMaximumWages = WageValidator.shared.isBelowMaximumWages(wages: 120000.0) // true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Validate hours worked per week:&lt;/h3&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val isValidHoursPerWeek = HoursDaysValidator.isValidHoursPerWeek(hours = 20) // true&#xA;val isAboveMinimumHoursPerWeek = HoursDaysValidator.isAboveMinimumHoursPerWeek(hours = 1.0) // true&#xA;val isBelowMaximumHoursPerWeek = HoursDaysValidator.isBelowMaximumHoursPerWeek(hours = 170.0) // false&#xA;val isValidHoursPerDay = HoursDaysValidator.isValidHoursPerDay(hours = 20) // true&#xA;val isAboveMinimumHoursPerDay = HoursDaysValidator.isAboveMinimumHoursPerDay(hours = 1.0) // true&#xA;val isBelowMaximumHoursPerDay = HoursDaysValidator.isBelowMaximumHoursPerDay(hours = 25.0) // false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Android&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let isValidHoursPerWeek = HoursDaysValidator.shared.isValidHoursPerWeek(hours: 20) // true&#xA;let isAboveMinimumHoursPerWeek = HoursDaysValidator.shared.isAboveMinimumHoursPerWeek(hours: 1.0) // true&#xA;let isBelowMaximumHoursPerWeek = HoursDaysValidator.shared.isBelowMaximumHoursPerWeek(hours: 170.0) // false&#xA;let isValidHoursPerDay = HoursDaysValidator.shared.isValidHoursPerDay(hours: 20) // true&#xA;let isAboveMinimumHoursPerDay = HoursDaysValidator.shared.isAboveMinimumHoursPerDay(hours: 1.0) // true&#xA;let isBelowMaximumHoursPerDay = HoursDaysValidator.shared.isBelowMaximumHoursPerDay(hours: 25.0) // false&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;p&gt;To run all tests and coverage verification:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew check&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;iOS&lt;/h3&gt; &#xA;&lt;h4&gt;Swift Package Manager&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Because this operates as a closed source, binary dependency, Swift PM will only work with tagged releases and not branches.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;https://github.com/hmrc/tax-kalculator&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Simulator Architectures:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If the framework is downloaded and linked in the project, it&#39;ll be necessary to strip unwanted architectures in a build step. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For example, you may want to implement something like &lt;a href=&#34;http://ikennd.ac/blog/2015/02/stripping-unwanted-architectures-from-dynamic-libraries-in-xcode/&#34;&gt;this&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Android &amp;amp; JVM&lt;/h3&gt; &#xA;&lt;p&gt;Add the Github Package repository to your top-level &lt;code&gt;build.gradle&lt;/code&gt;, along with a Github username and access token (no permissions required).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;    maven {&#xA;        url = &#34;https://maven.pkg.github.com/hmrc/tax-kalculator&#34;&#xA;        credentials {&#xA;            username = System.getenv(&#34;GITHUB_USER_NAME&#34;)&#xA;            password = System.getenv(&#34;GITHUB_TOKEN&#34;)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the dependency in the &lt;code&gt;build.gradle&lt;/code&gt; of the module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencies {&#xA;    implementation &#34;uk.gov.hmrc:tax-kalculator-jvm:x.y.z&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Release process&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;bundle exec fastlane tag_release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Required&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A valid Bitrise access token saved in your path under the variable name &lt;code&gt;BITRISE_TOKEN&lt;/code&gt;. See &lt;a href=&#34;https://devcenter.bitrise.io/api/authentication&#34;&gt;Bitrise docs&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Two environment variables, &lt;code&gt;TAX_KALC_APP_SLUG&lt;/code&gt; &amp;amp; &lt;code&gt;TAX_KALC_RELEASE_WORKFLOW_ID&lt;/code&gt; will also need to be included in your bash/ZSH profile. Speak with &lt;a href=&#34;https://github.com/chrisob55&#34;&gt;Chris&lt;/a&gt; to obtain these values.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Steps executed&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ensure git status is clean&lt;/li&gt; &#xA; &lt;li&gt;Ensure &lt;code&gt;main&lt;/code&gt; branch&lt;/li&gt; &#xA; &lt;li&gt;Through the interactive shell, select the tag version using semantic versioning.&lt;/li&gt; &#xA; &lt;li&gt;Locally executes &lt;code&gt;build_xcframework.sh&lt;/code&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Creates an XCFramework&lt;/li&gt; &#xA;   &lt;li&gt;Computes and updates the checksum in the Swift Package declaration.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Stamps the changelog&lt;/li&gt; &#xA; &lt;li&gt;Commit and push the updated &lt;code&gt;Package.swift&lt;/code&gt; and &lt;code&gt;CHANGELOG.md&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Upload release artifacts to tagged Github release&lt;/li&gt; &#xA; &lt;li&gt;Executes &lt;code&gt;release.sh&lt;/code&gt; to start the CI pipeline on CI.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to update rates for new tax years&lt;/h2&gt; &#xA;&lt;h3&gt;Tax Bands&lt;/h3&gt; &#xA;&lt;p&gt;Each tax band is represented with the following data structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;internal data class TaxBand(&#xA;    override var lower: Double, // lower threshold of band&#xA;    override var upper: Double, // upper threshold of band&#xA;    override val percentageAsDecimal: Double // tax rate of band&#xA;) : Band&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://github.com/hmrc/tax-kalculator/raw/main/src/commonMain/kotlin/uk/gov/hmrc/calculator/model/bands/TaxBands.kt&#34;&gt;&lt;code&gt;TaxBands.kt&lt;/code&gt;&lt;/a&gt; update bands as specified by the business.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Usually England and Wales have the same bands. Whereas Scotland&#39;s are different.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// England and Wales&#xA;private fun restOfUK2022Bands() = listOf(&#xA;    TaxBand(0.0, 37700.00, 0.2),&#xA;    TaxBand(37700.00, 150000.00, 0.4),&#xA;    TaxBand(150000.0, -1.0, 0.45)&#xA;)&#xA;&#xA;// Scotland&#xA;private fun scottish2022Bands() = listOf(&#xA;    TaxBand(0.00, 2162.00, 0.19),&#xA;    TaxBand(2162.00, 13118.00, 0.20),&#xA;    TaxBand(13118.00, 31092.00, 0.21),&#xA;    TaxBand(31092.00, 150000.00, 0.41),&#xA;    TaxBand(150000.00, -1.0, 0.46)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;National Insurance Bands&lt;/h3&gt; &#xA;&lt;p&gt;Employee and Employer bands are represented with the following data structures:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;internal data class EmployeeNIBand(&#xA;    override var lower: Double, // lower threshold of band&#xA;    override var upper: Double, // upper threshold of band&#xA;    override val percentageAsDecimal: Double // tax rate of band&#xA;) : Band&#xA;&#xA;internal data class EmployerNIBand(&#xA;    override var lower: Double, // lower threshold of band&#xA;    override var upper: Double, // upper threshold of band&#xA;    override val percentageAsDecimal: Double // tax rate of band&#xA;) : Band&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In &lt;a href=&#34;https://github.com/hmrc/tax-kalculator/raw/main/src/commonMain/kotlin/uk/gov/hmrc/calculator/model/bands/EmployeeNIBands.kt&#34;&gt;&lt;code&gt;EmployeeNIBands.kt&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://github.com/hmrc/tax-kalculator/raw/main/src/commonMain/kotlin/uk/gov/hmrc/calculator/model/bands/EmployerNIBands.kt&#34;&gt;&lt;code&gt;EmployerNIBands.kt&lt;/code&gt;&lt;/a&gt; update bands as specified by the business.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;private val employeeNIBands2022: List&amp;lt;EmployeeNIBand&amp;gt; = listOf(&#xA;    EmployeeNIBand(9880.0, 50270.00, 0.1325),&#xA;    EmployeeNIBand(50270.0, -1.0, 0.0325)&#xA;)&#xA;&#xA;private val employerNIBands2022: List&amp;lt;EmployerNIBand&amp;gt; = listOf(&#xA;    EmployerNIBand(9100.0, 50270.00, 0.1505),&#xA;    EmployerNIBand(50270.0, -1.0, 0.1505)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This code is open source software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/hmrc/tax-kalculator/main/%22http://www.apache.org/licenses/LICENSE-2.0.html%22&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fcitx5-android/fcitx5-android</title>
    <updated>2023-03-15T01:38:42Z</updated>
    <id>tag:github.com,2023-03-15:/fcitx5-android/fcitx5-android</id>
    <link href="https://github.com/fcitx5-android/fcitx5-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An attempt to run fcitx5 on Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fcitx5-android&lt;/h1&gt; &#xA;&lt;p&gt;An attempt to run fcitx5 on Android.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;h3&gt;Latest CI builds&lt;/h3&gt; &#xA;&lt;p&gt;Jenkins: &lt;a href=&#34;https://jenkins.fcitx-im.org/job/android/job/fcitx5-android/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build.svg?jobUrl=https://jenkins.fcitx-im.org/job/android/job/fcitx5-android/&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tagged releases&lt;/h3&gt; &#xA;&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/fcitx5-android/fcitx5-android/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/fcitx5-android/fcitx5-android&#34; alt=&#34;release version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/org.fcitx.fcitx5.android&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; width=&#34;207&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.fcitx.fcitx5.android&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt;&lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;207&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project status&lt;/h2&gt; &#xA;&lt;h3&gt;Implemented&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Virtual Keyboard (layout not customizable yet)&lt;/li&gt; &#xA; &lt;li&gt;Expandable candidate view&lt;/li&gt; &#xA; &lt;li&gt;Clipboard management (plain text only)&lt;/li&gt; &#xA; &lt;li&gt;Theming (custom color scheme and background image)&lt;/li&gt; &#xA; &lt;li&gt;Popup preview on key press&lt;/li&gt; &#xA; &lt;li&gt;Long press popup keyboard for convenient symbol input&lt;/li&gt; &#xA; &lt;li&gt;Symbol and Emoji picker&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Work in progress&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizable keyboard layout&lt;/li&gt; &#xA; &lt;li&gt;More input methods&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;拼音, Material Light theme, key border enabled&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;自然码双拼, Pixel Dark theme, key border disabled&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202180575-04b6db41-ff24-4bef-899a-8051fc0243f5.png&#34; width=&#34;360px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202180709-457e4897-961f-48a6-8fb2-b6560568a122.png&#34; width=&#34;360px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Emoji picker, Pixel Light theme, key border enabled&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Symbol picker, Material Dark theme, key border disabled&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202181845-6a5f6bb2-a877-468c-851a-fd7e66e64ed4.png&#34; width=&#34;360px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202181861-dd253439-1d5e-4f5f-9535-934f28796a6b.png&#34; width=&#34;360px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get involved&lt;/h2&gt; &#xA;&lt;p&gt;Trello kanban: &lt;a href=&#34;https://trello.com/b/gftk6ZdV/kanban&#34;&gt;https://trello.com/b/gftk6ZdV/kanban&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Matrix Room: &lt;a href=&#34;https://matrix.to/#/#fcitx5-android:mozilla.org&#34;&gt;https://matrix.to/#/#fcitx5-android:mozilla.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Discuss on Telegram: &lt;a href=&#34;https://t.me/+hci-DrFVWUM3NTUx&#34;&gt;https://t.me/+hci-DrFVWUM3NTUx&lt;/a&gt; (&lt;a href=&#34;https://t.me/fcitx5_android&#34;&gt;@fcitx5_android&lt;/a&gt; originally)&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android SDK Platform &amp;amp; Build-Tools 33.&lt;/li&gt; &#xA; &lt;li&gt;Android NDK (Side by side) 25 &amp;amp; CMake 3.22.1, they can be installed using SDK Manager in Android Studio or &lt;code&gt;sdkmanager&lt;/code&gt; command line. &lt;strong&gt;Note:&lt;/strong&gt; NDK 21 &amp;amp; 22 are confirmed not working with this project.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KDE/extra-cmake-modules&#34;&gt;KDE/extra-cmake-modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GNU Gettext &amp;gt;= 0.20 (for &lt;code&gt;msgfmt&lt;/code&gt; binary; or install &lt;code&gt;appstream&lt;/code&gt; if you really have to use gettext &amp;lt;= 0.19.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to set up development environment&lt;/h3&gt; &#xA;&lt;p&gt;First, clone this repository and fetch all submodules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone git@github.com:fcitx5-android/fcitx5-android.git&#xA;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install extra-cmake-modules from your distribution software repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# For Arch Linux (Arch has gettext in it&#39;s base meta package)&#xA;sudo pacman -S extra-cmake-modules&#xA;# For Debian/Ubuntu&#xA;sudo apt install extra-cmake-modules gettext&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install Android SDK Platform, Android SDK Build-Tools, Android NDK and cmake via SDK Manager in Android Studio:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Detailed steps (screenshots)&lt;/summary&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202184493-3ee1546b-0a83-4cc9-9e41-d20b0904a0cf.png&#34; alt=&#34;Open SDK Manager&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202184534-340a9e7c-7c42-49bd-9cf5-1ec9dcafcf32.png&#34; alt=&#34;Install SDK Platform&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202185945-0c7a9f39-1fcc-4018-9c81-b3d2bf1c2d3f.png&#34; alt=&#34;Install SDK Build-Tools&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202185601-0cf877ea-e148-4b88-bd2f-70533189b3d4.png&#34; alt=&#34;Install NDK&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202184655-3c1ab47c-432f-4bd7-a508-92096482de50.png&#34; alt=&#34;Install CMake&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Nix&lt;/h2&gt; &#xA;&lt;p&gt;Appropriate Android SDK with NDK is available in the development shell. The &lt;code&gt;gradlew&lt;/code&gt; should work out-of-the-box, so you can install the app to your phone with &lt;code&gt;./gradlew installDebug&lt;/code&gt; after applying the patch mentioned above. For development, you may want to install the unstable version of Android Studio, and point the project SDK path to &lt;code&gt;$ANDROID_SDK_ROOT&lt;/code&gt; defined in the shell. Notice that Android Studio may generate wrong &lt;code&gt;local.properties&lt;/code&gt; which sets the SDK location to &lt;code&gt;~/Android/SDK&lt;/code&gt; (installed by SDK Manager). In such case, you need specify &lt;code&gt;sdk.dir&lt;/code&gt; as the project SDK in that file manually, in case Android Studio sticks to the wrong global SDK.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>M0Coding/Pokedex</title>
    <updated>2023-03-15T01:38:42Z</updated>
    <id>tag:github.com,2023-03-15:/M0Coding/Pokedex</id>
    <link href="https://github.com/M0Coding/Pokedex" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pokedex - a Kotlin Multiplatform app, built with Compose multiplatform, Coroutines, Flow, Koin, Ktor, SqlDelight, Decompose, MVIKotlin, and Material 3 based on MVI architecture&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pokedex&lt;/h1&gt; &#xA;&lt;p&gt;Pokedex is kotlin multiplatform project with 99% shared code, built with Compose multiplatform, Coroutines, Flow, Decompose, MVIKotlin, Koin, Ktor, SqlDelight, and Material 3 based on MVI architecture &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/41842296/224551967-1c09e59d-25c2-4a7b-ace8-4676cfd26672.png&#34; alt=&#34;pokedex&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Open-source libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt; based, &lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;Coroutines&lt;/a&gt; + &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/&#34;&gt;Flow&lt;/a&gt; for asynchronous.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.serialization&#34;&gt;Kotlin Serialization&lt;/a&gt;: Kotlin multiplatform / multi-format serialization.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform&#34;&gt;Compose multiplatform&lt;/a&gt;: a modern UI framework for Kotlin.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arkivanov/Decompose&#34;&gt;Decompose&lt;/a&gt;: for navigation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ktorio/ktor&#34;&gt;Ktor&lt;/a&gt;: for making network requests.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cashapp/sqldelight&#34;&gt;SqlDelight&lt;/a&gt;: for caching data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/InsertKoinIO/koin&#34;&gt;Koin&lt;/a&gt;: a pragmatic lightweight dependency injection framework.&lt;/li&gt; &#xA; &lt;li&gt;Architecture &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MVI Architecture (&lt;a href=&#34;https://github.com/arkivanov/MVIKotlin/&#34;&gt;MVIKotlin&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Repository Pattern&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://m3.material.io/components&#34;&gt;Material 3&lt;/a&gt;: Material 3 components.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;div style=&#34;display: flex; width: 100%&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/41842296/224555659-f75bcddc-21a9-42f4-804d-198a5f06dcb1.png&#34; width=&#34;31%&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/41842296/224555672-03a6dcd5-f26f-4ecf-aa1e-3db66d278b8b.png&#34; width=&#34;31%&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/41842296/224555677-1fc807fc-57c6-46e0-bb27-afa085181a5c.png&#34; width=&#34;31%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;IOS&lt;/h3&gt; &#xA;&lt;div style=&#34;display: flex&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/41842296/224555698-71d1fb5d-9359-483b-8d98-64f952a44a60.png&#34; width=&#34;31%&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/41842296/224555703-5a53cc2c-5375-4b07-bac1-aed03f34ca87.png&#34; width=&#34;31%&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/41842296/224555708-05edf0fa-7b74-4f2b-b4fd-f4d7d82e911b.png&#34; width=&#34;31%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Desktop&lt;/h3&gt; &#xA;&lt;img width=&#34;1511&#34; alt=&#34;Screenshot 2023-03-12 at 4 44 04 PM&#34; src=&#34;https://user-images.githubusercontent.com/41842296/224555755-5d033ac5-061e-41d7-92b1-4e5c807dfb67.png&#34;&gt; &#xA;&lt;h2&gt;PokeAPI&lt;/h2&gt; &#xA;&lt;div&gt;&#xA;  Pokedex uses [PokeAPI](https://pokeapi.co/) for fetching data related to Pokémon. &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/83422649-d1b1d980-a464-11ea-8c91-a24fdf89cd6b.png&#34; align=&#34;right&#34; width=&#34;21%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.github.com/M0Coding&#34;&gt;@M0Coding&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🔗 Social Links&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.linkedin.com/in/mohamed-benrejeb/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/linkedin-0A66C2?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white&#34; alt=&#34;linkedin&#34;&gt;&lt;/a&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/M0Coding&#34;&gt;Follow me&lt;/a&gt; on GitHub&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;Copyright 2023 M0Coding (Mohamed Ben Rejeb)&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>