<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-26T01:30:26Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MohamedRejeb/Calf</title>
    <updated>2023-08-26T01:30:26Z</updated>
    <id>tag:github.com,2023-08-26:/MohamedRejeb/Calf</id>
    <link href="https://github.com/MohamedRejeb/Calf" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Calf is a library that allows you to easily create adaptive UIs for your Compose Multiplatform apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Calf - Compose Adaptive Look &amp;amp; Feel&lt;/h1&gt; &#xA;&lt;p&gt;Calf is a library that allows you to easily create adaptive UIs for your Compose Multiplatform apps.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-1.9.0-blue.svg?logo=kotlin&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MohamedRejeb&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/MohamedRejeb/main/badges/mohamedrejeb.svg?sanitize=true&#34; alt=&#34;MohamedRejeb&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-green.svg?sanitize=true&#34; alt=&#34;Apache-2.0&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MohamedRejeb/ksoup/actions&#34;&gt;&lt;img src=&#34;https://shields.io/badge/build-passing-brightgreen&#34; alt=&#34;BuildPassing&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=g:%22com.mohamedrejeb.calf%22%20AND%20a:%calf-ui%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.mohamedrejeb.calf/calf-ui&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/thumbnail.png&#34; alt=&#34;Calf thumbnail&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Calf stands for &lt;strong&gt;C&lt;/strong&gt;ompose &lt;strong&gt;A&lt;/strong&gt;daptive &lt;strong&gt;L&lt;/strong&gt;ook &amp;amp; &lt;strong&gt;F&lt;/strong&gt;eel&lt;/p&gt; &#xA;&lt;h2&gt;Artifacts&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Artifact&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Platforms&lt;/th&gt; &#xA;   &lt;th&gt;Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;calf-ui&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adaptive UI components&lt;/td&gt; &#xA;   &lt;td&gt;Android, iOS, Desktop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.maven.org/search?q=g:%22com.mohamedrejeb.calf%22%20AND%20a:%calf-ui%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.mohamedrejeb.calf/calf-ui&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;calf-file-picker&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Native File Picker wrapper&lt;/td&gt; &#xA;   &lt;td&gt;Android, iOS, Desktop&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://search.maven.org/search?q=g:%22com.mohamedrejeb.calf%22%20AND%20a:%calf-file-picker%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.mohamedrejeb.calf/calf-file-picker&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;calf-navigation&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Native navigation wrapper&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;calf-map&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Native Maps wrapper&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;calf-media&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Video/Audio player&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;calf-permissions&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;API that allows you to handle permissions&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;calf-notification&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Notification manager&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;calf-sf-symbols&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Apple SF Symbols icons&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;   &lt;td&gt;Coming soon... 🚧 🚧&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The main focus for now is Android and iOS, but more Desktop components are coming that allows you to create adaptive UIs for Desktop as well (Windows, macOS, Linux)&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/search?q=g:%22com.mohamedrejeb.calf%22%20AND%20a:%calf-ui%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.mohamedrejeb.calf/calf-ui&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Add the following dependency to your module &lt;code&gt;build.gradle.kts&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// For Adaptive UI components&#xA;implementation(&#34;com.mohamedrejeb.calf:calf-ui:0.1.1&#34;)&#xA;&#xA;// For Adaptive FilePicker&#xA;implementation(&#34;com.mohamedrejeb.calf:calf-file-picker:0.1.1&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you are using &lt;code&gt;calf-ui&lt;/code&gt; artifact, make sure to export it to binaries:&lt;/p&gt; &#xA;&lt;h4&gt;Regular Framewoek&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;...&#xA;kotlin {&#xA;    ...&#xA;    targets&#xA;        .filterIsInstance&amp;lt;KotlinNativeTarget&amp;gt;()&#xA;        .filter { it.konanTarget.family == Family.IOS }&#xA;        .forEach {&#xA;            it.binaries.framework {&#xA;                ...&#xA;                export(&#34;com.mohamedrejeb.calf:calf-ui:0.1.1&#34;)&#xA;            }&#xA;        }&#xA;    ...&#xA;}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;...&#xA;kotlin {&#xA;    ...&#xA;    cocoapods {&#xA;        ...&#xA;        framework {&#xA;            ...&#xA;            export(&#34;com.mohamedrejeb.calf:calf-ui:0.1.1&#34;)&#xA;        }&#xA;    }&#xA;    ...&#xA;}&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Exporting &lt;code&gt;calf-ui&lt;/code&gt; to binaries is required to make it work on iOS.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;h3&gt;Calf UI&lt;/h3&gt; &#xA;&lt;h4&gt;AdaptiveAlertDialog&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;AdaptiveAlertDialog&lt;/code&gt; is a dialog that adapts to the platform it is running on. It is a wrapper around &lt;code&gt;AlertDialog&lt;/code&gt; on Android and &lt;code&gt;UIAlertController&lt;/code&gt; on iOS.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveAlertDialog-android.png&#34; alt=&#34;Alert Dialog Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveAlertDialog-ios.png&#34; alt=&#34;Alert Dialog iOS&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;var showDialog by remember { mutableStateOf(false) }&#xA;&#xA;Button(&#xA;    onClick = { showDialog = true },&#xA;) {&#xA;    Text(&#34;Show Alert Dialog&#34;)&#xA;}&#xA;&#xA;if (showDialog) {&#xA;    AdaptiveAlertDialog(&#xA;        onConfirm = { showDialog = false },&#xA;        onDismiss = { showDialog = false },&#xA;        confirmText = &#34;Ok&#34;,&#xA;        dismissText = &#34;Cancel&#34;,&#xA;        title = &#34;Alert Dialog&#34;,&#xA;        text = &#34;This is a native alert dialog from Calf&#34;,&#xA;    )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;AdaptiveBottomSheet&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;AdaptiveBottomSheet&lt;/code&gt; is a bottom sheet that adapts to the platform it is running on. It is a wrapper around &lt;code&gt;ModalBottomSheet&lt;/code&gt; on Android and &lt;code&gt;UIModalPresentationPopover&lt;/code&gt; on iOS.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveBottomSheet-android.png&#34; alt=&#34;Bottom Sheet Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveBottomSheet-ios.png&#34; alt=&#34;Bottom Sheet iOS&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val scope = rememberCoroutineScope()&#xA;val sheetState = rememberAdaptiveSheetState()&#xA;var openBottomSheet by remember { mutableStateOf(false) }&#xA;&#xA;Box(&#xA;    modifier = Modifier.fillMaxSize()&#xA;) {&#xA;    Button(&#xA;        onClick = { openBottomSheet = true },&#xA;    ) {&#xA;        Text(&#34;Show Bottom Sheet&#34;)&#xA;    }&#xA;&#xA;    if (openBottomSheet) {&#xA;        AdaptiveBottomSheet(&#xA;            onDismissRequest = { openBottomSheet = false },&#xA;            adaptiveSheetState = sheetState,&#xA;        ) {&#xA;            Button(&#xA;                onClick = {&#xA;                    scope.launch { sheetState.hide() }.invokeOnCompletion {&#xA;                        if (!sheetState.isVisible) {&#xA;                            openBottomSheet = false&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ) {&#xA;                Text(&#34;Close&#34;)&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;AdaptiveCircularProgressIndicator&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;AdaptiveCircularProgressIndicator&lt;/code&gt; is a circular progress indicator that adapts to the platform it is running on. It is a wrapper around &lt;code&gt;CircularProgressIndicator&lt;/code&gt; on Android, and it implements similar look to &lt;code&gt;UIActivityIndicatorView&lt;/code&gt; on iOS.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveCircularProgressIndicator-android.png&#34; alt=&#34;Circular Progress Indicator Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveCircularProgressIndicator-ios.png&#34; alt=&#34;Circular Progress Indicator iOS&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;AdaptiveCircularProgressIndicator(&#xA;    modifier = Modifier.size(50.dp),&#xA;    color = Color.Red,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;AdaptiveDatePicker&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;AdaptiveDatePicker&lt;/code&gt; is a date picker that adapts to the platform it is running on. It is a wrapper around &lt;code&gt;DatePicker&lt;/code&gt; on Android and &lt;code&gt;UIDatePicker&lt;/code&gt; on iOS.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveDatePicker-android.png&#34; alt=&#34;Date Picker Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveDatePicker-ios.png&#34; alt=&#34;Date Picker iOS&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val state = rememberAdaptiveDatePickerState()&#xA;&#xA;LaunchedEffect(state.selectedDateMillis) {&#xA;    // Do something with the selected date&#xA;}&#xA;&#xA;AdaptiveDatePicker(&#xA;    state = state,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;AdaptiveTimePicker&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;AdaptiveTimePicker&lt;/code&gt; is a time picker that adapts to the platform it is running on. It is a wrapper around &lt;code&gt;TimePicker&lt;/code&gt; on Android and &lt;code&gt;UIDatePicker&lt;/code&gt; on iOS.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveTimePicker-android.png&#34; alt=&#34;Time Picker Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveTimePicker-ios.png&#34; alt=&#34;Time Picker iOS&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val state = rememberAdaptiveTimePickerState()&#xA;&#xA;LaunchedEffect(state.hour, state.minute) {&#xA;    // Do something with the selected time&#xA;}&#xA;&#xA;AdaptiveTimePicker(&#xA;    state = state,&#xA;    modifier = Modifier&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;WebView&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;WebView&lt;/code&gt; is a view that adapts to the platform it is running on. It is a wrapper around &lt;code&gt;WebView&lt;/code&gt; on Android and &lt;code&gt;WKWebView&lt;/code&gt; on iOS.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/WebView-android.png&#34; alt=&#34;Web View Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/WebView-ios.png&#34; alt=&#34;Web View iOS&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val state = rememberWebViewState(&#xA;    url = &#34;https://github.com/MohamedRejeb&#34;&#xA;)&#xA;&#xA;LaunchedEffect(state.isLoading) {&#xA;    // Get the current loading state&#xA;}&#xA;&#xA;WebView(&#xA;    state = state,&#xA;    modifier = Modifier&#xA;        .fillMaxSize()&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Calf File Picker&lt;/h3&gt; &#xA;&lt;p&gt;Calf File Picker allows you to pick files from the device storage.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveFilePicker-android.png&#34; alt=&#34;Web View Android&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/MohamedRejeb/Calf/main/images/AdaptiveFilePicker-ios.png&#34; alt=&#34;Web View iOS&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val pickerLauncher = rememberFilePickerLauncher(&#xA;    type = FilePickerType.Image,&#xA;    selectionMode = FilePickerSelectionMode.Single,&#xA;    onResult = { files -&amp;gt;&#xA;        files.firstOrNull()?.let { file -&amp;gt;&#xA;            // Do something with the selected file&#xA;            // You can get the ByteArray of the file&#xA;            file.readByteArray()&#xA;        }&#xA;    }&#xA;)&#xA;&#xA;Button(&#xA;    onClick = {&#xA;        pickerLauncher.launch()&#xA;    },&#xA;    modifier = Modifier.padding(16.dp)&#xA;) {&#xA;    Text(&#34;Open File Picker&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;ve found an error in this sample, please file an issue. &lt;br&gt; Feel free to help out by sending a pull request &lt;span&gt;❤️&lt;/span&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MohamedRejeb/Calf/raw/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Find this library useful? &lt;span&gt;❤️&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/MohamedRejeb/Calf/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;⭐&lt;/span&gt; &lt;br&gt; Also, &lt;strong&gt;&lt;a href=&#34;https://github.com/MohamedRejeb&#34;&gt;follow me&lt;/a&gt;&lt;/strong&gt; on GitHub for more libraries! 🤩&lt;/p&gt; &#xA;&lt;p&gt;You can always &lt;a href=&#34;https://www.buymeacoffee.com/MohamedRejeb&#34;&gt;&lt;img src=&#34;https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&amp;amp;emoji=&amp;amp;slug=MohamedRejeb&amp;amp;button_colour=FFDD00&amp;amp;font_colour=000000&amp;amp;font_family=Cookie&amp;amp;outline_colour=000000&amp;amp;coffee_colour=ffffff&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;Copyright 2023 Mohamed Rejeb&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>