<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-04-28T01:32:12Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>MiniAiLive/MiniAI-FaceRecognition-LivenessDetection-AndroidSDK</title>
    <updated>2024-04-28T01:32:12Z</updated>
    <id>tag:github.com,2024-04-28:/MiniAiLive/MiniAI-FaceRecognition-LivenessDetection-AndroidSDK</id>
    <link href="https://github.com/MiniAiLive/MiniAI-FaceRecognition-LivenessDetection-AndroidSDK" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NIST FRVT Top Ranked Face Recognition, iBeta 2 Certified Liveness Detection Engine (3D Face Anti-Spoofing) on Mobile&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt; MiniAiLive Face Recognition LivenessDetection Android SDK &lt;/h1&gt; &#xA; &lt;img src=&#34;https://miniai.live/wp-content/uploads/2024/02/logo_name-1-768x426-1.png&#34; alt=&#34;MiniAiLive Logo&#34; width=&#34;300&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Welcome to the &lt;a href=&#34;https://www.miniai.live/&#34;&gt;MiniAiLive&lt;/a&gt;!&lt;/h2&gt; &#xA;&lt;p&gt;We provide system integrators with fast, flexible and extremely precise facial recognition with 3D passive face liveness detection (face anti-spoofing) that can be deployed across a number of scenarios, including security, access control, public safety, fintech, smart retail and home protection. Feel free to use our MiniAI Face Recognition Android SDK.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;p&gt;SDK is fully on-premise, processing all happens on hosting server and no data leaves server.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Enjoy APP on Google Play&lt;/h2&gt; &#xA;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.miniai.facerecognition&amp;amp;hl=en-HK&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://user-images.githubusercontent.com/125717930/230804673-17c99e7d-6a21-4a64-8b9e-a465142da148.png&#34; height=&#34;80/&#34;&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-Recognition-AndroidSDK/assets/153516004/85a939ed-a607-478b-b48a-80b8582c37b6&#34;&gt;https://github.com/MiniAiLive/MiniAI-Face-Recognition-AndroidSDK/assets/153516004/85a939ed-a607-478b-b48a-80b8582c37b6&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Request license&lt;/h2&gt; &#xA;&lt;p&gt;Feel free to &lt;a href=&#34;https://www.miniai.live/contact/&#34;&gt;Contact US&lt;/a&gt; to get a trial License.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are welcome! If you&#39;d like to contribute to this project, please follow these steps:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;1. Fork the repository.&#xA;2. Create a new branch for your feature or bug fix.&#xA;3. Make your changes and commit them with descriptive messages.&#xA;4. Push your changes to your forked repository.&#xA;5. Submit a pull request to the original repository.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Try Online Demo&lt;/h2&gt; &#xA;&lt;p&gt;Please visit our Face API Web Demo here. &lt;a href=&#34;https://demo.miniai.live&#34;&gt;https://demo.miniai.live&lt;/a&gt; &lt;a href=&#34;https://demo.miniai.live&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;&#34; src=&#34;https://github.com/MiniAiLive/.github/assets/127708602/76a12888-a83d-4454-86bd-bcc8ef025ab5&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Related Product&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;No&lt;/th&gt; &#xA;   &lt;th&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-Recognition-LivenessDetection-AndroidSDK&#34;&gt;MiniAI-Face-Recognition-LivenessDetection-AndroidSDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Face Matching, 3D Face Passive Liveness&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-Recognition-LivenessDetection-iOS-SDK&#34;&gt;MiniAI-Face-Recognition-LivenessDetection-iOS-SDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Face Matching, 3D Face Passive Liveness&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-Recognition-LivenessDetection-ServerSDK&#34;&gt;MiniAI-Face-Recognition-LivenessDetection-ServerSDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Face Matching, 3D Face Passive Liveness&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-Recognition-LivenessDetection-WindowsSDK&#34;&gt;MiniAI-Face-Recognition-LivenessDetection-WindowsSDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Face Matching, 3D Face Passive Liveness&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-LivenessDetection-AndroidSDK&#34;&gt;MiniAI-Face-LivenessDetection-AndroidSDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3D Face Passive Liveness&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-LivenessDetection-iOS-SDK&#34;&gt;MiniAI-Face-LivenessDetection-iOS-SDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3D Face Passive Liveness&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-LivenessDetection-ServerSDK&#34;&gt;MiniAI-Face-LivenessDetection-ServerSDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;3D Face Passive Liveness&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-Matching-AndroidSDK&#34;&gt;MiniAI-Face-Matching-AndroidSDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1:1 Face Matching&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-Matching-iOS-SDK&#34;&gt;MiniAI-Face-Matching-iOS-SDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;1:1 Face Matching&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MiniAiLive/MiniAI-Face-Attributes-AndroidSDK&#34;&gt;MiniAI-Face-Attributes-AndroidSDK&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Face Attributes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;About MiniAiLive&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.miniai.live/&#34;&gt;MiniAiLive&lt;/a&gt; is a leading AI solutions company specializing in computer vision and machine learning technologies. We provide cutting-edge solutions for various industries, leveraging the power of AI to drive innovation and efficiency.&lt;/p&gt; &#xA;&lt;h2&gt;Contact US&lt;/h2&gt; &#xA;&lt;p&gt;For any inquiries or questions, please &lt;a href=&#34;https://www.miniai.live/contact/&#34;&gt;Contact US&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; href=&#34;https://t.me/Contact_MiniAiLive&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/telegram-@MiniAiLive-blue.svg?logo=telegram&#34; alt=&#34;www.miniai.live&#34;&gt;&lt;/a&gt;â€ƒ &lt;a target=&#34;_blank&#34; href=&#34;https://wa.me/+19162702374&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/whatsapp-MiniAiLive-blue.svg?logo=whatsapp&#34; alt=&#34;www.miniai.live&#34;&gt;&lt;/a&gt;â€ƒ &lt;a target=&#34;_blank&#34; href=&#34;https://join.skype.com/invite/ltQEVDmVddTe&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/skype-MiniAiLive-blue.svg?logo=skype&#34; alt=&#34;www.miniai.live&#34;&gt;&lt;/a&gt;â€ƒ &lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>GitLiveApp/firebase-kotlin-sdk</title>
    <updated>2024-04-28T01:32:12Z</updated>
    <id>tag:github.com,2024-04-28:/GitLiveApp/firebase-kotlin-sdk</id>
    <link href="https://github.com/GitLiveApp/firebase-kotlin-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Kotlin-first SDK for Firebase&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;left&#34;&gt;Firebase Kotlin SDK &lt;img alt=&#34;GitHub last commit&#34; src=&#34;https://img.shields.io/github/last-commit/gitliveapp/firebase-kotlin-sdk?style=flat-square&#34;&gt; &lt;a href=&#34;https://git.live&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/collaborate-on%20gitlive-blueviolet?style=flat-square&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;75px&#34; src=&#34;https://avatars2.githubusercontent.com/u/42865805?s=200&amp;amp;v=4&#34;&gt; &#xA;&lt;b&gt;Built and maintained with ðŸ§¡ by &lt;a href=&#34;https://git.live&#34;&gt;GitLive&lt;/a&gt;&lt;/b&gt;&#xA;&lt;br&gt; &#xA;&lt;i&gt;Development teams merge faster with GitLive&lt;/i&gt;&#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; The Firebase Kotlin SDK is a Kotlin-first SDK for Firebase. It&#39;s API is similar to the &#xA;&lt;a href=&#34;https://firebase.github.io/firebase-android-sdk/reference/kotlin/firebase-ktx/&#34;&gt;Firebase Android SDK Kotlin Extensions&lt;/a&gt; but also supports multiplatform projects, enabling you to use Firebase directly from your common source targeting &#xA;&lt;strong&gt;iOS&lt;/strong&gt;, &#xA;&lt;strong&gt;Android&lt;/strong&gt;, &#xA;&lt;strong&gt;Desktop&lt;/strong&gt; or &#xA;&lt;strong&gt;Web&lt;/strong&gt;, enabling the use of Firebase as a backend for &#xA;&lt;a href=&#34;https://www.jetbrains.com/lp/compose-multiplatform/&#34;&gt;Compose Multiplatform&lt;/a&gt;, for example. &#xA;&lt;h2&gt;Available libraries&lt;/h2&gt; &#xA;&lt;p&gt;The following libraries are available for the various Firebase products.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Service or Product&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Gradle Dependency&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;API Coverage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/auth&#34;&gt;Authentication&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-auth/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-auth:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-auth/src/commonMain/kotlin/dev/gitlive/firebase/auth/auth.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-80%25-green?style=flat-square&#34; alt=&#34;80%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/database&#34;&gt;Realtime Database&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-database/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-database:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-database/src/commonMain/kotlin/dev/gitlive/firebase/database/database.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-70%25-orange?style=flat-square&#34; alt=&#34;70%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/firestore&#34;&gt;Cloud Firestore&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-firestore/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-firestore:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-firestore/src/commonMain/kotlin/dev/gitlive/firebase/firestore/firestore.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-60%25-orange?style=flat-square&#34; alt=&#34;60%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/functions&#34;&gt;Cloud Functions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-functions/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-functions:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-functions/src/commonMain/kotlin/dev/gitlive/firebase/functions/functions.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-80%25-green?style=flat-square&#34; alt=&#34;80%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/cloud-messaging&#34;&gt;Cloud Messaging&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-messaging/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-messaging:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-0%25-lightgrey?style=flat-square&#34; alt=&#34;0%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/storage&#34;&gt;Cloud Storage&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-storage/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-storage:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-storage/src/commonMain/kotlin/dev/gitlive/firebase/storage/storage.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-40%25-orange?style=flat-square&#34; alt=&#34;40%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/projects/manage-installations&#34;&gt;Installations&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-installations/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-installations:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-installations/src/commonMain/kotlin/dev/gitlive/firebase/installations/installations.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-90%25-green?style=flat-square&#34; alt=&#34;90%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/remote-config&#34;&gt;Remote Config&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-config/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-config:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-config/src/commonMain/kotlin/dev/gitlive/firebase/remoteconfig/FirebaseRemoteConfig.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-20%25-orange?style=flat-square&#34; alt=&#34;20%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/perf-mon&#34;&gt;Performance&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-perf/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-perf:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-perf/src/commonMain/kotlin/dev/gitlive/firebase/perf/performance.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-1%25-orange?style=flat-square&#34; alt=&#34;1%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://firebase.google.com/docs/crashlytics&#34;&gt;Crashlytics&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://search.maven.org/artifact/dev.gitlive/firebase-crashlytics/1.12.0/pom&#34;&gt;&lt;code&gt;dev.gitlive:firebase-crashlytics:1.12.0&lt;/code&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/GitLiveApp/firebase-kotlin-sdk/master/firebase-crashlytics/src/commonMain/kotlin/dev/gitlive/firebase/crashlytics/crashlytics.kt&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/-1%25-orange?style=flat-square&#34; alt=&#34;80%&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Is the Firebase library or API you need missing? &lt;a href=&#34;https://github.com/GitLiveApp/firebase-kotlin-sdk/issues/new?labels=API+coverage&amp;amp;template=increase-api-coverage.md&amp;amp;title=Add+%5Bclass+name%5D.%5Bfunction+name%5D+to+%5Blibrary+name%5D+for+%5Bplatform+names%5D&#34;&gt;Create an issue&lt;/a&gt; to request additional API coverage or be awesome and &lt;a href=&#34;https://github.com/GitLiveApp/firebase-kotlin-sdk/fork&#34;&gt;submit a PR&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Kotlin-first design&lt;/h2&gt; &#xA;&lt;p&gt;Unlike the Kotlin Extensions for the Firebase Android SDK this project does not extend a Java based SDK so we get the full power of Kotlin including coroutines and serialization!&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://kotlinlang.org/docs/tutorials/coroutines/async-programming.html#coroutines&#34;&gt;Suspending functions&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Asynchronous operations that return a single or no value are represented by suspending functions in the SDK instead of callbacks, listeners or OS specific types such as &lt;a href=&#34;https://developer.android.com/reference/com/google/android/play/core/tasks/Task&#34;&gt;Task&lt;/a&gt;, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;suspend fun signInWithCustomToken(token: String): AuthResult&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;It is important to remember that unlike a callback based API, wating for suspending functions to complete is implicit and so if you don&#39;t want to wait for the result you can &lt;code&gt;launch&lt;/code&gt; a new coroutine:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;//TODO don&#39;t use GlobalScope&#xA;GlobalScope.launch {&#xA;  Firebase.auth.signOut()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines/flow.html&#34;&gt;Flows&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Asynchronous streams of values are represented by Flows in the SDK instead of repeatedly invoked callbacks or listeners, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val snapshots: Flow&amp;lt;DocumentSnapshot&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The flows are cold, which means a new listener is added every time a terminal operator is applied to the resulting flow. A buffer with the &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/-channel/-b-u-f-f-e-r-e-d.html&#34;&gt;default size&lt;/a&gt; is used to buffer values received from the listener, use the &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/buffer.html&#34;&gt;&lt;code&gt;buffer&lt;/code&gt; operator&lt;/a&gt; on the flow to specify a user-defined value and to control what happens when data is produced faster than consumed, i.e. to control the back-pressure behavior. Often you are only interested in the latest value received, in this case you can use the &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/conflate.html&#34;&gt;&lt;code&gt;conflate&lt;/code&gt; operator&lt;/a&gt; to disable buffering.&lt;/p&gt; &#xA;&lt;p&gt;The listener is removed once the flow &lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines/flow.html#flow-completion&#34;&gt;completes&lt;/a&gt; or is &lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines/flow.html#flow-cancellation&#34;&gt;cancelled&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.serialization&#34;&gt;Serialization&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;The official Firebase SDKs use different platform-specific ways to support writing data with and without custom classes in &lt;a href=&#34;https://firebase.google.com/docs/firestore/manage-data/add-data#custom_objects&#34;&gt;Cloud Firestore&lt;/a&gt;, &lt;a href=&#34;https://firebase.google.com/docs/database/android/read-and-write#basic_write&#34;&gt;Realtime Database&lt;/a&gt; and &lt;a href=&#34;https://firebase.google.com/docs/functions/callable&#34;&gt;Functions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The Firebase Kotlin SDK uses Kotlin serialization to read and write custom classes to Firebase. To use Kotlin serialization in your project add the plugin to your gradle file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;plugins {&#xA;    kotlin(&#34;multiplatform&#34;) version &#34;1.9.20&#34; // or kotlin(&#34;jvm&#34;) or any other kotlin plugin&#xA;    kotlin(&#34;plugin.serialization&#34;) version &#34;1.9.20&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then mark you custom classes &lt;code&gt;@Serializable&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@Serializable&#xA;data class City(val name: String)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Instances of these classes can now be passed &lt;a href=&#34;https://github.com/Kotlin/kotlinx.serialization/raw/master/docs/serializers.md#introduction-to-serializers&#34;&gt;along with their serializer&lt;/a&gt; to the SDK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;db.collection(&#34;cities&#34;).document(&#34;LA&#34;).set(City.serializer(), city) { encodeDefaults = true }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The &lt;code&gt;buildSettings&lt;/code&gt; closure is optional and allows for configuring serialization behaviour.&lt;/p&gt; &#xA;&lt;p&gt;Setting the &lt;code&gt;encodeDefaults&lt;/code&gt; parameter is optional and defaults to &lt;code&gt;true&lt;/code&gt;, set this to false to omit writing optional properties if they are equal to theirs default values. Using &lt;a href=&#34;https://kotlinlang.org/api/kotlinx.serialization/kotlinx-serialization-core/kotlinx.serialization/-encode-default/&#34;&gt;@EncodeDefault&lt;/a&gt; on properties is a recommended way to locally override the behavior set with &lt;code&gt;encodeDefaults&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can also omit the serializer if it can be inferred using &lt;code&gt;serializer&amp;lt;KType&amp;gt;()&lt;/code&gt;. To support &lt;a href=&#34;https://github.com/Kotlin/kotlinx.serialization/raw/master/docs/serializers.md#contextual-serialization&#34;&gt;contextual serialization&lt;/a&gt; or &lt;a href=&#34;https://github.com/Kotlin/kotlinx.serialization/raw/master/docs/polymorphism.md#open-polymorphism&#34;&gt;open polymorphism&lt;/a&gt; the &lt;code&gt;serializersModule&lt;/code&gt; can be overridden in the &lt;code&gt;buildSettings&lt;/code&gt; closure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@Serializable&#xA;abstract class AbstractCity {&#xA;    abstract val name: String&#xA;}&#xA;&#xA;@Serializable&#xA;@SerialName(&#34;capital&#34;)&#xA;data class Capital(override val name: String, val isSeatOfGovernment: Boolean) : AbstractCity()&#xA;&#xA;val module = SerializersModule {&#xA;    polymorphic(AbstractCity::class, AbstractCity.serializer()) {&#xA;        subclass(Capital::class, Capital.serializer())&#xA;    }&#xA;}&#xA;&#xA;val city = Capital(&#34;London&#34;, true)&#xA;db.collection(&#34;cities&#34;).document(&#34;UK&#34;).set(AbstractCity.serializer(), city) { &#xA;    encodeDefaults = true&#xA;    serializersModule = module&#xA;    &#xA;}&#xA;val storedCity = db.collection(&#34;cities&#34;).document(&#34;UK&#34;).get().data(AbstractCity.serializer()) {&#xA;    serializersModule = module&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://firebase.google.com/docs/firestore/manage-data/add-data#server_timestamp&#34;&gt;Server Timestamp&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://firebase.google.com/docs/reference/kotlin/com/google/firebase/firestore/FieldValue?hl=en#serverTimestamp()&#34;&gt;Firestore&lt;/a&gt; and the &lt;a href=&#34;https://firebase.google.com/docs/reference/android/com/google/firebase/database/ServerValue#TIMESTAMP&#34;&gt;Realtime Database&lt;/a&gt; provide a sentinel value you can use to set a field in your document to a server timestamp. So you can use these values in custom classes:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@Serializable&#xA;data class Post(&#xA;    // In case using Realtime Database.&#xA;    val timestamp = ServerValue.TIMESTAMP,&#xA;    // In case using Cloud Firestore.&#xA;    val timestamp: Timestamp = Timestamp.ServerTimestamp,&#xA;    // or&#xA;    val alternativeTimestamp = FieldValue.serverTimestamp,&#xA;    // or&#xA;    @Serializable(with = DoubleAsTimestampSerializer::class),&#xA;    val doubleTimestamp: Double = DoubleAsTimestampSerializer.serverTimestamp&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In addition &lt;code&gt;firebase-firestore&lt;/code&gt; provides [GeoPoint] and [DocumentReference] classes which allow persisting geo points and document references in a native way:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@Serializable&#xA;data class PointOfInterest(&#xA;    val reference: DocumentReference, &#xA;    val location: GeoPoint&#xA;)&#xA;val document = PointOfInterest(&#xA;    reference = Firebase.firestore.collection(&#34;foo&#34;).document(&#34;bar&#34;),&#xA;    location = GeoPoint(51.939, 4.506)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Polymorphic serialization (sealed classes)&lt;/h4&gt; &#xA;&lt;p&gt;This sdk will handle polymorphic serialization automatically if you have a sealed class and its children marked as &lt;code&gt;Serializable&lt;/code&gt;. It will include a &lt;code&gt;type&lt;/code&gt; property that will be used to discriminate which child class is the serialized.&lt;/p&gt; &#xA;&lt;p&gt;You can change this &lt;code&gt;type&lt;/code&gt; property by using the &lt;code&gt;@FirebaseClassDiscrminator&lt;/code&gt; annotation in the parent sealed class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@Serializable&#xA;@FirebaseClassDiscriminator(&#34;class&#34;)&#xA;sealed class Parent {&#xA;    @Serializable&#xA;    @SerialName(&#34;child&#34;)&#xA;    data class Child(&#xA;        val property: Boolean&#xA;    ) : Parent&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In combination with a &lt;code&gt;SerialName&lt;/code&gt; specified for the child class, you have full control over the serialized data. In this case it will be:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;class&#34;: &#34;child&#34;,&#xA;  &#34;property&#34;: true&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/functions.html#default-arguments&#34;&gt;Default arguments&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To reduce boilerplate, default arguments are used in the places where the Firebase Android SDK employs the builder pattern:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()&#xA;        .setDisplayName(&#34;Jane Q. User&#34;)&#xA;        .setPhotoUri(Uri.parse(&#34;https://example.com/jane-q-user/profile.jpg&#34;))&#xA;        .build()&#xA;&#xA;user.updateProfile(profileUpdates)&#xA;        .addOnCompleteListener(new OnCompleteListener&amp;lt;Void&amp;gt;() {&#xA;            @Override&#xA;            public void onComplete(@NonNull Task&amp;lt;Void&amp;gt; task) {&#xA;                if (task.isSuccessful()) {&#xA;                    Log.d(TAG, &#34;User profile updated.&#34;)&#xA;                }&#xA;            }&#xA;        })&#xA;&#xA;//...becomes...&#xA;&#xA;user.updateProfile(displayName = &#34;Jane Q. User&#34;, photoURL = &#34;https://example.com/jane-q-user/profile.jpg&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://kotlinlang.org/docs/functions.html#infix-notation&#34;&gt;Infix notation&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To improve readability and reduce boilerplate for functions such as the Cloud Firestore query operators are built with infix notation:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;citiesRef.whereEqualTo(&#34;state&#34;, &#34;CA&#34;)&#xA;citiesRef.whereArrayContains(&#34;regions&#34;, &#34;west_coast&#34;)&#xA;citiesRef.where(Filter.and(&#xA;    Filter.equalTo(&#34;state&#34;, &#34;CA&#34;),&#xA;    Filter.or(&#xA;        Filter.equalTo(&#34;capital&#34;, true),&#xA;        Filter.greaterThanOrEqualTo(&#34;population&#34;, 1000000)&#xA;    )&#xA;))&#xA;&#xA;//...becomes...&#xA;&#xA;citiesRef.where { &#34;state&#34; equalTo &#34;CA&#34; }&#xA;citiesRef.where { &#34;regions&#34; contains &#34;west_coast&#34; }&#xA;citiesRef.where {&#xA;    all(&#xA;        &#34;state&#34; equalTo &#34;CA&#34;,&#xA;        any(&#xA;            &#34;capital&#34; equalTo true,&#xA;            &#34;population&#34; greaterThanOrEqualTo 1000000&#xA;        )&#xA;    )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/operator-overloading.html&#34;&gt;Operator overloading&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;In cases where it makes sense, such as Firebase Functions HTTPS Callable, operator overloading is used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;    val addMessage = functions.getHttpsCallable(&#34;addMessage&#34;)&#xA;    //In the official android Firebase SDK this would be addMessage.call(...)&#xA;    addMessage(mapOf(&#34;text&#34; to text, &#34;push&#34; to true))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Multiplatform&lt;/h2&gt; &#xA;&lt;p&gt;The Firebase Kotlin SDK provides a common API to access Firebase for projects targeting &lt;em&gt;iOS&lt;/em&gt;, &lt;em&gt;Android&lt;/em&gt;, &lt;em&gt;JVM&lt;/em&gt; and &lt;em&gt;JS&lt;/em&gt; meaning you can use Firebase directly in your common code. Under the hood, the SDK achieves this by binding to the respective official Firebase SDK for each supported platform.&lt;/p&gt; &#xA;&lt;p&gt;It uses the &lt;a href=&#34;https://github.com/GitLiveApp/firebase-java-sdk&#34;&gt;Firebase Java SDK&lt;/a&gt; to support the JVM target. The library requires &lt;a href=&#34;https://github.com/GitLiveApp/firebase-java-sdk?tab=readme-ov-file#initializing-the-sdk&#34;&gt;additional initialization&lt;/a&gt; compared to the official Firebase SDKs.&lt;/p&gt; &#xA;&lt;h3&gt;Accessing the underlying Firebase SDK&lt;/h3&gt; &#xA;&lt;p&gt;In some cases you might want to access the underlying official Firebase SDK in platform specific code, for example when the common API is missing the functionality you need. For this purpose each class in the SDK has &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;ios&lt;/code&gt; and &lt;code&gt;js&lt;/code&gt; properties which holds the equivalent object of the underlying official Firebase SDK. For &lt;em&gt;JVM&lt;/em&gt;, as the &lt;code&gt;firebase-java-sdk&lt;/code&gt; is a direct port of the Firebase Android SDK, is it also accessed via the &lt;code&gt;android&lt;/code&gt; property.&lt;/p&gt; &#xA;&lt;p&gt;These properties are only accessible from the equivalent target&#39;s source set. For example to disable persistence in Cloud Firestore on Android you can write the following in your Android specific code (e.g. &lt;code&gt;androidMain&lt;/code&gt; or &lt;code&gt;androidTest&lt;/code&gt;):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;  Firebase.firestore.android.firestoreSettings = FirebaseFirestoreSettings.Builder(Firebase.firestore.android.firestoreSettings)&#xA;          .setPersistenceEnabled(false)&#xA;          .build()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute to this project then you can fork this repository. You can build and test the project locally.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open the project in IntelliJ IDEA.&lt;/li&gt; &#xA; &lt;li&gt;Install cocoapods via &lt;code&gt;sudo gem install -n /usr/local/bin cocoapods&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Install the GitLive plugin into IntelliJ&lt;/li&gt; &#xA; &lt;li&gt;After a gradle sync then run &lt;code&gt;publishToMavenLocal&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Compatibility with the official &lt;a href=&#34;https://github.com/firebase/firebase-android-sdk&#34;&gt;Firebase Android SDK&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;When this project began, the official Firebase Android SDK was a pure java library and the separate Kotlin extensions (KTX) module consisted of only a few extensions providing some syntactic sugar, for example &lt;code&gt;Firebase.firestore&lt;/code&gt; instead of &lt;code&gt;Firebase.getInstance(),&lt;/code&gt; which we naturally copied for the Firebase Kotlin SDK.&lt;/p&gt; &#xA;&lt;p&gt;But with the majority of the Android SDK being designed for Java, the Kotlin SDK was primarily guided by our &lt;a href=&#34;https://github.com/GitLiveApp/firebase-kotlin-sdk/?tab=readme-ov-file#kotlin-first-design&#34;&gt;Kotlin-first design&lt;/a&gt; principles.&lt;/p&gt; &#xA;&lt;p&gt;More recently, with the official SDK for Android providing better support for Kotlin and the inclusion of the new Kotlin-friendly features direct in the main modules, the API differences between the official SDK and this project are likely to start to blur. Therefore, in particular for developers porting android code to multiplatform, one of our goals going forward will be API compatibility with the Android SDK where possible.&lt;/p&gt; &#xA;&lt;p&gt;For contributors this means following these points when adding new code to the public API of this project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Match the &lt;a href=&#34;https://firebase.google.com/docs/reference/kotlin/packages&#34;&gt;Android SDKs API&lt;/a&gt;.&lt;/strong&gt; When adding new API coverage use the Android SDK as the guide on what the public API should be in regard to naming, parameters etc. The goal here is &lt;em&gt;near binary compatibility&lt;/em&gt;, meaning code consuming the Android SDK compiles &lt;em&gt;as is&lt;/em&gt; with the Kotlin SDK after just changing the package imports from &lt;code&gt;com.google&lt;/code&gt; to &lt;code&gt;dev.gitlive&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Follow our &lt;a href=&#34;https://github.com/GitLiveApp/firebase-kotlin-sdk/?tab=readme-ov-file#kotlin-first-design&#34;&gt;Kotlin-first design&lt;/a&gt; principles when needed.&lt;/strong&gt; If the API you are adding coverage for is new, and it&#39;s Kotlin-first in the Android SDK, then you can simply just match the Android SDKs API as described in the first point, but if it&#39;s an older Java-first API then ideally we would include an identical API for API compatibility &lt;em&gt;plus&lt;/em&gt; a Kotlin-first overload. A good example for this is where the Builder pattern is employed in the Android SDK, here we can follow &lt;a href=&#34;https://github.com/GitLiveApp/firebase-kotlin-sdk/?tab=readme-ov-file#default-arguments&#34;&gt;this Kotlin-first design principle&lt;/a&gt; and provide both methods, one taking the options created with the builder and an overload with default arguments to avoid the builder boilerplate for developers not porting an existing android code base.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>