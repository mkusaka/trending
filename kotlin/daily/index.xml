<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-20T01:36:45Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>arkivanov/Decompose</title>
    <updated>2023-04-20T01:36:45Z</updated>
    <id>tag:github.com,2023-04-20:/arkivanov/Decompose</id>
    <link href="https://github.com/arkivanov/Decompose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin Multiplatform lifecycle-aware business logic components (aka BLoCs) with routing (navigation) and pluggable UI (Jetpack Compose, SwiftUI, JS React, etc.)&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;docs/media/logo/titled-1.png&#34;&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;docs/media/logo/logo-titled-dark.png&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/arkivanov/Decompose/master/docs/media/logo/titled-1.png&#34; width=&#34;300&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/arkann1985&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-@arkann1985-blue.svg?style=social&amp;amp;logo=twitter&#34; alt=&#34;Twitter URL&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;http://img.shields.io/badge/platform-android-6EDB8D.svg?style=flat&#34; alt=&#34;badge&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/platform-ios-CDCDCD.svg?style=flat&#34; alt=&#34;badge&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/platform-js-F8DB5D.svg?style=flat&#34; alt=&#34;badge&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/platform-jvm-DB413D.svg?style=flat&#34; alt=&#34;badge&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/platform-macos-111111.svg?style=flat&#34; alt=&#34;badge&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/platform-tvos-808080.svg?style=flat&#34; alt=&#34;badge&#34;&gt; &lt;img src=&#34;http://img.shields.io/badge/platform-watchos-C0C0C0.svg?style=flat&#34; alt=&#34;badge&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Decompose is a Kotlin Multiplatform library for breaking down your code into tree-structured lifecycle-aware business logic components (aka BLoC), with routing functionality and pluggable UI (Jetpack Compose, Android Views, SwiftUI, JS React, etc.).&lt;/p&gt; &#xA;&lt;p&gt;Please see the &lt;a href=&#34;https://arkivanov.github.io/Decompose/&#34;&gt;project website&lt;/a&gt; for documentation and APIs.&lt;/p&gt; &#xA;&lt;p&gt;Should you have any questions or ideas - there is &lt;a href=&#34;https://github.com/arkivanov/Decompose/discussions&#34;&gt;Discussions&lt;/a&gt; section. Also welcome to the Kotlin Slack channel - &lt;a href=&#34;https://kotlinlang.slack.com/archives/C03H3N51SKT&#34;&gt;#decompose&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;h2&gt;⚡⚡⚡ Where are all the stars, issues, discussions, pull requests, etc?&lt;/h2&gt; &#xA;&lt;p&gt;Having spent 5 years working on a variety of projects for Badoo/Bumble, I’m now off to another adventure. As part of that transition I was asked to transfer this repository to &lt;a href=&#34;https://github.com/badoo&#34;&gt;Badoo GitHub account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Now I &lt;strong&gt;continue my work&lt;/strong&gt; on this project &lt;strong&gt;as a copy&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There should be no breaking changes related to this transfer. Most of the external links should not be broken. The repository link is also the same: &lt;a href=&#34;https://github.com/arkivanov/Decompose&#34;&gt;arkivanov/Decompose&lt;/a&gt;. Please file an issue in this repository, if you think something is broken or does not work properly.&lt;/p&gt; &#xA;&lt;p&gt;Here is what is mostly affected by the transfer:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;All the stars were transferred&lt;/li&gt; &#xA; &lt;li&gt;All the issues and discussions were transferred as well. I will do all my best to fill the gap here.&lt;/li&gt; &#xA; &lt;li&gt;All pull requests with all the comment history are also gone.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I will continue doing all my best for this project and for the community! Business as usual!&lt;/p&gt; &#xA;&lt;p&gt;Additional resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://news.ycombinator.com/item?id=29447854&#34;&gt;A thread on Hacker News&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why Decompose?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Decompose breaks the code down into small and independent components and organizes them into trees. Each parent component is only aware of its immediate children.&lt;/li&gt; &#xA; &lt;li&gt;Decompose draws clear boundaries between UI and non-UI code, which gives the following benefits: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Better separation of concerns&lt;/li&gt; &#xA;   &lt;li&gt;Pluggable platform-specific UI (Compose, SwiftUI, React, etc.)&lt;/li&gt; &#xA;   &lt;li&gt;Business logic code is testable with pure multiplatform unit tests&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Proper dependency injection (DI) and inversion of control (IoC) via constructor&lt;/li&gt; &#xA; &lt;li&gt;Shared navigation logic&lt;/li&gt; &#xA; &lt;li&gt;Lifecycle-aware components&lt;/li&gt; &#xA; &lt;li&gt;Components in the back stack are not destroyed, they continue working in background without UI&lt;/li&gt; &#xA; &lt;li&gt;State preservation (on Android and experimentally on Apple targets)&lt;/li&gt; &#xA; &lt;li&gt;Instances retaining (aka ViewModels) over configuration changes (mostly useful in Android)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Please check the &lt;a href=&#34;https://arkivanov.github.io/Decompose/getting-started/installation/&#34;&gt;Installation&lt;/a&gt; section of the documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;Here are some key concepts of the library, more details can be found in the documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/component/overview/&#34;&gt;Component&lt;/a&gt; - every component represents a piece of logic with its own lifecycle, the UI is optional and is plugged externally&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/component/overview/#componentcontext&#34;&gt;ComponentContext&lt;/a&gt; - every component has its own [ComponentContext], which makes components lifecycle-aware and allows state preservation, instances retaining (aka AndroidX &lt;code&gt;ViewModel&lt;/code&gt;) and back button handling&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/navigation/stack/overview/&#34;&gt;Child Stack&lt;/a&gt; - enables navigation between child components, nested navigation is also supported&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/navigation/slot/overview/&#34;&gt;Child Slot&lt;/a&gt; - allows only one child component at a time, or none&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/navigation/children/overview/&#34;&gt;Generic Navigation&lt;/a&gt; - provides a way to create your own custom navigation model, when none of the predefined models fit your needs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/component/lifecycle/&#34;&gt;Lifecycle&lt;/a&gt; - provides a way to listen for lifecycle events in components&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/component/state-preservation/&#34;&gt;StateKeeper&lt;/a&gt; - makes it possible to preserve state or data in a component when it gets destroyed&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/component/instance-retaining/&#34;&gt;InstanceKeeper&lt;/a&gt; - retains instances in your components (similar to AndroidX &lt;code&gt;ViewModel&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/component/back-button/&#34;&gt;BackPressedHandler&lt;/a&gt; - provides a way to handle and intercept back button presses&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Component hierarchy&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/arkivanov/Decompose/master/docs/media/ComponentHierarchy.png&#34; width=&#34;512&#34;&gt; &#xA;&lt;h3&gt;Pluggable UI hierarchy&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/arkivanov/Decompose/master/docs/media/PluggableUiHierarchy.png&#34; width=&#34;512&#34;&gt; &#xA;&lt;h3&gt;Typical component structure&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/arkivanov/Decompose/master/docs/media/ComponentStructure.png&#34; width=&#34;512&#34;&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://arkivanov.github.io/Decompose/getting-started/quick-start/&#34;&gt;Quick start&lt;/a&gt; section of the docs.&lt;/p&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://arkivanov.github.io/Decompose/samples/&#34;&gt;Samples&lt;/a&gt; section of the docs for a full description of each sample.&lt;/p&gt; &#xA;&lt;h2&gt;Articles&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://proandroiddev.com/decompose-experiments-with-kotlin-multiplatform-lifecycle-aware-components-and-navigation-a04ef3c7f6a3?source=friends_link&amp;amp;sk=f7d289cc329b6c8a765fc049e36c313f&#34;&gt;Decompose — experiments with Kotlin Multiplatform lifecycle-aware components and navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://proandroiddev.com/fully-cross-platform-kotlin-applications-almost-29c7054f8f28?source=friends_link&amp;amp;sk=4619fdcb17912fde589bc4fca83efbbd&#34;&gt;Fully cross-platform Kotlin applications (almost)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/p/5b723c4f256e&#34;&gt;A comprehensive thirty-line navigation for Jetpack/Multiplatform Compose&lt;/a&gt; - if you find Decompose verbose and would prefer something built on top of Jetpack Compose.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/arkann1985&#34;&gt;@arkann1985&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you like this project you can always &lt;a href=&#34;https://www.buymeacoffee.com/arkivanov&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&#34; alt=&#34;Buy Me A Coffee&#34; height=&#34;32&#34;&gt;&lt;/a&gt; ;-)&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PatilShreyas/Foodium-KMM</title>
    <updated>2023-04-20T01:36:45Z</updated>
    <id>tag:github.com,2023-04-20:/PatilShreyas/Foodium-KMM</id>
    <link href="https://github.com/PatilShreyas/Foodium-KMM" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📱Sample application built to demonstrate the use of Kotlin Multiplatform Mobile for developing Android and iOS applications using Jetpack Compose 🚀.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PatilShreyas/Foodium-KMM/main/readme-media/graphic.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;🍲 Foodium (Kotlin Multiplatform Mobile)&lt;/h1&gt; &#xA;&lt;p&gt;Foodium is a simple and sample &lt;em&gt;mobile application&lt;/em&gt; built to demonstrate the use of &lt;em&gt;&lt;strong&gt;Kotlin Multiplatform Mobile&lt;/strong&gt;&lt;/em&gt; for developing &lt;em&gt;Android and iOS&lt;/em&gt; applications using &lt;strong&gt;Jetpack Compose&lt;/strong&gt; 🚀.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Platforms&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://img.shields.io/badge/Android-black.svg?style=for-the-badge&amp;amp;logo=android&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/iOS-black.svg?style=for-the-badge&amp;amp;logo=apple&#34; alt=&#34;&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Status&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PatilShreyas/Foodium-KMM/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/PatilShreyas/Foodium-KMM/actions/workflows/build.yml/badge.svg?sanitize=true&#34; alt=&#34;Build&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;About&lt;/h2&gt; &#xA;&lt;p&gt;It simply loads posts data from API and displays them on the UI. The network API is a dummy (fixed) response which is &lt;em&gt;statically hosted &lt;a href=&#34;https://patilshreyas.github.io/DummyFoodiumApi/api/posts/&#34;&gt;here&lt;/a&gt;&lt;/em&gt;. The concept of this app is originally taken from &lt;a href=&#34;https://github.com/PatilShreyas/Foodium/&#34;&gt;this project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;📱 Preview&lt;/h3&gt; &#xA;&lt;p&gt;Currently, the app looks like this on the both platforms:&lt;/p&gt; &#xA;&lt;h4&gt;▶️ Android&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/19620536/232288166-5ca48ebc-b36f-43f3-b759-471834b31c2f.mp4&#34;&gt;https://user-images.githubusercontent.com/19620536/232288166-5ca48ebc-b36f-43f3-b759-471834b31c2f.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;▶️ iOS&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/19620536/232288185-fff651ef-1acc-4b68-92e7-d88a0a4e1f4a.mp4&#34;&gt;https://user-images.githubusercontent.com/19620536/232288185-fff651ef-1acc-4b68-92e7-d88a0a4e1f4a.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Built with&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PatilShreyas/Foodium-KMM/main/kotlinlang.org&#34;&gt;Kotlin&lt;/a&gt;: Programming language&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/multiplatform.html&#34;&gt;Kotlin Multiplatform&lt;/a&gt;: For building multi-platform applications in the single codebase.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/lp/compose-multiplatform/&#34;&gt;Jetpack/JetBrains Compose Multiplatform&lt;/a&gt;: For a shared UI between multi-platforms i.e. Android and iOS in this project.&lt;/li&gt; &#xA; &lt;li&gt;Kotlinx &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;Coroutines&lt;/a&gt;: For multithreading&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.serialization&#34;&gt;Serialization&lt;/a&gt;: For JSON serialization/deserailization&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ktorio/ktor&#34;&gt;Ktor Client&lt;/a&gt;: Performing HTTP requests, Creating image loading utility for iOS module.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/coil-kt/coil&#34;&gt;Coil&lt;/a&gt;: Image loading for Android&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PatilShreyas/mutekt&#34;&gt;Mutekt&lt;/a&gt;: For UI state management&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;TODOs&lt;/h2&gt; &#xA;&lt;p&gt;Currently, it only shows a one Home screen with listing of posts. The following features will be integrated in the app and &lt;em&gt;Work is in Progress...&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;✅ Completed&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Home screen UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Load posts from network&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Load images from network&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;🚧 Work in progress&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Details screen UI&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Offline capability: Store posts data in local cache (Use SQLDelight)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Use navigation framework&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Switch for dark/light theme.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setting up project 👨🏻‍💻&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Refer to the &lt;em&gt;&lt;strong&gt;&#34;Setting up environment&#34;&lt;/strong&gt;&lt;/em&gt; section of &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-ios-android-template/main/README.md&#34;&gt;this repository&lt;/a&gt; for knowing the setup guidelines&lt;/li&gt; &#xA; &lt;li&gt;After validating requirements as per the above guide, clone this repository.&lt;/li&gt; &#xA; &lt;li&gt;Open this project in Android Studio Electric Eel or newer version.&lt;/li&gt; &#xA; &lt;li&gt;Build project 🔨 and see if everything is working fine.&lt;/li&gt; &#xA; &lt;li&gt;Run App &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Select &#34;androidApp&#34; as run configuration and you&#39;ll be able to run the Android app.&lt;/li&gt; &#xA;   &lt;li&gt;Select &#34;iosApp&#34; as run configuration and you&#39;ll be able to run the iOS app &lt;em&gt;(XCode can also be used to run the app)&lt;/em&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;p&gt;This Compose Multiplatform project includes three modules:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PatilShreyas/Foodium-KMM/main/shared&#34;&gt;&lt;code&gt;shared&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is a Kotlin module that contains the logic common for both Android and iOS applications, the code you share between platforms. This shared module is also where you write your Compose Multiplatform code. In &lt;code&gt;shared/src/commonMain/kotlin/App.kt&lt;/code&gt;, you can find the shared root &lt;code&gt;@Composable&lt;/code&gt; function for your app. It uses Gradle as the build system. You can add dependencies and change settings in &lt;code&gt;shared/build.gradle.kts&lt;/code&gt;. The shared module builds into an Android library and an iOS framework.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PatilShreyas/Foodium-KMM/main/androidApp&#34;&gt;&lt;code&gt;androidApp&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is a Kotlin module that builds into an Android application. It uses Gradle as the build system. The &lt;code&gt;androidApp&lt;/code&gt; module depends on and uses the shared module as a regular Android library.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PatilShreyas/Foodium-KMM/main/iosApp&#34;&gt;&lt;code&gt;iosApp&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is an Xcode project that builds into an iOS application. It depends on and uses the shared module as a CocoaPods dependency.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;If you want to contribute to this library, you&#39;re always welcome! See &lt;a href=&#34;https://raw.githubusercontent.com/PatilShreyas/Foodium-KMM/main/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Discuss 💬&lt;/h2&gt; &#xA;&lt;p&gt;Have any questions, doubts or want to present your opinions, views? You&#39;re always welcome. You can &lt;a href=&#34;https://github.com/PatilShreyas/Foodium-KMM/discussions&#34;&gt;start discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-ios-android-template#readme&#34;&gt;JetBrains/compose-multiplatform-ios-android-template&lt;/a&gt;: For Starter template&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/accompanist&#34;&gt;google/accompanist&lt;/a&gt;: For placeholder (shimmer animation) APIs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2023 Shreyas Patil&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>