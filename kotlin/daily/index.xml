<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-13T01:35:29Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>princekin-f/EasyFloat</title>
    <updated>2022-10-13T01:35:29Z</updated>
    <id>tag:github.com,2022-10-13:/princekin-f/EasyFloat</id>
    <link href="https://github.com/princekin-f/EasyFloat" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🔥 EasyFloat：浮窗从未如此简单（Android可拖拽悬浮窗口，支持页面过滤、自定义动画，可设置单页面浮窗、前台浮窗、全局浮窗，浮窗权限按需自动申请...）&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;EasyFloat：Android悬浮窗框架&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jitpack.io/#princekin-f/EasyFloat&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/princekin-f/EasyFloat.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License%20-Apache%202-337ab7.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/7d1a7c82094a&#34;&gt;EasyFloat：浮窗从未如此简单&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;特点功能：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持单页面浮窗，无需权限申请&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持全局浮窗、应用前台浮窗，需要授权悬浮窗权限&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;自动权限检测、自动跳转浮窗权限管理页、自动处理授权结果&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持系统浮窗的页面过滤&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持拖拽，支持各种状态的回调&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持默认位置的设定，支持对齐方式和偏移量的设定&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持创建多个单页面浮窗、多个系统浮窗，Tag进行区分&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持出入动画的设定，有默认动画，可自行替换（策略模式）&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;使用简单、链式调用、可轻松修改浮窗View&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持Kotlin DSL，可按需回调状态，摆脱Java的繁琐&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持状态栏沉浸，侧滑打开、拖拽关闭&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;支持解锁更多姿势，如：拖拽缩放、通知弹窗...&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;权限申请&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;系统浮窗&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;前台和过滤&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/%E6%9D%83%E9%99%90%E7%94%B3%E8%AF%B7.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/%E7%B3%BB%E7%BB%9F%E6%B5%AE%E7%AA%97.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/%E6%B5%AE%E7%AA%97%E7%BC%A9%E6%94%BE.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;状态回调&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;拖拽边界&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;拓展使用&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/Callbacks.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/BoarderAndSlide.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/DragUtils.gif&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;下载体验：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://fir.zsc7454.cn/qgp2&#34;&gt;直接下载测试APK&lt;/a&gt;，或者扫码下载：&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/downloadImage.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;关于集成：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;在项目的根目录的&lt;code&gt;build.gradle&lt;/code&gt;添加：&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;allprojects {&#xA;    repositories {&#xA;        ...&#xA;&#x9;maven { url &#39;https://jitpack.io&#39; }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;在应用模块的&lt;code&gt;build.gradle&lt;/code&gt;添加：&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;dependencies {&#xA;    implementation &#39;com.github.princekin-f:EasyFloat:2.0.4&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;dependencies {&#xA;    // 上一代稳定版&#xA;    implementation &#39;com.github.princekin-f:EasyFloat:1.3.4&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/README_1.3.4.md&#34;&gt;老版本 v1.3.4 使用文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;一行代码搞定Android浮窗，浮窗从未如此简单：&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;EasyFloat.with(this).setLayout(R.layout.float_test).show()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;关于初始化：&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;2.0.0开始，无需初始化&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;关于权限声明：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;权限声明为非必须；&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;当使用到系统浮窗（&lt;code&gt;ShowPattern.ALL_TIME&lt;/code&gt;、&lt;code&gt;ShowPattern.FOREGROUND&lt;/code&gt;、&lt;code&gt;ShowPattern.BACKROUND&lt;/code&gt;）；&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;需要在&lt;code&gt;AndroidManifest.xml&lt;/code&gt;进行权限声明。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;uses-permission android:name=&#34;android.permission.SYSTEM_ALERT_WINDOW&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;完整使用示例：&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;EasyFloat.with(this)&#xA;    // 设置浮窗xml布局文件/自定义View，并可设置详细信息&#xA;    .setLayout(R.layout.float_app) { }&#xA;    // 设置浮窗显示类型，默认只在当前Activity显示，可选一直显示、仅前台显示&#xA;    .setShowPattern(ShowPattern.ALL_TIME)&#xA;    // 设置吸附方式，共15种模式，详情参考SidePattern&#xA;    .setSidePattern(SidePattern.RESULT_HORIZONTAL)&#xA;    // 设置浮窗的标签，用于区分多个浮窗&#xA;    .setTag(&#34;testFloat&#34;)&#xA;    // 设置浮窗是否可拖拽&#xA;    .setDragEnable(true)&#xA;    // 浮窗是否包含EditText，默认不包含&#xA;    .hasEditText(false)&#xA;    // 设置浮窗固定坐标，ps：设置固定坐标，Gravity属性和offset属性将无效&#xA;    .setLocation(100, 200)&#xA;    // 设置浮窗的对齐方式和坐标偏移量&#xA;    .setGravity(Gravity.END or Gravity.CENTER_VERTICAL, 0, 200)&#xA;    // 设置当布局大小变化后，整体view的位置对齐方式&#xA;    .setLayoutChangedGravity(Gravity.END)&#xA;    // 设置拖拽边界值&#xA;    .setBorder(100, 100，800，800)&#xA;    // 设置宽高是否充满父布局，直接在xml设置match_parent属性无效&#xA;    .setMatchParent(widthMatch = false, heightMatch = false)&#xA;    // 设置浮窗的出入动画，可自定义，实现相应接口即可（策略模式），无需动画直接设置为null&#xA;    .setAnimator(DefaultAnimator())&#xA;    // 设置系统浮窗的不需要显示的页面&#xA;    .setFilter(MainActivity::class.java, SecondActivity::class.java)&#xA;    // 设置系统浮窗的有效显示高度（不包含虚拟导航栏的高度），基本用不到，除非有虚拟导航栏适配问题&#xA;    .setDisplayHeight { context -&amp;gt; DisplayUtils.rejectedNavHeight(context) }&#xA;    // 浮窗的一些状态回调，如：创建结果、显示、隐藏、销毁、touchEvent、拖拽过程、拖拽结束。&#xA;    // ps：通过Kotlin DSL实现的回调，可以按需复写方法，用到哪个写哪个&#xA;    .registerCallback {&#xA;        createResult { isCreated, msg, view -&amp;gt;  }&#xA;        show {  }&#xA;        hide {  }&#xA;        dismiss {  }&#xA;        touchEvent { view, motionEvent -&amp;gt;  }&#xA;        drag { view, motionEvent -&amp;gt;  }&#xA;        dragEnd {  }&#xA;    }&#xA;    // 创建浮窗（这是关键哦😂）&#xA;    .show()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;在Java中使用Kotlin DSL不是很方便，状态回调还有一种常规的接口方式：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.registerCallbacks(new OnFloatCallbacks() {&#xA;    // 各种回调...&#xA;    ...&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如果想要在Java是使用Kotlin DSL，可以参考Demo。&lt;/p&gt; &#xA;&lt;h3&gt;悬浮窗权限的检测、申请：&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;无需主动进行权限申请，创建结果、申请结果可在&lt;code&gt;OnFloatCallbacks&lt;/code&gt;的&lt;code&gt;createdResult&lt;/code&gt;获取。&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;// 权限检测&#xA;PermissionUtils.checkPermission(this)&#xA;&#xA;// 权限申请，参数2为权限回调接口&#xA;PermissionUtils.requestPermission(this，OnPermissionResult)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;浮窗的相关API：&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;// 关闭浮窗，force为强制关闭，有退出动画也不执行&#xA;dismiss(tag: String? = null, force: Boolean = false)&#xA;&#xA;// 隐藏浮窗&#xA;hide(tag: String? = null)&#xA;&#xA;// 显示浮窗&#xA;show(tag: String? = null)&#xA;&#xA;// 设置是否可拖拽&#xA;dragEnable(dragEnable: Boolean, tag: String? = null)&#xA;&#xA;// 浮窗是否显示&#xA;isShow(tag: String? = null)&#xA;&#xA;// 获取我们设置的浮窗View&#xA;getFloatView(tag: String? = null)&#xA;&#xA;// 更新浮窗位置、大小信息，未指定数值执行吸附动画&#xA;updateFloat(tag: String? = null, x: Int = -1, y: Int = -1, width: Int = -1, height: Int = -1)&#xA;&#xA;// *******************  系统浮窗独有  *******************&#xA;// 添加单个浮窗过滤页面&#xA;filterActivity(activity: Activity, tag: String? = null)&#xA;&#xA;// 添加多个浮窗过滤页面&#xA;filterActivities(tag: String? = null, vararg clazz: Class&amp;lt;*&amp;gt;)&#xA;&#xA;// 移除单个浮窗过滤页面&#xA;removeFilter(activity: Activity, tag: String? = null)&#xA;&#xA;// 移除多个浮窗过滤页面&#xA;removeFilters(tag: String? = null, vararg clazz: Class&amp;lt;*&amp;gt;)&#xA;&#xA;// 清空过滤页面&#xA;clearFilters(tag: String? = null)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;PS：&lt;code&gt;? = null&lt;/code&gt; 代表可选参数，不填也行，默认值为null。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;拖拽关闭、侧滑创建：&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;// 在拖拽回调中，注册拖拽关闭&#xA;drag { view, motionEvent -&amp;gt;&#xA;    DragUtils.registerDragClose(motionEvent, object : OnTouchRangeListener {&#xA;        override fun touchInRange(inRange: Boolean, view: BaseSwitchView) {&#xA;            // 震动、视图调整等...&#xA;        }&#xA;&#xA;        override fun touchUpInRange() {&#xA;            // 关闭浮窗等...&#xA;            EasyFloat.dismiss(tag, true)&#xA;        }&#xA;    })&#xA;}&#xA;&#xA;// 在Activity的dispatchTouchEvent中，注册侧滑创建&#xA;DragUtils.registerSwipeAdd(ev, object : OnTouchRangeListener {&#xA;    override fun touchInRange(inRange: Boolean, view: BaseSwitchView) {&#xA;        // 震动、视图调整等...&#xA;    }&#xA;&#xA;    override fun touchUpInRange() {&#xA;        // 浮窗创建等，详情参考：SwipeTestActivity&#xA;        showFloat()&#xA;    }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;关于混淆：&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;自带混淆规则，正常情况下无需手动导入。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;关于感谢：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;权限适配：&lt;a href=&#34;https://github.com/zhaozepeng/FloatWindowPermission&#34;&gt;FloatWindowPermission&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;关于更新：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/princekin-f/EasyFloat/raw/master/UpdateDoc.md&#34;&gt;查看版本更新日志&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;交流和激励：&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;为了大家更好的交流和反馈，我们创建了QQ群：&lt;code&gt;818756969&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;如果该库对你提供了帮助，你可以小小的赏赞一下作者，同样作者也会非常感谢你！我们一起众筹云测😘&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/EasyFloatGroup.jpeg&#34; width=&#34;266&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/Alipay.jpeg&#34; width=&#34;266&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/princekin-f/EasyFloat/raw/master/readme/WeChatPay.jpeg&#34; width=&#34;266&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2019 Liu Zhenfeng.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>AppIntro/AppIntro</title>
    <updated>2022-10-13T01:35:29Z</updated>
    <id>tag:github.com,2022-10-13:/AppIntro/AppIntro</id>
    <link href="https://github.com/AppIntro/AppIntro" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Make a cool intro for your Android app.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AppIntro&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://jitpack.io/#AppIntro/appintro&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/AppIntro/AppIntro.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.slack.com/archives/C019SH1RMBN&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@kotlinlang/appintro-yellow.svg?logo=slack&#34; alt=&#34;Join the chat at https://kotlinlang.slack.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AppIntro/AppIntro/actions?query=workflow%3A%22Pre+Merge+Checks%22&#34;&gt;&lt;img src=&#34;https://github.com/AppIntro/AppIntro/workflows/Pre%20Merge%20Checks/badge.svg?sanitize=true&#34; alt=&#34;Pre Merge Checks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/details/1/1939&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android%20Arsenal-AppIntro-green.svg?style=flat&#34; alt=&#34;Android Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/KotlinBy/awesome-kotlin&#34;&gt;&lt;img src=&#34;https://kotlin.link/awesome-kotlin.svg?sanitize=true&#34; alt=&#34;Awesome Kotlin Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;AppIntro is an Android Library that helps you build a &lt;strong&gt;cool carousel intro&lt;/strong&gt; for your App. AppIntro has support for &lt;strong&gt;requesting permissions&lt;/strong&gt; and helps you create a great onboarding experience in just a couple of minutes.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/logo/logo-cropped.png&#34; alt=&#34;appintro icon&#34; width=&#34;60%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/appintro.gif&#34; alt=&#34;appintro sample&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#getting-started-&#34;&gt;Getting Started &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;footprints&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f463.png&#34;&gt;&#xA;    👣&#xA;   &lt;/g-emoji&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#adding-a-dependency&#34;&gt;Adding a dependency&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#basic-usage&#34;&gt;Basic usage&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#java-users&#34;&gt;Java users&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#migrating-&#34;&gt;Migrating &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;car&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f697.png&#34;&gt;&#xA;    🚗&#xA;   &lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#features-&#34;&gt;Features &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;toolbox&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f9f0.png&#34;&gt;&#xA;    🧰&#xA;   &lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#creating-slides-&#34;&gt;Creating Slides &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;woman_artist&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f469-1f3a8.png&#34;&gt;&#xA;    👩‍🎨&#xA;   &lt;/g-emoji&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#appintrofragment&#34;&gt;AppIntroFragment&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#appintrocustomlayoutfragment&#34;&gt;AppIntroCustomLayoutFragment&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#configure-&#34;&gt;Configure &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;art&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png&#34;&gt;&#xA;    🎨&#xA;   &lt;/g-emoji&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#slide-transformer&#34;&gt;Slide Transformer&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#custom-slide-transformer&#34;&gt;Custom Slide Transformer&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#color-transition&#34;&gt;Color Transition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#multiple-windows-layout&#34;&gt;Multiple Windows Layout&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#indicators&#34;&gt;Indicators&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#vibration&#34;&gt;Vibration&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#wizard-mode&#34;&gt;Wizard Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#immersive-mode&#34;&gt;Immersive Mode&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#system-back-button&#34;&gt;System Back button&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#system-ui-status-bar-and-navigation-bar&#34;&gt;System UI (Status Bar and Navigation Bar)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#permission-&#34;&gt;Permission &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;lock&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f512.png&#34;&gt;&#xA;    🔒&#xA;   &lt;/g-emoji&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#slide-policy&#34;&gt;Slide Policy&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#example-app-&#34;&gt;Example App &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;bulb&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png&#34;&gt;&#xA;    💡&#xA;   &lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#translating-&#34;&gt;Translating &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;earth_africa&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f30d.png&#34;&gt;&#xA;    🌍&#xA;   &lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#snapshots-&#34;&gt;Snapshots &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;package&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png&#34;&gt;&#xA;    📦&#xA;   &lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#contributing-&#34;&gt;Contributing &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;handshake&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f91d.png&#34;&gt;&#xA;    🤝&#xA;   &lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#acknowledgments-&#34;&gt;Acknowledgments &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;cherry_blossom&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f338.png&#34;&gt;&#xA;    🌸&#xA;   &lt;/g-emoji&gt;&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#maintainers&#34;&gt;Maintainers&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#libraries&#34;&gt;Libraries&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#license-&#34;&gt;License &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;page_facing_up&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4c4.png&#34;&gt;&#xA;    📄&#xA;   &lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#apps-using-appintro-&#34;&gt;Apps using AppIntro &#xA;   &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;iphone&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4f1.png&#34;&gt;&#xA;    📱&#xA;   &lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started 👣&lt;/h2&gt; &#xA;&lt;p&gt;AppIntro is distributed through &lt;a href=&#34;https://jitpack.io/#AppIntro/AppIntro&#34;&gt;JitPack&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Adding a dependency&lt;/h3&gt; &#xA;&lt;p&gt;To use it you need to add the following gradle dependency to your &lt;code&gt;build.gradle&lt;/code&gt; file of the module where you want to use AppIntro (NOT the root file).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;    maven { url &#34;https://jitpack.io&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencies {&#xA;    // AndroidX Capable version&#xA;    implementation &#39;com.github.AppIntro:AppIntro:6.2.0&#39;&#xA;    &#xA;    // *** OR ***&#xA;    &#xA;    // Latest version compatible with the old Support Library&#xA;    implementation &#39;com.github.AppIntro:AppIntro:4.2.3&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that since AppIntro 5.x, the library supports &lt;a href=&#34;https://developer.android.com/jetpack/androidx/&#34;&gt;Android X&lt;/a&gt;. If you haven&#39;t migrated yet, you probably want to use a previous version of the library that uses the &lt;strong&gt;old Support Library&lt;/strong&gt; packages (or try &lt;a href=&#34;https://ncorti.com/blog/jetifier-reverse&#34;&gt;Jetifier Reverse mode&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Basic usage&lt;/h3&gt; &#xA;&lt;p&gt;To use AppIntro, you simply have to create a new &lt;strong&gt;Activity that extends AppIntro&lt;/strong&gt; like the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class MyCustomAppIntro : AppIntro() {&#xA;    override fun onCreate(savedInstanceState: Bundle?) {&#xA;        super.onCreate(savedInstanceState)&#xA;        // Make sure you don&#39;t call setContentView!&#xA;&#xA;        // Call addSlide passing your Fragments.&#xA;        // You can use AppIntroFragment to use a pre-built fragment&#xA;        addSlide(AppIntroFragment.createInstance(&#xA;                title = &#34;Welcome...&#34;,&#xA;                description = &#34;This is the first slide of the example&#34;&#xA;        ))&#xA;        addSlide(AppIntroFragment.createInstance(&#xA;                title = &#34;...Let&#39;s get started!&#34;,&#xA;                description = &#34;This is the last slide, I won&#39;t annoy you more :)&#34;&#xA;        ))&#xA;    }&#xA;&#xA;    override fun onSkipPressed(currentFragment: Fragment?) {&#xA;        super.onSkipPressed(currentFragment)&#xA;        // Decide what to do when the user clicks on &#34;Skip&#34;&#xA;        finish()&#xA;    }&#xA;&#xA;    override fun onDonePressed(currentFragment: Fragment?) {&#xA;        super.onDonePressed(currentFragment)&#xA;        // Decide what to do when the user clicks on &#34;Done&#34;&#xA;        finish()&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Please note that you &lt;strong&gt;must NOT call&lt;/strong&gt; setContentView. The &lt;code&gt;AppIntro&lt;/code&gt; superclass is taking care of it for you.&lt;/p&gt; &#xA;&lt;p&gt;Also confirm that you&#39;re overriding &lt;code&gt;onCreate&lt;/code&gt; with &lt;strong&gt;a single parameter&lt;/strong&gt; (&lt;code&gt;Bundle&lt;/code&gt;) and you&#39;re not using another override (like &lt;code&gt;onCreate(Bundle, PersistableBundle)&lt;/code&gt;) instead.&lt;/p&gt; &#xA;&lt;p&gt;Finally, declare the activity in your Manifest like so:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;activity android:name=&#34;com.example.MyCustomAppIntro&#34;&#xA;    android:label=&#34;My Custom AppIntro&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We suggest to don&#39;t declare &lt;code&gt;MyCustomAppIntro&lt;/code&gt; as your first Activity unless you want the intro to launch every time your app starts. Ideally you should show the AppIntro activity only once to the user, and you should hide it once completed (you can use a flag in the &lt;code&gt;SharedPreferences&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;h3&gt;Java users&lt;/h3&gt; &#xA;&lt;p&gt;You can find many examples in java language in the &lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/example/src/main/java/com/github/appintro/example/ui/java/JavaIntro.java&#34;&gt;examples directory&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Migrating 🚗&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re migrating &lt;strong&gt;from AppIntro v5.x to v6.x&lt;/strong&gt;, please expect multiple breaking changes. You can find documentation on how to update your code on this other &lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/docs/migrating-from-5.0.md&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features 🧰&lt;/h2&gt; &#xA;&lt;p&gt;Don&#39;t forget to check the &lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; to have a look at all the changes in the latest version of AppIntro.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;API &amp;gt;= 14&lt;/strong&gt; compatible.&lt;/li&gt; &#xA; &lt;li&gt;100% Kotlin Library.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;AndroidX&lt;/strong&gt; Compatible.&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;strong&gt;runtime permissions&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Dependent only on AndroidX AppCompat/Annotations, ConstraintLayout and Kotlin JDK.&lt;/li&gt; &#xA; &lt;li&gt;Full RTL support.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Creating Slides 👩‍🎨&lt;/h2&gt; &#xA;&lt;p&gt;The entry point to add a new slide is the &lt;code&gt;addSlide(fragment: Fragment)&lt;/code&gt; function on the &lt;code&gt;AppIntro&lt;/code&gt; class. You can easily use it to add a new &lt;code&gt;Fragment&lt;/code&gt; to the carousel.&lt;/p&gt; &#xA;&lt;p&gt;The library comes with several util classes to help you create your Slide with just a couple lines:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;AppIntroFragment&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;You can use the &lt;code&gt;AppIntroFragment&lt;/code&gt; if you just want to customize title, description, image and colors. That&#39;s the suggested approach if you want to create a quick intro:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;addSlide(AppIntroFragment.createInstance(&#xA;    title = &#34;The title of your slide&#34;,&#xA;    description = &#34;A description that will be shown on the bottom&#34;,&#xA;    imageDrawable = R.drawable.the_central_icon,&#xA;    backgroundDrawable = R.drawable.the_background_image,&#xA;    titleColorRes = R.color.yellow,&#xA;    descriptionColorRes = R.color.red,&#xA;    backgroundColorRes = R.color.blue,&#xA;    titleTypefaceFontRes = R.font.opensans_regular,&#xA;    descriptionTypefaceFontRes = R.font.opensans_regular,&#xA;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;All the parameters are optional, so you&#39;re free to customize your slide as you wish.&lt;/p&gt; &#xA;&lt;p&gt;If you need to programmatically create several slides you can also use the &lt;code&gt;SliderPage&lt;/code&gt; class. This class can be passed to &lt;code&gt;AppIntroFragment.createInstance(sliderPage: SliderPage)&lt;/code&gt; that will create a new slide starting from that instance.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;AppIntroCustomLayoutFragment&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;If you need further control on the customization of your slide, you can use the &lt;code&gt;AppIntroCustomLayoutFragment&lt;/code&gt;. This will allow you pass your custom Layout Resource file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;AppIntroCustomLayoutFragment.newInstance(R.layout.intro_custom_layout1)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This allows you to achieve complex layout and include your custom logic in the Intro (see also &lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/#slide-policy&#34;&gt;Slide Policy&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/custom-layout.png&#34; alt=&#34;appintro custom-layout&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Configure 🎨&lt;/h2&gt; &#xA;&lt;p&gt;AppIntro offers several configuration option to help you customize your onboarding experience.&lt;/p&gt; &#xA;&lt;h3&gt;Slide Transformer&lt;/h3&gt; &#xA;&lt;p&gt;AppIntro comes with a set of &lt;em&gt;Slide Transformer&lt;/em&gt; that you can use out of the box to animate your Slide transition.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Slide Transformers&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Slide Transformers&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Fade&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/fade.gif&#34; alt=&#34;fade&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Zoom&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/zoom.gif&#34; alt=&#34;zoom&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Flow&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/flow.gif&#34; alt=&#34;flow&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Slide Over&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/slideover.gif&#34; alt=&#34;slideover&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Depth&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/depth.gif&#34; alt=&#34;depth&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Parallax&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/parallax.gif&#34; alt=&#34;parallax&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;You can simply call &lt;code&gt;setTransformer()&lt;/code&gt; and pass one of the subclass of the sealed class &lt;code&gt;AppIntroPageTransformerType&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;setTransformer(AppIntroPageTransformerType.Fade)&#xA;setTransformer(AppIntroPageTransformerType.Zoom)&#xA;setTransformer(AppIntroPageTransformerType.Flow)&#xA;setTransformer(AppIntroPageTransformerType.SlideOver)&#xA;setTransformer(AppIntroPageTransformerType.Depth)&#xA;&#xA;// You can customize your parallax parameters in the constructors. &#xA;setTransformer(AppIntroPageTransformerType.Parallax(&#xA;                titleParallaxFactor = 1.0,&#xA;                imageParallaxFactor = -1.0,&#xA;                descriptionParallaxFactor = 2.0&#xA;))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Custom Slide Transformer&lt;/h4&gt; &#xA;&lt;p&gt;You can also provide your custom Slide Transformer (implementing the &lt;code&gt;ViewPager.PageTransformer&lt;/code&gt; interface) with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;setCustomTransformer(ViewPager.PageTransformer)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Color Transition&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/color-transition.gif&#34; alt=&#34;appintro sample&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;AppIntro offers the possibility to animate the &lt;strong&gt;color transition&lt;/strong&gt; between two slides background. This feature is disabled by default, and you need to enable it on your AppIntro with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;isColorTransitionsEnabled = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once you enable it, the color will be animated between slides with a gradient. Make sure you provide a &lt;code&gt;backgroundColor&lt;/code&gt; parameter in your slides.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re providing custom Fragments, you can let them support the color transition by implementing the &lt;code&gt;SlideBackgroundColorHolder&lt;/code&gt; interface.&lt;/p&gt; &#xA;&lt;h3&gt;Multiple Windows Layout&lt;/h3&gt; &#xA;&lt;p&gt;AppIntro is shipped with two top-level layouts that you can use. The default layout (&lt;code&gt;AppIntro&lt;/code&gt;) has textual buttons, while the alternative layout has buttons with icons.&lt;/p&gt; &#xA;&lt;p&gt;To change the Window layout, you can simply change your superclass to &lt;code&gt;AppIntro2&lt;/code&gt;. The methods to add and customize the AppIntro are unchanged.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class MyCustomAppIntro : AppIntro2() {&#xA;    // Same code as displayed in the `Basic Usage` section of this README&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;Page&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;AppIntro&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;AppIntro2&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;standard page&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/layout1-start.png&#34; alt=&#34;layout1-start&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/layout2-start.png&#34; alt=&#34;layout2-start&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;last page&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/layout1-end.png&#34; alt=&#34;layout1-end&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/layout2-end.png&#34; alt=&#34;layout2-end&#34; width=&#34;50%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Indicators&lt;/h3&gt; &#xA;&lt;p&gt;AppIntro supports two indicators out of the box to show the progress of the Intro experience to the user:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;DotIndicatorController&lt;/code&gt; represented with a list of Dot (the default)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ProgressIndicatorController&lt;/code&gt; represented with a progress bar.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;code&gt;DotIndicator&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;code&gt;ProgressIndicator&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/dotted-indicator.gif&#34; alt=&#34;dotted indicator&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/progress-indicator.gif&#34; alt=&#34;progress indicator&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Moreover, you can supply your own indicator by providing an implementation of the &lt;code&gt;IndicatorController&lt;/code&gt; interface.&lt;/p&gt; &#xA;&lt;p&gt;You can customize the indicator with the following API on the &lt;code&gt;AppIntro&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Toggle Indicator Visibility                &#xA;isIndicatorEnabled = true&#xA;&#xA;// Change Indicator Color &#xA;setIndicatorColor(&#xA;    selectedIndicatorColor = getColor(R.color.red),&#xA;    unselectedIndicatorColor = getColor(R.color.blue)&#xA;)&#xA;&#xA;// Switch from Dotted Indicator to Progress Indicator&#xA;setProgressIndicator()&#xA;&#xA;// Supply your custom `IndicatorController` implementation&#xA;indicatorController = MyCustomIndicator(/* initialize me */)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t specify any customization, a &lt;code&gt;DotIndicatorController&lt;/code&gt; will be shown.&lt;/p&gt; &#xA;&lt;h3&gt;Vibration&lt;/h3&gt; &#xA;&lt;p&gt;AppIntro supports providing haptic &lt;em&gt;vibration&lt;/em&gt; feedback on button clicks. Please note that you &lt;strong&gt;need to specify the Vibration permission&lt;/strong&gt; in your app Manifest (the library is not doing it). If you forget to specify the permission, the app will experience a crash.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;uses-permission android:name=&#34;android.permission.VIBRATE&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can enable and customize the vibration with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Enable vibration and set duration in ms&#xA;isVibrate = true&#xA;vibrateDuration = 50L&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Wizard Mode&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/wizard1.png&#34; alt=&#34;appintro wizard1&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/wizard2.png&#34; alt=&#34;appintro wizard2&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;AppIntro supports a &lt;em&gt;wizards&lt;/em&gt; mode where the Skip button will be replaced with the back arrow. This comes handy if you&#39;re presenting a Wizard to your user with a set of skip they need to do, and they might frequently go back and forth.&lt;/p&gt; &#xA;&lt;p&gt;You can enable it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;isWizardMode = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Immersive Mode&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/immersive1.png&#34; alt=&#34;appintro immersive1&#34; width=&#34;30%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/immersive2.png&#34; alt=&#34;appintro immersive2&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;If you want to display your Intro with a fullscreen experience, you can enable the &lt;em&gt;Immersive mode&lt;/em&gt;. This will hide both the Status Bar and the Navigation bar and the user will have to scroll from the top of the screen to show them again.&lt;/p&gt; &#xA;&lt;p&gt;This allows you to have more space for your Intro content and graphics.&lt;/p&gt; &#xA;&lt;p&gt;You can enable it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;setImmersiveMode()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;System Back button&lt;/h3&gt; &#xA;&lt;p&gt;You can lock the System Back button if you don&#39;t want your user to go back from intro. This could be useful if you need to request permission and the Intro experience is not optional.&lt;/p&gt; &#xA;&lt;p&gt;If this is the case, please set to true the following flag:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;isSystemBackButtonLocked = true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;System UI (Status Bar and Navigation Bar)&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/system-ui.png&#34; alt=&#34;appintro system-ui&#34; width=&#34;40%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;You can customize the &lt;em&gt;Status Bar&lt;/em&gt;, and the &lt;em&gt;Navigation Bar&lt;/em&gt; visibility &amp;amp; color with the following methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Hide/Show the status Bar&#xA;showStatusBar(true)&#xA;// Control the status bar color&#xA;setStatusBarColor(Color.GREEN)&#xA;setStatusBarColorRes(R.color.green)&#xA;&#xA;// Control the navigation bar color&#xA;setNavBarColor(Color.RED)&#xA;setNavBarColorRes(R.color.red)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Permission 🔒&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/permissions.gif&#34; alt=&#34;appintro permissions&#34; width=&#34;40%&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;AppIntro simplifies the process of requesting &lt;strong&gt;runtime permissions&lt;/strong&gt; to your user. You can integrate one or more permission request inside a slide with the &lt;code&gt;askForPermissions&lt;/code&gt; method inside your activity.&lt;/p&gt; &#xA;&lt;p&gt;Please note that:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;slideNumber&lt;/code&gt; is in a &lt;strong&gt;One-based numbering&lt;/strong&gt; (it starts from 1)&lt;/li&gt; &#xA; &lt;li&gt;You can specify more than one permission if needed&lt;/li&gt; &#xA; &lt;li&gt;You can specify if the permission is required. If so, users can&#39;t proceed if he denies the permission.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Ask for required CAMERA permission on the second slide. &#xA;askForPermissions(&#xA;    permissions = arrayOf(Manifest.permission.CAMERA),&#xA;    slideNumber = 2, &#xA;    required = true)&#xA;&#xA;// Ask for both optional ACCESS_FINE_LOCATION and WRITE_EXTERNAL_STORAGE&#xA;// permission on the third slide.&#xA;askForPermissions(&#xA;    permissions = arrayOf(&#xA;        Manifest.permission.ACCESS_FINE_LOCATION,&#xA;        Manifest.permission.WRITE_EXTERNAL_STORAGE&#xA;    ),&#xA;    slideNumber = 3, &#xA;    required = false)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Should you need further control on the permission request, you can override those two methods on the &lt;code&gt;AppIntro&lt;/code&gt; class:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;override fun onUserDeniedPermission(permissionName: String) {&#xA;    // User pressed &#34;Deny&#34; on the permission dialog&#xA;}&#xA;override fun onUserDisabledPermission(permissionName: String) {&#xA;    // User pressed &#34;Deny&#34; + &#34;Don&#39;t ask again&#34; on the permission dialog&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Slide Policy&lt;/h3&gt; &#xA;&lt;p&gt;If you want to restrict navigation between your slides (i.e. the user has to toggle a checkbox in order to continue), the &lt;code&gt;SlidePolicy&lt;/code&gt; feature might help you.&lt;/p&gt; &#xA;&lt;p&gt;All you have to do is implement &lt;code&gt;SlidePolicy&lt;/code&gt; in your slides.&lt;/p&gt; &#xA;&lt;p&gt;This interface contains the &lt;code&gt;isPolicyRespected&lt;/code&gt; property and the &lt;code&gt;onUserIllegallyRequestedNextPage&lt;/code&gt; method that you must implement with your custom logic&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class MyFragment : Fragment(), SlidePolicy {&#xA;    &#xA;    // If user should be allowed to leave this slide&#xA;    override val isPolicyRespected: Boolean&#xA;        get() = false // Your custom logic here.&#xA;&#xA;    override fun onUserIllegallyRequestedNextPage() {&#xA;        // User illegally requested next slide.&#xA;        // Show a toast or an informative message to the user.&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find a full working example of &lt;code&gt;SlidePolicy&lt;/code&gt; in the &lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/example/src/main/java/com/github/appintro/example/ui/custom/fragments/CustomSlidePolicyFragment.kt&#34;&gt;example app - CustomSlidePolicyFragment.kt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Example App 💡&lt;/h2&gt; &#xA;&lt;p&gt;AppIntro comes with a &lt;strong&gt;sample app&lt;/strong&gt; full of examples and use case that you can use as inspiration for your project. You can find it inside the &lt;a href=&#34;https://github.com/AppIntro/AppIntro/tree/main/example&#34;&gt;/example folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You can get a &lt;strong&gt;debug APK&lt;/strong&gt; of the sample app from the &lt;strong&gt;Pre Merge&lt;/strong&gt; GitHub Actions job as an &lt;a href=&#34;https://github.com/AppIntro/AppIntro/actions?query=workflow%3A%22Pre+Merge+Checks%22&#34;&gt;output artifact here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/assets/sample-app.png&#34; alt=&#34;appintro sample app&#34; width=&#34;40%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Translating 🌍&lt;/h2&gt; &#xA;&lt;p&gt;Do you want to help AppIntro becoming international 🌍? We are more than happy! AppIntro currently supports &lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/appintro/src/main/res&#34;&gt;the following languages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To add a new translation just add a pull request with a new &lt;code&gt;strings.xml&lt;/code&gt; file inside a &lt;code&gt;values-xx&lt;/code&gt; folder (where &lt;code&gt;xx&lt;/code&gt; is a &lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_639-1&#34;&gt;two-letter ISO 639-1 language code&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;In order to provide the translation, your file needs to contain the following strings:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt;&#xA;&amp;lt;resources xmlns:tools=&#34;http://schemas.android.com/tools&#34;&amp;gt;&#xA;    &amp;lt;string name=&#34;app_intro_skip_button&#34;&amp;gt;[Translation for SKIP]&amp;lt;/string&amp;gt;&#xA;    &amp;lt;string name=&#34;app_intro_next_button&#34;&amp;gt;[Translation for NEXT]&amp;lt;/string&amp;gt;&#xA;    &amp;lt;string name=&#34;app_intro_back_button&#34;&amp;gt;[Translation for BACK]&amp;lt;/string&amp;gt;&#xA;    &amp;lt;string name=&#34;app_intro_done_button&#34;&amp;gt;[Translation for DONE]&amp;lt;/string&amp;gt;&#xA;    &amp;lt;string name=&#34;app_intro_image_content_description&#34;&amp;gt;[Translation for &#34;graphics&#34;]&amp;lt;/string&amp;gt;&#xA;&amp;lt;/resources&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;An updated version of the English version translation is &lt;a href=&#34;https://raw.githubusercontent.com/AppIntro/AppIntro/main/appintro/src/main/res/values/strings.xml&#34;&gt;available here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If a translation in your language is already available, please check it and eventually fix it (all the strings should be listed, not just a subset).&lt;/p&gt; &#xA;&lt;h2&gt;Snapshots 📦&lt;/h2&gt; &#xA;&lt;p&gt;Development of AppIntro happens on the &lt;a href=&#34;https://github.com/AppIntro/AppIntro/tree/main&#34;&gt;main&lt;/a&gt; branch. You can get &lt;code&gt;SNAPSHOT&lt;/code&gt; versions directly from JitPack if needed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;repositories {&#xA;    maven { url &#34;https://jitpack.io&#34; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;  implementation &#34;com.github.AppIntro:AppIntro:main-SNAPSHOT&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;⚠️ Please note that the latest snapshot might be &lt;strong&gt;unstable&lt;/strong&gt;. Use it at your own risk ⚠️&lt;/p&gt; &#xA;&lt;h2&gt;Contributing 🤝&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re offering support for AppIntro on the &lt;a href=&#34;https://kotlinlang.slack.com/archives/C019SH1RMBN&#34;&gt;#appintro channel on KotlinLang Slack&lt;/a&gt;. Come and join the conversation over there. If you don&#39;t have access to KotlinLang Slack, you can &lt;a href=&#34;https://surveys.jetbrains.com/s3/kotlin-slack-sign-up&#34;&gt;request access here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We&#39;re looking for contributors! Don&#39;t be shy.&lt;/strong&gt; 👍 Feel free to open issues/pull requests to help me improve this project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When reporting a new Issue, make sure to attach &lt;strong&gt;Screenshots&lt;/strong&gt;, &lt;strong&gt;Videos&lt;/strong&gt; or &lt;strong&gt;GIFs&lt;/strong&gt; of the problem you are reporting.&lt;/li&gt; &#xA; &lt;li&gt;When submitting a new PR, make sure tests are all green. Write new tests if necessary.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Acknowledgments 🌸&lt;/h2&gt; &#xA;&lt;h3&gt;Maintainers&lt;/h3&gt; &#xA;&lt;p&gt;AppIntro is currently developed and maintained by the &lt;a href=&#34;https://github.com/AppIntro&#34;&gt;AppIntro GitHub Org&lt;/a&gt;. When submitting a new PR, please ping one of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/paolorotolo&#34;&gt;@paolorotolo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cortinico&#34;&gt;@cortinico&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Libraries&lt;/h3&gt; &#xA;&lt;p&gt;AppIntro is not relying on any third party library other than those from AndroidX:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;androidx.appcompat:appcompat&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;androidx.annotation:annotation&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;androidx.constraintlayout:constraintlayout&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License 📄&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;    Copyright (C) 2015-2020 AppIntro Developers&#xA;&#xA;    Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;    you may not use this file except in compliance with the License.&#xA;    You may obtain a copy of the License at&#xA;&#xA;       http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;    Unless required by applicable law or agreed to in writing, software&#xA;    distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;    See the License for the specific language governing permissions and&#xA;    limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Apps using AppIntro 📱&lt;/h2&gt; &#xA;&lt;p&gt;If you are using AppIntro in your app and would like to be listed here, please open a pull request and we will be more than happy to include you:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;List of Apps using AppIntro&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.pdfme&#34;&gt;PDF Me&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.skykonig.smoothierecipes&#34;&gt;Smoothie Recipes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.appmindlab.nano&#34;&gt;neutriNote&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.lyk.immersivenote&#34;&gt;Handwriting Note&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.crioltech.roulette&#34;&gt;Friends Roulette&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.jonasng.chinesedictionary&#34;&gt;ChineseDictionary (粵韻漢典離線粵語普通話發聲中文字典)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=sifter.social.network.archaeologist&#34;&gt;Sifter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=notes.service.com.servicenotes&#34;&gt;Service Notes&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=anaware.salarybarometer&#34;&gt;Salary Barometer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=anaware.bestidea&#34;&gt;Best Business Idea!&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.rusdelphi.wifipassword&#34;&gt;Wi-Fi password reminder&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.dunrite.xpaper&#34;&gt;Xpaper - Moto X Wallpapers&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.ofirmiron.findmycarandroidwear&#34;&gt;Find My Parked Car&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.stasbar.vapetoolpro&#34;&gt;Vape Tool Pro&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=se.zinokader.schematiskt&#34;&gt;Schematiskt Skolschema&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.miragestacks.thirdeye&#34;&gt;Third Eye&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.instantbits.cast.webvideo&#34;&gt;Web Video Cast&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.deenysoft.schoolbox&#34;&gt;SchoolBox&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.isidroid.fitchallenge&#34;&gt;Fitness Challenge&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.figsandolives.ice.free&#34;&gt;Crunch (ICE)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=tech.salroid.filmy&#34;&gt;Filmy - Your Movie Guide&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.androidvip.hebf&#34;&gt;HEBF Optimizer ▪ Root&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.javierd.iifym&#34;&gt;IIFYM&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.blitterhead.ampwifi&#34;&gt;Ampwifi Winamp Remote&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.halilibo.hugetwit&#34;&gt;Hugetwit&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=cdn.BooPlayer&#34;&gt;Boo Music Player&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.stevenfrew.beatprompter&#34;&gt;BeatPrompter&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.thesrb.bluewords&amp;amp;referrer=utm_source%3Dappintro%26utm_medium%3Dgithub%26utm_campaign%3Dreadme&#34;&gt;BlueWords&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.swastik.quotesandstatus&amp;amp;hl=en_IN&#34;&gt;Best Quotes &amp;amp; Status 2019 (99000+ Collection)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.torproject.android&#34;&gt;Orbot&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.photovault.photoguard&#34;&gt;PhotoGuard Photo Vault&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.andrieutom.rmp&#34;&gt;Ride My Park - Best Spots, Skateparks Map&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=de.vanse.shoppinglist&#34;&gt;Shopping list&lt;/a&gt; and &lt;a href=&#34;https://play.google.com/store/apps/details?id=de.vanse.shoppinglist.pro&#34;&gt;Shopping list pro&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.photo3dlab.pzpic&#34;&gt;PZPIC - Pan &amp;amp; Zoom Effect Video from Still Picture&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.vernazza.androidfuel&amp;amp;hl=it&#34;&gt;PrezziBenzina&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/cyb3rko/logviewer-for-openhab-app&#34;&gt;LogViewer for openHAB&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.cyberneid.disigoncie&#34;&gt;Firmo con CIE&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=net.inscomers.yourls&#34;&gt;iC-YOURLS&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.securefilemanager.app&#34;&gt;Secure File Manager&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.noonhappen.noonhappen&#34;&gt;Noon Happen&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.casaconnex.alcapote&#34;&gt;Alcapote&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.ehlb.weatherapp&#34;&gt;Weather Forecast&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.just.five&#34;&gt;Zoned Pomodoro Timer&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.emanuelef.remote_capture&#34;&gt;PCAPdroid Network Monitor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
</feed>