<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-22T01:34:27Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Automattic/pocket-casts-android</title>
    <updated>2022-10-22T01:34:27Z</updated>
    <id>tag:github.com,2022-10-22:/Automattic/pocket-casts-android</id>
    <link href="https://github.com/Automattic/pocket-casts-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pocket Casts Android ðŸŽ§&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/308331/194037473-41ad7eba-8602-4be5-be73-49e3c0c48c12.svg#gh-light-mode-only&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/308331/194041226-4c6d8181-cafa-4ea8-8735-1d8106f5e5f6.svg#gh-dark-mode-only&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://buildkite.com/automattic/pocket-casts-android&#34;&gt;&lt;img src=&#34;https://badge.buildkite.com/dc67ef3537ad6cf097ff193b28063347418205a341d55f9940.svg?branch=main&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Automattic/pocket-casts-android/raw/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MPL-blue&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Pocket Casts is the world&#39;s most powerful podcast platform, an app by listeners, for listeners. &lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re just looking to install Pocket Casts Android, you can find it on &lt;a href=&#34;https://play.google.com/store/apps/details?id=au.com.shiftyjelly.pocketcasts&#34;&gt;Google Play&lt;/a&gt;. If you&#39;re a developer wanting to contribute, read on.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you&#39;ve installed &lt;a href=&#34;https://developer.android.com/studio/index.html&#34;&gt;Android Studio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;In Android Studio, open the project from the local repository.&lt;/li&gt; &#xA; &lt;li&gt;Go to Tools â†’ Device Manager and create an emulated device.&lt;/li&gt; &#xA; &lt;li&gt;Go to Run â†’ Edit Configurationsâ€¦ and create an Android App configuration.&lt;/li&gt; &#xA; &lt;li&gt;Select the module &#34;pocketcasts-android.app.main&#34;.&lt;/li&gt; &#xA; &lt;li&gt;Run.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Build and Test&lt;/h2&gt; &#xA;&lt;p&gt;To build, install, and test the project from the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./gradlew :app:assembleDebugProd          # assemble the debug .apk&#xA;$ ./gradlew :app:installDebugProd           # install the debug .apk to a connected device&#xA;$ ./gradlew :app:testDebugUnitTest          # assemble, install and run unit tests&#xA;$ ./gradlew :app:connectedDebugAndroidTest  # assemble, install and run Android tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Directory structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;â”œâ”€â”€ app                    # Mobile app&#xA;â”œâ”€â”€ automotive             # Automotive app&#xA;â”œâ”€â”€ modules&#xA;â”‚   â”œâ”€â”€ features&#xA;â”‚   â”‚   â”œâ”€â”€ account        # Create account and sign in pages.&#xA;â”‚   â”‚   â”œâ”€â”€ cartheme       # Automotive resources needed for the account pages.&#xA;â”‚   â”‚   â”œâ”€â”€ discover       # Discover section.&#xA;â”‚   â”‚   â”œâ”€â”€ filters        # Filters section.&#xA;â”‚   â”‚   â”œâ”€â”€ navigation     # Navigation utilities.&#xA;â”‚   â”‚   â”œâ”€â”€ player         # Full screen player&#xA;â”‚   â”‚   â”œâ”€â”€ podcasts       # Podcasts section.&#xA;â”‚   â”‚   â”œâ”€â”€ profile        # Profile section.&#xA;â”‚   â”‚   â”œâ”€â”€ search         # Search pages.&#xA;â”‚   â”‚   â””â”€â”€ settings       # Settings pages.&#xA;â”‚   â””â”€â”€ services&#xA;â”‚       â”œâ”€â”€ compose        # Shared Compose code.&#xA;â”‚       â”œâ”€â”€ images         # Image resources.&#xA;â”‚       â”œâ”€â”€ localization   # Contains the strings in English and localized strings from GlotPress. &#xA;â”‚       â”œâ”€â”€ model          # The database logic and entities. Also transfer objects required which aren&#39;t stored in the database.&#xA;â”‚       â”œâ”€â”€ preferences    # Stores the user preferences and configuration settings.&#xA;â”‚       â”œâ”€â”€ repositories   # Provides accessing to the data from the &#39;servers&#39; and &#39;model&#39; modules.&#xA;â”‚       â”œâ”€â”€ servers        # Provides the network calls to the servers. The UI layer should access these through the &#39;repositories&#39; module.&#xA;â”‚       â”œâ”€â”€ ui             # Shared UI code for the &#39;compose&#39; and &#39;views&#39; modules. This includes the themes.&#xA;â”‚       â”œâ”€â”€ utils          # Utility classes.&#xA;â”‚       â””â”€â”€ views          # Shred Only the old views code.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/Automattic/pocket-casts-android/main/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to learn about reporting issues, contributing code, and more ways to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you happen to find a security vulnerability, please let us know at &lt;a href=&#34;https://hackerone.com/automattic&#34;&gt;https://hackerone.com/automattic&lt;/a&gt; and allow us to respond before disclosing the issue publicly.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Automattic/pocket-casts-android/main/docs/coding-style.md&#34;&gt;Coding Style&lt;/a&gt; - guidelines and validation and auto-formatting tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Automattic/pocket-casts-android/main/docs/pull-request-guidelines.md&#34;&gt;Pull Request Guidelines&lt;/a&gt; - branch naming and how to write good pull requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Signing a Release&lt;/h2&gt; &#xA;&lt;p&gt;To build a &lt;em&gt;signed&lt;/em&gt; release, add these lines to your ~/.gradle/gradle.properties file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;pocketcastsKeyStoreFile=/Users/username/git/secret.keystore&#xA;pocketcastsKeyStorePassword=&#xA;pocketcastsKeyStoreAlias=&#xA;pocketcastsKeyStoreAliasPassword=&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>silentsignal/burp-text4shell</title>
    <updated>2022-10-22T01:34:27Z</updated>
    <id>tag:github.com,2022-10-22:/silentsignal/burp-text4shell</id>
    <link href="https://github.com/silentsignal/burp-text4shell" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Text4Shell scanner for Burp Suite&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Text4Shell scanner for Burp Suite&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/silentsignal/burp-text4shell/master/screenshot.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Detailed description can be found &lt;a href=&#34;https://blog.silentsignal.eu/2022/10/18/our-new-scanner-for-text4shell/&#34;&gt;in our blog post about this plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note about detection capabilities: this plugin will only supply the built-in active scanner with payloads, thus for optimal coverage vs. performance, you&#39;ll have to configure your scan properly â€“ just as with any other built-in or extension-provided scan.&lt;/p&gt; &#xA;&lt;h2&gt;Single-issue scan&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to scan only for CVE-2022-42889 (and not other things such as XSS or SQLi), this plugin makes it possible.&lt;/p&gt; &#xA;&lt;p&gt;By following the instructions below, the scanner will only perform Text4Shell checks on all insertion points if the scan configuration created as a result is used.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;When creating a new scan, click &lt;code&gt;Select from library&lt;/code&gt; on the &lt;code&gt;Scan configuration&lt;/code&gt; tab&lt;/li&gt; &#xA; &lt;li&gt;Pick &lt;code&gt;Audit checks - extensions only&lt;/code&gt; which is built into Burp Suite Pro 2.x&lt;/li&gt; &#xA; &lt;li&gt;Disable every other extension (if applicable) that have an active scan check registered (such as ActiveScan++, Backslash powered scanning, Burp Bounty, etc.) so that only the Text4Shell scanner runs&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Execute &lt;code&gt;./gradlew build&lt;/code&gt; and you&#39;ll have the plugin ready in &lt;code&gt;build/libs/burp-text4shell.jar&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The whole project is available under the GNU General Public License v3.0, see &lt;code&gt;LICENSE.md&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>