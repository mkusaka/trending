<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-28T01:36:12Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebook/ktfmt</title>
    <updated>2022-10-28T01:36:12Z</updated>
    <id>tag:github.com,2022-10-28:/facebook/ktfmt</id>
    <link href="https://github.com/facebook/ktfmt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A program that reformats Kotlin source code to comply with the common community standard for Kotlin code conventions.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/facebookincubator/ktfmt/actions?query=workflow%3Abuild&#34;&gt;&lt;img src=&#34;https://github.com/facebookincubator/ktfmt/workflows/build/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;ktfmt&lt;/h1&gt; &#xA;&lt;p&gt;&lt;code&gt;ktfmt&lt;/code&gt; is a program that pretty-prints (formats) Kotlin code, based on &lt;a href=&#34;https://github.com/google/google-java-format&#34;&gt;google-java-format&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that &lt;code&gt;ktfmt&lt;/code&gt; still has some rough edges which we&#39;re constantly working on fixing.&lt;/p&gt; &#xA;&lt;p&gt;The minimum supported runtime version is JDK 11, released September 2018.&lt;/p&gt; &#xA;&lt;h2&gt;Demo&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Before Formatting&lt;/th&gt; &#xA;   &lt;th&gt;Formatted by &lt;code&gt;ktfmt&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebook/ktfmt/main/docs/images/before.png&#34; alt=&#34;Original&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebook/ktfmt/main/docs/images/ktfmt.png&#34; alt=&#34;ktfmt&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;For comparison, the same code formatted by &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;&lt;code&gt;ktlint&lt;/code&gt;&lt;/a&gt; and IntelliJ:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Formatted by &lt;code&gt;ktlint&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th&gt;Formatted by IntelliJ&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebook/ktfmt/main/docs/images/ktlint.png&#34; alt=&#34;ktlint&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebook/ktfmt/main/docs/images/intellij.png&#34; alt=&#34;IntelliJ&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Using the formatter&lt;/h2&gt; &#xA;&lt;h3&gt;IntelliJ, Android Studio, and other JetBrains IDEs&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://plugins.jetbrains.com/plugin/14912-ktfmt&#34;&gt;ktfmt IntelliJ plugin&lt;/a&gt; is available from the plugin repository. To install it, go to your IDE&#39;s settings and select the &lt;code&gt;Plugins&lt;/code&gt; category. Click the &lt;code&gt;Marketplace&lt;/code&gt; tab, search for the &lt;code&gt;ktfmt&lt;/code&gt; plugin, and click the &lt;code&gt;Install&lt;/code&gt; button.&lt;/p&gt; &#xA;&lt;p&gt;The plugin will be disabled by default. To enable it in the current project, go to &lt;code&gt;File→Settings...→ktfmt Settings&lt;/code&gt; (or &lt;code&gt;IntelliJ IDEA→Preferences...→Editor→ktfmt Settings&lt;/code&gt; on macOS) and check the &lt;code&gt;Enable ktfmt&lt;/code&gt; checkbox. (A notification will be presented when you first open a project offering to do this for you.)&lt;/p&gt; &#xA;&lt;p&gt;To enable it by default in new projects, use &lt;code&gt;File→New Project Settings→Preferences for new Projects→Editor→ktfmt Settings&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When enabled, it will replace the normal &lt;code&gt;Reformat Code&lt;/code&gt; action, which can be triggered from the &lt;code&gt;Code&lt;/code&gt; menu or with the Ctrl-Alt-L (by default) keyboard shortcut.&lt;/p&gt; &#xA;&lt;p&gt;To configure IntelliJ to approximate ktfmt&#39;s formatting rules during code editing, you can edit your project&#39;s &lt;a href=&#34;https://www.jetbrains.com/help/idea/configuring-code-style.html#editorconfig&#34;&gt;&lt;code&gt;.editorconfig&lt;/code&gt; file&lt;/a&gt; to include the Kotlin section from one of the files inside &lt;a href=&#34;https://raw.githubusercontent.com/facebook/ktfmt/main/docs/editorconfig&#34;&gt;&lt;code&gt;docs/editorconfig&lt;/code&gt;&lt;/a&gt;. Not all of ktfmt&#39;s rules can be represented as IntelliJ editor settings, so you will still need to run ktfmt. Alternately, that file can be used as a reference to manually change the project&#39;s code style settings.&lt;/p&gt; &#xA;&lt;h3&gt;from the command-line&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/facebookincubator/ktfmt/releases&#34;&gt;Download the formatter&lt;/a&gt; and run it with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;java -jar /path/to/ktfmt-&amp;lt;VERSION&amp;gt;-jar-with-dependencies.jar [--dropbox-style] [files...]&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;--dropbox-style&lt;/code&gt; makes &lt;code&gt;ktfmt&lt;/code&gt; use a block indent of 4 spaces instead of 2. See below for details.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;There is no configurability as to the formatter&#39;s algorithm for formatting (apart from &lt;code&gt;--dropbox-style&lt;/code&gt;). This is a deliberate design decision to unify our code formatting on a single format.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;using Gradle&lt;/h3&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://github.com/cortinico/ktfmt-gradle&#34;&gt;Gradle plugin (ktfmt-gradle)&lt;/a&gt; is available on the Gradle Plugin Portal. To set it up, just follow the instructions in the &lt;a href=&#34;https://github.com/cortinico/ktfmt-gradle#how-to-use-&#34;&gt;How-to-use section&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can use &lt;a href=&#34;https://github.com/diffplug/spotless&#34;&gt;Spotless&lt;/a&gt; with the &lt;a href=&#34;https://github.com/diffplug/spotless/tree/main/plugin-gradle#ktfmt&#34;&gt;ktfmt Gradle plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;using Maven&lt;/h3&gt; &#xA;&lt;p&gt;Consider using &lt;a href=&#34;https://github.com/diffplug/spotless&#34;&gt;Spotless&lt;/a&gt; with the &lt;a href=&#34;https://github.com/diffplug/spotless/tree/main/plugin-maven#ktfmt&#34;&gt;ktfmt Maven plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;code&gt;ktfmt&lt;/code&gt; vs &lt;code&gt;ktlint&lt;/code&gt; vs IntelliJ&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;ktfmt&lt;/code&gt; uses google-java-format&#39;s underlying engine, and as such, many items on &lt;a href=&#34;https://github.com/google/google-java-format/wiki/FAQ&#34;&gt;google-java-format&#39;s FAQ&lt;/a&gt; apply to &lt;code&gt;ktfmt&lt;/code&gt; as well.&lt;/p&gt; &#xA;&lt;p&gt;In particular,&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;ktfmt&lt;/code&gt; ignores most existing formatting. It respects existing newlines in some places, but in general, its output is deterministic and is independent of the input code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ktfmt&lt;/code&gt; exposes no configuration options that govern formatting behavior. See &lt;a href=&#34;https://github.com/google/google-java-format/wiki/FAQ#i-just-need-to-configure-it-a-bit-differently-how&#34;&gt;https://github.com/google/google-java-format/wiki/FAQ#i-just-need-to-configure-it-a-bit-differently-how&lt;/a&gt; for the rationale.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;These two properties make &lt;code&gt;ktfmt&lt;/code&gt; a good fit in large Kotlin code bases, where consistency is very important.&lt;/p&gt; &#xA;&lt;p&gt;We created &lt;code&gt;ktfmt&lt;/code&gt; because &lt;code&gt;ktlint&lt;/code&gt; and IntelliJ sometime fail to produce nice-looking code that fits in 100 columns, as can be seen in the &lt;a href=&#34;https://raw.githubusercontent.com/facebook/ktfmt/main/README.md#Demo&#34;&gt;Demo&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;ktfmt&lt;/code&gt; uses a 2-space indent; why not 4? any way to change that?&lt;/h3&gt; &#xA;&lt;p&gt;Two reasons -&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Many of our projects use a mixture of Kotlin and Java, and we found the back-and-forth in styles to be distracting.&lt;/li&gt; &#xA; &lt;li&gt;From a pragmatic standpoint, the formatting engine behind google-java-format uses more whitespace and newlines than other formatters. Using an indentation of 4 spaces quickly reaches the maximal column width.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;However, we do offer an escape-hatch for projects that absolutely cannot make the move to &lt;code&gt;ktfmt&lt;/code&gt; because of 2-space: the &lt;code&gt;--dropbox-style&lt;/code&gt; flag changes block indents to 4-space.&lt;/p&gt; &#xA;&lt;h2&gt;Developer&#39;s Guide&lt;/h2&gt; &#xA;&lt;h3&gt;Setup&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open &lt;code&gt;pom.xml&lt;/code&gt; in IntelliJ. Choose &#34;Open as a Project&#34;&lt;/li&gt; &#xA; &lt;li&gt;The IntelliJ project will unfortunately be broken on import. To fix, &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Turn off ErrorProne by removing the compiler parameters in IntelliJ at the bottom of &#34;Settings -&amp;gt; Build, Execution, Deployment -&amp;gt; Compiler -&amp;gt; Java Compiler&#34; (see &lt;a href=&#34;https://github.com/google/google-java-format/issues/417&#34;&gt;https://github.com/google/google-java-format/issues/417&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Development&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Currently, we mainly develop by adding tests to &lt;code&gt;FormatterTest.kt&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building on the Command Line&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;mvn install&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;java -jar core/target/ktfmt-&amp;lt;VERSION&amp;gt;-jar-with-dependencies.jar&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Releasing&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/facebook/ktfmt/main/RELEASING.md&#34;&gt;RELEASING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License 2.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>fbsamples/kotlin_ast_tools</title>
    <updated>2022-10-28T01:36:12Z</updated>
    <id>tag:github.com,2022-10-28:/fbsamples/kotlin_ast_tools</id>
    <link href="https://github.com/fbsamples/kotlin_ast_tools" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Utilities and examples used in Meta to simplify migration from Java to Kotlin and maintenance of Kotlin code.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kotlin AST Tools by Meta&lt;/h1&gt; &#xA;&lt;p&gt;These are various examples, tools and utilities extracted from Meta&#39;s Java to Kotlin migration effort. Some of these may be directly used, and some are supplied as examples and inspirations to encourage more automated editing of Kotlin code.&lt;/p&gt; &#xA;&lt;p&gt;We are releasing this to provide examples of AST manipulation in Kotlin using Kotlin APIs in hope that this will encourage more people to use them.&lt;/p&gt; &#xA;&lt;p&gt;Currently, there are three packages here:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;com.facebook.kotlin.asttools&lt;/code&gt; containing some utilities we use to simplify work with the Kotlin compiler API&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;com.facebook.kotlin.matching&lt;/code&gt; containing a helper class to allow simple and readable refactors to a Kotlin file&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;com.facebook.kotlin.postconversion&lt;/code&gt; containing a few examples of common cleanups of newly converted Kotlin files, and a simple command line tool to run them.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Running the tool&lt;/h2&gt; &#xA;&lt;p&gt;The example tool can be built and run with gradle:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew run &amp;lt;kotlin files&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License 2.0&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>aistra0528/Hail</title>
    <updated>2022-10-28T01:36:12Z</updated>
    <id>tag:github.com,2022-10-28:/aistra0528/Hail</id>
    <link href="https://github.com/aistra0528/Hail" rel="alternate"></link>
    <summary type="html">&lt;p&gt;冻结 Android 应用 Freeze Android apps 2:30&lt;/p&gt;&lt;hr&gt;&lt;p&gt;简体中文 | &lt;a href=&#34;https://raw.githubusercontent.com/aistra0528/Hail/master/README_EN.md&#34;&gt;English&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;雹 Hail&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aistra0528/Hail/actions&#34;&gt;&lt;img src=&#34;https://github.com/aistra0528/Hail/workflows/Android%20CI/badge.svg?sanitize=true&#34; alt=&#34;Android CI status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/aistra0528/Hail/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/aistra0528/Hail/total.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/aistra0528/Hail/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/aistra0528/Hail&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;雹是一款用于冻结 Android 应用的自由软件，您可自由享用所有功能。&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.coolapk.com/apk/com.aistra.hail&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aistra0528/Hail/master/coolapk-badge.png&#34; alt=&#34;Get it on CoolApk&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.aistra.hail/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.aistra.hail&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;酷安版签名与 &lt;a href=&#34;https://github.com/aistra0528/Hail/releases&#34;&gt;GitHub Releases&lt;/a&gt; 一致，F-Droid 版由 F-Droid 签名。&lt;/p&gt; &#xA;&lt;p&gt;Google Play 版为 &lt;a href=&#34;https://github.com/purofle&#34;&gt;@purofle&lt;/a&gt; 的 &lt;a href=&#34;https://github.com/purofle/Hail&#34;&gt;Fork&lt;/a&gt;，由 Google 签名。&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/aistra0528/Hail/master/fastlane/metadata/android/zh-CN/images/phoneScreenshots/1.png&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/aistra0528/Hail/master/fastlane/metadata/android/zh-CN/images/phoneScreenshots/2.png&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/aistra0528/Hail/master/fastlane/metadata/android/zh-CN/images/phoneScreenshots/3.png&#34; width=&#34;32%&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;冻结&lt;/h2&gt; &#xA;&lt;p&gt;冻结&lt;code&gt;freeze&lt;/code&gt;是一个营销用语，用于描述使&lt;strong&gt;应用在用户不需要时不可运行&lt;/strong&gt;的行为，以此控制设备使用、减少内存占用和节省电量。用户可在需要时解冻&lt;code&gt;unfreeze&lt;/code&gt;应用。&lt;/p&gt; &#xA;&lt;p&gt;通过隐藏和停用两种方式，都能达到所谓冻结的效果，但其实现存在差异。&lt;/p&gt; &#xA;&lt;h3&gt;隐藏&lt;/h3&gt; &#xA;&lt;p&gt;被隐藏&lt;code&gt;hide&lt;/code&gt;的应用不可使用，也不会出现在启动器和已安装应用列表中。取消隐藏&lt;code&gt;unhide&lt;/code&gt;应用即可恢复。&lt;/p&gt; &#xA;&lt;h3&gt;停用&lt;/h3&gt; &#xA;&lt;p&gt;被停用&lt;code&gt;disable&lt;/code&gt;的应用不可使用，也不会出现在启动器中。在已安装应用列表中应用会显示已停用&lt;code&gt;disabled&lt;/code&gt;状态。启用&lt;code&gt;enable&lt;/code&gt;应用即可恢复。&lt;/p&gt; &#xA;&lt;h2&gt;工作模式&lt;/h2&gt; &#xA;&lt;p&gt;雹支持以&lt;code&gt;设备所有者 - 隐藏&lt;/code&gt;、&lt;code&gt;超级用户 - 停用&lt;/code&gt;和&lt;code&gt;Shizuku - 停用&lt;/code&gt;模式工作。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;由于隐藏和停用的实现存在差异，冻结的应用需要通过相同方式解冻。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;如果您的设备支持无线调试或已 root，推荐选择&lt;code&gt;Shizuku - 停用&lt;/code&gt;。&lt;a href=&#34;https://github.com/RikkaApps/Shizuku&#34;&gt;关于 Shizuku&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果您的设备已 root，可选择&lt;code&gt;超级用户 - 停用&lt;/code&gt;。&lt;strong&gt;此模式性能相对较差。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;如果您的设备不支持无线调试且未 root，可选择&lt;code&gt;设备所有者 - 隐藏&lt;/code&gt;。&lt;strong&gt;此模式兼容性相对较差。&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;设备所有者 - 隐藏&lt;/h3&gt; &#xA;&lt;p&gt;此模式通过将雹设置为设备所有者 (Device Owner)，调用&lt;code&gt;DevicePolicyManager.setApplicationHidden&lt;/code&gt;方法隐藏应用。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;设置为设备所有者的应用需要移除设备所有者后方可卸载。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;通过 adb 将雹设置为设备所有者&lt;/h4&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.google.cn/studio/command-line/adb&#34;&gt;Android 调试桥 (adb) 指南&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.google.cn/studio/releases/platform-tools&#34;&gt;下载 Android SDK 平台工具&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;通过 adb 发出命令：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;adb shell dpm set-device-owner com.aistra.hail/.receiver.DeviceAdminReceiver&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;设置成功后会输出以下信息：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Success: Device owner set to package com.aistra.hail&#xA;Active admin set to component {com.aistra.hail/com.aistra.hail.receiver.DeviceAdminReceiver}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;如输出其他信息，请使用搜索引擎自行查阅与解决。&lt;/p&gt; &#xA;&lt;h4&gt;移除雹的设备所有者&lt;/h4&gt; &#xA;&lt;p&gt;在雹的应用界面点按雹，在弹出的选项中选择卸载。&lt;/p&gt; &#xA;&lt;h3&gt;超级用户 - 停用&lt;/h3&gt; &#xA;&lt;p&gt;此模式通过授予雹超级用户 (Superuser) 权限，执行&lt;code&gt;pm disable&lt;/code&gt;命令停用应用。&lt;/p&gt; &#xA;&lt;h3&gt;Shizuku - 停用&lt;/h3&gt; &#xA;&lt;p&gt;此模式通过 Shizuku 调用非 SDK 接口&lt;code&gt;IPackageManager.setApplicationEnabledSetting&lt;/code&gt;方法停用应用。&lt;/p&gt; &#xA;&lt;h2&gt;恢复&lt;/h2&gt; &#xA;&lt;p&gt;替换 com.package.name 为目标应用的包名，您可在应用界面长按复制。&lt;/p&gt; &#xA;&lt;h3&gt;通过 adb 取消隐藏应用&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;adb shell pm unhide com.package.name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;已 root 设备：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;adb shell su -c pm unhide com.package.name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;通过 adb 启用应用&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;adb shell pm enable com.package.name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;已 root 设备：&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;adb shell su -c pm enable com.package.name&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;通过提供文件管理功能的恢复模式 (recovery)&lt;/h3&gt; &#xA;&lt;p&gt;访问&lt;code&gt;/data/system/users/0/package-restrictions.xml&lt;/code&gt;，此文件存储了应用限制相关信息。您可修改、重命名或直接删除此文件。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;取消隐藏应用：修改&lt;code&gt;hidden&lt;/code&gt;属性为 true 的值为 false&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;启用应用：修改&lt;code&gt;enabled&lt;/code&gt;属性为 2 (DISABLED) 或 3 (DISABLED_USER) 的值为 1 (ENABLED)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;通过恢复模式清除数据 (wipe data)&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;希望您能谨慎地选择冻结应用，以免陷入此窘境。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;API&lt;/h2&gt; &#xA;&lt;p&gt;替换 com.package.name 为目标应用的包名，您可在应用界面长按复制。&lt;/p&gt; &#xA;&lt;p&gt;Java&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class MainActivity extends AppCompatActivity {&#xA;    private void launchApp() {&#xA;        try {&#xA;            Intent intent = new Intent();&#xA;            intent.setAction(&#34;com.aistra.hail.action.LAUNCH&#34;);&#xA;            intent.putExtra(&#34;package&#34;, &#34;com.package.name&#34;);&#xA;            startActivity(intent);&#xA;        } catch (Exception e) {&#xA;            Toast.makeText(this, &#34;Hail not installed&#34;, Toast.LENGTH_SHORT).show();&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kotlin&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class MainActivity : AppCompatActivity() {&#xA;    private fun launchApp() {&#xA;        try {&#xA;            val intent = Intent()&#xA;            intent.setAction(&#34;com.aistra.hail.action.LAUNCH&#34;)&#xA;            intent.putExtra(&#34;package&#34;, &#34;com.package.name&#34;)&#xA;            startActivity(intent)&#xA;        } catch (e: Exception) {&#xA;            Toast.makeText(this, &#34;Hail not installed&#34;, Toast.LENGTH_SHORT).show()&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;action&lt;/code&gt;可为：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;com.aistra.hail.action.LAUNCH&lt;/code&gt;：解冻并启动目标应用。应用未冻结时会直接启动。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;com.aistra.hail.action.FREEZE&lt;/code&gt;：冻结目标应用。应用需处于首页。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;com.aistra.hail.action.UNFREEZE&lt;/code&gt;：解冻目标应用。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;com.aistra.hail.action.FREEZE_ALL&lt;/code&gt;：冻结首页全部应用。无需&lt;code&gt;extra&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;com.aistra.hail.action.UNFREEZE_ALL&lt;/code&gt;：解冻首页全部应用。无需&lt;code&gt;extra&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;com.aistra.hail.action.LOCK&lt;/code&gt;：锁定屏幕。无需&lt;code&gt;extra&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;com.aistra.hail.action.LOCK_FREEZE&lt;/code&gt;：冻结首页全部应用并锁定屏幕。无需&lt;code&gt;extra&lt;/code&gt;。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help Translate&lt;/h2&gt; &#xA;&lt;p&gt;Translate &lt;code&gt;app/src/main/res/values/strings.xml&lt;/code&gt; and put it in the corresponding path.&lt;/p&gt; &#xA;&lt;p&gt;or&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Create an issue about which language you want to translate into.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;We will create a string resource file in the corresponding path.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Translate it and create a pull request.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Thank you!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;繁體中文 &lt;a href=&#34;https://github.com/cracky5322&#34;&gt;@cracky5322&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;日本語 &lt;a href=&#34;https://github.com/AokiFuru&#34;&gt;@AokiFuru&lt;/a&gt; &lt;a href=&#34;https://github.com/404potato&#34;&gt;@404potato&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;русский &lt;a href=&#34;https://github.com/tommynok&#34;&gt;@tommynok&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Español &lt;a href=&#34;https://github.com/cyanwolfg&#34;&gt;@cyanwolfg&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Hail - Freeze Android apps&#xA;Copyright (C) 2021-2022 Aistra&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU General Public License as published by&#xA;the Free Software Foundation, either version 3 of the License, or&#xA;(at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU General Public License&#xA;along with this program.  If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>