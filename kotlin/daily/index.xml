<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-07T01:45:01Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>facebook/facebook-android-sdk</title>
    <updated>2022-07-07T01:45:01Z</updated>
    <id>tag:github.com,2022-07-07:/facebook/facebook-android-sdk</id>
    <link href="https://github.com/facebook/facebook-android-sdk" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Used to integrate Android apps with Facebook Platform.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Facebook SDK for Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/facebook/facebook-android-sdk/workflows/Verify%20build%20with%20gradle/badge.svg?sanitize=true&#34; alt=&#34;Verify build with gradle&#34;&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/com.facebook.android/facebook-android-sdk&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/com.facebook.android/facebook-android-sdk/badge.svg?style=flat&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This open-source library allows you to integrate Facebook into your Android app.&lt;/p&gt; &#xA;&lt;p&gt;Learn more about the provided samples, documentation, integrating the SDK into your app, accessing source code, and more at &lt;a href=&#34;https://developers.facebook.com/docs/android&#34;&gt;https://developers.facebook.com/docs/android&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;span&gt;👋&lt;/span&gt; The SDK team is eager to learn from you! Fill out &lt;a href=&#34;https://facebook.co1.qualtrics.com/jfe/form/SV_2hJ13Imkq1YF9Sm?TrackID=GitHub&#34;&gt;this survey&lt;/a&gt; to tell us what’s most important to you and how we can improve.&lt;/p&gt; &#xA;&lt;h2&gt;TRY IT OUT&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Check-out the tutorials available online at &lt;a href=&#34;https://developers.facebook.com/docs/android/getting-started&#34;&gt;https://developers.facebook.com/docs/android/getting-started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start coding! Visit &lt;a href=&#34;https://developers.facebook.com/docs/android/&#34;&gt;https://developers.facebook.com/docs/android/&lt;/a&gt; for tutorials and reference documentation.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;FEATURES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/docs/facebook-login&#34;&gt;Login&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/docs/sharing&#34;&gt;Sharing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/docs/messenger-expressions&#34;&gt;Messenger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/docs/applinks&#34;&gt;App Links&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/docs/analytics&#34;&gt;Analytics&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/docs/android/graph&#34;&gt;Graph API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.facebook.com/docs/app-events/marketing-kit&#34;&gt;Marketing&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;STRUCTURE&lt;/h2&gt; &#xA;&lt;p&gt;The SDK is separated into modules with the following structure.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;+----------------------------------------------------+&#xA;|                                                    |&#xA;| Facebook-android-sdk                               |&#xA;|                                                    |&#xA;+----------------------------------------------------+&#xA;+----------+ +----------+ +------------+ +-----------+&#xA;|          | |          | |            | |           |&#xA;| Facebook | | Facebook | | Facebook   | | Facebook  |&#xA;| -Login : | | -Share   | | -Messenger | | -Applinks |&#xA;|          | |          | |            | |           |&#xA;+----------+ +----------+ |            | |           |&#xA;+-----------------------+ |            | |           |&#xA;|                       | |            | |           |&#xA;| Facebook-Common       | |            | |           |&#xA;|                       | |            | |           |&#xA;+-----------------------+ +------------+ +-----------+&#xA;+----------------------------------------------------+&#xA;|                                                    |&#xA;| Facebook-Core                                      |&#xA;|                                                    |&#xA;+----------------------------------------------------+&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;USAGE&lt;/h2&gt; &#xA;&lt;p&gt;Facebook SDKs are broken up into separate modules as shown above. To ensure the most optimized use of space only install the modules that you intend to use. To get started, see the Installation section below.&lt;/p&gt; &#xA;&lt;p&gt;Any Facebook SDK initialization must occur only in the main process of the app. Use of Facebook SDK in processes other than the main process is not supported and will likely cause problems.&lt;/p&gt; &#xA;&lt;h2&gt;INSTALLATION&lt;/h2&gt; &#xA;&lt;p&gt;Facebook SDKs are published to Maven as independent modules. To utilize a feature listed above include the appropriate dependency (or dependencies) listed below in your &lt;code&gt;app/build.gradle&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    // Facebook Core only (Analytics)&#xA;    implementation &#39;com.facebook.android:facebook-core:latest.release&#39;&#xA;&#xA;    // Facebook Login only&#xA;    implementation &#39;com.facebook.android:facebook-login:latest.release&#39;&#xA;&#xA;    // Facebook Share only&#xA;    implementation &#39;com.facebook.android:facebook-share:latest.release&#39;&#xA;&#xA;    // Facebook Messenger only&#xA;    implementation &#39;com.facebook.android:facebook-messenger:latest.release&#39;&#xA;&#xA;    // Facebook App Links only&#xA;    implementation &#39;com.facebook.android:facebook-applinks:latest.release&#39;&#xA;&#xA;    // Facebook Android SDK (everything)&#xA;    implementation &#39;com.facebook.android:facebook-android-sdk:latest.release&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You may also need to add the following to your project/build.gradle file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;buildscript {&#xA;    repositories {&#xA;        mavenCentral()&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GIVE FEEDBACK&lt;/h2&gt; &#xA;&lt;p&gt;Please report bugs or issues to &lt;a href=&#34;https://developers.facebook.com/bugs/&#34;&gt;https://developers.facebook.com/bugs/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also visit our &lt;a href=&#34;https://developers.facebook.com/community/&#34;&gt;Facebook Developer Community Forum&lt;/a&gt;, join the &lt;a href=&#34;https://www.facebook.com/groups/fbdevelopers/&#34;&gt;Facebook Developers Group on Facebook&lt;/a&gt;, ask questions on &lt;a href=&#34;http://facebook.stackoverflow.com&#34;&gt;Stack Overflow&lt;/a&gt;, or open an issue in this repository.&lt;/p&gt; &#xA;&lt;h2&gt;SECURITY&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/facebook/facebook-android-sdk/main/SECURITY.md&#34;&gt;SECURITY POLICY&lt;/a&gt; for more info on our bug bounty program.&lt;/p&gt; &#xA;&lt;h2&gt;CONTRIBUTING&lt;/h2&gt; &#xA;&lt;p&gt;We are able to accept contributions to the Facebook SDK for Android. To contribute please do the following.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow the instructions in the &lt;a href=&#34;https://github.com/facebook/facebook-android-sdk/raw/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Submit your pull request to the &lt;a href=&#34;https://github.com/facebook/facebook-android-sdk/tree/main&#34;&gt;main&lt;/a&gt; branch. This allows us to merge your change into our internal main and then push out the change in the next release.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LICENSE&lt;/h2&gt; &#xA;&lt;p&gt;Except as otherwise noted, the Facebook SDK for Android is licensed under the Facebook Platform License (&lt;a href=&#34;https://github.com/facebook/facebook-android-sdk/raw/main/LICENSE.txt&#34;&gt;https://github.com/facebook/facebook-android-sdk/blob/main/LICENSE.txt&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; &#xA;&lt;h2&gt;DEVELOPER TERMS&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;By enabling Facebook integrations, including through this SDK, you can share information with Facebook, including information about people’s use of your app. Facebook will use information received in accordance with our Data Use Policy (&lt;a href=&#34;https://www.facebook.com/about/privacy/&#34;&gt;https://www.facebook.com/about/privacy/&lt;/a&gt;), including to provide you with insights about the effectiveness of your ads and the use of your app. These integrations also enable us and our partners to serve ads on and off Facebook.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You may limit your sharing of information with us by updating the Insights control in the developer tool (&lt;a href=&#34;https://developers.facebook.com/apps/%5Bapp_id%5D/settings/advanced&#34;&gt;https://developers.facebook.com/apps/[app_id]/settings/advanced&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If you use a Facebook integration, including to share information with us, you agree and confirm that you have provided appropriate and sufficiently prominent notice to and obtained the appropriate consent from your users regarding such collection, use, and disclosure (including, at a minimum, through your privacy policy). You further agree that you will not share information with us about children under the age of 13.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You agree to comply with all applicable laws and regulations and also agree to our Terms (&lt;a href=&#34;https://www.facebook.com/policies/&#34;&gt;https://www.facebook.com/policies/&lt;/a&gt;), including our Platform Policies (&lt;a href=&#34;https://developers.facebook.com/policy/&#34;&gt;https://developers.facebook.com/policy/&lt;/a&gt;) and Advertising Guidelines, as applicable (&lt;a href=&#34;https://www.facebook.com/ad_guidelines.php&#34;&gt;https://www.facebook.com/ad_guidelines.php&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By using the Facebook SDK for Android you agree to these terms.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>allenymt/PrivacySentry</title>
    <updated>2022-07-07T01:45:01Z</updated>
    <id>tag:github.com,2022-07-07:/allenymt/PrivacySentry</id>
    <link href="https://github.com/allenymt/PrivacySentry" rel="alternate"></link>
    <summary type="html">&lt;p&gt;工信部-Android隐私合规检测，注解+Asm修改字节码的检测方案&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PrivacySentry&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;android隐私合规检测，不仅仅是是检测，碰到第三方SDK不好解决的或者修复周期很长的，我们等不了那么长时间，可以通过这个库去动态拦截&#xA;例如游客模式，这种通过xposed\epic只能做检测，毕竟xposed\epic不能带到线上，但是asm可以&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;更新日志&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;2022-06-24(1.0.7)&#xA;    1. 新增hook 传感器方法&#xA;    2. 新增静态扫描，支持产出敏感函数hook列表&#xA;2022-06-16(1.0.5)&#xA;    1. 修复Settings.System获取Android_id,未拦截到的问题&#xA;    2. 支持业务方配置同类型的hook函数覆盖自带的hook函数&#xA;    3. 新增MIT开源协议&#xA;2022-04-22(1.0.4)&#xA;    1. 对imei、imsi、mac、android_id、meid、serial等不可变字段，单进程内只读取一次&#xA;    2. 精简堆栈，删除重复部分&#xA;    3. 修复Android_id拦截问题&#xA;2022-03-04(1.0.3)&#xA;    支持变量hook，主要是Build.SERIAL&#xA;2022-1-18(1.0.2)&#xA;    1. 编译期注解+hook方案&#xA;    2. 支持业务方自定义配置拦截，支持游客模式&#xA;2021-12-26(1.0.0)&#xA;    1. Asm修改字节码，hook敏感函数&#xA;2021-12-02(0.0.7)&#xA;    1. 支持多进程&#xA;    2. 日志加上时间戳，方便阅读&#xA;    3. 优化文件分时段写入&#xA;    4. pms增加部分hook方法&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;TODO&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;有其他问题欢迎提issue&lt;/li&gt; &#xA; &lt;li&gt;项目里如果有引入高德地图or openInstall，先加黑 blackList = [&#34;com.loc&#34;,&#34;com.amap.api&#34;,&#34;io.openinstall.sdk&#34;], asm的版本有冲突&lt;/li&gt; &#xA; &lt;li&gt;动态加载的代码拦截不到的&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;如何使用&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;    1. 在根目录的build.gralde下添加&#xA;&#x9;allprojects {&#xA;&#x9;&#x9;repositories {&#xA;&#x9;&#x9;&#x9;...&#xA;&#x9;&#x9;&#x9;maven { url &#39;https://jitpack.io&#39; }&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;&#xA;&#x9;buildscript {&#xA;&#x9;     dependencies {&#xA;&#x9;         // 添加插件依赖&#xA;&#x9;         classpath &#39;com.github.allenymt.PrivacySentry:plugin-sentry:1.0.7&#39;&#xA;&#x9;     }&#xA;&#x9;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;    2. 在项目中的build.gralde下添加&#xA;        // 在主项目里添加插件依赖&#xA;        apply plugin: &#39;privacy-sentry-plugin&#39;&#xA;        &#xA;        dependencies {&#xA;            // aar依赖&#xA;            def privacyVersion = &#34;1.0.7&#34;&#xA;            implementation &#34;com.github.allenymt.PrivacySentry:hook-sentry:$privacyVersion&#34;&#xA;            implementation &#34;com.github.allenymt.PrivacySentry:privacy-annotation:$privacyVersion&#34;&#xA;&#x9;    //如果不想使用库中本身的代理方法，可以不引入这个aar，自己实现&#xA;            implementation &#34;com.github.allenymt.PrivacySentry:privacy-proxy:$privacyVersion&#34;&#xA;        }&#xA;        &#xA;        // 黑名单配置，可以设置这部分包名不会被修改字节码&#xA;        // 项目里如果有引入高德地图，先加黑 blackList = [&#34;com.loc&#34;,&#34;com.amap.api&#34;], asm的版本有冲突&#xA;        // 如果需要生成静态扫描文件， 默认名是replace.json&#xA;        privacy {&#xA;            blackList = []&#xA;            replaceFileName = &#34;replace.json&#34;&#xA;        }&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;    初始化方法最好在attachBaseContext中第一个调用！！！&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;    完成功能的初始化&#xA;    PrivacySentryBuilder builder = new PrivacySentryBuilder()&#xA;                        // 自定义文件结果的输出名&#xA;                        .configResultFileName(&#34;buyer_privacy&#34;)&#xA;                        // 配置游客模式，true打开游客模式，false关闭游客模式&#xA;                        .configVisitorModel(false)&#xA;                        // 配置写入文件日志 , 线上包这个开关不要打开！！！！，true打开文件输入，false关闭文件输入&#xA;                        .enableFileResult(true)&#xA;                        // 持续写入文件30分钟&#xA;                        .configWatchTime(30 * 60 * 1000)&#xA;                        // 文件输出后的回调&#xA;                        .configResultCallBack(new PrivacyResultCallBack() {&#xA;&#xA;                            @Override&#xA;                            public void onResultCallBack(@NonNull String s) {&#xA;&#xA;                            }&#xA;                        });&#xA;    // 添加默认结果输出，包含log输出和文件输出&#xA;    PrivacySentry.Privacy.INSTANCE.init(application, builder);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;    在隐私协议确认的时候调用，这一步非常重要！，一定要加&#xA;    kotlin:PrivacySentry.Privacy.updatePrivacyShow()&#xA;    java:PrivacySentry.Privacy.INSTANCE.updatePrivacyShow();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;    关闭游客模式&#xA;    PrivacySentry.Privacy.INSTANCE.closeVisitorModel();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;    支持自定义配置hook函数&#xA;    /**&#xA; * @author yulun&#xA; * @since 2022-01-13 17:57&#xA; * 主要是两个注解PrivacyClassProxy和PrivacyMethodProxy，PrivacyClassProxy代表要解析的类，PrivacyMethodProxy代表要hook的方法配置&#xA; */&#xA;@Keep&#xA;open class PrivacyProxyResolver {&#xA;     &#xA;    // kotlin里实际解析的是这个PrivacyProxyCall$Proxy 内部类&#xA;    @PrivacyClassProxy&#xA;    @Keep&#xA;    object Proxy {&#xA; &#xA;        // 查询&#xA;        @SuppressLint(&#34;MissingPermission&#34;)&#xA;        @PrivacyMethodProxy(&#xA;            originalClass = ContentResolver::class,   // hook的方法所在的类名&#xA;            originalMethod = &#34;query&#34;,   // hook的方法名&#xA;            originalOpcode = MethodInvokeOpcode.INVOKEVIRTUAL //hook的方法调用，一般是静态调用和实例调用&#xA;        )&#xA;        @JvmStatic&#xA;        fun query(&#xA;            contentResolver: ContentResolver?, //实例调用的方法需要把声明调用对象，我们默认把对象参数放在第一位&#xA;            uri: Uri,&#xA;            projection: Array&amp;lt;String?&amp;gt;?, selection: String?,&#xA;            selectionArgs: Array&amp;lt;String?&amp;gt;?, sortOrder: String?&#xA;        ): Cursor? {&#xA;            doFilePrinter(&#34;query&#34;, &#34;查询服务: ${uriToLog(uri)}&#34;) // 输入日志到文件&#xA;            if (PrivacySentry.Privacy.getBuilder()?.isVisitorModel() == true) { //游客模式开关&#xA;                return null&#xA;            }&#xA;            return contentResolver?.query(uri, projection, selection, selectionArgs, sortOrder)&#xA;        }&#xA;  &#xA;        @RequiresApi(Build.VERSION_CODES.O)&#xA;        @PrivacyMethodProxy(&#xA;            originalClass = android.os.Build::class,&#xA;            originalMethod = &#34;getSerial&#34;,&#xA;            originalOpcode = MethodInvokeOpcode.INVOKESTATIC //静态调用&#xA;        )&#xA;        @JvmStatic&#xA;        fun getSerial(): String? {&#xA;            var result = &#34;&#34;&#xA;            try {&#xA;                doFilePrinter(&#34;getSerial&#34;, &#34;读取Serial&#34;)&#xA;                if (PrivacySentry.Privacy.getBuilder()?.isVisitorModel() == true) {&#xA;                return &#34;&#34;&#xA;                }&#xA;            result = Build.getSerial()&#xA;            } catch (e: Exception) {&#xA;                e.printStackTrace()&#xA;            }&#xA;        return result&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code&gt;    支持多进程，多进程产出的文件名前缀默认增加进程名&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;隐私方法调用结果产出&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code&gt;默认拦截隐私方法时间为1分钟，支持自定义设置时间。&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code&gt;排查结果可参考目录下的demo_result.xls，排查结果支持两个维度查看，第一是结合隐私协议的展示时机和敏感方法的调用时机，第二是统计所有敏感函数的调用次数&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code&gt;排查结果可观察日志，结果文件会在 /storage/emulated/0/Android/data/yourPackgeName/cache/xx.xls，需要手动执行下adb pull&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;基本原理&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code&gt;编译期注解+hook方案，第一个transform收集需要拦截的敏感函数，第二个transform替换敏感函数，运行期收集日志，同时支持游客模式&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code&gt;为什么不用xposed等框架？ 因为想做本地自动化定期排查，第三方hook框架外部依赖性太大&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;pre&gt;&lt;code&gt;为什么不搞基于lint的排查方式？ 工信部对于运行期 敏感函数的调用时机和次数都有限制，代码扫描解决不了这些问题&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;支持的hook函数列表&lt;/h2&gt; &#xA;&lt;p&gt;支持hook以下功能函数：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;当前运行进程和任务&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;系统剪贴板服务&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;读取设备应用列表&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;读取 Android SN(Serial,包括方法和变量)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;读写联系人、日历、本机号码&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;获取定位、基站信息、wifi信息&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Mac 地址、IP 地址&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;读取 IMEI(DeviceId)、MEID、IMSI、ADID(AndroidID)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;手机可用传感器,传感器注册&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;结语&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;整体代码很简单，有问题可以直接提~ (兄弟们，走过路过请给个star~~~)&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>UnlegitMC/XiJinPing110101195306153019</title>
    <updated>2022-07-07T01:45:01Z</updated>
    <id>tag:github.com,2022-07-07:/UnlegitMC/XiJinPing110101195306153019</id>
    <link href="https://github.com/UnlegitMC/XiJinPing110101195306153019" rel="alternate"></link>
    <summary type="html">&lt;p&gt;我叫习近平 我身份证是110101195306153019 欢迎大家查我有没有打国产疫苗&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/88377095/177617051-31be99af-5c55-4253-859b-8e56017c4714.png&#34; alt=&#34;img&#34;&gt; 对比比中国更惨的香港、台湾、日本、韩国，她们的发展速度都比中国快。&lt;/p&gt; &#xA;&lt;p&gt;香港&lt;/p&gt; &#xA;&lt;p&gt;香港是个弹丸之地，甚至不是一个国家。&lt;/p&gt; &#xA;&lt;p&gt;这里没有农田、森林、石油、矿山，什么都没有，吃喝穿用都要靠进口。&lt;/p&gt; &#xA;&lt;p&gt;但即使如此，&lt;/p&gt; &#xA;&lt;p&gt;香港凭借着完善的法制，成为了亚洲的金融中心；&lt;/p&gt; &#xA;&lt;p&gt;香港凭借着保障思想言论的自由，还成为了亚洲的文化艺术中心。&lt;/p&gt; &#xA;&lt;p&gt;台湾&lt;/p&gt; &#xA;&lt;p&gt;香港有英国建造的一些基础设施，而台湾则什么都没有。&lt;/p&gt; &#xA;&lt;p&gt;同时，台湾还要面对大陆的武力威胁，不能安心发展经济。&lt;/p&gt; &#xA;&lt;p&gt;即便如此，台湾凭借着对私营企业的保护，鸿海、台积电、连发科、华硕发展得都很好。&lt;/p&gt; &#xA;&lt;p&gt;而中国大陆，好不容易发展起来的私营企业，随时都有可能被收归国有。&lt;/p&gt; &#xA;&lt;p&gt;韩国&lt;/p&gt; &#xA;&lt;p&gt;老实说，我也不知道韩国是怎么发展起来的，总之，比中国富裕就对了。&lt;/p&gt; &#xA;&lt;p&gt;中国&lt;/p&gt; &#xA;&lt;p&gt;中国大陆有国民党时期留下的工厂、国民党时期培育的人才、国民党时期苏联给的援助，有农田、有森林、有矿山、有油井，现在是粮食进口国+矿物进口国+石油进口国，至今在WTO里享受发展中国家优惠。这真的没有什么好自豪的。&lt;/p&gt; &#xA;&lt;p&gt;1、中国的经济并不强大。&lt;/p&gt; &#xA;&lt;p&gt;许多西方的资金涌入中国，原因大致有四个：&lt;/p&gt; &#xA;&lt;p&gt;一、当时西方的发展速度降低，西方人需要新的投资目的地。&lt;/p&gt; &#xA;&lt;p&gt;二、中国的经济起步低，起步低的国家发展速度自然快，利润也高。&lt;/p&gt; &#xA;&lt;p&gt;三、江胡时期，领导人真的求着西方人来中国投资。&lt;/p&gt; &#xA;&lt;p&gt;四、中国的确很适合发展制造业。&lt;/p&gt; &#xA;&lt;p&gt;看明白了吗？许多在中国工厂是西方人和台湾人建的，这些工厂建在中国，但并不是中国的。&lt;/p&gt; &#xA;&lt;p&gt;如果一个人衣着光鲜、开着豪车、拿着iPhone11，那么他应该是个有钱人。&lt;/p&gt; &#xA;&lt;p&gt;但是如果衣服是借来的，车是贷款买的，手机是裸贷买的，那他还是有钱人吗？&lt;/p&gt; &#xA;&lt;p&gt;中国的各种经济数据都不透明，所以研究中国的经济，只能根据西方媒体和研究机构来挖掘那些被掩盖的数据。&lt;/p&gt; &#xA;&lt;p&gt;最后的结果是，中国的企业、政府，都有高额的负债。&lt;/p&gt; &#xA;&lt;p&gt;我们梳理一下，中国为什么‘经济强大’了：&lt;/p&gt; &#xA;&lt;p&gt;西方人要来中国做生意，就要把钱带进来，存入银行。然后国有企业和政府就会把这些钱借出来，而银行没有胆量拒绝。&lt;/p&gt; &#xA;&lt;p&gt;北上广用这些钱盖一些摩天大楼，来冲高民众的信心。二三线城市建很多没有用的马路和地铁，作出一副很繁荣的样子，冲高地价，然后卖地。&lt;/p&gt; &#xA;&lt;p&gt;建国以来，中国经济的发展轨迹：&lt;/p&gt; &#xA;&lt;p&gt;国穷民穷-》国富民穷-》民穷、国家欠债。&lt;/p&gt; &#xA;&lt;p&gt;中国的高速发展是农业国工业化的结果，与共党无关，共党要不瞎折腾中国会做的更早更好。文化相近的中日韩台在工业化的同时都伴有经济的高速发展，对比之下中国在四国中其实做的最差。&lt;/p&gt; &#xA;&lt;p&gt;中共都是大善人，看不得人受穷！ 中共对电影和电视剧的打压，有些事情是大家看不见的。你们好好想一下，现在的电影和电视剧，描写当代穷人而且穷人是主要角色的有几部？其他电视剧和电影里面，穷人都是什么样的形象，是在婚姻市场卖女儿的吸血父母，是赌博打架坐牢的小混混，是帮大老板做事情偶尔露个脸的杂工，反正没有任何描写普通穷人生活和工作的影视剧。 北京都特地挤一挤，把低端人口赶出北京，是四个一线城市少有的常住人口数量大幅度下降的或者说下降的。&lt;/p&gt; &#xA;&lt;p&gt;多亏了中共，采用今天的GDP总量！ 要不是房价暴涨，翻跟斗跟孙悟空似的，中国的GDP总量怎么可能上的来。你看看拿房价，从五六千涨到两三万，一线城市和二线城市核心地带都能十几万。跟当年的日本一样，卖掉东京就能买下美国。&lt;/p&gt; &#xA;&lt;p&gt;中国的所谓强大经济就靠出口和房地产，你的钱是在美国银行藏着，还是化成了几套水泥砖头组合？&lt;/p&gt; &#xA;&lt;h1&gt;小粉红的抵制真有够可笑的呢&lt;/h1&gt; &#xA;&lt;h1&gt;FDPClient乳党&lt;/h1&gt; &#xA;&lt;h1&gt;所以 我fork一份FDPClient，改一下名，接着用&lt;/h1&gt; &#xA;&lt;h1&gt;意义何在？&lt;/h1&gt; &#xA;&lt;h1&gt;&lt;/h1&gt; &#xA;&lt;h1&gt;到底是哪个国家的开始煽动学生&lt;/h1&gt; &#xA;&lt;h1&gt;你只看被党控制的新闻&lt;/h1&gt; &#xA;&lt;h1&gt;然后接着爱你的共产党去吧&lt;/h1&gt; &#xA;&lt;h1&gt;你们发个截图都要打上马赛克&lt;/h1&gt; &#xA;&lt;h1&gt;提到都不能提到&lt;/h1&gt; &#xA;&lt;h1&gt;是谁控制言论，你们自己心里清楚吧？&lt;/h1&gt; &#xA;&lt;p&gt;政府总是需要被监督的。在民主国家，其分权的政治制度和言论、新闻自由，本身就是很好的监督机制。&lt;/p&gt; &#xA;&lt;p&gt;而共产党实行的是集权专制，没有政治上的法律约束。所以，中共耍起流氓来可以无法无天。那中共是如何向人民交代谁来监督它呢？“自我”！这是中共几十年来欺骗人民的口头禅。从早期的“自我批评”，到后来的“自我”监督，“自我”完善党的领导，到最近的“自我”提高党的执政能力，中共强调的都是共产党具有所谓“自我改善”的强大功能。党不仅口头上说，还真有行动，成立了“中央纪律检查委员会”“信访办”等具有迷惑性的“花瓶”机构。&lt;/p&gt; &#xA;&lt;p&gt;没有道德和法律约束的“自我改善”，用传统的话讲，就是“自心生魔”。这不过是中共拒绝外界监督、拒绝开放党禁报禁的借口，是政治流氓为维护其集团利益和执政“合法性”所用来糊弄人民的幌子。&lt;/p&gt; &#xA;&lt;p&gt;耍政治流氓手腕是中共的特长。“人民民主专政”、“民主集中制”、“政治协商”等等都是骗人的玩意，除了“专政”之外，没有一样是真的。&lt;/p&gt; &#xA;&lt;h1&gt;既然什么都没有做错，为什么不然别人说呢？&lt;/h1&gt; &#xA;&lt;h1&gt;既然什么都没有做错，为什么要偷偷摸摸说呢？&lt;/h1&gt; &#xA;&lt;h1&gt;你要不要去微博，发&#34;8964学生镇压的好&#34;，看看光辉伟大正确的党会不会通过&lt;/h1&gt; &#xA;&lt;h1&gt;你要不要看看有几个中国人知道8964&lt;/h1&gt; &#xA;&lt;h1&gt;是谁控制言论，你们自己心里清楚吧？&lt;/h1&gt; &#xA;&lt;h1&gt;政府不等于国家，共产党不等于中国&lt;/h1&gt; &#xA;&lt;h1&gt;共产党打败国民党，统治大陆地区，大陆地区还叫中国吗？&lt;/h1&gt; &#xA;&lt;h1&gt;分清楚一点。&lt;/h1&gt;</summary>
  </entry>
</feed>