<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-03-07T01:32:16Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JetBrains/compose-hot-reload</title>
    <updated>2025-03-07T01:32:16Z</updated>
    <id>tag:github.com,2025-03-07:/JetBrains/compose-hot-reload</id>
    <link href="https://github.com/JetBrains/compose-hot-reload" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Compose Hot Reload: Make changes to your UI code in a Compose Multiplatform application, and see the results in real time. No restarts required. Compose Hot Reload runs your application on a special desktop JVM, and intelligently reloads your code whenever it is changed.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;üî• Compose Hot Reload&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/incubator.svg?sanitize=true&#34; alt=&#34;JetBrains team project&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Iterate on your compose UIs faster, and let your creativity run free when building multiplatform user interfaces.&lt;/p&gt; &#xA;&lt;picture&gt; &#xA; &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;./readme-assets/banner_dark.png&#34;&gt; &#xA; &lt;img alt=&#34;Text changing depending on mode. Light: &#39;So light!&#39; Dark: &#39;So dark!&#39;&#34; src=&#34;https://raw.githubusercontent.com/JetBrains/compose-hot-reload/master/readme-assets/banner_light.png&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;Make changes to your UI code in a Compose Multiplatform application, and see the results in real time. No restarts required. Compose Hot Reload runs your application on a special desktop JVM, and intelligently reloads your code whenever it is changed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This project is currently experimental.&lt;/strong&gt; No guarantees apply.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A Compose Multiplatform project with a desktop target (see &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-hot-reload/master/#faq&#34;&gt;FAQ&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Kotlin &lt;code&gt;2.1.20-Beta2&lt;/code&gt; or higher&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Apply the Gradle plugin to your project&lt;/h3&gt; &#xA;&lt;p&gt;Add the &lt;code&gt;org.jetbrains.compose.hot-reload&lt;/code&gt; Gradle plugin to your build script:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;    kotlin(&#34;multiplatform&#34;) version &#34;2.1.20-RC&#34; // &amp;lt;- Use Kotlin 2.1.20-RC or higher!&#xA;    kotlin(&#34;plugin.compose&#34;) version &#34;2.1.20-RC&#34; // &amp;lt;- Use Compose Compiler Plugin 2.1.20-RC or higher!&#xA;    id(&#34;org.jetbrains.compose&#34;)&#xA;    id(&#34;org.jetbrains.compose.hot-reload&#34;) version &#34;1.0.0-alpha01&#34; // &amp;lt;- add this additionally&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Enable &#39;OptimizeNonSkippingGroups&#39;:&lt;/h3&gt; &#xA;&lt;p&gt;Add the following to your &lt;code&gt;build.gradle.kts&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import org.jetbrains.kotlin.compose.compiler.gradle.ComposeFeatureFlag&#xA;&#xA;// ...&#xA;&#xA;composeCompiler {&#xA;    featureFlags.add(ComposeFeatureFlag.OptimizeNonSkippingGroups)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Set up automatic provisioning of the JetBrains Runtime (JBR) via Gradle&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;br&gt; To use the full functionality of Compose Hot Reload, your project &lt;strong&gt;must&lt;/strong&gt; run on the JetBrains Runtime (JBR, an OpenJDK fork that supports enhanced class redefinition).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Gradle can perform the download and setup for the JBR automatically for you via &lt;a href=&#34;https://github.com/gradle/foojay-toolchains&#34;&gt;Gradle Toolchains&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Add the following to your &lt;code&gt;settings.gradle.kts&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;    id(&#34;org.gradle.toolchains.foojay-resolver-convention&#34;) version &#34;0.9.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The Compose Hot Reload Gradle plugin will then use this resolver to automatically provision a compatible JDK.&lt;/p&gt; &#xA;&lt;h3&gt;Provide an entry point for your UI to hot-reload&lt;/h3&gt; &#xA;&lt;p&gt;In the &lt;code&gt;desktop&lt;/code&gt; source set of your project, add the following code to a file of your choice, e.g. &lt;code&gt;DevMain.kt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;package my.app&#xA;&#xA;import androidx.compose.material.Text&#xA;import androidx.compose.runtime.Composable&#xA;import androidx.compose.ui.unit.dp&#xA;import androidx.compose.ui.window.WindowState&#xA;import androidx.compose.ui.window.singleWindowApplication&#xA;import org.jetbrains.compose.reload.DevelopmentEntryPoint&#xA;&#xA;fun main() {&#xA;    singleWindowApplication(&#xA;        title = &#34;My CHR App&#34;,&#xA;        state = WindowState(width = 800.dp, height = 800.dp),&#xA;        alwaysOnTop = true&#xA;    ) {&#xA;        DevelopmentEntryPoint {&#xA;            MainPage()&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;@Composable&#xA;fun MainPage() {&#xA;    Text(&#34;üî•&#34;) // Write your own code, call your own composables, or load an entire app.&#xA;    // Make changes, and see them live.&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Optional: Create a custom entry point to launch your hot application&lt;/h3&gt; &#xA;&lt;p&gt;In a regular Kotlin Multiplatform project, you can start your main function by pressing the run ‚ñ∂Ô∏è gutter icon for your &lt;code&gt;main&lt;/code&gt; function. If you prefer starting your application via a Gradle task, you can register&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// build.gradle.kts&#xA;tasks.register&amp;lt;ComposeHotRun&amp;gt;(&#34;runHot&#34;) {&#xA;    mainClass.set(&#34;my.app.DevMainKt&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;My multiplatform project doesn&#39;t have a Desktop target. Can I use Compose Hot Reload?&lt;/h3&gt; &#xA;&lt;p&gt;To use Compose Hot Reload, you&#39;ll have to add a module to your project that does configure a desktop target. It&#39;s worth noting that you will only be able to hot-reload code that can be run on the desktop JVM target. A possible setup might be the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A &lt;code&gt;ui-components&lt;/code&gt; module that specifies platform-agnostic UI components.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;code&gt;gallery&lt;/code&gt; module with a configured desktop target and Compose Hot Reload.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;I am developing an Android application and am not using Kotlin Multiplatform. Can I use Compose Hot Reload?&lt;/h3&gt; &#xA;&lt;p&gt;Compose Hot Reload is designed to work with Compose Multiplatform. If you&#39;d like to use Compose Hot Reload with an Android-only project, you will have to:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Switch from the Jetpack Compose plugin to the Compose Multiplatform plugin.&lt;/li&gt; &#xA; &lt;li&gt;Add a separate Gradle module and configure the &lt;code&gt;desktop&lt;/code&gt; target according to the instructions above.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;My project is a desktop-only app with Compose Multiplatform. Can I use Compose Hot Reload?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! However, please note that you can&#39;t start the application via the run button in the gutter (&lt;a href=&#34;https://youtrack.jetbrains.com/issue/CMP-3123&#34;&gt;CMP-3123&lt;/a&gt;). Instead, use the custom Gradle task as described above.&lt;/p&gt; &#xA;&lt;h2&gt;Using &#39;dev&#39; builds&lt;/h2&gt; &#xA;&lt;p&gt;The project publishes dev builds. To obtain the &#39;dev&#39; Compose Hot Reload artifacts, first add the &lt;code&gt;firework&lt;/code&gt; Maven repository: In your projects&#39; &lt;code&gt;settings.gradle.kts&lt;/code&gt;, add the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;pluginManagement {&#xA;    repositories {&#xA;        maven(&#34;https://packages.jetbrains.team/maven/p/firework/dev&#34;)&#xA;    }&#xA;}&#xA;&#xA;dependencyResolutionManagement {&#xA;    repositories {&#xA;        maven(&#34;https://packages.jetbrains.team/maven/p/firework/dev&#34;)&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>