<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-17T01:45:17Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>coil-kt/coil</title>
    <updated>2022-07-17T01:45:17Z</updated>
    <id>tag:github.com,2022-07-17:/coil-kt/coil</id>
    <link href="https://github.com/coil-kt/coil" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Image loading for Android backed by Kotlin Coroutines.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/logo.svg?sanitize=true&#34; alt=&#34;Coil&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;An image loading library for Android backed by Kotlin Coroutines. Coil is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Coil performs a number of optimizations including memory and disk caching, downsampling the image in memory, automatically pausing/cancelling requests, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: Coil adds ~2000 methods to your APK (for apps that already use OkHttp and Coroutines), which is comparable to Picasso and significantly less than Glide and Fresco.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: Coil&#39;s API leverages Kotlin&#39;s language features for simplicity and minimal boilerplate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern&lt;/strong&gt;: Coil is Kotlin-first and uses modern libraries including Coroutines, OkHttp, Okio, and AndroidX Lifecycles.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Coil is an acronym for: &lt;strong&gt;Co&lt;/strong&gt;routine &lt;strong&gt;I&lt;/strong&gt;mage &lt;strong&gt;L&lt;/strong&gt;oader.&lt;/p&gt; &#xA;&lt;p&gt;Made with ❤️ at &lt;a href=&#34;https://www.instacart.com&#34;&gt;Instacart&lt;/a&gt;. Translations: &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-ko.md&#34;&gt;한국어&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-zh.md&#34;&gt;中文&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-tr.md&#34;&gt;Türkçe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Coil is available on &lt;code&gt;mavenCentral()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation(&#34;io.coil-kt:coil:2.1.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h4&gt;ImageViews&lt;/h4&gt; &#xA;&lt;p&gt;To load an image into an &lt;code&gt;ImageView&lt;/code&gt;, use the &lt;code&gt;load&lt;/code&gt; extension function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// URL&#xA;imageView.load(&#34;https://www.example.com/image.jpg&#34;)&#xA;&#xA;// File&#xA;imageView.load(File(&#34;/path/to/image.jpg&#34;))&#xA;&#xA;// And more...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Requests can be configured with an optional trailing lambda:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;imageView.load(&#34;https://www.example.com/image.jpg&#34;) {&#xA;    crossfade(true)&#xA;    placeholder(R.drawable.image)&#xA;    transformations(CircleCropTransformation())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Jetpack Compose&lt;/h4&gt; &#xA;&lt;p&gt;Import the &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; extension library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation(&#34;io.coil-kt:coil-compose:2.1.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load an image, use the &lt;code&gt;AsyncImage&lt;/code&gt; composable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;AsyncImage(&#xA;    model = &#34;https://example.com/image.jpg&#34;,&#xA;    contentDescription = null&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Image Loaders&lt;/h4&gt; &#xA;&lt;p&gt;Both &lt;code&gt;imageView.load&lt;/code&gt; and &lt;code&gt;AsyncImage&lt;/code&gt; use the singleton &lt;code&gt;ImageLoader&lt;/code&gt; to execute image requests. The singleton &lt;code&gt;ImageLoader&lt;/code&gt; can be accessed using a &lt;code&gt;Context&lt;/code&gt; extension function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val imageLoader = context.imageLoader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ImageLoader&lt;/code&gt;s are designed to be shareable and are most efficient when you create a single instance and share it throughout your app. That said, you can also create your own &lt;code&gt;ImageLoader&lt;/code&gt; instance(s):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val imageLoader = ImageLoader(context)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not want the singleton &lt;code&gt;ImageLoader&lt;/code&gt;, depend on &lt;code&gt;io.coil-kt:coil-base&lt;/code&gt; instead of &lt;code&gt;io.coil-kt:coil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Requests&lt;/h4&gt; &#xA;&lt;p&gt;To load an image into a custom target, &lt;code&gt;enqueue&lt;/code&gt; an &lt;code&gt;ImageRequest&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val request = ImageRequest.Builder(context)&#xA;    .data(&#34;https://www.example.com/image.jpg&#34;)&#xA;    .target { drawable -&amp;gt;&#xA;        // Handle the result.&#xA;    }&#xA;    .build()&#xA;val disposable = imageLoader.enqueue(request)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load an image imperatively, &lt;code&gt;execute&lt;/code&gt; an &lt;code&gt;ImageRequest&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val request = ImageRequest.Builder(context)&#xA;    .data(&#34;https://www.example.com/image.jpg&#34;)&#xA;    .build()&#xA;val drawable = imageLoader.execute(request).drawable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out Coil&#39;s &lt;a href=&#34;https://coil-kt.github.io/coil/getting_started/&#34;&gt;full documentation here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Min SDK 21+&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://coil-kt.github.io/coil/faq/#how-do-i-target-java-8&#34;&gt;Java 8+&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;R8 / Proguard&lt;/h2&gt; &#xA;&lt;p&gt;Coil is fully compatible with R8 out of the box and doesn&#39;t require adding any extra rules.&lt;/p&gt; &#xA;&lt;p&gt;If you use Proguard, you may need to add rules for &lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines/raw/master/kotlinx-coroutines-core/jvm/resources/META-INF/proguard/coroutines.pro&#34;&gt;Coroutines&lt;/a&gt;, &lt;a href=&#34;https://github.com/square/okhttp/raw/master/okhttp/src/jvmMain/resources/META-INF/proguard/okhttp3.pro&#34;&gt;OkHttp&lt;/a&gt; and &lt;a href=&#34;https://github.com/square/okio/raw/master/okio/src/jvmMain/resources/META-INF/proguard/okio.pro&#34;&gt;Okio&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Coil Contributors&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/ideavim</title>
    <updated>2022-07-17T01:45:17Z</updated>
    <id>tag:github.com,2022-07-17:/JetBrains/ideavim</id>
    <link href="https://github.com/JetBrains/ideavim" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Vim emulation plugin for IDEs based on the IntelliJ Platform&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/src/main/resources/META-INF/pluginIcon.svg?sanitize=true&#34; width=&#34;80&#34; height=&#34;80&#34; alt=&#34;icon&#34; align=&#34;left&#34;&gt; &#xA;&lt;h1&gt;IdeaVim&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;Official JetBrains Project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JetBrains/ideavim/raw/master/CONTRIBUTING.md&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/contributions-welcome-brightgreen&#34; alt=&#34;Contributions welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://plugins.jetbrains.com/plugin/164-ideavim&#34;&gt;&lt;img src=&#34;http://img.shields.io/jetbrains/plugin/d/IdeaVIM&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://plugins.jetbrains.com/plugin/164-ideavim&#34;&gt;&lt;img src=&#34;http://img.shields.io/jetbrains/plugin/r/rating/IdeaVIM&#34; alt=&#34;Rating&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://plugins.jetbrains.com/plugin/164-ideavim&#34;&gt;&lt;img src=&#34;https://img.shields.io/jetbrains/plugin/v/ideavim?label=version&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitter.im/JetBrains/ideavim?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/JetBrains/ideavim.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ideavim&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/ideavim?label=twitter%20%40ideavim&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;IdeaVim is a Vim emulation plugin for IntelliJ Platform-based IDEs.&lt;/p&gt; &#xA;&lt;h5&gt;Contact maintainers:&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtrack.jetbrains.com/issues/VIM&#34;&gt;Bug tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ideavim&#34;&gt;@IdeaVim&lt;/a&gt; on Twitter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitter.im/JetBrains/ideavim&#34;&gt;Chat on gitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jb.gg/bi6zp7&#34;&gt;IdeaVim Channel&lt;/a&gt; on &lt;a href=&#34;https://discord.gg/jetbrains&#34;&gt;JetBrains Server&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Resources:&lt;/h5&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/164-ideavim&#34;&gt;Plugin homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/CHANGES.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://teamcity.jetbrains.com/project.html?projectId=IdeaVim&amp;amp;guest=1&#34;&gt;Continuous integration builds&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Compatibility&lt;/h4&gt; &#xA;&lt;p&gt;IntelliJ IDEA, PyCharm, CLion, PhpStorm, WebStorm, RubyMine, AppCode, DataGrip, GoLand, Rider, Cursive, Android Studio and other IntelliJ platform based IDEs.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;IdeaVim can be installed via &lt;code&gt;Settings | Plugins&lt;/code&gt;. See the &lt;a href=&#34;https://www.jetbrains.com/help/idea/managing-plugins.html#&#34;&gt;detailed instructions&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;Tools | Vim Emulator&lt;/code&gt; in the menu to enable or disable emulation.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;~/.ideavimrc&lt;/code&gt; file as an analog of &lt;code&gt;~/.vimrc&lt;/code&gt; (&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/#Files&#34;&gt;learn more&lt;/a&gt;). The XDG standard is supported, as well.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shortcut conflicts can be resolved by using:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;On Linux &amp;amp; Windows: &lt;code&gt;File | Settings | Editor | Vim&lt;/code&gt; &amp;amp; &lt;code&gt;File | Settings | Keymap&lt;/code&gt;,&lt;/li&gt; &#xA;   &lt;li&gt;On macOS: &lt;code&gt;Preferences | Editor | Vim&lt;/code&gt; &amp;amp; &lt;code&gt;Preferences | Keymap&lt;/code&gt;,&lt;/li&gt; &#xA;   &lt;li&gt;Regular Vim mappings in the &lt;code&gt;~/.ideavimrc&lt;/code&gt; file.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Get Early Access&lt;/h2&gt; &#xA;&lt;p&gt;Would you like to try new features and fixes? Join the Early Access Program and receive EAP builds as updates!&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Click the IdeaVim icon &lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/src/main/resources/META-INF/pluginIcon_noBorders.svg?sanitize=true&#34; width=&#34;16&#34; height=&#34;16&#34; alt=&#34;icon&#34;&gt; in the status bar | &lt;code&gt;Early Access Program&lt;/code&gt; | &lt;code&gt;Subscibe to EAP&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Or subscribe to EAP updates manually:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Open &lt;code&gt;Settings | Plugins&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Click the gear icon &lt;span&gt;⚙&lt;/span&gt;, select &lt;code&gt;Manage Plugin Repositories&lt;/code&gt;, and add the following url:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://plugins.jetbrains.com/plugins/eap/ideavim&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/CHANGES.md&#34;&gt;the changelog&lt;/a&gt; for the list of unreleased features.&lt;/p&gt; &#xA;&lt;p&gt;It is important to distinguish EAP builds from traditional pre-release software. Please note that the quality of EAP versions may at times be way below even usual beta standards.&lt;/p&gt; &#xA;&lt;p&gt;You can always leave your feedback with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/ideavim&#34;&gt;@IdeaVim&lt;/a&gt; in Twitter&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtrack.jetbrains.com/issues/VIM&#34;&gt;Bug tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Summary of Supported Vim Features&lt;/h2&gt; &#xA;&lt;p&gt;Here are some examples of supported vim features and commands:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Normal / insert / visual / select / etc. modes&lt;/li&gt; &#xA; &lt;li&gt;Motion / deletion / change / window / etc. commands&lt;/li&gt; &#xA; &lt;li&gt;Key mappings&lt;/li&gt; &#xA; &lt;li&gt;Marks / Macros / Digraphs / Registers&lt;/li&gt; &#xA; &lt;li&gt;Some &lt;a href=&#34;https://github.com/JetBrains/ideavim/wiki/%22set%22-commands&#34;&gt;set commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Full Vim regexps for search and search/replace&lt;/li&gt; &#xA; &lt;li&gt;Vim web help&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.ideavimrc&lt;/code&gt; configuration file&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JetBrains/ideavim/wiki/Emulated-plugins&#34;&gt;Emulated Vim plugins&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;vim-easymotion&lt;/li&gt; &#xA; &lt;li&gt;NERDTree&lt;/li&gt; &#xA; &lt;li&gt;vim-surround&lt;/li&gt; &#xA; &lt;li&gt;vim-multiple-cursors&lt;/li&gt; &#xA; &lt;li&gt;vim-commentary&lt;/li&gt; &#xA; &lt;li&gt;argtextobj.vim&lt;/li&gt; &#xA; &lt;li&gt;vim-textobj-entire&lt;/li&gt; &#xA; &lt;li&gt;ReplaceWithRegister&lt;/li&gt; &#xA; &lt;li&gt;vim-exchange&lt;/li&gt; &#xA; &lt;li&gt;vim-highlightedyank&lt;/li&gt; &#xA; &lt;li&gt;vim-paragraph-motion&lt;/li&gt; &#xA; &lt;li&gt;vim-indent-object&lt;/li&gt; &#xA; &lt;li&gt;match.it&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See also:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/src/main/java/com/maddyhome/idea/vim/package-info.java&#34;&gt;The list of all supported commands&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtrack.jetbrains.com/issues/VIM?q=%23Unresolved+sort+by%3A+votes&#34;&gt;Top feature requests and bugs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/vimscript-info/VIMSCRIPT_ROADMAP.md&#34;&gt;Vimscript support roadmap&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/vimscript-info/FUNCTIONS_INFO.MD&#34;&gt;List of supported in-build functions&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Files&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;~/.ideavimrc&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Your IdeaVim-specific Vim initialization commands&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Example&lt;/strong&gt; (click to see)&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34;&#34;&#34; Map leader to space ---------------------&#xA;let mapleader=&#34; &#34;&#xA;&#xA;&#34;&#34;&#34; Plugins  --------------------------------&#xA;set surround&#xA;set multiple-cursors&#xA;set commentary&#xA;set argtextobj&#xA;set easymotion&#xA;set textobj-entire&#xA;set ReplaceWithRegister&#xA;&#xA;&#34;&#34;&#34; Plugin settings -------------------------&#xA;let g:argtextobj_pairs=&#34;[:],(:),&amp;lt;:&amp;gt;&#34;&#xA;&#xA;&#34;&#34;&#34; Common settings -------------------------&#xA;set showmode&#xA;set so=5&#xA;set incsearch&#xA;set nu&#xA;&#xA;&#34;&#34;&#34; Idea specific settings ------------------&#xA;set ideajoin&#xA;set ideastatusicon=gray&#xA;set idearefactormode=keep&#xA;&#xA;&#34;&#34;&#34; Mappings --------------------------------&#xA;map &amp;lt;leader&amp;gt;f &amp;lt;Plug&amp;gt;(easymotion-s)&#xA;map &amp;lt;leader&amp;gt;e &amp;lt;Plug&amp;gt;(easymotion-f)&#xA;&#xA;map &amp;lt;leader&amp;gt;d &amp;lt;Action&amp;gt;(Debug)&#xA;map &amp;lt;leader&amp;gt;r &amp;lt;Action&amp;gt;(RenameElement)&#xA;map &amp;lt;leader&amp;gt;c &amp;lt;Action&amp;gt;(Stop)&#xA;map &amp;lt;leader&amp;gt;z &amp;lt;Action&amp;gt;(ToggleDistractionFreeMode)&#xA;&#xA;map &amp;lt;leader&amp;gt;s &amp;lt;Action&amp;gt;(SelectInProjectView)&#xA;map &amp;lt;leader&amp;gt;a &amp;lt;Action&amp;gt;(Annotate)&#xA;map &amp;lt;leader&amp;gt;h &amp;lt;Action&amp;gt;(Vcs.ShowTabbedFileHistory)&#xA;map &amp;lt;S-Space&amp;gt; &amp;lt;Action&amp;gt;(GotoNextError)&#xA;&#xA;map &amp;lt;leader&amp;gt;b &amp;lt;Action&amp;gt;(ToggleLineBreakpoint)&#xA;map &amp;lt;leader&amp;gt;o &amp;lt;Action&amp;gt;(FileStructurePopup)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Suggested options&lt;/strong&gt; (click to see)&lt;/summary&gt; &#xA; &lt;p&gt;Here is also a list of the suggested options from &lt;a href=&#34;https://github.com/vim/vim/raw/master/runtime/defaults.vim&#34;&gt;defaults.vim&lt;/a&gt;&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Show a few lines of context around the cursor. Note that this makes the&#xA;&#34; text scroll if you mouse-click near the start or end of the window.&#xA;set scrolloff=5&#xA;&#xA;&#34; Do incremental searching.&#xA;set incsearch&#xA;&#xA;&#34; Don&#39;t use Ex mode, use Q for formatting.&#xA;map Q gq&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;You can read your &lt;code&gt;~/.vimrc&lt;/code&gt; file from &lt;code&gt;~/.ideavimrc&lt;/code&gt; with this command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;source ~/.vimrc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also note that if you have overridden the &lt;code&gt;user.home&lt;/code&gt; JVM option, this will affect where IdeaVim looks for your &lt;code&gt;.ideavimrc&lt;/code&gt; file. For example, if you have &lt;code&gt;-Duser.home=/my/alternate/home&lt;/code&gt; then IdeaVim will source &lt;code&gt;/my/alternate/home/.ideavimrc&lt;/code&gt; instead of &lt;code&gt;~/.ideavimrc&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you can set up initialization commands using &lt;a href=&#34;https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html&#34;&gt;XDG&lt;/a&gt; standard. Put your settings to &lt;code&gt;$XDG_CONFIG_HOME/ideavim/ideavimrc&lt;/code&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Emulated Vim Plugins&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/JetBrains/ideavim/wiki/Emulated-plugins&#34;&gt;doc/emulated-plugins.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Executing IDE Actions&lt;/h2&gt; &#xA;&lt;p&gt;IdeaVim adds various commands for listing and executing arbitrary IDE actions as Ex commands or via &lt;code&gt;:map&lt;/code&gt; command mappings:&lt;/p&gt; &#xA;&lt;h3&gt;Executing actions:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;:action {action_id}&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Execute an action by &lt;code&gt;{action_id}&lt;/code&gt;. Works from Ex command line.&lt;/li&gt; &#xA;   &lt;li&gt;Please don&#39;t use &lt;code&gt;:action&lt;/code&gt; in mappings. Use &lt;code&gt;&amp;lt;Action&amp;gt;&lt;/code&gt; instead.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;&amp;lt;Action&amp;gt;({action_id})&lt;/code&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For the mappings you can use a special &lt;code&gt;&amp;lt;Action&amp;gt;&lt;/code&gt; keyword. Don&#39;t forget the parentheses.&lt;/li&gt; &#xA;   &lt;li&gt;E.g. &lt;code&gt;map gh &amp;lt;Action&amp;gt;(ShowErrorDescription)&lt;/code&gt; &amp;lt;- execute hover on &lt;code&gt;gh&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;span&gt;⚠&lt;/span&gt; Mappings to &lt;code&gt;&amp;lt;Action&amp;gt;&lt;/code&gt; don&#39;t work with &lt;code&gt;noremap&lt;/code&gt;. If you know the case when it&#39;s needed, please &lt;a href=&#34;https://github.com/JetBrains/ideavim#contact-maintainers&#34;&gt;let us know&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Finding action ids:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;IJ provides &lt;code&gt;IdeaVim: track action Ids&lt;/code&gt; command to show the id of the executed actions. This command can be found in &#34;Search everywhere&#34; (double &lt;code&gt;shift&lt;/code&gt;).&lt;/p&gt; &#xA;  &lt;details&gt; &#xA;   &lt;summary&gt;&lt;strong&gt;&#34;Track action Ids&#34; Details&lt;/strong&gt; (click to see)&lt;/summary&gt; &#xA;   &lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/assets/readme/track_action_id.gif&#34; alt=&#34;track action ids&#34;&gt; &#xA;  &lt;/details&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;:actionlist [pattern]&lt;/code&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Find IDE actions by id or keymap pattern (E.g. &lt;code&gt;:actionlist extract&lt;/code&gt;, &lt;code&gt;:actionlist &amp;lt;C-D&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;Examples:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; Map \r to the Reformat Code action&#xA;:map \r &amp;lt;Action&amp;gt;(ReformatCode)&#xA;&#xA;&#34; Map &amp;lt;leader&amp;gt;d to start debug&#xA;:map &amp;lt;leader&amp;gt;d &amp;lt;Action&amp;gt;(Debug)&#xA;&#xA;&#34; Map \b to toggle the breakpoint on the current line&#xA;:map \b &amp;lt;Action&amp;gt;(ToggleLineBreakpoint)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h5&gt;Some popular actions:&lt;/h5&gt; &#xA;&lt;pre&gt;&lt;code&gt;QuickJavaDoc - Quick Documentation (not only for java, all languages)&#xA;ShowErrorDescription - Show description of the error under the caret (cursor hovering)&#xA;QuickImplementations - Quick Definition&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Vim Script&lt;/h2&gt; &#xA;&lt;p&gt;IdeaVim can execute custom scripts that are written with Vim Script. At the moment we support all language features, but not all of the built-in functions and options are supported.&lt;/p&gt; &#xA;&lt;p&gt;Additionally, you may be interested in the &lt;a href=&#34;https://github.com/JetBrains/ideavim/discussions/357&#34;&gt;Vim Script Discussion&lt;/a&gt; or &lt;a href=&#34;https://github.com/JetBrains/ideavim/raw/master/vimscript-info/VIMSCRIPT_ROADMAP.md&#34;&gt;Vim Script Roadmap&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;IDE specific options&lt;/h3&gt; &#xA;&lt;p&gt;You can evaluate the &lt;code&gt;has(&#39;ide&#39;)&lt;/code&gt; function call and get &lt;code&gt;1&lt;/code&gt; if it was called with IdeaVim or &lt;code&gt;0&lt;/code&gt; if the function was called from Vim/NeoVim.&lt;br&gt; The option &lt;code&gt;&amp;amp;ide&lt;/code&gt; contains the name and edition of your IDE, for example, &#34;IntelliJ IDEA Ultimate Edition&#34;.&lt;br&gt; To see its value for the current IDE you are using, execute the &lt;code&gt;:echo &amp;amp;ide&lt;/code&gt; command.&lt;br&gt; To write an IDE-specific configuration, use Vim&#39;s regexp match operators &lt;code&gt;=~?&lt;/code&gt; (case-insensitive) / &lt;code&gt;=~#&lt;/code&gt; (case-sensitive)&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Example config:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;&#34; options and mappings that are supported by both Vim and IdeaVim&#xA;set nu&#xA;set relativenumber&#xA;&#xA;if has(&#39;ide&#39;)&#xA;  &#34; mappings and options that exist only in IdeaVim&#xA;  map &amp;lt;leader&amp;gt;f &amp;lt;Action&amp;gt;(GotoFile)&#xA;  map &amp;lt;leader&amp;gt;g &amp;lt;Action&amp;gt;(FindInPath)&#xA;  map &amp;lt;leader&amp;gt;b &amp;lt;Action&amp;gt;(Switcher)&#xA;&#xA;  if &amp;amp;ide =~? &#39;intellij idea&#39;&#xA;    if &amp;amp;ide =~? &#39;community&#39;&#xA;      &#34; some mappings and options for IntelliJ IDEA Community Edition&#xA;    elseif &amp;amp;ide =~? &#39;ultimate&#39;&#xA;      &#34; some mappings and options for IntelliJ IDEA Ultimate Edition&#xA;    endif&#xA;  elseif &amp;amp;ide =~? &#39;pycharm&#39;&#xA;    &#34; PyCharm specific mappings and options&#xA;  endif&#xA;else&#xA;  &#34; some mappings for Vim/Neovim&#xA;  nnoremap &amp;lt;leader&amp;gt;f &amp;lt;cmd&amp;gt;Telescope find_files&amp;lt;cr&amp;gt;&#xA;endif&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;&lt;span&gt;💎&lt;/span&gt; Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The power of contributing drives IdeaVim &lt;span&gt;💪&lt;/span&gt;. Even small contributions matter!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; to start bringing your value to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Authors&lt;/h2&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/ideavim/master/AUTHORS.md&#34;&gt;AUTHORS.md&lt;/a&gt; for a list of authors and contributors.&lt;/p&gt; &#xA;&lt;h2&gt;IdeaVim tips and tricks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Use the power of IJ and Vim:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;set ideajoin&lt;/code&gt; to enable join via the IDE. See the &lt;a href=&#34;https://jb.gg/f9zji9&#34;&gt;examples&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Make sure &lt;code&gt;ideaput&lt;/code&gt; is enabled for &lt;code&gt;clipboard&lt;/code&gt; to enable native IJ insertion in Vim.&lt;/li&gt; &#xA;   &lt;li&gt;Sync IJ bookmarks and Vim marks: &lt;code&gt;set ideamarks&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Check out more &lt;a href=&#34;https://github.com/JetBrains/ideavim/wiki/%22set%22-commands&#34;&gt;ex commands&lt;/a&gt;.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Use your vim settings with IdeaVim. Put &lt;code&gt;source ~/.vimrc&lt;/code&gt; in &lt;code&gt;~/.ideavimrc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Control the status bar icon via the &lt;a href=&#34;https://github.com/JetBrains/ideavim/wiki/%22set%22-commands&#34;&gt;&lt;code&gt;ideastatusicon&lt;/code&gt; option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Not familiar with the default behaviour during a refactoring? See the &lt;a href=&#34;https://github.com/JetBrains/ideavim/wiki/%22set%22-commands&#34;&gt;&lt;code&gt;idearefactormode&lt;/code&gt; option&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Some facts about Vim&lt;/h2&gt; &#xA;&lt;p&gt;Let’s relax and have some fun now! Here are a few things we&#39;ve found interesting during development and would like to share with you.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;There are no such commands as &lt;code&gt;dd&lt;/code&gt;, &lt;code&gt;yy&lt;/code&gt;, or &lt;code&gt;cc&lt;/code&gt;. For example, &lt;code&gt;dd&lt;/code&gt; is not a separate command for deleting the line, but a &lt;code&gt;d&lt;/code&gt; command with a &lt;code&gt;d&lt;/code&gt; motion.&lt;br&gt; Wait, but there isn&#39;t a &lt;code&gt;d&lt;/code&gt; motion in Vim! That’s right, and that’s why Vim has a dedicated set of commands for which it checks whether the &lt;a href=&#34;https://github.com/vim/vim/raw/759d81549c1340185f0d92524c563bb37697ea88/src/normal.c#L6468&#34;&gt;command equals to motion&lt;/a&gt; and if so, it executes &lt;code&gt;_&lt;/code&gt; motion instead.&lt;br&gt; &lt;code&gt;_&lt;/code&gt; is an interesting motion that isn&#39;t even documented in vi, and it refers to the current line. So, commands like &lt;code&gt;dd&lt;/code&gt;, &lt;code&gt;yy&lt;/code&gt;, and similar ones are simply translated to &lt;code&gt;d_&lt;/code&gt;, &lt;code&gt;y_&lt;/code&gt;, etc. &lt;a href=&#34;https://github.com/vim/vim/raw/759d81549c1340185f0d92524c563bb37697ea88/src/normal.c#L6502&#34;&gt;Here&lt;/a&gt; is the source of this knowledge.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt;, and &lt;code&gt;&amp;amp;&lt;/code&gt; are not separate commands either. They are synonyms of &lt;code&gt;dl&lt;/code&gt;, &lt;code&gt;d$&lt;/code&gt;, and &lt;code&gt;:s\r&lt;/code&gt;, respectively. &lt;a href=&#34;https://github.com/vim/vim/raw/759d81549c1340185f0d92524c563bb37697ea88/src/normal.c#L5365&#34;&gt;Here&lt;/a&gt; is the full list of synonyms.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Have you ever used &lt;code&gt;U&lt;/code&gt; after &lt;code&gt;dd&lt;/code&gt;? &lt;a href=&#34;https://github.com/vim/vim/raw/759d81549c1340185f0d92524c563bb37697ea88/src/ops.c#L874&#34;&gt;Don&#39;t even try&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A lot of variables that refers to visual mode start with two uppercase letters, e.g. &lt;code&gt;VIsual_active&lt;/code&gt;. &lt;a href=&#34;https://github.com/vim/vim/raw/master/src/normal.c#L17&#34;&gt;Some examples&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Other &lt;a href=&#34;https://github.com/vim/vim/raw/759d81549c1340185f0d92524c563bb37697ea88/src/ex_docmd.c#L1845&#34;&gt;strange things&lt;/a&gt; from vi:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&#34;:3&#34; jumps to line 3&lt;/li&gt; &#xA;   &lt;li&gt;&#34;:3|...&#34; prints line 3&lt;/li&gt; &#xA;   &lt;li&gt;&#34;:|&#34; prints current line&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Vim script doesn&#39;t skip white space before comma. &lt;code&gt;F(a ,b)&lt;/code&gt; =&amp;gt; E475.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;IdeaVim is licensed under the terms of the GNU Public License version 2 or any later version.&lt;/p&gt; &#xA;&lt;!-- Badges --&gt;</summary>
  </entry>
</feed>