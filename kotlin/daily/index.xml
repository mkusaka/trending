<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-08T01:39:06Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Kotlin/kotlinx-io</title>
    <updated>2023-07-08T01:39:06Z</updated>
    <id>tag:github.com,2023-07-08:/Kotlin/kotlinx-io</id>
    <link href="https://github.com/Kotlin/kotlinx-io" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin multiplatform I/O library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kotlinx-io&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kotlinlang.org/docs/components-stability.html&#34;&gt;&lt;img src=&#34;https://kotl.in/badges/alpha.svg?sanitize=true&#34; alt=&#34;Kotlin Alpha&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/incubator.svg?sanitize=true&#34; alt=&#34;JetBrains incubator project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://central.sonatype.com/artifact/org.jetbrains.kotlinx/kotlinx-io-core/0.2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.jetbrains.kotlinx/kotlinx-io-core?versionSuffix=0.2.0&#34; alt=&#34;Download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-1.8.21-blue.svg?logo=kotlin&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_KotlinxIo_BuildAggregated&amp;amp;guest=1&#34;&gt;&lt;img src=&#34;https://img.shields.io/teamcity/build/s/KotlinTools_KotlinxIo_BuildAggregated.svg?server=http%3A%2F%2Fteamcity.jetbrains.com&#34; alt=&#34;TeamCity build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://fzhinkin.github.io/kotlinx-io-dokka-docs-preview/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API_reference-KDoc-blue&#34; alt=&#34;KDoc link&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A multiplatform Kotlin library providing basic IO primitives. &lt;code&gt;kotlinx-io&lt;/code&gt; is based on &lt;a href=&#34;https://github.com/square/okio&#34;&gt;Okio&lt;/a&gt; but does not preserve backward compatibility with it.&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;The library is built around &lt;code&gt;Buffer&lt;/code&gt; - a mutable sequence of bytes. &lt;code&gt;Buffer&lt;/code&gt; works like a queue allowing one to read data from its head or write data to its tail.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Buffer&lt;/code&gt; provides functions to read and write data of different built-in types and copy data to or from other buffers. Depending on a target platform, extension functions allowing data exchange with platform-specific types are also provided.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Buffer&lt;/code&gt; consists of segments organized as a linked list. Segments allow reducing memory allocations during the buffer&#39;s expansion and copying. The latter is achieved by delegating or sharing the ownership over the underlying buffer&#39;s segments with other buffers.&lt;/p&gt; &#xA;&lt;p&gt;The library also provides interfaces representing data sources and destinations - &lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Sink&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;In addition to &lt;code&gt;Buffer&lt;/code&gt;, the library provides an immutable sequence of bytes - &lt;code&gt;ByteString&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;There are two &lt;code&gt;kotlinx-io&lt;/code&gt; modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-io/master/bytestring&#34;&gt;kotlinx-io-bytestring&lt;/a&gt; - provides &lt;code&gt;ByteString&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-io/master/core&#34;&gt;kotlinx-io-core&lt;/a&gt; - provides IO primitives (&lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;Source&lt;/code&gt;, &lt;code&gt;Sink&lt;/code&gt;), depends on &lt;code&gt;kotlinx-io-bytestring&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using in your projects&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that the library is experimental, and the API is subject to change.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Gradle&lt;/h3&gt; &#xA;&lt;p&gt;Make sure that you have &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;repositories {&#xA;    mavenCentral()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the library to dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies {&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-io-core:0.2.0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In multiplatform projects, add a dependency to the &lt;code&gt;commonMain&lt;/code&gt; source set dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;kotlin {&#xA;    sourceSets {&#xA;        commonMain {&#xA;            dependencies {&#xA;                implementation(&#34;org.jetbrains.kotlinx:kotlinx-io:0.2.0&#34;)&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Maven&lt;/h3&gt; &#xA;&lt;p&gt;Add the library to dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.jetbrains.kotlinx&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;kotlinx-io-core&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;0.2.0&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-io/master/CONTRIBUTING.md&#34;&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;This project and the corresponding community are governed by the &lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+Open+Source+and+Community+Code+of+Conduct&#34;&gt;JetBrains Open Source and Community Code of Conduct&lt;/a&gt;. Please make sure you read it.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;kotlinx-io is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-io/master/LICENSE&#34;&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to everyone involved in the project.&lt;/p&gt; &#xA;&lt;p&gt;A honorable mention goes to the developers of &lt;a href=&#34;https://square.github.io/okio/&#34;&gt;Okio&lt;/a&gt; that served as the foundation for &lt;code&gt;kotlinx-io&lt;/code&gt; and to &lt;a href=&#34;https://github.com/swankjesse&#34;&gt;Jesse Wilson&lt;/a&gt;, for the help with &lt;code&gt;Okio&lt;/code&gt; adaption, his suggestions, assistance and guidance with &lt;code&gt;kotlinx-io&lt;/code&gt; development.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gdg-berlin-android/ZeBadge</title>
    <updated>2023-07-08T01:39:06Z</updated>
    <id>tag:github.com,2023-07-08:/gdg-berlin-android/ZeBadge</id>
    <link href="https://github.com/gdg-berlin-android/ZeBadge" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Droidcon 2023: The time a new badge saw the light of the day, full with delight and android programming capabillities.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ZeBadge&lt;/h1&gt; &#xA;&lt;p&gt;Droidcon 2023: The time a new badge saw the light of the day, full with delight and android programming capabilities.&lt;/p&gt; &#xA;&lt;h1&gt;Install&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;(Coming soon, see &lt;a href=&#34;https://github.com/gdg-berlin-android/ZeBadge/issues/58&#34;&gt;#58&lt;/a&gt;) &lt;a href=&#34;https://appdistribution.firebase.dev/i/6373ffacb6e72c23&#34;&gt;Firebase App Distribution&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gdg-berlin-android/ZeBadge/releases&#34;&gt;GitHub Release Page&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;This is the badge: &lt;img src=&#34;https://user-images.githubusercontent.com/1162562/236334466-1ccfff65-6744-4304-b4d3-1d200b16ffe8.png&#34; alt=&#34;badgerrpi2040&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;And this is the Android app:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gdg-berlin-android/ZeBadge/releases/&#34;&gt;latest release&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;TBD&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Together they make magic happen. 🪄🦄&lt;/p&gt; &#xA;&lt;h1&gt;Droidcon contribution guide:&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the repo &amp;amp; make write your code&lt;/li&gt; &#xA; &lt;li&gt;Use &#34;droidcon/${name}&#34; format for the branch name so we can find it.&lt;/li&gt; &#xA; &lt;li&gt;When done, open a PR and come to the booth to get you badge.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Getting Started&lt;/h1&gt; &#xA;&lt;p&gt;The following sections are describing the badge in detail, but if you just want to get started, please feel free to follow our &lt;a href=&#34;https://raw.githubusercontent.com/gdg-berlin-android/ZeBadge/main/zehardware/README.md&#34;&gt;Getting Started&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h1&gt;Scenario&lt;/h1&gt; &#xA;&lt;p&gt;The following lines are the thought experiment on how we imagine a visit to the GDG Berlin Android Droidcon 2023 Berlin booth will look like. Alice is an atenndee and Olivia is an organizer.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Actor&lt;/th&gt; &#xA;   &lt;th&gt;Dialog&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alice&lt;/td&gt; &#xA;   &lt;td&gt;Hey, I saw that thing everyone is running around, that with their name on it? They said I can find it here, is that true?&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Olivia&lt;/td&gt; &#xA;   &lt;td&gt;Yes, you came to the right place, this is &lt;em&gt;ZeBadge&lt;/em&gt;, a digital badge that displays your name and can be programmed and changed!&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alice&lt;/td&gt; &#xA;   &lt;td&gt;Oh that is amazing, how does this work? How can I get one?&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Olivia&lt;/td&gt; &#xA;   &lt;td&gt;You need to do what we all love to do: Write some code and create a PR on our open source repository, controlling the badge and the android app. You can get started with using one of our loaner badges, and read one of our getting started guides. Once you have done &#34;something code&#34; with it, you can get your own badge.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alice&lt;/td&gt; &#xA;   &lt;td&gt;Oh, neat, that is this qr code to get started &lt;em&gt;points to one of the printed out sheets&lt;/em&gt;?&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Olivia&lt;/td&gt; &#xA;   &lt;td&gt;Indeed, take loaner number four and happy hacking! Feel free to reach out when we can do something for you.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;em&gt;Alice went over to the loaners, played for 20 minutes with the badge, and was able to follow the getting started guide and create a new page system, showing the weather on page 2. She pushed a PR.&lt;/em&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h1&gt;Graph&lt;/h1&gt; &#xA;&lt;p&gt;The following diagram shows which parts are involved in this badge:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram&#xA;Alice --&amp;gt;&amp;gt; App: Start&#xA;App --&amp;gt; App: Load last configuration&#xA;App --&amp;gt;&amp;gt; Alice: Show Bitmaps for A, B, C, U(p), D(down)&#xA;App --&amp;gt;&amp;gt; Badge: Connected?&#xA;Badge --&amp;gt;&amp;gt; App: Yes!&#xA;Alice --&amp;gt;&amp;gt; App: Tab on `update name on badge` button&#xA;App --&amp;gt;&amp;gt; Alice: What is your `name` and your contact info?&#xA;Alice --&amp;gt; App: `Alice Alicia` and `alice@berlindrioid.de`&#xA;App --&amp;gt; App: Layout view with provided info&#xA;App --&amp;gt; App: Save view to bitmap&#xA;App --&amp;gt; App: Convert bitmap to black and white format understood by badge&#xA;App --&amp;gt;&amp;gt; Badge: New `name` page set&#xA;Badge --&amp;gt; Badge: Save page&#xA;Badge --&amp;gt; Badge: Show page `a` (name)&#xA;Alice --&amp;gt;&amp;gt; Badge: Button &#39;b&#39;&#xA;Badge --&amp;gt; Badge: Show sponsor 1 page &#xA;Alice --&amp;gt;&amp;gt; Badge: Button &#39;c&#39;&#xA;Badge --&amp;gt; Badge: Show sponsor 2 page&#xA;Alice --&amp;gt;&amp;gt; Badge: Button &#39;up&#39;&#xA;Badge --&amp;gt; Badge: Show user page `u`&#xA;Alice --&amp;gt;&amp;gt; Badge: Button &#39;down&#39;&#xA;Badge --&amp;gt; Badge: Show user page `d`&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>GetStream/stream-video-android</title>
    <updated>2023-07-08T01:39:06Z</updated>
    <id>tag:github.com,2023-07-08:/GetStream/stream-video-android</id>
    <link href="https://github.com/GetStream/stream-video-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📲 Android Video SDK. Stream&#39;s versatile Core + Compose UI component libraries that allow you to build video calling, audio room, and, live streaming apps based on Webrtc running on Stream&#39;s global edge network.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Official Android SDK for &lt;a href=&#34;https://getstream.io/video/docs/&#34;&gt;Stream Video&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/GetStream/stream-video-android/develop/.readme-assets/Github-Graphic-Android.jpg&#34; alt=&#34;Stream Video for Android Header image&#34; style=&#34;box-shadow: 0 3px 10px rgb(0 0 0 / 0.2); border-radius: 1rem&#34;&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/GetStream/stream-video-android/actions&#34;&gt;&lt;img src=&#34;https://github.com/GetStream/stream-video-android/workflows/App%20Distribute%20CI/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=24&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-24%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=stream-video-android&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.getstream/stream-video-android-core.svg?label=Maven%20Central&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;This is the official Android SDK for &lt;a href=&#34;https://getstream.io/video?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Android_Video_SDK&amp;amp;utm_term=DevRelOss&#34;&gt;Stream Video&lt;/a&gt;, a service for building video calls, audio rooms, and live-streaming applications. This library includes both a low-level video SDK and a set of reusable UI components. Most users start with the Compose UI components and fall back to the lower-level API when they want to customize things.&lt;/p&gt; &#xA;&lt;a href=&#34;https://getstream.io?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Android_Video_SDK&amp;amp;utm_term=DevRelOss&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/138428440-b92e5fb7-89f8-41aa-96b1-71a5486c5849.png&#34; align=&#34;right&#34; width=&#34;12%&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;🛥 What is Stream?&lt;/h2&gt; &#xA;&lt;p&gt;Stream allows developers to rapidly deploy scalable feeds, chat messaging and video with an industry leading 99.999% uptime SLA guarantee.&lt;/p&gt; &#xA;&lt;p&gt;With Stream&#39;s video components, you can use their SDK to build in-app video calling, audio rooms, audio calls, or live streaming. The best place to get started is with their tutorials:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Video &amp;amp; Audio Calling Tutorial&lt;/li&gt; &#xA; &lt;li&gt;Audio Rooms Tutorial&lt;/li&gt; &#xA; &lt;li&gt;Livestreaming Tutorial&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Stream provides UI components and state handling that make it easy to build video calling for your app. All calls run on Stream&#39;s network of edge servers around the world, ensuring optimal latency and reliability.&lt;/p&gt; &#xA;&lt;h2&gt;📱 Previews&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/GetStream/stream-video-android/assets/24237865/b7ffc91c-10c5-4d02-8714-d18a5b4c9e00&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/GetStream/stream-video-android/assets/24237865/a5741658-8f51-4506-92b7-c0e8098725f3&#34; width=&#34;32%&#34;&gt; &lt;img src=&#34;https://github.com/GetStream/stream-video-android/assets/24237865/3cc08121-c8c8-4b71-8a96-0cf33b9f2c68&#34; width=&#34;32%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;👩‍💻 Free for Makers 👨‍💻&lt;/h2&gt; &#xA;&lt;p&gt;Stream is free for most side and hobby projects. To qualify, your project/company needs to have &amp;lt; 5 team members and &amp;lt; $10k in monthly revenue. Makers get $100 in monthly credit for video for free. For more details, check out the &lt;a href=&#34;https://getstream.io/maker-account?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Android_Video_SDK&amp;amp;utm_term=DevRelOss&#34;&gt;Maker Account&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;💡Supported Features💡&lt;/h2&gt; &#xA;&lt;p&gt;Here are some of the features we support:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Developer experience: Great SDKs, docs, tutorials and support so you can build quickly&lt;/li&gt; &#xA; &lt;li&gt;Edge network: Servers around the world ensure optimal latency and reliability&lt;/li&gt; &#xA; &lt;li&gt;Chat: Stored chat, reactions, threads, typing indicators, URL previews etc&lt;/li&gt; &#xA; &lt;li&gt;Security &amp;amp; Privacy: Based in USA and EU, Soc2 certified, GDPR compliant&lt;/li&gt; &#xA; &lt;li&gt;Dynascale: Automatically switch resolutions, fps, bitrate, codecs and paginate video on large calls&lt;/li&gt; &#xA; &lt;li&gt;Screensharing&lt;/li&gt; &#xA; &lt;li&gt;Picture in picture support&lt;/li&gt; &#xA; &lt;li&gt;Active speaker&lt;/li&gt; &#xA; &lt;li&gt;Custom events&lt;/li&gt; &#xA; &lt;li&gt;Geofencing&lt;/li&gt; &#xA; &lt;li&gt;Notifications and ringing calls&lt;/li&gt; &#xA; &lt;li&gt;Opus DTX &amp;amp; Red for reliable audio&lt;/li&gt; &#xA; &lt;li&gt;Webhooks &amp;amp; SQS&lt;/li&gt; &#xA; &lt;li&gt;Backstage mode&lt;/li&gt; &#xA; &lt;li&gt;Flexible permissions system&lt;/li&gt; &#xA; &lt;li&gt;Joining calls by ID, link or invite&lt;/li&gt; &#xA; &lt;li&gt;Enabling and disabling audio and video when in calls&lt;/li&gt; &#xA; &lt;li&gt;Flipping, Enabling and disabling camera in calls&lt;/li&gt; &#xA; &lt;li&gt;Enabling and disabling speakerphone in calls&lt;/li&gt; &#xA; &lt;li&gt;Push notification providers support&lt;/li&gt; &#xA; &lt;li&gt;Call recording&lt;/li&gt; &#xA; &lt;li&gt;Broadcasting to HLS&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🗺️ Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;Video roadmap and changelog is available &lt;a href=&#34;https://github.com/GetStream/protocol/discussions/127&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;0.2.0 milestone&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; support settings.audio.default_device (Daniel or Jc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Deeplink support for video call demo &amp;amp; dogfooding app (skip auth for the video demo, keep it for dogfooding) (Jaewoong)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Chat Integration (Jaewoong)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; XML version of VideoRenderer (Jaewoong)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Local Video disconnects sometimes (ICE restarts issue for the publisher. we&#39;re waiting for the backend support) (Thierry)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Call Analytics stateflow (Thierry)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; sortedParticipants stateflow doesn&#39;t update accurately (Thierry)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Automatically handle pagination and sorting on &amp;gt; 6 participants (Daniel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Bug: Sample app has a bug where we don&#39;t subscribe to call changes, we need to use call.get in the preview screen so we know the number of participants (Daniel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Ringing: Make it easy to test&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Ringing: Make a list of what needs to be configurable&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Ringing: Sounds for incoming, outgoing, call timed out. Sound for someone joining a call (Disabled by default). Docs on how to change them&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Publish app on play store&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Report version number of SDK on all API calls (Daniel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Bug: java.net.UnknownHostException: Unable to resolve host &#34;hint.stream-io-video.com&#34; isn&#39;t throw but instead logged as INFO (Daniel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Bug: screensharing is broken. android doesn’t receive/render (not sure) the screenshare. video shows up as the gray avatar&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Reactions&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bug: screenshare is not removed after it stops when a participant leaves the call (Thierry) (probably just dont update the state when the participant leaves)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.3.0 milestone&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Setting to default to speakerphone or earpiece&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Button to switch speakerphone/earpiece&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Livestream tutorial (depends on RTMP support)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; H264 workaround on Samsung 23 (see &lt;a href=&#34;https://github.com/livekit/client-sdk-android/raw/main/livekit-android-sdk/src/main/java/io/livekit/android/webrtc/SimulcastVideoEncoderFactoryWrapper.kt#L34&#34;&gt;https://github.com/livekit/client-sdk-android/blob/main/livekit-android-sdk/src/main/java/io/livekit/android/webrtc/SimulcastVideoEncoderFactoryWrapper.kt#L34&lt;/a&gt; and&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/react-native-webrtc/react-native-webrtc/issues/983#issuecomment-975624906&#34;&gt;https://github.com/react-native-webrtc/react-native-webrtc/issues/983#issuecomment-975624906&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Dynascale 2.0 (codecs, f resolution switches, resolution webrtc handling)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Test coverage&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Testing on more devices&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Speaking while muted stateflow&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Android SDK development.md cleanup (Daniel)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Logging is too verbose (rtc is very noisy), clean it up to focus on the essential for info and higher&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Bluetooth reliability&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Cleanup the retry behaviour in the RtcSession&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; SDK development guide for all teams&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;0.4.0 milestone&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Pagination on query members &amp;amp; query channels&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Analytics integration&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Screensharing from mobile&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Tap to focus&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Camera controls&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Audio &amp;amp; Video filters&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Picture of the video stream at highest resolution&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Review foreground service vs backend for some things like screensharing etc&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💼 We are hiring!&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;ve recently closed a &lt;a href=&#34;https://techcrunch.com/2021/03/04/stream-raises-38m-as-its-chat-and-activity-feed-apis-power-communications-for-1b-users/&#34;&gt;$38 million Series B funding round&lt;/a&gt; and we keep actively growing. Our APIs are used by more than a billion end-users, and you&#39;ll have a chance to make a huge impact on the product within a team of the strongest engineers all over the world. Check out our current openings and apply via &lt;a href=&#34;https://getstream.io/team/#jobs&#34;&gt;Stream&#39;s website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (c) 2014-2023 Stream.io Inc. All rights reserved.&#xA;&#xA;Licensed under the Stream License;&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   https://github.com/GetStream/stream-video-android/blob/main/LICENSE&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>