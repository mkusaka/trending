<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-22T01:38:23Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>digitalinnovationone/womens-world-cup-2023</title>
    <updated>2023-07-22T01:38:23Z</updated>
    <id>tag:github.com,2023-07-22:/digitalinnovationone/womens-world-cup-2023</id>
    <link href="https://github.com/digitalinnovationone/womens-world-cup-2023" rel="alternate"></link>
    <summary type="html">&lt;p&gt;RESTful API da Copa do Mundo FIFA de Futebol Feminino 2023 construída em Kotlin com Spring Boot 3.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Women&#39;s World Cup 2023: A Koltin RESTful API&lt;/h1&gt; &#xA;&lt;h2&gt;DIO &lt;a href=&#34;https://web.dio.me/lives/coding-the-future-7&#34;&gt;Coding The Future #7&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Este é um projeto que visa fornecer informações sobre a Copa do Mundo de Futebol Feminino de 2023. O projeto inclui uma API em Kotlin que permite o acesso aos dados das seleções participantes e integração com o ChatGPT-4 para simular as partidas da Copa e prever os resultados dos jogos.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a alt=&#34;Java&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Java-v17-blue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a alt=&#34;Kotlin&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Kotlin-v1.8.22-purple.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a alt=&#34;Spring Boot&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Spring%20Boot-v3.1.1-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a alt=&#34;Spring Cloud&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Spring%20Cloud-v4.0.3-brightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a alt=&#34;Gradle&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Gradle-v7.6-lightgreen.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a alt=&#34;H2&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/H2-v2.1.214-darkblue.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Configuração&lt;/h2&gt; &#xA;&lt;p&gt;Essas instruções fornecerão aos usuários as etapas necessárias para clonar o repositório e iniciar a aplicação em diferentes ambientes (Unix e Windows) com o perfil de desenvolvimento ativado.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone o repositório: git clone &lt;code&gt;git@github.com:digitalinnovationone/womens-world-cup-2023.git&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Inicie a aplicação no ambiente Unix: &lt;code&gt;./gradlew bootrun --args=&#39;--spring.profiles.active=dev&#39;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Inicie a aplicação no ambiente Windows: &lt;code&gt;gradle.bat bootrun --args=&#39;--spring.profiles.active=dev&#39;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Para integrar com o ChatGPT e usá-lo como um modelo para análise de sentimentos dos nossos comentários.&lt;/p&gt; &#xA;&lt;p&gt;Seguem alguns links úteis:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://platform.openai.com/docs/api-reference/chat/create&#34;&gt;Endpoint de Chat Completion&lt;/a&gt; (que vamos consumir)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.postman.com/devrel/workspace/openai/documentation/13183464-90abb798-cb85-43cb-ba3a-ae7941e968da&#34;&gt;Collection Postman da OpenAI&lt;/a&gt; (útil pra entender todas as APIs da OpenAI)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Request&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code&gt;curl https://api.openai.com/v1/chat/completions \&#xA; -H &#34;Authorization: Bearer $OPENAI_API_KEY&#34; \&#xA; -H &#34;Content-Type: application/json&#34; \&#xA; -d &#39;{&#xA; &#34;model&#34;: &#34;gpt-3.5-turbo&#34;,&#xA; &#34;messages&#34;: [&#xA;    {&#34;role&#34;: &#34;user&#34;, &#34;content&#34;: &#34;What is the OpenAI mission?&#34;}] &#xA; }&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Response&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: &#34;chatcmpl-6p5FEv1JHictSSnDZsGU4KvbuBsbu&#34;,&#xA;  &#34;object&#34;: &#34;messages&#34;,&#xA;  &#34;created&#34;: 1677693600,&#xA;  &#34;model&#34;: &#34;gpt-3.5-turbo&#34;,&#xA;  &#34;choices&#34;: [&#xA;    {&#xA;      &#34;index&#34;: 0,&#xA;      &#34;finish_reason&#34;: &#34;stop&#34;,&#xA;      &#34;message&#34;: {&#xA;        &#34;role&#34;: &#34;assistant&#34;,&#xA;        &#34;content&#34;: &#34;OpenAI&#39;s mission is to ensure that AI benefits all of humanity.&#34;&#xA;      }&#xA;    }&#xA;  ],&#xA;  &#34;usage&#34;: {&#xA;    &#34;prompt_tokens&#34;: 20,&#xA;    &#34;completion_tokens&#34;: 18,&#xA;    &#34;total_tokens&#34;: 38&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Uso da API&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Request&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Simular partida entre dois times:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Método: &lt;code&gt;GET&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Endpoint: &lt;code&gt;/simulate/{team1Id}/{team2Id}&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Parâmetros de caminho:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;{team1Id}&lt;/code&gt;: ID da primeira equipe.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;{team2Id}&lt;/code&gt;: ID da segunda equipe.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Exemplo de solicitação:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-http&#34;&gt;GET /simulate/ARG/BRA&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Response&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Código de resposta: &lt;code&gt;200 OK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Corpo da resposta: &lt;code&gt;TeamDto&lt;/code&gt; contendo os dados da equipe vencedora.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Exemplo de resposta:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;id&#34;: &#34;ARG&#34;,&#xA;  &#34;name&#34;: &#34;Argentina&#34;,&#xA;  &#34;score&#34;: 1682.45&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Códigos de resposta possíveis:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;200 OK&lt;/code&gt;: A simulação foi concluída com sucesso e a equipe vencedora é retornada.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;422 Unprocessable Entity&lt;/code&gt;: Uma ou ambas as equipes não foram encontradas na Copa do Mundo Feminina.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentação do Swagger&lt;/h2&gt; &#xA;&lt;p&gt;A documentação da API pode ser encontrada no Swagger. Para visualizá-la, acesse: &lt;a href=&#34;http://localhost:8080/swagger-ui/index.html#/&#34;&gt;Documentação do Swagger&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Hospedagem no Railway.app&lt;/h2&gt; &#xA;&lt;p&gt;Durante a live hospedamos o projeto no Railway.app na seguinte URL: &lt;a href=&#34;https://wwc-2023-prd.up.railway.app/swagger-ui.html&#34;&gt;https://wwc-2023-prd.up.railway.app/swagger-ui.html&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Licença&lt;/h2&gt; &#xA;&lt;p&gt;Este projeto está licenciado sob a licença MIT. Consulte o arquivo &lt;a href=&#34;https://github.com/digitalinnovationone/womens-world-cup-2023/raw/main/LICENSE.md&#34;&gt;(LICENSE)&lt;/a&gt; para obter.&lt;/p&gt; &#xA;&lt;h2&gt;Autores&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/falvojr&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/730492?v=4&amp;amp;s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;strong&gt;Venilton FalvoJr&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.linkedin.com/in/falvojr/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/cami-la&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/64323124?v=4&amp;amp;s=100&#34; width=&#34;100px;&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;strong&gt;Camila Cavalcante&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.linkedin.com/in/cami-la/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>toasterofbread/spmp</title>
    <updated>2023-07-22T01:38:23Z</updated>
    <id>tag:github.com,2023-07-22:/toasterofbread/spmp</id>
    <link href="https://github.com/toasterofbread/spmp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A YouTube Music client with a focus on language and metadata customisation, built with Kotlin and Jetpack Compose for Android.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/README-ja.md&#34;&gt;日本語のREADMEへ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;/h3&gt; &#xA;&lt;img align=&#34;left&#34; width=&#34;140&#34; src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/androidApp/src/main/ic_launcher-playstore.png&#34;&gt; &#xA;&lt;a href=&#34;https://github.com/toasterofbread/spmp/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/toasterofbread/spmp?logo=github&amp;amp;style=for-the-badge&#34; align=&#34;right&#34;&gt;&lt;/a&gt; &#xA;&lt;h1&gt;SpMp&lt;/h1&gt; &#xA;&lt;p&gt;A YouTube Music client with a focus on language and metadata customisation, built for Android using Jetpack Compose and Kotlin.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Development status&lt;/h2&gt; &#xA;&lt;p&gt;SpMp is in alpha and still has many bugs, but is very close to being feature-complete. I&#39;ve been using it instead of YouTube Music for a while now.&lt;/p&gt; &#xA;&lt;p&gt;Support for Compose Multiplatform on desktop is &lt;a href=&#34;https://github.com/toasterofbread/spmp-server&#34;&gt;planned&lt;/a&gt; but will not be a priority until the main project is stable.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img align=&#34;right&#34; width=&#34;20%&#34; src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_2.png&#34;&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Edit song, artist, and playlist titles&lt;/li&gt; &#xA; &lt;li&gt;Set separate languages for app UI and metadata like song titles&lt;/li&gt; &#xA; &lt;li&gt;In-app YouTube Music login&lt;/li&gt; &#xA; &lt;li&gt;Display time-synchronised lyrics from &lt;a href=&#34;https://petitlyrics.com/&#34;&gt;PetitLyrics&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Timed lyrics are displayed in a toggleable bar above every app page&lt;/li&gt; &#xA;   &lt;li&gt;Furigana (readings) display above Japanese kanji within lyrics&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Select multiple songs for batch actions on any screen&lt;/li&gt; &#xA; &lt;li&gt;Pin any song, playlist, album, or artist to the top of the main page&lt;/li&gt; &#xA; &lt;li&gt;Customisable Discord rich presence&lt;/li&gt; &#xA; &lt;li&gt;Easily insert songs at any position in the queue&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h5&gt;And more (see &lt;a href=&#34;https://github.com/toasterofbread/spmp/wiki&#34;&gt;the wiki&lt;/a&gt; for a &lt;del&gt;full&lt;/del&gt; more complete list of features)&lt;/h5&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;h2&gt;Screenshots&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_11.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_5.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_10.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details closed&gt; &#xA; &lt;summary&gt;&lt;h2&gt;More Screenshots&lt;/h2&gt;&lt;/summary&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_15.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_19.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_16.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;/p&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_14.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_17.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/toasterofbread/spmp/main/readme/screenshot_8.png&#34; style=&#34;max-height:70vh;object-fit:contain;&#34; width=&#34;25%&#34;&gt; &lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;About the project&lt;/h2&gt; &#xA;&lt;p&gt;I started this project after I got tired of dealing with YouTube&#39;s official music app&#39;s lack of language features and customisation. I tried several alternatives, but all had at least a few issues that bugged me.&lt;/p&gt; &#xA;&lt;p&gt;So instead of spending a few weeks learning the codebase of an existing project and contributing to it, I decided to spend almost a year (as of writing) creating my own solution.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Pull requests, bug reports, and feature suggestions are welcome! This is my first Compose project (and also the largest project I&#39;ve ever done in general) so there&#39;s probably plenty of room for improvement.&lt;/p&gt; &#xA;&lt;p&gt;The app is currently being developed for both English and Japanese. Contributions for other languages would be greatly appreciated! Information about app localisation can be found &lt;a href=&#34;https://github.com/toasterofbread/spmp/wiki/App-localisation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Also available on&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/com.toasterofbread.spmp/&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Thanks to&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/sigma67/ytmusicapi/&#34;&gt;ytmusicapi&lt;/a&gt;: Used as a reference for the YouTube Music API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/keymapperorg/KeyMapper&#34;&gt;KeyMapper&lt;/a&gt;: For screen off volume control implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dzolnai/ExoVisualizer&#34;&gt;ExoVisualizer&lt;/a&gt;: Music visualiser implementation&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vfsfitvnm/ViMusic&#34;&gt;ViMusic&lt;/a&gt;: A major inspiration for this project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;This project and its contents are not affiliated with, funded, authorized, endorsed by, or in any way associated with YouTube, Google LLC or any of its affiliates and subsidiaries.&lt;/p&gt; &#xA;&lt;p&gt;Any trademark, service mark, trade name, or other intellectual property rights used in this project are owned by the respective owners.&lt;/p&gt;</summary>
  </entry>
</feed>