<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-16T01:37:33Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>cengiztoru/JetIsland_Dynamic-Island-Jetpack-Compose</title>
    <updated>2022-09-16T01:37:33Z</updated>
    <id>tag:github.com,2022-09-16:/cengiztoru/JetIsland_Dynamic-Island-Jetpack-Compose</id>
    <link href="https://github.com/cengiztoru/JetIsland_Dynamic-Island-Jetpack-Compose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An app to demonstrate Apple&#39;s new feature dynamic island in Android with Jetpack Compose&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jet Island&lt;/h1&gt; &#xA;&lt;h3&gt;Dynamic Island in Android with Jetpack Compose&lt;/h3&gt; &#xA;&lt;p&gt;An app to demonstrate Apple&#39;s new feature dynamic island in Android with Jetpack Compose. &lt;br&gt; The island initially has no any notications. So it shows a notch. &lt;br&gt; When a notification arrive to the island it will shown with expanded content for a while. Then the notification will goes to collapsed state.&lt;br&gt; If user click a notification in the collapsed state the island will show expanded ui of the notification.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/28221219/190113645-b00ea512-f6b5-4091-ba2d-6a87c42495c6.gif&#34; alt=&#34;Dynamic Island Gif&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/28221219/189500679-cb63e32a-3de9-489f-ab9d-6b3cc6ba8ea2.mp4&#34;&gt;https://user-images.githubusercontent.com/28221219/189500679-cb63e32a-3de9-489f-ab9d-6b3cc6ba8ea2.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Components&lt;/h3&gt; &#xA;&lt;p&gt;âœ… Initially a notch which contains two fake camera and a shining light&lt;br&gt; âœ… Collapsed and expanded ui for a Call&lt;br&gt; âœ… Collapsed and expanded ui for a Media Player foreground service&lt;br&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=WuEH265pUy4&#34;&gt;Dynamic Island Introduction Video&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h3&gt;Welcome to all feedbacks and contributions ðŸ¤—ðŸ’š&lt;/h3&gt;</summary>
  </entry>
  <entry>
    <title>BaltiApps/Pixelify-Google-Photos</title>
    <updated>2022-09-16T01:37:33Z</updated>
    <id>tag:github.com,2022-09-16:/BaltiApps/Pixelify-Google-Photos</id>
    <link href="https://github.com/BaltiApps/Pixelify-Google-Photos" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Pixelify GPhotos&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pixelify-Google-Photos&lt;/h1&gt; &#xA;&lt;p&gt;LSPosed / EdXposed module to add Google Pixel features on Google Photos for any device.&lt;br&gt; Tested on EdXposed by &lt;a href=&#34;https://github.com/MlgmXyysd&#34;&gt;Jim Wu&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Xposed-Modules-Repo/balti.xposed.pixelifygooglephotos.git&#34;&gt;LSPosed module repo&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/BaltiApps/Pixelify-Google-Photos.git&#34;&gt;Development repo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/pixelifyGooglePhotos&#34;&gt;Telegram group link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Steps to use:&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install Magisk, &lt;a href=&#34;https://github.com/LSPosed/LSPosed&#34;&gt;LSPosed&lt;/a&gt; Or &lt;a href=&#34;https://github.com/ElderDrivers/EdXposed&#34;&gt;EdXposed&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install the apk of this app (available from &lt;a href=&#34;https://github.com/BaltiApps/Pixelify-Google-Photos/releases&#34;&gt;Releases&lt;/a&gt; page.)&lt;/li&gt; &#xA; &lt;li&gt;Open LSPosed / EdXposed app and enable the module. For LSPosed, Google Photos will be automatically selected.&lt;/li&gt; &#xA; &lt;li&gt;Reboot. Enjoy. (If needed, you might need to clear data of Google Photos app).&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;How does this module work?&lt;/h3&gt; &#xA;&lt;p&gt;It simply hooks on to &lt;code&gt;hasSystemFeature()&lt;/code&gt; method under &lt;code&gt;android.app.ApplicationPackageManager&lt;/code&gt; class. Then when Google Photos checks the relevant features which are expected only on Pixel devices, the module passes &lt;code&gt;true&lt;/code&gt;. Thus Google Photos enables Pixel-Exclusive features.&lt;br&gt; The features being &#34;spoofed&#34; can be found from:&lt;br&gt; &lt;a href=&#34;https://github.com/DotOS/android_vendor_dot/raw/55f1c26bb6dbb1175d96cf538ae113618caf7d06/prebuilt/common/etc/pixel_2016_exclusive.xml&#34;&gt;Dot OS sources&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/ayush5harma/PixelFeatureDrops/tree/master/system/etc/sysconfig&#34;&gt;PixelFeatureDrops magisk module&lt;/a&gt;&lt;br&gt; This module can also spoof some of the &lt;code&gt;build.prop&lt;/code&gt; information like &lt;code&gt;BRAND&lt;/code&gt;, &lt;code&gt;MANUFACTURER&lt;/code&gt;, &lt;code&gt;MODEL&lt;/code&gt;, &lt;code&gt;FINGERPRINT&lt;/code&gt; of some Pixel devices.&lt;/p&gt; &#xA;&lt;h3&gt;Disclaimer!!&lt;/h3&gt; &#xA;&lt;p&gt;The user takes sole responsibility for any damage that might arise due to use of this module.&lt;br&gt; This includes physical damage (to device), injury, data loss, and also legal matters.&lt;br&gt; This project was made as a learning initiative and the developer cannot be held liable in any way for the use of it.&lt;/p&gt;</summary>
  </entry>
</feed>