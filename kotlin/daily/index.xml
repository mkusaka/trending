<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-04T01:37:43Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tasks/tasks</title>
    <updated>2022-09-04T01:37:43Z</updated>
    <id>tag:github.com,2022-09-04:/tasks/tasks</id>
    <link href="https://github.com/tasks/tasks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Bringing Astrid Tasks back from the dead&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Astrid was a popular cross-platform productivity service that was &lt;a href=&#34;https://web.archive.org/web/20130811052500/http://blog.astrid.com/blog/2013/05/01/yahoo-acquires-astrid/&#34;&gt;acquired&lt;/a&gt; and &lt;a href=&#34;https://techcrunch.com/2013/07/06/astrid-goes-dark-august-5-goodnight-sweet-squid/&#34;&gt;discontinued&lt;/a&gt; in 2013. The source code from Astrid&#39;s open source Android app serves as the basis of Tasks.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=org.tasks&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/org.tasks&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;https://tasks.org&#34;&gt;tasks.org&lt;/a&gt; for end user documentation and support&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://en.cryptobadges.io/donate/136mW34jW3cmZKhxuTDn3tHXMRwbbaRU8s&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/bitcoin-donate-yellow.svg?logo=bitcoin&#34; alt=&#34;Donate with Bitcoin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;amp;business=alex@tasks.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/paypal-donate-yellow.svg?logo=paypal&#34; alt=&#34;PayPal donate button&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://liberapay.com/tasks/donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/liberapay/receives/tasks.svg?logo=liberapay&#34; alt=&#34;Liberapay donate button&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/tasks/tasks/workflows/Run%20tests/badge.svg?sanitize=true&#34; alt=&#34;tests&#34;&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/tasks/?utm_source=widget&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/tasks/-/android/svg-badge.svg?sanitize=true&#34; alt=&#34;weblate&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/tasks/tasks&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/tasks/tasks/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codebeat.co/projects/github-com-tasks-tasks-main&#34;&gt;&lt;img src=&#34;https://codebeat.co/badges/07924fca-2f18-4eff-99a3-120ec5ac2d5f&#34; alt=&#34;codebeat badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Contributions are always welcome! Whether translations, code changes, bug reports, feature requests, or otherwise, your help is appreciated. To get started, take a look at &lt;a href=&#34;https://raw.githubusercontent.com/tasks/tasks/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Communication&lt;/h3&gt; &#xA;&lt;p&gt;Join the #tasks channel on Libera Chat to chat with the Tasks team and other people. &lt;a href=&#34;https://web.libera.chat/#tasks&#34;&gt;Link to webchat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can also use &lt;a href=&#34;https://github.com/tasks/tasks/discussions&#34;&gt;GitHub Discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have a suggestion or want to report a bug, please see &lt;a href=&#34;https://raw.githubusercontent.com/tasks/tasks/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>cashapp/redwood</title>
    <updated>2022-09-04T01:37:43Z</updated>
    <id>tag:github.com,2022-09-04:/cashapp/redwood</id>
    <link href="https://github.com/cashapp/redwood" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Redwood&lt;/h1&gt; &#xA;&lt;p&gt;Redwood is a library for building reactive Android, iOS, and web UIs using Kotlin.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Redwood is currently under development and not ready for use by anyone.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Reactive UIs&lt;/h3&gt; &#xA;&lt;p&gt;Android and iOS UI frameworks model the user interface as a ‘mutable view tree’ or document object model (DOM). To build an application using the mutable view tree abstraction, the programmer performs two discrete steps:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build the static view tree.&lt;/strong&gt; In Android the conventional tool for this is layout XML, though we&#39;ve done some cool work with &lt;a href=&#34;https://github.com/cashapp/contour&#34;&gt;Contour&lt;/a&gt; to build view trees with Kotlin lambdas.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Make it dance.&lt;/strong&gt; The view tree should change in response to user actions (like pushing buttons) and external events (like data loading). The program mutates the view tree to represent the current application state. Some mutations change the on-screen UI instantly; others animate smoothly from the old state to the new state.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; popularized a new programming model, reactive UIs. With reactive UIs, the programmer writes a &lt;code&gt;render()&lt;/code&gt; function that accepts the application state and returns a view tree. The framework calls this function with the initial application state and again each time the application state changes. The framework analyzes the differences between pairs of view trees and updates the display, including animating transitions where appropriate.&lt;/p&gt; &#xA;&lt;p&gt;In React the view tree returned by the render function is called a &lt;em&gt;virtual DOM&lt;/em&gt;, and it has an on-screen counterpart called the &lt;em&gt;real DOM&lt;/em&gt;. The virtual DOM is a tree of simple JavaScript value objects; the real DOM is a tree of live browser HTML components. Creating and traversing thousands of virtual DOM objects is fast; creating thousands of HTML components is not! Therefore, the virtual DOM optimization is the magic that makes React work.&lt;/p&gt; &#xA;&lt;h3&gt;Compose&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; is an implementation of the reactive UI model for Android. It uses an implementation trick to further optimize the reactive programming model. It is implemented in two complementary modules:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;The Compose compiler&lt;/strong&gt; is a Kotlin compiler plugin that supports partial re-evaluation of a function. The programmer still writes render functions to transform application state into a view tree. The compiler rewrites this function to track which inputs yield which outputs. When the input application state changes, it evaluates only what is necessary to generate the corresponding view tree changes.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Compose UI&lt;/strong&gt; is a new set of Android UI components designed to work with the Compose compiler. It addresses longstanding technical debt with Android&#39;s view system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;A Kotlin function that is rewritten by the Compose compiler is called a &lt;em&gt;composable function&lt;/em&gt;. Partial re-evaluation of a composable function is called &lt;em&gt;recomposing&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that the Compose compiler can be used without Compose UI. For example, &lt;a href=&#34;https://github.com/ShikaSD/compose-server-side&#34;&gt;compose-server-side&lt;/a&gt; renders HTML components on a server that are sent to a browser over a WebSocket.&lt;/p&gt; &#xA;&lt;h3&gt;Design Systems&lt;/h3&gt; &#xA;&lt;p&gt;In Cash App we use a design system. It specifies our UI in detail and names its elements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Names for our standard colors, fonts, icons, dimensions&lt;/li&gt; &#xA; &lt;li&gt;Named text blocks, specified using the names above&lt;/li&gt; &#xA; &lt;li&gt;Named controls, such as our standard checkboxes, buttons, and dialogs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The design system helps with collaboration between programmers and designers. It also increases uniformity within the application and across platforms.&lt;/p&gt; &#xA;&lt;h3&gt;What Is Redwood?&lt;/h3&gt; &#xA;&lt;p&gt;Redwood integrates the Compose compiler, a design system, and a set of platform-specific displays. Each Redwood project is implemented in three parts:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;A design system.&lt;/strong&gt; Redwood includes a sample design system called ‘Sunspot’. Most applications should customize this to match their product needs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Displays for UI platforms.&lt;/strong&gt; The display draws the pixels of the design system on-screen. Displays can be implemented for any UI platform. Redwood includes sample displays for Sunspot for Android, iOS, and web.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Composable Functions.&lt;/strong&gt; This is client logic that accepts application state and returns elements of the design system. These have similar responsibilities to presenters in an MVP system.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Why Redwood?&lt;/h3&gt; &#xA;&lt;p&gt;We&#39;re eager to start writing reactive UIs! But we&#39;re reluctant to continue duplicating code across iOS, Android, and web platforms. In particular, we don&#39;t like how supporting multiple platforms reduces our overall agility.&lt;/p&gt; &#xA;&lt;p&gt;We&#39;d like to shortcut the slow native UI development process. Iterating on UIs for Android requires a slow compile step and a slow &lt;code&gt;adb install&lt;/code&gt; step. With Redwood, we hope to use the web as our development target while we iterate on composable function changes.&lt;/p&gt; &#xA;&lt;p&gt;We want the option to change application behavior without waiting for users to update their apps. With Kotlin/JS we may be able to update our composable functions at application launch time, and run them in a JavaScript VM. We may even be able to use &lt;a href=&#34;https://webassembly.org/&#34;&gt;WebAssembly&lt;/a&gt; to accomplish this with little performance penalty.&lt;/p&gt; &#xA;&lt;h3&gt;Why Not React Native?&lt;/h3&gt; &#xA;&lt;p&gt;React Native is compelling. But we&#39;ve read about &lt;a href=&#34;https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c&#34;&gt;difficulties integrating it&lt;/a&gt; into an existing application and team.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Redwood is a library, not a framework.&lt;/strong&gt; It is designed to be adopted incrementally, and to be low-risk to integrate in an existing Android project. Using Redwood in an iOS or web application is riskier! We&#39;ve had good experiences with &lt;a href=&#34;https://kotlinlang.org/lp/mobile/&#34;&gt;Kotlin Multiplatform Mobile&lt;/a&gt;, and expect a similar outcome with Redwood.&lt;/p&gt; &#xA;&lt;h3&gt;Code Sample&lt;/h3&gt; &#xA;&lt;p&gt;We start by expressing our design system as a set of Kotlin data classes. Redwood will use these classes to generate type-safe APIs for the displays and composable functions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@Widget(1)&#xA;data class SunspotText(&#xA;  @Property(1) val text: String?,&#xA;  @Property(2) @Default(&#34;\&#34;black\&#34;&#34;) val color: String,&#xA;)&#xA;&#xA;@Widget(2)&#xA;data class SunspotButton(&#xA;  @Property(1) val text: String?,&#xA;  @Property(2) @Default(&#34;true&#34;) val enabled: Boolean,&#xA;  @Property(3) val onClick: () -&amp;gt; Unit,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Displays implement the design system using native UI components.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class AndroidSunspotText(&#xA;  override val value: TextView,&#xA;) : SunspotText&amp;lt;View&amp;gt; {&#xA;  override fun text(text: String?) {&#xA;    value.text = text&#xA;  }&#xA;&#xA;  override fun color(color: String) {&#xA;    value.setTextColor(Color.parseColor(color))&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Composable functions render application state into the design system. These will make use of Compose API features like &lt;code&gt;remember()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@Composable&#xA;fun Counter(value: Int = 0) {&#xA;  var count by remember { mutableStateOf(value) }&#xA;&#xA;  SunspotButton(&#34;-1&#34;, onClick = { count-- })&#xA;  SunspotText(count.toString())&#xA;  SunspotButton(&#34;+1&#34;, onClick = { count++ })&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>getActivity/AndroidProject-Kotlin</title>
    <updated>2022-09-04T01:37:43Z</updated>
    <id>tag:github.com,2022-09-04:/getActivity/AndroidProject-Kotlin</id>
    <link href="https://github.com/getActivity/AndroidProject-Kotlin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android 技术中台 Kotlin 版本，但愿人长久，搬砖不再有&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;安卓技术中台 Kotlin 版&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/getActivity/AndroidProject-Kotlin&#34;&gt;Github&lt;/a&gt;、&lt;a href=&#34;https://gitee.com/getActivity/AndroidProject-Kotlin&#34;&gt;码云&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Java 版本：&lt;a href=&#34;https://github.com/getActivity/AndroidProject&#34;&gt;AndroidProject&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;博客地址：&lt;a href=&#34;https://www.jianshu.com/p/77dd326f21dc&#34;&gt;但愿人长久，搬砖不再有&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;另外你如果对 Kotlin 不熟悉，恰好想学习的话，推荐你通过下面这三篇文章来学习&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/a01e6b957269&#34;&gt;全民 Kotlin：Java我们不一样&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/884ca0a49e5e&#34;&gt;全民 Kotlin：你没有玩过的全新玩法&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/2e0746c7d4f3&#34;&gt;全民 Kotlin：协程特别篇&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;当我们日复一日年复一年的搬砖的时候，你是否曾想过提升一下开发效率，如果一个通用的架构摆在你的面前，你还会选择自己搭架构么，但是搭建出一个好的架构并非易事，有多少人愿意选择去做，还有多少人选择努力去做好，可能寥寥无几，但是你今天看到的，正是你所想要的，一个真正能解决你开发新项目时最大痛点的架构工程，你不需要再麻木 Copy 原有旧项目的代码，只需改动少量代码就能得到想要的效果，你会发现开发新项目其实是一件很快乐的事。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;AndroidProject 已维护三年多的时间，几乎耗尽我所有的业余时间，里面的代码改了再改，改了又改，不断 Review、不断创新、不断改进、不断测试、不断优化，每天都在重复这些枯燥的步骤，但是只有这样才能把这件事做好，因为我相信把同样一件事重复做，迟早有一天可以做好。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;已经正式投入到多个公司项目实践中，暂时没有发现任何问题或者 Bug，&lt;a href=&#34;https://github.com/getActivity/AndroidProject-Kotlin/releases/download/13.1/AndroidProject-Kotlin.apk&#34;&gt;点击下载 Apk 体验&lt;/a&gt;，又或者扫码下载&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/demo_code.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;常用界面&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/1.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/2.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/4.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/5.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/6.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/7.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/8.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/9.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/10.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/11.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/12.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/13.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/14.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/15.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/16.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/17.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/18.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/19.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/20.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/21.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/22.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/23.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/24.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/25.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/26.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/27.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/28.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/29.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/30.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/31.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/32.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/33.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/34.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/35.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/activity/36.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;常用对话框&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/1.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/2.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/4.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/5.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/6.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/7.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/8.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/9.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/10.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/11.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/12.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/13.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/14.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/15.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/16.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/17.jpg&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/dialog/18.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;动图欣赏&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/1.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/2.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/3.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/4.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/5.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/6.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/7.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/8.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/9.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/10.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/11.gif&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/picture/gif/12.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;项目亮点&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;App 优化：已经进行了全面的内存优化、布局优化、代码优化、瘦身优化，并且对结果进行了严格的长久测试。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;代码规范：参照 Android SDK 、Support 源码和参考阿里巴巴的代码规范文档对代码进行命名，并对难点代码进行了注释，对重点代码进行了说明。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;代码统一：对项目中常见的代码进行了封装，或是封装到基类中、或是封装到工具类中、或者封装到框架中，不追求过度封装，根据实际场景和代码维护性考虑，尽量保证同一个功能的代码在项目中不重复。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;敏捷开发：一个 App 大概率会出现的功能已经写好，对项目的敏捷开发起到了至关重要的作用，可用于新项目开发或者旧项目重构，可将开发周期缩短近一半的时间，并且后续不会因为前期的快速开发而留下成堆的技术遗留问题，万丈高楼平地起，AndroidProject 属于基建工程，而在软件行业我们称之为技术中台。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;无任何瑕疵：对小屏手机、全面屏手机、带虚拟按键手机进行了适配和优化，确保每一个界面细节都能处理到位、每一个功能细节都能符合大众的需求、乃至每一行代码都能贴合 Android 程序员的审美观。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;兼容性优良：在此感谢开源道路上给予我支持和帮助的小伙伴，一个人一台机在兼容性面前无能为力，而在几百人几百台机面前却不是问题。如果没有这些的测试，有些问题我一个人可能这辈子都发现不了，纵使代码写得再好，逻辑再严谨，没有经过大众的验证，无异于纸上谈兵。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;优秀的代码设计：AndroidProject 对 startActivityForResult 的设计进行了改良，使得可以直接在方法上传入监听对象，这样我们就不需要重写 onActivityResult 方法来拿到回调，另外原生的 startActivityForResult 还需要传 requestCode 参数，而 AndroidProject 会自动帮你生成这个 requestCode 码，并在 onActivityResult 进行判断，如果满足条件，那么就会回调外层传入的监听对象。然而这只是冰山一角，更多优秀的代码设计还需要你通过阅读 AndroidProject 源码的形式来发掘，在这里不再细说。&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/getActivity/AndroidCodeStandard&#34;&gt;代码规范文档请点击这里查看&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/getActivity/AndroidVersionAdapter&#34;&gt;版本适配文档请点击这里查看&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://raw.githubusercontent.com/getActivity/AndroidProject-Kotlin/master/HelpDoc.md&#34;&gt;常见问题解答请点击这里查看&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h4&gt;作者的其他开源项目&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;权限框架：&lt;a href=&#34;https://github.com/getActivity/XXPermissions&#34;&gt;XXPermissions&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/XXPermissions.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/XXPermissions.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;吐司框架：&lt;a href=&#34;https://github.com/getActivity/ToastUtils&#34;&gt;ToastUtils&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/ToastUtils.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/ToastUtils.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;网络框架：&lt;a href=&#34;https://github.com/getActivity/EasyHttp&#34;&gt;EasyHttp&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/EasyHttp.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/EasyHttp.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;标题栏框架：&lt;a href=&#34;https://github.com/getActivity/TitleBar&#34;&gt;TitleBar&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/TitleBar.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/TitleBar.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;悬浮窗框架：&lt;a href=&#34;https://github.com/getActivity/XToast&#34;&gt;XToast&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/XToast.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/XToast.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Shape 框架：&lt;a href=&#34;https://github.com/getActivity/ShapeView&#34;&gt;ShapeView&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/ShapeView.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/ShapeView.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;语种切换框架：&lt;a href=&#34;https://github.com/getActivity/MultiLanguages&#34;&gt;MultiLanguages&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/MultiLanguages.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/MultiLanguages.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Gson 解析容错：&lt;a href=&#34;https://github.com/getActivity/GsonFactory&#34;&gt;GsonFactory&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/GsonFactory.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/GsonFactory.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;日志查看框架：&lt;a href=&#34;https://github.com/getActivity/Logcat&#34;&gt;Logcat&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/Logcat.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/Logcat.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Android 版本适配：&lt;a href=&#34;https://github.com/getActivity/AndroidVersionAdapter&#34;&gt;AndroidVersionAdapter&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/AndroidVersionAdapter.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/AndroidVersionAdapter.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Android 代码规范：&lt;a href=&#34;https://github.com/getActivity/AndroidCodeStandard&#34;&gt;AndroidCodeStandard&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/AndroidCodeStandard.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/AndroidCodeStandard.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Studio 精品插件：&lt;a href=&#34;https://github.com/getActivity/StudioPlugins&#34;&gt;StudioPlugins&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/StudioPlugins.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/StudioPlugins.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;表情包大集合：&lt;a href=&#34;https://github.com/getActivity/EmojiPackage&#34;&gt;EmojiPackage&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/EmojiPackage.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/EmojiPackage.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;省市区 Json 数据：&lt;a href=&#34;https://github.com/getActivity/ProvinceJson&#34;&gt;ProvinceJson&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/getActivity/ProvinceJson.svg?sanitize=true&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/forks/getActivity/ProvinceJson.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;微信公众号：Android轮子哥&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/Donate/master/picture/official_ccount.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Android 技术分享 QQ 群：78797078&lt;/h4&gt; &#xA;&lt;h4&gt;如果您觉得我的开源库帮你节省了大量的开发时间，请扫描下方的二维码随意打赏，要是能打赏个 10.24 &lt;span&gt;🐵&lt;/span&gt;就太&lt;span&gt;👍&lt;/span&gt;了。您的支持将鼓励我继续创作&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/h4&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/getActivity/Donate/master/picture/pay_ali.png&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/getActivity/Donate/master/picture/pay_wechat.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;&lt;a href=&#34;https://github.com/getActivity/Donate&#34;&gt;点击查看捐赠列表&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Copyright 2018 Huang JinQun&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>