<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-28T01:35:03Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>react-native-menu/menu</title>
    <updated>2024-01-28T01:35:03Z</updated>
    <id>tag:github.com,2024-01-28:/react-native-menu/menu</id>
    <link href="https://github.com/react-native-menu/menu" rel="alternate"></link>
    <summary type="html">&lt;p&gt;UIMenu Component for React Native&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;@react-native-menu/menu&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/platforms-android%20%7C%20ios-lightgrey.svg?style=flat-square&#34; alt=&#34;Supports Android, iOS&#34;&gt;&lt;img src=&#34;https://github.com/react-native-menu/menu/workflows/Build/badge.svg?sanitize=true&#34; alt=&#34;Github Action Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/@react-native-menu/menu.svg?style=flat-square&#34; alt=&#34;npm&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Android PopupMenu and iOS14+ UIMenu components for react-native. Falls back to ActionSheet for versions below iOS14.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Android&lt;/th&gt; &#xA;   &lt;th&gt;iOS 14+&lt;/th&gt; &#xA;   &lt;th&gt;iOS 13&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6936373/112418277-827ac380-8d6c-11eb-96e2-324487ff3dde.png&#34; width=&#34;320&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6936373/112418272-80b10000-8d6c-11eb-9edb-f91eeff0877e.png&#34; width=&#34;320&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/6936373/98471162-cb9f0080-222d-11eb-89ef-9342a1f10893.png&#34; width=&#34;320&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;via npm:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npm install @react-native-menu/menu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;via yarn:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;yarn add @react-native-menu/menu&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Installing on iOS with React Native 0.63 and above&lt;/h3&gt; &#xA;&lt;p&gt;There is an issue(&lt;a href=&#34;https://github.com/facebook/react-native/issues/29246&#34;&gt;https://github.com/facebook/react-native/issues/29246&lt;/a&gt;) causing projects with this module to fail on build on React Native 0.63 and above. This issue may be fixed in future versions of react native. As a work around, look for lines in &lt;code&gt;[YourPrject].xcodeproj&lt;/code&gt; under &lt;code&gt;LIBRARY_SEARCH_PATHS&lt;/code&gt; with &lt;code&gt;&#34;\&#34;$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\&#34;&#34;,&lt;/code&gt; and change &lt;code&gt;swift-5.0&lt;/code&gt; to &lt;code&gt;swift-5.3&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Linking&lt;/h2&gt; &#xA;&lt;p&gt;The package is &lt;a href=&#34;https://github.com/react-native-community/cli/raw/master/docs/autolinking.md&#34;&gt;automatically linked&lt;/a&gt; when building the app. All you need to do is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;npx pod-install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { MenuView } from &#39;@react-native-menu/menu&#39;;&#xA;&#xA;// ...&#xA;&#xA;const App = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;View style={styles.container}&amp;gt;&#xA;      &amp;lt;MenuView&#xA;        title=&#34;Menu Title&#34;&#xA;        onPressAction={({ nativeEvent }) =&amp;gt; {&#xA;          console.warn(JSON.stringify(nativeEvent));&#xA;        }}&#xA;        actions={[&#xA;          {&#xA;            id: &#39;add&#39;,&#xA;            titleColor: &#39;#2367A2&#39;,&#xA;            image: Platform.select({&#xA;              ios: &#39;plus&#39;,&#xA;              android: &#39;ic_menu_add&#39;,&#xA;            }),&#xA;            imageColor: &#39;#2367A2&#39;,&#xA;            subactions: [&#xA;              {&#xA;                id: &#39;nested1&#39;,&#xA;                title: &#39;Nested action&#39;,&#xA;                titleColor: &#39;rgba(250,180,100,0.5)&#39;,&#xA;                subtitle: &#39;State is mixed&#39;,&#xA;                image: Platform.select({&#xA;                  ios: &#39;heart.fill&#39;,&#xA;                  android: &#39;ic_menu_today&#39;,&#xA;                }),&#xA;                imageColor: &#39;rgba(100,200,250,0.3)&#39;,&#xA;                state: &#39;mixed&#39;,&#xA;              },&#xA;              {&#xA;                id: &#39;nestedDestructive&#39;,&#xA;                title: &#39;Destructive Action&#39;,&#xA;                attributes: {&#xA;                  destructive: true,&#xA;                },&#xA;                image: Platform.select({&#xA;                  ios: &#39;trash&#39;,&#xA;                  android: &#39;ic_menu_delete&#39;,&#xA;                }),&#xA;              },&#xA;            ],&#xA;          },&#xA;          {&#xA;            id: &#39;share&#39;,&#xA;            title: &#39;Share Action&#39;,&#xA;            titleColor: &#39;#46F289&#39;,&#xA;            subtitle: &#39;Share action on SNS&#39;,&#xA;            image: Platform.select({&#xA;              ios: &#39;square.and.arrow.up&#39;,&#xA;              android: &#39;ic_menu_share&#39;,&#xA;            }),&#xA;            imageColor: &#39;#46F289&#39;,&#xA;            state: &#39;on&#39;,&#xA;          },&#xA;          {&#xA;            id: &#39;destructive&#39;,&#xA;            title: &#39;Destructive Action&#39;,&#xA;            attributes: {&#xA;              destructive: true,&#xA;            },&#xA;            image: Platform.select({&#xA;              ios: &#39;trash&#39;,&#xA;              android: &#39;ic_menu_delete&#39;,&#xA;            }),&#xA;          },&#xA;        ]}&#xA;        shouldOpenOnLongPress={false}&#xA;      &amp;gt;&#xA;        &amp;lt;View style={styles.button}&amp;gt;&#xA;          &amp;lt;Text style={styles.buttonText}&amp;gt;Test&amp;lt;/Text&amp;gt;&#xA;        &amp;lt;/View&amp;gt;&#xA;      &amp;lt;/MenuView&amp;gt;&#xA;    &amp;lt;/View&amp;gt;&#xA;  );&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Reference&lt;/h2&gt; &#xA;&lt;h3&gt;Props&lt;/h3&gt; &#xA;&lt;h3&gt;&lt;code&gt;title&lt;/code&gt; (iOS only)&lt;/h3&gt; &#xA;&lt;p&gt;The title of the menu.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;string&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;code&gt;isAnchoredToRight&lt;/code&gt; (Android only)&lt;/h3&gt; &#xA;&lt;p&gt;Boolean determining if menu should anchored to right or left corner of parent view.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;code&gt;shouldOpenOnLongPress&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Boolean determining if menu should open after long press or on normal press&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;boolean&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;code&gt;actions&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Actions to be displayed in the menu.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;MenuAction[]&lt;/td&gt; &#xA;   &lt;td&gt;Yes&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;code&gt;themeVariant&lt;/code&gt; (iOS only)&lt;/h3&gt; &#xA;&lt;p&gt;String to override theme of the menu. If you want to control theme universally across your app, &lt;a href=&#34;https://github.com/vonovak/react-native-theme-control&#34;&gt;see this package&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;enum(&#39;light&#39;, &#39;dark&#39;)&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;&lt;code&gt;MenuAction&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Object representing Menu Action.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;export type MenuAction = {&#xA;  /**&#xA;   * Identifier of the menu action.&#xA;   * The value set in this id will be returned when menu is selected.&#xA;   */&#xA;  id?: string;&#xA;  /**&#xA;   * The action&#39;s title.&#xA;   */&#xA;  title: string;&#xA;  /**&#xA;   * (Android only)&#xA;   * The action&#39;s title color.&#xA;   * @platform Android&#xA;   */&#xA;  titleColor?: number | ColorValue;&#xA;  /**&#xA;   * (iOS14+ only)&#xA;   * An elaborated title that explains the purpose of the action.&#xA;   * @platform iOS&#xA;   */&#xA;  subtitle?: string;&#xA;  /**&#xA;   * The attributes indicating the style of the action.&#xA;   */&#xA;  attributes?: MenuAttributes;&#xA;  /**&#xA;   * (iOS14+ only)&#xA;   * The state of the action.&#xA;   * @platform iOS&#xA;   */&#xA;  state?: MenuState;&#xA;  /**&#xA;   * (Android and iOS13+ only)&#xA;   * - The action&#39;s image.&#xA;   * - Allows icon name included in project or system (Android) resources drawables and&#xA;   * in SF Symbol (iOS)&#xA;   * @example // (iOS)&#xA;   * image=&#34;plus&#34;&#xA;   * @example // (Android)&#xA;   * image=&#34;ic_menu_add&#34;&#xA;   * - TODO: Allow images other than those included in SF Symbol and resources drawables&#xA;   */&#xA;  image?: string;&#xA;  /**&#xA;   * (Android and iOS13+ only)&#xA;   * - The action&#39;s image color.&#xA;   */&#xA;  imageColor?: number | ColorValue;&#xA;  /**&#xA;   * (Android and iOS14+ only)&#xA;   * - Actions to be displayed in the sub menu&#xA;   * - On Android it does not support nesting next sub menus in sub menu item&#xA;   */&#xA;  subactions?: MenuAction[];&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;MenuAttributes&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The attributes indicating the style of the action.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;type MenuAttributes = {&#xA;  /**&#xA;   * An attribute indicating the destructive style.&#xA;   */&#xA;  destructive?: boolean;&#xA;  /**&#xA;   * An attribute indicating the disabled style.&#xA;   */&#xA;  disabled?: boolean;&#xA;  /**&#xA;   * An attribute indicating the hidden style.&#xA;   */&#xA;  hidden?: boolean;&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;&lt;code&gt;MenuState&lt;/code&gt;&lt;/h4&gt; &#xA;&lt;p&gt;The state of the action.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ts&#34;&gt;/**&#xA; * The state of the action.&#xA; * - off: A constant indicating the menu element is in the “off” state.&#xA; * - on: A constant indicating the menu element is in the “on” state.&#xA; * - mixed: A constant indicating the menu element is in the “mixed” state.&#xA; */&#xA;type MenuState = &#39;off&#39; | &#39;on&#39; | &#39;mixed&#39;;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;&lt;code&gt;onPressAction&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Callback function that will be called when selecting a menu item. It will contain id of the given action.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Required&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;({nativeEvent}) =&amp;gt; void&lt;/td&gt; &#xA;   &lt;td&gt;No&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/react-native-menu/menu/master/CONTRIBUTING.md&#34;&gt;contributing guide&lt;/a&gt; to learn how to contribute to the repository and the development workflow.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;MIT&lt;/p&gt;</summary>
  </entry>
</feed>