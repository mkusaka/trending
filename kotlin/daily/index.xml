<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-19T01:32:45Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>LinkSheet/LinkSheet</title>
    <updated>2024-05-19T01:32:45Z</updated>
    <id>tag:github.com,2024-05-19:/LinkSheet/LinkSheet</id>
    <link href="https://github.com/LinkSheet/LinkSheet" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Restore link control on Android 12+&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;&#34;&gt; &#xA; &lt;h1&gt;LinkSheet&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- ---------- Description ---------- --&gt; &#xA;&lt;div align=&#34;&#34;&gt; &#xA; &lt;p&gt;LinkSheet restores the app chooser for tapped links, which was removed in Android 12 (in favor of &lt;a href=&#34;https://developer.android.com/training/app-links/verify-android-applinks&#34;&gt;verified app links&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- ---------- Badges ---------- --&gt; &#xA;&lt;div align=&#34;&#34;&gt; &#xA; &lt;p&gt;⚠️ For the time being, please use the &lt;a href=&#34;https://raw.githubusercontent.com/LinkSheet/LinkSheet/master/#nightly-builds&#34;&gt;nightly builds&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/LinkSheet/LinkSheet/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/LinkSheet/LinkSheet&#34; alt=&#34;GitHub version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/fe.linksheet&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://apt.izzysoft.de/fdroid/api/v1/shield/fe.linksheet&#34; alt=&#34;IzzyOnDroid&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/LinkSheet/nightly/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/LinkSheet/nightly?label=nightly%20github&amp;amp;color=orange&#34; alt=&#34;Latest Github nightly release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://nightly.link/LinkSheet/nightly/workflows/build-nightly/master/linksheet-nightly.zip&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/nightly-latest-orange?label=nightly.link&amp;amp;color=orange&#34; alt=&#34;Nightly (via nightly.link)&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/LinkSheet/LinkSheet/actions/workflows/build-nightly.yml&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/LinkSheet/LinkSheet/build-nightly.yml&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LinkSheet/LinkSheet/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/LinkSheet/LinkSheet/total&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LinkSheet/nightly/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/LinkSheet/nightly/total?color=orange&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://hosted.weblate.org/projects/linksheet/&#34;&gt;&lt;img src=&#34;https://img.shields.io/weblate/progress/linksheet&#34; alt=&#34;Translations&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- ---------- Download ---------- --&gt; &#xA;&lt;div align=&#34;&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/fe.linksheet&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/LinkSheet/LinkSheet/master/readme/IzzyOnDroid.png&#34; alt=&#34;Get it on IzzySoft&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;!-- ---------- Screenshots ---------- --&gt; &#xA;&lt;div align=&#34;&#34;&gt; &#xA; &lt;div style=&#34;display: flex;&#34;&gt; &#xA;  &lt;img src=&#34;https://raw.githubusercontent.com/LinkSheet/LinkSheet/master/readme/screenshots.webp&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;div align=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://www.buymeacoffee.com/1fexd&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;border-radius: 10px; height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt; &#xA; &lt;a href=&#34;https://coindrop.to/fexd&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://coindrop.to/embed-button.png&#34; alt=&#34;Coindrop.to me&#34; style=&#34;border-radius: 10px; !important; height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Join Discord&lt;/h2&gt; &#xA;&lt;div align=&#34;&#34;&gt; &#xA; &lt;a href=&#34;https://discord.gg/XndZet2pWF&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1137845851344081038/widget.png?style=banner2&#34; alt=&#34;Discord Banner 2&#34;&gt;&lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Set preferred browser: Always list all browsers, only list native apps, always list selected browser, only list whitelisted browsers&lt;/li&gt; &#xA; &lt;li&gt;Preferred app for host: Set app to always open for selected host&lt;/li&gt; &#xA; &lt;li&gt;List apps which have verified links so you can easily disable them to allow LinkSheet to work&lt;/li&gt; &#xA; &lt;li&gt;Include usage stats and &#34;last app used history&#34; in sorting algorithm&lt;/li&gt; &#xA; &lt;li&gt;Copy url button in bottom sheet which copies the current url to the clipboard&lt;/li&gt; &#xA; &lt;li&gt;Share To button in bottom sheet which sends a &#34;Share To&#34; intent to other apps&lt;/li&gt; &#xA; &lt;li&gt;Single tap: Only require a single tap in bottom sheet to open app&lt;/li&gt; &#xA; &lt;li&gt;Always show package name: Shows package names all throughout the application&lt;/li&gt; &#xA; &lt;li&gt;Disable toast: Disables all toast messages&lt;/li&gt; &#xA; &lt;li&gt;Display apps in grid instead of list&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Experimental:&lt;/em&gt; &lt;a href=&#34;https://github.com/ClearURLs&#34;&gt;ClearURLs&lt;/a&gt; integration (removes tracking parameters) (report issues/bugs &lt;a href=&#34;https://github.com/1fexd/clearurlkt&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Experimental:&lt;/em&gt; &lt;a href=&#34;https://github.com/FastForwardTeam/FastForward&#34;&gt;FastFoward&lt;/a&gt; &lt;strong&gt;rule&lt;/strong&gt; integration (extracts redirects from url parameters) (report issues/bugs &lt;a href=&#34;https://github.com/1fexd/fastforwardkt&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;em&gt;Experimental:&lt;/em&gt; &lt;a href=&#34;https://github.com/libredirect/libredirect&#34;&gt;LibRedirect&lt;/a&gt; integration (redirects to non-proprietary frontends) (report issues/bugs &lt;a href=&#34;https://github.com/1fexd/libredirectkt&#34;&gt;here&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pro:&lt;/strong&gt; Resolve redirects either locally or via API hosted @ supabase.com (&lt;a href=&#34;https://supabase.com/privacy&#34;&gt;Supabase Privacy policy&lt;/a&gt;), API itself does not log anything except timestamp&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pro:&lt;/strong&gt; Priority support - your feature requests and/or bug fixes will be prioritized&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Pro:&lt;/strong&gt; Sustain LinkSheet&#39;s development - a small donation keeps me motivated to work on the app - thank you!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;All donations of 5€+ are eligible for ✨ LinkSheet Pro ✨ - donate via the links above&lt;/p&gt; &#xA;&lt;h2&gt;Nightly builds&lt;/h2&gt; &#xA;&lt;p&gt;Github automatically builds a &#34;nightly&#34; version of LinkSheet on push (e.g. meaning one or more commits have occurred)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Latest build is always available via &lt;a href=&#34;https://nightly.link/LinkSheet/LinkSheet/workflows/build-nightly/master/linksheet-nightly.zip&#34;&gt;nightly.link&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://github.com/ImranR98/Obtainium&#34;&gt;Obtainium&lt;/a&gt; with the &lt;a href=&#34;https://github.com/LinkSheet/nightly&#34;&gt;nightly&lt;/a&gt; repository to auto-download builds&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LinkSheet, excluding all &lt;code&gt;strings.xml&lt;/code&gt; and &lt;code&gt;plural.xml&lt;/code&gt; files, is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/LinkSheet/LinkSheet/master/LICENSE&#34;&gt;LPL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;All &lt;code&gt;strings.xml&lt;/code&gt; and &lt;code&gt;plural.xml&lt;/code&gt; files are licensed under &lt;a href=&#34;https://raw.githubusercontent.com/LinkSheet/LinkSheet/master/LICENSE_STRINGS&#34;&gt;GPL-3.0&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Translations are managed via &lt;a href=&#34;https://hosted.weblate.org/projects/linksheet/&#34;&gt;Weblate&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Allow translations except for English are maintained by contributors&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;LinkSheet was initially based on &lt;a href=&#34;https://github.com/tasomaniac/OpenLinkWith&#34;&gt;OpenLinkWith&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zacharee/MastodonRedirect&#34;&gt;MastodonRedirect&lt;/a&gt; provided a reference for the Shizuku implementation&lt;/li&gt; &#xA; &lt;li&gt;Inspiration has been taken from &lt;a href=&#34;https://github.com/JunkFood02/Seal&#34;&gt;Seal&lt;/a&gt; and &lt;a href=&#34;https://github.com/polodarb/GMS-Flags&#34;&gt;GMS-Flags&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Star History&lt;/h2&gt; &#xA;&lt;a href=&#34;https://star-history.com/#LinkSheet/LinkSheet&amp;amp;Date&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://api.star-history.com/svg?repos=LinkSheet/LinkSheet&amp;amp;type=Date&amp;amp;theme=dark&#34;&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: light)&#34; srcset=&#34;https://api.star-history.com/svg?repos=LinkSheet/LinkSheet&amp;amp;type=Date&#34;&gt; &#xA;  &lt;img alt=&#34;Star History Chart&#34; src=&#34;https://api.star-history.com/svg?repos=LinkSheet/LinkSheet&amp;amp;type=Date&#34;&gt; &#xA; &lt;/picture&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>Kotlin/kotlinx-rpc</title>
    <updated>2024-05-19T01:32:45Z</updated>
    <id>tag:github.com,2024-05-19:/Kotlin/kotlinx-rpc</id>
    <link href="https://github.com/Kotlin/kotlinx-rpc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;kotlinx.rpc is a Kotlin library for adding asynchronous RPC services to your applications.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/kotlin/kotlinx-rpc/main/.github/images/logo_dark.png&#34;&gt; &#xA;  &lt;img alt=&#34;kotlinx.rpc logo&#34; src=&#34;https://raw.githubusercontent.com/kotlin/kotlinx-rpc/main/.github/images/logo_light.png&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kotlinlang.org/docs/components-stability.html&#34;&gt;&lt;img src=&#34;https://kotl.in/badges/experimental.svg?sanitize=true&#34; alt=&#34;Kotlin Experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;http://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;Official JetBrains project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-1.7.0--1.9.24-blue.svg?logo=kotlin&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; is a Kotlin library for adding asynchronous Remote Procedure Call (RPC) services to your applications. Build your RPC with already known language constructs and nothing more!&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;First, create your &lt;code&gt;RPC&lt;/code&gt; service and define some methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import kotlinx.rpc.RPC&#xA;&#xA;interface AwesomeService : RPC {&#xA;    suspend fun getNews(city: String): Flow&amp;lt;String&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your server code define how to respond by simply implementing the service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class AwesomeServiceImpl : AwesomeService {&#xA;    override suspend fun getNews(city: String): Flow&amp;lt;String&amp;gt; {&#xA;        return flow { &#xA;            emit(&#34;Today is 23 degrees!&#34;)&#xA;            emit(&#34;Harry Potter in $city!&#34;)&#xA;            emit(&#34;New dogs cafe has opened doors to all fluffy customers!&#34;)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, choose how do you want your service to communicate. For example, you can use integration with &lt;a href=&#34;https://ktor.io/&#34;&gt;Ktor&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    embeddedServer(Netty, 8080) {&#xA;        install(RPC)&#xA;        routing {&#xA;            rpc(&#34;/awesome&#34;) {&#xA;                rpcConfig {&#xA;                    serialization {&#xA;                        json()&#xA;                    }&#xA;                }&#xA;&#xA;                registerService&amp;lt;AwesomeService&amp;gt; { ctx -&amp;gt; AwesomeServiceImpl(ctx) }&#xA;            }&#xA;        }&#xA;    }.start(wait = true)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To connect to the server use the following &lt;a href=&#34;https://ktor.io/docs/create-client.html&#34;&gt;Ktor Client&lt;/a&gt; setup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val rpcClient = HttpClient { installRPC() }.rpc {&#xA;    url(&#34;ws://localhost:8080/awesome&#34;)&#xA;&#xA;    rpcConfig {&#xA;        serialization {&#xA;            json()&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;streamScoped {&#xA;    rpcClient.withService&amp;lt;AwesomeService&amp;gt;().getNews(&#34;KotlinBurg&#34;).collect { article -&amp;gt;&#xA;        println(article)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://kotlin.github.io/kotlinx-rpc&#34;&gt;getting started guide&lt;/a&gt; for a thorough overview of all components and features.&lt;/p&gt; &#xA;&lt;h2&gt;Configure the project&lt;/h2&gt; &#xA;&lt;h3&gt;Plugin dependencies&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; has the following plugin dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;org.jetbrains.kotlinx.rpc.plugin&lt;/code&gt; will set up BOM and code generation for targets in the project.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;org.jetbrains.kotlinx.rpc.platform&lt;/code&gt; will only set up BOM. It is useful when you want to split your app into modules, and some of them will contain service declarations, thus using code generation, while others will only consume them.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;com.google.devtools.ksp&lt;/code&gt; is required by the library. Corresponding configurations will be set up automatically by &lt;code&gt;org.jetbrains.kotlinx.rpc.plugin&lt;/code&gt; plugin.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use the &lt;code&gt;kotlinx.rpc&lt;/code&gt; Gradle plugins, you need to add the following repositories in the &lt;code&gt;settings.gradle.kts&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;pluginManagement {&#xA;    repositories {&#xA;        maven(url = &#34;https://maven.pkg.jetbrains.space/public/p/krpc/maven&#34;) // todo update repo link&#xA;        gradlePluginPortal()&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example of plugins setup in a project&#39;s &lt;code&gt;build.gradle.kts&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// build.gradle.kts&#xA;plugins {&#xA;    kotlin(&#34;jvm&#34;) version &#34;1.9.24&#34;&#xA;    kotlin(&#34;plugin.serialization&#34;) version &#34;1.9.24&#34;&#xA;    id(&#34;com.google.devtools.ksp&#34;) version &#34;1.9.24-1.0.20&#34;&#xA;    id(&#34;org.jetbrains.kotlinx.rpc.plugin&#34;) version &#34;0.1.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Runtime dependencies&lt;/h3&gt; &#xA;&lt;p&gt;To use &lt;code&gt;kotlinx.rpc&lt;/code&gt; runtime dependencies, you need to add our Space repository to the list of project repositories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;repositories {&#xA;    maven(&#34;https://maven.pkg.jetbrains.space/public/p/krpc/maven&#34;) // todo update repo link&#xA;    mavenCentral() // for other dependencies, e.g. Ktor&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And now you can add dependencies to your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies {&#xA;    // client API&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-runtime-client&#34;)&#xA;    // server API&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-runtime-server&#34;) &#xA;    // serialization module. also, protobuf and cbor are available&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-runtime-serialization-json&#34;) &#xA;&#xA;    // transport implementation for Ktor&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-transport-ktor-client&#34;)&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-transport-ktor-server&#34;)&#xA;&#xA;    // Ktor API&#xA;    implementation(&#34;io.ktor:ktor-client-cio-jvm:$ktor_version&#34;)&#xA;    implementation(&#34;io.ktor:ktor-server-netty-jvm:$ktor_version&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see example projects in the &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-rpc/main/samples&#34;&gt;samples&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Transport&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; is designed to be transport agnostic. That means that the library aims to provide the best RPC experience regardless of how the resulting messages are transferred. That allows for easy integration into existing solutions, such as Ktor, without the need to rewrite code. Just plug-in &lt;code&gt;kotlinx.rpc&lt;/code&gt;, provide it with means to transfer encoded data (or use out-of-the-box integrations) and it will run. With enough time it might even work with &lt;a href=&#34;https://en.wikipedia.org/wiki/IP_over_Avian_Carriers&#34;&gt;avian carriers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; provides its own transfer protocol called kRPC, which takes responsibility for tracking serializing and handling other complex request operations. When using kRPC you only need to provide a transport or choose from the officially supported ones:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ktor transport&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides that, one can even provide their own protocol or integration with one to use with services and &lt;code&gt;kotlinx.rpc&lt;/code&gt; API with it. Though possible, it is much more complicated way to use the library and generally not needed. &lt;code&gt;kotlinx.rpc&lt;/code&gt; aims to provide most common protocols integrations as well as the in-house one called kRPC.&lt;br&gt; Integrations in progress:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration with &lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt; (in prototype)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Kotlin compatibility&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; heavily relies on Kotlin compiler plugin to be able to generate client service implementations and other needed code. That results in the need to be bound to Kotlin compiler version and the versions of library, so &lt;code&gt;kotlinx.rpc&lt;/code&gt; version may look like this: &lt;code&gt;1.9.10-1.0.0&lt;/code&gt;, where the prefix (&lt;code&gt;1.9.10&lt;/code&gt;) is the Kotlin version and the suffix (&lt;code&gt;1.0.0&lt;/code&gt;) is the &lt;code&gt;kotlinx.rpc&lt;/code&gt; feature (or core) version. To mitigate inconveniences related to the need to update Kotlin version then one wants to have newer version of the library &lt;code&gt;kotlinx.rpc&lt;/code&gt; provides all its feature releases for all stable releases of the 3 last major Kotlin versions. Currently, they are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.7.0, 1.7.10, 1.7.20, 1.7.21, 1.7.22&lt;/li&gt; &#xA; &lt;li&gt;1.8.0, 1.8.10, 1.8.20, 1.8.21, 1.8.22&lt;/li&gt; &#xA; &lt;li&gt;1.9.0, 1.9.10, 1.9.20, 1.9.21, 1.9.22, 1.9.23, 1.9.24&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That generates resulting versions &lt;code&gt;1.7.0-1.0.0&lt;/code&gt;, &lt;code&gt;1.7.10-1.0.0&lt;/code&gt;, etc. To simplify project configuration, our Gradle plugin sets proper library version automatically using BOM, based on the project&#39;s Kotlin version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;    kotlin(&#34;jvm&#34;) version &#34;1.9.24&#34;&#xA;    id(&#34;org.jetbrains.kotlinx.rpc.plugin&#34;) version &#34;1.0.0&#34;&#xA;}&#xA;&#xA;dependencies {&#xA;    implemntation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-runtime&#34;) // version is 1.9.24-1.0.0 is set by Gradle plugin&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;JetBrains Product&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; is an official &lt;a href=&#34;https://jetbrains.com&#34;&gt;JetBrains&lt;/a&gt; product and is primarily developed by the team at JetBrains, with contributions from the community.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Community support is available on the &lt;a href=&#34;https://kotlinlang.slack.com/archives/C072YJ3Q91V&#34;&gt;Kotlin Slack kotlinx-rpc channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;If you find a security vulnerability in &lt;code&gt;kotlinx.rpc&lt;/code&gt;, we kindly request that you reach out to the JetBrains security team via our &lt;a href=&#34;https://www.jetbrains.com/legal/terms/responsible-disclosure.html&#34;&gt;responsible disclosure process&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-rpc/main/CONTRIBUTING.md&#34;&gt;the contribution guide&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-rpc/main/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt; before contributing.&lt;/p&gt;</summary>
  </entry>
</feed>