<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-25T01:34:31Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>google/secrets-gradle-plugin</title>
    <updated>2023-10-25T01:34:31Z</updated>
    <id>tag:github.com,2023-10-25:/google/secrets-gradle-plugin</id>
    <link href="https://github.com/google/secrets-gradle-plugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Gradle plugin for providing your secrets to your Android project.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Secrets Gradle Plugin for Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/google/secrets-gradle-plugin/workflows/Tests/badge.svg?sanitize=true&#34; alt=&#34;Tests&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/license-Apache-blue&#34; alt=&#34;Apache-2.0&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Gradle plugin for providing your secrets securely to your Android project.&lt;/p&gt; &#xA;&lt;p&gt;This Gradle plugin reads secrets from a properties file &lt;strong&gt;not checked into version control&lt;/strong&gt;, such as &lt;code&gt;local.properties&lt;/code&gt;, and expose those properties as variables in the Gradle-generated &lt;code&gt;BuildConfig&lt;/code&gt; class and in the Android manifest file.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;DISCLAIMER:&lt;/strong&gt; This plugin is primarily for hiding your keys from version control. Since your key is part of the static binary, your API keys are still recoverable by decompiling an APK. So, securing your key using other measures like adding restrictions (if possible) are recommended.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gradle-based Android project&lt;/li&gt; &#xA; &lt;li&gt;Android Gradle plugin 7.0.2&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Starting from v1.1.0, the plugin ID was changed to &#34;com.google.android.libraries.mapsplatform.secrets-gradle-plugin&#34; and the plugin is now being distributed via Google Maven (gMaven). You can still download previous versions of the plugin from Gradle&#39;s plugin portal, but new versions will now only be distributed through gMaven.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In your project&#39;s root &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Groovy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;buildscript {&#xA;    dependencies {&#xA;        classpath &#34;com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kotlin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;buildscript {&#xA;    dependencies {&#xA;        classpath(&#34;com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:2.0.1&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;In your app-level &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Groovy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;plugins {&#xA;    id &#39;com.google.android.libraries.mapsplatform.secrets-gradle-plugin&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Kotlin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;plugins {&#xA;    id(&#34;com.google.android.libraries.mapsplatform.secrets-gradle-plugin&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This plugin also supports library module type (&lt;code&gt;com.android.library&lt;/code&gt;). Just install the plugin in your library-level &lt;code&gt;build.gradle&lt;/code&gt; file and keys will be visible inside that module as well.&lt;/p&gt; &#xA;&lt;h3&gt;Snapshot Releases&lt;/h3&gt; &#xA;&lt;p&gt;Snapshot releases, which are distributed via &lt;a href=&#34;https://github.com/orgs/google/packages?repo_name=secrets-gradle-plugin&#34;&gt;GitHub Packages&lt;/a&gt;, are also available for latest fixes. To use a snapshot release, add the following repository to your project-level &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;p&gt;Groovy:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;buildscript {&#xA;    repositories {&#xA;        maven {&#xA;            url = uri(&#34;https://maven.pkg.github.com/google/secrets-gradle-plugin&#34;)&#xA;            credentials {&#xA;                username = project.findProperty(&#34;GITHUB_USER&#34;) ?: System.getenv(&#34;GITHUB_USER&#34;)&#xA;                password = project.findProperty(&#34;GITHUB_TOKEN&#34;) ?: System.getenv(&#34;GITHUB_TOKEN&#34;)&#xA;            }&#xA;        }&#xA;    }&#xA;    dependencies {&#xA;        classpath &#34;com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:&amp;lt;version&amp;gt;-SNAPSHOT&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, see &lt;a href=&#34;https://docs.github.com/en/packages/learn-github-packages/introduction-to-github-packages#authenticating-to-github-packages&#34;&gt;Authenticating to GitHub Packages&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Example Usage&lt;/h2&gt; &#xA;&lt;p&gt;Example contents of &lt;code&gt;local.properties&lt;/code&gt; under your root project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apiKey=YOUR_API_KEY&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After applying the plugin and building your project, the API key then becomes accessible in two ways.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;As a &lt;code&gt;BuildConfig&lt;/code&gt; value:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val apiKey = BuildConfig.apiKey&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;As a variable accessible in your &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;meta-data android:value=&#34;${apiKey}&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;CI/CD Systems&lt;/h2&gt; &#xA;&lt;p&gt;For CI/CD systems, consider creating and checking in version control a default properties file with all the same keys required by your app but with &lt;em&gt;safe&lt;/em&gt; default values. To do this, create a properties file and set the &lt;code&gt;defaultPropertiesFileName&lt;/code&gt; value to that file name. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;secrets {&#xA;    defaultPropertiesFileName = &#39;local.defaults.properties&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Configuration Options&lt;/h2&gt; &#xA;&lt;p&gt;The plugin can optionally be configured:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;secrets {&#xA;    // Change the properties file from the default &#34;local.properties&#34; in your root project&#xA;    // to another properties file in your root project.&#xA;    propertiesFileName &#39;secrets.properties&#39;&#xA;&#xA;    // A properties file containing default secret values. This file can be checked in version&#xA;    // control.&#xA;    defaultPropertiesFileName = &#39;secrets.defaults.properties&#39;&#xA;&#xA;    // Configure which keys should be ignored by the plugin by providing regular expressions.&#xA;    // &#34;sdk.dir&#34; is ignored by default.&#xA;    ignoreList.add(&#34;keyToIgnore&#34;) // Ignore the key &#34;keyToIgnore&#34;&#xA;    ignoreList.add(&#34;sdk.*&#34;)       // Ignore all keys matching the regexp &#34;sdk.*&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Build-Variant Specific Properties&lt;/h3&gt; &#xA;&lt;p&gt;To set build-variant specific properties (build type or flavor), create a properties file at the root directory of the project with the same name as the variant. For example, to set keys specific for the &lt;code&gt;release&lt;/code&gt; build type, create a new file called &lt;code&gt;release.properties&lt;/code&gt; containing release-specific keys.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Contributions to this library are always welcome and highly encouraged!&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/google/secrets-gradle-plugin/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/google/secrets-gradle-plugin/main/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT.md&lt;/a&gt; for more information on how to get started.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache 2.0. See &lt;a href=&#34;https://raw.githubusercontent.com/google/secrets-gradle-plugin/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>msasikanth/twine</title>
    <updated>2023-10-25T01:34:31Z</updated>
    <id>tag:github.com,2023-10-25:/msasikanth/twine</id>
    <link href="https://github.com/msasikanth/twine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Twine: A multiplatform RSS reader built using Kotlin and Compose&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Twine - RSS Reader&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/msasikanth/twine/actions/workflows/ci_checks.yml/badge.svg?branch=main&#34; alt=&#34;CI-MAIN&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/banner.png&#34; alt=&#34;banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twine is a multiplatform RSS reader app built using Kotlin and Compose Multiplatform. It features an nice user interface and experience to browse through the feeds, and supports Material 3 content based &lt;a href=&#34;https://m3.material.io/styles/color/dynamic-color/user-generated-color&#34;&gt;dynamic theming&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=dev.sasikanth.rss.reader&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt;&lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;200px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apps.apple.com/us/app/twine-rss-reader/id6465694958?itsct=apps_box_badge&amp;amp;itscg=30200&#34; style=&#34;display: inline-block; overflow: hidden; border-radius: 13px;&#34;&gt;&lt;img src=&#34;https://tools.applemediaservices.com/api/badges/download-on-the-app-store/white/en-us;releaseDate=1694390400&#34; alt=&#34;Download on the App Store&#34; width=&#34;200px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features ✨&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports RSS &amp;amp; Atom feeds&lt;/li&gt; &#xA; &lt;li&gt;Bookmarks&lt;/li&gt; &#xA; &lt;li&gt;Search&lt;/li&gt; &#xA; &lt;li&gt;Background sync&lt;/li&gt; &#xA; &lt;li&gt;Feed management: Add, Edit &amp;amp; Pin feeds&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack 📚&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/lp/multiplatform/&#34;&gt;Kotlin Multiplatform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/lp/compose-multiplatform/&#34;&gt;Compose Multiplatform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ktor.io/&#34;&gt;Ktor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cashapp.github.io/sqldelight/2.0.0-alpha05/&#34;&gt;SQLDelight&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/&#34;&gt;Decompose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/evant/kotlin-inject&#34;&gt;Kotlin-inject&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For full list of dependencies used, please take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/gradle/libs.versions.toml&#34;&gt;catalog&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Development 🛠️&lt;/h2&gt; &#xA;&lt;p&gt;You can just clone the repo and build it locally without requiring any changes.&lt;/p&gt; &#xA;&lt;p&gt;Project requires JDK 20+, and based on the AGP version defined in &lt;a href=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/gradle/libs.versions.toml&#34;&gt;&lt;code&gt;libs.versions.toml&lt;/code&gt;&lt;/a&gt; file, you can use appropriate Android Studio to import the project.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing 🛠️&lt;/h2&gt; &#xA;&lt;p&gt;You can contribute bug fixes to the project via PRs, for anything else open an issue to start a conversation.&lt;/p&gt; &#xA;&lt;p&gt;This project uses ktfmt, provided via the spotless gradle plugin, and the bundled project IntelliJ codestyle. Run &lt;code&gt;./gradlew spotlessApply&lt;/code&gt; to format the code before raising a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Made by ❤️&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sasikanth.dev&#34;&gt;Sasikanth Miriyampalli&lt;/a&gt; / Development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/edpratti&#34;&gt;Eduardo Pratti&lt;/a&gt; / Design&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright Sasikanth Miriyampalli&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>