<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-09T01:43:14Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>KieronQuinn/PixelLauncherMods</title>
    <updated>2022-06-09T01:43:14Z</updated>
    <id>tag:github.com,2022-06-09:/KieronQuinn/PixelLauncherMods</id>
    <link href="https://github.com/KieronQuinn/PixelLauncherMods" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A root app that enables you to add a number of features to the stock Pixel Launcher, without needing Xposed&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://i.imgur.com/gWgE6Hz.png&#34;&gt;&lt;img src=&#34;https://i.imgur.com/gWgE6Hzl.png&#34; alt=&#34;Pixel Launcher Mods&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Pixel Launcher Mods is a &lt;strong&gt;root&lt;/strong&gt; app for Android 12+ that enables you to add a number of features to the stock Pixel Launcher, without needing Xposed.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Custom icons, including icon packs, adaptive icon packs and Lawnicons&lt;/li&gt; &#xA; &lt;li&gt;Custom themed icons, add themed icons to apps that don&#39;t yet have them officially &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Generate themed icons from supported normal icons&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Replace the At a Glance &lt;strong&gt;or&lt;/strong&gt; Search Box with a widget of your choice&lt;/li&gt; &#xA; &lt;li&gt;Hide apps from the app drawer&lt;/li&gt; &#xA; &lt;li&gt;Resize widgets beyond their original bounds, down to 1x1 or up to the maximum size of your grid&lt;/li&gt; &#xA; &lt;li&gt;Hide the status bar clock while the Pixel Launcher is visible, for ultimate minimalism&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please &lt;a href=&#34;https://github.com/KieronQuinn/PixelLauncherMods/raw/master/app/src/main/assets/faq.md&#34;&gt;read the FAQ&lt;/a&gt; before installing or making issues / asking questions&lt;/p&gt; &#xA;&lt;h3&gt;Screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://i.imgur.com/ORcHncm.png&#34;&gt;&lt;img src=&#34;https://i.imgur.com/ORcHncml.png&#34; alt=&#34;App Icons&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://i.imgur.com/WSJjUUg.png&#34;&gt;&lt;img src=&#34;https://i.imgur.com/WSJjUUgl.png&#34; alt=&#34;App Editor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://i.imgur.com/Zbn76or.png&#34;&gt;&lt;img src=&#34;https://i.imgur.com/Zbn76orl.png&#34; alt=&#34;Home screen Shortcut Editor&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://i.imgur.com/MHPJWlu.png&#34;&gt;&lt;img src=&#34;https://i.imgur.com/MHPJWlul.png&#34; alt=&#34;Tweaks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://i.imgur.com/0XIyNnW.png&#34;&gt;&lt;img src=&#34;https://i.imgur.com/0XIyNnWl.png&#34; alt=&#34;At a Glance / Search Box replacement&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://i.imgur.com/XY7keMq.png&#34;&gt;&lt;img src=&#34;https://i.imgur.com/XY7keMql.png&#34; alt=&#34;Hiding Apps&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Icon Packs used in screenshots are a mixture of Lawnicons, OnDynamic Icon Pack, Lavien Adaptive Icon Pack, and a number of Pixel-style icon packs available on Google Play. Widgets are Firefox and Another Widget (At a Glance replacement)&lt;/p&gt; &#xA;&lt;h3&gt;Download&lt;/h3&gt; &#xA;&lt;p&gt;Download from the &lt;a href=&#34;https://github.com/KieronQuinn/PixelLauncherMods/releases&#34;&gt;releases page&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How It Works&lt;/h3&gt; &#xA;&lt;p&gt;Interested in how Pixel Launcher Mods works? You can read all about it &lt;a href=&#34;https://medium.com/@KieronQuinn/adventures-in-launcherland-modding-the-pixel-launcher-without-actually-changing-the-apk-or-using-54a0cf34ef01&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>kanake10/Cocktails</title>
    <updated>2022-06-09T01:43:14Z</updated>
    <id>tag:github.com,2022-06-09:/kanake10/Cocktails</id>
    <link href="https://github.com/kanake10/Cocktails" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mobile App to show various cocktailsüç∏ üç∑ üçπ from the CockTailDB .Written using Kotlin, Clean Architecture ,MVVM, Room ,Koin for DI and other jetpack libraries.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Cocktails&lt;/h1&gt; &#xA;&lt;p&gt;Mobile App to show various cocktailsüç∏ üç∑ üçπ from the CockTailDB API.Written using Kotlin, Clean Architecture ,MVVM, Room ,DI and other jetpack libraries.&lt;/p&gt; &#xA;&lt;p&gt;Min Api:21&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/#prerequisites&#34;&gt;Prerequisite&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/#dependencies&#34;&gt;Dependencies&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/#danger&#34;&gt;Danger&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/#architecture&#34;&gt;Architecture&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/#techstack&#34;&gt;Techstack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/#libraries&#34;&gt;Libraries&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/#slackmessage&#34;&gt;SlackMessage&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Change the prefix of the BASE_URL from &lt;code&gt;www&lt;/code&gt; to &lt;code&gt;https&lt;/code&gt; in order to successfully load data.&lt;/p&gt; &#xA;&lt;p&gt;To check for dependency updates, run the following gradlew command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./gradlew dependencyUpdate&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Good thing the plugin does not update dependencies whose versions are not stable yet ü•≥ ü•≥ .&lt;/p&gt; &#xA;&lt;h2&gt;Dependencies&lt;/h2&gt; &#xA;&lt;p&gt;All the dependencies (external libraries) are defined in the single place - Gradle &lt;code&gt;scripts/versions.gradle&lt;/code&gt; folder. This approach allows to easily manage dependencies and use the same dependency version across all modules. Each of the tools has its own Gradle file in the &lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/scripts&#34;&gt;scripts folder&lt;/a&gt;. This is by design so that if you chose to have a multi module project, these dependencies can easily be shared between them. This is already configured inside our root &lt;code&gt;build.gradle&lt;/code&gt; file, by applying to each sub project:&lt;/p&gt; &#xA;&lt;h2&gt;Danger&lt;/h2&gt; &#xA;&lt;p&gt;This template uses &lt;a href=&#34;https://danger.systems&#34;&gt;Danger&lt;/a&gt; which will perform some checks against our pull requests. You can find the list of checks in the &lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/Dangerfile&#34;&gt;Dangerfile&lt;/a&gt;. In addition, we have a GitHub Actions workflow for Danger checks. In order for that to work, you&#39;ll need a Danger API key setup in your GitHub secrets. Info on this can be found &lt;a href=&#34;https://www.jessesquires.com/blog/2020/04/10/running-danger-on-github-actions/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;The app is built using the Modular MVVM architectural pattern and makes heavy use of a couple of Android Jetpack components. MVVM allows for the separation of concern which also makes testing easier. The app has a fragment that communicates to ViewModel which in turn communicates to the usecase which communiacates to Repository to get data.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/screenshots/cleanarch.jpeg&#34; width=&#34;600&#34; height=&#34;500/&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Techstack&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Tech-stack&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt; - a cross-platform, statically typed, general-purpose programming language with type inference.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines-overview.html&#34;&gt;Coroutines&lt;/a&gt; - perform background operations.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines/flow.html&#34;&gt;Flow&lt;/a&gt; - handle the stream of data asynchronously that executes sequentially.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://insert-koin.io/&#34;&gt;KOIN&lt;/a&gt; - a pragmatic lightweight dependency injection framework.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/view-binding/&#34;&gt;View Binding&lt;/a&gt; - A feature that allows you to more easily write code that interacts with views.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.android.com/kotlin/ktx.html&#34;&gt;Android KTX&lt;/a&gt; - Provide concise, idiomatic Kotlin to Jetpack and Android platform APIs.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.android.com/jetpack/androidx&#34;&gt;AndroidX&lt;/a&gt; - Major improvement to the original Android &lt;a href=&#34;https://developer.android.com/topic/libraries/support-library/index&#34;&gt;Support Library&lt;/a&gt;, which is no longer maintained.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.android.com/jetpack&#34;&gt;Jetpack&lt;/a&gt;üöÄ&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/room&#34;&gt;Room&lt;/a&gt; - a persistence library provides an abstraction layer over SQLite.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/livedata&#34;&gt;LiveData&lt;/a&gt; - is an observable data holder.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/lifecycle&#34;&gt;Lifecycle&lt;/a&gt; - perform action when lifecycle state changes.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModel&lt;/a&gt; - store and manage UI-related data in a lifecycle conscious way.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/documentation/GitHooks.md&#34;&gt;Git Hooks&lt;/a&gt; for automatically perform static analysis checks.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/documentation/VersionsPlugin.md&#34;&gt;Gradle Versions Plugin&lt;/a&gt; for checking all dependencies for new versions.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/documentation/VersionsPlugin.md&#34;&gt;Danger&lt;/a&gt; which will perform some checks against our pull requests.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Architecture&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;MVVM - Model View View Model&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Gradle&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Plugins &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/JLLeitschuh/ktlint-gradle&#34;&gt;Ktlint&lt;/a&gt; - creates convenient tasks in your Gradle project that run ktlint checks or do code auto format.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/detekt&#34;&gt;Detekt&lt;/a&gt; - a static code analysis tool for the Kotlin programming language.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/diffplug/spotless&#34;&gt;Spotless&lt;/a&gt; - format java, groovy, markdown and license headers using gradle.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/dokka&#34;&gt;Dokka&lt;/a&gt; - a documentation engine for Kotlin, performing the same function as javadoc for Java.&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://danger.systems/&#34;&gt;Danger&lt;/a&gt; - a documentation engine for Kotlin, performing the same function as javadoc for Java.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;CI/CD&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Github Actions&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;The final app looks like this:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Collapsing ToolBar&lt;/th&gt; &#xA;   &lt;th&gt;CockTails&lt;/th&gt; &#xA;   &lt;th&gt;Shimmer&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/kanake10/Cocktails/raw/main/screenshots/cocktails_list.png&#34; width=&#34;280&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/kanake10/Cocktails/raw/main/screenshots/toolbar.png&#34; width=&#34;280&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://github.com/kanake10/Cocktails/raw/main/screenshots/shimmer.png&#34; width=&#34;280&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;SlackMessage&lt;/h2&gt; &#xA;&lt;p&gt;Using fastlane to send a message to Slack once our app compiles successfully.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;fastlane android debug&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;|&lt;img src=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/screenshots/slackMessage.png&#34; width=&#34;700&#34; height=&#34;500/&#34;&gt;| |&lt;img src=&#34;https://raw.githubusercontent.com/kanake10/Cocktails/main/screenshots/slackNotification.png&#34; width=&#34;500&#34; height=&#34;500/&#34;&gt;|&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ChuckerTeam/chucker</title>
    <updated>2022-06-09T01:43:14Z</updated>
    <id>tag:github.com,2022-06-09:/ChuckerTeam/chucker</id>
    <link href="https://github.com/ChuckerTeam/chucker" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üîé An HTTP inspector for Android &amp; OkHTTP (like Charles but on device)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chucker&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/artifact/com.github.chuckerteam.chucker/library&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.github.chuckerteam.chucker/library&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/ChuckerTeam/chucker/workflows/Pre%20Merge%20Checks/badge.svg?branch=develop&#34; alt=&#34;Pre Merge Checks&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/ChuckerTeam/Chucker.svg?sanitize=true&#34; alt=&#34;License&#34;&gt; &lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-orange.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.slack.com/archives/CRWD6370R&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@kotlinlang/chucker-yellow.svg?logo=slack&#34; alt=&#34;Join the chat at https://kotlinlang.slack.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://androidweekly.net/issues/issue-375&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android%20Weekly-%23375-blue.svg?sanitize=true&#34; alt=&#34;Android Weekly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;A fork of &lt;a href=&#34;https://github.com/jgilfelt/chuck&#34;&gt;Chuck&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/assets/ic_launcher-web.png&#34; alt=&#34;chucker icon&#34; width=&#34;30%&#34;&gt; &lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#getting-started-&#34;&gt;Getting Started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#features-&#34;&gt;Features&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#multi-window-&#34;&gt;Multi-Window&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#configure-&#34;&gt;Configure&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#redact-header-%EF%B8%8F&#34;&gt;Redact-HeaderÔ∏è&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#decode-body-&#34;&gt;Decode-Body&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#migrating-&#34;&gt;Migrating&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#snapshots-&#34;&gt;Snapshots&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#faq-&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#contributing-&#34;&gt;Contributing&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#building-&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#acknowledgments-&#34;&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/#license-&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Chucker simplifies the inspection of &lt;strong&gt;HTTP(S) requests/responses&lt;/strong&gt; fired by your Android App. Chucker works as an &lt;strong&gt;OkHttp Interceptor&lt;/strong&gt; persisting all those events inside your application, and providing a UI for inspecting and sharing their content.&lt;/p&gt; &#xA;&lt;p&gt;Apps using Chucker will display a &lt;strong&gt;notification&lt;/strong&gt; showing a summary of ongoing HTTP activity. Tapping on the notification launches the full Chucker UI. Apps can optionally suppress the notification, and launch the Chucker UI directly from within their own interface.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/assets/chucker-http.gif&#34; alt=&#34;chucker http sample&#34; width=&#34;50%&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Getting Started üë£&lt;/h2&gt; &#xA;&lt;p&gt;Chucker is distributed through &lt;a href=&#34;https://search.maven.org/artifact/com.github.chuckerteam.chucker/library&#34;&gt;Maven Central&lt;/a&gt;. To use it you need to add the following &lt;strong&gt;Gradle dependency&lt;/strong&gt; to your &lt;code&gt;build.gradle&lt;/code&gt; file of you android app module (NOT the root file).&lt;/p&gt; &#xA;&lt;p&gt;Please note that you should add both the &lt;code&gt;library&lt;/code&gt; and the the &lt;code&gt;library-no-op&lt;/code&gt; variant to isolate Chucker from release builds as follows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencies {&#xA;  debugImplementation &#34;com.github.chuckerteam.chucker:library:3.5.2&#34;&#xA;  releaseImplementation &#34;com.github.chuckerteam.chucker:library-no-op:3.5.2&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To start using Chucker, just plug it a new &lt;code&gt;ChuckerInterceptor&lt;/code&gt; to your OkHttp Client Builder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val client = OkHttpClient.Builder()&#xA;                .addInterceptor(ChuckerInterceptor(context))&#xA;                .build()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/studio/write/java8-support&#34;&gt;Enable Java 8 support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;android {&#xA;  compileOptions {&#xA;    sourceCompatibility JavaVersion.VERSION_1_8&#xA;    targetCompatibility JavaVersion.VERSION_1_8&#xA;  }&#xA;&#xA;  // For Kotlin projects add also this line&#xA;  kotlinOptions.jvmTarget = &#34;1.8&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;That&#39;s it!&lt;/strong&gt; üéâ Chucker will now record all HTTP interactions made by your OkHttp client.&lt;/p&gt; &#xA;&lt;p&gt;Historically, Chucker was distributed through JitPack. You can find older version of Chucker here: &lt;a href=&#34;https://jitpack.io/#ChuckerTeam/chucker&#34;&gt;&lt;img src=&#34;https://jitpack.io/v/ChuckerTeam/chucker.svg?sanitize=true&#34; alt=&#34;JitPack&#34;&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Features üß∞&lt;/h2&gt; &#xA;&lt;p&gt;Don&#39;t forget to check the &lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/CHANGELOG.md&#34;&gt;changelog&lt;/a&gt; to have a look at all the changes in the latest version of Chucker.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compatible with &lt;strong&gt;OkHTTP 4&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;API &amp;gt;= 21&lt;/strong&gt; compatible&lt;/li&gt; &#xA; &lt;li&gt;Easy to integrate (just 2 gradle &lt;code&gt;implementation&lt;/code&gt; lines).&lt;/li&gt; &#xA; &lt;li&gt;Works &lt;strong&gt;out of the box&lt;/strong&gt;, no customization needed.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Empty release artifact&lt;/strong&gt; üßº (no traces of Chucker in your final APK).&lt;/li&gt; &#xA; &lt;li&gt;Support for body text search with &lt;strong&gt;highlighting&lt;/strong&gt; üïµÔ∏è‚Äç‚ôÇÔ∏è&lt;/li&gt; &#xA; &lt;li&gt;Support for showing &lt;strong&gt;images&lt;/strong&gt; in HTTP Responses üñº&lt;/li&gt; &#xA; &lt;li&gt;Support for custom decoding of HTTP bodies&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Multi-Window üö™&lt;/h3&gt; &#xA;&lt;p&gt;The main Chucker activity is launched in its own task, allowing it to be displayed alongside the host app UI using Android 7.x multi-window support.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/assets/chucker-multiwindow.gif&#34; alt=&#34;Multi-Window&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Configure üé®&lt;/h2&gt; &#xA;&lt;p&gt;You can customize chucker providing an instance of a &lt;code&gt;ChuckerCollector&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Create the Collector&#xA;val chuckerCollector = ChuckerCollector(&#xA;        context = this,&#xA;        // Toggles visibility of the notification&#xA;        showNotification = true,&#xA;        // Allows to customize the retention period of collected data&#xA;        retentionPeriod = RetentionManager.Period.ONE_HOUR&#xA;)&#xA;&#xA;// Create the Interceptor&#xA;val chuckerInterceptor = ChuckerInterceptor.Builder(context)&#xA;        // The previously created Collector&#xA;        .collector(chuckerCollector)&#xA;        // The max body content length in bytes, after this responses will be truncated.&#xA;        .maxContentLength(250_000L)&#xA;        // List of headers to replace with ** in the Chucker UI&#xA;        .redactHeaders(&#34;Auth-Token&#34;, &#34;Bearer&#34;)&#xA;        // Read the whole response body even when the client does not consume the response completely.&#xA;        // This is useful in case of parsing errors or when the response body&#xA;        // is closed before being read like in Retrofit with Void and Unit types.&#xA;        .alwaysReadResponseBody(true)&#xA;        // Use decoder when processing request and response bodies. When multiple decoders are installed they&#xA;        // are applied in an order they were added.&#xA;        .addBodyDecoder(decoder)&#xA;        // Controls Android shortcut creation. Available in SNAPSHOTS versions only at the moment&#xA;        .createShortcut(true)&#xA;        .build()&#xA;&#xA;// Don&#39;t forget to plug the ChuckerInterceptor inside the OkHttpClient&#xA;val client = OkHttpClient.Builder()&#xA;        .addInterceptor(chuckerInterceptor)&#xA;        .build()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Redact-Header üëÆ‚Äç‚ôÇÔ∏è&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; The data generated and stored when using Chucker may contain sensitive information such as Authorization or Cookie headers, and the contents of request and response bodies.&lt;/p&gt; &#xA;&lt;p&gt;It is intended for &lt;strong&gt;use during development&lt;/strong&gt;, and not in release builds or other production deployments.&lt;/p&gt; &#xA;&lt;p&gt;You can redact headers that contain sensitive information by calling &lt;code&gt;redactHeader(String)&lt;/code&gt; on the &lt;code&gt;ChuckerInterceptor&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;interceptor.redactHeader(&#34;Auth-Token&#34;, &#34;User-Session&#34;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Decode-Body üìñ&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; This feature is available in SNAPSHOT builds at the moment, not in 3.5.2&lt;/p&gt; &#xA;&lt;p&gt;Chucker by default handles only plain text, Gzip compressed or Brotli compressed. If you use a binary format like, for example, Protobuf or Thrift it won&#39;t be automatically handled by Chucker. You can, however, install a custom decoder that is capable to read data from different encodings.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;object ProtoDecoder : BinaryDecoder {&#xA;    fun decodeRequest(request: Request, body: ByteString): String? = if (request.isExpectedProtoRequest) {&#xA;        decodeProtoBody(body)&#xA;    } else {&#xA;        null&#xA;    }&#xA;&#xA;    fun decodeResponse(request: Response, body: ByteString): String? = if (request.isExpectedProtoResponse) {&#xA;        decodeProtoBody(body)&#xA;    } else {&#xA;        null&#xA;    }&#xA;}&#xA;interceptorBuilder.addBodyDecoder(ProtoDecoder).build()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Migrating üöó&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;re migrating &lt;strong&gt;from &lt;a href=&#34;https://github.com/jgilfelt/chuck&#34;&gt;Chuck&lt;/a&gt; to Chucker&lt;/strong&gt;, please refer to this &lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/docs/migrating-from-chuck.md&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re migrating &lt;strong&gt;from Chucker v2.0 to v3.0&lt;/strong&gt;, please expect multiple breaking changes. You can find documentation on how to update your code on this other &lt;a href=&#34;https://raw.githubusercontent.com/ChuckerTeam/chucker/develop/docs/migrating-from-2.0.md&#34;&gt;migration guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Snapshots üì¶&lt;/h2&gt; &#xA;&lt;p&gt;Development of Chucker happens in the &lt;a href=&#34;https://github.com/ChuckerTeam/chucker/tree/develop&#34;&gt;&lt;code&gt;develop&lt;/code&gt;&lt;/a&gt; branch. Every push to &lt;code&gt;develop&lt;/code&gt; will trigger a publishing of a &lt;code&gt;SNAPSHOT&lt;/code&gt; artifact for the upcoming version. You can get those snapshots artifacts directly from Sonatype with:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;repositories {&#xA;    maven { url &#34;https://oss.sonatype.org/content/repositories/snapshots/&#34; }&#xA;}&#xA;dependencies {&#xA;  debugImplementation &#34;com.github.chuckerteam.chucker:library:4.0.0-SNAPSHOT&#34;&#xA;  releaseImplementation &#34;com.github.chuckerteam.chucker:library-no-op:4.0.0-SNAPSHOT&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Moreover, you can still use &lt;a href=&#34;https://jitpack.io/#ChuckerTeam/chucker&#34;&gt;JitPack&lt;/a&gt; as it builds every branch. So the top of &lt;code&gt;develop&lt;/code&gt; is available here:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;repositories {&#xA;    maven { url &#34;https://jitpack.io&#34; }&#xA;}&#xA;dependencies {&#xA;  debugImplementation &#34;com.github.chuckerteam.chucker:library:develop-SNAPSHOT&#34;&#xA;  releaseImplementation &#34;com.github.chuckerteam.chucker:library-no-op:develop-SNAPSHOT&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;‚ö†Ô∏è Please note that the latest snapshot might be &lt;strong&gt;unstable&lt;/strong&gt;. Use it at your own risk ‚ö†Ô∏è&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re looking for the &lt;strong&gt;latest stable version&lt;/strong&gt;, you can always find it in &lt;code&gt;Releases&lt;/code&gt; section.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ ‚ùì&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Why are some of my request headers (e.g. &lt;code&gt;Content-Encoding&lt;/code&gt; or &lt;code&gt;Accept-Encoding&lt;/code&gt;) missing?&lt;/li&gt; &#xA; &lt;li&gt;Why are retries and redirects not being captured discretely?&lt;/li&gt; &#xA; &lt;li&gt;Why are my encoded request/response bodies not appearing as plain text?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please refer to &lt;a href=&#34;https://square.github.io/okhttp/interceptors/&#34;&gt;this section of the OkHttp documentation&lt;/a&gt;. You can choose to use Chucker as either an application or network interceptor, depending on your requirements.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Why Android &amp;lt; 21 is no longer supported?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;In order to keep up with the changes in OkHttp we decided to bump its version in &lt;code&gt;4.x&lt;/code&gt; release. Chucker &lt;code&gt;3.5.x&lt;/code&gt; supports Android 16+ but its active development stopped and only bug fixes and minor improvements will land on &lt;a href=&#34;https://github.com/ChuckerTeam/chucker/tree/3.x&#34;&gt;3.x branch&lt;/a&gt; till March 2021.&lt;/p&gt; &#xA;&lt;h1&gt;Sponsors üí∏&lt;/h1&gt; &#xA;&lt;p&gt;Chucker is maintained and improved during nights, weekends and whenever team has free time. If you use Chucker in your project, please consider sponsoring us. This will help us buy a domain for a website we will have soon and also spend some money on charity. Additionally, sponsorthip will also help us understand better how valuable Chucker is for people&#39;s everyday work.&lt;/p&gt; &#xA;&lt;p&gt;You can sponsor us by clicking &lt;code&gt;Sponsor&lt;/code&gt; button.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing ü§ù&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re offering support for Chucker on the &lt;a href=&#34;https://kotlinlang.slack.com/archives/CRWD6370R&#34;&gt;#chucker&lt;/a&gt; channel on &lt;a href=&#34;https://kotlinlang.slack.com/&#34;&gt;kotlinlang.slack.com&lt;/a&gt;. Come and join the conversation over there.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;We&#39;re looking for contributors! Don&#39;t be shy.&lt;/strong&gt; üòÅ Feel free to open issues/pull requests to help us improve this project.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;When reporting a new Issue, make sure to attach &lt;strong&gt;Screenshots&lt;/strong&gt;, &lt;strong&gt;Videos&lt;/strong&gt; or &lt;strong&gt;GIFs&lt;/strong&gt; of the problem you are reporting.&lt;/li&gt; &#xA; &lt;li&gt;When submitting a new PR, make sure tests are all green. Write new tests if necessary.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Short &lt;code&gt;TODO&lt;/code&gt; List for new contributors:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Increment the test coverage.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ChuckerTeam/chucker/labels/help%20wanted&#34;&gt;Issues marked as &lt;code&gt;Help wanted&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Building üõ†&lt;/h3&gt; &#xA;&lt;p&gt;In order to start working on Chucker, you need to fork the project and open it in Android Studio/IntelliJ IDEA.&lt;/p&gt; &#xA;&lt;p&gt;Before committing we suggest you install the pre-commit hooks with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew installGitHook&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will make sure your code is validated against KtLint and Detekt before every commit. The command will run automatically before the &lt;code&gt;clean&lt;/code&gt; task, so you should have the pre-commit hook installed by then.&lt;/p&gt; &#xA;&lt;p&gt;Before submitting a PR please run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew build&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This will build the library and will run all the verification tasks (ktlint, detekt, lint, unit tests) locally. This will make sure your CI checks will pass.&lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgments üå∏&lt;/h2&gt; &#xA;&lt;h3&gt;Maintainers&lt;/h3&gt; &#xA;&lt;p&gt;Chucker is currently developed and maintained by the &lt;a href=&#34;https://github.com/ChuckerTeam&#34;&gt;ChuckerTeam&lt;/a&gt;. When submitting a new PR, please ping one of:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cortinico&#34;&gt;@cortinico&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/olivierperez&#34;&gt;@olivierperez&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vbuberen&#34;&gt;@vbuberen&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Thanks&lt;/h3&gt; &#xA;&lt;p&gt;Big thanks to our contributors ‚ù§Ô∏è&lt;/p&gt; &#xA;&lt;h3&gt;Libraries&lt;/h3&gt; &#xA;&lt;p&gt;Chucker uses the following open source libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/okhttp&#34;&gt;OkHttp&lt;/a&gt; - Copyright Square, Inc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/gson&#34;&gt;Gson&lt;/a&gt; - Copyright Google Inc.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/room&#34;&gt;Room&lt;/a&gt; - Copyright Google Inc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License üìÑ&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;    Copyright (C) 2018-2021 Chucker Team.&#xA;    Copyright (C) 2017 Jeff Gilfelt.&#xA;&#xA;    Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;    you may not use this file except in compliance with the License.&#xA;    You may obtain a copy of the License at&#xA;&#xA;       http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;    Unless required by applicable law or agreed to in writing, software&#xA;    distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;    See the License for the specific language governing permissions and&#xA;    limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>