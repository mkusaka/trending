<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-14T01:30:51Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iamr0s/InstallerX</title>
    <updated>2023-08-14T01:30:51Z</updated>
    <id>tag:github.com,2023-08-14:/iamr0s/InstallerX</id>
    <link href="https://github.com/iamr0s/InstallerX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A modern and functional Android app installer. (You know some birds are not meant to be caged, their feathers are just too bright.)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;InstallerX&lt;/h1&gt; &#xA;&lt;h2&gt;介绍&lt;/h2&gt; &#xA;&lt;p&gt;一款应用安装程序，为什么不试试【InstallerX】？&lt;/p&gt; &#xA;&lt;p&gt;在国产系统的魔改下，许多系统的自带安装程序体验并不是很好，你可以使用【InstallerX】替换掉系统默认安装程序。&lt;/p&gt; &#xA;&lt;p&gt;当然，相对于原生系统，【InstallerX】也带来了更多的安装选项：对话框安装、通知栏安装、自动安装、声明安装者、选择是否安装到所有用户空间、允许测试包、允许降级安装、安装后自动删除安装包。&lt;/p&gt; &#xA;&lt;h2&gt;支持版本&lt;/h2&gt; &#xA;&lt;p&gt;Android 5.0 ~ 13&lt;/p&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.coolapk.com/apk/933870&#34;&gt;酷安&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://pd.qq.com/s/nx7jpup8&#34;&gt;QQ频道&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://qm.qq.com/cgi-bin/qm/qr?k=YMyAigxnns_FkISlRaormMiApHr2RmU7&amp;amp;jump_from=webapi&amp;amp;qr=1&#34;&gt;QQ群组（官方）&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;捐赠支持&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://qr.alipay.com/fkx18580lfpydiop04dze47&#34;&gt;支付宝&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://missuo.ru/file/fee5df1381671c996b127.png&#34;&gt;微信&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://missuo.ru/file/28368c28d4ff28d59ed4b.jpg&#34;&gt;币安&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;开源协议&lt;/h2&gt; &#xA;&lt;p&gt;InstallerX目前基于 &lt;a href=&#34;http://www.gnu.org/copyleft/gpl.html&#34;&gt;&lt;strong&gt;GNU General Public License v3 (GPL-3)&lt;/strong&gt;&lt;/a&gt; 开源，但不保证未来依然继续遵循此协议或开源，有权更改开源协议或开源状态。&lt;/p&gt; &#xA;&lt;p&gt;当您选择基于InstallerX进行开发时，需遵循所当前依赖的上游源码所规定的开源协议，不受新上游源码的开源协议影响。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>PortSwigger/turbo-intruder</title>
    <updated>2023-08-14T01:30:51Z</updated>
    <id>tag:github.com,2023-08-14:/PortSwigger/turbo-intruder</id>
    <link href="https://github.com/PortSwigger/turbo-intruder" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Turbo Intruder is a Burp Suite extension for sending large numbers of HTTP requests and analyzing the results.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Turbo Intruder&lt;/h1&gt; &#xA;&lt;p&gt;Turbo Intruder is a Burp Suite extension for sending large numbers of HTTP requests and analyzing the results. It&#39;s intended to complement Burp Intruder by handling attacks that require exceptional speed, duration, or complexity. The following features set it apart:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt; - Turbo Intruder uses a HTTP stack hand-coded from scratch with speed in mind. As a result, on many targets it can seriously outpace even fashionable asynchronous Go scripts.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt; - Turbo Intruder can achieve flat memory usage, enabling reliable multi-day attacks. It can also be run in headless environments via the command line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt; - Attacks are configured using Python. This enables handling of complex requirements such as signed requests and multi-step attack sequences. Also, the custom HTTP stack means it can handle malformed requests that break other libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Convenient&lt;/strong&gt; - Boring results can be automatically filtered out by an advanced diffing algorithm adapted from Backslash Powered Scanner. This means you can launch an attack and obtain useful results in two clicks.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;On the other hand it&#39;s undeniably harder to use, and the network stack isn&#39;t as reliable and battle-tested as core Burp&#39;s. As this is a tool for advanced users only I am not going to provide personal support to anyone having trouble using it. Also I should mention it&#39;s designed for sending lots of requests to a single host. If you want to send a single request to a lot of hosts, I recommend ZGrab.&lt;/p&gt; &#xA;&lt;h4&gt;Documentation&lt;/h4&gt; &#xA;&lt;p&gt;To get started with Turbo Intruder, please refer to the video and documentation at &lt;a href=&#34;https://portswigger.net/blog/turbo-intruder-embracing-the-billion-request-attack&#34;&gt;https://portswigger.net/blog/turbo-intruder-embracing-the-billion-request-attack&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;Development&lt;/h4&gt; &#xA;&lt;p&gt;Build using:&lt;/p&gt; &#xA;&lt;p&gt;Linux: &lt;code&gt;./gradlew build fatjar&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Windows: &lt;code&gt;gradlew.bat build fatjar&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Grab the output from &lt;code&gt;build/libs/turbo-intruder-all.jar&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Single-packet attack reference implementation&lt;/h3&gt; &#xA;&lt;p&gt;If you&#39;re interested in creating your own implementation of the &lt;a href=&#34;https://portswigger.net/research/smashing-the-state-machine#single-packet-attack&#34;&gt;single-packet attack&lt;/a&gt;, you can view Turbo Intruder&#39;s reference implementation in &lt;a href=&#34;https://github.com/PortSwigger/turbo-intruder/raw/89f76a82974f07b1529432bf880157aed5c98045/src/SpikeEngine.kt&#34;&gt;src/SpikeEngine.kt&lt;/a&gt; and &lt;a href=&#34;https://github.com/PortSwigger/turbo-intruder/raw/89f76a82974f07b1529432bf880157aed5c98045/src/SpikeConnection.kt&#34;&gt;src/SpikeConnection.kt&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This reference implementation was built on Burp Suite&#39;s native HTTP/2 stack. It should be possible to make a similar implementation using any HTTP/2 library that provides a frame-level interface. I&#39;ve seen Golang&#39;s HTTP/2 stack used for some frame-level attacks so that might be a good choice.&lt;/p&gt;</summary>
  </entry>
</feed>