<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-15T01:31:54Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>whyoleg/cryptography-kotlin</title>
    <updated>2024-10-15T01:31:54Z</updated>
    <id>tag:github.com,2024-10-15:/whyoleg/cryptography-kotlin</id>
    <link href="https://github.com/whyoleg/cryptography-kotlin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin Multiplatform cryptography / crypto library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cryptography-kotlin&lt;/h1&gt; &#xA;&lt;p&gt;Type-safe Multiplatform cryptography library for Kotlin&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;CryptographyProvider.Default&#xA;    .get(SHA512)&#xA;    .hasher()&#xA;    .hash(&#34;Kotlin is Awesome&#34;.encodeToByteArray())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Detailed documentation can be found on &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/&#34;&gt;project website&lt;/a&gt; as well as in &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/&#34;&gt;API reference&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;cryptography-kotlin provides multiplatform API which consists of multiple components:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/modules/cryptography-random&#34;&gt;Secure random&lt;/a&gt; with &lt;a href=&#34;https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.random/-random/&#34;&gt;kotlin.Random&lt;/a&gt; like API which can be used independently of other modules&lt;/li&gt; &#xA; &lt;li&gt;common API to use different cryptography operations, like &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.operations/-cipher/index.html&#34;&gt;ciphers&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.operations/-hasher/index.html&#34;&gt;digests&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.operations/-signature-generator/index.html&#34;&gt;signatures&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.operations/-secret-derivation/index.html&#34;&gt;key derivation&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.operations/-shared-secret-derivation/index.html&#34;&gt;Key agreement&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;multiple algorithms definitions, like &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.algorithms/-a-e-s/index.html&#34;&gt;AES&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.algorithms/-r-s-a/index.html&#34;&gt;RSA&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.algorithms/-e-c-d-s-a/index.html&#34;&gt;ECDSA&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.algorithms/-e-c-d-h/index.html&#34;&gt;ECDH&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.algorithms/-s-h-a256/index.html&#34;&gt;SHA&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.algorithms/-h-m-a-c/index.html&#34;&gt;HMAC&lt;/a&gt; and &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/api/cryptography-core/dev.whyoleg.cryptography.algorithms/-p-b-k-d-f2/index.html&#34;&gt;PBKDF2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;multiple cryptography &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/providers/&#34;&gt;providers&lt;/a&gt;, like &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/modules/cryptography-provider-openssl3/&#34;&gt;OpenSSL&lt;/a&gt;, &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/modules/cryptography-provider-webcrypto/&#34;&gt;WebCrypto&lt;/a&gt; and &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/modules/cryptography-provider-jdk/&#34;&gt;JDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The library doesn&#39;t implement any cryptography algorithm on its own, but wraps well-known future-proof solutions like &lt;a href=&#34;https://www.openssl.org&#34;&gt;OpenSSL 3.x&lt;/a&gt;, &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Web_Crypto_API&#34;&gt;WebCrypto&lt;/a&gt; or &lt;a href=&#34;https://docs.oracle.com/en/java/javase/17/security/java-cryptography-architecture-jca-reference-guide.html&#34;&gt;JCA&lt;/a&gt; with type-safe multiplatform API providing uniform experience with aligned default behavior, and same expected results using identical parameters while allowing to use platform-specific capabilities. For supported algorithms, primitives and targets, please consult &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/providers/&#34;&gt;Providers documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using in your projects&lt;/h2&gt; &#xA;&lt;p&gt;Make sure that you use Kotlin 2.0.20+. Using an earlier Kotlin version could still work, but not tested.&lt;br&gt; Additionally, it&#39;s possible to use &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/bom/&#34;&gt;BOM&lt;/a&gt; or &lt;a href=&#34;https://whyoleg.github.io/cryptography-kotlin/gradle-version-catalog/&#34;&gt;Gradle version catalog&lt;/a&gt; to add dependencies easier. The library is published to Maven Central, so make sure, that itâ€™s added to repositories.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;kotlin {&#xA;    sourceSets {&#xA;        commonMain.dependencies {&#xA;            implementation(&#34;dev.whyoleg.cryptography:cryptography-core:0.4.0&#34;)&#xA;        }&#xA;        // or androidMain&#xA;        jvmMain.dependencies {&#xA;            implementation(&#34;dev.whyoleg.cryptography:cryptography-provider-jdk:0.4.0&#34;)&#xA;        }&#xA;        appleMain.dependencies {&#xA;            implementation(&#34;dev.whyoleg.cryptography:cryptography-provider-apple:0.4.0&#34;)&#xA;            // or openssl3 provider with better algorithms coverage and other native targets support  &#xA;            // implementation(&#34;dev.whyoleg.cryptography:cryptography-provider-openssl3-prebuilt:0.4.0&#34;)&#xA;        }&#xA;        wasmJsMain.dependencies {&#xA;            implementation(&#34;dev.whyoleg.cryptography:cryptography-provider-webcrypto:0.4.0&#34;)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Snapshots of the development version are available in Sonatype&#39;s snapshot repository.&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;repositories {&#xA;    maven(&#34;https://s01.oss.sonatype.org/content/repositories/snapshots/&#34;)&#xA;}&#xA;dependencies {&#xA;    implementation(&#34;dev.whyoleg.cryptography:cryptography-core:0.4.1-SNAPSHOT&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Bugs and Feedback&lt;/h2&gt; &#xA;&lt;p&gt;For bugs, questions and discussions, please use the &lt;a href=&#34;https://github.com/whyoleg/cryptography-kotlin/issues&#34;&gt;GitHub Issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2023 Oleg Yukhnevich.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>