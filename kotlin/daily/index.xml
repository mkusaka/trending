<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-10T01:33:36Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ephemient/aoc2022</title>
    <updated>2022-12-10T01:33:36Z</updated>
    <id>tag:github.com,2022-12-10:/ephemient/aoc2022</id>
    <link href="https://github.com/ephemient/aoc2022" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Advent of Code 2022 - my answers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://adventofcode.com/2022&#34;&gt;Advent of Code 2022&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;h3&gt;my answers&lt;/h3&gt; &#xA;&lt;p&gt;Development occurs in language-specific directories:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs&#34;&gt;Haskell&lt;/a&gt; &lt;img src=&#34;https://github.com/ephemient/aoc2022/workflows/Haskell%20CI/badge.svg?sanitize=true&#34; alt=&#34;Haskell CI&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt&#34;&gt;Kotlin&lt;/a&gt; &lt;img src=&#34;https://github.com/ephemient/aoc2022/workflows/Kotlin%20CI/badge.svg?sanitize=true&#34; alt=&#34;Kotlin CI&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py&#34;&gt;Python&lt;/a&gt; &lt;img src=&#34;https://github.com/ephemient/aoc2022/workflows/Python%20CI/badge.svg?sanitize=true&#34; alt=&#34;Python CI&#34;&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs&#34;&gt;Rust&lt;/a&gt; &lt;img src=&#34;https://github.com/ephemient/aoc2022/workflows/Rust%20CI/badge.svg?sanitize=true&#34; alt=&#34;Rust CI&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day1.hs&#34;&gt;Day1.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day1.kt&#34;&gt;Day1.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day1.py&#34;&gt;day1.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day1.rs&#34;&gt;day1.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day2.hs&#34;&gt;Day2.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day2.kt&#34;&gt;Day2.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day2.py&#34;&gt;day2.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day2.rs&#34;&gt;day2.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day3.hs&#34;&gt;Day3.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day3.kt&#34;&gt;Day3.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day3.py&#34;&gt;day3.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day3.rs&#34;&gt;day3.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day4.hs&#34;&gt;Day4.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day4.kt&#34;&gt;Day4.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day4.py&#34;&gt;day4.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day4.rs&#34;&gt;day4.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day5.hs&#34;&gt;Day5.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day5.kt&#34;&gt;Day5.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day5.py&#34;&gt;day5.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day5.rs&#34;&gt;day5.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day6.hs&#34;&gt;Day6.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day6.kt&#34;&gt;Day6.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day6.py&#34;&gt;day6.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day6.rs&#34;&gt;day6.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day7.hs&#34;&gt;Day7.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day7.kt&#34;&gt;Day7.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day7.py&#34;&gt;day7.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day7.rs&#34;&gt;day7.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day8.hs&#34;&gt;Day8.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day8.kt&#34;&gt;Day8.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day8.py&#34;&gt;day8.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day8.rs&#34;&gt;day8.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/hs/src/Day9.hs&#34;&gt;Day9.hs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/kt/src/commonMain/kotlin/com/github/ephemient/aoc2022/Day9.kt&#34;&gt;Day9.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/py/aoc2022/day9.py&#34;&gt;day9.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;right&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ephemient/aoc2022/main/rs/src/day9.rs&#34;&gt;day9.rs&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/jewel</title>
    <updated>2022-12-10T01:33:36Z</updated>
    <id>tag:github.com,2022-12-10:/JetBrains/jewel</id>
    <link href="https://github.com/JetBrains/jewel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An implementation of the IntelliJ look and feels in Compose for Desktop&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/JetBrains/jewel/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/JetBrains/jewel/actions/workflows/build.yml/badge.svg?branch=main&#34; alt=&#34;CI checks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Jewel: a Compose for Desktop theme&lt;/h1&gt; &#xA;&lt;img alt=&#34;Jewel logo&#34; src=&#34;https://raw.githubusercontent.com/JetBrains/jewel/main/art/jewel-logo.svg?sanitize=true&#34; width=&#34;20%&#34;&gt; &#xA;&lt;p&gt;Jewel aims at recreating the &lt;em&gt;Darcula&lt;/em&gt; and &lt;em&gt;New UI&lt;/em&gt; Swing Look and Feels used on the IntelliJ Platform into Compose for Desktop.&lt;/p&gt; &#xA;&lt;h2&gt;Project structure&lt;/h2&gt; &#xA;&lt;p&gt;The project is split in modules:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;core&lt;/code&gt; is the base Jewel library code (composables, interface definitions, etc.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;compose-utils&lt;/code&gt; is a collection of utilities for dealing with Compose, and Swing interop&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;themes&lt;/code&gt; are the two themes implemented by Jewel: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;darcula&lt;/code&gt; is the old school Intellij LaF, called Darcula, which has two implementations: &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;&lt;code&gt;darcula-standalone&lt;/code&gt; is the base theme and can be used in any Compose for Desktop project&lt;/li&gt; &#xA;     &lt;li&gt;&lt;code&gt;darcula-ide&lt;/code&gt; is a version of the theme that can be used in an IDEA plugin, and integrates with the IDE&#39;s Swing LaF and themes via a bridge (more on that later)&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;new-ui&lt;/code&gt; implements the new IntelliJ LaF, known as &#34;new UI&#34;. This also has the same two implementations&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;samples&lt;/code&gt; contains the example apps, which showcase the available components: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;standalone&lt;/code&gt; is a regular CfD app, using the predefined &#34;base&#34; theme definitions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;ide-plugin&lt;/code&gt; is an IntelliJ plugin, adding some UI to the IDE, and showcasing the use of the bridge (see later)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Running the samples&lt;/h3&gt; &#xA;&lt;p&gt;To run the stand-alone sample app, you can run the &lt;code&gt;:samples:standalone:run&lt;/code&gt; Gradle task.&lt;/p&gt; &#xA;&lt;p&gt;To run the IntelliJ IDEA plugin sample, you can run the &lt;code&gt;:samples:ide-plugin:runIde&lt;/code&gt; Gradle task. This will download and run a copy of IJ Community with the plugin installed; you can check the additional panels in the IDE once it starts up (at the bottom, by default, in old UI; in the overflow in the new UI).&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re using IntelliJ IDEA, you can use the &#34;Stand-alone sample&#34; and &#34;IDE sample&#34; run configurations.&lt;/p&gt; &#xA;&lt;h3&gt;The Swing Bridge&lt;/h3&gt; &#xA;&lt;p&gt;In the &lt;code&gt;*-ide&lt;/code&gt; modules, there is a crucial element for proper integration with the IDE: a bridge between the Swing theme and LaF, and the Compose world. This bridge ensures that we pick up the colours, typography, metrics, and images as defined in the current IntelliJ theme, and apply them to the Compose theme as well.&lt;/p&gt; &#xA;&lt;p&gt;The work of building this bridge is fairly complex as there isn&#39;t a good mapping between the IDE LaF properties, the Darcula design specs, and the Compose implementations. Sometimes, you will need to get a bit creative.&lt;/p&gt; &#xA;&lt;p&gt;When adding a new composable to the IJ theme, you need to make sure you also update the bridge to properly support it at runtime. You can refer to the &lt;a href=&#34;https://jetbrains.design/intellij&#34;&gt;Darcula design specs&lt;/a&gt; and corresponding &lt;a href=&#34;https://jetbrains.design/intellij/resources/UI_kit/&#34;&gt;Figma specs&lt;/a&gt;, but the ultimate goal is consistency with the Swing implementation, so the ground truth of what you see in the IDE is the reference for any implementation and trumps the specs.&lt;/p&gt; &#xA;&lt;p&gt;To find the required values in the IDE, we recommend enabling the &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/enabling-internal.html&#34;&gt;IDE internal mode&lt;/a&gt; and using the &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/internal-ui-inspector.html&#34;&gt;UI Inspector&lt;/a&gt; and &lt;a href=&#34;https://plugins.jetbrains.com/docs/intellij/internal-ui-laf-defaults.html&#34;&gt;LaF Defaults&lt;/a&gt; tools to figure out the names of the parameters to use in the bridge.&lt;/p&gt;</summary>
  </entry>
</feed>