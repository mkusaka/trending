<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-04T01:44:59Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PatilShreyas/mutekt</title>
    <updated>2022-08-04T01:44:59Z</updated>
    <id>tag:github.com,2022-08-04:/PatilShreyas/mutekt</id>
    <link href="https://github.com/PatilShreyas/mutekt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Simplify mutating &#34;immutable&#34; state models&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Mutekt&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;(Pronunciation: &lt;b&gt;&lt;i&gt;/mjuÀêÀàte…™t/&lt;/i&gt;&lt;/b&gt;, &#39;k&#39; is silent)&lt;/p&gt; &#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;i&gt;&#34;Simplify mutating &#34;immutable&#34; state models&#34;&lt;/i&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/PatilShreyas/mutekt/actions/workflows/build.yml&#34;&gt;&lt;img src=&#34;https://github.com/PatilShreyas/mutekt/actions/workflows/build.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PatilShreyas/mutekt/actions/workflows/release.yml&#34;&gt;&lt;img src=&#34;https://github.com/PatilShreyas/mutekt/actions/workflows/release.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/search?q=g:dev.shreyaspatil.mutekt&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/dev.shreyaspatil.mutekt/mutekt-codegen?label=Maven%20Central&amp;amp;logo=android&amp;amp;style=flat-square&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PatilShreyas/mutekt/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/PatilShreyas/mutekt?label=License)&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Generates mutable models from immutable model definitions. It&#39;s based on Kotlin&#39;s Symbol Processor (KSP). This is inspired from the concept &lt;em&gt;Redux&lt;/em&gt; and &lt;em&gt;Immer&lt;/em&gt; from JS world that let you write simpler immutable update logic using &#34;mutating&#34; syntax which helps simplify most reducer implementations. &lt;strong&gt;So you just need to focus on actual development and &lt;em&gt;Mutekt&lt;/em&gt; will write boilerplate for you!&lt;/strong&gt; üòé&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Like this ‚¨áÔ∏èÔ∏è&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/PatilShreyas/mutekt/main/mutekt-usage.gif&#34; alt=&#34;Mutekt Usage Example&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Try out the &lt;a href=&#34;https://raw.githubusercontent.com/PatilShreyas/mutekt/main/example&#34;&gt;example app&lt;/a&gt; to see it in action.&lt;/p&gt; &#xA;&lt;h3&gt;1. Apply annotation and generate model&lt;/h3&gt; &#xA;&lt;p&gt;Declare a state model as an &lt;code&gt;interface&lt;/code&gt; and apply &lt;code&gt;@GenerateMutableModel&lt;/code&gt; annotation to it.&lt;/p&gt; &#xA;&lt;p&gt;Example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@GenerateMutableModel&#xA;interface NotesState {&#xA;    val isLoading: Boolean&#xA;    val notes: List&amp;lt;String&amp;gt;&#xA;    val error: String?&#xA;}&#xA;// You can also apply annotation `@Immutable` if using for Jetpack Compose UI model.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Once done, &lt;strong&gt;üî®Build project&lt;/strong&gt; and mutable model will be generated for the immutable definition by KSP.&lt;/p&gt; &#xA;&lt;h3&gt;2. Simply mutate and get immutable state&lt;/h3&gt; &#xA;&lt;p&gt;The mutable model can be created with the factory function which is generated with the name of an interface with prefix &lt;code&gt;Mutable&lt;/code&gt;. &lt;em&gt;For example, if interface name is &lt;code&gt;ExampleState&lt;/code&gt; then method name for creating mutable model will be &lt;code&gt;MutableExampleState()&lt;/code&gt; and will have parameters in it which are declared as public properties in the interface.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;/**&#xA; * Instance of mutable model [MutableNotesState] which is generated with Mutekt.&#xA; */&#xA;private val _state = MutableNotesState(isLoading = true, notes = emptyList(), error = null)&#xA;&#xA;fun setLoading() {&#xA;    _state.isLoading = true&#xA;}&#xA;&#xA;fun setNotes() {&#xA;    _state.apply {&#xA;        isLoading = false&#xA;        notes = listOf(&#34;Lorem Ipsum&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. Getting reactive immutable value updates&lt;/h3&gt; &#xA;&lt;p&gt;To get immutable instance with reactive state updates, use method &lt;code&gt;asStateFlow()&lt;/code&gt; which returns instance of &lt;a href=&#34;https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/-state-flow/&#34;&gt;&lt;code&gt;StateFlow&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;. Whenever any field of Mutable model is updated with new value, this StateFlow gets updated with new immutable state value.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val state: StateFlow&amp;lt;NotesState&amp;gt; = _state.asStateFlow()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Properties of immutable instance implemented by Mutekt:&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Immutable model implementation promises to be truly &lt;em&gt;&lt;strong&gt;Immutable&lt;/strong&gt;&lt;/em&gt; i.e. once instance is created, its properties will never change.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Implementation is actually a &lt;em&gt;&lt;strong&gt;data class&lt;/strong&gt;&lt;/em&gt; under the hood i.e. having &lt;code&gt;equals()&lt;/code&gt; and &lt;code&gt;hashCode()&lt;/code&gt; already overridden.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Setting up &lt;em&gt;Mutekt&lt;/em&gt; in the project&lt;/h2&gt; &#xA;&lt;h3&gt;1. Gradle setup&lt;/h3&gt; &#xA;&lt;h4&gt;1.1 Enable KSP in module&lt;/h4&gt; &#xA;&lt;p&gt;In order to support code generation at compile time, &lt;a href=&#34;https://kotlinlang.org/docs/ksp-quickstart.html#use-your-own-processor-in-a-project&#34;&gt;enable KSP support in the module&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;plugins {&#xA;    id &#39;com.google.devtools.ksp&#39; version &#39;1.7.10-1.0.6&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;1.2 Add dependencies&lt;/h4&gt; &#xA;&lt;p&gt;In &lt;code&gt;build.gradle&lt;/code&gt; of app module, include this dependency&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;    mavenCentral()&#xA;}&#xA;&#xA;dependencies {&#xA;    implementation(&#34;dev.shreyaspatil.mutekt:mutekt-core:$mutektVersion&#34;)&#xA;    ksp(&#34;dev.shreyaspatil.mutekt:mutekt-codegen:$mutektVersion&#34;)&#xA;    &#xA;    // Include kotlin coroutine to support usage of StateFlow &#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;You can find the latest version and changelogs in the &lt;a href=&#34;https://github.com/PatilShreyas/mutekt/releases&#34;&gt;releases&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;1.3 Include generated classes in sources&lt;/h4&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;br&gt; In order to make IDE aware of generated code, it&#39;s important to include KSP generated sources in the project source sets.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Include generated sources as follows:&lt;/p&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;&lt;b&gt;Gradle (Groovy)&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;kotlin {&#xA;    sourceSets {&#xA;        main.kotlin.srcDirs += &#39;build/generated/ksp/main/kotlin&#39;&#xA;        test.kotlin.srcDirs += &#39;build/generated/ksp/test/kotlin&#39;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Gradle (KTS)&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;kotlin {&#xA;    sourceSets.main {&#xA;        kotlin.srcDir(&#34;build/generated/ksp/main/kotlin&#34;)&#xA;    }&#xA;    sourceSets.test {&#xA;        kotlin.srcDir(&#34;build/generated/ksp/test/kotlin&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Android (Gradle - Groovy)&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;android {&#xA;    applicationVariants.all { variant -&amp;gt;&#xA;        kotlin.sourceSets {&#xA;            def name = variant.name&#xA;            getByName(name) {&#xA;                kotlin.srcDir(&#34;build/generated/ksp/$name/kotlin&#34;)&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;b&gt;Android (Gradle - KTS)&lt;/b&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;android {&#xA;    applicationVariants.all {&#xA;        kotlin.sourceSets {&#xA;            getByName(name) {&#xA;                kotlin.srcDir(&#34;build/generated/ksp/$name/kotlin&#34;)&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;See also&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PatilShreyas/mutekt/wiki/Why-Mutekt%3F&#34;&gt;Why Mutekt?&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/PatilShreyas/mutekt/wiki/Code-generation-with-Mutekt&#34;&gt;Generated code with Mutekt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üë®‚Äçüíª Development&lt;/h2&gt; &#xA;&lt;p&gt;Clone this repository and import in IntelliJ IDEA (&lt;em&gt;any edition&lt;/em&gt;) or Android Studio.&lt;/p&gt; &#xA;&lt;h3&gt;Module details&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;mutekt-core&lt;/code&gt;: Contain core annotation and interface for mutekt&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;mutekt-codegen&lt;/code&gt;: Includes sources for generating mutekt code with KSP&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;example&lt;/code&gt;: Example application which demonstrates usage of this library.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Verify build&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To verify whether project building or not: &lt;code&gt;./gradlew build&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To verify code formatting: &lt;code&gt;./gradlew spotlessCheck&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;To reformat code with Spotless: &lt;code&gt;./gradlew spotlessApply&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üôã‚Äç‚ôÇÔ∏è Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://raw.githubusercontent.com/PatilShreyas/mutekt/main/CONTRIBUTING.md&#34;&gt;contribution guidelines&lt;/a&gt; for more information regarding contribution.&lt;/p&gt; &#xA;&lt;h2&gt;üí¨ Discuss&lt;/h2&gt; &#xA;&lt;p&gt;Have any questions, doubts or want to present your opinions, views? You&#39;re always welcome. You can &lt;a href=&#34;https://github.com/PatilShreyas/mutekt/discussions&#34;&gt;start discussions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üìù License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Shreyas Patil&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>dzikirqu/dzikirqu-android</title>
    <updated>2022-08-04T01:44:59Z</updated>
    <id>tag:github.com,2022-08-04:/dzikirqu/dzikirqu-android</id>
    <link href="https://github.com/dzikirqu/dzikirqu-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Is an All in One app for Muslims with lots of features such as Prayer Times &amp; Adhan, Collections of Dhikr and Prayer sourced from Authentic Hadith, The Holy Qur&#39;an, Qibla, Notes and many more!&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://github.com/mayburger/dzikirqu-android/raw/master/app/src/main/res/drawable/ic_logo_144_circle.png?raw=true&#34; alt=&#34;Quran for Android logo&#34;&gt; &#xA; &lt;h1&gt;DzikirQu&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.wagyufari.dzikirqu&#34;&gt;&lt;img src=&#34;https://PlayBadges.pavi2410.me/badge/downloads?id=com.wagyufari.dzikirqu&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mayburger/dzikirqu-android/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/mayburger/dzikirqu-android?include_prereleases&amp;amp;sort=semver&#34; alt=&#34;Version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;Is an All in One app for Muslims with lots of features such as Prayer Times &amp;amp; Adhan, Collections of Dhikr and Prayer sourced from Authentic Hadith, The Holy Qur&#39;an, Qibla, Notes and many more!&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.wagyufari.dzikirqu&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;div align=&#34;left&#34;&gt; &#xA;  &lt;h2&gt;Credits&lt;/h2&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/quran/quran.com-images&#34;&gt;Quran.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://praytimes.org/&#34;&gt;Praytimes.org&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://sunnah.com/&#34;&gt;Sunnah.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://tanzil.net/&#34;&gt;Tanzil.net&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://quranwbw.com/&#34;&gt;Quranwbw.com&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Buku Do&#39;a dan Wirid oleh Ustadz Yazid bin Abdul Qadir Jawas &lt;em&gt;hafidzahullahuta&#39;ala&lt;/em&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &#xA; &lt;/div&gt;&#xA;&lt;/div&gt;</summary>
  </entry>
</feed>