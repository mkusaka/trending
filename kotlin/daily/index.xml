<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-05T01:38:57Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>aadityamp01/Androapps</title>
    <updated>2022-10-05T01:38:57Z</updated>
    <id>tag:github.com,2022-10-05:/aadityamp01/Androapps</id>
    <link href="https://github.com/aadityamp01/Androapps" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Important Android projects to learn fundamentals of android development&lt;/p&gt;&lt;hr&gt;&lt;a href=&#34;https://github.com/aadityamp01/Androapps&#34;&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img align=&#34;center&#34; alt=&#34;hacktoberfest22&#34; src=&#34;https://raw.githubusercontent.com/aadityamp01/Androapps/master/assets/hacktoberfest22.png&#34; height=&#34;400&#34; width=&#34;900&#34;&gt;&#xA; &lt;/div&gt; &lt;/a&gt; &#xA;&lt;h1&gt;Androapps&lt;/h1&gt; &#xA;&lt;h3&gt;Important Android projects to learn fundamentals of android development.&lt;/h3&gt; &#xA;&lt;h4&gt;This is a Beginner Friendly Repository made for Open Source Enthusiasts who can contribute to the App during HacktoberFest 2022.&lt;/h4&gt; &#xA;&lt;h4&gt;To contribute in this project you need to build your own android apps or you can update the existing applications.&lt;/h4&gt; &#xA;&lt;h3&gt;Languages Used in Projects&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Java&lt;/li&gt; &#xA; &lt;li&gt;Kotlin&lt;/li&gt; &#xA; &lt;li&gt;Flutter&lt;/li&gt; &#xA; &lt;li&gt;C++&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Requirements&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Android Version 5.0 and above&lt;/li&gt; &#xA; &lt;li&gt;CompileSdkVersion 29/30&lt;/li&gt; &#xA; &lt;li&gt;MinSdkVersion 21&lt;/li&gt; &#xA; &lt;li&gt;Androidx&lt;/li&gt; &#xA; &lt;li&gt;Gradle Build (According to the project)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Official References to learn Android development&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/docs&#34;&gt;https://developer.android.com/docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/courses/pathways/kotlin-for-java&#34;&gt;https://developer.android.com/courses/pathways/kotlin-for-java&lt;/a&gt; [Java to Kotlin Pathway]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/kotlin/campaign/learn&#34;&gt;https://developer.android.com/kotlin/campaign/learn&lt;/a&gt; [Learn Kotlin]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/docs&#34;&gt;https://flutter.dev/docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Z6KZ3cTGBWw&#34;&gt;https://www.youtube.com/watch?v=Z6KZ3cTGBWw&lt;/a&gt; [Building your first Flutter app]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines/raw/master/ui/coroutines-guide-ui.md?s=09&#34;&gt;https://github.com/Kotlin/kotlinx.coroutines/blob/master/ui/coroutines-guide-ui.md?s=09&lt;/a&gt; [Kotlin Coroutines]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://codelabs.developers.google.com/codelabs/from-java-to-dart#0&#34;&gt;https://codelabs.developers.google.com/codelabs/from-java-to-dart#0&lt;/a&gt; ( Learn Dart - Codelab )&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/ndk/guides&#34;&gt;https://developer.android.com/ndk/guides&lt;/a&gt; [Native Development Kit Guide]&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/training/articles/perf-jni&#34;&gt;https://developer.android.com/training/articles/perf-jni&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;https://developer.android.com/jetpack/compose&lt;/a&gt; ( Official reference to jetpack compose)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose/tutorial&#34;&gt;https://developer.android.com/jetpack/compose/tutorial&lt;/a&gt; (Learn jetpack compose)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/courses/android-basics-compose/course&#34;&gt;https://developer.android.com/courses/android-basics-compose/course&lt;/a&gt; (Jetpack compose codelabs)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Android Dev Learnings/ Best Resources&lt;/h3&gt; &#xA;&lt;ol start=&#34;0&#34;&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MindorksOpenSource/android-developer-roadmap&#34;&gt;https://github.com/MindorksOpenSource/android-developer-roadmap&lt;/a&gt; ( Android ROADMAP - MindorksOpenSource )&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtu.be/VaMWsm6CFss&#34;&gt;https://youtu.be/VaMWsm6CFss&lt;/a&gt; ( Android ROADMAP - Love Bubber Bhaiya)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLUcsbZa0qzu3Mri2tL1FzZy-5SX75UJfb&#34;&gt;https://www.youtube.com/playlist?list=PLUcsbZa0qzu3Mri2tL1FzZy-5SX75UJfb&lt;/a&gt; (Basics of Android - Anuj Bhaiya)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLonJJ3BVjZW6hYgvtkaWvwAVvOFB7fkLa&#34;&gt;https://www.youtube.com/playlist?list=PLonJJ3BVjZW6hYgvtkaWvwAVvOFB7fkLa&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/androiddevelopers/the-android-lifecycle-cheat-sheet-part-i-single-activities-e49fd3d202ab&#34;&gt;https://medium.com/androiddevelopers/the-android-lifecycle-cheat-sheet-part-i-single-activities-e49fd3d202ab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/MindorksOpenSource/android-mvvm-architecture&#34;&gt;https://github.com/MindorksOpenSource/android-mvvm-architecture&lt;/a&gt; ( Android MVVM Architechture - MindorksOpenSource )&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=pTJJsmejUOQ&#34;&gt;https://www.youtube.com/watch?v=pTJJsmejUOQ&lt;/a&gt; ( Learn Flutter - Full Tutorial for Beginners )&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aadityapaithane.medium.com/why-should-i-choose-android-development-as-a-beginner-267988e565ed&#34;&gt;https://aadityapaithane.medium.com/why-should-i-choose-android-development-as-a-beginner-267988e565ed&lt;/a&gt; (General questions about android development)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://aadityapaithane.medium.com/how-to-create-a-new-android-project-559553006356&#34;&gt;https://aadityapaithane.medium.com/how-to-create-a-new-android-project-559553006356&lt;/a&gt; (Learn How to create android project)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Flutter Dev Learnings/ Best Resources&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://flutter.dev/&#34;&gt;https://flutter.dev/&lt;/a&gt; (Flutter Official)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.flutter.dev/get-started/flutter-for/android-devs&#34;&gt;https://docs.flutter.dev/get-started/flutter-for/android-devs&lt;/a&gt; (Flutter for Android Developers)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/learn-flutter-full-course/&#34;&gt;https://www.freecodecamp.org/news/learn-flutter-full-course/&lt;/a&gt; (Learn flutter)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;h4&gt;1. Register for the hacktoberfest2022&lt;/h4&gt; &#xA;&lt;p&gt;link - &lt;a href=&#34;https://hacktoberfest.digitalocean.com/&#34;&gt;https://hacktoberfest.digitalocean.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;2. Go through the &lt;a href=&#34;https://github.com/aadityamp01/Androapps/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href=&#34;https://github.com/aadityamp01/Androapps/raw/master/CODE_OF_CONDUCT.md&#34;&gt;CODE_OF_CONDUCT&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;h3&gt;Setting up the project&lt;/h3&gt; &#xA;&lt;p&gt;To setup the project locally please follow the instructions:&lt;/p&gt; &#xA;&lt;h4&gt;1. Star and Fork this Repository&lt;/h4&gt; &#xA;&lt;h6&gt;You can star ‚≠ê and fork üçΩÔ∏è this repository on GitHub by navigating at the top of this repository.&lt;/h6&gt; &#xA;&lt;h4&gt;2. Clone the Repository&lt;/h4&gt; &#xA;&lt;h6&gt;To make your own local copy of the repository to add run projects locally, let‚Äôs first open up a terminal window or you can download &lt;a href=&#34;https://desktop.github.com/&#34;&gt;GitHub Desktop&lt;/a&gt;&lt;/h6&gt; &#xA;&lt;h6&gt;If you&#39;re using terminal use the git clone command along with the URL that points to your* fork of the repository:&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone https://github.com/your_username/Androapps.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3. Create New Branch&lt;/h4&gt; &#xA;&lt;h6&gt;Once the project is cloned/opened create a new branch and checkout in it where you can make the changes in the code.&lt;/h6&gt; &#xA;&lt;h6&gt;You can do this either from terminal or from the github desktop.&lt;/h6&gt; &#xA;&lt;h6&gt;To do from Terminal:&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;git branch new-branch&#xA;git checkout new-branch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;4. Select the project from the cloned repo to the android studio, add your contributions&lt;/h4&gt; &#xA;&lt;h4&gt;5. Commit and Push&lt;/h4&gt; &#xA;&lt;h6&gt;After making the required changes commit and push your code&lt;/h6&gt; &#xA;&lt;h6&gt;Terminal:&lt;/h6&gt; &#xA;&lt;h6&gt;To add the changes after you have made the modifications&lt;/h6&gt; &#xA;&lt;p&gt;&lt;code&gt;git add .&lt;/code&gt; or &lt;code&gt;git add -A&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h6&gt;To commit and push the changes&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;git commit -m &amp;lt;Your-commit-message&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;6. Update Local Repository&lt;/h4&gt; &#xA;&lt;h4&gt;7. Configure a Remote for the Fork&lt;/h4&gt; &#xA;&lt;h6&gt;You‚Äôll have to specify a new remote upstream repository for us to sync with the fork. This will be the original repository that you forked from. you‚Äôll have to do this with the git remote add command.&lt;/h6&gt; &#xA;&lt;pre&gt;&lt;code&gt;git remote add upstream https://github.com/aadityamp01/Androapps.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;8. Sync the Fork&lt;/h4&gt; &#xA;&lt;h4&gt;9. Create Pull Request&lt;/h4&gt; &#xA;&lt;h6&gt;At this point, you are ready to make a pull request to the original repository.&lt;/h6&gt; &#xA;&lt;h6&gt;Navigate to your forked repository, and press the ‚ÄúNew pull request‚Äù button on your left-hand side of the page.&lt;/h6&gt; &#xA;&lt;h4&gt;10. You&#39;re done, wait for the review from maintainers.&lt;/h4&gt; &#xA;&lt;h3&gt;Project Maintainer :&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/aadityamp01&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/51539518?v=4&#34; width=&#34;100px&#34; height=&#34;100px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Contact and Support&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;&lt;em&gt;If you face any issue related to any project or want to suggest any application, Please feel free to contact me: @ [&lt;a href=&#34;mailto:ampicopn@gmail.com&#34;&gt;ampicopn@gmail.com&lt;/a&gt;]&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Liked this repo, give it a star ‚≠ê and fork üçΩÔ∏è this repository to help others!!&lt;/h4&gt; &#xA;&lt;h5&gt;Made with ‚ù§Ô∏è By Aaditya Paithane&lt;/h5&gt;</summary>
  </entry>
  <entry>
    <title>DanielMartinus/Konfetti</title>
    <updated>2022-10-05T01:38:57Z</updated>
    <id>tag:github.com,2022-10-05:/DanielMartinus/Konfetti</id>
    <link href="https://github.com/DanielMartinus/Konfetti" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Celebrate more with this lightweight confetti particle system üéä&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;h1&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/1636897/147644327-112cc446-75ea-4477-80ac-1d0cd60fc45e.png&#34; alt=&#34;Logo&#34;&gt; &lt;/p&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Easily celebrate little and big moments in your app with this lightweight confetti library! &lt;br&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/ISC&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-ISC-yellow.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=16s&#34;&gt;&lt;img alt=&#34;API level 16&#34; src=&#34;https://img.shields.io/badge/API-16%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://twitter.com/dionsegijn&#34;&gt;&lt;img alt=&#34;API level 16&#34; src=&#34;https://img.shields.io/badge/Twitter-@dionsegijn-blue.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/DanielMartinus/Konfetti/actions&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/DanielMartinus/Konfetti/workflows/CI/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#usage&#34;&gt;How To Use&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#community&#34;&gt;Community&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#contribute&#34;&gt;Contribute&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#report-an-issue&#34;&gt;Report issue&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#license&#34;&gt;License&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;New version: 2.0.0 is now released! Jetpack compose support - improved animations and API - &lt;a href=&#34;https://dionsegijn.dev/konfetti-migration-guide-v2.x.x&#34;&gt;see migration guide here&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;Compose project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencies {&#xA;    implementation &#39;nl.dionsegijn:konfetti-compose:2.0.2&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View based (XML) project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencies {&#xA;    implementation &#39;nl.dionsegijn:konfetti-xml:2.0.2&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Find latest version and release notes &lt;a href=&#34;https://github.com/DanielMartinus/Konfetti/releases&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;Samples:&lt;/strong&gt;&lt;br&gt; &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/samples/compose-kotlin/src/main&#34;&gt;compose&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/samples/xml-kotlin/src/main&#34;&gt;xml-kotlin&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/samples/xml-java/src/main&#34;&gt;xml-java&lt;/a&gt; ‚Ä¢ &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/samples/shared/src/main/java/nl/dionsegijn/samples/shared/Presets.kt&#34;&gt;presets&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img width=&#34;300&#34; src=&#34;https://user-images.githubusercontent.com/1636897/147699597-2d177073-a2f8-4f49-ad7e-c390dd374557.gif&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Configure your confetti using the Party configuration object. This holds all the information on how the confetti will be generated. Almost all properties of a Party object have a default configuration! This makes it super easy to create beautiful and natural looking confetti.&lt;/p&gt; &#xA;&lt;p&gt;The bare minimum you need is an &lt;strong&gt;Emitter&lt;/strong&gt; to tell how often and how many confetti should spawn, like this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;Party(&#xA;    emitter = Emitter(duration = 5, TimeUnit.SECONDS).perSecond(30)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;But the possibilities are endless!&lt;/strong&gt; You can fully control how the confetti will be generated and behave by customizing the values of the Party object. An example of a customized Party configuration is this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;Party(&#xA;    speed = 0f,&#xA;    maxSpeed = 30f,&#xA;    damping = 0.9f,&#xA;    spread = 360,&#xA;    colors = listOf(0xfce18a, 0xff726d, 0xf4306d, 0xb48def),&#xA;    position = Position.Relative(0.5, 0.3),&#xA;    emitter = Emitter(duration = 100, TimeUnit.MILLISECONDS).max(100)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;em&gt;To learn more, see more samples linked at the top of &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#usage&#34;&gt;this section&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Party options&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Angle&lt;/code&gt; - &lt;strong&gt;Int (default: 0)&lt;/strong&gt;: The direction the confetti will shoot. Use any integer between &lt;code&gt;0-360&lt;/code&gt; or use presets like: Angle.TOP, Angle.RIGHT, Angle.BOTTOM, Angle.LEFT&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;spread&lt;/code&gt; - &lt;strong&gt;Int (default: 360)&lt;/strong&gt;: How wide the confetti will shoot in the direction of Angle. Use any integer between &lt;code&gt;0-360&lt;/code&gt;. Use 1 to shoot in a straight line and 360 to form a circle&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;speed&lt;/code&gt; - &lt;strong&gt;Float (default: 30f)&lt;/strong&gt;: The start speed of the confetti at the time of creation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;maxSpeed&lt;/code&gt; - &lt;strong&gt;Float (default: 0f)&lt;/strong&gt;: Set to -1 to disable maxSpeed. A random speed between &lt;code&gt;speed&lt;/code&gt; and &lt;code&gt;maxSpeed&lt;/code&gt; will be chosen. Using randomness creates a more natural and realistic look to the confetti when animating.)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;damping&lt;/code&gt; - &lt;strong&gt;Float (default: 0.9f)&lt;/strong&gt;: The rate at which the speed will decrease right after shooting the confetti&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;size&lt;/code&gt; - &lt;strong&gt;&lt;code&gt;List&amp;lt;Size&amp;gt;&lt;/code&gt; (default: SMALL, MEDIUM, LARGE)&lt;/strong&gt;: The size of the confetti. Use: Size.SMALL, MEDIUM or LARGE for default sizes or create your custom size using a new instance of &lt;code&gt;Size&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;colors&lt;/code&gt; - &lt;strong&gt;&lt;code&gt;List&amp;lt;Int&amp;gt;&lt;/code&gt; (default: 0xfce18a, 0xff726d, 0xf4306d, 0xb48def)&lt;/strong&gt;: List of colors that will be randomly picked from&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;shapes&lt;/code&gt; - &lt;strong&gt;&lt;code&gt;List&amp;lt;Shape&amp;gt;&lt;/code&gt; (default: Shape.Square, Shape.Circle)&lt;/strong&gt;: Or use a custom shape with &lt;code&gt;Shape.DrawableShape&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;timeToLive&lt;/code&gt; - &lt;strong&gt;Long (default: 2000)&lt;/strong&gt;: The time in milliseconds a particle will stay alive after that the confetti will disappear.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fadeOutEnabled&lt;/code&gt; - &lt;strong&gt;Boolean (default: true)&lt;/strong&gt;: If true and a confetti disappears because it ran out of time (set with timeToLive) it will slowly fade out. If set to falls it will instantly disappear from the screen.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;position&lt;/code&gt; - &lt;strong&gt;Position (default: Position.Relative(0.5, 0.5))&lt;/strong&gt;: the location where the confetti will spawn from relative to the canvas. Use absolute coordinates with &lt;code&gt;[Position.Absolute]&lt;/code&gt; or relative coordinates between 0.0 and 1.0 using &lt;code&gt;[Position.Relative]&lt;/code&gt;. Spawn confetti between random locations using &lt;code&gt;[Position.between]&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;delay&lt;/code&gt; - &lt;strong&gt;Int (default: 0)&lt;/strong&gt;: the amount of milliseconds to wait before the rendering of the confetti starts&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;rotation&lt;/code&gt; - &lt;strong&gt;Rotation (default: Rotation)&lt;/strong&gt;: enable the 3D rotation of a Confetti. See [Rotation] class for the configuration options. Easily enable or disable it using [Rotation].enabled() or [Rotation].disabled() and control the speed of rotations.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;emitter&lt;/code&gt; - &lt;strong&gt;EmitterConfig&lt;/strong&gt;: Instructions how many and how often a confetti particle should spawn. Use Emitter(duration, timeUnit).max(amount) or Emitter(duration, timeUnit).perSecond(amount) to configure the Emitter.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See Party implementation &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/konfetti/core/src/main/java/nl/dionsegijn/konfetti/core/Party.kt&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;KonfettiView&lt;/h3&gt; &#xA;&lt;p&gt;Create a &lt;code&gt;KonfettiView&lt;/code&gt; in your compose UI or add one to your xml layout depending on your setup.&lt;/p&gt; &#xA;&lt;p&gt;Compose&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;KonfettiView(&#xA;    modifier = Modifier.fillMaxSize(),&#xA;    parties = state.party,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;View-based (xml)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;nl.dionsegijn.konfetti.xml.KonfettiView&#xA;    android:id=&#34;@+id/konfettiView&#34;&#xA;    android:layout_width=&#34;match_parent&#34;&#xA;    android:layout_height=&#34;match_parent&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;Party(&#xA;    speed = 0f,&#xA;    maxSpeed = 30f,&#xA;    damping = 0.9f,&#xA;    spread = 360,&#xA;    colors = listOf(0xfce18a, 0xff726d, 0xf4306d, 0xb48def),&#xA;    emitter = Emitter(duration = 100, TimeUnit.MILLISECONDS).max(100),&#xA;    position = Position.Relative(0.5, 0.3)&#xA;)&#xA;viewKonfetti.start(party)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And that&#39;s it! There are endless possibilities to configure the confetti. If you want to learn more on how to implement Konfetti in a java, xml or compose project then see the samples linked at the top of &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#usage&#34;&gt;this section&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Community&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Follow me on twitter for updates &lt;a href=&#34;https://twitter.com/dionsegijn&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Do you have any questions or need help implementing this library? Search if your question is already asked &lt;a href=&#34;https://github.com/DanielMartinus/Konfetti/issues?q=is%3Aissue&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Or join our telegram chat group and maybe someone can help you out &lt;a href=&#34;https://t.me/konfetti_chat&#34;&gt;here&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Do you see any improvements or want to implement a missing feature? Contributions are very welcome!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is your contribution relatively small? You can, make your changes, run the code checks, open a PR and make sure the CI is green. That&#39;s it!&lt;/li&gt; &#xA; &lt;li&gt;Are the changes big and do they make a lot of impact? Please open an issue &lt;a href=&#34;https://github.com/DanielMartinus/Konfetti/issues?q=is%3Aissue&#34;&gt;here&lt;/a&gt; or reach out and let&#39;s discuss.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Take into account that changes and requests can be rejected if they don&#39;t align with the &lt;strong&gt;purpose of the library&lt;/strong&gt;. To not waste any time you can always open an issue &lt;a href=&#34;https://github.com/DanielMartinus/Konfetti/issues?q=is%3Aissue&#34;&gt;here&lt;/a&gt; to talk before you start making any changes.&lt;/p&gt; &#xA;&lt;h3&gt;What is the purpose of this library?&lt;/h3&gt; &#xA;&lt;p&gt;To have a lightweight particle system to easily generate confetti particles to celebrate little and big moments. Even though this is a particle system the purpose is not to be a fully fledged particle system. Changes and features are meant to be in line with being a confetti library. A great example is the implementation of custom shapes by @mattprecious &lt;a href=&#34;https://github.com/DanielMartinus/Konfetti/pull/129&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Report an issue&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Did you find an issue and want to fix it yourself? See &lt;a href=&#34;https://raw.githubusercontent.com/DanielMartinus/Konfetti/main/#contribute&#34;&gt;Contribute&lt;/a&gt; for more information&lt;/li&gt; &#xA; &lt;li&gt;Want to report an issue? You can do that &lt;a href=&#34;https://github.com/DanielMartinus/Konfetti/issues?q=is%3Aissue&#34;&gt;here&lt;/a&gt;. By adding as much details when reporting the issue and steps to reproduce you improve the change it will be solved quickly.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Konfetti is released under the ISC license. See &lt;a href=&#34;https://github.com/DanielMartinus/Konfetti/raw/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</summary>
  </entry>
</feed>