<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-05-23T01:30:16Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>afreakyelf/Pdf-Viewer</title>
    <updated>2024-05-23T01:30:16Z</updated>
    <id>tag:github.com,2024-05-23:/afreakyelf/Pdf-Viewer</id>
    <link href="https://github.com/afreakyelf/Pdf-Viewer" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Lightweight PDF Viewer Android library which only occupies around 80kb while most of the Pdf viewer occupies up to 16MB space.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Pdf Viewer For Android&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A Simple PDF Viewer library which only occupies around &lt;b&gt;80kb&lt;/b&gt; while most of the Pdf viewer occupies upto &lt;b&gt;16MB&lt;/b&gt; space. &lt;br&gt; &lt;br&gt; &lt;/p&gt; &#xA;&lt;p float=&#34;left&#34;&gt; &lt;img src=&#34;https://github.com/afreakyelf/Pdf-Viewer/assets/38572147/e310060c-bea2-42ee-b02a-3758f3122e05&#34; width=&#34;199&#34;&gt; &lt;img src=&#34;https://github.com/afreakyelf/Pdf-Viewer/assets/38572147/13f64593-7627-48bc-b573-54cebb0651b2&#34; width=&#34;199&#34;&gt; &lt;img src=&#34;https://github.com/afreakyelf/Pdf-Viewer/assets/38572147/fa6a0ff9-11dd-4087-bf7e-d4ba6795386c&#34; width=&#34;199&#34;&gt; &lt;img src=&#34;https://github.com/afreakyelf/Pdf-Viewer/assets/38572147/babde964-5373-4d03-85ad-1b8c2cc0ab29&#34; width=&#34;199&#34;&gt; &lt;img src=&#34;https://github.com/afreakyelf/Pdf-Viewer/assets/38572147/4344c962-88f7-4be4-8935-50370ad6752d&#34; width=&#34;199&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/artifact/io.github.afreakyelf/Pdf-Viewer&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.github.afreakyelf/Pdf-Viewer.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/forks/afreakyelf/Pdf-Viewer?label=Forks&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/afreakyelf/Pdf-Viewer?label=Stars&amp;amp;color=9cf&#34; alt=&#34;&#34;&gt; &lt;img src=&#34;https://api.visitorbadge.io/api/visitors?path=https%3A%2F%2Fgithub.com%2Fafreakyelf%2FPdf-Viewer&amp;amp;label=Visitors&amp;amp;countColor=%23263759&amp;amp;style=flat&#34; alt=&#34;Visitors&#34;&gt; &lt;a href=&#34;https://www.codefactor.io/repository/github/afreakyelf/pdf-viewer&#34;&gt;&lt;img src=&#34;https://www.codefactor.io/repository/github/afreakyelf/pdf-viewer/badge&#34; alt=&#34;CodeFactor&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/discord/1213235452908408943?style=flat&amp;amp;label=Join%20discord&amp;amp;link=https%3A%2F%2Fdiscord.gg%2FK3u4DscdWW&#34; alt=&#34;Discord&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;[New] Join our Discord Community &lt;a href=&#34;https://discord.gg/342ZFHX9mK&#34;&gt;here&lt;/a&gt;!&lt;/h2&gt; &#xA;&lt;h2&gt;‚ú® Major Enhancements in Our PDF Viewer Library ‚ú®&lt;/h2&gt; &#xA;&lt;p&gt;Hello Developers! We&#39;re thrilled to share some significant enhancements we&#39;ve made to our PDF viewer library. We&#39;ve fine-tuned several aspects to enhance your experience and ensure top-notch performance and security. Here&#39;s what&#39;s new:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;h3&gt;Jetpack Compose Ready üöÄ&lt;/h3&gt; Step into the future with Jetpack Compose compatibility. Integrating our PDF viewer in Compose projects is now effortless, thanks to the PdfRendererViewCompose composable function.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Turbocharged Performance üèéÔ∏è&lt;/h3&gt; We&#39;ve optimized performance to handle PDFs more efficiently, ensuring swift and smooth operations, even with large documents.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Local and on device files üìÅ&lt;/h3&gt; We have made it better and smooth with how local files are handled now, with latest permission policies.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Seamless Orientation Adaptation üîÑ&lt;/h3&gt; Our library now smartly preserves your page position during orientation changes, ensuring uninterrupted reading sessions.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Enhanced File Path Security üîê&lt;/h3&gt; Security just got stronger. We&#39;ve revamped our file path handling to provide robust protection against directory traversal attacks, keeping your data safer than ever.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Streamlined Caching System üíæ&lt;/h3&gt; Experience efficiency at its best! Our refined caching strategy smartly manages storage, retaining only the most recent PDF file to optimize performance and space usage.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Discreet Screenshot Prevention Feature üö´üì∏&lt;/h3&gt; Privacy matters. Our new screenshot-blocking feature enhances data confidentiality in your app, keeping sensitive information secure from prying eyes.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;Flexible UI Customization ‚ú®&lt;/h3&gt; Your design, your rules. Enjoy complete freedom in customizing the PDF viewer&#39;s interface, ensuring a perfect match with your app&#39;s style and theme. Render the view directly in your screen now.&lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;&#39;NoActionBar&#39; Theme Compatibility üé®&lt;/h3&gt; Seamless aesthetics, no matter the theme. Our library now gracefully integrates with &#39;NoActionBar&#39; themes, ensuring a cohesive and appealing user interface.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Stay tuned as we continue to innovate and improve. Happy coding, and let&#39;s keep creating amazing experiences together!&lt;/p&gt; &#xA;&lt;h2&gt;How to integrate into your app? ‚öôÔ∏è&lt;/h2&gt; &#xA;&lt;p&gt;We have migrated our library to Maven Central for easier integration and better reliability. To use the Pdf Viewer library in your project, add the following dependency to your &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;h4&gt;Latest version: &lt;img src=&#34;https://img.shields.io/maven-central/v/io.github.afreakyelf/Pdf-Viewer.svg?sanitize=true&#34; alt=&#34;&#34;&gt; without &#39;v&#39;&lt;/h4&gt; &#xA;&lt;h3&gt;Groovy DSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    // Replace &#39;latest-version&#39; with the actual latest version number&#xA;    implementation &#39;io.github.afreakyelf:Pdf-Viewer:latest-version&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Kotlin DSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    // Replace &#39;latest-version&#39; with the actual latest version number&#xA;    implementation(&#34;io.github.afreakyelf:Pdf-Viewer:latest-version&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to use the library?&lt;/h2&gt; &#xA;&lt;p&gt;Now you have integrated the library in your project but &lt;strong&gt;how do you use it&lt;/strong&gt;? Well it&#39;s really easy. Just launch the intent with in following way: (Refer to &lt;a href=&#34;https://github.com/afreakyelf/Pdf-Viewer/raw/master/app/src/main/java/com/rajat/sample/pdfviewer/MainActivity.kt&#34;&gt;MainActivity.kt&lt;/a&gt; for more details.)&lt;/p&gt; &#xA;&lt;h3&gt;Prerequisites&lt;/h3&gt; &#xA;&lt;p&gt;Ensure the library is included in your project&#39;s dependencies.&lt;/p&gt; &#xA;&lt;h3&gt;Launching PDF Viewer&lt;/h3&gt; &#xA;&lt;h4&gt;Opening PDF from a URL&lt;/h4&gt; &#xA;&lt;p&gt;To display a PDF from a URL, use the following code:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;/* Parameters:&#xA;- context: The context of your activity.&#xA;- pdfUrl: URL of the PDF to be displayed.&#xA;- pdfTitle: Title of the PDF document.&#xA;- saveTo: Determines how to handle saving the PDF (e.g., ASK_EVERYTIME prompts the user each time).&#xA;- enableDownload: Enables downloading of the PDF. */&#xA;&#xA;PdfViewerActivity.launchPdfFromUrl(&#xA;    context = this,&#xA;    pdfUrl = &#34;your_pdf_url_here&#34;,&#xA;    pdfTitle = &#34;PDF Title&#34;,&#xA;    saveTo = PdfViewerActivity.saveTo.ASK_EVERYTIME,&#xA;    enableDownload = true&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Opening PDF from Local Storage&lt;/h4&gt; &#xA;&lt;p&gt;To open a PDF stored in local storage:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;/* Parameters:&#xA;- path: File path or URI of the local PDF.&#xA;- fromAssets: Set to false when loading from local storage. // FALSE by default&#xA;*/&#xA;&#xA;PdfViewerActivity.launchPdfFromPath(&#xA;    context = this,&#xA;    path = &#34;your_file_path_or_uri_here&#34;,&#xA;    pdfTitle = &#34;Title&#34;,&#xA;    saveTo = PdfViewerActivity.saveTo.ASK_EVERYTIME,&#xA;    fromAssets = false&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Opening PDF from Assets&lt;/h4&gt; &#xA;&lt;p&gt;To open a PDF from the app&#39;s assets folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;/* Parameters:&#xA;- path: File path or URI of the local PDF.&#xA;- fromAssets: Set to true when loading from assets.&#xA;*/&#xA;&#xA;PdfViewerActivity.launchPdfFromPath(&#xA;  context = this,&#xA;  path = &#34;file_name_in_assets&#34;,&#xA;  pdfTitle = &#34;Title&#34;,&#xA;  saveTo = PdfViewerActivity.saveTo.ASK_EVERYTIME,&#xA;  fromAssets = true&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Loading PDF in a View&lt;/h4&gt; &#xA;&lt;p&gt;Load a PDF directly into a view:&lt;/p&gt; &#xA;&lt;p&gt;Add PDF render view in your layout file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;com.rajat.pdfviewer.PdfRendererView&#xA;    android:id=&#34;@+id/pdfView&#34;&#xA;    android:layout_width=&#34;match_parent&#34;&#xA;    android:layout_height=&#34;match_parent&#34;&#xA;    app:pdfView_divider=&#34;@drawable/pdf_viewer_divider&#34;&#xA;    app:pdfView_showDivider=&#34;false&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and in your kotlin file&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;binding.pdfView.initWithUrl(&#xA;  url = &#34;your_pdf_url_here&#34;,&#xA;  lifecycleCoroutineScope = lifecycleScope,&#xA;  lifecycle = lifecycle&#xA;)&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Using with Jetpack Compose&lt;/h4&gt; &#xA;&lt;p&gt;For Jetpack Compose, utilize PdfRendererViewCompose:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;PdfRendererViewCompose(&#xA;    url = &#34;your_pdf_url_here&#34;,&#xA;    lifecycleOwner = LocalLifecycleOwner.current&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s pretty much it and you&#39;re all wrapped up.&lt;/p&gt; &#xA;&lt;h3&gt;Ui Customizations&lt;/h3&gt; &#xA;&lt;p&gt;You need to add the custom theme to styles.xml/themes.xml file and override the required attribute values. Parent theme can be either &lt;strong&gt;Theme.PdfView.Light&lt;/strong&gt; or &lt;strong&gt;Theme.PdfView.Dark&lt;/strong&gt; or the one with no actionbar from the application. Note: If parent is not one of the themes from this library, all of the pdfView attributes should be added to that theme.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;style name=&#34;Theme.PdfView.SelectedTheme&#34; parent=&#34;@style/Theme.PdfView.Light&#34;&amp;gt;&#xA;    &amp;lt;item name=&#34;pdfView_backIcon&#34;&amp;gt;@drawable/ic_arrow_back&amp;lt;/item&amp;gt;&#xA;    &amp;lt;item name=&#34;pdfView_showToolbar&#34;&amp;gt;true&amp;lt;/item&amp;gt;&#xA;    &amp;lt;item name=&#34;pdfView_disableScreenshots&#34;&amp;gt;true&amp;lt;/item&amp;gt;&#xA;    ...&#xA;&amp;lt;/style&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Ui Customizations - Page number&lt;/h4&gt; &#xA;&lt;p&gt;You need to add the custom layout to pdf_view_page_no.xml file and override the required attribute values.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&amp;gt;  &#xA;&amp;lt;TextView xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34;  &#xA;  android:id=&#34;@+id/pageNo&#34;  &#xA;  android:layout_width=&#34;wrap_content&#34;  &#xA;  android:layout_height=&#34;wrap_content&#34;  &#xA;  android:layout_margin=&#34;18dp&#34;  &#xA;  android:background=&#34;#9C27B0&#34;  &#xA;  android:paddingStart=&#34;12dp&#34;  &#xA;  android:paddingTop=&#34;4dp&#34;  &#xA;  android:paddingEnd=&#34;12dp&#34;  &#xA;  android:paddingBottom=&#34;4dp&#34;  &#xA;  android:textColor=&#34;#ffffff&#34;  &#xA;  android:textSize=&#34;16sp&#34;  &#xA;  android:visibility=&#34;gone&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Ui Page number&lt;/h4&gt; &#xA;&lt;p&gt;You need to add the custom string to strings.xml file and override the required strings.xml values.&lt;/p&gt; &#xA;&lt;p&gt;Default:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;string name=&#34;pdfView_page_no&#34;&amp;gt;%1$s of %2$s&amp;lt;/string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Custom:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;string name=&#34;pdfView_page_no&#34; &amp;gt;%1$s / %2$s&amp;lt;/string&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Supported attributes&lt;/h4&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Attribute Name&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Expected changes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pdfView_backIcon&lt;/td&gt; &#xA;   &lt;td&gt;drawable&lt;/td&gt; &#xA;   &lt;td&gt;Navigation icon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pdfView_downloadIcon&lt;/td&gt; &#xA;   &lt;td&gt;drawable&lt;/td&gt; &#xA;   &lt;td&gt;Download icon&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pdfView_downloadIconTint&lt;/td&gt; &#xA;   &lt;td&gt;color&lt;/td&gt; &#xA;   &lt;td&gt;Download icon tint&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pdfView_actionBarTint&lt;/td&gt; &#xA;   &lt;td&gt;color&lt;/td&gt; &#xA;   &lt;td&gt;Actionbar background color&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pdfView_titleTextStyle&lt;/td&gt; &#xA;   &lt;td&gt;style&lt;/td&gt; &#xA;   &lt;td&gt;Actionbar title text appearance&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pdfView_progressBar&lt;/td&gt; &#xA;   &lt;td&gt;style&lt;/td&gt; &#xA;   &lt;td&gt;Progress bar style&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Who&#39;s using Pdf-Viewer?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;üëâ &lt;a href=&#34;https://raw.githubusercontent.com/afreakyelf/Pdf-Viewer/master/usecases.md&#34;&gt;Check out who&#39;s using Pdf-Viewer&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Any contributions you make are &lt;strong&gt;greatly appreciated&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Fork the Project&lt;/li&gt; &#xA; &lt;li&gt;Create your Feature Branch (&lt;code&gt;git checkout -b feature/NewFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Commit your Changes (&lt;code&gt;git commit -m &#39;Add some NewFeature&#39;&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Push to the Branch (&lt;code&gt;git push origin feature/NewFeature&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Open a Pull Request&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Donations&lt;/h2&gt; &#xA;&lt;p&gt;If this library helps you save time during development, you can buy me a cup of coffee :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.paypal.com/paypalme/afreakyelf&#34;&gt;&lt;img src=&#34;https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif&#34; alt=&#34;paypal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Author&lt;/h2&gt; &#xA;&lt;p&gt;Maintained by &lt;a href=&#34;https://www.github.com/afreakyelf&#34;&gt;Rajat Mittal&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>