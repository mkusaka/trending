<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-15T01:38:33Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Bnyro/TranslateYou</title>
    <updated>2022-10-15T01:38:33Z</updated>
    <id>tag:github.com,2022-10-15:/Bnyro/TranslateYou</id>
    <link href="https://github.com/Bnyro/TranslateYou" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Translator App built with Material Design 3 (You)&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;200&#34; height=&#34;200&#34; src=&#34;https://raw.githubusercontent.com/Bnyro/TranslateYou/master/fastlane/metadata/android/en-US/images/icon.png&#34;&gt; &#xA; &lt;h1&gt;Translate You&lt;/h1&gt; &#xA; &lt;p&gt;Translate You is a Translator App built with &lt;a href=&#34;https://m3.material.io/&#34;&gt;Material Design 3 (You)&lt;/a&gt; supporting different translation engines.&lt;/p&gt; &#xA; &lt;div align=&#34;center&#34;&gt; &#xA;  &lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/github/license/Bnyro/TranslateYou?color=c3e7ff&amp;amp;style=flat-square&#34;&gt; &#xA;  &lt;img alt=&#34;Downloads&#34; src=&#34;https://img.shields.io/github/downloads/Bnyro/TranslateYou/total.svg?color=c3e7ff&amp;amp;style=flat-square&#34;&gt; &#xA;  &lt;img alt=&#34;Last commit&#34; src=&#34;https://img.shields.io/github/last-commit/Bnyro/TranslateYou?color=c3e7ff&amp;amp;style=flat-square&#34;&gt; &#xA;  &lt;img alt=&#34;Repo size&#34; src=&#34;https://img.shields.io/github/repo-size/Bnyro/TranslateYou?color=c3e7ff&amp;amp;style=flat-square&#34;&gt; &#xA;  &lt;img alt=&#34;Stars&#34; src=&#34;https://img.shields.io/github/stars/Bnyro/TranslateYou?color=c3e7ff&amp;amp;style=flat-square&#34;&gt; &#xA;  &lt;br&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; 30 supported languages&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Material Design 3 (You)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Dark and light theme&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Entirely Open Source&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Written in Jetpack Compose&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/com.bnyro.translate&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; alt=&#34;Get it on IzzyOnDroid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/bnyro/translateyou/releases&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Bnyro/TranslateYou/master/ghbadge.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Different versions&lt;/h2&gt; &#xA;&lt;p&gt;There are currently two different versions available:&lt;/p&gt; &#xA;&lt;h4&gt;Translate You Libre&lt;/h4&gt; &#xA;&lt;p&gt;Only supports the &lt;a href=&#34;https://github.com/LibreTranslate/LibreTranslate&#34;&gt;LibreTranslate API&lt;/a&gt; and therefore is fully libre.&lt;/p&gt; &#xA;&lt;h4&gt;Translate You Plus&lt;/h4&gt; &#xA;&lt;p&gt;Additionally supports &lt;a href=&#34;https://github.com/thedaviddelta/lingva-translate&#34;&gt;LingvaTranslate&lt;/a&gt; which uses Google Translate to fetch translations and thus owns the NonFreeNet anti-feature.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;div style=&#34;display: flex;&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Bnyro/TranslateYou/master/fastlane/metadata/android/en-US/images/phoneScreenshots/translate.png&#34; width=&#34;30%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Bnyro/TranslateYou/master/fastlane/metadata/android/en-US/images/phoneScreenshots/option-1.png&#34; width=&#34;30%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Bnyro/TranslateYou/master/fastlane/metadata/android/en-US/images/phoneScreenshots/option-2.png&#34; width=&#34;30%&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Bnyro/TranslateYou/master/fastlane/metadata/android/en-US/images/phoneScreenshots/about.png&#34; width=&#34;30%&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;All contributions are welcome! Feel free to suggest new features or new APIs that could be supported. If you are a developer and wish to contribute to the app, please to fork the project and submit a pull request.&lt;/p&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/projects/you-apps/translate-you/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/you-apps/-/287x66-grey.png&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Privacy Policy&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Translate You&#39;s privacy policy is available&lt;/strong&gt; &lt;a href=&#34;https://github.com/Bnyro/TranslateYou/raw/master/PRIVACY%20POLICY.md&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Translate You is licensed under the &lt;a href=&#34;https://www.gnu.org/licenses/gpl.html&#34;&gt;GNU General Public License&lt;/a&gt;: You can use, study and share it as you want.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/skiko</title>
    <updated>2022-10-15T01:38:33Z</updated>
    <id>tag:github.com,2022-10-15:/JetBrains/skiko</id>
    <link href="https://github.com/JetBrains/skiko" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin MPP bindings to Skia&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;http://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;official project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JetBrains/skiko/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/dynamic/json.svg?color=orange&amp;amp;label=latest%20version&amp;amp;query=%24.tag_name&amp;amp;url=https%3A%2F%2Fgithub.com%2FJetBrains%2Fskiko%2Freleases%2Flatest&#34; alt=&#34;version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kotlin Multiplatform library for Skia and window management&lt;/h1&gt; &#xA;&lt;p&gt;Skiko (short for Skia for Kotlin) is the graphical library exposing significant part of &lt;a href=&#34;https://skia.org&#34;&gt;Skia library&lt;/a&gt; APIs to Kotlin, along with the gluing code for rendering context.&lt;/p&gt; &#xA;&lt;p&gt;Supported platforms:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Kotlin/JVM on Linux(x86_64 and arm64)&lt;/li&gt; &#xA; &lt;li&gt;Kotlin/JVM on Windows(x86_64)&lt;/li&gt; &#xA; &lt;li&gt;Kotlin/JVM on macOS(x86_64 and arm64)&lt;/li&gt; &#xA; &lt;li&gt;Kotlin/JVM on Android(x86_64 and arm64), starting with API version 24&lt;/li&gt; &#xA; &lt;li&gt;Kotlin/JS + WebAssembly in browsers&lt;/li&gt; &#xA; &lt;li&gt;Kotlin/Native on iOS(arm64 and x64)&lt;/li&gt; &#xA; &lt;li&gt;Kotlin/Native on macOS (arm64 and x64)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;API documentation&lt;/h2&gt; &#xA;&lt;p&gt;See autogenerated API docs at &lt;a href=&#34;https://jetbrains.github.io/skiko/&#34;&gt;https://jetbrains.github.io/skiko/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Using as dependency&lt;/h2&gt; &#xA;&lt;p&gt;To use in build scripts one has to compute appropriate target platform and version, i.e. something like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;    repositories {&#xA;        mavenCentral()&#xA;        maven(&#34;https://maven.pkg.jetbrains.space/public/p/compose/dev&#34;)&#xA;    }&#xA;&#xA;    val osName = System.getProperty(&#34;os.name&#34;)&#xA;    val targetOs = when {&#xA;        osName == &#34;Mac OS X&#34; -&amp;gt; &#34;macos&#34;&#xA;        osName.startsWith(&#34;Win&#34;) -&amp;gt; &#34;windows&#34;&#xA;        osName.startsWith(&#34;Linux&#34;) -&amp;gt; &#34;linux&#34;&#xA;        else -&amp;gt; error(&#34;Unsupported OS: $osName&#34;)&#xA;    }&#xA;&#xA;    val osArch = System.getProperty(&#34;os.arch&#34;)&#xA;    var targetArch = when (osArch) {&#xA;        &#34;x86_64&#34;, &#34;amd64&#34; -&amp;gt; &#34;x64&#34;&#xA;        &#34;aarch64&#34; -&amp;gt; &#34;arm64&#34;&#xA;        else -&amp;gt; error(&#34;Unsupported arch: $osArch&#34;)&#xA;    }&#xA;&#xA;    val version = &#34;0.5.3&#34;&#xA;    val target = &#34;${targetOs}-${targetArch}&#34;&#xA;    dependencies {&#xA;        implementation(&#34;org.jetbrains.skiko:skiko-awt-runtime-$target:$version&#34;)&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Simple example for Kotlin/JVM&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    val skiaLayer = SkiaLayer()&#xA;    skiaLayer.skikoView = GenericSkikoView(skiaLayer, object : SkikoView {&#xA;        val paint = Paint().apply {&#xA;            color = Color.RED&#xA;        }&#xA;        override fun onRender(canvas: Canvas, width: Int, height: Int, nanoTime: Long) {&#xA;            canvas.clear(Color.CYAN)&#xA;            val ts = nanoTime / 5_000_000&#xA;            canvas.drawCircle( (ts % width).toFloat(), (ts % height).toFloat(), 20f, paint )&#xA;        }&#xA;    })&#xA;    SwingUtilities.invokeLater {&#xA;        val window = JFrame(&#34;Skiko example&#34;).apply {&#xA;            defaultCloseOperation = WindowConstants.EXIT_ON_CLOSE&#xA;            preferredSize = Dimension(800, 600)&#xA;        }&#xA;        skiaLayer.attachTo(window.contentPane)&#xA;        skiaLayer.needRedraw()&#xA;        window.pack()&#xA;        window.isVisible = true&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Simple example for iOS&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    val args = emptyArray&amp;lt;String&amp;gt;()&#xA;    memScoped {&#xA;        val argc = args.size + 1&#xA;        val argv = (arrayOf(&#34;skikoApp&#34;) + args).map { it.cstr.ptr }.toCValues()&#xA;        autoreleasepool {&#xA;            UIApplicationMain(argc, argv, null, NSStringFromClass(SkikoAppDelegate))&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;class SkikoAppDelegate : UIResponder, UIApplicationDelegateProtocol {&#xA;    companion object : UIResponderMeta(), UIApplicationDelegateProtocolMeta&#xA;&#xA;    @ObjCObjectBase.OverrideInit&#xA;    constructor() : super()&#xA;&#xA;    private var _window: UIWindow? = null&#xA;    override fun window() = _window&#xA;    override fun setWindow(window: UIWindow?) {&#xA;        _window = window&#xA;    }&#xA;&#xA;    override fun application(application: UIApplication, didFinishLaunchingWithOptions: Map&amp;lt;Any?, *&amp;gt;?): Boolean {&#xA;        window = UIWindow(frame = UIScreen.mainScreen.bounds)&#xA;        window!!.rootViewController = SkikoViewController(&#xA;            SkikoUIView(&#xA;                SkiaLayer().apply {&#xA;                    gesturesToListen = SkikoGestureEventKind.values()&#xA;                    skikoView = GenericSkikoView(skiaLayer, object : SkikoView {&#xA;                      val paint = Paint().apply { color = Color.RED }&#xA;                      override fun onRender(canvas: Canvas, width: Int, height: Int, nanoTime: Long) {&#xA;                        canvas.clear(Color.CYAN)&#xA;                        val ts = nanoTime / 5_000_000&#xA;                        canvas.drawCircle( (ts % width).toFloat(), (ts % height).toFloat(), 20f, paint )&#xA;                      }&#xA;                    })&#xA;                }&#xA;            )&#xA;        )&#xA;        window!!.makeKeyAndVisible()&#xA;        return true&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See this &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/skiko/master/samples/SkiaMultiplatformSample&#34;&gt;sample&lt;/a&gt; for complete example.&lt;/p&gt; &#xA;&lt;p&gt;To use latest development snapshot use version &lt;code&gt;0.0.0-SNAPSHOT&lt;/code&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>