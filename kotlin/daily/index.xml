<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-15T01:39:00Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>GetStream/webrtc-in-jetpack-compose</title>
    <updated>2023-01-15T01:39:00Z</updated>
    <id>tag:github.com,2023-01-15:/GetStream/webrtc-in-jetpack-compose</id>
    <link href="https://github.com/GetStream/webrtc-in-jetpack-compose" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üì± This project demonstrates WebRTC protocol to facilitate real-time video communications with Jetpack Compose.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/211961074-8e01056c-a820-468b-bdca-3ab2570f783a.jpg&#34; alt=&#34;WebRTC in Jetpack Compose-1200x630&#34;&gt;&lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;WebRTC in Jetpack Compose&lt;/h1&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=23&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-23%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/GetStream/webrtc-in-jetpack-compose/actions/workflows/android.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/GetStream/webrtc-in-jetpack-compose/actions/workflows/android.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://getstream.io&#34;&gt;&lt;img src=&#34;https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/HayesGordon/e7f3c4587859c17f3e593fd3ff5b13f4/raw/11d9d9385c9f34374ede25f6471dc743b977a914/badge.json&#34; alt=&#34;Stream Feeds&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;This project demonstrates &lt;a href=&#34;https://getstream.io/glossary/webrtc-protocol/&#34;&gt;WebRTC protocol&lt;/a&gt; to facilitate real-time video communications with Jetpack Compose.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this repository is to demonstrate below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Implementing entire UI elements for real-time video communication with Jetpack Compose.&lt;/li&gt; &#xA; &lt;li&gt;Performing real-time communication in background with Kotlin Coroutines.&lt;/li&gt; &#xA; &lt;li&gt;Understanding the peer connection based on WebRTC.&lt;/li&gt; &#xA; &lt;li&gt;Communicating with a signaling server to exchange peer connection information between clients.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚úçÔ∏è Technical Content&lt;/h2&gt; &#xA;&lt;p&gt;We&#39;re preparing to publish a blog post about &lt;strong&gt;WebRTC in Jetpack Compose&lt;/strong&gt;. If you need to understand WebRTC and communication protocols, check out the &lt;a href=&#34;https://getstream.io/blog/communication-protocols/&#34;&gt;HTTP, WebSocket, gRPC or WebRTC: Which Communication Protocol is Best For Your App?&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to get notified as we release future posts, join the &lt;strong&gt;&lt;a href=&#34;https://github.com/GetStream/webrtc-in-jetpack-compose/watchers&#34;&gt;watchers&lt;/a&gt;&lt;/strong&gt; on GitHub or follow &lt;strong&gt;&lt;a href=&#34;https://twitter.com/getstream_io&#34;&gt;Stream&lt;/a&gt;&lt;/strong&gt; on Twitter. You can also follow the &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;author&lt;/a&gt;&lt;/strong&gt; of this repository on GitHub.&lt;/p&gt; &#xA;&lt;a href=&#34;https://getstream.io/chat/sdk/compose&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/138428440-b92e5fb7-89f8-41aa-96b1-71a5486c5849.png&#34; align=&#34;right&#34; width=&#34;12%&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;üõ• Stream Chat and Voice &amp;amp; Video calling SDK&lt;/h2&gt; &#xA;&lt;p&gt;If you‚Äôre interested in adding powerful In-App Messaging to your app, check out the &lt;strong&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/compose/&#34;&gt;Compose Chat SDK for Messaging&lt;/a&gt;&lt;/strong&gt;! We&#39;re also planning to release voice &amp;amp; video calling SDK very soon! Check out the &lt;strong&gt;&lt;a href=&#34;https://getstream.io/video/&#34;&gt;Video &amp;amp; Voice Calling API on Stream&#39;s Global Edge Network&lt;/a&gt;&lt;/strong&gt;, if you want early access to our SDK.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getStream/stream-chat-android&#34;&gt;Stream Chat SDK for Android on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getStream/android-samples&#34;&gt;Android Samples for Stream Chat SDK on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getstream.io/chat/docs/sdk/android/compose/overview/&#34;&gt;Stream Chat Compose UI Componenets Guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üì≤ Download APK&lt;/h2&gt; &#xA;&lt;p&gt;Go to the &lt;a href=&#34;https://github.com/GetStream/webrtc-in-jetpack-compose/releases&#34;&gt;Releases&lt;/a&gt; to download the latest APK.&lt;/p&gt; &#xA;&lt;h2&gt;üì∑ Previews&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GetStream/webrtc-in-jetpack-compose/main/previews/preview0.png&#34; alt=&#34;drawing&#34; width=&#34;273&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/GetStream/webrtc-in-jetpack-compose/main/previews/preview1.png&#34; alt=&#34;drawing&#34; width=&#34;273&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;üõ† Tech Stacks &amp;amp; Open Source Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimum SDK level 23.&lt;/li&gt; &#xA; &lt;li&gt;100% &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; based + &lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;Coroutines&lt;/a&gt; + &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/&#34;&gt;Flow&lt;/a&gt; for asynchronous.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://webrtc.org/&#34;&gt;WebRTC&lt;/a&gt;: To build real-time communication capabilities to your application that works on top of an open standard.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/webrtc-sdk/android&#34;&gt;WebRTC-android&lt;/a&gt;: WebRTC pre-compiled library for android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/retrofit&#34;&gt;Retrofit2 &amp;amp; OkHttp3&lt;/a&gt;: Construct the REST APIs and paging network data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GetStream/stream-log&#34;&gt;StreamLog&lt;/a&gt;: A lightweight and extensible logger library for Kotlin and Android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ktorio/ktor&#34;&gt;Ktor&lt;/a&gt;: Building a signaling client websocket server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üíª How to build the project?&lt;/h2&gt; &#xA;&lt;p&gt;To build this project properly, you should follow the instructions below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Run the &lt;a href=&#34;https://github.com/GetStream/webrtc-in-jetpack-compose/tree/main/webrtc-backend&#34;&gt;WebRTC backend server&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Add the local ip address of your pc on the &lt;code&gt;local.properties&lt;/code&gt; file on the project (Android Studio) like the below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;# You should change 192.168.1.123 to your local ip address, which is running the WebRTC backend server.&#xA;SIGNALING_SERVER_IP_ADDRESS=ws://192.168.1.123:8080/rtc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;Lastly, run the &lt;a href=&#34;https://github.com/GetStream/webrtc-in-jetpack-compose/tree/main/webrtc-android&#34;&gt;WebRTC android&lt;/a&gt; project on your multiple devices to test peer communication.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;ü§ù Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Most features are not completed except the chat feature, so that anyone can contribute and improve this project following the &lt;a href=&#34;https://github.com/GetStream/webrtc-in-jetpack-compose/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guideline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Find this repository useful? üíô&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/GetStream/webrtc-in-jetpack-compose/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;‚≠ê&lt;/span&gt; &lt;br&gt; Also, follow &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;maintainers&lt;/a&gt;&lt;/strong&gt; on GitHub for our next creations! ü§©&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;Copyright 2023 Stream.IO, Inc. All Rights Reserved.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>android/gradle-recipes</title>
    <updated>2023-01-15T01:39:00Z</updated>
    <id>tag:github.com,2023-01-15:/android/gradle-recipes</id>
    <link href="https://github.com/android/gradle-recipes" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Ready-to-use recipes for common build customizations that showcase the Android Gradle plugin&#39;s public APIs and DSL.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Plugin for Gradle cookbook&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains ready-to-use recipes for common build customizations that showcase the Android Gradle plugin&#39;s public APIs and DSL.&lt;/p&gt; &#xA;&lt;p&gt;The top level folder represents different ways to use the APIs:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;From Groovy-based &lt;code&gt;build.gradle&lt;/code&gt; files&lt;/li&gt; &#xA; &lt;li&gt;From Kotlin-based &lt;code&gt;build.gradle.kts&lt;/code&gt; files&lt;/li&gt; &#xA; &lt;li&gt;From &lt;code&gt;buildSrc&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Master branch currently represents the state of AGP 4.1.&lt;/p&gt; &#xA;&lt;p&gt;The agp-4.2 branch currently represents the state of AGP 4.2.&lt;/p&gt; &#xA;&lt;p&gt;The agp-7.0 branch currently represents the state of AGP 7.0&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2020 The Android Open Source Project&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>