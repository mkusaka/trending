<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-05T01:44:42Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>CarlosEsco/Neko</title>
    <updated>2022-07-05T01:44:42Z</updated>
    <id>tag:github.com,2022-07-05:/CarlosEsco/Neko</id>
    <link href="https://github.com/CarlosEsco/Neko" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free, open source, unofficial MangaDex reader for Android&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/CarlosEsco/Neko&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarlosEsco/Neko/master/.github/readme-images/logo.png&#34; alt=&#34;Neko&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;br&gt; Neko &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A Free, Open source unofficial manga reader for MangaDex&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/CarlosEsco/Neko/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/CarlosEsco/Neko.svg?maxAge=3600&amp;amp;style=for-the-badge&amp;amp;label=download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarlosEsco/Neko/actions/workflows/ci-draft-release.yml?query=workflow%3A%22Release+app%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/carlosesco/neko/Android%20CI?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/CarlosEsco/Neko.svg?style=for-the-badge&#34;&gt; &lt;a href=&#34;https://discord.gg/tachiyomi&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/349436576037732353.svg?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;About:&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://mangadex.org/&#34;&gt;MangaDex&lt;/a&gt; specific fork of &lt;a href=&#34;https://github.com/inorichi/tachiyomi&#34;&gt;Tachiyomi&lt;/a&gt; and &lt;a href=&#34;https://github.com/Jays2Kings/tachiyomiJ2K&#34;&gt;TachiyomiJ2K&lt;/a&gt;. This contains features specific to Mangadex that those versions cannot offer. It also features almost every feature that J2K has except for other sources,local sources, and editting manga.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This fork is for Android 7+&lt;/p&gt; &#xA;&lt;h2&gt;Specific features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports native login to MangaDex and 2FA&lt;/li&gt; &#xA; &lt;li&gt;Use MDList as Tracker&lt;/li&gt; &#xA; &lt;li&gt;Similar Manga Recommendations&lt;/li&gt; &#xA; &lt;li&gt;Manually sync of Manga to and from Mangadex follows list&lt;/li&gt; &#xA; &lt;li&gt;Sync Followed Manga&#39;s read chapters from MangaDex into Neko automatically&lt;/li&gt; &#xA; &lt;li&gt;Filter by Scanlation Group in chapter list&lt;/li&gt; &#xA; &lt;li&gt;Look at an additional source for missing chapters not hosted on MangaDex&lt;/li&gt; &#xA; &lt;li&gt;Ability to attempt to merge missing chapters from MangaDex with another source&lt;/li&gt; &#xA; &lt;li&gt;And many more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Get the app from our &lt;a href=&#34;https://github.com/CarlosEsco/Neko/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/inorichi&#34;&gt;Inorichi&lt;/a&gt; for making the original Tachiyomi&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arkon&#34;&gt;Arkon&lt;/a&gt; Current maintainer of Tachiyomi&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jays2Kings&#34;&gt;Jays2Kings&lt;/a&gt; for the wonderful new UI of J2K&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goldbattle&#34;&gt;GoldBattle&lt;/a&gt; for all the similar manga logic&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2015 Javier Tom√°s&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&#xA;Modifications copyright (C) 2019 Carlos Escobedo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The developer of this application does not have any affiliation with the content providers available.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skydoves/Orbitary</title>
    <updated>2022-07-05T01:44:42Z</updated>
    <id>tag:github.com,2022-07-05:/skydoves/Orbitary</id>
    <link href="https://github.com/skydoves/Orbitary" rel="alternate"></link>
    <summary type="html">&lt;p&gt;ü™ê Jetpack Compose animation library that allows you to implement animations such as shared element transition.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Orbitary&lt;/h1&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=21&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves/Orbitary/actions/workflows/android.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/skydoves/Orbitary/actions/workflows/android.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://androidweekly.net/issues/issue-525&#34;&gt;&lt;img alt=&#34;Android Weekly&#34; src=&#34;https://skydoves.github.io/badges/android-weekly.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://us12.campaign-archive.com/?u=f39692e245b94f7fb693b6d82&amp;amp;id=68710ad80a&#34;&gt;&lt;img alt=&#34;Kotlin Weekly&#34; src=&#34;https://skydoves.github.io/badges/kotlin-weekly.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves&#34;&gt;&lt;img alt=&#34;Profile&#34; src=&#34;https://skydoves.github.io/badges/skydoves.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; ü™ê Jetpack Compose animation library that allows you to implement animations such as shared element transition. &lt;/p&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/Orbitary/main/previews/preview0.gif&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/Orbitary/main/previews/preview1.gif&#34; width=&#34;270&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/Orbitary/main/previews/preview2.gif&#34; width=&#34;270&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/search?q=g:%22com.github.skydoves%22%20AND%20a:%22orbitary%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.github.skydoves/orbitary.svg?label=Maven%20Central&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gradle&lt;/h3&gt; &#xA;&lt;p&gt;Add the dependency below to your &lt;strong&gt;module&lt;/strong&gt;&#39;s &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    implementation &#34;com.github.skydoves:orbitary:0.1.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This is an experimental library that demonstrates various animations with Jetpack Compose. Please make sure that your project uses Jetpack Compose &lt;code&gt;1.3.0-alpha01&lt;/code&gt;, Compose Compiler &lt;code&gt;1.2.0&lt;/code&gt;, and Kotlin &lt;code&gt;1.7.0&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;You can implement three kinds of animations with Orbitary: &lt;strong&gt;Movement&lt;/strong&gt;, &lt;strong&gt;Transformation&lt;/strong&gt;, and &lt;strong&gt;Shared Element Transition&lt;/strong&gt;. Basically, you can run animation with &lt;code&gt;Orbitary&lt;/code&gt; Composable function, which provides &lt;code&gt;OrbitaryScope&lt;/code&gt; that allows you to create animations.&lt;/p&gt; &#xA;&lt;h3&gt;Transformation&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/Orbitary/main/previews/preview1.gif&#34; width=&#34;33%&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;The example below shows how to implement resizing animation with the &lt;code&gt;animateTransformation&lt;/code&gt; extension of the &lt;code&gt;OrbitaryScope&lt;/code&gt;. The &lt;code&gt;rememberContentWithOrbitaryScope&lt;/code&gt; allows you to create custom animations such as &lt;code&gt;animateTransformation&lt;/code&gt; on the &lt;code&gt;OrbitaryScope&lt;/code&gt;. You can apply the &lt;code&gt;animateTransformation&lt;/code&gt; animation to specific Composables and customize its &lt;code&gt;AnimationSpec&lt;/code&gt; as seen the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;  val transformationSpec = SpringSpec&amp;lt;IntSize&amp;gt;(&#xA;    dampingRatio = Spring.DampingRatioMediumBouncy,&#xA;    stiffness = 200f&#xA;  )&#xA;&#xA;  var isTransformed by rememberSaveable { mutableStateOf(false) }&#xA;  val poster = rememberContentWithOrbitaryScope {&#xA;    GlideImage(&#xA;      modifier = if (isTransformed) {&#xA;        Modifier.size(300.dp, 620.dp)&#xA;      } else {&#xA;        Modifier.size(100.dp, 220.dp)&#xA;      }.animateTransformation(this, transformationSpec),&#xA;      imageModel = ItemUtils.urls[0],&#xA;      contentScale = ContentScale.Fit&#xA;    )&#xA;  }&#xA;&#xA;  Orbitary(&#xA;    modifier = Modifier&#xA;      .clickable { isTransformed = !isTransformed }&#xA;  ) {&#xA;    Column(&#xA;      Modifier.fillMaxSize(),&#xA;      horizontalAlignment = Alignment.CenterHorizontally,&#xA;      verticalArrangement = Arrangement.Center&#xA;    ) {&#xA;      poster()&#xA;    }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Movement&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/Orbitary/main/previews/preview2.gif&#34; width=&#34;33%&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;The example below shows how to implement movement animation with the &lt;code&gt;animateMovement&lt;/code&gt; extension of the &lt;code&gt;OrbitaryScope&lt;/code&gt;. The &lt;code&gt;rememberContentWithOrbitaryScope&lt;/code&gt; allows you to create custom animations such as &lt;code&gt;animateMovement&lt;/code&gt; on the &lt;code&gt;OrbitaryScope&lt;/code&gt;. You can apply the &lt;code&gt;animateMovement&lt;/code&gt; animation to specific Composables and customize its &lt;code&gt;AnimationSpec&lt;/code&gt; as seen the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;  val movementSpec = SpringSpec&amp;lt;IntOffset&amp;gt;(&#xA;    dampingRatio = Spring.DampingRatioMediumBouncy,&#xA;    stiffness = 200f&#xA;  )&#xA;  &#xA;  var isTransformed by rememberSaveable { mutableStateOf(false) }&#xA;  val poster = rememberContentWithOrbitaryScope {&#xA;    GlideImage(&#xA;      modifier = if (isTransformed) {&#xA;        Modifier.size(360.dp, 620.dp)&#xA;      } else {&#xA;        Modifier.size(130.dp, 220.dp)&#xA;      }.animateMovement(this, movementSpec),&#xA;      imageModel = ItemUtils.urls[3],&#xA;      contentScale = ContentScale.Fit&#xA;    )&#xA;  }&#xA;&#xA;  Orbitary(&#xA;    modifier = Modifier&#xA;      .clickable { isTransformed = !isTransformed }&#xA;  ) {&#xA;    if (isTransformed) {&#xA;      Column(&#xA;        Modifier.fillMaxSize(),&#xA;        horizontalAlignment = Alignment.CenterHorizontally,&#xA;        verticalArrangement = Arrangement.Center&#xA;      ) {&#xA;        poster()&#xA;      }&#xA;    } else {&#xA;      Column(&#xA;        Modifier&#xA;          .fillMaxSize()&#xA;          .padding(20.dp),&#xA;        horizontalAlignment = Alignment.End,&#xA;        verticalArrangement = Arrangement.Bottom&#xA;      ) {&#xA;        poster()&#xA;      }&#xA;    }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Shared Element Transition&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/Orbitary/main/previews/preview0.gif&#34; width=&#34;33%&#34; align=&#34;center&#34;&gt; &#xA;&lt;p&gt;The example below shows how to implement shared element transition with the &lt;code&gt;animateSharedElementTransition&lt;/code&gt; extension of the &lt;code&gt;OrbitaryScope&lt;/code&gt;. The &lt;code&gt;rememberContentWithOrbitaryScope&lt;/code&gt; allows you to create custom animations such as &lt;code&gt;animateSharedElementTransition&lt;/code&gt; on the &lt;code&gt;OrbitaryScope&lt;/code&gt;. You can apply the &lt;code&gt;animateSharedElementTransition&lt;/code&gt; animation to specific Composables and customize its &lt;code&gt;AnimationSpec&lt;/code&gt;. Also, you can set the different &lt;code&gt;AnimationSpec&lt;/code&gt;s for the movement and transformation as seen the below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;  var isTransformed by rememberSaveable { mutableStateOf(false) }&#xA;  val items = rememberContentWithOrbitaryScope {&#xA;    ItemUtils.urls.forEach { url -&amp;gt;&#xA;      GlideImage(&#xA;        modifier = if (isTransformed) {&#xA;          Modifier.size(140.dp, 180.dp)&#xA;        } else {&#xA;          Modifier.size(100.dp, 220.dp)&#xA;        }&#xA;          .animateSharedElementTransition(this, movementSpec, transformationSpec)&#xA;          .padding(8.dp),&#xA;        imageModel = url,&#xA;        contentScale = ContentScale.Fit&#xA;      )&#xA;    }&#xA;  }&#xA;&#xA;  Orbitary(&#xA;    modifier = Modifier&#xA;      .fillMaxSize()&#xA;      .clickable { isTransformed = !isTransformed },&#xA;    isTransformed = isTransformed,&#xA;    onStartContent = {&#xA;      Column(&#xA;        Modifier.fillMaxSize(),&#xA;        horizontalAlignment = Alignment.CenterHorizontally,&#xA;        verticalArrangement = Arrangement.Center&#xA;      ) {&#xA;        items()&#xA;      }&#xA;    },&#xA;    onTransformedContent = {&#xA;      Row(&#xA;        verticalAlignment = Alignment.CenterVertically&#xA;      ) { items() }&#xA;    }&#xA;  )&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Find this repository useful? &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/orbitary/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;‚≠ê&lt;/span&gt; &lt;br&gt; Also, &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;follow me&lt;/a&gt;&lt;/strong&gt; on GitHub for my next creations! ü§©&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;Designed and developed by 2022 skydoves (Jaewoong Eum)&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Kunzisoft/KeePassDX</title>
    <updated>2022-07-05T01:44:42Z</updated>
    <id>tag:github.com,2022-07-05:/Kunzisoft/KeePassDX</id>
    <link href="https://github.com/Kunzisoft/KeePassDX" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Lightweight password manager for Android, KeePassDX allows editing encrypted data in a single file in KeePass format and fill in the forms in a secure way.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android KeePassDX&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Kunzisoft/KeePassDX/master/art/icon.png&#34;&gt; &lt;strong&gt;Lightweight password manager for Android&lt;/strong&gt;, KeePassDX allows editing encrypted data in a single file in KeePass format and fill in the forms in a secure way.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/Kunzisoft/KeePassDX/master/art/screen.jpg&#34; width=&#34;220&#34;&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create database files / entries and groups.&lt;/li&gt; &#xA; &lt;li&gt;Support for &lt;strong&gt;.kdb&lt;/strong&gt; and &lt;strong&gt;.kdbx&lt;/strong&gt; files (version 1 to 4) with AES - Twofish - ChaCha20 - Argon2 algorithm.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Compatible&lt;/strong&gt; with the majority of alternative programs (KeePass, KeePassX, KeePassXC, ‚Ä¶).&lt;/li&gt; &#xA; &lt;li&gt;Allows opening and &lt;strong&gt;copying URI / URL fields quickly&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Biometric recognition&lt;/strong&gt; for fast unlocking &lt;em&gt;(fingerprint / face unlock / ‚Ä¶)&lt;/em&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;One-Time Password&lt;/strong&gt; management &lt;em&gt;(HOTP / TOTP)&lt;/em&gt; for Two-factor authentication (2FA).&lt;/li&gt; &#xA; &lt;li&gt;Material design with &lt;strong&gt;themes&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Auto-Fill&lt;/strong&gt; and Integration.&lt;/li&gt; &#xA; &lt;li&gt;Field filling &lt;strong&gt;keyboard&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Dynamic &lt;strong&gt;templates&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;History&lt;/strong&gt; of each entry.&lt;/li&gt; &#xA; &lt;li&gt;Precise management of &lt;strong&gt;settings&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Code written in &lt;strong&gt;native languages&lt;/strong&gt; &lt;em&gt;(Kotlin / Java / JNI / C)&lt;/em&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;KeePassDX is &lt;strong&gt;open source&lt;/strong&gt; and &lt;strong&gt;ad-free&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is KeePassDX?&lt;/h2&gt; &#xA;&lt;p&gt;An alternative to remembering an endless list of passwords manually. This is made more difficult by &lt;strong&gt;using different passwords for each account&lt;/strong&gt;. If you use one password everywhere and security fails only one of those places, it grants access to your e-mail account, website, etc, and you may not know about it or notice, before bad things happen.&lt;/p&gt; &#xA;&lt;p&gt;KeePassDX is a &lt;strong&gt;password manager for Android&lt;/strong&gt;, which helps you &lt;strong&gt;manage your passwords in a secure way&lt;/strong&gt;. You can put all your passwords in one database, locked with a &lt;strong&gt;master key&lt;/strong&gt; and/or a &lt;strong&gt;keyfile&lt;/strong&gt;. You &lt;strong&gt;only have to remember one single master password and/or select the keyfile&lt;/strong&gt; to unlock the whole database. The databases are encrypted using the best and &lt;strong&gt;most secure encryption algorithms&lt;/strong&gt; currently known.&lt;/p&gt; &#xA;&lt;h2&gt;Small print?&lt;/h2&gt; &#xA;&lt;p&gt;KeePassDX is under &lt;strong&gt;open source GPL3 license&lt;/strong&gt;, meaning you can use, study, change and share it at will. Copyleft ensures it stays that way. From the full source, anyone can build, fork, and check whether for example the encryption algorithms are implemented correctly. There is &lt;strong&gt;no advertising&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Do not worry, &lt;strong&gt;the main features remain completely free&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Optional visual styles are accessible after a contribution (and a congratulatory message (’à‚Äø’à) ) or the purchase of an extended version to encourage contribution to the work of open source projects! &lt;em&gt;If you contribute to the project and do not have access to the styles, do not hesitate to contact the author at &lt;a href=&#34;https://raw.githubusercontent.com/Kunzisoft/KeePassDX/master/contact@kunzisoft.com&#34;&gt;contact@kunzisoft.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Add features by making a &lt;strong&gt;&lt;a href=&#34;https://help.github.com/articles/about-pull-requests/&#34;&gt;pull request&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Help to &lt;strong&gt;&lt;a href=&#34;https://hosted.weblate.org/projects/keepass-dx/strings/&#34;&gt;translate&lt;/a&gt;&lt;/strong&gt; KeePassDX to your language (on &lt;a href=&#34;https://hosted.weblate.org/projects/keepass-dx/&#34;&gt;Weblate&lt;/a&gt; or by sending a &lt;a href=&#34;https://help.github.com/articles/about-pull-requests/&#34;&gt;pull request&lt;/a&gt;).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.keepassdx.com/#donation&#34;&gt;Donate&lt;/a&gt;&lt;/strong&gt; ‰∫∫‚óï ‚Äø‚Äø ‚óï‰∫∫Y for a better service and a quick development of your features.&lt;/li&gt; &#xA; &lt;li&gt;Buy the &lt;strong&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.kunzisoft.keepass.pro&#34;&gt;Pro version&lt;/a&gt;&lt;/strong&gt; of KeePassDX.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.kunzisoft.keepass.libre/&#34;&gt;F-Droid&lt;/a&gt; is the recommended way of installing, a libre software project that verifies that all the libraries and app code is libre software.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.kunzisoft.keepass.libre/&#34;&gt;&lt;img src=&#34;https://f-droid.org/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.kunzisoft.keepass.free&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; &#xA;&lt;p&gt;Other questions? You can read the &lt;a href=&#34;https://github.com/Kunzisoft/KeePassDX/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Other devices&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://keepass.info/&#34;&gt;KeePass&lt;/a&gt; (&lt;a href=&#34;https://keepass.info/&#34;&gt;https://keepass.info/&lt;/a&gt;) is the original and official project for the desktop, with technical documentation for standardized database files. It is updated regularly with active maintenance (written in C#).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://keepassxc.org/&#34;&gt;KeePassXC&lt;/a&gt; (&lt;a href=&#34;https://keepassxc.org/&#34;&gt;https://keepassxc.org/&lt;/a&gt;) is an alternative integration of KeePass written in C++.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://keeweb.info/&#34;&gt;KeeWeb&lt;/a&gt; (&lt;a href=&#34;https://keeweb.info/&#34;&gt;https://keeweb.info/&lt;/a&gt;) is a web version that is also compatible with KeePass files.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright ¬© 2022 Jeremy Jamet / &lt;a href=&#34;https://www.kunzisoft.com&#34;&gt;Kunzisoft&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This file is part of KeePassDX.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.keepassdx.com&#34;&gt;KeePassDX&lt;/a&gt; is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;KeePassDX is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with KeePassDX. If not, see &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;This project is a fork of &lt;a href=&#34;https://github.com/bpellin/keepassdroid&#34;&gt;KeePassDroid&lt;/a&gt; by bpellin.&lt;/em&gt;&lt;/p&gt;</summary>
  </entry>
</feed>