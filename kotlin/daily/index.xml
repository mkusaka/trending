<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-10-25T01:32:31Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>autonomousapps/dependency-analysis-gradle-plugin</title>
    <updated>2024-10-25T01:32:31Z</updated>
    <id>tag:github.com,2024-10-25:/autonomousapps/dependency-analysis-gradle-plugin</id>
    <link href="https://github.com/autonomousapps/dependency-analysis-gradle-plugin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Gradle plugin for JVM projects written in Java, Kotlin, Groovy, or Scala; and Android projects written in Java or Kotlin. Provides advice for managing dependencies and other applied plugins&lt;/p&gt;&lt;hr&gt;&lt;div class=&#34;imageblock&#34;&gt; &#xA; &lt;div class=&#34;content&#34;&gt; &#xA;  &lt;a class=&#34;image&#34; href=&#34;https://mvnrepository.com/artifact/com.autonomousapps.dependency-analysis/com.autonomousapps.dependency-analysis.gradle.plugin&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v.svg?label=release&amp;amp;metadataUrl=https%3A%2F%2Frepo1.maven.org%2Fmaven2%2Fcom%2Fautonomousapps%2Fdependency-analysis%2Fcom.autonomousapps.dependency-analysis.gradle.plugin%2Fmaven-metadata.xml&#34; alt=&#34;Latest version&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;imageblock&#34;&gt; &#xA; &lt;div class=&#34;content&#34;&gt; &#xA;  &lt;a class=&#34;image&#34; href=&#34;https://oss.sonatype.org/#nexus-search;gav~com.autonomousapps.dependency-analysis~com.autonomousapps.dependency-analysis.gradle.plugin~~~~kw,versionexpand&#34;&gt;&lt;img src=&#34;https://img.shields.io/nexus/s/com.autonomousapps/dependency-analysis-gradle-plugin?label=snapshot&amp;amp;server=https%3A%2F%2Foss.sonatype.org&#34; alt=&#34;Latest snapshot&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;imageblock&#34;&gt; &#xA; &lt;div class=&#34;content&#34;&gt; &#xA;  &lt;a class=&#34;image&#34; href=&#34;https://github.com/autonomousapps/dependency-analysis-android-gradle-plugin/actions/workflows/push.yml?query=branch%3Amain&#34;&gt;&lt;img src=&#34;https://github.com/autonomousapps/dependency-analysis-android-gradle-plugin/workflows/Main/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_detect_unused_and_misused_dependencies&#34;&gt;Detect unused and misused dependencies&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The Dependency Analysis Gradle Plugin (DAGP, née Dependency Analysis Android Gradle Plugin) detects the following:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;Unused dependencies.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Used transitive dependencies (which you may want to declare directly).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Dependencies declared on the wrong configuration (&lt;code&gt;api&lt;/code&gt; vs &lt;code&gt;implementation&lt;/code&gt; vs &lt;code&gt;compileOnly&lt;/code&gt;, etc.).&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;As a side effect, the plugin can also tell you your project’s ABI, and produces graphviz files representing various views of your dependency graph, among other things. These side effects are currently mostly undocumented internal behaviors, but they may be interesting for some advanced users.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_build_health&#34;&gt;Build health&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;In addition to the dependency-related advice (see above), DAGP provides other advice to help maintain your &#34;build health.&#34; This includes the detection of:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;Unnecessary plugins (currently only &lt;code&gt;kapt&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Subprojects (&#34;modules&#34;) that unnecessarily use the Android plugin, and could instead by &#34;normal&#34; JVM libraries.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_compatibilities&#34;&gt;Compatibilities&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Please see the &lt;a href=&#34;https://github.com/autonomousapps/dependency-analysis-android-gradle-plugin/wiki/Compatibilities-&amp;amp;-Limitations&#34;&gt;wiki&lt;/a&gt; for information on the versions of Gradle, the Android Gradle Plugin, etc., that this plugin is compatible with.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_add_to_your_project_and_use&#34;&gt;Add to your project and use&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;For detailed instructions, see &lt;a href=&#34;https://github.com/autonomousapps/dependency-analysis-android-gradle-plugin/wiki/Adding-to-your-project&#34;&gt;the wiki&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The simplest approach is to add the following:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;title&#34;&gt;&#xA;    root settings.gradle[.kts]&#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;plugins {&#xA;  id(&#34;com.autonomousapps.build-health&#34;) version &#34;&amp;lt;&amp;lt;latest_version&amp;gt;&amp;gt;&#34;&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;admonitionblock important&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Important&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; If your project uses Kotlin or Android (or both), then those plugins must also be loaded in the settings script classloader (or a parent). See &lt;a href=&#34;https://github.com/autonomousapps/dependency-analysis-gradle-plugin/wiki/Adding-to-your-project&#34;&gt;the wiki&lt;/a&gt; for more information &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;For a quick start, just run the following:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;./gradlew buildHealth&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;You will probably see output like the following:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;&amp;gt; Task :buildHealth FAILED&#xA;&#xA;FAILURE: Build failed with an exception.&#xA;&#xA;* What went wrong:&#xA;Execution failed for task &#39;:buildHealth&#39;.&#xA;&amp;gt; There were dependency violations. See report at file:///path/to/project/build/reports/dependency-analysis/build-health-report.txt&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;If you wish to have this (potentially very long) report printed to console, add this to your &lt;code&gt;gradle.properties&lt;/code&gt; file:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;title&#34;&gt;&#xA;    gradle.properties&#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code&gt;dependency.analysis.print.build.health=true&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_more_advanced_usage&#34;&gt;More advanced usage&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;You do not have to apply this plugin to all projects via the settings script. It can also be applied to only specific subprojects. In this case, it must also be applied to the root build script.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;title&#34;&gt;&#xA;    root build.gradle[.kts]&#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;plugins {&#xA;  id(&#34;com.autonomousapps.dependency-analysis&#34;) version &#34;&amp;lt;&amp;lt;latest_version&amp;gt;&amp;gt;&#34;&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;title&#34;&gt;&#xA;    sub/project/build.gradle[.kts]&#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;plugins {&#xA;  id(&#34;com.autonomousapps.dependency-analysis&#34;)&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;admonitionblock important&#34;&gt; &#xA;   &lt;table&gt; &#xA;    &lt;tbody&gt;&#xA;     &lt;tr&gt; &#xA;      &lt;td class=&#34;icon&#34;&gt; &#xA;       &lt;div class=&#34;title&#34;&gt;&#xA;        Important&#xA;       &lt;/div&gt; &lt;/td&gt; &#xA;      &lt;td class=&#34;content&#34;&gt; If your project uses Kotlin or Android (or both), then those plugins must also be loaded in the root build script classloader (or a parent). See &lt;a href=&#34;https://github.com/autonomousapps/dependency-analysis-gradle-plugin/wiki/Adding-to-your-project&#34;&gt;the wiki&lt;/a&gt; for more information &lt;/td&gt; &#xA;     &lt;/tr&gt; &#xA;    &lt;/tbody&gt;&#xA;   &lt;/table&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_project_health&#34;&gt;Project Health&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The analysis can be run against individual modules with the &lt;code&gt;projectHealth&lt;/code&gt; task. For example:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;./gradlew app:projectHealth&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_fix_dependency_issues_automatically&#34;&gt;Fix dependency issues automatically&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;It is common for the plugin to report many issues with your project’s dependency declarations. Since fixing manually can be tedious, the plugin also provides a task to auto-remediate all issues.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;./gradlew fixDependencies&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The &lt;code&gt;fixDependencies&lt;/code&gt; task is registered on each project where the plugin is applied. Running it as above will run the task in each subproject. See also &lt;a href=&#34;https://dev.to/autonomousapps/one-click-dependencies-fix-191p&#34;&gt;&lt;em&gt;One click dependencies fix&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;_fix_only_some_dependency_issues_automatically&#34;&gt;Fix only some dependency issues automatically&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;In some circumstances, it may be considered infeasible to resolve all issues in one pass. Maybe you have a very large project, or you publish libraries and you know that changing your dependency declarations will also change your libraries&#39; metadata, which might break consumers. To support this use-case, the the &lt;code&gt;fixDependencies&lt;/code&gt; task takes an optional flag to tell it to, essentially, make only &#34;safe&#34; changes.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;listingblock&#34;&gt; &#xA;     &lt;div class=&#34;content&#34;&gt; &#xA;      &lt;pre&gt;./gradlew fixDependencies --upgrade&lt;/pre&gt; &#xA;     &lt;/div&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;With this flag in place, the &lt;code&gt;fixDependencies&lt;/code&gt; task will not remove or &#34;downgrade&#34; any dependency declarations. It will only add or &#34;upgrade&#34; declarations (e.g., from &lt;code&gt;implementation&lt;/code&gt; to &lt;code&gt;api&lt;/code&gt;).&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;In an incremental rollout scenario, one could imagine using the &lt;code&gt;--upgrade&lt;/code&gt; flag, then updating all consumers, then finally removing the flag and removing all unused dependencies.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;sect3&#34;&gt; &#xA;    &lt;h4 id=&#34;_caveats&#34;&gt;Caveats&lt;/h4&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;If the analysis has any bugs, then fixing the dependency declarations make break your build (but this is also the case with manual fixes). If you encounter this, please &lt;a href=&#34;https://github.com/autonomousapps/dependency-analysis-gradle-plugin/issues/new/choose&#34;&gt;file an issue&lt;/a&gt;.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;paragraph&#34;&gt; &#xA;     &lt;p&gt;Additionally, the rewriting functionality is based on a simplified Gradle Groovy/Kotlin DSL grammar, which will fail in the presence of complex build scripts. We plan to enhance the Gradle Kotlin DSL grammar soon, since it is the default build script language, but we have no current plans to do the same for Gradle Groovy DSL.&lt;/p&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_reason&#34;&gt;Reason&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;You may be curious why the plugin is emitting (or not emitting) advice regarding some dependency. You can ask it why:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;./gradlew lib:reason --id com.squareup.okio:okio:2.2.2 &lt;b class=&#34;conum&#34;&gt;(1)&lt;/b&gt;&#xA;&amp;gt; Task :lib:reason&#xA;&#xA;----------------------------------------&#xA;You asked about the dependency &#39;com.squareup.okio:okio:2.2.2&#39;.&#xA;There is no advice regarding this dependency.&#xA;----------------------------------------&#xA;&#xA;Shortest path from :lib to com.squareup.okio:okio:2.2.2:&#xA;:lib&#xA;--- com.squareup.okio:okio:2.2.2&#xA;&#xA;Source: main&#xA;------------&#xA;* Exposes class okio.BufferedSource (implies api).&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;colist arabic&#34;&gt; &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt; &lt;p&gt;The version string is optional.&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;/ol&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_basic_configuration&#34;&gt;Basic configuration&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;For detailed information on how to configure the plugin, see &lt;a href=&#34;https://github.com/autonomousapps/dependency-analysis-android-gradle-plugin/wiki/Customizing-plugin-behavior&#34;&gt;the wiki&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;To configure the plugin, use the &lt;a href=&#34;https://github.com/autonomousapps/dependency-analysis-android-gradle-plugin/raw/main/src/main/kotlin/com/autonomousapps/DependencyAnalysisExtension.kt&#34;&gt;&lt;code&gt;dependencyAnalysis&lt;/code&gt;&lt;/a&gt; extension.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;title&#34;&gt;&#xA;     build.gradle&#xA;    &lt;/div&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-groovy&#34; data-lang=&#34;groovy&#34;&gt;dependencyAnalysis {&#xA;  // configuration goes here&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_publications&#34;&gt;Publications&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The following is a list of articles / blog posts that have been published discussing this plugin:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dev.to/autonomousapps/the-proper-care-and-feeding-of-your-gradle-build-d8g&#34;&gt;The proper care and feeding of your Gradle build&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dev.to/autonomousapps/dependency-analysis-gradle-plugin-using-bytecode-analysis-to-find-unused-dependencies-509n&#34;&gt;Dependency Analysis Gradle Plugin: Using bytecode analysis to find unused dependencies&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dev.to/autonomousapps/dependency-analysis-gradle-plugin-what-s-an-abi-3l2h&#34;&gt;Dependency Analysis Gradle Plugin: What’s an ABI?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://dev.to/autonomousapps/reducing-my-gradle-plugin-s-impact-on-configuration-time-a-journey-32h2&#34;&gt;Reducing my Gradle plugin’s impact on configuration time: A journey&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;…​with more to come :)&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;This plugin has also been featured in these newsletters:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://newsletter.gradle.com/2022/05&#34;&gt;Gradle, May 2022&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://newsletter.gradle.com/2020/09&#34;&gt;Gradle, September 2020&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://newsletter.gradle.com/2020/08&#34;&gt;Gradle, August 2020&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://androidweekly.net/issues/issue-423&#34;&gt;Android Weekly, Issue #423&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://newsletter.gradle.com/2020/07&#34;&gt;Gradle, July 2020&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://newsletter.gradle.com/2020/06&#34;&gt;Gradle, June 2020&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Podcast episodes about this plugin could be found here:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://thebakery.dev/31/&#34;&gt;The Developers&#39; Bakery, Episode #31&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Youtube videos about this plugin:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://youtu.be/Lipf5piizZc&#34;&gt;Understanding Gradle #28 – Clean Compile Classpaths with the Dependency Analysis Plugin&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>