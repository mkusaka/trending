<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-01-09T01:32:23Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>openMF/android-client</title>
    <updated>2025-01-09T01:32:23Z</updated>
    <id>tag:github.com,2025-01-09:/openMF/android-client</id>
    <link href="https://github.com/openMF/android-client" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An android client for the MifosX platform&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/37406965/51083189-d5dc3a80-173b-11e9-8ca0-28015e0893ac.png&#34; alt=&#34;Android Client&#34;&gt; &#xA; &lt;h1&gt;Android-Client Android Application for MifosX&lt;/h1&gt; &#xA; &lt;p&gt;This Android application is built on the powerful &lt;a href=&#34;https://mifosforge.jira.com/wiki/spaces/MIFOSX/overview&#34;&gt;MifosX&lt;/a&gt; platform and written in Kotlin. MifosX is a comprehensive core banking platform designed for field officers to efficiently process transactions, manage client data, track center records, group details, and handle various types of accounts such as loans, savings, and recurring accounts. The application&#39;s primary goal is to streamline field operations, making them easier and more efficient.&lt;/p&gt; &#xA; &lt;p&gt;One of the standout features of this application is its offline capability, allowing officers to connect with clients and provide financial support even in remote areas. This ensures that clients in underserved areas can still access the financial services they need.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-%237F52FF.svg?style=flat-square&amp;amp;logo=kotlin&amp;amp;logoColor=white&#34; alt=&#34;Kotlin&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Kotlin%20Multiplatform-4c8d3f?style=flat-square&amp;amp;logo=kotlin&amp;amp;logoColor=white&#34; alt=&#34;Kotlin Multiplatform&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Android-3DDC84?style=flat-square&amp;amp;logo=android&amp;amp;logoColor=white&#34; alt=&#34;Android&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;http://makeapullrequest.com&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/openMF/android-client/raw/main/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/openMF/android-client&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/openMF/android-client/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/openMF/android-client&#34; alt=&#34;Release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/openMF/android-client/actions/workflows/pr-check-android.yml&#34;&gt;&lt;img src=&#34;https://github.com/openMF/android-client/actions/workflows/pr-check-android.yml/badge.svg?sanitize=true&#34; alt=&#34;PR Checks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://join.slack.com/t/mifos/shared_invite/zt-2wvi9t82t-DuSBdqdQVOY9fsqsLjkKPA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Slack-4A154B?style=flat-square&amp;amp;logo=slack&amp;amp;logoColor=white&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mifosforge.jira.com/jira/software/c/projects/MIFOSAC/issues/?filter=allissues&amp;amp;jql=project%20%3D%20%22MM%22%20ORDER%20BY%20created%20DESC&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/jira-%230A0FFF.svg?style=flat-square&amp;amp;logo=jira&amp;amp;logoColor=white&#34; alt=&#34;Jira&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!Note] &lt;strong&gt;We&#39;re moving towards to Jira for issue tracking. Please use &lt;a href=&#34;https://mifosforge.jira.com/jira/software/c/projects/MIFOSAC/issues/&#34;&gt;Jira&lt;/a&gt; for issue tracking.&lt;/strong&gt; &lt;strong&gt;And Join our &lt;a href=&#34;https://join.slack.com/t/mifos/shared_invite/zt-2wvi9t82t-DuSBdqdQVOY9fsqsLjkKPA&#34;&gt;slack&lt;/a&gt; community channel &lt;code&gt;android-client&lt;/code&gt; to discuss all things about Android Client development. Please keep discussions focused and avoid cross-posting across channels.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Demo credentials&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fineract Instance&lt;/strong&gt;: &lt;code&gt;gsoc.mifos.community&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Username&lt;/strong&gt;: &lt;code&gt;mifos&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Password&lt;/strong&gt;: &lt;code&gt;password&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to Contribute&lt;/h2&gt; &#xA;&lt;p&gt;Thank you for your interest in contributing to the Mifos Mobile project by Mifos! We welcome all contributions and encourage you to follow these guidelines to ensure a smooth and efficient collaboration process. To get started, please refer to the &lt;a href=&#34;https://github.com/openMF/android-client/wiki/Contribution-Guide&#34;&gt;Contribution Guide&lt;/a&gt; for detailed instructions on how to contribute to the project.&lt;/p&gt; &#xA;&lt;h2&gt;Branch Policy&lt;/h2&gt; &#xA;&lt;p&gt;For development purposes, always pull from the &lt;strong&gt;development&lt;/strong&gt; branch, as all contributions and updates are merged into this branch. Upon completion of development, changes are subsequently merged into the &lt;strong&gt;master&lt;/strong&gt; branch, which represents the stable and bug-free version of the code&lt;/p&gt; &#xA;&lt;h2&gt;Development Setup&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://github.com/openMF/android-client/wiki/Set-up-an-environment&#34;&gt;Development Setup Guide&lt;/a&gt; for detailed instructions on configuring the development environment.&lt;/p&gt; &#xA;&lt;h2&gt;Committing Your Changes&lt;/h2&gt; &#xA;&lt;p&gt;After making changes in your local repository, you will need to commit them to your GitHub repository. If you are unfamiliar with the process of committing changes, please refer to the &lt;a href=&#34;https://github.com/openMF/android-client/wiki/Committing-Your-Changes&#34;&gt;Committing Your Changes&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Squashing Your Commits&lt;/h2&gt; &#xA;&lt;p&gt;To ensure a clean and organized Git history, contributors are encouraged to squash their commits before merging. Instructions on how to squash commits can be found in the &lt;a href=&#34;https://github.com/openMF/android-client/wiki/Squashing-Your-Commits&#34;&gt;Squashing Your Commits&lt;/a&gt; guide.&lt;/p&gt; &#xA;&lt;h2&gt;Resolving Merge Conflicts&lt;/h2&gt; &#xA;&lt;p&gt;Occasionally, merge conflicts may arise when your pull request is being reviewed. These conflicts need to be resolved manually. To learn how to resolve merge conflicts, please refer to the &lt;a href=&#34;https://github.com/openMF/android-client/wiki/Solving-Merge-Conflicts&#34;&gt;Solving Merge Conflicts&lt;/a&gt; guide&lt;/p&gt; &#xA;&lt;h2&gt;Code of Conduct&lt;/h2&gt; &#xA;&lt;p&gt;Mifos has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&#34;https://raw.githubusercontent.com/openMF/android-client/dev/CODE_OF_CONDUCT.md&#34;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;Please visit our &lt;a href=&#34;https://github.com/openMF/android-client/wiki&#34;&gt;Wiki&lt;/a&gt; page for a detailed overview of the project&#39;s architecture and guidelines. Explore further to gain a deeper understanding of our project.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the open source &lt;a href=&#34;https://github.com/openMF/android-client/raw/master/LICENSE.md&#34;&gt;MPL V2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributors&lt;/h2&gt; &#xA;&lt;p&gt;Special thanks to the incredible code contributors who continue to drive this project forward.&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/openMF/android-client/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=openMF/android-client&#34;&gt; &lt;/a&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/android</title>
    <updated>2025-01-09T01:32:23Z</updated>
    <id>tag:github.com,2025-01-09:/JetBrains/android</id>
    <link href="https://github.com/JetBrains/android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android Plugin for IntelliJ IDEA. This repository is a subset of https://git.jetbrains.org/?p=idea/android.git cut according to GitHub file size limitations.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Studio&lt;/h1&gt; &#xA;&lt;p&gt;This is the source code of the Android plugin for IntelliJ platform, which is also the main part of Android Studio.&lt;/p&gt; &#xA;&lt;p&gt;See the links below for implementation details and make sure to read &lt;a href=&#34;http://www.jetbrains.org/intellij/sdk/docs/welcome.html&#34;&gt;IntelliJ Platform SDK docs&lt;/a&gt; first.&lt;/p&gt; &#xA;&lt;h2&gt;Contents:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/docs/android-light-classes.md&#34;&gt;Android light classes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/assistant/src/com/android/tools/idea/assistant/README.md&#34;&gt;Assistant&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/src/com/android/tools/idea/ui/resourcechooser/colorpicker2/README.md&#34;&gt;Color picker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android-lang/src/com/android/tools/idea/lang/README.md&#34;&gt;Custom languages&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android-lang/src/com/android/tools/idea/lang/androidSql/README.md&#34;&gt;AndroidSql language support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/src/org/jetbrains/android/dom/README.md&#34;&gt;DOM&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android-lang-databinding/README.md&#34;&gt;Databinding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/docs/disposables.md&#34;&gt;Disposable system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/docs/kotlin-light-classes.md&#34;&gt;Kotlin light-classes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/designer/src/com/android/tools/idea/common/scene/README.md.html&#34;&gt;Layout editor placeholder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/docs/logging.md&#34;&gt;Logging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/designer/src/com/android/tools/idea/uibuilder/scene/target/README.md.html&#34;&gt;Notch&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/observable/src/com/android/tools/idea/observable/README.md&#34;&gt;Observables&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/docs/progress.md&#34;&gt;Progress system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/designer/src/com/android/tools/idea/common/property2/README.md.html&#34;&gt;Property inspector&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/designer/src/com/android/tools/idea/uibuilder/handlers/relative/targets/README.md.html&#34;&gt;Relative layout&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/src/com/android/tools/idea/res/README.md&#34;&gt;Resources system&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/src/com/android/tools/idea/run/README.md&#34;&gt;Run configurations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android-uitests/README.md&#34;&gt;UI tests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/android/master/android/docs/undo.md&#34;&gt;Undo and WriteCommandAction&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>meganz/android</title>
    <updated>2025-01-09T01:32:23Z</updated>
    <id>tag:github.com,2025-01-09:/meganz/android</id>
    <link href="https://github.com/meganz/android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;MEGA Android App&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MEGA Android Client&lt;/h1&gt; &#xA;&lt;p&gt;A fully-featured client to access your Cloud Storage provided by MEGA.&lt;/p&gt; &#xA;&lt;p&gt;This document will guide you to build the application on a Linux/MacOS machine with Android Studio.&lt;/p&gt; &#xA;&lt;h3&gt;1. Setup development environment&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.android.com/studio#Other&#34;&gt;Android SDK Tools&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://developer.android.com/ndk/downloads&#34;&gt;Android NDK&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;2. Build &amp;amp; Run the application&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Get the source code.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone --recursive https://github.com/meganz/android.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;3. NDK Configuration&lt;/h3&gt; &#xA;&lt;h4&gt;3.1 Linux&lt;/h4&gt; &#xA;&lt;p&gt;Install in the system the &lt;strong&gt;&lt;a href=&#34;https://dl.google.com/android/repository/android-ndk-r21d-linux-x86_64.zip&#34;&gt;Android NDK&lt;/a&gt; &lt;a href=&#34;https://dl.google.com/android/repository/android-ndk-r21b-linux-x86_64.zip&#34;&gt;21&lt;/a&gt;&lt;/strong&gt; (latest version tested: NDK r21d, version number: 21.3.6528147).&lt;/p&gt; &#xA;&lt;p&gt;Export &lt;code&gt;NDK_ROOT&lt;/code&gt; variable or create a symbolic link at &lt;code&gt;${HOME}/android-ndk&lt;/code&gt; to point to your Android NDK installation path.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;export NDK_ROOT=/path/to/ndk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ln -s /path/to/ndk ${HOME}/android-ndk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;3.2 MacOS&lt;/h4&gt; &#xA;&lt;p&gt;Install NDK r21d by Android Studio following &lt;a href=&#34;https://developer.android.com/studio/projects/install-ndk#specific-version&#34;&gt;these instructions&lt;/a&gt; (pay attention to the bottom-right &lt;code&gt;Show Package Details&lt;/code&gt; checkbox to display the available versions. Latest version tested: NDK r21d, version number: 21.3.6528147)&lt;/p&gt; &#xA;&lt;p&gt;Export &lt;code&gt;NDK_ROOT&lt;/code&gt; variable or create a symbolic link at &lt;code&gt;${HOME}/android-ndk&lt;/code&gt; to point to your Android NDK installation path.&lt;/p&gt; &#xA;&lt;p&gt;Default macOS path: &lt;code&gt;export NDK_ROOT=&#34;/Users/${USER}/Library/Android/sdk/ndk/21.3.6528147&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ln -s /path/to/ndk ${HOME}/android-ndk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;4. ANDROID_HOME Configuration&lt;/h3&gt; &#xA;&lt;h4&gt;4.1 Linux&lt;/h4&gt; &#xA;&lt;p&gt;Export &lt;code&gt;ANDROID_HOME&lt;/code&gt; variable or create a symbolic link at &lt;code&gt;${HOME}/android-sdk&lt;/code&gt; to point to your Android SDK installation path.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;export ANDROID_HOME=/path/to/sdk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ln -s /path/to/sdk ${HOME}/android-sdk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4.2 MacOS&lt;/h4&gt; &#xA;&lt;p&gt;Export &lt;code&gt;ANDROID_HOME&lt;/code&gt; variable or create a symbolic link at &lt;code&gt;${HOME}/android-sdk&lt;/code&gt; to point to your Android SDK installation path.&lt;/p&gt; &#xA;&lt;p&gt;Default macOS path: &lt;code&gt;export ANDROID_HOME=&#34;/Users/${USER}/Library/Android/sdk/&#34;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ln -s /path/to/sdk ${HOME}/android-sdk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;5. JAVA_HOME Configuration&lt;/h3&gt; &#xA;&lt;h4&gt;5.1 Linux&lt;/h4&gt; &#xA;&lt;p&gt;Export &lt;code&gt;JAVA_HOME&lt;/code&gt; variable or create a symbolic link at &lt;code&gt;${HOME}/android-java&lt;/code&gt; to point to your Java installation path.&lt;/p&gt; &#xA;&lt;p&gt;You can use the path in Android Studio, which you can find in &lt;code&gt;Preferences &amp;gt; Build, Execution, Deployment &amp;gt; Build Tools &amp;gt; Gradle &amp;gt; Gradle JDK (default)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;export JAVA_HOME=/path/to/jdk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ln -s /path/to/jdk ${HOME}/android-java&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;5.2 MacOS&lt;/h4&gt; &#xA;&lt;p&gt;Export &lt;code&gt;JAVA_HOME&lt;/code&gt; variable or create a symbolic link at &lt;code&gt;${HOME}/android-java&lt;/code&gt; to point to your Java installation path.&lt;/p&gt; &#xA;&lt;p&gt;You can use the path in Android Studio, which you can find in &lt;code&gt;Preferences &amp;gt; Build, Execution, Deployment &amp;gt; Build Tools &amp;gt; Gradle &amp;gt; Gradle JDK (default)&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Default macOS path: &lt;code&gt;export JAVA_HOME=&#34;/Applications/Android Studio.app/Contents/jre/Contents/Home&#34;&lt;/code&gt;)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ln -s /path/to/jdk ${HOME}/android-java&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;6. Download WEBRTC files&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Download the link &lt;a href=&#34;https://mega.nz/file/F0YThaQR#FgoSW-XuxwHVr-9SNmVcP_JWG8B0Q6ogT9By3fEiEDc&#34;&gt;https://mega.nz/file/F0YThaQR#FgoSW-XuxwHVr-9SNmVcP_JWG8B0Q6ogT9By3fEiEDc&lt;/a&gt;, uncompress it and put the folder &lt;code&gt;webrtc&lt;/code&gt; in the path &lt;code&gt;sdk/src/main/jni/megachat/&lt;/code&gt;.Be mindful that the download link of webrtc may varies over time, please keep it in line with the one written in build.sh&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;7. Prerequisites of running the build script&lt;/h3&gt; &#xA;&lt;h4&gt;7.1 Linux&lt;/h4&gt; &#xA;&lt;p&gt;Before running the SDK building script, install the required packages. For example for Ubuntu or other Debian-based distro:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;sudo apt install build-essential swig automake libtool autoconf cmake ninja-build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ATTENTION:&lt;/strong&gt; After upgrading ExoPlayer to 2.18.1, we need to use CMake version 3.22.1&lt;/p&gt; &#xA;&lt;p&gt;Then install CMake version 3.22.1 in &lt;code&gt;Android Studio &amp;gt; Tools &amp;gt; SDK Manager &amp;gt; SDK Tools &amp;gt; CMake&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After installation, add below line in &lt;code&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;export PATH=&#34;/home/$USER/Android/Sdk/cmake/3.22.1/bin:$PATH&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;You will need to source your &lt;code&gt;~/.bashrc&lt;/code&gt; or logout/login (or restart the terminal) for the changes to take effect. To source your &lt;code&gt;~/.bashrc&lt;/code&gt;, simply type:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h4&gt;7.2 MacOS&lt;/h4&gt; &#xA;&lt;p&gt;Before running the SDK building script, install the required dependencies via HomeBrew:&lt;/p&gt; &#xA;&lt;p&gt;Except below tools, please do not use HomeBrew to install other tools, according to SysAdmin&#39;s advice.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;brew install bash gnu-sed gnu-tar autoconf automake cmake coreutils libtool swig wget xz python3&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then reboot MacOS - to ensure newly installed latest bash (v5.x) overrides default v3.x in PATH&lt;/p&gt; &#xA;&lt;p&gt;Then edit PATH env (Please make sure the gnu paths are setup in front of $PATH):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Intel chip, add below lines in &lt;code&gt;~/.zshrc&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;export PATH=&#34;/usr/local/opt/gnu-tar/libexec/gnubin:$PATH&#34;&lt;/code&gt;&lt;br&gt; &lt;code&gt;export PATH=&#34;/usr/local/opt/gnu-sed/libexec/gnubin:$PATH&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For Apple chip, add below lines in &lt;code&gt;~/.zshrc&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;export PATH=&#34;/opt/homebrew/opt/gnu-tar/libexec/gnubin:$PATH&#34;&lt;/code&gt;&lt;br&gt; &lt;code&gt;export PATH=&#34;/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;ln -s /opt/homebrew/bin/python3 /opt/homebrew/bin/python&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ATTENTION:&lt;/strong&gt; After upgrading ExoPlayer to 2.18.1, we need to use CMake version 3.22.1&lt;/p&gt; &#xA;&lt;p&gt;Then install CMake version 3.22.1 in &lt;code&gt;Android Studio &amp;gt; Tools &amp;gt; SDK Manager &amp;gt; SDK Tools &amp;gt; CMake&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;You have to tick checkbox &#39;Show Package Details&#39; to display this specific version. After installation, add below line in &lt;code&gt;~/.zshrc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;export PATH=&#34;/Users/${USER}/Library/Android/sdk/cmake/3.22.1/bin:$PATH&#34;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;8. Running the Build Script&lt;/h3&gt; &#xA;&lt;p&gt;Build SDK by running &lt;code&gt;./build.sh all&lt;/code&gt; at &lt;code&gt;sdk/src/main/jni/&lt;/code&gt;. You could also run &lt;code&gt;./build.sh clean&lt;/code&gt; to clean the previous configuration.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; check that the build process finished successfully, it should finish with the &lt;strong&gt;Task finished OK&lt;/strong&gt; message. Otherwise, modify &lt;code&gt;LOG_FILE&lt;/code&gt; variable in &lt;code&gt;build.sh&lt;/code&gt; from &lt;code&gt;/dev/null&lt;/code&gt; to a certain text file and run &lt;code&gt;./build.sh all&lt;/code&gt; again for viewing the build errors.&lt;/p&gt; &#xA;&lt;p&gt;In case of an error (seen in the log file mentioned) due to licenses not accepted, you can read and accept the licenses with the sdkmanager command-line tool (if you downloaded them)&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;/path-to-cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;9. Download Required Files&lt;/h3&gt; &#xA;&lt;p&gt;Download the link &lt;a href=&#34;https://mega.nz/#!1tcl3CrL!i23zkmx7ibnYy34HQdsOOFAPOqQuTo1-2iZ5qFlU7-k&#34;&gt;https://mega.nz/#!1tcl3CrL!i23zkmx7ibnYy34HQdsOOFAPOqQuTo1-2iZ5qFlU7-k&lt;/a&gt;, uncompress it and put the folders &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; in the path &lt;code&gt;app/src/&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;10. Disable pre-built SDK&lt;/h3&gt; &#xA;&lt;p&gt;Open &lt;code&gt;buildSrc/src/main/kotlin/mega/privacy/android/build/Util.kt&lt;/code&gt;, change method &lt;code&gt;shouldUsePrebuiltSdk()&lt;/code&gt; to below.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun shouldUsePrebuiltSdk(): Boolean = false&#xA;//        System.getenv(&#34;USE_PREBUILT_SDK&#34;)?.let { it != &#34;false&#34; } ?: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Open &lt;code&gt;settings.gradle.kts&lt;/code&gt;, change method &lt;code&gt;shouldUsePrebuiltSdk()&lt;/code&gt; to below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun shouldUsePrebuiltSdk(): Boolean = false&#xA;//        System.getenv(&#34;USE_PREBUILT_SDK&#34;)?.let { it != &#34;false&#34; } ?: true&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;11. Build mobile analytics library locally&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note: You need to occasionally redo this section to make sure latest analytics library is used.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and build &lt;a href=&#34;https://github.com/meganz/mobile-analytics&#34;&gt;Mobile Analytics&lt;/a&gt; source code.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone --recursive https://github.com/meganz/mobile-analytics.git&#xA;cd mobile-analytics&#xA;git checkout main&#xA;./gradlew assembleRelease&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Copy below generated libraries to root of MEGA code&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;shared/build/outputs/aar/shared-release.aar&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;analytics-core/build/outputs/aar/analytics-core-release.aar&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;analytics-annotations/build/outputs/aar/analytics-annotations-release.aar&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Modify MEGA code to depend on local AAR files&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Search &lt;code&gt;implementation(lib.mega.analytics)&lt;/code&gt; in whole project, and replace all occurrences with below code. Note you may need to add a &lt;code&gt;..&lt;/code&gt; to the path if the &lt;code&gt;build.gradle.kts&lt;/code&gt; is in a subproject. &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;//    implementation(lib.mega.analytics)&#xA;    implementation(files(&#34;../shared-release.aar&#34;))&#xA;    implementation(files(&#34;../analytics-core-release.aar&#34;))&#xA;    implementation(files(&#34;../analytics-annotations-release.aar&#34;)) &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;12. Disable library dependencies&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;in root &lt;code&gt;build.gradle.kts&lt;/code&gt;, comment out below codes. &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;id(&#34;mega.android.release&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt;in &lt;code&gt;settings.gradle.kts&lt;/code&gt;, comment out below code &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt; maven {&#xA;     url =&#xA;         uri(&#34;${System.getenv(&#34;ARTIFACTORY_BASE_URL&#34;)}/artifactory/mega-gradle/megagradle&#34;)&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; and &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;resolutionStrategy {&#xA;    eachPlugin {&#xA;        if (requested.id.id == &#34;mega.android.release&#34;) {&#xA;            useModule(&#34;mega.privacy:megagradle:${requested.version}&#34;)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;13. Run the project&lt;/h3&gt; &#xA;&lt;p&gt;Open the project with Android Studio, let it build the project and hit &lt;em&gt;&lt;em&gt;Run&lt;/em&gt;&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;If the build script fails to detect cmake when building ffmpeg extension on a mac&lt;/h5&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In Android studio, open the SDK manager (Or through Settings&amp;gt;Appearance &amp;amp; Behaviour&amp;gt;System Settings&amp;gt;Android SDK)&lt;/li&gt; &#xA; &lt;li&gt;Go to the SDK Tools tab&lt;/li&gt; &#xA; &lt;li&gt;Check the &#34;Show package details&#34; box&lt;/li&gt; &#xA; &lt;li&gt;Expand the CMake section in the list&lt;/li&gt; &#xA; &lt;li&gt;Select 3.22.1&lt;/li&gt; &#xA; &lt;li&gt;Click &#34;OK&#34;&lt;/li&gt; &#xA; &lt;li&gt;Add the following to your PATH: &lt;code&gt;export PATH=&#34;/Users/{USERNAME}/Library/Android/sdk/cmake/3.22.1/bin:$PATH&#34;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Retry the build&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Notice&lt;/h3&gt; &#xA;&lt;p&gt;To use the &lt;em&gt;geolocation feature&lt;/em&gt; you need a &lt;em&gt;Google Maps API key&lt;/em&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;To get one, follow the directions here: &lt;a href=&#34;https://developers.google.com/maps/documentation/android/signup&#34;&gt;https://developers.google.com/maps/documentation/android/signup&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Once you have your key, replace the &#34;google_maps_key&#34; string in these files: &lt;code&gt;app/src/debug/res/values/google_maps_api.xml&lt;/code&gt; and &lt;code&gt;app/src/release/res/values/google_maps_api.xml&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
</feed>