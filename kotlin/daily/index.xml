<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-14T01:36:27Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>frank-nhatvm/fatherofapps-android-mvvm</title>
    <updated>2022-09-14T01:36:27Z</updated>
    <id>tag:github.com,2022-09-14:/frank-nhatvm/fatherofapps-android-mvvm</id>
    <link href="https://github.com/frank-nhatvm/fatherofapps-android-mvvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A base source code for Android App. It is written by kotlin and followed the Google&#39;s guide : https://developer.android.com/jetpack/guide .&lt;/p&gt;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>hide-your-code/weather_compose_clean_architecture</title>
    <updated>2022-09-14T01:36:27Z</updated>
    <id>tag:github.com,2022-09-14:/hide-your-code/weather_compose_clean_architecture</id>
    <link href="https://github.com/hide-your-code/weather_compose_clean_architecture" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This is sample app about Jetpack Compose, Clean Architecture, etc.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Weapose - Weather ‚ù§Ô∏è Compose&lt;/h1&gt; &#xA;&lt;p&gt;This is an example for show current weather from any location. The &lt;strong&gt;Weapose&lt;/strong&gt; is builted by Android Jetpack Compose, MVVM, Clean Architecture, etc.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üôÜ‚ôÄ&lt;/span&gt; Firstly&lt;/h2&gt; &#xA;&lt;p&gt;This app is inspired by:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/bachhoan88/MAD-Clean-Architecture&#34;&gt;Weather app&lt;/a&gt; - &lt;a href=&#34;https://github.com/bachhoan88&#34;&gt;bachhoan88&lt;/a&gt;: for solutions and architectures.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.uplabs.com/posts/weather-kit&#34;&gt;Weather&lt;/a&gt; - &lt;a href=&#34;https://www.uplabs.com/jaganbv&#34;&gt;Jagan&lt;/a&gt;: for beautiful design.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;I want to say thanks for those people to help me to make this app.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üéâ&lt;/span&gt; Ready on Google Play&lt;/h2&gt; &#xA;&lt;p&gt;Now, you can download it on Google Play Store. Install it and give me your feedback!&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.minhdtm.example.weapose&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; alt=&#34;&amp;quot;Get it on Google Play&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üî®&lt;/span&gt; How to build app&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Using the newest version of Android Studio Canary.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You must add &lt;code&gt;BASE_URL&lt;/code&gt;, &lt;code&gt;API_KEY&lt;/code&gt; and &lt;code&gt;MAPS_API_KEY&lt;/code&gt; inside &lt;code&gt;local.properties&lt;/code&gt; to build and run Weapose app, like the code below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;BASE_URL=https://api.openweathermap.org/data/2.5/&#xA;API_KEY=API_KEY // Fill your open weather api key in here&#xA;MAPS_API_KEY=GOOGLE_MAPS_API_KEY // Fill your google maps api key in here&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üì∑&lt;/span&gt; Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Light mode&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Dark mode&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/home_light.png&#34; alt=&#34;Home Light&#34; title=&#34;Home Light&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/home_dark.png&#34; alt=&#34;Home Dark&#34; title=&#34;Home Dark&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/seven_days_light.png&#34; alt=&#34;Seven Days Light&#34; title=&#34;Seven Days Light&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/seven_days_dark.png&#34; alt=&#34;Seven Days Light&#34; title=&#34;Seven Days Light&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/search_by_map_light.png&#34; alt=&#34;Search By Map Light&#34; title=&#34;Search By Map Light&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/search_by_map_dark.png&#34; alt=&#34;Search By Map Dark&#34; title=&#34;Search By Map Dark&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/drawer_light.png&#34; alt=&#34;Drawer Light&#34; title=&#34;Drawer Light&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/drawer_dark.png&#34; alt=&#34;Drawer Dark&#34; title=&#34;Drawer Dark&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/search_by_text_light.png&#34; alt=&#34;Search By Text Light&#34; title=&#34;Search By Text Light&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/search_by_text_dark.png&#34; alt=&#34;Search By Text Dark&#34; title=&#34;Search By Text Dark&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìò&lt;/span&gt; Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Show the current weather by location or name.&lt;/li&gt; &#xA; &lt;li&gt;Show the seven days weather by location or name.&lt;/li&gt; &#xA; &lt;li&gt;Choice the location you want by using Google Map.&lt;/li&gt; &#xA; &lt;li&gt;Search location by address name by using Google Places.&lt;/li&gt; &#xA; &lt;li&gt;Support dark mode.&lt;/li&gt; &#xA; &lt;li&gt;Support dynamic material from Android 13 and above.&lt;/li&gt; &#xA; &lt;li&gt;Support English and Vietnamese.&lt;/li&gt; &#xA; &lt;li&gt;Upcomming ‚Ä¶.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üìÇ&lt;/span&gt; Module&lt;/h2&gt; &#xA;&lt;p&gt;Weapose is built according to the Clean Architecture model combined with the MVVM design pattern. To learn more, refer to the links below.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Guild to app architecture by Google Android.&lt;/li&gt; &#xA; &lt;li&gt;Clean architectur by Uncle Bob.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üîé&lt;/span&gt; Unit test&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://mockk.io/&#34;&gt;MockK&lt;/a&gt; to write unit test.&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://kotlinlang.org/docs/reflection.html&#34;&gt;Kotlin Reflection&lt;/a&gt; to access the private method, private property, etc.&lt;/li&gt; &#xA; &lt;li&gt;Using &lt;a href=&#34;https://github.com/Kotlin/kotlinx-kover&#34;&gt;Kotlin Kover&lt;/a&gt; to generate the test coverage. To generate, you just run command &lt;code&gt; ./gradlew koverHtmlReport&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;üöä&lt;/span&gt; Data flow&lt;/h2&gt; &#xA;&lt;p&gt;Weapose is supported by &lt;code&gt;Flow&lt;/code&gt; and &lt;code&gt;suspend&lt;/code&gt; for data stream flow in app.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/data_flow.png&#34; alt=&#34;Data flow&#34; title=&#34;Data flow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚ùå&lt;/span&gt; Error flow&lt;/h2&gt; &#xA;&lt;p&gt;In data module, when data is returned error, I will transform the error to &lt;code&gt;ResponseException&lt;/code&gt;. And then in domain and presentation, I transform the error from &lt;code&gt;ResponseException&lt;/code&gt; to &lt;code&gt;WeatherException&lt;/code&gt; to show the error to UI.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/hide-your-code/weather_compose_clean_architecture/master/image/error_flow.png&#34; alt=&#34;Error flow&#34; title=&#34;Error flow&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;üîî&lt;/span&gt; Notes&lt;/h2&gt; &#xA;&lt;p&gt;If you have any issues with the project, don&#39;t hesitate to create an issue. Also I&#39;m glad you can contribute to my project.&lt;/p&gt; &#xA;&lt;p&gt;Let&#39;s develop together to create quality and beautiful Android Jetpack Compose applications!&lt;/p&gt; &#xA;&lt;h2&gt;&lt;span&gt;‚òï&lt;/span&gt; Buy me a coffee&lt;/h2&gt; &#xA;&lt;p&gt;Welcome to my github! &lt;span&gt;üëã&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget to buy me a coffee so that I have more motivation to improve the project! &lt;span&gt;üî•&lt;/span&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/hide.your.code&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 The Android Open Source Project&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>danhtran-dev/android-base-mvvm</title>
    <updated>2022-09-14T01:36:27Z</updated>
    <id>tag:github.com,2022-09-14:/danhtran-dev/android-base-mvvm</id>
    <link href="https://github.com/danhtran-dev/android-base-mvvm" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;I&#39;ll update this one later&lt;/h3&gt; &#xA;&lt;p&gt;If you can&#39;t imagine what is MVVM, please read my medium article here first. It can fully explain the revolution of Software architecture pattern in Android apps development. &lt;a href=&#34;https://danhtran-dev.medium.com/mvc-mvp-mvvm-from-my-6-years-of-experience-in-mobile-apps-development-784ce5b44049&#34;&gt;MVC, MVP, and MVVM Architecture Pattern from my 6 years of experience in Mobile apps Development&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Find me&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;mailto:danhtran.dev@outlook.com&#34;&gt;danhtran.dev@outlook.com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://danhtran.dev&#34;&gt;https://danhtran.dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://tiktok.com/@danhtran.dev&#34;&gt;https://tiktok.com/@danhtran.dev&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://medium.com/@danhtran-dev&#34;&gt;https://medium.com/@danhtran-dev&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Some screenshots&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/danhtran-dev/android-base-mvvm/raw/master/images/screen-shot-empty.jpeg?raw=true&#34; alt=&#34;Screenshot empty note&#34;&gt; &lt;img src=&#34;https://github.com/danhtran-dev/android-base-mvvm/raw/master/images/screen-shot-image-1.jpeg?raw=true&#34; alt=&#34;Screenshot image 1&#34;&gt; &lt;img src=&#34;https://github.com/danhtran-dev/android-base-mvvm/raw/master/images/screen-shot-image-2.jpeg?raw=true&#34; alt=&#34;Screenshot image 2&#34;&gt; &lt;img src=&#34;https://github.com/danhtran-dev/android-base-mvvm/raw/master/images/screen-shot-no-image.jpeg?raw=true&#34; alt=&#34;Screenshot no image&#34;&gt; &lt;img src=&#34;https://github.com/danhtran-dev/android-base-mvvm/raw/master/images/screen-shot-notes.jpeg?raw=true&#34; alt=&#34;Screenshot list notes&#34;&gt;&lt;/p&gt;</summary>
  </entry>
</feed>