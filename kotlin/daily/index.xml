<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-10-06T01:34:39Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>uragiristereo/Pixel_Launcher_Double_Tap_to_Sleep</title>
    <updated>2022-10-06T01:34:39Z</updated>
    <id>tag:github.com,2022-10-06:/uragiristereo/Pixel_Launcher_Double_Tap_to_Sleep</id>
    <link href="https://github.com/uragiristereo/Pixel_Launcher_Double_Tap_to_Sleep" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Xposed/LSPosed module to enable double tap to sleep functionality on Pixel Launcher.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Pixel Launcher Double Tap to Sleep&lt;/h1&gt; &#xA;&lt;p&gt;An Xposed/LSposed module to enable double tap to sleep functionality on Pixel Launcher.&lt;/p&gt; &#xA;&lt;p&gt;Tested on Pixel Launcher 12 (906) on Android 12.1.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LSPosed/LSPosed&#34;&gt;LSposed&lt;/a&gt; min. API 93&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk&#34;&gt;Magisk&lt;/a&gt; (root)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install the module APK (available from &lt;a href=&#34;https://github.com/uragiristereo/Pixel_Launcher_Double_Tap_to_Sleep/releases&#34;&gt;Releases&lt;/a&gt; page).&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;code&gt;LSposed Manager&lt;/code&gt;, and enable the module.&lt;/li&gt; &#xA; &lt;li&gt;Long press on &lt;code&gt;Pixel Launcher&lt;/code&gt; in the app list, and tap &lt;strong&gt;Force stop&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Enjoy!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;em&gt;Note: You need to grant superuser access to Pixel Launcher in order to work.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Agung Watanabe&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>DUpdateSystem/UpgradeAll</title>
    <updated>2022-10-06T01:34:39Z</updated>
    <id>tag:github.com,2022-10-06:/DUpdateSystem/UpgradeAll</id>
    <link href="https://github.com/DUpdateSystem/UpgradeAll" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Check updates for Android apps, Magisk modules and more!&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/source/RDME_zh.md&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/source/icon.svg?sanitize=true&#34; height=&#34;80&#34;&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h1&gt;UpgradeAll&lt;/h1&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/DUpdateSystem/UpgradeAll/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/DUpdateSystem/UpgradeAll&#34; alt=&#34;GitHub release (latest by date)&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/release-date/DUpdateSystem/UpgradeAll&#34; alt=&#34;GitHub Release Date&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/DUpdateSystem/UpgradeAll/total&#34; alt=&#34;GitHub All Releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Android-5.0%2B-brightgreen&#34; alt=&#34;Android Version&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/DUpdateSystem/UpgradeAll&#34; alt=&#34;License&#34;&gt; &lt;br&gt;&lt;br&gt; Check updates for Android apps, Magisk modules and more! &lt;br&gt;&lt;br&gt; &lt;a href=&#34;https://github.com/DUpdateSystem/UpgradeAll/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/DUpdateSystem/UpgradeAll/actions/workflows/android.yml/badge.svg?sanitize=true&#34; alt=&#34;Android CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/upgradeall&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/upgradeall/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;code&gt;UpgradeAll&lt;/code&gt; is a free and open source software which simplifies the process of finding updates for Android apps (even if you didn&#39;t install them), Magisk modules and more. The main focus is on speed and ease of use, which is widely appreciated by users.&lt;/p&gt; &#xA;&lt;h2&gt;üìö Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-lets-get-started&#34;&gt;üôå Let&#39;s get started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-features&#34;&gt;üéà Features&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-faq&#34;&gt;‚ùì FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-communication-groups&#34;&gt;üí¨ Communication Groups&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-developer-documentation&#34;&gt;üìÉ Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-acknowledgements&#34;&gt;üòä Acknowledgements&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#%EF%B8%8F-app-sources&#34;&gt;‚ôæÔ∏è App sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-language-support&#34;&gt;üåê Language Support&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#%E2%84%B9%EF%B8%8F-how-to-translate-upgradeall-to-your-language&#34;&gt;‚ÑπÔ∏è How to translate&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-license&#34;&gt;üìñ License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#%EF%B8%8F-legal-notices&#34;&gt;‚öñÔ∏è Legal Notices&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/#-screenshot&#34;&gt;üß© Screenshot&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üôå Let&#39;s get started&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DUpdateSystem/UpgradeAll/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Get-Github-black?style=for-the-badge&amp;amp;logo=github&#34; alt=&#34;Get it on Github&#34; height=&#34;30&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/net.xzos.upgradeall&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Get-FDroid-blue?style=for-the-badge&amp;amp;logo=fdroid&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;30&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/upallci&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Get-Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&#34; alt=&#34;Get it on Coolapk&#34; height=&#34;30&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;If you want to install &lt;code&gt;UpgradeAll&lt;/code&gt;, first select a channel from above, find the latest version, download and install it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Then open it, find app sources u need on &lt;code&gt;App Hub&lt;/code&gt; page and switch them on.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;After selecting the sources you want to use, return to Home page, go to &lt;code&gt;Discover&lt;/code&gt; page and wait a moment, then find / search for the apps / modules you need.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now, return to Home page and go to &lt;code&gt;Apps&lt;/code&gt; page, you can see all the updates of your installed / added apps / modules.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;The App market mode will automatically check upon open for updates of your installed apps&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can also visit &lt;a href=&#34;https://github.com/DUpdateSystem/UpgradeAll/wiki&#34;&gt;here&lt;/a&gt; for a more detailed graphic tutorial.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üéà Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Get updates from multiple sources.&lt;/li&gt; &#xA; &lt;li&gt;Download files with external downloader.&lt;/li&gt; &#xA; &lt;li&gt;Highly customizable rules.&lt;/li&gt; &#xA; &lt;li&gt;Modern and clean design.&lt;/li&gt; &#xA; &lt;li&gt;Support Android 5.0 to 12L (Android 12L not tested).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ùì FAQ&lt;/h2&gt; &#xA;&lt;p&gt;During use of the application, you may encounter some problems, and this document may help you to solve them: &lt;a href=&#34;https://github.com/DUpdateSystem/UpgradeAll/wiki/FAQ&#34;&gt;FAQ&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üí¨ Communication Groups&lt;/h2&gt; &#xA;&lt;p&gt;You can join our communication groups by clicking cards below:&lt;br&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=ZAOtKhuH&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/QQ-000000?style=for-the-badge&#34; alt=&#34;Join us on QQ&#34; height=&#34;30&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/DUpdateSystem&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&#34; alt=&#34;Join us on Telegram&#34; height=&#34;30&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;üìÉ Developer Documentation&lt;/h2&gt; &#xA;&lt;p&gt;All developer documentation for &lt;code&gt;UpgradeAll&lt;/code&gt;, including the cloud directory structure, tracking entries, creating software source configurations, etc., is located &lt;a href=&#34;https://up-a.org/dev&#34;&gt;Here&lt;/a&gt;. If you find any documentation missing or incorrect, please raise an &lt;a href=&#34;https://github.com/DUpdateSystem/UpgradeAll/issues&#34;&gt;Issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üòä Acknowledgements&lt;/h2&gt; &#xA;&lt;p&gt;Many thanks to the developers of these libraries:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jaredrummler/AndroidShell&#34;&gt;android-shell&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://jsoup.org/&#34;&gt;jsoup&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/zhegexiaohuozi/JsoupXpath&#34;&gt;JsoupXpath&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mozilla/rhino&#34;&gt;rhino&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/okhttp&#34;&gt;OkHttp&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/LitePalFramework/LitePal&#34;&gt;litepal&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/gson&#34;&gt;gson&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://maven.apache.org/maven-artifact/&#34;&gt;maven-artifact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://commons.apache.org/text/&#34;&gt;commons-text&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;‚ôæÔ∏è App sources&lt;/h2&gt; &#xA;&lt;p&gt;Currently, the following sources are officially supported:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com&#34;&gt;Github&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com&#34;&gt;Gitlab&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://f-droid.org&#34;&gt;F-Droid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com&#34;&gt;Play Store&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.coolapk.com&#34;&gt;Coolapk&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/DUpdateSystem/UpgradeAll-rules/tree/master/rules/hubs&#34;&gt;Source List&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;üåê Language Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Simplified Chinese&lt;/li&gt; &#xA; &lt;li&gt;Traditional Chinese&lt;/li&gt; &#xA; &lt;li&gt;English&lt;/li&gt; &#xA; &lt;li&gt;Brazilian Portuguese&lt;/li&gt; &#xA; &lt;li&gt;German&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you are familier with multiple languages, please help us introduce the App to the whole world!&lt;/p&gt; &#xA;&lt;h3&gt;‚ÑπÔ∏è How to translate UpgradeAll into your language?&lt;/h3&gt; &#xA;&lt;p&gt;You can help us translate this project on &lt;a href=&#34;https://crowdin.com/project/upgradeall&#34;&gt;Crowdin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;üìñ License&lt;/h2&gt; &#xA;&lt;p&gt;Use of this software code is &lt;strong&gt;subject to the following license agreement&lt;/strong&gt;:&lt;br&gt; &lt;a href=&#34;https://github.com/DUpdateSystem/UpgradeAll/raw/master/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚öñÔ∏è Legal Notices&lt;/h2&gt; &#xA;&lt;p&gt;UpgradeAllÔºà‰ª•‰∏ãÁÆÄÁß∞‚ÄúÊú¨‰∫ßÂìÅ‚ÄùÔºâÊòØ‰∏Ä‰∏™ÈõÜËΩØ‰ª∂‰∏ãËΩΩ„ÄÅÊõ¥Êñ∞‰∫é‰∏Ä‰ΩìÁöÑÂ∑•ÂÖ∑„ÄÇÊú¨ËΩØ‰ª∂Êèê‰æõÁöÑÊâÄÊúâËΩØ‰ª∂ÂíåËµÑÊñôÂùá‰∏∫ËΩØ‰ª∂‰ΩúËÄÖÊèê‰æõÂèäÁΩëÂèãÊé®ËçêÂèëÂ∏ÉÔºå‰∏çÂæóÁî®‰∫é‰ªª‰ΩïÂïÜ‰∏öÁî®ÈÄî„ÄÇÊú¨‰∫ßÂìÅ‰∏≠Êèê‰æõÁöÑËΩØ‰ª∂‰πãËëó‰ΩúÊùÉÂΩíËΩØ‰ª∂‰ΩúËÄÖÊâÄÊúâ„ÄÇÁî®Êà∑ÂèØ‰ª•Ëá™Áî±ÈÄâÊã©ÊòØÂê¶‰ΩøÁî®Êú¨‰∫ßÂìÅÊèê‰æõÁöÑËΩØ‰ª∂„ÄÇÂ¶ÇÊûúÁî®Êà∑‰∏ãËΩΩ„ÄÅÂÆâË£Ö„ÄÅ‰ΩøÁî®Êú¨‰∫ßÂìÅ‰∏≠ÊâÄÊèê‰æõÁöÑËΩØ‰ª∂ÔºåÂç≥Ë°®ÊòéÁî®Êà∑‰ø°‰ªªËØ•ËΩØ‰ª∂‰ΩúËÄÖÔºåÊú¨‰∫∫ÂØπ‰ªª‰ΩïÂéüÂõ†Âú®‰ΩøÁî®Êú¨‰∫ßÂìÅ‰∏≠Êèê‰æõÁöÑËΩØ‰ª∂Êó∂ÂèØËÉΩÂØπÁî®Êà∑Ëá™Â∑±Êàñ‰ªñ‰∫∫ÈÄ†ÊàêÁöÑ‰ªª‰ΩïÂΩ¢ÂºèÁöÑÊçüÂ§±Âíå‰º§ÂÆ≥‰∏çÊâøÊãÖË¥£‰ªª„ÄÇ‰ªª‰ΩïÂçï‰ΩçÊàñ‰∏™‰∫∫ËÆ§‰∏∫ÈÄöËøáÊú¨‰∫ßÂìÅÊèê‰æõÁöÑËΩØ‰ª∂ÂèØËÉΩÊ∂âÂ´å‰æµÁäØÂÖ∂ÂêàÊ≥ïÊùÉÁõäÔºåÂ∫îËØ•ÂèäÊó∂ÂêëÊú¨‰∫∫ÔºàÈÇÆÁÆ±Ôºö&lt;a href=&#34;mailto:xiangzhedev@gmail.com&#34;&gt;xiangzhedev@gmail.com&lt;/a&gt;Ôºâ‰π¶Èù¢ÂèçÈ¶àÔºåÂπ∂Êèê‰æõË∫´‰ªΩËØÅÊòé„ÄÅÊùÉÂ±ûËØÅÊòéÂèäËØ¶ÁªÜ‰æµÊùÉÊÉÖÂÜµËØÅÊòéÔºåÊú¨‰∫∫Âú®Êî∂Âà∞‰∏äËø∞Ê≥ïÂæãÊñá‰ª∂ÂêéÔºåÂ∞Ü‰ºöÂ∞ΩÂø´ÁßªÈô§Ë¢´Êéß‰æµÊùÉËΩØ‰ª∂„ÄÇÊú¨‰∫ßÂìÅ‰∏≠ÁöÑÈÉ®ÂàÜÂÖçË¥πËΩØ‰ª∂Êù•Ê∫ê‰∫é‰∫íËÅîÁΩëÔºåÁî±‰∫éÊüê‰∫õÂéüÂõ†Êàë‰ª¨Ê≤°ËÉΩËÅîÁ≥ª‰∏äÂÖçË¥πËΩØ‰ª∂‰ΩúËÄÖÔºåÂ¶ÇÊûúËΩØ‰ª∂‰ΩúËÄÖÂØπ‰ΩøÁî®Êú¨‰∫ßÂìÅÊèê‰æõ‰∏ãËΩΩ„ÄÅÊõ¥Êñ∞Êúâ‰ªª‰ΩïÂºÇËÆÆÔºåÈÉΩÊ¨¢Ëøé‰∏éÊàë‰ª¨ËÅîÁ≥ªÊ≤üÈÄö„ÄÇÊú¨‰∫∫Â∞ÜÂú®ËßÑÂÆöÊó∂Èó¥ÂÜÖÁªô‰∫àÂà†Èô§Á≠âÁõ∏ÂÖ≥Â§ÑÁêÜ„ÄÇÂõ†Êú¨‰∫ßÂìÅÂºïËµ∑ÁöÑÊàñ‰∏éÊú¨‰∫ßÂìÅÊúâÂÖ≥ÁöÑ‰ªª‰Ωï‰∫âËÆÆÔºåÂêÑÊñπÂ∫îÂèãÂ•ΩÂçèÂïÜËß£ÂÜ≥ÔºõÂçèÂïÜ‰∏çÊàêÁöÑÔºå‰ªª‰Ωï‰∏ÄÊñπÂùáÂèØÂ∞ÜÊúâÂÖ≥‰∫âËÆÆÊèê‰∫§Ëá≥Âçó‰∫¨‰ª≤Ë£ÅÂßîÂëò‰ºöÂπ∂ÊåâÁÖßÂÖ∂Â±äÊó∂ÊúâÊïàÁöÑ‰ª≤Ë£ÅËßÑÂàô‰ª≤Ë£ÅÔºõ‰ª≤Ë£ÅË£ÅÂÜ≥ÊòØÁªàÂ±ÄÁöÑÔºåÂØπÂêÑÊñπÂùáÊúâÁ∫¶ÊùüÂäõ„ÄÇ&lt;/p&gt; &#xA;&lt;h2&gt;üß© Screenshot&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/source/screenshot/1_en.png&#34; alt=&#34;ScreenShot&#34; height=&#34;520&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/source/screenshot/2_en.png&#34; alt=&#34;ScreenShot&#34; height=&#34;520&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/source/screenshot/3_en.png&#34; alt=&#34;ScreenShot&#34; height=&#34;520&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/source/screenshot/4_en.png&#34; alt=&#34;ScreenShot&#34; height=&#34;520&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/DUpdateSystem/UpgradeAll/master/source/screenshot/5_en.png&#34; alt=&#34;ScreenShot&#34; height=&#34;520&#34;&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>jayasuryat/dowel</title>
    <updated>2022-10-06T01:34:39Z</updated>
    <id>tag:github.com,2022-10-06:/jayasuryat/dowel</id>
    <link href="https://github.com/jayasuryat/dowel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Kotlin Symbol Processor to generate Compose PreviewParameterProviders&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/37530409/192136328-7f566157-6a3f-46b9-8703-780ea1da625f.svg#gh-dark-mode-only&#34; alt=&#34;Dowel&#34; height=&#34;200&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/37530409/192136329-18987de1-1d36-4c62-a608-2b02d4b92e83.svg#gh-light-mode-only&#34; alt=&#34;Dowel&#34; height=&#34;200&#34;&gt; &#xA; &lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jayasuryat/dowel/releases&#34;&gt;&lt;img alt=&#34;artifact_version&#34; src=&#34;https://jitpack.io/v/jayasuryat/dowel.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=21&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://androidweekly.net/issues/issue-538&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/AndroidWeekly-%23538-2299cc.svg?style=flat&amp;amp;logo=android&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mailchi.mp/kotlinweekly/kotlin-weekly-322&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/KotlinWeekly-%23322-7549b5.svg?style=flat&amp;amp;logo=kotlin&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA; &lt;h2&gt;A Kotlin Symbol Processor to generate Compose PreviewParameterProviders&lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;h3&gt;1. What are PreviewParameterProviders to begin with?&lt;/h3&gt;&lt;h3&gt;&lt;/h3&gt;&lt;/summary&gt; &#xA; &lt;p&gt;In &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;&lt;code&gt;Jetpack Compose&lt;/code&gt;&lt;/a&gt;, we use something called &lt;a href=&#34;https://developer.android.com/jetpack/compose/tooling&#34;&gt;&lt;code&gt;Previews&lt;/code&gt;&lt;/a&gt;, which are &lt;code&gt;Composable&lt;/code&gt; functions written specifically to preview (or interact with) the UI rendered by &lt;code&gt;Compose&lt;/code&gt; in the editor itself without needing to run the app on a device.&lt;/p&gt; &#xA; &lt;p&gt;And &lt;code&gt;Composable&lt;/code&gt; methods generally have some parameters based on which the UI is rendered. More often than not, &lt;code&gt;Composable&lt;/code&gt; methods have a significant amount of data inputs which are needed to be passed from the preview methods for the previews to render.&lt;/p&gt; &#xA; &lt;p&gt;In cases like these &lt;a href=&#34;https://developer.android.com/reference/kotlin/androidx/compose/ui/tooling/preview/PreviewParameterProvider&#34;&gt;&lt;code&gt;PreviewParameterProvider&lt;/code&gt;&lt;/a&gt; (a class from the Compose tooling library) can be used to provide data for the previews.&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;PreviewParameterProvider&lt;/code&gt; makes the &lt;code&gt;Preview&lt;/code&gt; methods less verbose and easy to read by abstracting away the input data construction logic. And these providers can be reused across various &lt;code&gt;Preview&lt;/code&gt; methods to render different previews.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;2. Why Dowel?&lt;/h2&gt; &#xA;&lt;p&gt;Due to the amount of sheer verbosity involved in writing &lt;code&gt;PreviewParameterProvider&lt;/code&gt; &lt;em&gt;by hand&lt;/em&gt;, it becomes tedious to write &lt;code&gt;PreviewParameterProvider&lt;/code&gt; for each and every UI model. And as writing &lt;code&gt;PreviewParameterProvider&lt;/code&gt; for every model becomes an uninteresting task it becomes a barrier to entry for writing &lt;code&gt;Previews&lt;/code&gt; for all the &lt;code&gt;Composables&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;That is where &lt;code&gt;Dowel&lt;/code&gt; comes in and takes care of generating all of the boilerplate &lt;code&gt;PreviewParameterProvider&lt;/code&gt; logic for your UI models.&lt;/h4&gt; &#xA;&lt;p&gt;This makes writing &lt;code&gt;Previews&lt;/code&gt; simple and hence encourages writing more &lt;code&gt;Previews&lt;/code&gt; for &lt;code&gt;Composables&lt;/code&gt; in general. Apart from that, with &lt;code&gt;Dowel&lt;/code&gt; you can also &lt;em&gt;&lt;code&gt;Fuzz test&lt;/code&gt;&lt;/em&gt; your &lt;code&gt;Composables&lt;/code&gt; with all of the random values of random length or range being generated for all of the properties of the inputs.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : These random lengths or ranges can also be regulated, read more at &lt;em&gt;&#34;4. How do I use Dowel?&#34;&lt;/em&gt; section.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;3. Gradle setup&lt;/h2&gt; &#xA;&lt;h4&gt;3.1. Add KSP plugin to your &lt;strong&gt;module&#39;s&lt;/strong&gt; &lt;code&gt;build.gradle&lt;/code&gt; file&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;    id(&#34;com.google.devtools.ksp&#34;) version &#34;1.7.0-1.0.6&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : Make sure your project&#39;s &lt;code&gt;Kotlin&lt;/code&gt; version and &lt;code&gt;KSP version&lt;/code&gt; are the same. Learn more about the available versions &lt;a href=&#34;https://github.com/google/ksp/releases&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;3.2. Add &lt;code&gt;jitpack.io&lt;/code&gt; to the &lt;code&gt;repositories&lt;/code&gt; blocks in your project&#39;s &lt;code&gt;settings.gradle&lt;/code&gt; file&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;pluginManagement {&#xA;    repositories {&#xA;        // Other repos&#xA;        maven { url &#39;https://jitpack.io&#39; } // &amp;lt;----- This is the line to add&#xA;    }&#xA;}&#xA;dependencyResolutionManagement {&#xA;    repositories {&#xA;        // Other repos&#xA;        maven { url &#39;https://jitpack.io&#39; } // &amp;lt;----- This is the line to add&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3.3. Add the &lt;code&gt;Dowel&lt;/code&gt; dependencies in your &lt;strong&gt;module&#39;s&lt;/strong&gt; &lt;code&gt;build.gradle&lt;/code&gt; file&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    implementation(&#34;com.github.jayasuryat.dowel:dowel:0.5.0&#34;)&#xA;    ksp(&#34;com.github.jayasuryat.dowel:dowel-processor:0.5.0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;3.4. Add &lt;code&gt;KSP&lt;/code&gt; generated files as sources in your &lt;strong&gt;module&#39;s&lt;/strong&gt; &lt;code&gt;build.gradle&lt;/code&gt; file&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;kotlin {&#xA;    sourceSets.configureEach {&#xA;        kotlin.srcDir(&#34;$buildDir/generated/ksp/$name/kotlin/&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;4. How?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Dowel&lt;/code&gt; uses &lt;a href=&#34;https://kotlinlang.org/docs/ksp-overview.html&#34;&gt;&lt;code&gt;Kotlin Symbol Processing API&lt;/code&gt;&lt;/a&gt; under the hood to read, parse, and process source code to generate appropriate &lt;code&gt;PreviewParameterProviders&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The primary entry point into &lt;code&gt;Dowel&lt;/code&gt; is with &lt;a href=&#34;https://github.com/JayaSuryaT/Dowel/raw/main/dowel-annotation/src/main/java/com/jayasuryat/dowel/annotation/Dowel.kt&#34;&gt;&lt;code&gt;@Dowel&lt;/code&gt;&lt;/a&gt; annotation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Dowel&lt;/code&gt; goes through all the classes annotated with &lt;code&gt;@Dowel&lt;/code&gt; annotation and generates &lt;code&gt;PreviewParameterProvider&lt;/code&gt; for each class.&lt;/p&gt; &#xA;&lt;h2&gt;For example&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/37530409/192849433-42d4d116-4d68-4147-8ba2-c5781f34af8f.mp4&#34;&gt;https://user-images.githubusercontent.com/37530409/192849433-42d4d116-4d68-4147-8ba2-c5781f34af8f.mp4&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// File : NewsArticle.kt&#xA;import androidx.compose.runtime.State&#xA;import com.jayasuryat.dowel.annotation.Dowel&#xA;import kotlinx.coroutines.flow.Flow&#xA;&#xA;@Dowel(count = 2)&#xA;data class NewsArticle(&#xA;    val title: String,&#xA;    val description: String,&#xA;    val likes: Int,&#xA;    val authors: List&amp;lt;String&amp;gt;,&#xA;    val liveComments: Flow&amp;lt;List&amp;lt;String&amp;gt;&amp;gt;,&#xA;    val isExpanded: State&amp;lt;Boolean&amp;gt;,&#xA;    val status: Status,&#xA;    val onArticleClicked: () -&amp;gt; Unit,&#xA;) {&#xA;&#xA;    enum class Status { Draft, Accepted, Posted }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Generates üëá&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// File in generated sources : NewsArticlePreviewParamProvider.kt&#xA;package com.yourapp.module&#xA;&#xA;import androidx.compose.runtime.mutableStateOf&#xA;import androidx.compose.ui.tooling.preview.PreviewParameterProvider&#xA;import kotlin.sequences.Sequence&#xA;import kotlinx.coroutines.flow.flowOf&#xA;&#xA;public class NewsArticlePreviewParamProvider : PreviewParameterProvider&amp;lt;NewsArticle&amp;gt; {&#xA;  public override val values: Sequence&amp;lt;NewsArticle&amp;gt; = sequenceOf(&#xA;    NewsArticle(&#xA;      title = &#34;AdipiscingDuis ac porttitor et&#34;,&#xA;      description = &#34;Phasellusmassa suscipit iaculi&#34;,&#xA;      likes = 94,&#xA;      authors = listOf(&#xA;        &#34;Velamet ultricies malesuada co&#34;,&#xA;        &#34;Consequatmassa malesuada sapie&#34;,&#xA;        &#34;Ameta et at bibendum ut neque &#34;,&#xA;        &#34;Mimollis ac consectetur Praese&#34;,&#xA;        &#34;Namimperdiet massa bibendum po&#34;,&#xA;      ),&#xA;      liveComments = flowOf(listOf(&#xA;        &#34;Malesuadasit Duis dapibus cong&#34;,&#xA;        &#34;Metusluctus nec congue congue &#34;,&#xA;        &#34;InPraesent est tempus ac ultri&#34;,&#xA;        &#34;Malesuadaquis est Lorem sapien&#34;,&#xA;        &#34;FinibusCras mattis imperdiet n&#34;,&#xA;      )),&#xA;      isExpanded = mutableStateOf(false),&#xA;      status = NewsArticle.Status.values().random(),&#xA;      onArticleClicked = {},&#xA;    ),&#xA;    NewsArticle(&#xA;      title = &#34;Tempuspurus congue elit euismo&#34;,&#xA;      description = &#34;Conguemetus Duis enim tincidun&#34;,&#xA;      likes = 3,&#xA;      authors = listOf(&#xA;        &#34;Namcondimentum lobortis et ali&#34;,&#xA;        &#34;Congueeu ultrices lacinia sed &#34;,&#xA;        &#34;Lectussuscipit nisi eu quis se&#34;,&#xA;        &#34;Utnisi sapien mi ex magna magn&#34;,&#xA;        &#34;Proinipsum malesuada enim sed &#34;,&#xA;      ),&#xA;      liveComments = flowOf(listOf(&#xA;        &#34;CongueProin nec metus metus ma&#34;,&#xA;        &#34;Antenisi consectetur ac purus &#34;,&#xA;        &#34;Eualiquet malesuada turpis rho&#34;,&#xA;        &#34;LobortisDuis mollis ac a lacus&#34;,&#xA;        &#34;Magnaet Donec libero Lorem sap&#34;,&#xA;      )),&#xA;      isExpanded = mutableStateOf(false),&#xA;      status = NewsArticle.Status.values().random(),&#xA;      onArticleClicked = {},&#xA;    ),&#xA;  )&#xA;&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;5. How do I use &lt;code&gt;Dowel&lt;/code&gt;?&lt;/h2&gt; &#xA;&lt;p&gt;There are only 3 &lt;code&gt;Dowel&lt;/code&gt; annotations you need to know about:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JayaSuryaT/Dowel/raw/main/dowel-annotation/src/main/java/com/jayasuryat/dowel/annotation/Dowel.kt&#34;&gt;&lt;code&gt;@Dowel&lt;/code&gt;&lt;/a&gt; : The primary entry point into &lt;code&gt;Dowel&lt;/code&gt;, triggeres generation &lt;code&gt;PreviewParameterProvider&lt;/code&gt; for that class.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JayaSuryaT/Dowel/raw/main/dowel-annotation/src/main/java/com/jayasuryat/dowel/annotation/DowelList.kt&#34;&gt;&lt;code&gt;@DowelList&lt;/code&gt;&lt;/a&gt; : Same as &lt;code&gt;@Dowel&lt;/code&gt;, but generates a &lt;code&gt;PreviewParameterProvider&lt;/code&gt; of type &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; where &lt;code&gt;T&lt;/code&gt; is the class annotated with &lt;code&gt;@DowelList&lt;/code&gt; annotation. Rest of the behavior is same as the &lt;code&gt;@Dowel&lt;/code&gt; annotation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JayaSuryaT/Dowel/raw/main/dowel-annotation/src/main/java/com/jayasuryat/dowel/annotation/ConsiderForDowel.kt&#34;&gt;&lt;code&gt;@ConsiderForDowel&lt;/code&gt;&lt;/a&gt; : If you want to add support for an unsupported type, or override provider logic for a particular type, then you can do that with &lt;code&gt;@ConsiderForDowel&lt;/code&gt; annotation.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Apart from that if you want to controll range / legnth / size of the values being generated, you can do that with &lt;code&gt;androidx.annotations&lt;/code&gt;. Currently these 3 are the only supported ones:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;androidx.annotation.IntRange&lt;/code&gt; : Control the range of &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;Long&lt;/code&gt; properties&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;androidx.annotation.FloatRange&lt;/code&gt; : Control the range of &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt; properties&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;androidx.annotation.Size&lt;/code&gt; : Control the size of &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt; properties&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;6. What all is possible?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Dowel&lt;/code&gt; is quite flexible with the types it already supports, but there are certain limits on what all types are supported, and in general how &lt;code&gt;Dowel&lt;/code&gt; works :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Classes annotated with any of the &lt;code&gt;Dowel&lt;/code&gt; annotations (&lt;code&gt;@Dowel&lt;/code&gt;, &lt;code&gt;@DowelList&lt;/code&gt; or &lt;code&gt;@ConsdierForDowel&lt;/code&gt;) should be concrete (non-abstract)&lt;/li&gt; &#xA; &lt;li&gt;Primary constructors of classes annotated with any of the &lt;code&gt;Dowel&lt;/code&gt; annotations should not be private&lt;/li&gt; &#xA; &lt;li&gt;Only classes extending &lt;code&gt;androidx.compose.ui.tooling.preview.PreviewParameterProvider&lt;/code&gt; can be annotated with &lt;code&gt;@ConsiderForDowel&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Only classes already annotated with &lt;code&gt;@Dowel&lt;/code&gt; can be annotated with &lt;code&gt;@DowelList&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;All of the properties listed in the primary constructor of class annotated with &lt;code&gt;@Dowel&lt;/code&gt; can only be of the following types: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Primitives (&lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;Char&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;androidx.compose.runtime.State&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;kotlinx.coroutines.flow.Flow&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Functional types (high-order functions, lambdas)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;@Dowel&lt;/code&gt; classes (&lt;code&gt;@Dowel&lt;/code&gt; classes can be nested. A &lt;code&gt;@Dowel&lt;/code&gt; annotated class can have properties of the type of classes which are again annotated with &lt;code&gt;@Dowel&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Types for which a user-defined &lt;code&gt;PreviewParameterProvider&lt;/code&gt; exist (via the &lt;code&gt;@ConsiderForDowel&lt;/code&gt; annotation)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Sealed&lt;/code&gt; types&lt;/li&gt; &#xA;   &lt;li&gt;Kotlin Objects&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;List&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;Pair&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;Properties with &lt;strong&gt;unsupported&lt;/strong&gt; types which are nullable are allowed, and the generated value would always be null&lt;/li&gt; &#xA;   &lt;li&gt;Properties with default values can have &lt;em&gt;any type&lt;/em&gt;, as they are not considered while generating code&lt;/li&gt; &#xA;   &lt;li&gt;Types in the above mentioned list having generic type parameters (like &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Map&lt;/code&gt;) can only have &lt;code&gt;@Dowel&lt;/code&gt; supported types as their type parameters. Like &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;, &lt;code&gt;Map&amp;lt;String, @Dowel class&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;As far as a type is in above mentioned supported list, there are no practical limitations on how many times they may be nested. Like &lt;code&gt;List&amp;lt;Map&amp;lt;String, List&amp;lt;@Dowel class&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;code&gt;Dowel&lt;/code&gt; ships with &lt;code&gt;lint&lt;/code&gt; rules&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;Dowel&lt;/code&gt; ships with &lt;code&gt;lint&lt;/code&gt; rules which cover all of the basic scenarios and will warn you even before you might compile the code.&lt;/p&gt; &#xA;&lt;p&gt;And for the things that &lt;code&gt;lint&lt;/code&gt; doesn&#39;t catch, like issues with unsupported types of properties, meaningful error messages will be logged from KSP to nudge you in the right direction.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt; Copyright 2022 Jaya Surya Thotapalli&#xA;&#xA;   Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;   you may not use this file except in compliance with the License.&#xA;   You may obtain a copy of the License at&#xA;&#xA;       http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;   Unless required by applicable law or agreed to in writing, software&#xA;   distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;   See the License for the specific language governing permissions and&#xA;   limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>