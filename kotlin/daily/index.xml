<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-15T01:45:00Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Lowae/Design-WanAndroid</title>
    <updated>2022-07-15T01:45:00Z</updated>
    <id>tag:github.com,2022-07-15:/Lowae/Design-WanAndroid</id>
    <link href="https://github.com/Lowae/Design-WanAndroid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🦄WanAndroid的最佳Material Design实践，严格遵循Material设计，完美支持其Dynamic Colors等新特性，MVVM架构，保证UI风格、逻辑设计的一致性。全盘采用Jetpack，只为解决某些特定问题而引入其他依赖，避免大材小用，且尽可能均自己实现&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🦄Design WanAndroid&lt;/h1&gt; &#xA;&lt;h2&gt;界面：&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;原WanAndroid开放的Api功能均已实现&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt; App内通篇全采用&lt;a href=&#34;https://m3.material.io/&#34;&gt;Material Design 3&lt;/a&gt;风格，拒绝半完成式Material带来的UI的割裂感。&lt;/p&gt;&#xA;&lt;p&gt; 所有Icon取自&lt;a href=&#34;https://fonts.google.com/icons&#34;&gt;Material Symbols&lt;/a&gt;，统一而规范的设计。&lt;/p&gt;&#xA;&lt;p&gt; 主题色遵循&lt;a href=&#34;https://m3.material.io/styles/color/the-color-system/key-colors-tones&#34;&gt;Material3 Color system&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;PrimaryColor, On-primary, Primary container, On-primary container&lt;/li&gt; &#xA; &lt;li&gt;SecondaryColor 同上&lt;/li&gt; &#xA; &lt;li&gt;TertiaryColor&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt; &lt;/p&gt;&#xA;&lt;h4&gt;截图展示&lt;/h4&gt; &#xA;&lt;hr&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/light_home.jpg&#34; alt=&#34;&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/light_project.jpg&#34; alt=&#34;&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/light_navigation.jpg&#34; alt=&#34;&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/light_profile.jpg&#34; alt=&#34;&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/dark_home.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/dark_project.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/dark_navigation.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/dark_profile.jpg&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/color1.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/color2.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/color3.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/Lowae/Design-WanAndroid/main/screenshots/color4.png&#34; alt=&#34;&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;默认主题色采用&lt;a href=&#34;https://material-foundation.github.io/material-theme-builder/&#34;&gt;Material Theme Builder&lt;/a&gt;从图片取色而成。&lt;/p&gt;&#xA;&lt;p&gt; 实现&lt;a href=&#34;https://m3.material.io/styles/color/dynamic-color/overview&#34;&gt;Dynamic Colors&lt;/a&gt;，开启动态主题色后，App主题色自动跟随系统主题色且适配深色模式，保持一贯的视觉体验(Android 12及以上支持)&lt;/p&gt; &#xA;&lt;p&gt;所以可交互的UI均带有Ripple效果，明确表示这是个可交互控件，且Ripple颜色支持取自当前Dynamic colors的主题色&lt;/p&gt; &#xA;&lt;h2&gt;逻辑：&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;详细细节可转到&lt;a href=&#34;https://juejin.cn/post/7117594416235151367&#34;&gt;Design WanAndroid（WanAndroid的最佳可使用的Android客户端）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt; 使用buildSrc，实现全局且统一的依赖管理。&lt;/p&gt;&#xA;&lt;p&gt; 严格遵循&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/&#34;&gt;Android Architecture Components&lt;/a&gt;，逻辑分为：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;界面层(UI Layer) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;APP内实现：视图（Activity/Fragment等） + 数据驱动及处理逻辑的状态容器（ViewModel等）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;网域层(Domain Layer) 可选项，用于处理复杂逻辑或支持可重用性吗，当你需要从不同数据源获取数据时如需要同时从数据库和接口请求数据时，推荐使用UseCase进行组合。 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;App内实现：组合或复用数据源（UseCase）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;数据层(Data Layer) &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;App内实现：数据源（Repository）&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;当你采用某项东西，应是为了解决某些特定的问题，不能单纯为了用而用。在该架构下：&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;对于网络请求的需要，引入通用的网络请求库，&lt;a href=&#34;https://github.com/square/retrofit&#34;&gt;Retrofit&lt;/a&gt; + &lt;a href=&#34;https://github.com/square/okhttp&#34;&gt;OkHttp&lt;/a&gt;。&lt;p&gt;&lt;/p&gt;&lt;/li&gt; &#xA; &lt;li&gt;对于网络异常处理的需要，自定义Retrofit &lt;a href=&#34;https://github.com/Lowae/Design-WanAndroid/tree/main/app/src/main/java/com/lowe/wanandroid/base/http/adapter&#34;&gt;NetworkResponseAdapterFactory&lt;/a&gt;和&lt;a href=&#34;https://github.com/Lowae/Design-WanAndroid/tree/main/app/src/main/java/com/lowe/wanandroid/base/http/converter&#34;&gt;GsonConverterFactory&lt;/a&gt;，包装接口返回，自定义解析区分业务code，实现全局的接口错误或业务逻辑错误处理，同时下游也可按需获取错误类型。&lt;/li&gt; &#xA; &lt;li&gt;针对数据层Repository需要以及UseCase需要复用并组合各类Service，引入&lt;a href=&#34;https://developer.android.com/training/dependency-injection/hilt-android&#34;&gt;Hilt&lt;/a&gt;，解决依赖注入问题，提高可重用性且避免强依赖。&lt;/li&gt; &#xA; &lt;li&gt;对于网络请求的线程切换使用&lt;a href=&#34;https://developer.android.com/kotlin/coroutines?hl=zh-cn&#34;&gt;Kotlin协程&lt;/a&gt;，针对复杂且需要进行各类转换处理的数据流使用&lt;a href=&#34;https://developer.android.com/kotlin/flow?hl=zh-cn&#34;&gt;Flow&lt;/a&gt;，对于One-shot数据使用&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/livedata?hl=zh-cn&#34;&gt;LiveData&lt;/a&gt;，因为LiveData设计初衷并非用于处理复杂的响应数据流。&lt;/li&gt; &#xA; &lt;li&gt;对于App内的部分需要持久化数据如&lt;a href=&#34;https://github.com/Lowae/Design-WanAndroid/tree/main/app/src/main/java/com/lowe/wanandroid/base/http/cookie&#34;&gt;登陆状态的Cookie&lt;/a&gt;、KV数据等小型数据引入&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/datastore?hl=zh-cn&#34;&gt;DataStore&lt;/a&gt;和&lt;a href=&#34;https://kotlinlang.org/docs/serialization.html&#34;&gt;Kotlin Serialization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;对于RecyclerView引入&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/paging/v3-overview?hl=zh-cn&#34;&gt;Paging3&lt;/a&gt;列表的加载及状态处理&lt;/li&gt; &#xA; &lt;li&gt;针对列表的多类型Item，导入并自定义修改MultiType实现&lt;a href=&#34;https://github.com/Lowae/Design-WanAndroid/raw/main/multitype/src/main/java/com/lowe/multitype/PagingMultiTypeAdapter.kt&#34;&gt;PagingMultiTypeAdapter&lt;/a&gt;使其能够支持配合Paging3使用&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;除以上主要依赖外，其他引入有&lt;a href=&#34;https://github.com/youth5201314/banner&#34;&gt;Banner&lt;/a&gt;和&lt;a href=&#34;https://github.com/Justson/AgentWeb&#34;&gt;AgentWeb&lt;/a&gt;，除此之外其余功能均自己实现。&lt;/p&gt; &#xA;&lt;h2&gt;最后:&lt;/h2&gt; &#xA;&lt;p&gt;有任何问题欢迎提Issue，如果喜欢的话也可以给个⭐Star&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>google/flexbox-layout</title>
    <updated>2022-07-15T01:45:00Z</updated>
    <id>tag:github.com,2022-07-15:/google/flexbox-layout</id>
    <link href="https://github.com/google/flexbox-layout" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Flexbox for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FlexboxLayout&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/google/flexbox-layout/tree/main&#34;&gt; &lt;img src=&#34;https://circleci.com/gh/google/flexbox-layout.svg?style=shield&amp;amp;circle-token=2a42716dfffab73d73c5ce7ed7b3ee620cfa137b&#34; alt=&#34;Circle CI&#34;&gt; &lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;FlexboxLayout is a library project which brings the similar capabilities of &lt;a href=&#34;https://www.w3.org/TR/css-flexbox-1&#34;&gt;CSS Flexible Box Layout Module&lt;/a&gt; to Android.&lt;/p&gt; &#xA;&lt;h1&gt;Installation&lt;/h1&gt; &#xA;&lt;p&gt;Add the following dependency to your &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;dependencies {&#xA;    implementation &#39;com.google.android.flexbox:flexbox:3.0.0&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Starting from 3.0.0, the groupId is changed to &lt;code&gt;com.google.android.flexbox&lt;/code&gt; in preparation to uploading the artifacts to google maven. You can still download the artifacts from jcenter for the past versions with the prior groupId (&lt;code&gt;com.google.android&lt;/code&gt;), but migrating the library 3.0.0 is recommended.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Note that the default values for &lt;code&gt;alignItems&lt;/code&gt; and &lt;code&gt;alignContent&lt;/code&gt; for &lt;code&gt;FlexboxLayout&lt;/code&gt; have been changed from &lt;code&gt;stretch&lt;/code&gt; to &lt;code&gt;flex_start&lt;/code&gt; starting from 2.0.0, it may break the existing apps. Please make sure to set &lt;code&gt;stretch&lt;/code&gt; explicitly if you want to apply the behavior of &lt;code&gt;stretch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Note that starting from 1.1.0, the library is expeced to use with AndroidX. Please migrate to &lt;a href=&#34;https://developer.android.com/jetpack/androidx/migrate&#34;&gt;AndroidX&lt;/a&gt; if you use 1.1.0 or above.&lt;/p&gt; &#xA;&lt;p&gt;Please use 1.0.0 if you haven&#39;t migrated to AndroidX.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;p&gt;There are two ways of using Flexbox in your layout.&lt;/p&gt; &#xA;&lt;h2&gt;FlexboxLayout&lt;/h2&gt; &#xA;&lt;p&gt;The first one is &lt;code&gt;FlexboxLayout&lt;/code&gt; that extends the &lt;code&gt;ViewGroup&lt;/code&gt; like &lt;code&gt;LinearLayout&lt;/code&gt; and &lt;code&gt;RelativeLayout&lt;/code&gt;. You can specify the attributes from a layout XML like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;com.google.android.flexbox.FlexboxLayout&#xA;    xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34;&#xA;    xmlns:app=&#34;http://schemas.android.com/apk/res-auto&#34;&#xA;    android:layout_width=&#34;match_parent&#34;&#xA;    android:layout_height=&#34;match_parent&#34;&#xA;    app:flexWrap=&#34;wrap&#34;&#xA;    app:alignItems=&#34;stretch&#34;&#xA;    app:alignContent=&#34;stretch&#34; &amp;gt;&#xA;&#xA;    &amp;lt;TextView&#xA;        android:id=&#34;@+id/textview1&#34;&#xA;        android:layout_width=&#34;120dp&#34;&#xA;        android:layout_height=&#34;80dp&#34;&#xA;        app:layout_flexBasisPercent=&#34;50%&#34;&#xA;        /&amp;gt;&#xA;&#xA;    &amp;lt;TextView&#xA;        android:id=&#34;@+id/textview2&#34;&#xA;        android:layout_width=&#34;80dp&#34;&#xA;        android:layout_height=&#34;80dp&#34;&#xA;        app:layout_alignSelf=&#34;center&#34;&#xA;        /&amp;gt;&#xA;&#xA;    &amp;lt;TextView&#xA;        android:id=&#34;@+id/textview3&#34;&#xA;        android:layout_width=&#34;160dp&#34;&#xA;        android:layout_height=&#34;80dp&#34;&#xA;        app:layout_alignSelf=&#34;flex_end&#34;&#xA;        /&amp;gt;&#xA;&amp;lt;/com.google.android.flexbox.FlexboxLayout&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Or from code like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;FlexboxLayout flexboxLayout = (FlexboxLayout) findViewById(R.id.flexbox_layout);&#xA;flexboxLayout.setFlexDirection(FlexDirection.ROW);&#xA;&#xA;View view = flexboxLayout.getChildAt(0);&#xA;FlexboxLayout.LayoutParams lp = (FlexboxLayout.LayoutParams) view.getLayoutParams();&#xA;lp.setOrder(-1);&#xA;lp.setFlexGrow(2);&#xA;view.setLayoutParams(lp);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;FlexboxLayoutManager (within RecyclerView)&lt;/h2&gt; &#xA;&lt;p&gt;The second one is &lt;code&gt;FlexboxLayoutManager&lt;/code&gt; that can be used within &lt;code&gt;RecyclerView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;RecyclerView recyclerView = (RecyclerView) context.findViewById(R.id.recyclerview);&#xA;FlexboxLayoutManager layoutManager = new FlexboxLayoutManager(context);&#xA;layoutManager.setFlexDirection(FlexDirection.COLUMN);&#xA;layoutManager.setJustifyContent(JustifyContent.FLEX_END);&#xA;recyclerView.setLayoutManager(layoutManager);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or for the attributes for the children of the &lt;code&gt;FlexboxLayoutManager&lt;/code&gt; you can do like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;mImageView.setImageDrawable(drawable);&#xA;ViewGroup.LayoutParams lp = mImageView.getLayoutParams();&#xA;if (lp instanceof FlexboxLayoutManager.LayoutParams) {&#xA;    FlexboxLayoutManager.LayoutParams flexboxLp = (FlexboxLayoutManager.LayoutParams) lp;&#xA;    flexboxLp.setFlexGrow(1.0f);&#xA;    flexboxLp.setAlignSelf(AlignSelf.FLEX_END);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The advantage of using &lt;code&gt;FlexboxLayoutManager&lt;/code&gt; is that it recycles the views that go off the screen for reuse for the views that are appearing as the user scrolls instead of inflating every individual view, which consumes much less memory especially when the number of items contained in the Flexbox container is large.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/flexbox-layoutmanager.gif&#34; alt=&#34;FlexboxLayoutManager in action&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Supported attributes/features comparison&lt;/h2&gt; &#xA;&lt;p&gt;Due to some characteristics of &lt;code&gt;RecyclerView&lt;/code&gt;, some Flexbox attributes are not available/not implemented to the &lt;code&gt;FlexboxLayoutManager&lt;/code&gt;. Here is a quick overview of the attributes/features comparison between the two implementations.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Attribute / Feature&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FlexboxLayout&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FlexboxLayoutManager (RecyclerView)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;flexDirection&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;flexWrap&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt; (except &lt;code&gt;wrap_reverse&lt;/code&gt;)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;justifyContent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;alignItems&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;alignContent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;layout_order&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;layout_flexGrow&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;layout_flexShrink&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;layout_alignSelf&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;layout_flexBasisPercent&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;layout_(min/max)Width&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;layout_(min/max)Height&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;layout_wrapBefore&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Divider&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;View recycling&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scrolling&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;*1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/pngs/check_green_small.png&#34; alt=&#34;Check&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;*1 Partially possible by wrapping it with &lt;code&gt;ScrollView&lt;/code&gt;. But it isn&#39;t likely to work with a large set of views inside the layout. Because it doesn&#39;t consider view recycling.&lt;/p&gt; &#xA;&lt;h1&gt;Supported attributes&lt;/h1&gt; &#xA;&lt;h2&gt;Attributes for the FlexboxLayout:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;flexDirection&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute determines the direction of the main axis (and the cross axis, perpendicular to the main axis). The direction children items are placed inside the Flexbox layout. Possible values are:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;row (default)&lt;/li&gt; &#xA;     &lt;li&gt;row_reverse&lt;/li&gt; &#xA;     &lt;li&gt;column&lt;/li&gt; &#xA;     &lt;li&gt;column_reverse&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/flex-direction.gif&#34; alt=&#34;Flex Direction explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;flexWrap&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute controls whether the flex container is single-line or multi-line, and the direction of the cross axis. Possible values are:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;nowrap (default for FlexboxLayout)&lt;/li&gt; &#xA;     &lt;li&gt;wrap (default for FlexboxLayoutManager)&lt;/li&gt; &#xA;     &lt;li&gt;wrap_reverse (not supported by FlexboxLayoutManager)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/flex-wrap.gif&#34; alt=&#34;Flex Wrap explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;justifyContent&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute controls the alignment along the main axis. Possible values are:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;flex_start (default)&lt;/li&gt; &#xA;     &lt;li&gt;flex_end&lt;/li&gt; &#xA;     &lt;li&gt;center&lt;/li&gt; &#xA;     &lt;li&gt;space_between&lt;/li&gt; &#xA;     &lt;li&gt;space_around&lt;/li&gt; &#xA;     &lt;li&gt;space_evenly&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/justify-content.gif&#34; alt=&#34;Justify Content explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;alignItems&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute controls the alignment along the cross axis. Possible values are:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;flex_start (default for FlexboxLayout)&lt;/li&gt; &#xA;     &lt;li&gt;flex_end&lt;/li&gt; &#xA;     &lt;li&gt;center&lt;/li&gt; &#xA;     &lt;li&gt;baseline&lt;/li&gt; &#xA;     &lt;li&gt;stretch (default for FlexboxLayoutManager)&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/align-items.gif&#34; alt=&#34;Align Items explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;alignContent&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute controls the alignment of the flex lines in the flex container. Possible values are:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;flex_start (default)&lt;/li&gt; &#xA;     &lt;li&gt;flex_end&lt;/li&gt; &#xA;     &lt;li&gt;center&lt;/li&gt; &#xA;     &lt;li&gt;space_between&lt;/li&gt; &#xA;     &lt;li&gt;space_around&lt;/li&gt; &#xA;     &lt;li&gt;stretch&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/align-content.gif&#34; alt=&#34;Align Content explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;showDividerHorizontal&lt;/strong&gt; (one or more of &lt;code&gt;none | beginning | middle | end&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;dividerDrawableHorizontal&lt;/strong&gt; (reference to a drawable)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Puts horizontal dividers between flex lines (or flex items when flexDirection is set to &lt;code&gt;column&lt;/code&gt; or &lt;code&gt;column_rebase&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;showDividerVertical&lt;/strong&gt; (one or more of &lt;code&gt;none | beginning | middle | end&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;dividerDrawableVertical&lt;/strong&gt; (reference to a drawable)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Puts vertical dividers between flex items (or flex lines when flexDirection is set to &lt;code&gt;column&lt;/code&gt; or &lt;code&gt;column_rebase&lt;/code&gt;).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;showDivider&lt;/strong&gt; (one or more of &lt;code&gt;none | beginning | middle | end&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;dividerDrawable&lt;/strong&gt; (reference to a drawable)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Shorthand for setting both horizontal and vertical dividers. Note that if used with other attributes (such as &lt;code&gt;justifyContent=&#34;space_around&#34;&lt;/code&gt; or &lt;code&gt;alignContent=&#34;space_between&#34;&lt;/code&gt; ... etc) for putting spaces between flex lines or flex items, you may see unexpected spaces. Please avoid using these at the same time.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;Example of putting both vertical and horizontal dividers.&lt;/p&gt; &lt;p&gt;&lt;code&gt;res/drawable/divider.xml&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;shape xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34;&amp;gt;&#xA;  &amp;lt;size&#xA;      android:width=&#34;8dp&#34;&#xA;      android:height=&#34;12dp&#34; /&amp;gt;&#xA;  &amp;lt;solid android:color=&#34;#44A444&#34; /&amp;gt;&#xA;&amp;lt;/shape&amp;gt; &#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;res/layout/content_main.xml&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;com.google.android.flexbox.FlexboxLayout xmlns:android=&#34;http://schemas.android.com/apk/res/android&#34;&#xA;  xmlns:app=&#34;http://schemas.android.com/apk/res-auto&#34;&#xA;  android:layout_width=&#34;match_parent&#34;&#xA;  android:layout_height=&#34;match_parent&#34;&#xA;  app:alignContent=&#34;flex_start&#34;&#xA;  app:alignItems=&#34;flex_start&#34;&#xA;  app:flexWrap=&#34;wrap&#34;&#xA;  app:showDivider=&#34;beginning|middle&#34;&#xA;  app:dividerDrawable=&#34;@drawable/divider&#34; &amp;gt;&#xA;&#xA;  &amp;lt;TextView&#xA;      style=&#34;@style/FlexItem&#34;&#xA;      android:layout_width=&#34;220dp&#34;&#xA;      android:layout_height=&#34;80dp&#34;&#xA;      android:text=&#34;1&#34; /&amp;gt;&#xA;  &amp;lt;TextView&#xA;      style=&#34;@style/FlexItem&#34;&#xA;      android:layout_width=&#34;120dp&#34;&#xA;      android:layout_height=&#34;80dp&#34;&#xA;      android:text=&#34;2&#34; /&amp;gt;&#xA;  &amp;lt;TextView&#xA;      style=&#34;@style/FlexItem&#34;&#xA;      android:layout_width=&#34;160dp&#34;&#xA;      android:layout_height=&#34;80dp&#34;&#xA;      android:text=&#34;3&#34; /&amp;gt;&#xA;  &amp;lt;TextView&#xA;      style=&#34;@style/FlexItem&#34;&#xA;      android:layout_width=&#34;80dp&#34;&#xA;      android:layout_height=&#34;80dp&#34;&#xA;      android:text=&#34;4&#34; /&amp;gt;&#xA;  &amp;lt;TextView&#xA;      style=&#34;@style/FlexItem&#34;&#xA;      android:layout_width=&#34;100dp&#34;&#xA;      android:layout_height=&#34;80dp&#34;&#xA;      android:text=&#34;5&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/divider-beginning-middle.png&#34; alt=&#34;Dividers beginning and middle&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Attributes for the children of a FlexboxLayout&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;layout_order&lt;/strong&gt; (integer)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute can change how the ordering of the children views are laid out. By default, children are displayed and laid out in the same order as they appear in the layout XML. If not specified, &lt;code&gt;1&lt;/code&gt; is set as a default value.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/layout_order.gif&#34; alt=&#34;Order explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;layout_flexGrow&lt;/strong&gt; (float)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute determines how much this child will grow if positive free space is distributed relative to the rest of other flex items included in the same flex line. If a flex item has a positive &lt;code&gt;layout_flexGrow&lt;/code&gt; value, the item will take up the remaining space in the flex line. If multiple flex items in the same flex line have positive &lt;code&gt;layout_flexGrow&lt;/code&gt; values, the remaining free space is distributed depending on the proportion of their declared &lt;code&gt;layout_flexGrow&lt;/code&gt; value. (Similar to the &lt;code&gt;layout_weight&lt;/code&gt; attribute in the &lt;code&gt;LinearLayout&lt;/code&gt;) If not specified, &lt;code&gt;0&lt;/code&gt; is set as a default value.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/layout_flexGrow.gif&#34; alt=&#34;Flex Grow explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;layout_flexShrink&lt;/strong&gt; (float)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute determines how much this child will shrink if negative free space is distributed relative to the rest of other flex items included in the same flex line. If not specified, &lt;code&gt;1&lt;/code&gt; is set as a default value.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/layout_flexShrink.gif&#34; alt=&#34;Flex Shrink explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;layout_alignSelf&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute determines the alignment along the cross axis (perpendicular to the main axis). The alignment in the same direction can be determined by the &lt;code&gt;alignItems&lt;/code&gt; in the parent, but if this is set to other than &lt;code&gt;auto&lt;/code&gt;, the cross axis alignment is overridden for this child. Possible values are:&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;auto (default)&lt;/li&gt; &#xA;     &lt;li&gt;flex_start&lt;/li&gt; &#xA;     &lt;li&gt;flex_end&lt;/li&gt; &#xA;     &lt;li&gt;center&lt;/li&gt; &#xA;     &lt;li&gt;baseline&lt;/li&gt; &#xA;     &lt;li&gt;stretch&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/layout_alignSelf.gif&#34; alt=&#34;Align Self explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;layout_flexBasisPercent&lt;/strong&gt; (fraction)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;The initial flex item length in a fraction format relative to its parent. The initial main size of this child view is trying to be expanded as the specified fraction against the parent main size. If this value is set, the length specified from &lt;code&gt;layout_width&lt;/code&gt; (or &lt;code&gt;layout_height&lt;/code&gt;) is overridden by the calculated value from this attribute. This attribute is only effective when the parent&#39;s length is definite (MeasureSpec mode is &lt;code&gt;MeasureSpec.EXACTLY&lt;/code&gt;). The default value is &lt;code&gt;-1&lt;/code&gt;, which means not set.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/layout_flexBasisPercent.gif&#34; alt=&#34;Flex basis percent explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;layout_minWidth&lt;/strong&gt; / &lt;strong&gt;layout_minHeight&lt;/strong&gt; (dimension)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;These attributes impose minimum size constraints for the children of FlexboxLayout. A child view won&#39;t shrink less than the value of these attributes (varies based on the &lt;code&gt;flexDirection&lt;/code&gt; attribute as to which attribute imposes the size constraint along the main axis) regardless of the &lt;code&gt;layout_flexShrink&lt;/code&gt; attribute.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/layout_minWidth.gif&#34; alt=&#34;Min width explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;layout_maxWidth&lt;/strong&gt; / &lt;strong&gt;layout_maxHeight&lt;/strong&gt; (dimension)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;These attributes impose maximum size constraints for the children of FlexboxLayout. A child view won&#39;t be expanded more than the value of these attributes (varies based on the &lt;code&gt;flexDirection&lt;/code&gt; attribute as to which attribute imposes the size constraint along the main axis) regardless of the &lt;code&gt;layout_flexGrow&lt;/code&gt; attribute.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/layout_maxWidth.gif&#34; alt=&#34;Max width explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;layout_wrapBefore&lt;/strong&gt; (boolean)&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;This attribute forces a flex line wrapping, the default value is &lt;code&gt;false&lt;/code&gt;. i.e. if this is set to &lt;code&gt;true&lt;/code&gt; for a flex item, the item will become the first item of a flex line. (A wrapping happens regardless of the flex items being processed in the previous flex line) This attribute is ignored if the &lt;code&gt;flex_wrap&lt;/code&gt; attribute is set to &lt;code&gt;nowrap&lt;/code&gt;. The equivalent attribute isn&#39;t defined in the original CSS Flexible Box Module specification, but having this attribute is useful for Android developers. For example, to flatten the layouts when building a grid-like layout or for a situation where developers want to put a new flex line to make a semantic difference from the previous one, etc.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/assets/layout_wrapBefore.gif&#34; alt=&#34;Wrap before explanation&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Others&lt;/h1&gt; &#xA;&lt;h2&gt;Known differences from the original CSS specification&lt;/h2&gt; &#xA;&lt;p&gt;This library tries to achieve the same capabilities of the original &lt;a href=&#34;https://www.w3.org/TR/css-flexbox-1&#34;&gt;Flexible Box specification&lt;/a&gt; as much as possible, but due to some reasons such as the way specifying attributes can&#39;t be the same between CSS and Android XML, there are some known differences from the original specification.&lt;/p&gt; &#xA;&lt;p&gt;(1) There is no &lt;a href=&#34;https://www.w3.org/TR/css-flexbox-1/#flex-flow-property&#34;&gt;flex-flow&lt;/a&gt; equivalent attribute&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Because &lt;code&gt;flex-flow&lt;/code&gt; is a shorthand for setting the &lt;code&gt;flex-direction&lt;/code&gt; and &lt;code&gt;flex-wrap&lt;/code&gt; properties, specifying two attributes from a single attribute is not practical in Android.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(2) There is no &lt;a href=&#34;https://www.w3.org/TR/css-flexbox-1/#flex-property&#34;&gt;flex&lt;/a&gt; equivalent attribute&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Likewise &lt;code&gt;flex&lt;/code&gt; is a shorthand for setting the &lt;code&gt;flex-grow&lt;/code&gt;, &lt;code&gt;flex-shrink&lt;/code&gt; and &lt;code&gt;flex-basis&lt;/code&gt;, specifying those attributes from a single attribute is not practical.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(3) &lt;code&gt;layout_flexBasisPercent&lt;/code&gt; is introduced instead of &lt;a href=&#34;https://www.w3.org/TR/css-flexbox-1/#flex-basis-property&#34;&gt;flexBasis&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Both &lt;code&gt;layout_flexBasisPercent&lt;/code&gt; in this library and &lt;code&gt;flex-basis&lt;/code&gt; property in the CSS are used to determine the initial length of an individual flex item. The &lt;code&gt;flex-basis&lt;/code&gt; property accepts width values such as &lt;code&gt;1em&lt;/code&gt;, &lt;code&gt;10px&lt;/code&gt;, and &lt;code&gt;content&lt;/code&gt; as strings as well as percentage values such as &lt;code&gt;10%&lt;/code&gt; and &lt;code&gt;30%&lt;/code&gt;. &lt;code&gt;layout_flexBasisPercent&lt;/code&gt; only accepts percentage values. However, specifying initial fixed width values can be done by specifying width (or height) values in layout_width (or layout_height, varies depending on the &lt;code&gt;flexDirection&lt;/code&gt;). Also, the same effect can be done by specifying &#34;wrap_content&#34; in layout_width (or layout_height) if developers want to achieve the same effect as &#39;content&#39;. Thus, &lt;code&gt;layout_flexBasisPercent&lt;/code&gt; only accepts percentage values, which can&#39;t be done through layout_width (or layout_height) for simplicity.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(4) &lt;code&gt;layout_wrapBefore&lt;/code&gt; is introduced.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The equivalent attribute doesn&#39;t exist in the CSS Flexible Box Module specification, but as explained above, Android developers will benefit by having this attribute for having more control over when a wrapping happens.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(5) Default values for &lt;code&gt;alignItems&lt;/code&gt; and &lt;code&gt;alignContent&lt;/code&gt; are set to &lt;code&gt;flex_start&lt;/code&gt; instead of &lt;code&gt;stretch&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Setting &lt;code&gt;stretch&lt;/code&gt; for the &lt;code&gt;alignItems&lt;/code&gt; is expensive because the children of &lt;code&gt;FlexboxLayout&lt;/code&gt; are measured more than twice. The difference is more obvious when the layout hierarchy is deeply nested.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Xamarin Binding&lt;/h2&gt; &#xA;&lt;p&gt;Xamarin binding is now available on &lt;a href=&#34;https://www.nuget.org/packages/FlexboxLayoutXamarinBindingAndroid/&#34;&gt;NuGet&lt;/a&gt; thanks to &lt;a href=&#34;https://github.com/btripp&#34;&gt;@btripp&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Demo apps&lt;/h2&gt; &#xA;&lt;h3&gt;Flexbox Playground demo app&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;demo-playground&lt;/code&gt; module works as a playground demo app for trying various values for the supported attributes. You can install it by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew demo-playground:installDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cat gallery demo app&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;demo-cat-gallery&lt;/code&gt; module showcases the usage of the FlexboxLayoutManager inside the RecyclerView that handles various sizes of views aligned nicely regardless of the device width like the Google Photo app without loading all the images on the memory. Thus compared to using the {@link FlexboxLayout}, it&#39;s much less likely to abuse the memory, which sometimes leads to the OutOfMemoryError.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew demo-cat-gallery:installDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to make contributions&lt;/h2&gt; &#xA;&lt;p&gt;Please read and follow the steps in &lt;a href=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/google/flexbox-layout/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>wordpress-mobile/WordPress-Android</title>
    <updated>2022-07-15T01:45:00Z</updated>
    <id>tag:github.com,2022-07-15:/wordpress-mobile/WordPress-Android</id>
    <link href="https://github.com/wordpress-mobile/WordPress-Android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;WordPress for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WordPress for Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/wordpress-mobile/WordPress-Android&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/wordpress-mobile/WordPress-Android.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;re just looking to install WordPress for Android, you can find it on &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.wordpress.android&amp;amp;referrer=utm_source%3Dgithub%26utm_medium%3Dwebsite&#34;&gt;Google Play&lt;/a&gt;. If you&#39;re a developer wanting to contribute, read on.&lt;/p&gt; &#xA;&lt;h2&gt;Build Instructions&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Make sure you&#39;ve installed &lt;a href=&#34;https://developer.android.com/studio/index.html&#34;&gt;Android Studio&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Install npm using &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;Node Version Manager&lt;/a&gt;(nvm), as described in step one from the &lt;a href=&#34;https://developer.wordpress.org/block-editor/tutorials/devenv/#quickstart&#34;&gt;Block Editor Quickstart guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cd WordPress-Android&lt;/code&gt; to enter the working directory.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;cp gradle.properties-example gradle.properties&lt;/code&gt; to set up the sample app credentials file.&lt;/li&gt; &#xA; &lt;li&gt;In Android Studio, open the project from the local repository. This will auto-generate &lt;code&gt;local.properties&lt;/code&gt; with the SDK location.&lt;/li&gt; &#xA; &lt;li&gt;Recommended: The CI uses JDK11 to build the app and run the tests. Some tests won&#39;t pass on the JDK embedded in Android Studio (JDK8). You might want to set JAVA_HOME and JDK location in Android Studio to JDK11.&lt;/li&gt; &#xA; &lt;li&gt;Go to Tools → AVD Manager and create an emulated device.&lt;/li&gt; &#xA; &lt;li&gt;Run.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Notes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use WordPress.com features (login to WordPress.com, access Reader and Stats, etc) you need a WordPress.com OAuth2 ID and secret. Please read the &lt;a href=&#34;https://raw.githubusercontent.com/wordpress-mobile/WordPress-Android/trunk/#oauth2-authentication&#34;&gt;OAuth2 Authentication&lt;/a&gt; section.&lt;/li&gt; &#xA; &lt;li&gt;While loading/building the app in Android Studio ignore the prompt to update the gradle plugin version as that will probably introduce build errors. On the other hand, feel free to update if you are planning to work on ensuring the compatibility of the newer version.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;OAuth2 Authentication&lt;/h2&gt; &#xA;&lt;p&gt;In order to use WordPress.com functions you will need a client ID and a client secret key. These details will be used to authenticate your application and verify that the API calls being made are valid. You can create an application or view details for your existing applications with our &lt;a href=&#34;https://developer.wordpress.com/apps/&#34;&gt;WordPress.com applications manager&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;When creating your application, you should select &#34;Native client&#34; for the application type. The applications manager currently requires a &#34;redirect URL&#34;, but this isn&#39;t used for mobile apps. Just use &#34;&lt;a href=&#34;https://localhost&#34;&gt;https://localhost&lt;/a&gt;&#34;.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;ve created your application in the &lt;a href=&#34;https://developer.wordpress.com/apps/&#34;&gt;applications manager&lt;/a&gt;, you&#39;ll need to edit the &lt;code&gt;./gradle.properties&lt;/code&gt; file and change the &lt;code&gt;wp.oauth.app_id&lt;/code&gt; and &lt;code&gt;wp.oauth.app_secret&lt;/code&gt; fields. Then you can compile and run the app on a device or an emulator and try to login with a WordPress.com account. Note that authenticating to WordPress.com via Google is not supported in development builds of the app, only in the official release.&lt;/p&gt; &#xA;&lt;p&gt;Note that credentials created with our &lt;a href=&#34;https://developer.wordpress.com/apps/&#34;&gt;WordPress.com applications manager&lt;/a&gt; allow login only and not signup. New accounts must be created using the &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.wordpress.android&#34;&gt;official app&lt;/a&gt; or &lt;a href=&#34;https://wordpress.com/start&#34;&gt;on the web&lt;/a&gt;. Login is restricted to the WordPress.com account with which the credentials were created. In other words, if the credentials were created with &lt;a href=&#34;mailto:foo@email.com&#34;&gt;foo@email.com&lt;/a&gt;, you will only be able to login with &lt;a href=&#34;mailto:foo@email.com&#34;&gt;foo@email.com&lt;/a&gt;. Using another account like &lt;a href=&#34;mailto:bar@email.com&#34;&gt;bar@email.com&lt;/a&gt; will cause the &lt;code&gt;Client cannot use &#34;password&#34; grant_type&lt;/code&gt; error.&lt;/p&gt; &#xA;&lt;p&gt;For security reasons, some account-related actions aren&#39;t supported for development builds when using a WordPress.com account with 2-factor authentication enabled.&lt;/p&gt; &#xA;&lt;p&gt;Read more about &lt;a href=&#34;https://developer.wordpress.com/docs/oauth2/&#34;&gt;OAuth2&lt;/a&gt; and the &lt;a href=&#34;https://developer.wordpress.com/docs/api/&#34;&gt;WordPress.com REST endpoint&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build and Test&lt;/h2&gt; &#xA;&lt;p&gt;To build, install, and test the project from the command line:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ ./gradlew assembleWordPressVanillaDebug                        # assemble the debug .apk&#xA;$ ./gradlew installWordPressVanillaDebug                         # install the debug .apk if you have an&#xA;                                                                 # emulator or an Android device connected&#xA;$ ./gradlew :WordPress:testWordPressVanillaDebugUnitTest         # assemble, install and run unit tests&#xA;$ ./gradlew :WordPress:connectedWordPressVanillaDebugAndroidTest # assemble, install and run Android tests&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Directory structure&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── libs                    # dependencies used to build debug variants&#xA;├── tools                   # script collection&#xA;├── gradle.properties       # properties imported by the build script&#xA;├── WordPress&#xA;│   |-- build.gradle        # main build script&#xA;│&amp;nbsp;&amp;nbsp; └── src&#xA;│&amp;nbsp;&amp;nbsp;     ├── androidTest     # Android test assets, resources and code&#xA;│&amp;nbsp;&amp;nbsp;     ├── test            # Unit tests&#xA;│&amp;nbsp;&amp;nbsp;     ├── main&#xA;│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; ├── assets      # main project assets&#xA;│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; ├── java        # main project java code&#xA;│&amp;nbsp;&amp;nbsp;     │&amp;nbsp;&amp;nbsp; └── res         # main project resources&#xA;│&amp;nbsp;&amp;nbsp;     ├── debug           # debug variant&#xA;│&amp;nbsp;&amp;nbsp;     └── wasabi          # wasabi variant specific resources and manifest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Google Configuration&lt;/h2&gt; &#xA;&lt;p&gt;Google Sign-In is only available for WordPress.com accounts through the &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.wordpress.android&#34;&gt;official app&lt;/a&gt;. Contributors can build and run the app without issue, but Google Sign-In will always fail. Google Sign-In requires configuration files which contain client and server information that can&#39;t be shared publicly. More documentation and guides can be found on the &lt;a href=&#34;https://developers.google.com/identity/&#34;&gt;Google Identity Platform website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://raw.githubusercontent.com/wordpress-mobile/WordPress-Android/trunk/CONTRIBUTING.md&#34;&gt;Contributing Guide&lt;/a&gt; to learn about reporting issues, contributing code, and more ways to contribute.&lt;/p&gt; &#xA;&lt;h2&gt;Security&lt;/h2&gt; &#xA;&lt;p&gt;If you happen to find a security vulnerability, we would appreciate you letting us know at &lt;a href=&#34;https://hackerone.com/automattic&#34;&gt;https://hackerone.com/automattic&lt;/a&gt; and allowing us to respond before disclosing the issue publicly.&lt;/p&gt; &#xA;&lt;h2&gt;Getting in Touch&lt;/h2&gt; &#xA;&lt;p&gt;If you have questions or just want to say hi, join the &lt;a href=&#34;https://chat.wordpress.org&#34;&gt;WordPress Slack&lt;/a&gt; and drop a message on the &lt;code&gt;#mobile&lt;/code&gt; channel.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wordpress-mobile/WordPress-Android/trunk/docs/coding-style.md&#34;&gt;Coding Style&lt;/a&gt; - guidelines and validation and auto-formatting tools&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/wordpress-mobile/WordPress-Android/trunk/docs/pull-request-guidelines.md&#34;&gt;Pull Request Guidelines&lt;/a&gt; - branch naming and how to write good pull requests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Please read the &lt;a href=&#34;https://raw.githubusercontent.com/wordpress-mobile/WordPress-Android/trunk/docs/&#34;&gt;docs&lt;/a&gt; for more.&lt;/p&gt; &#xA;&lt;h2&gt;Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://make.wordpress.org/mobile&#34;&gt;WordPress Mobile Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://make.wordpress.org/mobile/handbook/&#34;&gt;WordPress Mobile Handbook&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;WordPress for Android is an Open Source project covered by the &lt;a href=&#34;https://raw.githubusercontent.com/wordpress-mobile/WordPress-Android/trunk/LICENSE.md&#34;&gt;GNU General Public License version 2&lt;/a&gt;. Note: code in the &lt;code&gt;libs/&lt;/code&gt; directory comes from external libraries, which might be covered by a different license compatible with the GPLv2.&lt;/p&gt;</summary>
  </entry>
</feed>