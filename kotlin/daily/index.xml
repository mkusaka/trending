<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-09-09T01:37:38Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Leon406/SubCrawler</title>
    <updated>2022-09-09T01:37:38Z</updated>
    <id>tag:github.com,2022-09-09:/Leon406/SubCrawler</id>
    <link href="https://github.com/Leon406/SubCrawler" rel="alternate"></link>
    <summary type="html">&lt;p&gt;节点爬取,筛选, 支持Clash,base64订阅解析,生成可用的ss, ssr, v2ray, trojan节点.&lt;/p&gt;&lt;hr&gt;&lt;h4 align=&#34;center&#34;&gt;访客数 &lt;span&gt;👀&lt;/span&gt;&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://profile-counter.glitch.me/Leon406_SubCrawler/count.svg?sanitize=true&#34; alt=&#34;Sub :: Visitor&#39;s Count&#34;&gt; &lt;img width=&#34;0&#34; height=&#34;0&#34; src=&#34;https://profile-counter.glitch.me/Leon406/count.svg?sanitize=true&#34; alt=&#34;Leon406:: Visitor&#39;s Count&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;&lt;span id=&#34;top&#34;&gt;订阅链接&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JACKUSR2089/v2ray-subscribed&#34;&gt;https://github.com/JACKUSR2089/v2ray-subscribed&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/clashconfig/online&#34;&gt;https://github.com/clashconfig/online&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/colatiger/v2ray-nodes&#34;&gt;https://github.com/colatiger/v2ray-nodes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;⭐&lt;/span&gt;&lt;a href=&#34;https://github.com/freefq/free&#34;&gt;https://github.com/freefq/free&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skywolf627/VmessActions&#34;&gt;https://github.com/skywolf627/VmessActions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pojiezhiyuanjun/freev2&#34;&gt;pojiezhiyuanjun/freev2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/adiwzx/freenode&#34;&gt;https://github.com/adiwzx/freenode&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;优质节点池&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;⭐&lt;/span&gt; &lt;a href=&#34;https://proxies.bihai.cf&#34;&gt;https://proxies.bihai.cf&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://fq.lonxin.net/&#34;&gt;https://fq.lonxin.net/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;节点池配置&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shoujiyanxishe/atu&#34;&gt;https://github.com/shoujiyanxishe/atu&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;有服务器的可自行搭建 &lt;a href=&#34;https://github.com/Leon406/proxypool&#34;&gt;proxypool&lt;/a&gt; 配置参考上面etproxypool&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;&lt;span id=&#34;subCon&#34;&gt;订阅转换&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://acl4ssr-sub.github.io/&#34;&gt;github acl4ssr-sub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sub.v1.mk/&#34;&gt;&lt;span&gt;⭐&lt;/span&gt;sub v1&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tindy2013/subconverter/releases&#34;&gt;本地搭建&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sub.tsutsu.cc/&#34;&gt;つつの&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.con8.tk/&#34;&gt;con8&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://id9.cc/&#34;&gt;品云&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sub.mcwy.cloud/&#34;&gt;肥羊转换&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;节点测速&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本地测速 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/tindy2013/stairspeedtest-reborn&#34;&gt;stairspeedtest-reborn&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/xxf098/LiteSpeedTest&#34;&gt;LiteSpeedTest&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/bulianglin/demo&#34;&gt;nodescatch&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;在线测速 &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://fjcu.june628.ml/&#34;&gt;霸气&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://fjct.june628.ml/&#34;&gt;霸气2&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;http://hkst.666138.xyz/&#34;&gt;666138&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://speedtest.zeroteam.top/&#34;&gt;zeroteam&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;&lt;a href=&#34;http://gz.cloudtest.cc/&#34;&gt;品云&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;&lt;a href=&#34;http://gz2.cloudtest.cc/&#34;&gt;品云2&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;del&gt;&lt;a href=&#34;http://gy.cloudtest.cc/&#34;&gt;品云3&lt;/a&gt;&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;项目生成内容&lt;/h2&gt; &#xA;&lt;h3&gt;节点&lt;/h3&gt; &#xA;&lt;p&gt;删除不安全加密的节点&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;SSR&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;none&lt;/li&gt; &#xA;   &lt;li&gt;rc4&lt;/li&gt; &#xA;   &lt;li&gt;rc4-md5&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;SS&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;aes-128-cfb&lt;/li&gt; &#xA;   &lt;li&gt;aes-256-cfb&lt;/li&gt; &#xA;   &lt;li&gt;rc4-md5&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;VMESS&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;none&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;本地服务器筛选(不定时更新),可自行clone项目,执行localFilter.bat生成&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;github action ( &lt;a href=&#34;https://raw.githubusercontent.com/Leon406/SubCrawler/main/sub/info.md&#34;&gt;节点详情&lt;/a&gt; )&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/ss&#34;&gt;ss&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/ssr&#34;&gt;ssr&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/v2&#34;&gt;v2ray&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/tr&#34;&gt;trojan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Leon406/SubCrawler/main/sub/share/all&#34;&gt;四合一转换&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;本地构建 ( &lt;a href=&#34;https://raw.githubusercontent.com/Leon406/SubCrawler/main/sub/info2.md&#34;&gt;节点详情&lt;/a&gt; )&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/private/ss&#34;&gt;本地ss&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/private/ssr&#34;&gt;本地ssr&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/private/v2&#34;&gt;本地v2ray&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/private/tr&#34;&gt;本地trojan&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Leon406/SubCrawler/main/sub/share/private/all&#34;&gt;四合一转换&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;默认生成的为base64编码(v2rayN/ss/ssr等客户端可直接使用),其他请自行使用&lt;a href=&#34;https://raw.githubusercontent.com/Leon406/SubCrawler/main/#subCon&#34;&gt;订阅转换&lt;/a&gt;进行转换&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Hosts&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/blackhosts&#34;&gt;广告屏蔽hosts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/whitehost&#34;&gt;googlehosts重筛&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.fastgit.org/Leon406/SubCrawler/master/sub/share/host&#34;&gt;github及常用域名&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;走代理后ip匿名检测&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://bgp.he.net/&#34;&gt;https://bgp.he.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://browserleaks.com/&#34;&gt;https://browserleaks.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ip.voidsec.com/&#34;&gt;https://ip.voidsec.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipinfo.io/&#34;&gt;https://ipinfo.io/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipleak.com/&#34;&gt;https://ipleak.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipleak.net/&#34;&gt;https://ipleak.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipleak.org/&#34;&gt;https://ipleak.org/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ipx.ac/run&#34;&gt;https://ipx.ac/run&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://nstool.netease.com/&#34;&gt;https://nstool.netease.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://test-ipv6.com/&#34;&gt;https://test-ipv6.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whatismyipaddress.com/blacklist-check&#34;&gt;https://whatismyipaddress.com/blacklist-check&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://whoer.net/&#34;&gt;https://whoer.net/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.astrill.com/dns-leak-test&#34;&gt;https://www.astrill.com/dns-leak-test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.astrill.com/ipv6-leak-test&#34;&gt;https://www.astrill.com/ipv6-leak-test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.astrill.com/port-scan&#34;&gt;https://www.astrill.com/port-scan&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.astrill.com/vpn-leak-test&#34;&gt;https://www.astrill.com/vpn-leak-test&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.astrill.com/what-is-my-ip&#34;&gt;https://www.astrill.com/what-is-my-ip&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.deviceinfo.me/&#34;&gt;https://www.deviceinfo.me/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.dnsleaktest.com/&#34;&gt;https://www.dnsleaktest.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.doileak.com/&#34;&gt;https://www.doileak.com/&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.expressvpn.com/webrtc-leak-test&#34;&gt;https://www.expressvpn.com/webrtc-leak-test&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用软件&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;平台&lt;/th&gt; &#xA;   &lt;th&gt;软件&lt;/th&gt; &#xA;   &lt;th&gt;支持协议&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-windows/releases&#34;&gt;shadowsocks-windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/HMBSbige/ShadowsocksR-Windows/releases&#34;&gt;ShadowsocksR-Windows&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/2dust/v2rayN/releases&#34;&gt;V2rayN&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS、Trojan、Vmess、VLESS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Fndroid/clash_for_windows_pkg/releases&#34;&gt;Clash CFW &lt;strong&gt;(推荐)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS、SSR、Trojan、Vmess、VLESS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Windows&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/TheMRLL/winxray/releases&#34;&gt;WinXray&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS、SSR、Trojan、V2ray（Vmess、VLESS）Xray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Linux / Windows / macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Shadowsocks-NET/Qv2ray&#34;&gt;Qv2ray&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;VMess / VLESS / SSR / Trojan / Trojan-Go/ NaiveProxy /HTTP(S) / SOCKS5&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yichengchen/clashX/releases&#34;&gt;ClashX&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS、SSR、Trojan、V2ray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;macOS&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/yanue/V2rayU/releases&#34;&gt;V2rayU&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS、SSR、Trojan、V2ray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-android/releases&#34;&gt;shadowsocks-android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/HMBSbige/ShadowsocksR-Android/releases&#34;&gt;ShadowsocksR-Android&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSR&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/2dust/v2rayNG/releases&#34;&gt;V2rayNG&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS、Trojan、V2ray（Vmess、VLESS）、Xray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Kr328/ClashForAndroid/releases&#34;&gt;ClashForAndroid &lt;strong&gt;(推荐)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SS、SSR、Trojan、Vmess、VLESS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/xxf098/shadowsocksr-v2ray-trojan-android/releases&#34;&gt;SSRAY&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SSR、V2ray、Trojan&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/SagerNet/SagerNet/releases&#34;&gt;SagerNet&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;VMess / VLESS / SSR / Trojan / Trojan-Go/ NaiveProxy / HTTP(S) / SOCKS5/etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Android&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MatsuriDayo/Matsuri&#34;&gt;Matsuri (茉莉)&lt;/a&gt; sager分支&lt;/td&gt; &#xA;   &lt;td&gt;VMess / VLESS / SSR / Trojan / Trojan-Go/ NaiveProxy / HTTP(S) / SOCKS5/etc.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IOS&lt;/td&gt; &#xA;   &lt;td&gt;Shadowrocket 小火箭 IOS非国区购买&lt;/td&gt; &#xA;   &lt;td&gt;SS、SSR、Trojan、V2ray、VLESS&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IOS&lt;/td&gt; &#xA;   &lt;td&gt;Quantumult IOS非国区购买&lt;/td&gt; &#xA;   &lt;td&gt;SS、SSR、Trojan、V2ray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;IOS&lt;/td&gt; &#xA;   &lt;td&gt;QuantumultX IOS非国区购买&lt;/td&gt; &#xA;   &lt;td&gt;SS、SSR、Trojan、V2ray&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Stargazers over time&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://starchart.cc/Leon406/SubCrawler&#34;&gt;&lt;img src=&#34;https://starchart.cc/Leon406/SubCrawler.svg?sanitize=true&#34; alt=&#34;Stargazers over time&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;本项目仅限个人自己使用，禁止使用本项目进行营利和做其他违法事情，产生的一切后果本项目概不负责&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Leon406/SubCrawler/main/#top&#34;&gt;回到顶部&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JLLeitschuh/ktlint-gradle</title>
    <updated>2022-09-09T01:37:38Z</updated>
    <id>tag:github.com,2022-09-09:/JLLeitschuh/ktlint-gradle</id>
    <link href="https://github.com/JLLeitschuh/ktlint-gradle" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A ktlint gradle plugin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ktlint Gradle&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Provides a convenient wrapper plugin over the &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt; project.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;!-- Note: if changing the line below, the `sed` command in the perform-release.yaml needs to be updated too --&gt; &#xA;&lt;p&gt;Latest plugin version: &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/CHANGELOG.md#---20220824&#34;&gt;11.0.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kotlinlang.slack.com/messages/CKS3XG0LS&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@kotlinlang/ktlint-yellow.svg?logo=slack&#34; alt=&#34;Join the chat at https://kotlinlang.slack.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://travis-ci.org/JLLeitschuh/ktlint-gradle&#34;&gt;&lt;img src=&#34;https://travis-ci.org/JLLeitschuh/ktlint-gradle.svg?branch=master&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ktlint.github.io/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg?sanitize=true&#34; alt=&#34;ktlint&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://plugins.gradle.org/plugin/org.jlleitschuh.gradle.ktlint&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v/https/plugins.gradle.org/m2/org/jlleitschuh/gradle/ktlint/org.jlleitschuh.gradle.ktlint.gradle.plugin/maven-metadata.xml.svg?colorB=007ec6&amp;amp;label=gradlePluginPortal&#34; alt=&#34;Gradle Plugin Portal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This plugin creates convenient tasks in your Gradle project that run &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt; checks or do code auto format.&lt;/p&gt; &#xA;&lt;p&gt;The plugin can be applied to any project, but only activates if that project has the kotlin plugin applied. The assumption being that you would not want to lint code you weren&#39;t compiling.&lt;/p&gt; &#xA;&lt;h2&gt;Table of content&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#supported-kotlin-plugins&#34;&gt;Supported Kotlin plugins&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#how-to-use&#34;&gt;How to use&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#minimal-supported-versions&#34;&gt;Minimal support versions&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#ktlint-plugin&#34;&gt;Ktlint plugin&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#simple-setup&#34;&gt;Simple setup&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#using-legacy-apply-method&#34;&gt;Using legacy apply method&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#applying-to-subprojects&#34;&gt;How to apply to all subprojects&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#baseline-support&#34;&gt;Baseline support&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#testing-ktlint-snapshots&#34;&gt;Testing KtLint snapshots&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#intellij-idea-only-plugin&#34;&gt;Intellij IDEA plugin&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#idea-plugin-simple-setup&#34;&gt;Simple setup&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#idea-plugin-setup-using-legacy-apply-method&#34;&gt;Using legacy apply method&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#configuration&#34;&gt;Plugin configuration&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#setting-reports-output-directory&#34;&gt;Setting reports output directory&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#custom-reporters&#34;&gt;Customer reporters&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#changing-workers-memory-usage&#34;&gt;Changing workers memory usage&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#samples&#34;&gt;Samples&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#tasks-added&#34;&gt;Task details&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#main-tasks&#34;&gt;Main tasks&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#additional-helper-tasks&#34;&gt;Additional tasks&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#developers&#34;&gt;Developers&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#importing&#34;&gt;Importing the project&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#building&#34;&gt;Building the project&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#links&#34;&gt;Links&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Supported Kotlin plugins&lt;/h2&gt; &#xA;&lt;p&gt;This plugin supports the following kotlin plugins:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&#34;kotlin&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;kotlin-android&#34;&lt;/li&gt; &#xA; &lt;li&gt;&#34;kotlin-multiplatform&#34;&lt;/li&gt; &#xA; &lt;li&gt;project kotlin script files&lt;/li&gt; &#xA; &lt;li&gt;&#34;org.jetbrains.kotlin.js&#34;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you know any new Kotlin plugin that is not in this list - please, open a &lt;a href=&#34;https://github.com/JLLeitschuh/ktlint-gradle/issues/new&#34;&gt;new issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to use&lt;/h2&gt; &#xA;&lt;h3&gt;Minimal supported versions&lt;/h3&gt; &#xA;&lt;p&gt;This plugin was written using the new API available for the Gradle script Kotlin builds. This API is available in new versions of Gradle.&lt;/p&gt; &#xA;&lt;p&gt;Minimal supported &lt;a href=&#34;https://www.gradle.org&#34;&gt;Gradle&lt;/a&gt; version: &lt;code&gt;6.8&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Minimal supported &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt; version: &lt;code&gt;0.34.0&lt;/code&gt; (additionally excluding &lt;code&gt;0.37.0&lt;/code&gt; on Windows OS and &lt;code&gt;0.38.0&lt;/code&gt;, &lt;code&gt;0.43.0&lt;/code&gt;, &lt;code&gt;0.43.1&lt;/code&gt; on all OS types)&lt;/p&gt; &#xA;&lt;h3&gt;Ktlint plugin&lt;/h3&gt; &#xA;&lt;h4&gt;Simple setup&lt;/h4&gt; &#xA;&lt;p&gt;Build script snippet for new plugin mechanism introduced in Gradle 2.1:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Groovy&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;plugins {&#xA;  id &#34;org.jlleitschuh.gradle.ktlint&#34; version &#34;&amp;lt;current_version&amp;gt;&#34;&#xA;}&#xA;&#xA;repositories {&#xA;  // Required to download KtLint&#xA;  mavenCentral()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Kotlin&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;  id(&#34;org.jlleitschuh.gradle.ktlint&#34;) version &#34;&amp;lt;current_version&amp;gt;&#34;&#xA;}&#xA;&#xA;repositories {&#xA;  // Required to download KtLint&#xA;  mavenCentral()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Using legacy apply method&lt;/h4&gt; &#xA;&lt;p&gt;Build script snippet for use in all Gradle versions:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Groovy&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;buildscript {&#xA;  repositories {&#xA;    maven {&#xA;      url &#34;https://plugins.gradle.org/m2/&#34;&#xA;    }&#xA;  }&#xA;  dependencies {&#xA;    classpath &#34;org.jlleitschuh.gradle:ktlint-gradle:&amp;lt;current_version&amp;gt;&#34;&#xA;  }&#xA;}&#xA;&#xA;repositories {&#xA;  // Required to download KtLint&#xA;  mavenCentral()&#xA;}&#xA;&#xA;apply plugin: &#34;org.jlleitschuh.gradle.ktlint&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Kotlin&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;buildscript {&#xA;  repositories {&#xA;    maven(&#34;https://plugins.gradle.org/m2/&#34;)&#xA;  }&#xA;  dependencies {&#xA;    classpath(&#34;org.jlleitschuh.gradle:ktlint-gradle:&amp;lt;current_version&amp;gt;&#34;)&#xA;  }&#xA;}&#xA;&#xA;repositories {&#xA;  // Required to download KtLint&#xA;  mavenCentral()&#xA;}&#xA;&#xA;apply(plugin = &#34;org.jlleitschuh.gradle.ktlint&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Applying to subprojects&lt;/h4&gt; &#xA;&lt;p&gt;Optionally apply plugin to all project modules:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Groovy&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;subprojects {&#xA;    apply plugin: &#34;org.jlleitschuh.gradle.ktlint&#34; // Version should be inherited from parent&#xA;&#xA;    repositories {&#xA;        // Required to download KtLint&#xA;        mavenCentral()&#xA;    }&#xA;&#xA;    // Optionally configure plugin&#xA;    ktlint {&#xA;        debug = true&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Kotlin&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;subprojects {&#xA;    apply(plugin = &#34;org.jlleitschuh.gradle.ktlint&#34;) // Version should be inherited from parent&#xA;&#xA;    repositories {&#xA;        // Required to download KtLint&#xA;        mavenCentral()&#xA;    }&#xA;&#xA;    // Optionally configure plugin&#xA;    configure&amp;lt;org.jlleitschuh.gradle.ktlint.KtlintExtension&amp;gt; {&#xA;        debug.set(true)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Baseline support&lt;/h4&gt; &#xA;&lt;p&gt;Plugin supports KtLint baseline with following limitations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Format tasks ignore baseline. See &lt;a href=&#34;https://github.com/pinterest/ktlint/issues/1072&#34;&gt;#1072&lt;/a&gt; KtLint issue for more details.&lt;/li&gt; &#xA; &lt;li&gt;One baseline file is generated per one Gradle project (module).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Run task &lt;code&gt;ktlintGenerateBaseline&lt;/code&gt; to generate a new baseline.&lt;/p&gt; &#xA;&lt;h4&gt;Testing KtLint snapshots&lt;/h4&gt; &#xA;&lt;p&gt;To test KtLint snapshots add following configuration into project build script (latest KtLint snapshot version name you could find &lt;a href=&#34;https://github.com/pinterest/ktlint/raw/master/gradle.properties#L1&#34;&gt;here&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Groovy&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;    maven {&#xA;      url &#39;https://oss.sonatype.org/content/repositories/snapshots&#39;&#xA;    }&#xA;}&#xA;&#xA;ktlint {&#xA;  version = &#34;0.41.0-SNAPSHOT&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Kotlin&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;repositories {&#xA;    maven(&#34;https://oss.sonatype.org/content/repositories/snapshots&#34;)&#xA;}&#xA;&#xA;ktlint {&#xA;    version.set(&#34;0.41.0-SNAPSHOT&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;IntelliJ Idea Only Plugin&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This plugin is automatically applied by the main &lt;code&gt;ktlint&lt;/code&gt; plugin.&lt;/p&gt; &#xA;&lt;p&gt;This plugin just adds &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#additional-helper-tasks&#34;&gt;special tasks&lt;/a&gt; that can generate IntelliJ IDEA codestyle rules using ktlint.&lt;/p&gt; &#xA;&lt;h4&gt;Idea plugin simple setup&lt;/h4&gt; &#xA;&lt;p&gt;Build script snippet for new plugin mechanism introduced in Gradle 2.1:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;  id(&#34;org.jlleitschuh.gradle.ktlint-idea&#34;) version &#34;&amp;lt;current_version&amp;gt;&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Idea plugin setup using legacy apply method&lt;/h4&gt; &#xA;&lt;p&gt;For all Gradle versions:&lt;/p&gt; &#xA;&lt;p&gt;Use the same &lt;code&gt;buildscript&lt;/code&gt; logic as &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#simple-setup&#34;&gt;above&lt;/a&gt;, but with this instead of the above suggested &lt;code&gt;apply&lt;/code&gt; line. If you also want the GIT pre-commit gradle tasks, keep both &lt;code&gt;apply&lt;/code&gt; variations.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;apply plugin: &#34;org.jlleitschuh.gradle.ktlint-idea&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Configuration&lt;/h3&gt; &#xA;&lt;p&gt;The following configuration block is &lt;em&gt;optional&lt;/em&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you don&#39;t configure this the defaults defined in the &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/plugin/src/main/kotlin/org/jlleitschuh/gradle/ktlint/KtlintExtension.kt&#34;&gt;KtlintExtension&lt;/a&gt; object will be used.&lt;/p&gt; &#xA;&lt;p&gt;The version of ktlint used by default &lt;em&gt;may change&lt;/em&gt; between patch versions of this plugin. If you don&#39;t want to inherit these changes then make sure you lock your version here.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Groovy&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;import org.jlleitschuh.gradle.ktlint.reporter.ReporterType&#xA;&#xA;ktlint {&#xA;    version = &#34;0.22.0&#34;&#xA;    debug = true&#xA;    verbose = true&#xA;    android = false&#xA;    outputToConsole = true&#xA;    outputColorName = &#34;RED&#34;&#xA;    ignoreFailures = true&#xA;    enableExperimentalRules = true&#xA;    additionalEditorconfigFile = file(&#34;/some/additional/.editorconfig&#34;)&#xA;    disabledRules = [&#34;final-newline&#34;]&#xA;    baseline = file(&#34;my-project-ktlint-baseline.xml&#34;)&#xA;    reporters {&#xA;        reporter &#34;plain&#34;&#xA;        reporter &#34;checkstyle&#34;&#xA;        reporter &#34;sarif&#34;&#xA;&#xA;        customReporters {&#xA;            &#34;csv&#34; {&#xA;                fileExtension = &#34;csv&#34;&#xA;                dependency = project(&#34;:project-reporters:csv-reporter&#34;)&#xA;            }&#xA;            &#34;yaml&#34; {&#xA;                fileExtension = &#34;yml&#34;&#xA;                dependency = &#34;com.example:ktlint-yaml-reporter:1.0.0&#34;&#xA;            }&#xA;        }&#xA;    }&#xA;    kotlinScriptAdditionalPaths {&#xA;        include fileTree(&#34;scripts/&#34;)&#xA;    }&#xA;    filter {&#xA;        exclude(&#34;**/generated/**&#34;)&#xA;        include(&#34;**/kotlin/**&#34;)&#xA;    }&#xA;}&#xA;&#xA;dependencies {&#xA;    ktlintRuleset &#34;com.github.username:rulseset:master-SNAPSHOT&#34;&#xA;    ktlintRuleset files(&#34;/path/to/custom/rulseset.jar&#34;)&#xA;    ktlintRuleset project(&#34;:chore:project-ruleset&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;or in kotlin script:&lt;/p&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Kotlin&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import org.jlleitschuh.gradle.ktlint.reporter.ReporterType&#xA;&#xA;configure&amp;lt;org.jlleitschuh.gradle.ktlint.KtlintExtension&amp;gt; {&#xA;    version.set(&#34;0.22.0&#34;)&#xA;    debug.set(true)&#xA;    verbose.set(true)&#xA;    android.set(false)&#xA;    outputToConsole.set(true)&#xA;    outputColorName.set(&#34;RED&#34;)&#xA;    ignoreFailures.set(true)&#xA;    enableExperimentalRules.set(true)&#xA;    additionalEditorconfigFile.set(file(&#34;/some/additional/.editorconfig&#34;))&#xA;    disabledRules.set(setOf(&#34;final-newline&#34;))&#xA;    baseline.set(file(&#34;my-project-ktlint-baseline.xml&#34;))&#xA;    reporters {&#xA;        reporter(ReporterType.PLAIN)&#xA;        reporter(ReporterType.CHECKSTYLE)&#xA;&#xA;        customReporters {&#xA;            register(&#34;csv&#34;) {&#xA;                fileExtension = &#34;csv&#34;&#xA;                dependency = project(&#34;:project-reporters:csv-reporter&#34;)&#xA;            }&#xA;            register(&#34;yaml&#34;) {&#xA;                fileExtension = &#34;yml&#34;&#xA;                dependency = &#34;com.example:ktlint-yaml-reporter:1.0.0&#34;&#xA;            }&#xA;        }&#xA;    }&#xA;    kotlinScriptAdditionalPaths {&#xA;        include(fileTree(&#34;scripts/&#34;))&#xA;    }&#xA;    filter {&#xA;        exclude(&#34;**/generated/**&#34;)&#xA;        include(&#34;**/kotlin/**&#34;)&#xA;    }&#xA;}&#xA;&#xA;dependencies {&#xA;    ktlintRuleset(&#34;com.github.username:rulseset:master-SNAPSHOT&#34;)&#xA;    ktlintRuleset(files(&#34;/path/to/custom/rulseset.jar&#34;))&#xA;    ktlintRuleset(project(&#34;:chore:project-ruleset&#34;))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Setting reports output directory&lt;/h4&gt; &#xA;&lt;p&gt;It is possible also to define different from default output directory for generated reports (by default it is &#34;build/reports/ktlint&#34;):&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Groovy&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;tasks.withType(org.jlleitschuh.gradle.ktlint.tasks.GenerateReportsTask) {&#xA;    reportsOutputDirectory = project.layout.buildDirectory.dir(&#34;other/location/$name&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Kotlin script&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;tasks.withType&amp;lt;org.jlleitschuh.gradle.ktlint.tasks.GenerateReportsTask&amp;gt; {&#xA;    reportsOutputDirectory.set(&#xA;        project.layout.buildDirectory.dir(&#34;other/location/$name&#34;)&#xA;    )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Custom reporters&lt;/h4&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If Ktlint custom reporter creates report output file internally, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class CsvReporter(&#xA;    private val out: PrintStream&#xA;) : Reporter {&#xA;    override fun onLintError(file: String, err: LintError, corrected: Boolean) {&#xA;        val line = &#34;$file;${err.line};${err.col};${err.ruleId};${err.detail};$corrected&#34;&#xA;        out.println(line)&#xA;        File(&#34;some_other_file.txt&#34;).write(line) // &amp;lt;-- Here!!!&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&#34;some_other_file.txt&#34; won&#39;t be captured as task output. This may lead to the problem, that task will always be not &#34;UP_TO_DATE&#34; and caching will not work.&lt;/p&gt; &#xA;&lt;h4&gt;Changing workers memory usage&lt;/h4&gt; &#xA;&lt;p&gt;By default, KtLint Gradle workers will use at most 256mb of heap size. For some projects it may be not enough, but it is possible to change:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Groovy&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;tasks.withType(org.jlleitschuh.gradle.ktlint.tasks.BaseKtLintCheckTask).configureEach {&#xA;    it.workerMaxHeapSize.set(&#34;512m&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Kotlin script&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;tasks.withType&amp;lt;org.jlleitschuh.gradle.ktlint.tasks.BaseKtLintCheckTask&amp;gt; {&#xA;    workerMaxHeapSize.set(&#34;512m&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Samples&lt;/h3&gt; &#xA;&lt;p&gt;This repository provides the following examples of how to set up this plugin:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/android-app&#34;&gt;android-app&lt;/a&gt; - applies plugin to android application project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-gradle&#34;&gt;kotlin-gradle&lt;/a&gt; - applies plugin to plain Kotlin project that uses groovy in &lt;code&gt;build.gradle&lt;/code&gt; files&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-js&#34;&gt;kotlin-js&lt;/a&gt; - applies plugin to kotlin js project&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-ks&#34;&gt;kotlin-ks&lt;/a&gt; - applies plugin to plain Kotlin project that uses Kotlin DSL in &lt;code&gt;build.gradle.kts&lt;/code&gt; files&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-mpp&#34;&gt;kotlin-multiplatform&lt;/a&gt; - applies plugin to Kotlin common multiplatform module&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-mpp-android&#34;&gt;kotlin-multiplatform-android&lt;/a&gt; - applies plugin to Kotlin android multiplatform module&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-rulesets-using&#34;&gt;kotlin-rulesets-using&lt;/a&gt; - adds custom &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-rulesets-creating&#34;&gt;example&lt;/a&gt; ruleset&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-reporter-using&#34;&gt;kotlin-reporter-using&lt;/a&gt; - adds custom &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/samples/kotlin-reporter-creating&#34;&gt;example&lt;/a&gt; reporter&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tasks Added&lt;/h2&gt; &#xA;&lt;h3&gt;Main tasks&lt;/h3&gt; &#xA;&lt;p&gt;This plugin adds following tasks to every project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;loadKtlintReporters&lt;/code&gt; - preloads KtLint &lt;code&gt;Reporter&lt;/code&gt;s&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;runKtlintCheckOverKotlinScripts&lt;/code&gt; - runs actual lint check over project Kotlin script files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ktlintKotlinScriptCheck&lt;/code&gt; - generates reports and prints issues into Gradle console based on lint check found errors. This task execution depends on &lt;code&gt;loadKtlintReporters&lt;/code&gt; and &lt;code&gt;runKtlintCheckOverKotlinScripts&lt;/code&gt; tasks execution outputs&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;runKtlintFormatOverKotlinScripts&lt;/code&gt; - tries to format according to the code style project Kotlin script files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ktlintKotlinScriptFormat&lt;/code&gt; - generate reports and prints issues into Gradle console based on found non-formattable errors. This task execution depends on &lt;code&gt;loadKtlintReporters&lt;/code&gt; and &lt;code&gt;runKtlintFormatOverKotlinScripts&lt;/code&gt; tasks execution outputs&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ktlintCheck&lt;/code&gt; - checks all &lt;code&gt;SourceSet&lt;/code&gt;s and project Kotlin script files&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ktlintFormat&lt;/code&gt; - tries to format according to the code style all &lt;code&gt;SourceSet&lt;/code&gt;s Kotlin files and project Kotlin script files&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Then for each &lt;code&gt;SourceSet&lt;/code&gt; plugin adds following tasks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;runKtlintCheckOver[source set name]SourceSet&lt;/code&gt; - runs actual lint check on every Kotlin file in given &lt;code&gt;SourceSet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ktlint[source set name]SourceSetCheck&lt;/code&gt; - generates reports and prints issues into Gradle console based on lint check found errors. This task execution depends on &lt;code&gt;loadKtlintReporters&lt;/code&gt; and &lt;code&gt;runKtlintCheckOver[source set name]SourceSet&lt;/code&gt; tasks execution outputs&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;runKtlintFormatOver[source set name]SourceSet&lt;/code&gt; - tries to format according to the code style every Kotlin file in given &lt;code&gt;SourceSet&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ktlint[source set name]SourceSetCheck&lt;/code&gt; - generates reports and prints issues into Gradle console based on found non-formattable errors. This task execution depends on &lt;code&gt;loadKtlintReporters&lt;/code&gt; and &lt;code&gt;runKtlintFormatOver[source set name]SourceSet&lt;/code&gt; tasks execution outputs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Additional helper tasks&lt;/h3&gt; &#xA;&lt;p&gt;Following additional tasks are added:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;ktlintApplyToIdea&lt;/code&gt; - The task generates IntelliJ IDEA (or Android Studio) Kotlin style files in the project &lt;code&gt;.idea/&lt;/code&gt; folder. &lt;strong&gt;Note&lt;/strong&gt; that this task will overwrite the existing style file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;ktlintApplyToIdeaGlobally&lt;/code&gt; - The task generates IntelliJ IDEA (or Android Studio) Kotlin style files in the user home IDEA (or Android Studio) settings folder. &lt;strong&gt;Note&lt;/strong&gt; that this task will overwrite the existing style file.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;addKtlintCheckGitPreCommitHook&lt;/code&gt; - adds &lt;a href=&#34;https://www.git-scm.com/&#34;&gt;Git&lt;/a&gt; &lt;code&gt;pre-commit&lt;/code&gt; hook, that runs ktlint check over staged files.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;addKtlintFormatGitPreCommitHook&lt;/code&gt; - adds &lt;a href=&#34;https://www.git-scm.com/&#34;&gt;Git&lt;/a&gt; &lt;code&gt;pre-commit&lt;/code&gt; hook, that runs ktlint format over staged files and adds fixed files back to commit.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;All these additional tasks are always added &lt;strong&gt;only&lt;/strong&gt; to the root project.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Is it possible to not stop task execution if some of the subprojects tasks failed?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Yes. Just use gradle &lt;code&gt;--continue&lt;/code&gt; option:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./gradlew --continue ktlintCheck&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Can I mix old plugin and new plugin API setup in my project (see &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#simple-setup&#34;&gt;simple-setup&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/#using-legacy-apply-method&#34;&gt;using legacy apply method&lt;/a&gt;)?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;No. These approaches are not equivalent to how they work. The problem that the plugin may not find some of the kotlin plugins if both approaches are used in the project configuration. Especially it is related to the Android plugin.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Does plugin check change files incrementally?&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Yes, check tasks support it. On the first run, the task will check all files in the source set, on subsequent runs it will check only added/modified files.&lt;/p&gt; &#xA;&lt;p&gt;Format tasks do not check files incrementally.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;I could not filter dynamically attached sources that are located outside of the project dir.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Gradle based filtering are only working for files located inside project (subproject) folder, see &lt;a href=&#34;https://github.com/gradle/gradle/issues/3417&#34;&gt;https://github.com/gradle/gradle/issues/3417&lt;/a&gt; To filter files outside project dir, use:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;exclude { element -&amp;gt; element.file.path.contains(&#34;generated/&#34;) }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Running KtLint fails with strange exception (for example, check &lt;a href=&#34;https://github.com/JLLeitschuh/ktlint-gradle/issues/383&#34;&gt;#383&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Ensure you are not pinning Kotlin version for &#34;ktlint*&#34; configurations added by plugin.&lt;/p&gt; &#xA;&lt;p&gt;KtLint relies on Kotlin compiler to parse source files. Each version of KtLint are build using specific Kotlin version.&lt;/p&gt; &#xA;&lt;p&gt;To exclude &#34;ktlint*&#34; Gradle configurations from Kotlin version pinning - use following approach:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;configurations.all {&#xA;    if (!name.startsWith(&#34;ktlint&#34;)) {&#xA;        resolutionStrategy {&#xA;            eachDependency {&#xA;                // Force Kotlin to our version&#xA;                if (requested.group == &#34;org.jetbrains.kotlin&#34;) {&#xA;                    useVersion(&#34;1.3.72&#34;)&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Developers&lt;/h2&gt; &#xA;&lt;h3&gt;Importing&lt;/h3&gt; &#xA;&lt;p&gt;Import the &lt;a href=&#34;https://raw.githubusercontent.com/JLLeitschuh/ktlint-gradle/master/settings.gradle.kts&#34;&gt;settings.gradle.kts&lt;/a&gt; file into your IDE.&lt;/p&gt; &#xA;&lt;p&gt;To enable the Android sample either define the &lt;code&gt;ANDROID_HOME&lt;/code&gt; environmental variable or add a &lt;code&gt;local.properties&lt;/code&gt; file to the project root folder with the following content:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-properties&#34;&gt;sdk.dir=&amp;lt;android-sdk-location&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building&lt;/h3&gt; &#xA;&lt;p&gt;Building the plugin: &lt;code&gt;./plugin/gradlew build&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;On how to run the current plugin snapshot check on sample projects: &lt;code&gt;./gradlew ktlintCheck&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Running tests from &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IDEA IDE&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;To run tests in &lt;a href=&#34;https://www.jetbrains.com/idea/&#34;&gt;IDEA IDE&lt;/a&gt;, firstly you need to run following gradle task (or after any dependency change):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ./plugin/gradlew -p ./plugin pluginUnderTestMetadata&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Optionally you can add this step test run configuration.&lt;/p&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://plugins.gradle.org/plugin/org.jlleitschuh.gradle.ktlint&#34;&gt;Ktlint Gradle Plugin on the Gradle Plugin Registry&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
</feed>