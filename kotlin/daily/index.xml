<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-29T01:32:06Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Yawn-Sean/Daily_CF_Problems</title>
    <updated>2024-02-29T01:32:06Z</updated>
    <id>tag:github.com,2024-02-29:/Yawn-Sean/Daily_CF_Problems</id>
    <link href="https://github.com/Yawn-Sean/Daily_CF_Problems" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Daily_CF_Problems&lt;/h1&gt; &#xA;&lt;h2&gt;Main Activities (Daily)&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Update 2 Codeforces problems with different difficulty everyday except Sunday in the file &lt;code&gt;daily_problems/${YYYY}/${MM}/${MMDD}/problems.md&lt;/code&gt; with hints.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update the solution to at least 1 of the 2 problems in the file &lt;code&gt;daily_problems/${YYYY}/${MM}/${MMDD}/solution/${problem_code}.md&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Categorize the problems by their used methods in the file &lt;code&gt;categories/${method}.md&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to join&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Upload your solution in the folder: &lt;code&gt;daily_problems/${YYYY}/${MM}/${MMDD}/personal_submission&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Remember to name your submission code &lt;code&gt;${problem_code}_{your_name}.{py/cpp/...}&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>platonai/PulsarRPA</title>
    <updated>2024-02-29T01:32:06Z</updated>
    <id>tag:github.com,2024-02-29:/platonai/PulsarRPA</id>
    <link href="https://github.com/platonai/PulsarRPA" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Automate webpages at scale, scrape web data completely and accurately with high performance, distributed RPA.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;What is PulsarRPA?&lt;/h1&gt; &#xA;&lt;div id=&#34;toc&#34; class=&#34;toc&#34;&gt; &#xA; &lt;div id=&#34;toctitle&#34;&gt;&#xA;  Table of Contents&#xA; &lt;/div&gt; &#xA; &lt;ul class=&#34;sectlevel1&#34;&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_get_started&#34;&gt;üöÑ Get started&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_introduction&#34;&gt;ü•Å Introduction&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_features&#34;&gt;üöÄ Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_core_concepts&#34;&gt;‚ôæ Core concepts&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_pulsarrpa_as_an_executable_jar&#34;&gt;üßÆ PulsarRPA as an executable jar&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_pulsarrpa_as_a_java_library&#34;&gt;üéÅ PulsarRPA as a java library&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_basic_usage&#34;&gt;Basic usage&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_extracting_web_data&#34;&gt;Extracting web data&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_continuous_crawls&#34;&gt;Continuous crawls&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_rpa_robotic_process_automation&#34;&gt;üëΩ RPA (Robotic Process Automation)&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_use_x_sql_to_query_the_web&#34;&gt;Use X-SQL to query the web&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_pulsarrpa_as_a_rest_service&#34;&gt;üåê PulsarRPA as a REST service&lt;/a&gt; &#xA;   &lt;ul class=&#34;sectlevel2&#34;&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_build_from_source&#34;&gt;Build from source&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_use_x_sql_to_query_the_web_2&#34;&gt;Use X-SQL to query the web&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_step_by_step_course&#34;&gt;üìñ Step-by-step course&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_logs_metrics&#34;&gt;üìä Logs &amp;amp; Metrics&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_system_requirements&#34;&gt;üíª System Requirements&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_advanced_topics&#34;&gt;üõ∏ Advanced topics&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_compare_with_other_solutions&#34;&gt;üÜö Compare with other solutions&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_technical_details&#34;&gt;ü§ì Technical details&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/#_contact&#34;&gt;üê¶ Contact&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/div&gt; &#xA;&lt;div id=&#34;preamble&#34;&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/README-CN.adoc&#34;&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href=&#34;https://gitee.com/platonai_galaxyeye/PulsarRPA&#34;&gt;‰∏≠ÂõΩÈïúÂÉè&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_get_started&#34;&gt;üöÑ Get started&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;üíñ PulsarRPA is All You Need! üíñ&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;PulsarRPA is the ultimate open source solution to scrape Web data at scale, based on high performance, distributed RPA.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Extracting Web data at scale is extremely hard. Websites change frequently and are becoming more complex, meaning web data collected is often inaccurate or incomplete, PulsarRPA has developed a range of cutting-edge technologies to solve this problem.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Most scraping attempts can start with (almost) a single line of code:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Kotlin:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight nowrap&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;fun main() = PulsarContexts.createSession().scrapeOutPages(&#xA;  &#34;https://www.amazon.com/&#34;, &#34;-outLink a[href~=/dp/]&#34;, listOf(&#34;#title&#34;, &#34;#acrCustomerReviewText&#34;))&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The code above scrapes fields specified by CSS selectors #title and #acrCustomerReviewText from a set of product pages.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Example code: &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/sites/topEc/english/amazon/AmazonCrawler.kt&#34;&gt;kotlin&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Most &lt;mark&gt;real world&lt;/mark&gt; crawl projects can start with the following code snippet:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Kotlin:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;fun main() {&#xA;    val context = PulsarContexts.create()&#xA;&#xA;    val parseHandler = { _: WebPage, document: FeaturedDocument -&amp;gt;&#xA;        // use the document&#xA;        // ...&#xA;        // and then extract further hyperlinks&#xA;        context.submitAll(document.selectHyperlinks(&#34;a[href~=/dp/]&#34;))&#xA;    }&#xA;    val urls = LinkExtractors.fromResource(&#34;seeds10.txt&#34;)&#xA;        .map { ParsableHyperlink(&#34;$it -refresh&#34;, parseHandler) }&#xA;    context.submitAll(urls).await()&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Example code: &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_5_ContinuousCrawler.kt&#34;&gt;kotlin&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/java/ai/platon/pulsar/examples/ContinuousCrawler.java&#34;&gt;java&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;The &lt;mark&gt;most complicated&lt;/mark&gt; crawl challenges can be resolved with advanced RPA:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;Kotlin:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;val options = session.options(args)&#xA;val event = options.event.browseEvent&#xA;event.onBrowserLaunched.addLast { page, driver -&amp;gt;&#xA;    // warp up the browser to avoid being blocked by the website,&#xA;    // or choose the global settings, such as your location.&#xA;    warnUpBrowser(page, driver)&#xA;}&#xA;event.onWillFetch.addLast { page, driver -&amp;gt;&#xA;    // have to visit a referrer page before we can visit the desired page&#xA;    waitForReferrer(page, driver)&#xA;    // websites may prevent us from opening too many pages at a time, so we should open links one by one.&#xA;    waitForPreviousPage(page, driver)&#xA;}&#xA;event.onWillCheckDocumentState.addLast { page, driver -&amp;gt;&#xA;    // wait for a special fields to appear on the page&#xA;    driver.waitForSelector(&#34;body h1[itemprop=name]&#34;)&#xA;    // close the mask layer, it might be promotions, ads, or something else.&#xA;    driver.click(&#34;.mask-layer-close-button&#34;)&#xA;}&#xA;// visit the URL and trigger events&#xA;session.load(url, options)&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Example code: &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/sites/food/dianping/RestaurantCrawler.kt&#34;&gt;kotlin&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;&lt;strong&gt;The &lt;mark&gt;most complicated&lt;/mark&gt; Web data extraction problems can be handled by X-SQL:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;Your Web data extraction rules are very complex, for example, 100+ rules for each individual page&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;There are a lot of data extraction rules to maintain, for example, 20+ Amazon websites worldwide, 20+ data types for each website&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;select&#xA;      dom_first_text(dom, &#39;#productTitle&#39;) as title,&#xA;      dom_first_text(dom, &#39;#bylineInfo&#39;) as brand,&#xA;      dom_first_text(dom, &#39;#price tr td:matches(^Price) ~ td, #corePrice_desktop tr td:matches(^Price) ~ td&#39;) as price,&#xA;      dom_first_text(dom, &#39;#acrCustomerReviewText&#39;) as ratings,&#xA;      str_first_float(dom_first_text(dom, &#39;#reviewsMedley .AverageCustomerReviews span:contains(out of)&#39;), 0.0) as score&#xA;  from load_and_select(&#39;https://www.amazon.com/dp/B0C1H26C46 -i 1s -njr 3&#39;, &#39;body&#39;);&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Example code:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/platonai/exotic-amazon/tree/main/src/main/resources/sites/amazon/crawl/parse/sql/crawl&#34;&gt;X-SQL to scrape 100+ fields from an Amazon‚Äôs product page&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/platonai/exotic-amazon/tree/main/src/main/resources/sites/amazon/crawl/parse/sql/crawl&#34;&gt;X-SQLs to scrape all types of Amazon webpages&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_introduction&#34;&gt;ü•Å Introduction&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Extracting Web data at scale is extremely hard. &lt;mark&gt;Websites change frequently and are becoming more complex, meaning web data collected is often inaccurate or incomplete&lt;/mark&gt;, PulsarRPA has developed a range of cutting-edge technologies to solve this problem.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;We have released complete solutions for site-wide Web scraping for some of the largest e-commerce websites. These solutions meet the highest standards of performance, quality and cost. They will be free and open source forever, such as:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/platonai/exotic-amazon&#34;&gt;Exotic Amazon&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/platonai/exotic/tree/main/exotic-app/exotic-OCR-examples/src/main/kotlin/ai/platon/exotic/examples/sites/walmart&#34;&gt;Exotic Walmart&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/platonai/exotic/tree/main/exotic-app/exotic-OCR-examples/src/main/kotlin/ai/platon/exotic/examples/sites/food/dianping&#34;&gt;Exotic Dianping&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;üï∑ &lt;strong&gt;PulsarRPA supports high-quality, large-scale Web data collection and processing.&lt;/strong&gt; We have developed a range of infrastructure and cutting-edge technologies to ensure the highest standards of performance, quality and TCO (total cost of ownership), even in very large-scale data collection scenarios.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;üè™ &lt;strong&gt;PulsarRPA supports the Network-As-A-Database paradigm.&lt;/strong&gt; PulsarRPA treats the external network as a database. If the required data is not in the local storage, or the existing version does not meet the analysis needs, the system will collect the latest version of the data from the Internet. We also developed X-SQL to query the Web directly and convert webpages into tables and charts.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;üåà &lt;strong&gt;PulsarRPA supports browser rendering as the primary method to collect Web data.&lt;/strong&gt; By using browser rendering as the primary method to collect Web data, we achieve an optimal balance between data point scale, data quality, labor cost and hardware cost, and achieve the lowest TCO (total cost of ownership). With optimizations such as blocking unnecessary resource files, the performance of browser rendering can even be comparable to the traditional single resource collection method.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;üí´ &lt;strong&gt;PulsarRPA supports RPA based Web scraping.&lt;/strong&gt; PulsarRPA includes an RPA subsystem for Web interaction: scrolling, typing, screen capture, dragging and dropping, clicking, etc. This subsystem is similar to the well-known selenium, playwright, puppeteer, but all behaviors are optimized, such as more realistic simulation, better execution performance, better parallelism, better fault tolerance, and so on.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;üî™ &lt;strong&gt;PulsarRPA supports single resource collection.&lt;/strong&gt; PulsarRPA‚Äôs default data collection method is to harvest the &lt;code&gt;complete&lt;/code&gt; Web data through browser rendering, but if the data you need can be retrieved through a single link, for example, it can be returned through an ajax interface, you can also call PulsarRPA‚Äôs resource collection method for super High-speed collection.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;üíØ &lt;strong&gt;PulsarRPA plans to support cutting-edge information extraction technology.&lt;/strong&gt; We plan to release an advanced AI to automatically extract every field from all valuable webpages (e.g. product detail pages) with remarkable accuracy, and we currently offer a &lt;a href=&#34;https://github.com/platonai/exotic#run-auto-extract&#34;&gt;preview&lt;/a&gt; version.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_features&#34;&gt;üöÄ Features&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Web spider: browser rendering, ajax data crawling&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;RPA: robotic process automation, mimic human behaviors, SPA crawling, or do something else valuable&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Simple API: single line of code to scrape, or single SQL to turn a website into a table&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;X-SQL: extended SQL to manage web data: Web crawling, scraping, Web content mining, Web BI&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Bot stealth: web driver stealth, IP rotation, privacy context rotation, never get banned&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;High performance: highly optimized, rendering hundreds of pages in parallel on a single machine without be blocked&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Low cost: scraping 100,000 browser rendered e-comm webpages, or n * 10,000,000 data points each day, only 8 core CPU/32G memory are required&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Data quantity assurance: smart retry, accurate scheduling, web data lifecycle management&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Large scale: fully distributed, designed for large scale crawling&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Big data: various backend storage support: Local File/MongoDB/HBase/Gora&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Logs &amp;amp; metrics: monitored closely and every event is recorded&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;[Preview] Information Extraction: Learns Web data patterns and automatically extracts every field in a webpage with remarkable precision&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_core_concepts&#34;&gt;‚ôæ Core concepts&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The core PulsarRPA concepts include the following, knowing these core concepts, you can use PulsarRPA to solve the most demanding data scraping tasks:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Web Scraping: the process of using bots to extract content and data from a website&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Auto Extract: learn the data schema automatically and extract every field from webpages, powered by cutting-edge AI algorithm&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;RPA: stands for robotic process automation which is the only way to scrape modern webpages&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Network As A Database: access the network just like a database&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;X-SQL: query the Web using SQL directly&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Pulsar Session: provides a set of simple, powerful and flexible APIs to do web scraping tasks&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Web Driver: defines a concise interface to visit and interact with webpages, all behaviors are optimized to mimic real people as closely as possible&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;URLs: a URL in PulsarRPA is a normal &lt;a href=&#34;https://en.wikipedia.org/wiki/URL&#34;&gt;URL&lt;/a&gt; with extra information to describe a task. Every task in PulsarRPA is defined as some form of URL&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Hyperlinks: a Hyperlink in PulsarRPA is a normal &lt;a href=&#34;https://en.wikipedia.org/wiki/Hyperlink&#34;&gt;Hyperlink&lt;/a&gt; with extra information to describe a task&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Load Options: load options, or load arguments are control parameters that affect how PulsarRPA loads, fetches and crawls webpages&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Event Handlers: capture and process events throughout the lifecycle of webpages&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/docs/concepts.adoc#_the_core_concepts_of_pulsar&#34;&gt;PulsarRPA concepts&lt;/a&gt; for details.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_pulsarrpa_as_an_executable_jar&#34;&gt;üßÆ PulsarRPA as an executable jar&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;We have released a standalone executable jar based on PulsarRPA, which includes:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Web scraping examples of a set of top sites&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;An applet based on &lt;code&gt;self-supervised&lt;/code&gt; machine learning for information extraction, AI identifies all fields on the detail page with over 90% field accuracy of 99.9% or more&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;An applet based on &lt;code&gt;self-supervised&lt;/code&gt; machine learning and outputs all extract rules, which can help traditional Web scraping methods&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;An applet that scrape Web data directly from the command line, like wget or curl, without writing code&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;An upgraded PulsarRPA server to which we can send SQLs to collect Web data&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;A Web UI from which we can write SQLs and send them to the server&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Download &lt;a href=&#34;https://github.com/platonai/exotic#download&#34;&gt;Exotic&lt;/a&gt; and explore its capabilities with a single command line:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;literalblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre&gt;java -jar exotic-standalone.jar&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_pulsarrpa_as_a_java_library&#34;&gt;üéÅ PulsarRPA as a java library&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;The simplest way to leverage the power of PulsarRPA is to add it to your project as a library.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Maven:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;  &amp;lt;groupId&amp;gt;ai.platon.pulsar&amp;lt;/groupId&amp;gt;&#xA;  &amp;lt;artifactId&amp;gt;pulsar-all&amp;lt;/artifactId&amp;gt;&#xA;  &amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Gradle:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;implementation(&#34;ai.platon.pulsar:pulsar-all:1.12.0&#34;)&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;You can clone the template project from github.com: &lt;a href=&#34;https://github.com/platonai/pulsar-kotlin-template&#34;&gt;kotlin&lt;/a&gt;, &lt;a href=&#34;https://github.com/platonai/pulsar-java-template&#34;&gt;java-11&lt;/a&gt;, &lt;a href=&#34;https://github.com/platonai/pulsar-java-17-template&#34;&gt;java-17&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;You can also start your own large-scale web crawler projects based on our commercial-grade open source projects: &lt;a href=&#34;https://github.com/platonai/exotic&#34;&gt;Exotic&lt;/a&gt;, &lt;a href=&#34;https://github.com/platonai/exotic-amazon&#34;&gt;Exotic-amazon&lt;/a&gt;.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_basic_usage&#34;&gt;Basic usage&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Kotlin:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;// Create a pulsar session&#xA;val session = PulsarContexts.createSession()&#xA;// The main url we are playing with&#xA;val url = &#34;https://www.amazon.com/dp/B0C1H26C46&#34;&#xA;&#xA;// Load a page from local storage, or fetch it from the Internet if it does not exist or has expired&#xA;val page = session.load(url, &#34;-expires 10s&#34;)&#xA;&#xA;// Submit a url to the URL pool, the submitted url will be processed in a crawl loop&#xA;session.submit(url, &#34;-expires 10s&#34;)&#xA;&#xA;// Parse the page content into a document&#xA;val document = session.parse(page)&#xA;// do something with the document&#xA;// ...&#xA;&#xA;// Load and parse&#xA;val document2 = session.loadDocument(url, &#34;-expires 10s&#34;)&#xA;// do something with the document&#xA;// ...&#xA;&#xA;// Load the portal page and then load all links specified by `-outLink`.&#xA;// Option `-outLink` specifies the cssSelector to select links in the portal page to load.&#xA;// Option `-topLinks` specifies the maximal number of links selected by `-outLink`.&#xA;val pages = session.loadOutPages(url, &#34;-expires 10s -itemExpires 10s -outLink a[href~=/dp/] -topLinks 10&#34;)&#xA;&#xA;// Load the portal page and submit the out links specified by `-outLink` to the URL pool.&#xA;// Option `-outLink` specifies the cssSelector to select links in the portal page to submit.&#xA;// Option `-topLinks` specifies the maximal number of links selected by `-outLink`.&#xA;session.submitForOutPages(url, &#34;-expires 1d -itemExpires 7d -outLink a[href~=/dp/] -topLinks 10&#34;)&#xA;&#xA;// Load, parse and scrape fields&#xA;val fields = session.scrape(url, &#34;-expires 10s&#34;, &#34;#centerCol&#34;,&#xA;    listOf(&#34;#title&#34;, &#34;#acrCustomerReviewText&#34;))&#xA;&#xA;// Load, parse and scrape named fields&#xA;val fields2 = session.scrape(url, &#34;-i 10s&#34;, &#34;#centerCol&#34;,&#xA;    mapOf(&#34;title&#34; to &#34;#title&#34;, &#34;reviews&#34; to &#34;#acrCustomerReviewText&#34;))&#xA;&#xA;// Load, parse and scrape named fields&#xA;val fields3 = session.scrapeOutPages(url, &#34;-i 10s -ii 10s -outLink a[href~=/dp/] -topLink 10&#34;, &#34;#centerCol&#34;,&#xA;    mapOf(&#34;title&#34; to &#34;#title&#34;, &#34;reviews&#34; to &#34;#acrCustomerReviewText&#34;))&#xA;&#xA;// Add `-parse` option to activate the parsing subsystem&#xA;val page10 = session.load(url, &#34;-parse -expires 10s&#34;)&#xA;&#xA;// Kotlin suspend calls&#xA;val page11 = runBlocking { session.loadDeferred(url, &#34;-expires 10s&#34;) }&#xA;&#xA;// Java-style async calls&#xA;session.loadAsync(url, &#34;-expires 10s&#34;).thenApply(session::parse).thenAccept(session::export)&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Example code: &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_0_BasicUsage.kt&#34;&gt;kotlin&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/java/ai/platon/pulsar/examples/BasicUsage.java&#34;&gt;java&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Load options&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Most of our scrape methods accept a parameter called load options, or load arguments, to control how to load, fetch and scrape a webpage.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;literalblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;-expires     // The expiry time of a page&#xA;-itemExpires // The expiry time of item pages in batch scraping methods&#xA;-outLink     // The selector of out links to scrape&#xA;-refresh     // Force (re)fetch the page, just like hitting the refresh button on a real browser&#xA;-parse       // Activate parse subsystem&#xA;-resource    // Fetch the url as a resource without browser rendering&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/docs/concepts.adoc#_load_options&#34;&gt;Load Options&lt;/a&gt; for details.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_extracting_web_data&#34;&gt;Extracting web data&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;PulsarRPA uses &lt;a href=&#34;https://jsoup.org/&#34;&gt;jsoup&lt;/a&gt; to extract data from HTML documents. Jsoup parses HTML to the same DOM as modern browsers do. Check &lt;a href=&#34;https://jsoup.org/cookbook/extracting-data/selector-syntax&#34;&gt;selector-syntax&lt;/a&gt; for all the supported CSS selectors.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Kotlin:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;val document = session.loadDocument(url, &#34;-expires 1d&#34;)&#xA;val price = document.selectFirst(&#39;.price&#39;).text()&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_continuous_crawls&#34;&gt;Continuous crawls&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;It‚Äôs really simple to scrape a massive url collection or run continuous crawls in PulsarRPA.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Kotlin:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;fun main() {&#xA;    val context = PulsarContexts.create()&#xA;&#xA;    val parseHandler = { _: WebPage, document: FeaturedDocument -&amp;gt;&#xA;        // do something wonderful with the document&#xA;        println(document.getTitle() + &#34;&#x9;|&#x9;&#34; + document.getBaseUri())&#xA;    }&#xA;    val urls = LinkExtractors.fromResource(&#34;seeds.txt&#34;)&#xA;        .map { ParsableHyperlink(&#34;$it -refresh&#34;, parseHandler) }&#xA;    context.submitAll(urls)&#xA;    // feel free to submit millions of urls here&#xA;    context.submitAll(urls)&#xA;    // wait until all tasks are done&#xA;    context.await()&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;&lt;strong&gt;Java:&lt;/strong&gt;&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;public class ContinuousCrawler {&#xA;&#xA;    private static void onParse(WebPage page, FeaturedDocument document) {&#xA;        // do something wonderful with the document&#xA;        System.out.println(document.getTitle() + &#34;&#x9;|&#x9;&#34; + document.getBaseUri());&#xA;    }&#xA;&#xA;    public static void main(String[] args) {&#xA;        PulsarContext context = PulsarContexts.create();&#xA;&#xA;        List&amp;lt;Hyperlink&amp;gt; urls = LinkExtractors.fromResource(&#34;seeds.txt&#34;)&#xA;                .stream()&#xA;                .map(seed -&amp;gt; new ParsableHyperlink(seed, ContinuousCrawler::onParse))&#xA;                .collect(Collectors.toList());&#xA;        context.submitAll(urls);&#xA;        // feel free to submit millions of urls here&#xA;        context.submitAll(urls);&#xA;        // wait until all tasks are done&#xA;        context.await();&#xA;    }&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Example code: &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_9_MassiveCrawler.kt&#34;&gt;kotlin&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/java/ai/platon/pulsar/examples/ContinuousCrawler.java&#34;&gt;java&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_rpa_robotic_process_automation&#34;&gt;üëΩ RPA (Robotic Process Automation)&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;As websites become more and more complicated, RPA has become the only way to collect data from some website, such as websites using Custom Font technology.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;PulsarRPA provides a convenient way to mimic real people during the lifecycle of a webpage, using a web driver to interact with the webpage: scrolling, typing, screen capturing, dragging and dropping, clicking and more, all actions and behaviors are optimized to mimic real people as closely as possible.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Here is a typical RPA code snippet, which is required to collect data from most top e-comm sites.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Kotlin:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;val options = session.options(args)&#xA;val event = options.event.browseEvent&#xA;event.onBrowserLaunched.addLast { page, driver -&amp;gt;&#xA;    // warp up the browser to avoid being blocked by the website,&#xA;    // or choose the global settings, such as your location.&#xA;    warnUpBrowser(page, driver)&#xA;}&#xA;event.onWillFetch.addLast { page, driver -&amp;gt;&#xA;    // have to visit a referrer page before we can visit the desired page&#xA;    waitForReferrer(page, driver)&#xA;    // websites may prevent us from opening too many pages at a time, so we should open links one by one.&#xA;    waitForPreviousPage(page, driver)&#xA;}&#xA;event.onWillCheckDocumentState.addLast { page, driver -&amp;gt;&#xA;    // wait for a special fields to appear on the page&#xA;    driver.waitForSelector(&#34;body h1[itemprop=name]&#34;)&#xA;    // close the mask layer, it might be promotions, ads, or something else.&#xA;    driver.click(&#34;.mask-layer-close-button&#34;)&#xA;}&#xA;// visit the URL and trigger events&#xA;session.load(url, options)&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Example code: &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/sites/food/dianping/RestaurantCrawler.kt&#34;&gt;kotlin&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_use_x_sql_to_query_the_web&#34;&gt;Use X-SQL to query the web&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Scrape a single page:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;select&#xA;      dom_first_text(dom, &#39;#productTitle&#39;) as title,&#xA;      dom_first_text(dom, &#39;#bylineInfo&#39;) as brand,&#xA;      dom_first_text(dom, &#39;#price tr td:matches(^Price) ~ td, #corePrice_desktop tr td:matches(^Price) ~ td&#39;) as price,&#xA;      dom_first_text(dom, &#39;#acrCustomerReviewText&#39;) as ratings,&#xA;      str_first_float(dom_first_text(dom, &#39;#reviewsMedley .AverageCustomerReviews span:contains(out of)&#39;), 0.0) as score&#xA;  from load_and_select(&#39;https://www.amazon.com/dp/B0C1H26C46 -i 1s -njr 3&#39;, &#39;body&#39;);&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Execute the X-SQL:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;val context = SQLContexts.create()&#xA;val rs = context.executeQuery(sql)&#xA;println(ResultSetFormatter(rs, withHeader = true))&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The result is as follows:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;TITLE                                                   | BRAND                  | PRICE   | RATINGS       | SCORE&#xA;HUAWEI P20 Lite (32GB + 4GB RAM) 5.84&#34; FHD+ Display ... | Visit the HUAWEI Store | $6.10 | 1,349 ratings | 4.40&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Example code: &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_10_XSQL.kt&#34;&gt;kotlin&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Click &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/docs/x-sql.adoc&#34;&gt;X-SQL&lt;/a&gt; to see a detailed introduction and function descriptions about X-SQL.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_pulsarrpa_as_a_rest_service&#34;&gt;üåê PulsarRPA as a REST service&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;When PulsarRPA runs as a REST service, X-SQL can be used to scrape webpages or to query the web data directly at anytime, from anywhere, without opening an IDE.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_build_from_source&#34;&gt;Build from source&lt;/h3&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre&gt;git clone https://github.com/platonai/pulsar.git&#xA;cd pulsar &amp;amp;&amp;amp; bin/build-run.sh&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;For Chinese developers, we strongly suggest you to follow &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/bin/tools/maven/maven-settings.adoc&#34;&gt;this&lt;/a&gt; instruction to accelerate the building.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;sect2&#34;&gt; &#xA;   &lt;h3 id=&#34;_use_x_sql_to_query_the_web_2&#34;&gt;Use X-SQL to query the web&lt;/h3&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Start the pulsar server if not started:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;bin/pulsar&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Scrape a webpage in another terminal window:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;bin/scrape.sh&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The bash script is quite simple, just use curl to post an X-SQL:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;curl -X POST --location &#34;http://localhost:8182/api/x/e&#34; -H &#34;Content-Type: text/plain&#34; -d &#34;&#xA;  select&#xA;      dom_base_uri(dom) as url,&#xA;      dom_first_text(dom, &#39;#productTitle&#39;) as title,&#xA;      str_substring_after(dom_first_href(dom, &#39;#wayfinding-breadcrumbs_container ul li:last-child a&#39;), &#39;&amp;amp;node=&#39;) as category,&#xA;      dom_first_slim_html(dom, &#39;#bylineInfo&#39;) as brand,&#xA;      cast(dom_all_slim_htmls(dom, &#39;#imageBlock img&#39;) as varchar) as gallery,&#xA;      dom_first_slim_html(dom, &#39;#landingImage, #imgTagWrapperId img, #imageBlock img:expr(width &amp;gt; 400)&#39;) as img,&#xA;      dom_first_text(dom, &#39;#price tr td:contains(List Price) ~ td&#39;) as listprice,&#xA;      dom_first_text(dom, &#39;#price tr td:matches(^Price) ~ td&#39;) as price,&#xA;      str_first_float(dom_first_text(dom, &#39;#reviewsMedley .AverageCustomerReviews span:contains(out of)&#39;), 0.0) as score&#xA;  from load_and_select(&#39;https://www.amazon.com/dp/B0C1H26C46 -i 1d -njr 3&#39;, &#39;body&#39;);&#34;&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Example code: &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/bin/scrape.sh&#34;&gt;bash&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/bin/scrape.bat&#34;&gt;batch&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-client/src/main/java/ai/platon/pulsar/client/Scraper.java&#34;&gt;java&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-client/src/main/kotlin/ai/platon/pulsar/client/Scraper.kt&#34;&gt;kotlin&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-client/src/main/php/Scraper.php&#34;&gt;php&lt;/a&gt;.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;The response is as follows in json format:&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;listingblock&#34;&gt; &#xA;    &lt;div class=&#34;content&#34;&gt; &#xA;     &lt;pre class=&#34;highlight&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{&#xA;    &#34;uuid&#34;: &#34;cc611841-1f2b-4b6b-bcdd-ce822d97a2ad&#34;,&#xA;    &#34;statusCode&#34;: 200,&#xA;    &#34;pageStatusCode&#34;: 200,&#xA;    &#34;pageContentBytes&#34;: 1607636,&#xA;    &#34;resultSet&#34;: [&#xA;        {&#xA;            &#34;title&#34;: &#34;Tara Toys Ariel Necklace Activity Set - Amazon Exclusive (51394)&#34;,&#xA;            &#34;listprice&#34;: &#34;$19.99&#34;,&#xA;            &#34;price&#34;: &#34;$12.99&#34;,&#xA;            &#34;categories&#34;: &#34;Toys &amp;amp; Games|Arts &amp;amp; Crafts|Craft Kits|Jewelry&#34;,&#xA;            &#34;baseuri&#34;: &#34;https://www.amazon.com/dp/B0C1H26C46&#34;&#xA;        }&#xA;    ],&#xA;    &#34;pageStatus&#34;: &#34;OK&#34;,&#xA;    &#34;status&#34;: &#34;OK&#34;&#xA;}&lt;/code&gt;&lt;/pre&gt; &#xA;    &lt;/div&gt; &#xA;   &lt;/div&gt; &#xA;   &lt;div class=&#34;paragraph&#34;&gt; &#xA;    &lt;p&gt;Click &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/docs/x-sql.adoc&#34;&gt;X-SQL&lt;/a&gt; to see a detailed introduction and function descriptions about X-SQL.&lt;/p&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_step_by_step_course&#34;&gt;üìñ Step-by-step course&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;We have a step-by-step course by example:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;olist arabic&#34;&gt; &#xA;   &lt;ol class=&#34;arabic&#34;&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_0_BasicUsage.kt&#34;&gt;BasicUsage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_1_LoadOptions.kt&#34;&gt;LoadOptions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_2_URLs.kt&#34;&gt;URLs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_3_JvmAsync.kt&#34;&gt;JvmAsync&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_4_Coroutine.kt&#34;&gt;Kotlin Coroutine&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_5_ContinuousCrawler.kt&#34;&gt;Continuous Crawler&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_6_EventHandler.kt&#34;&gt;Event Handler&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_7_RPA.kt&#34;&gt;RPA&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_8_WebDriver.kt&#34;&gt;WebDriver&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_9_MassiveCrawler.kt&#34;&gt;Large Scale Crawler&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/pulsar-app/pulsar-examples/src/main/kotlin/ai/platon/pulsar/examples/_10_XSQL.kt&#34;&gt;X-SQL&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/platonai/exotic-amazon&#34;&gt;Practice: Crawl the Top 1 E-comm Site at Scale&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ol&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_logs_metrics&#34;&gt;üìä Logs &amp;amp; Metrics&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;PulsarRPA has carefully designed the logging and metrics subsystem to record every event that occurs in the system.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;PulsarRPA logs the status for every load execution, so it‚Äôs easy to know what happened in the system, find out answers such as is the system running healthy, how many pages were successfully fetched, how many pages were retried, how many proxy ips were used, etc.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;By paying attention to just a few symbols, you can gain insight into the state of the entire system: üíØ üíî üóô ‚ö° üíø üîÉ ü§∫„ÄÇ&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Typical page loading logs are shown below, check &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/docs/log-format.adoc&#34;&gt;log-format&lt;/a&gt; to learn how to read the logs and gain insight into the state of the entire system at a glance.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;listingblock&#34;&gt; &#xA;   &lt;div class=&#34;content&#34;&gt; &#xA;    &lt;pre class=&#34;highlight nowrap&#34;&gt;&lt;code class=&#34;language-composer log&#34; data-lang=&#34;composer log&#34;&gt;2022-09-24 11:46:26.045  INFO [-worker-14] a.p.p.c.c.L.Task - 3313. üíØ ‚ö° U for N got 200 580.92 KiB in 1m14.277s, fc:1 | 75/284/96/277/6554 | 106.32.12.75 | 3xBpaR2 | https://www.walmart.com/ip/Restored-iPhone-7-32GB-Black-T-Mobile-Refurbished/329207863 -expires PT24H -ignoreFailure -itemExpires PT1M -outLinkSelector a[href~=/ip/] -parse -requireSize 300000&#xA;2022-09-24 11:46:09.190  INFO [-worker-32] a.p.p.c.c.L.Task - 3738. üíØ üíø U  got 200 452.91 KiB in 55.286s, last fetched 9h32m50s ago, fc:1 | 49/171/82/238/6172 | 121.205.220.179 | https://www.walmart.com/ip/Boost-Mobile-Apple-iPhone-SE-2-Cell-Phone-Black-64GB-Prepaid-Smartphone/490934488 -expires PT24H -ignoreFailure -itemExpires PT1M -outLinkSelector a[href~=/ip/] -parse -requireSize 300000&#xA;2022-09-24 11:46:28.567  INFO [-worker-17] a.p.p.c.c.L.Task - 2269. üíØ üîÉ U for SC got 200 565.07 KiB &amp;lt;- 543.41 KiB in 1m22.767s, last fetched 16m58s ago, fc:6 | 58/230/98/295/6272 | 27.158.125.76 | 9uwu602 | https://www.walmart.com/ip/Straight-Talk-Apple-iPhone-11-64GB-Purple-Prepaid-Smartphone/356345388?variantFieldId=actual_color -expires PT24H -ignoreFailure -itemExpires PT1M -outLinkSelector a[href~=/ip/] -parse -requireSize 300000&#xA;2022-09-24 11:47:18.390  INFO [r-worker-8] a.p.p.c.c.L.Task - 3732. üíî ‚ö° U for N got 1601 0 &amp;lt;- 0 in 32.201s, fc:1/1 Retry(1601) rsp: CRAWL, rrs: EMPTY_0B | 2zYxg52 | https://www.walmart.com/ip/Apple-iPhone-7-256GB-Jet-Black-AT-T-Locked-Smartphone-Grade-B-Used/182353175?variantFieldId=actual_color -expires PT24H -ignoreFailure -itemExpires PT1M -outLinkSelector a[href~=/ip/] -parse -requireSize 300000&#xA;2022-09-24 11:47:13.860  INFO [-worker-60] a.p.p.c.c.L.Task - 2828. üóô üóô U for SC got 200 0 &amp;lt;- 348.31 KiB &amp;lt;- 684.75 KiB in 0s, last fetched 18m55s ago, fc:2 | 34/130/52/181/5747 | 60.184.124.232 | 11zTa0r2 | https://www.walmart.com/ip/Walmart-Family-Mobile-Apple-iPhone-11-64GB-Black-Prepaid-Smartphone/209201965?athbdg=L1200 -expires PT24H -ignoreFailure -itemExpires PT1M -outLinkSelector a[href~=/ip/] -parse -requireSize 300000&lt;/code&gt;&lt;/pre&gt; &#xA;   &lt;/div&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_system_requirements&#34;&gt;üíª System Requirements&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;Memory 4G+&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Maven 3.2+&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;The latest version of the Java 11 JDK&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;java and jar on the PATH&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Google Chrome 90+&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;[Optional] MongoDB started&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;PulsarRPA is tested on Ubuntu 18.04, Ubuntu 20.04, Windows 7, Windows 11, WSL, any other operating system that meets the requirements should work as well.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_advanced_topics&#34;&gt;üõ∏ Advanced topics&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/docs/faq/advanced-topics.adoc&#34;&gt;advanced topics&lt;/a&gt; to find out the answers for the following questions:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;What‚Äôs so difficult about scraping web data at scale?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to scrape a million product pages from an e-commerce website a day?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to scrape pages behind a login?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to download resources directly within a browser context?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to scrape a single page application (SPA)?&lt;/p&gt; &#xA;     &lt;div class=&#34;ulist&#34;&gt; &#xA;      &lt;ul&gt; &#xA;       &lt;li&gt; &lt;p&gt;Resource mode&lt;/p&gt; &lt;/li&gt; &#xA;       &lt;li&gt; &lt;p&gt;RPA mode&lt;/p&gt; &lt;/li&gt; &#xA;      &lt;/ul&gt; &#xA;     &lt;/div&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to make sure all fields are extracted correctly?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to crawl paginated links?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to crawl newly discovered links?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to crawl the entire website?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to simulate human behaviors?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to schedule priority tasks?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to start a task at a fixed time point?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to drop a scheduled task?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to know the status of a task?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to know what‚Äôs going on in the system?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to automatically generate the css selectors for fields to scrape?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to extract content from websites using machine learning automatically with commercial accuracy?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to scrape amazon.com to match industrial needs?&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_compare_with_other_solutions&#34;&gt;üÜö Compare with other solutions&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;In general, the features mentioned in the Feature section are well-supported by PulsarRPA, but other solutions do not.&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/docs/faq/solution-comparison.adoc&#34;&gt;solution comparison&lt;/a&gt; to see the detailed comparison to the other solutions:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;PulsarRPA vs selenium/puppeteer/playwright&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;PulsarRPA vs nutch&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;PulsarRPA vs scrapy+splash&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_technical_details&#34;&gt;ü§ì Technical details&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;paragraph&#34;&gt; &#xA;   &lt;p&gt;Check &lt;a href=&#34;https://raw.githubusercontent.com/platonai/PulsarRPA/master/docs/faq/technical-details.adoc&#34;&gt;technical details&lt;/a&gt; to see answers for the following questions:&lt;/p&gt; &#xA;  &lt;/div&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to rotate my ip addresses?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to hide my bot from being detected?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How &amp;amp; why to simulate human behaviors?&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;How to render as many pages as possible on a single machine without be blocked?&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;div class=&#34;sect1&#34;&gt; &#xA; &lt;h2 id=&#34;_contact&#34;&gt;üê¶ Contact&lt;/h2&gt; &#xA; &lt;div class=&#34;sectionbody&#34;&gt; &#xA;  &lt;div class=&#34;ulist&#34;&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt; &lt;p&gt;WechatÔºögalaxyeye&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;WeiboÔºö&lt;a href=&#34;https://weibo.com/galaxyeye&#34;&gt;galaxyeye&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;EmailÔºö&lt;a href=&#34;mailto:galaxyeye@live.cn&#34;&gt;galaxyeye@live.cn&lt;/a&gt;, &lt;a href=&#34;mailto:ivincent.zhang@gmail.com&#34;&gt;ivincent.zhang@gmail.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;Twitter: galaxyeye8&lt;/p&gt; &lt;/li&gt; &#xA;    &lt;li&gt; &lt;p&gt;WebsiteÔºö&lt;a href=&#34;http://platon.ai&#34;&gt;platon.ai&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;/ul&gt; &#xA;  &lt;/div&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>