<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-07T01:40:25Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Aallam/openai-kotlin</title>
    <updated>2023-02-07T01:40:25Z</updated>
    <id>tag:github.com,2023-02-07:/Aallam/openai-kotlin</id>
    <link href="https://github.com/Aallam/openai-kotlin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;OpenAI API client for Kotlin with multiplatform and coroutines capabilities.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI API client for Kotlin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/artifact/com.aallam.openai/openai-client&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.aallam.openai/openai-client?color=blue&amp;amp;label=Download&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/Aallam/openai-kotlin/main/LICENSE.md&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/Aallam/openai-kotlin?color=yellow&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.org/docs/releases.html#release-details&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-1.8.0-a97bff.svg?logo=kotlin&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mouaad.aallam.com/openai-kotlin/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/docs-openai--kotlin-lightgrey&#34; alt=&#34;Documentation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Kotlin client for &lt;a href=&#34;https://beta.openai.com/docs/api-reference&#34;&gt;OpenAI&#39;s API&lt;/a&gt; with multiplatform and coroutines capabilities.&lt;/p&gt; &#xA;&lt;h2&gt;üõ† Setup&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Install OpenAI API Kotlin client by adding the following dependency to your &lt;code&gt;gradle.build&lt;/code&gt; file:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repositories {&#xA;    mavenCentral()&#xA;}&#xA;&#xA;dependencies {&#xA;    implementation &#34;com.aallam.openai:openai-client:&amp;lt;version&amp;gt;&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Choose and add to your dependencies one of &lt;a href=&#34;https://ktor.io/docs/http-client-engines.html&#34;&gt;Ktor&#39;s engines&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Alternatively, you can use &lt;a href=&#34;https://raw.githubusercontent.com/Aallam/openai-kotlin/main/openai-client-bom/&#34;&gt;openai-client-bom&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Multiplaform&lt;/h3&gt; &#xA;&lt;p&gt;In multiplatform projects, add openai client dependency to &lt;code&gt;commonMain&lt;/code&gt;, and choose an &lt;a href=&#34;https://ktor.io/docs/http-client-engines.html&#34;&gt;engine&lt;/a&gt; for each target.&lt;/p&gt; &#xA;&lt;h2&gt;üí° Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;Create an instance of &lt;code&gt;OpenAI&lt;/code&gt; client:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val openAI = OpenAI(apiKey)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;‚ÑπÔ∏è OpenAI encourages using environment variables for the API key. &lt;a href=&#34;https://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety&#34;&gt;Read more&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Use your &lt;code&gt;OpenAI&lt;/code&gt; instance to make API requests:&lt;/p&gt; &#xA;&lt;h4&gt;Models&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;List models&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val models: List&amp;lt;Model&amp;gt; = openAI.models()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Retrieve a model&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val id = ModelId(&#34;text-ada-001&#34;)&#xA;val model: Model = openAI.model(id)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Completions&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Create completion&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val completionRequest = CompletionRequest(&#xA;    model = ModelId(&#34;text-ada-001&#34;),&#xA;    prompt = &#34;Somebody once told me the world is gonna roll me&#34;,&#xA;    echo = true&#xA;)&#xA;val completion: TextCompletion = openAI.completion(Ada, completionRequest)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Create completion stream&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val request = CompletionRequest(&#xA;    model = ModelId(&#34;text-davinci-002&#34;),&#xA;    prompt = &#34;Once upon a time&#34;,&#xA;    maxTokens = 5,&#xA;    temperature = 1.0,&#xA;    topP = 1.0,&#xA;    n = 1,&#xA;    stop = listOf(&#34;\n&#34;),&#xA;)&#xA;val completions: Flow&amp;lt;TextCompletion&amp;gt; = openAI.completions(request)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Edits&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Create edits&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val edit = openAI.edit(&#xA;    request = EditsRequest(&#xA;        model = ModelId(&#34;text-davinci-edit-001&#34;),&#xA;        input = &#34;What day of the wek is it?&#34;,&#xA;        instruction = &#34;Fix the spelling mistakes&#34;&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;Images&lt;/h4&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Create images&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val images = openAI.imageURL( // or openAI.imageJSON&#xA;    creation = ImageCreation(&#xA;        prompt = &#34;A cute baby sea otter&#34;,&#xA;        n = 2,&#xA;        size = ImageSize.is1024x1024&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Edit images*&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val images = openAI.imageURL( // or openAI.imageJSON&#xA;    edit = ImageEdit(&#xA;        image = FileSource(name = &#34;&amp;lt;filename&amp;gt;&#34;, source = imageSource),&#xA;        mask = FileSource(name = &#34;&amp;lt;filename&amp;gt;&#34;, source = maskSource),&#xA;        prompt = &#34;a sunlit indoor lounge area with a pool containing a flamingo&#34;,&#xA;        n = 1,&#xA;        size = ImageSize.is1024x1024&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Create image variants*&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val images = openAI.imageURL( // or openAI.imageJSON&#xA;    variation = ImageVariation(&#xA;        image = FileSource(name = &#34;&amp;lt;filename&amp;gt;&#34;, source = imageSource),&#xA;        n = 1,&#xA;        size = ImageSize.is1024x1024&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Embeddings&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Create embeddings&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val embeddings = openAI.embeddings(&#xA;    request = EmbeddingRequest(&#xA;        model = ModelId(&#34;text-similarity-babbage-001&#34;),&#xA;        input = listOf(&#34;The food was delicious and the waiter...&#34;)&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Files&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;List files&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val files = openAI.files()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Upload file*&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val file = openAI.file(&#xA;    request = FileUpload(&#xA;        file = source,&#xA;        purpose = Purpose(&#34;fine-tune&#34;)&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Delete file&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;openAI.delete(fileId)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Retrieve file&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val file = openAI.file(fileId)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Retrieve file content&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val bytes = openAI.download(fileId)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Fine-tunes&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Create fine-tunes&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val fineTune = openAI.fineTune(&#xA;    request = FineTuneRequest(&#xA;        trainingFile = trainingFile,&#xA;        model = ModelId(&#34;ada&#34;)&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Moderations&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;&lt;strong&gt;Create moderation&lt;/strong&gt;&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val moderation = openAI.moderations(&#xA;    request = ModerationRequest(&#xA;        input = &#34;I want to kill them.&#34;&#xA;    )&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;&lt;em&gt;* requires &lt;a href=&#34;https://square.github.io/okio/&#34;&gt;okio&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;‚ÑπÔ∏è Sample apps&lt;/h2&gt; &#xA;&lt;p&gt;Sample apps are available under &lt;code&gt;sample&lt;/code&gt;, please check the &lt;a href=&#34;https://raw.githubusercontent.com/Aallam/openai-kotlin/main/sample/README.md&#34;&gt;README&lt;/a&gt; for running instructions.&lt;/p&gt; &#xA;&lt;h2&gt;üìÑ License&lt;/h2&gt; &#xA;&lt;p&gt;OpenAI Kotlin API Client is an open-sourced software licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/Aallam/openai-kotlin/main/LICENSE.md&#34;&gt;MIT license&lt;/a&gt;. &lt;strong&gt;This is an unofficial library, it is not affiliated with nor endorsed by OpenAI&lt;/strong&gt;. Contributions are welcome.&lt;/p&gt;</summary>
  </entry>
</feed>