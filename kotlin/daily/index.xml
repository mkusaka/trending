<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-26T01:32:11Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>fuqiuluo/Portal</title>
    <updated>2025-02-26T01:32:11Z</updated>
    <id>tag:github.com,2025-02-26:/fuqiuluo/Portal</id>
    <link href="https://github.com/fuqiuluo/Portal" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Android Lab FakeLocation Service（安卓7~15的虚拟定位服务）&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Portal&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Ffuqiuluo%2FPortal?ref=badge_shield&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Ffuqiuluo%2FPortal.svg?type=shield&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;秋夜长，殊未央，月明白露澄清光，层城绮阁遥相望。&lt;/p&gt; &#xA;&lt;p&gt;QQ交流群：599533037（搜索不到请扫描下方二维码）&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/fuqiuluo/Portal/master/img/qrcodemini.png&#34; alt=&#34;QRCODE&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The virtual positioning module based on LSPosed only provides Hook system services to achieve virtual positioning, and cannot be integrated into the APP.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this application is to help developers debug the simulation tool of the location information program, and the application will automatically create features once it is installed and launched。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!note]&lt;/p&gt; &#xA; &lt;p&gt;中文地区特供：&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;本项目遵循[Apache-2.0 license]，仅限于非商业用途的学习、研究目的，禁止用于任何违法行为。&lt;/li&gt; &#xA;  &lt;li&gt;未经书面授权，禁止修改、反向工程、重新包装或分发本项目的名称、代码及衍生作品。&lt;/li&gt; &#xA;  &lt;li&gt;使用者需承诺遵守相关法律法规，因滥用导致的后果由行为人自行承担，与本项目开发者无关。&lt;/li&gt; &#xA;  &lt;li&gt;开发者保留对违反本协议的行为追究法律责任的权利。&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Warning&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;一旦有任何人使用&lt;strong&gt;Portal&lt;/strong&gt;进行任何违法行为，请立即收集证据举报。&lt;/li&gt; &#xA; &lt;li&gt;禁止以违法目的使用&lt;strong&gt;Portal&lt;/strong&gt;/分发&lt;strong&gt;Portal&lt;/strong&gt;，否则后果自负。 任何企业/组织/个人不得以任何形式使用&lt;strong&gt;Portal&lt;/strong&gt;进行违法行为，否则后果自负。&lt;/li&gt; &#xA; &lt;li&gt;如有企业/组织/个人因为&lt;strong&gt;Portal&lt;/strong&gt;导致的任何法律纠纷，&lt;strong&gt;Portal&lt;/strong&gt;开发者概不负责。&lt;/li&gt; &#xA; &lt;li&gt;若有企业/组织/个人因为&lt;strong&gt;Portal&lt;/strong&gt;导致出现任何损失，业务中断，&lt;strong&gt;Portal&lt;/strong&gt;将最大程度协助您的调查。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portal&lt;/strong&gt;开发者保留对&lt;strong&gt;Portal&lt;/strong&gt;的最终解释权。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to detect &lt;strong&gt;Portal&lt;/strong&gt;?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portal&lt;/strong&gt; will create a notification when it is running, and you can check the notification to see if &lt;strong&gt;Portal&lt;/strong&gt; is running.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Portal&lt;/strong&gt; will add extra to the &lt;code&gt;Location&lt;/code&gt;, you can check it to see if &lt;strong&gt;Portal&lt;/strong&gt; is running.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;if (location.extras == null) {&#xA;    location.extras = Bundle()&#xA;}&#xA;location.extras?.putBoolean(&#34;portal.enable&#34;, true)&#xA;location.extras?.putBoolean(&#34;is_mock&#34;, true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; will create a notification when it is running.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; will add extra to the &lt;code&gt;Location&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; will mock in any case.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; will mock the gps status.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; will mock the cell info.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; will mock the wifi info.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; will mock the sensor info.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; can move position by rocker.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; can set the speed in the settings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; can set the altitude in the settings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; can set the accuracy in the settings.&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; &lt;strong&gt;Portal&lt;/strong&gt; will change the bearing when moving.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Thanks&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ZCShou/GoGoGo&#34;&gt;GoGoGo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lbsyun.baidu.com/faq/api?title=androidsdk&#34;&gt;Baidu Map SDK&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.fossa.com/projects/git%2Bgithub.com%2Ffuqiuluo%2FPortal?ref=badge_large&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/git%2Bgithub.com%2Ffuqiuluo%2FPortal.svg?type=large&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JakeWharton/mosaic</title>
    <updated>2025-02-26T01:32:11Z</updated>
    <id>tag:github.com,2025-02-26:/JakeWharton/mosaic</id>
    <link href="https://github.com/JakeWharton/mosaic" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Build terminal UI in Kotlin using Jetpack Compose&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mosaic&lt;/h1&gt; &#xA;&lt;p&gt;An experimental tool for building console UI in Kotlin using the Jetpack Compose compiler/runtime. Inspired by &lt;a href=&#34;https://github.com/vadimdemedes/ink&#34;&gt;Ink&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/jest/demo.gif&#34;&gt; &#xA;&lt;p&gt;Jump to: &lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/#Introduction&#34;&gt;Introduction&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/#Usage&#34;&gt;Usage&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/#Samples&#34;&gt;Samples&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/#FAQ&#34;&gt;FAQ&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/#License&#34;&gt;License&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Introduction&lt;/h2&gt; &#xA;&lt;p&gt;The entrypoint to Mosaic is the &lt;code&gt;runMosaic&lt;/code&gt; function. The lambda passed to this function is responsible for both output and performing work.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;suspend fun main() = runMosaic {&#xA;  Text(&#34;The count is: 0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To change the output dynamically we can use local properties to hold state. Let&#39;s update our counter to actually count to 20.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;suspend fun main() = runMosaic {&#xA;  var count by remember { mutableIntStateOf(0) }&#xA;&#xA;  Text(&#34;The count is: $count&#34;)&#xA;&#xA;  LaunchedEffect(Unit) {&#xA;    for (i in 1..20) {&#xA;      delay(250)&#xA;      count = i&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;(Note: You may need to add imports for &lt;code&gt;androidx.compose.runtime.getValue&lt;/code&gt; and &lt;code&gt;import androidx.compose.runtime.setValue&lt;/code&gt; manually.)&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/counter/demo.gif&#34;&gt; &#xA;&lt;p&gt;That is the most basic sample of Mosaic. From there, the limit is only your imagination.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/jest/demo.gif&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/rrtop/demo.gif&#34;&gt; &#xA;&lt;p&gt;&lt;em&gt;(Note: graphs in the above have rendering problems due to asciinema/agg which do not appear in the real output)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;Mosaic is a library for Compose, and it relies on JetBrains&#39; Kotlin Compose plugin to be present for use. Any module which wants to call &lt;code&gt;runMosaic&lt;/code&gt; or define &lt;code&gt;@Composable&lt;/code&gt; functions for use with Mosaic must have this plugin applied. For more information, see &lt;a href=&#34;https://www.jetbrains.com/help/kotlin-multiplatform-dev/compose-compiler.html&#34;&gt;the JetBrains Compose compiler documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Mosaic itself can then be added like any other dependency:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;dependencies {&#xA;  implementation(&#34;com.jakewharton.mosaic:mosaic-runtime:0.16.0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Documentation is available at &lt;a href=&#34;https://jakewharton.github.io/mosaic/docs/0.x/&#34;&gt;jakewharton.github.io/mosaic/docs/0.x/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Snapshots of the development version are available in Sonatype&#39;s snapshots repository.&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;repository {&#xA;  mavenCentral()&#xA;  maven {&#xA;    url &#39;https://oss.sonatype.org/content/repositories/snapshots/&#39;&#xA;  }&#xA;}&#xA;dependencies {&#xA;  implementation(&#34;com.jakewharton.mosaic:mosaic-runtime:0.17.0-SNAPSHOT&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Snapshot documentation is available at &lt;a href=&#34;https://jakewharton.github.io/mosaic/docs/latest/&#34;&gt;jakewharton.github.io/mosaic/docs/latest/&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;p&gt;Run &lt;code&gt;./gradlew installDist&lt;/code&gt; to build the sample binaries.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/counter&#34;&gt;Counter&lt;/a&gt;: A simple increasing number from 0 until 20.&lt;/p&gt; &lt;p&gt;&lt;code&gt;./samples/counter/build/install/counter/bin/counter&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/demo&#34;&gt;Demo&lt;/a&gt;: A playground for demonstrating many features of Mosaic.&lt;/p&gt; &lt;p&gt;&lt;code&gt;./samples/demo/build/install/demo/bin/demo&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/jest&#34;&gt;Jest&lt;/a&gt;: Example output of a test framework (such as JS&#39;s &#39;Jest&#39;).&lt;/p&gt; &lt;p&gt;&lt;code&gt;./samples/jest/build/install/jest/bin/jest&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/robot&#34;&gt;Robot&lt;/a&gt;: An interactive, game-like program with keyboard control.&lt;/p&gt; &lt;p&gt;&lt;code&gt;./samples/robot/build/install/robot/bin/robot&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/rrtop&#34;&gt;rrtop&lt;/a&gt;: An example inspired by &lt;a href=&#34;https://github.com/wojciech-zurek/rrtop&#34;&gt;rrtop&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;./samples/rrtop/build/install/rrtop/bin/rrtop&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JakeWharton/mosaic/trunk/samples/snake&#34;&gt;snake&lt;/a&gt;: Snake game.&lt;/p&gt; &lt;p&gt;&lt;code&gt;./samples/snake/build/install/snake/bin/snake&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;I thought Jetpack Compose was a UI toolkit for Android?&lt;/h3&gt; &#xA;&lt;p&gt;Compose is, at its core, a general-purpose runtime and compiler for tree and property manipulation which is trapped inside the AndroidX monorepo and under the Jetpack marketing department. This core can be used for &lt;em&gt;any&lt;/em&gt; tree on &lt;em&gt;any&lt;/em&gt; platform supported by Kotlin. It&#39;s an amazing piece of technology.&lt;/p&gt; &#xA;&lt;p&gt;Compose UI is the new UI toolkit for Android (and maybe &lt;a href=&#34;https://www.jetbrains.com/lp/compose/&#34;&gt;Desktop&lt;/a&gt;?). The lack of differentiation between these two technologies has unfortunately caused Compose UI to overshadow the core under the single &#34;Compose&#34; moniker in an unforced marketing error.&lt;/p&gt; &#xA;&lt;p&gt;If you want another example of a non-Compose UI-based Compose project checkout JetBrains&#39; &lt;a href=&#34;https://blog.jetbrains.com/kotlin/2021/05/technology-preview-jetpack-compose-for-web/&#34;&gt;Compose for Web&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;h3&gt;Output repeats with &lt;code&gt;./gradlew run&lt;/code&gt; and/or inside IntelliJ IDEA&lt;/h3&gt; &#xA;&lt;p&gt;Running within Gradle or IntelliJ IDEA will not work. Both tools strip ANSI control characters, which prevent Mosaic from redrawing over a previous frame. The output will likely just render in successive lines instead.&lt;/p&gt; &#xA;&lt;p&gt;In the future Mosaic will detect this case and do... something. For now, we unconditionally emit ANSI control characters. Run your programs directly in a terminal emulator–no IDE and no Gradle.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2020 Jake Wharton&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>