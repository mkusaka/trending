<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-09-14T01:31:13Z</updated>
  <subtitle>Daily Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>realm/realm-kotlin</title>
    <updated>2024-09-14T01:31:13Z</updated>
    <id>tag:github.com,2024-09-14:/realm/realm-kotlin</id>
    <link href="https://github.com/realm/realm-kotlin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin Multiplatform and Android SDK for the Realm Mobile Database: Build Better Apps Faster.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; &#xA; &lt;source srcset=&#34;./images/logo-dark.svg&#34; media=&#34;(prefers-color-scheme: dark)&#34; alt=&#34;realm by MongoDB&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/realm/realm-kotlin/main/images/logo.svg?sanitize=true&#34; alt=&#34;realm by MongoDB&#34;&gt; &#xA;&lt;/picture&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://plugins.gradle.org/plugin/io.realm.kotlin&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v/https/plugins.gradle.org/m2/io/realm/kotlin/io.realm.kotlin.gradle.plugin/maven-metadata.xml.svg?colorB=ff6b00&amp;amp;label=Gradle%20Plugin%20Portal&#34; alt=&#34;Gradle Plugin Portal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/io.realm.kotlin/gradle-plugin&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.realm.kotlin/gradle-plugin?colorB=4dc427&amp;amp;label=Maven%20Central&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-1.8.0-blue.svg?logo=kotlin&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/realm/realm-kotlin/raw/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Realm is a mobile database that runs directly inside phones, tablets or wearables.&lt;/p&gt; &#xA;&lt;p&gt;This repository holds the source code for the Kotlin SDK for Realm, which runs on Kotlin Multiplatform and Android.&lt;/p&gt; &#xA;&lt;h2&gt;Why Use Realm&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Intuitive to Developers:&lt;/strong&gt; Realm’s object-oriented data model is simple to learn, doesn’t need an ORM, and lets you write less code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built for Mobile:&lt;/strong&gt; Realm is fully-featured, lightweight, and efficiently uses memory, disk space, and battery life.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Designed for Offline Use:&lt;/strong&gt; Realm’s local database persists data on-disk, so apps work as well offline as they do online.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://www.mongodb.com/docs/atlas/app-services/sync/&#34;&gt;Atlas Device Sync&lt;/a&gt;&lt;/strong&gt;: Makes it simple to keep data in sync across users, devices, and your backend in real-time. Get started for free with &lt;a href=&#34;https://github.com/mongodb/template-app-kotlin-todo&#34;&gt;a template application&lt;/a&gt; and &lt;a href=&#34;http://mongodb.com/realm/register?utm_medium=github_atlas_CTA&amp;amp;utm_source=realm_kotlin_github&#34;&gt;create the cloud backend&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;General Availability&lt;/h1&gt; &#xA;&lt;p&gt;The Realm Kotlin SDK is GA.&lt;/p&gt; &#xA;&lt;p&gt;Documentation can be found &lt;a href=&#34;https://www.mongodb.com/docs/atlas/device-sdks/sdk/kotlin/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sample projects can be found &lt;a href=&#34;https://github.com/realm/realm-kotlin-samples&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you are upgrading from a previous beta release of Realm Kotlin, please see the &lt;a href=&#34;https://raw.githubusercontent.com/realm/realm-kotlin/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for the full list of changes.&lt;/p&gt; &#xA;&lt;p&gt;If you are migrating from &lt;a href=&#34;https://github.com/realm/realm-java&#34;&gt;Realm Java&lt;/a&gt;, please see the &lt;a href=&#34;https://www.mongodb.com/docs/atlas/device-sdks/sdk/kotlin/migrate-from-java-sdk-to-kotlin-sdk/&#34;&gt;Migration Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Usage&lt;/h1&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;Installation differs slightly depending on the type of project and whether or not you are using Device Sync. See the details in the documentation:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/docs/atlas/device-sdks/sdk/kotlin/install/#std-label-kotlin-install-android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.mongodb.com/docs/atlas/device-sdks/sdk/kotlin/install/#std-label-kotlin-install-kotlin-multiplatform&#34;&gt;Kotlin Multiplatform&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also pay attention to restrictions on which versions of Kotlin and other dependencies that are supported. You can read more in the &lt;a href=&#34;https://raw.githubusercontent.com/realm/realm-kotlin/main/#version-compatibility-matrix&#34;&gt;version compatibility matrix&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Define model&lt;/h2&gt; &#xA;&lt;p&gt;Start writing your database logic by first defining your model.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;class Person : RealmObject {&#xA;    var name: String = &#34;Foo&#34;&#xA;    var dog: Dog? = null&#xA;}&#xA;&#xA;class Dog : RealmObject {&#xA;    var name: String = &#34;&#34;&#xA;    var age: Int = 0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Open Database&lt;/h2&gt; &#xA;&lt;p&gt;Define a &lt;em&gt;RealmConfiguration&lt;/em&gt; with the database schema, then open the Realm using it.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;// use the RealmConfiguration.Builder() for more options&#xA;val configuration = RealmConfiguration.create(schema = setOf(Person::class, Dog::class)) &#xA;val realm = Realm.open(configuration)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Write&lt;/h2&gt; &#xA;&lt;p&gt;Persist some data by instantiating the model object and copying it into the open Realm instance.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;// plain old kotlin object&#xA;val person = Person().apply {&#xA;    name = &#34;Carlo&#34;&#xA;    dog = Dog().apply { name = &#34;Fido&#34;; age = 16 }&#xA;}&#xA;&#xA;// Persist it in a transaction&#xA;realm.writeBlocking { // this : MutableRealm&#xA;    val managedPerson = copyToRealm(person)&#xA;}&#xA;&#xA;// Asynchronous updates with Kotlin coroutines&#xA;CoroutineScope(context).async {&#xA;    realm.write { // this : MutableRealm&#xA;        val managedPerson = copyToRealm(person)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Query&lt;/h2&gt; &#xA;&lt;p&gt;The query language supported by Realm is inspired by Apple’s &lt;a href=&#34;https://developer.apple.com/documentation/foundation/nspredicate&#34;&gt;NSPredicate&lt;/a&gt;, see more examples &lt;a href=&#34;https://www.mongodb.com/docs/atlas/device-sdks/realm-query-language/&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;// All persons&#xA;import io.realm.kotlin.ext.query&#xA;&#xA;val all = realm.query&amp;lt;Person&amp;gt;().find()&#xA;&#xA;// Persons named &#39;Carlo&#39;&#xA;val personsByNameQuery: RealmQuery&amp;lt;Person&amp;gt; = realm.query&amp;lt;Person&amp;gt;(&#34;name = $0&#34;, &#34;Carlo&#34;)&#xA;val filteredByName: RealmResults&amp;lt;Person&amp;gt; = personsByNameQuery.find()&#xA;&#xA;// Person having a dog aged more than 7 with a name starting with &#39;Fi&#39;&#xA;val filteredByDog = realm.query&amp;lt;Person&amp;gt;(&#34;dog.age &amp;gt; $0 AND dog.name BEGINSWITH $1&#34;, 7, &#34;Fi&#34;).find()&#xA;&#xA;// Observing changes with Coroutine Flows&#xA;CoroutineScope(context).async {&#xA;    personsByNameQuery.asFlow().collect { result: ResultsChange&amp;lt;Person&amp;gt; -&amp;gt;&#xA;        println(&#34;Realm updated: Number of persons is ${result.list.size}&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Update&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;// Find the first Person without a dog&#xA;realm.query&amp;lt;Person&amp;gt;(&#34;dog == NULL LIMIT(1)&#34;)&#xA;    .first()&#xA;    .find()&#xA;    ?.also { personWithoutDog -&amp;gt;&#xA;        // Add a dog in a transaction&#xA;        realm.writeBlocking {&#xA;            findLatest(personWithoutDog)?.dog = Dog().apply { name = &#34;Laika&#34;; age = 3 }&#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Delete&lt;/h2&gt; &#xA;&lt;p&gt;Use the result of a query to delete from the database.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;// delete all Dogs&#xA;realm.writeBlocking {&#xA;    // Selected by a query&#xA;    val query = this.query&amp;lt;Dog&amp;gt;()&#xA;    delete(query)&#xA;&#xA;    // From a query result&#xA;    val results = query.find()&#xA;    delete(results)&#xA;&#xA;    // From individual objects&#xA;    results.forEach { delete(it) }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Observing data changes&lt;/h2&gt; &#xA;&lt;p&gt;Realm support asynchronous observers on all its data structures.&lt;/p&gt; &#xA;&lt;h3&gt;Realm&lt;/h3&gt; &#xA;&lt;p&gt;A Realm can be observed globally for changes on its data.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;realm.asFlow()&#xA;    .collect { realmChange: RealmChange&amp;lt;Realm&amp;gt; -&amp;gt;&#xA;        when (realmChange) {&#xA;            is InitialRealm&amp;lt;*&amp;gt; -&amp;gt; println(&#34;Initial Realm&#34;)&#xA;            is UpdatedRealm&amp;lt;*&amp;gt; -&amp;gt; println(&#34;Realm updated&#34;)&#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RealmObject&lt;/h3&gt; &#xA;&lt;p&gt;Realm objects can be observed individually. A list of the changed field names is provided on each update.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;person.asFlow().collect { objectChange: ObjectChange&amp;lt;Person&amp;gt; -&amp;gt;&#xA;        when (objectChange) {&#xA;            is InitialObject -&amp;gt; println(&#34;Initial object: ${objectChange.obj.name}&#34;)&#xA;            is UpdatedObject -&amp;gt; &#xA;                println(&#34;Updated object: ${objectChange.obj.name}, changed fields: ${objectChange.changedFields.size}&#34;)&#xA;            is DeletedObject -&amp;gt; println(&#34;Deleted object&#34;)&#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RealmLists&lt;/h3&gt; &#xA;&lt;p&gt;Realm data structures can be observed too. On &lt;code&gt;RealmList&lt;/code&gt; on each update you receive what positions were inserted, changed or deleted.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;person.addresses.asFlow()&#xA;        .collect { listChange: ListChange&amp;lt;String&amp;gt; -&amp;gt;&#xA;            when (listChange) {&#xA;                is InitialList -&amp;gt; println(&#34;Initial list size: ${listChange.list.size}&#34;)&#xA;                is UpdatedList -&amp;gt; &#xA;                    println(&#34;Updated list size: ${listChange.list.size} insertions ${listChange.insertions.size}&#34;)&#xA;                is DeletedList -&amp;gt; println(&#34;Deleted list&#34;)&#xA;            }&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RealmQuery&lt;/h3&gt; &#xA;&lt;p&gt;Query results are also observable, and like &lt;code&gt;RealmList&lt;/code&gt; on each update, the inserted, changed and deleted indices are also provided.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;realm.query&amp;lt;Person&amp;gt;().asFlow()&#xA;    .collect { resultsChange: ResultsChange&amp;lt;Person&amp;gt; -&amp;gt;&#xA;        when (resultsChange) {&#xA;            is InitialResults -&amp;gt; println(&#34;Initial results size: ${resultsChange.list.size}&#34;)&#xA;            is UpdatedResults -&amp;gt; &#xA;                println(&#34;Updated results size: ${resultsChange.list.size} insertions ${resultsChange.insertions.size}&#34;)&#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;RealmSingleQuery&lt;/h3&gt; &#xA;&lt;p&gt;Single element queries allow observing a &lt;code&gt;RealmObject&lt;/code&gt; that might not be in the realm.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;realm.query&amp;lt;Person&amp;gt;(&#34;name = $0&#34;, &#34;Carlo&#34;).first().asFlow()&#xA;    .collect { objectChange: SingleQueryChange&amp;lt;Person&amp;gt; -&amp;gt;&#xA;        when (objectChange) {&#xA;            is PendingObject -&amp;gt; println(&#34;Pending object&#34;)&#xA;            is InitialObject -&amp;gt; println(&#34;Initial object: ${objectChange.obj.name}&#34;)&#xA;            is UpdatedObject -&amp;gt; &#xA;                println(&#34;Updated object: ${objectChange.obj.name}, changed fields: ${objectChange.changedFields.size}&#34;)&#xA;            is DeletedObject -&amp;gt; println(&#34;Deleted object&#34;)&#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Next: head to the full KMM &lt;a href=&#34;https://github.com/realm/realm-kotlin-samples/tree/main/Bookshelf&#34;&gt;example&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Using Snapshots&lt;/h1&gt; &#xA;&lt;p&gt;If you want to test recent bugfixes or features that have not been packaged in an official release yet, you can use a &lt;strong&gt;-SNAPSHOT&lt;/strong&gt; release of the current development version of Realm via Gradle, available on &lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots/io/realm/kotlin/&#34;&gt;Maven Central&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Groovy&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Gradle&#34;&gt;// Global build.gradle&#xA;buildscript {&#xA;    repositories {&#xA;        google()&#xA;        mavenCentral()&#xA;        maven {&#xA;            url &#39;https://oss.sonatype.org/content/repositories/snapshots&#39;&#xA;        }&#xA;    }&#xA;    dependencies {&#xA;        classpath &#39;io.realm.kotlin:gradle-plugin:&amp;lt;VERSION&amp;gt;&#39;&#xA;    }&#xA;}&#xA;&#xA;allprojects {&#xA;    repositories {&#xA;        google()&#xA;        mavenCentral()&#xA;        maven {&#xA;            url &#39;https://oss.sonatype.org/content/repositories/snapshots&#39;&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;// Module build.gradle&#xA;&#xA;// Don&#39;t cache SNAPSHOT (changing) dependencies.&#xA;configurations.all {&#xA;    resolutionStrategy.cacheChangingModulesFor 0, &#39;seconds&#39;&#xA;}&#xA;&#xA;apply plugin: &#34;io.realm.kotlin&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Kotlin&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-Kotlin&#34;&gt;// Global build.gradle&#xA;&#xA;buildscript {&#xA;    dependencies {&#xA;        classpath(&#34;io.realm.kotlin:gradle-plugin:&amp;lt;VERSION&amp;gt;-SNAPSHOT&#34;)&#xA;    }&#xA;}&#xA;&#xA;repositories {&#xA;    google()&#xA;    mavenCentral()&#xA;    maven {&#xA;        url = uri(&#34;https://oss.sonatype.org/content/repositories/snapshots&#34;)&#xA;    }&#xA;}&#xA;&#xA;// Module build.gradle&#xA;&#xA;plugins {&#xA;    id(&#34;io.realm.kotlin&#34;)&#xA;}&#xA;kotlin {&#xA;    sourceSets {&#xA;        val commonMain  by getting {&#xA;            dependencies {&#xA;                implementation(&#34;io.realm.kotlin:library-base:&amp;lt;VERSION&amp;gt;-SNAPSHOT&#34;)&#xA;            }&#xA;        }&#xA;    }&#xA;}     &#xA;&#xA;// Don&#39;t cache SNAPSHOT (changing) dependencies.&#xA;configurations.all {&#xA;    resolutionStrategy.cacheChangingModulesFor(0,TimeUnit.SECONDS)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/realm/realm-kotlin/main/buildSrc/src/main/kotlin/Config.kt#L20txt&#34;&gt;Config.kt&lt;/a&gt; for the latest version number.&lt;/p&gt; &#xA;&lt;h1&gt;Version Compatibility Matrix&lt;/h1&gt; &#xA;&lt;p&gt;With Kotlin Multiplatform &lt;a href=&#34;https://kotlinlang.org/docs/components-stability.html#current-stability-of-kotlin-components&#34;&gt;still in Beta&lt;/a&gt; and the Compiler Plugin APIs being experimental, there might be restrictions on what versions of Kotlin the Realm Kotlin SDK supports. In the matrix below, you will find the minimum supported version for the dependencies of each Realm release.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Realm Version&lt;/th&gt; &#xA;   &lt;th&gt;Requirements&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2.0.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 2.0.0+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.7.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 7.2 - 8.5&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.16.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.9.0+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.7.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.8.3 - 8.5&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.15.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.9.0+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.7.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.8.3 - 8.5&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.14.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.9.0+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.7.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.8.3 - 8.5&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.13.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.9.0+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.7.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.8.3 - 8.5&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.12.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.8.20+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.7.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.8.3 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.11.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.8.0+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.7.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.8.3 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.10.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.8.0+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.7.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.8.3 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.9.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.8.0+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.8.3 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.8.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.7.1&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20+&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.7.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20 - 1.8.10&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.6.1&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20+.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.6.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20 - 1.7.21.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.5.2&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20 - 1.7.21.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.5.1&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20 - 1.7.21.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.5.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20 - 1.7.21.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.4.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.7.20 - 1.7.21.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.18.3+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 2.1.2+.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.4+.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.7.1 - 7.6.1.&lt;/li&gt;&#xA;     &lt;li&gt;The new memory model only.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.3.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.6.10 - 1.7.10.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.17.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 1.6.8.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.0-native-mt.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.1.1 - 7.6.1.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.2.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.6.10 - 1.7.10.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.17.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 1.6.8.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.0-native-mt.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.1.1 - 7.6.1.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.1.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.6.10 - 1.7.10.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.17.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 1.6.8.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.0-native-mt.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.1.1 - 7.6.1.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0.2&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.6.10 - 1.7.10.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.17.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 1.6.8.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.0-native-mt.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.1.1 - 7.6.1.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0.1&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.6.10 - 1.7.10.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.17.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 1.6.8.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.0-native-mt.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.1.1 - 7.6.1.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1.0.0&lt;/td&gt; &#xA;   &lt;td&gt;&#xA;    &lt;ul&gt;&#xA;     &lt;li&gt;Kotlin 1.6.10 - 1.7.10.&lt;/li&gt;&#xA;     &lt;li&gt;AtomicFu 0.17.0+.&lt;/li&gt;&#xA;     &lt;li&gt;Ktor 1.6.8.&lt;/li&gt;&#xA;     &lt;li&gt;Coroutines 1.6.0-native-mt.&lt;/li&gt;&#xA;     &lt;li&gt;Gradle 6.1.1 - 7.6.1.&lt;/li&gt;&#xA;    &lt;/ul&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;While we strive to be compatible with other plugins and libraries like Android Gradle Plugin, Jetpack Compose and Compose Multiplatform, these plugins (and others) have their own version restrictions, so if you are running into build errors this would be the first thing to check:&lt;/p&gt; &#xA;&lt;p&gt;You can find Kotlin version requirements for these libraries and plugins here:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio/releases/gradle-plugin&#34;&gt;Android Gradle Plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/jetpack/androidx/releases/compose-kotlin&#34;&gt;Jetpack Compose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-jb/raw/master/VERSIONING.md&#34;&gt;Compose Multiplatform&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Kotlin Memory Model and Coroutine compatibility&lt;/h1&gt; &#xA;&lt;p&gt;Realm Kotlin 1.3.0 and above &lt;em&gt;only&lt;/em&gt; works with the new Kotlin Native memory model. This is also the default memory model from Kotlin 1.7.20 and onwards. This mean that you need the default Kotlin Coroutine library 1.6.0 and above and not the &lt;code&gt;-mt&lt;/code&gt; variant, which have also been &lt;a href=&#34;https://blog.jetbrains.com/kotlin/2021/12/introducing-kotlinx-coroutines-1-6-0/&#34;&gt;deprecated&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See the &lt;code&gt;## Compatibility&lt;/code&gt; section of the &lt;a href=&#34;https://raw.githubusercontent.com/realm/realm-kotlin/main/CHANGELOG.md&#34;&gt;CHANGELOG&lt;/a&gt; for information about exactly which versions are compatible with a given version of Realm Kotlin.&lt;/p&gt; &#xA;&lt;p&gt;When upgrading older projects, it is important to be aware that certain Gradle properties will control the memory model being used. So, if you have the Gradle properties below defined in your project. Make sure they are set to the values shown:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;kotlin.native.binary.memoryModel=experimental&#xA;kotlin.native.binary.freezing=disabled&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://kotlinlang.org/docs/native-memory-manager.html&#34;&gt;https://kotlinlang.org/docs/native-memory-manager.html&lt;/a&gt; for more details about the new memory model.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/realm/realm-kotlin/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt; for more details!&lt;/p&gt; &#xA;&lt;h1&gt;Code of Conduct&lt;/h1&gt; &#xA;&lt;p&gt;This project adheres to the &lt;a href=&#34;https://www.mongodb.com/community-code-of-conduct&#34;&gt;MongoDB Code of Conduct&lt;/a&gt;. By participating, you are expected to uphold this code. Please report unacceptable behavior to &lt;a href=&#34;mailto:community-conduct@mongodb.com&#34;&gt;community-conduct@mongodb.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Realm Kotlin is published under the &lt;a href=&#34;https://raw.githubusercontent.com/realm/realm-kotlin/main/LICENSE&#34;&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;This product is not being made available to any person located in Cuba, Iran, North Korea, Sudan, Syria or the Crimea region, or to any other person that is not eligible to receive the product under U.S. law.&lt;/p&gt; &#xA;&lt;img style=&#34;width: 0px; height: 0px;&#34; src=&#34;https://3eaz4mshcd.execute-api.us-east-1.amazonaws.com/prod?s=https://github.com/realm/realm-kotlin#README.md&#34;&gt;</summary>
  </entry>
</feed>