<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-01T02:17:00Z</updated>
  <subtitle>Monthly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JetBrains/compose-multiplatform</title>
    <updated>2023-10-01T02:17:00Z</updated>
    <id>tag:github.com,2023-10-01:/JetBrains/compose-multiplatform</id>
    <link href="https://github.com/JetBrains/compose-multiplatform" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Compose Multiplatform, a modern UI framework for Kotlin that makes building performant and beautiful user interfaces easy and enjoyable.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;http://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;official project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/JetBrains/compose-multiplatform?color=brightgreen&amp;amp;label=latest%20release&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/JetBrains/compose-multiplatform?color=orange&amp;amp;include_prereleases&amp;amp;label=latest%20build&#34; alt=&#34;Latest build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Compose Multiplatform&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Compose Multiplatform&lt;/strong&gt; is a declarative framework for sharing UIs across multiple platforms with Kotlin. It is based on &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; and developed by &lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt; and open-source contributors.&lt;/p&gt; &#xA;&lt;p&gt;You can choose the platforms across which to share your UIs using Compose Multiplatform:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-ios-android-template/#readme&#34;&gt;iOS&lt;/a&gt; (Alpha)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Android&lt;/a&gt; (via Jetpack Compose)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-desktop-template/#readme&#34;&gt;Desktop&lt;/a&gt; (Windows, MacOS, Linux)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotl.in/wasm-compose-example&#34;&gt;Web&lt;/a&gt; (Experimental)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For example, you can share UIs between iOS and Android or Windows and MacOS.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/artwork/readme/apps.png&#34; alt=&#34;Shared UIs of the iOS, Android, desktop, and web apps&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;iOS&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;iOS support is in Alpha. It may change incompatibly and require manual migration in the future. We would appreciate your feedback on it in the public Slack channel &lt;a href=&#34;https://kotlinlang.slack.com/archives/C0346LWVBJ4/p1678888063176359&#34;&gt;#compose-ios&lt;/a&gt;. If you face any issues, please report them on &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;Compose Multiplatform shares most of its API with Jetpack Compose, the Android UI framework developed by Google. You can use the same APIs to build user interfaces for both Android and iOS.&lt;/p&gt; &#xA;&lt;p&gt;Since Compose is built on top of &lt;a href=&#34;https://kotlinlang.org/lp/multiplatform/&#34;&gt;Kotlin Multiplatform&lt;/a&gt;, you can easily access native APIs, such as the &lt;a href=&#34;https://developer.apple.com/documentation/avfoundation/capture_setup/avcam_building_a_camera_app&#34;&gt;Camera API&lt;/a&gt;, and embed complex native UI views, such as &lt;a href=&#34;https://developer.apple.com/documentation/mapkit/mkmapview&#34;&gt;MKMapView&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-ios-android-template#readme&#34;&gt;Get started with Compose for iOS&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Android&lt;/h2&gt; &#xA;&lt;p&gt;When Android is one of your targets, you can get the same experience for Android as if you were developing an Android app using &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Desktop&lt;/h2&gt; &#xA;&lt;p&gt;Compose Multiplatform targets the JVM and supports high-performance hardware-accelerated UI rendering on all major desktop platforms – macOS, Windows, and Linux.&lt;/p&gt; &#xA;&lt;p&gt;It has desktop extensions for menus, keyboard shortcuts, window manipulation, and notification management.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-desktop-template#readme&#34;&gt;Get started with Compose for Desktop&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Web&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Web support is Experimental and may be changed at any time. Use it only for evaluation purposes. We would appreciate your feedback on it in the public Slack channel &lt;a href=&#34;https://kotlinlang.slack.com/archives/C01F2HV7868/p1678887590205449&#34;&gt;#compose-web&lt;/a&gt;. If you face any issues, please report them on &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can experiment with sharing your mobile or desktop UIs with the web. Compose for Web is based on &lt;a href=&#34;https://kotl.in/wasm&#34;&gt;Kotlin/Wasm&lt;/a&gt;, the newest target for Kotlin Multiplatform projects. It allows Kotlin developers to run their code in the browser with all the benefits that WebAssembly has to offer, such as good and predictable performance for your applications.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://kotl.in/wasm-compose-example&#34;&gt;Get started with Compose for Web&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;All platforms at once&lt;/h2&gt; &#xA;&lt;p&gt;If you want to share UIs across all supported platforms at once, you can start with &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-template#readme&#34;&gt;this template&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that this template currently doesn’t support the web. It will be added later.&lt;/p&gt; &#xA; &lt;p&gt;We would appreciate your feedback on Compose Multiplatform in the public Slack channel &lt;a href=&#34;https://kotlinlang.slack.com/archives/CJLTWPH7S/p1678882768039969&#34;&gt;#compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Libraries&lt;/h2&gt; &#xA;&lt;h3&gt;Compose HTML&lt;/h3&gt; &#xA;&lt;p&gt;Compose HTML is a library targeting &lt;a href=&#34;https://kotlinlang.org/docs/js-overview.html&#34;&gt;Kotlin/JS&lt;/a&gt; that provides Composable building blocks for creating web user interfaces with HTML and CSS.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note that Compose HTML is not a multiplatform library. It can be used only with Kotlin/JS.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Learn more&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/docs/FAQ.md&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/README.md&#34;&gt;Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/README.md&#34;&gt;Tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/VERSIONING.md&#34;&gt;Compatibility and versioning&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>Skytils/SkytilsMod</title>
    <updated>2023-10-01T02:17:00Z</updated>
    <id>tag:github.com,2023-10-01:/Skytils/SkytilsMod</id>
    <link href="https://github.com/Skytils/SkytilsMod" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Skytils is a Hypixel Skyblock mod! Be careful, malicious copies are distributed across GitHub. Confirm on discord.gg/skytils (807302538558308352)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SkytilsMod&lt;/h1&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Skytils/SkytilsMod/releases&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;downloads&#34; src=&#34;https://img.shields.io/github/v/release/Skytils/SkytilsMod?color=4166f5&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Skytils/SkytilsMod/releases&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;downloads&#34; src=&#34;https://img.shields.io/github/downloads/Skytils/SkytilsMod/total?color=4166f5&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/Skytils/SkytilsMod/raw/main/LICENSE&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;license&#34; src=&#34;https://img.shields.io/github/license/Skytils/SkytilsMod?color=4166f5&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.gg/skytils&#34; target=&#34;_blank&#34;&gt; &lt;img alt=&#34;discord&#34; src=&#34;https://img.shields.io/discord/807302538558308352?color=4166f5&amp;amp;label=discord&amp;amp;style=flat-square&#34;&gt; &lt;/a&gt; &lt;/p&gt; A Hypixel Skyblock Utilities mod. &#xA;&lt;p style=&#34;font-size: larger&#34;&gt; 09/15/2023: If you have a GitHub account, &lt;b&gt;PLEASE CONSIDER STARRING&lt;/b&gt; and forking the repository! A new influx of fake respoitories are using botted star and fork counts in order to outrank the search algorithm. &lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;General&lt;/summary&gt; &#xA; &lt;h3&gt;General&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Client Side Custom Armor Colors (with animated rainbow)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Custom Command Aliases&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Griffin Burrow Locator and Waypoints&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Track Mythological Event drops&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Track Gaia Construct Hits&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Reparty Command Which Yields to Other Mods&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Auto Accept Reparty&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;del&gt;Trick or Treat Chest Alert&lt;/del&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Custom Key Shortcuts&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Better Auction House Price Input&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Copy Deaths to Clipboard&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Spam Hider for&lt;/p&gt; &#xA;   &lt;ul&gt; &#xA;    &lt;li&gt;Profile messages&lt;/li&gt; &#xA;    &lt;li&gt;Mort messages&lt;/li&gt; &#xA;    &lt;li&gt;Boss messages&lt;/li&gt; &#xA;    &lt;li&gt;Oruo (Trivia puzzle) messages&lt;/li&gt; &#xA;    &lt;li&gt;Autopet messages&lt;/li&gt; &#xA;    &lt;li&gt;Ability messages &#xA;     &lt;ul&gt; &#xA;      &lt;li&gt;Implosion&lt;/li&gt; &#xA;      &lt;li&gt;Midas Staff&lt;/li&gt; &#xA;      &lt;li&gt;Spirit Sceptre&lt;/li&gt; &#xA;      &lt;li&gt;Giant Sword&lt;/li&gt; &#xA;      &lt;li&gt;Livid Dagger&lt;/li&gt; &#xA;      &lt;li&gt;Staff of the Rising Sun&lt;/li&gt; &#xA;     &lt;/ul&gt; &lt;/li&gt; &#xA;    &lt;li&gt;Cooldown messages&lt;/li&gt; &#xA;    &lt;li&gt;Mana messages&lt;/li&gt; &#xA;    &lt;li&gt;Blocks in the way messages&lt;/li&gt; &#xA;    &lt;li&gt;Dungeon blessings&lt;/li&gt; &#xA;    &lt;li&gt;Wither &amp;amp; blood key pickups&lt;/li&gt; &#xA;    &lt;li&gt;Superboom TNT pickups&lt;/li&gt; &#xA;    &lt;li&gt;Revive stone pickups&lt;/li&gt; &#xA;    &lt;li&gt;Combo messages&lt;/li&gt; &#xA;    &lt;li&gt;Blessing enchant and bait messages&lt;/li&gt; &#xA;    &lt;li&gt;Wither and Undead Essence unlock messages&lt;/li&gt; &#xA;    &lt;li&gt;Healing messages&lt;/li&gt; &#xA;    &lt;li&gt;Sea Creature and Fishing Treasure messages&lt;/li&gt; &#xA;    &lt;li&gt;Compact Enchantment messages&lt;/li&gt; &#xA;    &lt;li&gt;Mining ability messages&lt;/li&gt; &#xA;   &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details&gt;&#xA;    &lt;summary&gt;Custom Spam Hider&lt;/summary&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;3 modes: StartsWith, Contains, Regex&lt;/li&gt; &#xA;     &lt;li&gt;Toggle for skyblock only&lt;/li&gt; &#xA;     &lt;li&gt;Custom Name and Pattern&lt;/li&gt; &#xA;     &lt;li&gt;Can use unformatted or formatted text&lt;/li&gt; &#xA;     &lt;li&gt;Works with existing spam GUI element&lt;/li&gt; &#xA;    &lt;/ul&gt; &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Custom Enchant Names&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details&gt; &#xA;    &lt;summary&gt;Moveable Item Highlight&lt;/summary&gt; The text for item name that shows up when you swap items&#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details&gt;&#xA;    &lt;summary&gt;Moveable Action Bar&lt;/summary&gt; The text used to display skyblock information. Doesn&#39;t show up when using anything that removes text.&#xA;   &lt;/details&gt; &lt;/li&gt;&#xA; &lt;/ul&gt;&#xA;&lt;/details&gt;   &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Dungeons&lt;/summary&gt; &#xA; &lt;h4&gt;Dungeons&lt;/h4&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;del&gt;Show Hidden Fels, Shadow Assassins, and blood room mobs&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Blaze Solver Which Replaces The Skin Textures&lt;/li&gt; &#xA;  &lt;li&gt;Boulder Puzzle Solver&lt;/li&gt; &#xA;  &lt;li&gt;Simon Says Solver&lt;/li&gt; &#xA;  &lt;li&gt;Trivia Solver (updated with the latest answers)&lt;/li&gt; &#xA;  &lt;li&gt;Three Weirdo Solver&lt;/li&gt; &#xA;  &lt;li&gt;Spirit Leap Names&lt;/li&gt; &#xA;  &lt;li&gt;Click in Order Terminal Solver&lt;/li&gt; &#xA;  &lt;li&gt;Ice Path Solver&lt;/li&gt; &#xA;  &lt;li&gt;Creeper Beams Solver&lt;/li&gt; &#xA;  &lt;li&gt;Target Shooting Solver&lt;/li&gt; &#xA;  &lt;li&gt;Alignment Device Solver&lt;/li&gt; &#xA;  &lt;li&gt;Tic Tac Toe Solver&lt;/li&gt; &#xA;  &lt;li&gt;Select All Color Solver&lt;/li&gt; &#xA;  &lt;li&gt;Stop Dropping, Salvaging, and Selling Starred Dungeon Items&lt;/li&gt; &#xA;  &lt;li&gt;Bigger Bat Rendering and Bat Hitbox Display&lt;/li&gt; &#xA;  &lt;li&gt;Giant, Sadan, and Necron HP Display&lt;/li&gt; &#xA;  &lt;li&gt;Better Sadan Interest Timer (Terracotta Phase)&lt;/li&gt; &#xA;  &lt;li&gt;Score Calculation&lt;/li&gt; &#xA;  &lt;li&gt;Dungeon Timer&lt;/li&gt; &#xA;  &lt;li&gt;Necron Phase Timer&lt;/li&gt; &#xA;  &lt;li&gt;Dungeon reroll Confirmation&lt;/li&gt; &#xA;  &lt;li&gt;Skeleton Master Boxes&lt;/li&gt; &#xA;  &lt;li&gt;Correct Livid Finder (with M5 support)&lt;/li&gt; &#xA;  &lt;li&gt;Dungeon Chest Profit&lt;/li&gt; &#xA;  &lt;li&gt;Simple Dungeon Map&lt;/li&gt; &#xA;  &lt;li&gt;Guardian Respawn Timer&lt;/li&gt; &#xA;  &lt;li&gt;Boxed Tanks and Protected Teammates&lt;/li&gt; &#xA;  &lt;li&gt;Tank Range Display Circle&lt;/li&gt; &#xA;  &lt;li&gt;Auto Reparty on Dungeon End&lt;/li&gt; &#xA;  &lt;li&gt;Dungeon Death Counter&lt;/li&gt; &#xA;  &lt;li&gt;Giant HP at the Giant&#39;s Feet&lt;/li&gt; &#xA;  &lt;li&gt;Sadan Phase Timers&lt;/li&gt; &#xA;  &lt;li&gt;Spirit Leap Highlights for Names and Classes&lt;/li&gt; &#xA;  &lt;li&gt;Big Crypts Counter&lt;/li&gt; &#xA;  &lt;li&gt;Highlight Spirit Bow&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Farming&lt;/summary&gt; &#xA; &lt;h3&gt;Farming&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;del&gt;Block Math Hoe Recipe Viewer&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;del&gt;Block Breaking Farms&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Hungry Hiker solver&lt;/li&gt; &#xA;  &lt;li&gt;Treasure Hunter Solver&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Mining&lt;/summary&gt; &#xA; &lt;h3&gt;Mining&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;del&gt;Show Ghosts in the Mist (Also their health)&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;del&gt;Disable Pickaxe Ability on Private Island&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Fetchur Solver&lt;/li&gt; &#xA;  &lt;li&gt;Puzzler Solver&lt;/li&gt; &#xA;  &lt;li&gt;Raffle Waypoint and Warning&lt;/li&gt; &#xA;  &lt;li&gt;Show hidden sneaky creepers&lt;/li&gt; &#xA;  &lt;li&gt;Dark Mode Mist&lt;/li&gt; &#xA;  &lt;li&gt;More Visible Ghosts&lt;/li&gt; &#xA;  &lt;li&gt;Recolor Carpets&lt;/li&gt; &#xA;  &lt;li&gt;Highlight Completed Commissions&lt;/li&gt; &#xA;  &lt;li&gt;Crystal Hollows Map&lt;/li&gt; &#xA;  &lt;li&gt;Crystal Hollows Waypoints&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Items&lt;/summary&gt; &#xA; &lt;h3&gt;Items&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;del&gt;Soul Eater Bonus Strength&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;del&gt;Block Useless Zombie Sword Uses&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;del&gt;Prioritize Item Abilities&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Pet Item Confirmation&lt;/li&gt; &#xA;  &lt;li&gt;Highlight Active &amp;amp; Favorite Pets&lt;/li&gt; &#xA;  &lt;li&gt;Hide Implosion Particles&lt;/li&gt; &#xA;  &lt;li&gt;Hide Midas Staff Gold Blocks&lt;/li&gt; &#xA;  &lt;li&gt;Big Item Drops&lt;/li&gt; &#xA;  &lt;li&gt;Larger Heads&lt;/li&gt; &#xA;  &lt;li&gt;Show Enchanted Book, Potion, Minion Tiers, and Dungeon Stars&lt;/li&gt; &#xA;  &lt;li&gt;Show Pet Candies&lt;/li&gt; &#xA;  &lt;li&gt;Only Collect Enchanted Items&lt;/li&gt; &#xA;  &lt;li&gt;Dungeon Potion Lock&lt;/li&gt; &#xA;  &lt;li&gt;Power Orb Lock&lt;/li&gt; &#xA;  &lt;li&gt;Prevent Placing Spirit Sceptre and Flower of Truth&lt;/li&gt; &#xA;  &lt;li&gt;Transparent Head Layer&lt;/li&gt; &#xA;  &lt;li&gt;Show NPC Sell Values&lt;/li&gt; &#xA;  &lt;li&gt;&lt;del&gt;Hide Wither Veil Creepers Near NPCs&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;del&gt;Customizable Block Item Ability&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Show Price of Items in the Experimentation Table&lt;/li&gt; &#xA;  &lt;li&gt;Jerry-chine Gun Sound Hider&lt;/li&gt; &#xA;  &lt;li&gt;Show Enchanted Book Abbreviation&lt;/li&gt; &#xA;  &lt;li&gt;Show Radioactive Bonus&lt;/li&gt; &#xA;  &lt;li&gt;Block Zapper Fatigue Timer&lt;/li&gt; &#xA;  &lt;li&gt;Etherwarp Teleport Display&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Slayers&lt;/summary&gt; &#xA; &lt;h3&gt;Slayers&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Show Slayer RNG Progress as the Boss Bar&lt;/li&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details&gt;&#xA;    &lt;summary&gt;Soulflow Display&lt;/summary&gt; Requires your Soulflow talisman to be in your inventory &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details&gt;&#xA;    &lt;summary&gt;Low Soulflow Ping&lt;/summary&gt; Requires your Soulflow talisman to be in your inventory &#xA;   &lt;/details&gt; &lt;/li&gt; &#xA;  &lt;li&gt;Slayer display&lt;/li&gt; &#xA;  &lt;li&gt;Yang Glyph Ping and Highlight&lt;/li&gt; &#xA;  &lt;li&gt;Nukekebi Skull Highlight&lt;/li&gt; &#xA;  &lt;li&gt;Seraph Display&lt;/li&gt; &#xA;  &lt;li&gt;Broken Heart Radiation Hider for Others&#39; Bosses&lt;/li&gt; &#xA;  &lt;li&gt;Slayer Time to Kill&lt;/li&gt; &#xA;  &lt;li&gt; &#xA;   &lt;details&gt;&#xA;    &lt;summary&gt;Re-color seraph boss&lt;/summary&gt; This shows different phases such as Malevolent Hitshield and Yang Glyph&#xA;   &lt;/details&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Miscellaneous&lt;/summary&gt; &#xA; &lt;h3&gt;Miscellaneous&lt;/h3&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Hide Witherborn Boss Bars&lt;/li&gt; &#xA;  &lt;li&gt;Hide Fire and Lightning&lt;/li&gt; &#xA;  &lt;li&gt;Custom Damage Splash&lt;/li&gt; &#xA;  &lt;li&gt;Legion and Dolphin player displays&lt;/li&gt; &#xA;  &lt;li&gt;Alerts for Hidden Jerry spawns&lt;/li&gt; &#xA;  &lt;li&gt;Relic and Rare Uber Relic waypoints&lt;/li&gt; &#xA;  &lt;li&gt;Stop other mods from cancelling terminal clicks&lt;/li&gt; &#xA;  &lt;li&gt;Slayer miniboss spawn alert&lt;/li&gt; &#xA;  &lt;li&gt;Hide fishing hooks from other players&lt;/li&gt; &#xA;  &lt;li&gt;Placed Summoning Eye Display&lt;/li&gt; &#xA;  &lt;li&gt;Spider&#39;s Den Rain Timer&lt;/li&gt; &#xA;  &lt;li&gt;Stop Dropping Valuable Items (customizable BIN value)&lt;/li&gt; &#xA;  &lt;li&gt;Trapper cooldown alarm + Click anywhere to accept Trapper Task&lt;/li&gt; &#xA;  &lt;li&gt;Rare drop sounds for mythological event drops&lt;/li&gt; &#xA;  &lt;li&gt;Highlight disabled potion effects in cookie menu&lt;/li&gt; &#xA;  &lt;li&gt;Hidden Jerry Timer&lt;/li&gt; &#xA;  &lt;li&gt;Hidden Jerry &amp;amp; Jerry Box Tracker&lt;/li&gt; &#xA;  &lt;li&gt;Jerry Perk Display&lt;/li&gt; &#xA;  &lt;li&gt;Remove Left Over Bleeds from Minotaurs&lt;/li&gt; &#xA;  &lt;li&gt;Hide Dying Mobs&lt;/li&gt; &#xA;  &lt;li&gt;Cooldown Tracker&lt;/li&gt; &#xA;  &lt;li&gt;/g leave confirmation&lt;/li&gt; &#xA;  &lt;li&gt;SBA Chroma fix with Optimized Font Renderer from Patcher&lt;/li&gt; &#xA;  &lt;li&gt;Prehistoric Egg Blocks Walked&lt;/li&gt; &#xA;  &lt;li&gt;Auto Copy Rare Drops&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;And more to come!&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Commands&lt;/summary&gt; &#xA; &lt;h2&gt;Commands&lt;/h2&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;/skytils - Opens the main GUI. (Alias is /st)&lt;/li&gt; &#xA;  &lt;li&gt;/skytils config - Opens the GUI to edit the config.&lt;/li&gt; &#xA;  &lt;li&gt;/skytils help - Displays the various commands and their usages&lt;/li&gt; &#xA;  &lt;li&gt;/skytils reload &amp;lt;data/mayor/slayer&amp;gt; - Forces Skytils to refresh of data.&lt;/li&gt; &#xA;  &lt;li&gt;/skytils fetchur - Displays the current Fetchur item for the day.&lt;/li&gt; &#xA;  &lt;li&gt;/skytils griffin refresh - Forces a refresh for the Griffin burrow waypoints.&lt;/li&gt; &#xA;  &lt;li&gt;/skytils aliases - Opens the GUI to edit command aliases.&lt;/li&gt; &#xA;  &lt;li&gt;/skytils editlocations (/skytils editlocation, gui, loc) - Opens the GUI to modify HUD element locations.&lt;/li&gt; &#xA;  &lt;li&gt;/skytils shortcuts - Opens the GUI to modify keybind shortcuts.&lt;/li&gt; &#xA;  &lt;li&gt;/skytils spam - Opens the GUI to modify spam filters.&lt;/li&gt; &#xA;  &lt;li&gt;/skytils enchant - Opens the GUI to customize enchant names.&lt;/li&gt; &#xA;  &lt;li&gt;/skytilscata &#xA;   &lt;player&gt;&#xA;     - Shows information about a player&#39;s Catacombs statistics.&#xA;   &lt;/player&gt;&lt;/li&gt; &#xA;  &lt;li&gt;/skytilsslayer &#xA;   &lt;player&gt;&#xA;     - Shows information about a player&#39;s Slayer statistics.&#xA;   &lt;/player&gt;&lt;/li&gt; &#xA;  &lt;li&gt;/armorcolor &amp;lt;set/clear/clearall&amp;gt; - Changes the color of an armor piece to the hexcode or decimal color provided. (can also be accessed by /skytils armorcolor)&lt;/li&gt; &#xA;  &lt;li&gt;&lt;del&gt;/blockability [clearall] - Block using the ability on the currently held item&lt;/del&gt;&lt;/li&gt; &#xA;  &lt;li&gt;/reparty (/rp) - Disbands and sends a party invite to everyone who was in your party.&lt;/li&gt; &#xA;  &lt;li&gt;/glintcustomize override &amp;lt;on/off/clear/clearall&amp;gt; - Change the visibility of enchantment glints for the item.&lt;/li&gt; &#xA;  &lt;li&gt;/glintcustomize color &amp;lt;set/clear/clearall&amp;gt; - Change the enchant glint color for the item.&lt;/li&gt; &#xA;  &lt;li&gt;/trackcooldown &#xA;   &lt;cooldown in seconds&gt; &#xA;    &lt;item ability&gt;&#xA;      - Set a cooldown for an item ability to track&#xA;    &lt;/item&gt;&#xA;   &lt;/cooldown&gt;&lt;/li&gt; &#xA;  &lt;li&gt;/sthw &amp;lt;set/remove/clear/help&amp;gt; &#xA;   &lt;x y z&gt; &#xA;    &lt;name&gt;&#xA;      - Allows to set waypoints while in the Crystal Hollows.&#xA;    &lt;/name&gt;&#xA;   &lt;/x&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Credits to Open Source Software&lt;/h3&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Skytils would not be possible without other open source projects.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Skytils/SkytilsMod/raw/main/OPEN_SOURCE_SOFTWARE.md&#34; title=&#34;Credits&#34;&gt;For more information, click here&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/compose-multiplatform-template</title>
    <updated>2023-10-01T02:17:00Z</updated>
    <id>tag:github.com,2023-10-01:/JetBrains/compose-multiplatform-template</id>
    <link href="https://github.com/JetBrains/compose-multiplatform-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Compose Multiplatform Application project template&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;http://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;official project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform&#34;&gt;Compose Multiplatform&lt;/a&gt; application&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; The iOS part of Compose Multiplatform is in Alpha. It may change incompatibly and require manual migration in the future. If you have any issues, please report them on &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;You can use this template to start developing your own &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform#readme&#34;&gt;Compose Multiplatform&lt;/a&gt; application targeting desktop, Android, and iOS. Follow our tutorial below to get your first Compose Multiplatform app up and running. The result will be a &lt;a href=&#34;https://kotlinlang.org/docs/multiplatform.html&#34;&gt;Kotlin Multiplatform&lt;/a&gt; project that uses the Compose Multiplatform UI framework.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/banner.png&#34; height=&#34;350&#34;&gt; &#xA;&lt;h2&gt;Set up the environment&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; You need a Mac with macOS to write and run iOS-specific code on simulated or real devices. This is an Apple requirement.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To work with this template, you need the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A machine running a recent version of macOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apps.apple.com/us/app/xcode/id497799835&#34;&gt;Xcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://plugins.jetbrains.com/plugin/14936-kotlin-multiplatform-mobile&#34;&gt;Kotlin Multiplatform Mobile plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The &lt;a href=&#34;https://kotlinlang.org/docs/native-cocoapods.html&#34;&gt;CocoaPods dependency manager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Check your environment&lt;/h3&gt; &#xA;&lt;p&gt;Before you start, use the &lt;a href=&#34;https://github.com/Kotlin/kdoctor&#34;&gt;KDoctor&lt;/a&gt; tool to ensure that your development environment is configured correctly:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Install KDoctor with &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;brew install kdoctor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Run KDoctor in your terminal:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;kdoctor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If everything is set up correctly, you&#39;ll see valid output:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;Environment diagnose (to see all details, use -v option):&#xA;[✓] Operation System&#xA;[✓] Java&#xA;[✓] Android Studio&#xA;[✓] Xcode&#xA;[✓] Cocoapods&#xA;&#xA;Conclusion:&#xA;  ✓ Your system is ready for Kotlin Multiplatform Mobile development!&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Otherwise, KDoctor will highlight which parts of your setup still need to be configured and will suggest a way to fix them.&lt;/p&gt; &#xA;&lt;h2&gt;Examine the project structure&lt;/h2&gt; &#xA;&lt;p&gt;Open the project in Android Studio and switch the view from &lt;strong&gt;Android&lt;/strong&gt; to &lt;strong&gt;Project&lt;/strong&gt; to see all the files and targets belonging to the project:&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/open_project_view.png&#34; height=&#34;300px&#34;&gt; &#xA;&lt;p&gt;Your Compose Multiplatform project includes 4 modules:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;shared&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is a Kotlin module that contains the logic common for desktop, Android, and iOS applications, that is, the code you share between platforms.&lt;/p&gt; &#xA;&lt;p&gt;This &lt;code&gt;shared&lt;/code&gt; module is also where you&#39;ll write your Compose Multiplatform code. In &lt;code&gt;shared/src/commonMain/kotlin/App.kt&lt;/code&gt;, you can find the shared root &lt;code&gt;@Composable&lt;/code&gt; function for your app.&lt;/p&gt; &#xA;&lt;p&gt;It uses Gradle as the build system. You can add dependencies and change settings in &lt;code&gt;shared/build.gradle.kts&lt;/code&gt;. The &lt;code&gt;shared&lt;/code&gt; module builds into a Java library, an Android library, and an iOS framework.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;desktopApp&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is a Kotlin module that builds into a desktop application. It uses Gradle as the build system. The &lt;code&gt;desktopApp&lt;/code&gt; module depends on and uses the &lt;code&gt;shared&lt;/code&gt; module as a regular library.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;androidApp&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is a Kotlin module that builds into an Android application. It uses Gradle as the build system. The &lt;code&gt;androidApp&lt;/code&gt; module depends on and uses the &lt;code&gt;shared&lt;/code&gt; module as a regular Android library.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;iosApp&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is an Xcode project that builds into an iOS application. It depends on and uses the &lt;code&gt;shared&lt;/code&gt; module as a CocoaPods dependency.&lt;/p&gt; &#xA;&lt;h2&gt;Run your application&lt;/h2&gt; &#xA;&lt;h3&gt;On desktop&lt;/h3&gt; &#xA;&lt;p&gt;To run your desktop application in Android Studio, select &lt;code&gt;desktopApp&lt;/code&gt; in the list of run configurations and click &lt;strong&gt;Run&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/run_on_desktop.png&#34; height=&#34;60px&#34;&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/desktop_app_running.png&#34; height=&#34;300px&#34;&gt; &#xA;&lt;p&gt;You can also run Gradle tasks in the terminal:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew run&lt;/code&gt; to run application&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew package&lt;/code&gt; to store native distribution into &lt;code&gt;build/compose/binaries&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;On Android&lt;/h3&gt; &#xA;&lt;p&gt;To run your application on an Android emulator:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Ensure you have an Android virtual device available. Otherwise, &lt;a href=&#34;https://developer.android.com/studio/run/managing-avds#createavd&#34;&gt;create one&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the list of run configurations, select &lt;code&gt;androidApp&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Choose your virtual device and click &lt;strong&gt;Run&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/run_on_android.png&#34; height=&#34;60px&#34;&gt;&lt;br&gt;&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/android_app_running.png&#34; height=&#34;300px&#34;&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Alternatively, use Gradle&lt;/summary&gt; &#xA; &lt;p&gt;To install an Android application on a real Android device or an emulator, run &lt;code&gt;./gradlew installDebug&lt;/code&gt; in the terminal.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;On iOS&lt;/h3&gt; &#xA;&lt;h4&gt;Running on a simulator&lt;/h4&gt; &#xA;&lt;p&gt;To run your application on an iOS simulator in Android Studio, modify the &lt;code&gt;iosApp&lt;/code&gt; run configuration:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In the list of run configurations, select &lt;strong&gt;Edit Configurations&lt;/strong&gt;:&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/edit_run_config.png&#34; height=&#34;200px&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Navigate to &lt;strong&gt;iOS Application&lt;/strong&gt; | &lt;strong&gt;iosApp&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the &lt;strong&gt;Execution target&lt;/strong&gt; list, select your target device. Click &lt;strong&gt;OK&lt;/strong&gt;:&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/target_device.png&#34; height=&#34;400px&#34;&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The &lt;code&gt;iosApp&lt;/code&gt; run configuration is now available. Click &lt;strong&gt;Run&lt;/strong&gt; next to your virtual device:&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/ios_app_running.png&#34; height=&#34;300px&#34;&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h4&gt;Running on a real iOS device&lt;/h4&gt; &#xA;&lt;p&gt;You can run your Compose Multiplatform application on a real iOS device for free. To do so, you&#39;ll need the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;TEAM_ID&lt;/code&gt; associated with your &lt;a href=&#34;https://support.apple.com/en-us/HT204316&#34;&gt;Apple ID&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;The iOS device registered in Xcode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Before you continue, we suggest creating a simple &#34;Hello, world!&#34; project in Xcode to ensure you can successfully run apps on your device. You can follow the instructions below or watch this &lt;a href=&#34;https://youtu.be/bqu6BquVi2M?start=716&amp;amp;end=1399&#34;&gt;Stanford CS193P lecture recording&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How to create and run a simple project in Xcode&lt;/summary&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;On the Xcode welcome screen, select &lt;strong&gt;Create a new project in Xcode&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;On the &lt;strong&gt;iOS&lt;/strong&gt; tab, choose the &lt;strong&gt;App&lt;/strong&gt; template. Click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Specify the product name and keep other settings default. Click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Select where to store the project on your computer and click &lt;strong&gt;Create&lt;/strong&gt;. You&#39;ll see an app that displays &#34;Hello, world!&#34; on the device screen.&lt;/li&gt; &#xA;  &lt;li&gt;At the top of your Xcode screen, click on the device name near the &lt;strong&gt;Run&lt;/strong&gt; button.&lt;/li&gt; &#xA;  &lt;li&gt;Plug your device into the computer. You&#39;ll see this device in the list of run options.&lt;/li&gt; &#xA;  &lt;li&gt;Choose your device and click &lt;strong&gt;Run&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/details&gt; &#xA;&lt;h5&gt;Finding your Team ID&lt;/h5&gt; &#xA;&lt;p&gt;In the terminal, run &lt;code&gt;kdoctor --team-ids&lt;/code&gt; to find your Team ID. KDoctor will list all Team IDs currently configured on your system, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;3ABC246XYZ (Max Sample)&#xA;ZABCW6SXYZ (SampleTech Inc.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Alternative way to find your Team ID&lt;/summary&gt; &#xA; &lt;p&gt;If KDoctor doesn&#39;t work for you, try this alternative method:&lt;/p&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;In Android Studio, run the &lt;code&gt;iosApp&lt;/code&gt; configuration with the selected real device. The build should fail.&lt;/li&gt; &#xA;  &lt;li&gt;Go to Xcode and select &lt;strong&gt;Open a project or file&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Navigate to the &lt;code&gt;iosApp/iosApp.xcworkspace&lt;/code&gt; file of your project.&lt;/li&gt; &#xA;  &lt;li&gt;In the left-hand menu, select &lt;code&gt;iosApp&lt;/code&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;Navigate to &lt;strong&gt;Signing &amp;amp; Capabilities&lt;/strong&gt;.&lt;/li&gt; &#xA;  &lt;li&gt;In the &lt;strong&gt;Team&lt;/strong&gt; list, select your team.&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA; &lt;p&gt;If you haven&#39;t set up your team yet, use the &lt;strong&gt;Add account&lt;/strong&gt; option and follow the steps.&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;To run the application, set the &lt;code&gt;TEAM_ID&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;In the template, navigate to the &lt;code&gt;iosApp/Configuration/Config.xcconfig&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Set your &lt;code&gt;TEAM_ID&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Re-open the project in Android Studio. It should show the registered iOS device in the &lt;code&gt;iosApp&lt;/code&gt; run configuration.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Make your first changes&lt;/h2&gt; &#xA;&lt;p&gt;You can now make some changes in the code and check that they are visible in both the iOS and Android applications at the same time:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;In Android Studio, navigate to the &lt;code&gt;shared/src/commonMain/kotlin/App.kt&lt;/code&gt; file. This is the common entry point for your Compose Multiplatform app.&lt;/p&gt; &lt;p&gt;Here, you see the code responsible for rendering the &#34;Hello, World!&#34; button and the animated Compose Multiplatform logo:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@OptIn(ExperimentalResourceApi::class)&#xA;@Composable&#xA;internal fun App() {&#xA;    MaterialTheme {&#xA;        var greetingText by remember { mutableStateOf(&#34;Hello, World!&#34;) }&#xA;        var showImage by remember { mutableStateOf(false) }&#xA;        Column(Modifier.fillMaxWidth(), horizontalAlignment = Alignment.CenterHorizontally) {&#xA;            Button(onClick = {&#xA;                greetingText = &#34;Hello, ${getPlatformName()}&#34;&#xA;                showImage = !showImage&#xA;            }) {&#xA;                Text(greetingText)&#xA;            }&#xA;            AnimatedVisibility(showImage) {&#xA;                Image(&#xA;                    painterResource(&#34;compose-multiplatform.xml&#34;),&#xA;                    null&#xA;                )&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Update the shared code by adding a text field that will update the name displayed on the button:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;@OptIn(ExperimentalResourceApi::class)&#xA;@Composable&#xA;internal fun App() {&#xA;    MaterialTheme {&#xA;        var greetingText by remember { mutableStateOf(&#34;Hello, World!&#34;) }&#xA;        var showImage by remember { mutableStateOf(false) }&#xA;        Column(Modifier.fillMaxWidth(), horizontalAlignment = Alignment.CenterHorizontally) {&#xA;            Button(onClick = {&#xA;                greetingText = &#34;Hello, ${getPlatformName()}&#34;&#xA;                showImage = !showImage&#xA;            }) {&#xA;                Text(greetingText)&#xA;            }&#xA;+           TextField(greetingText, onValueChange = { greetingText = it })&#xA;            AnimatedVisibility(showImage) {&#xA;                Image(&#xA;                    painterResource(&#34;compose-multiplatform.xml&#34;),&#xA;                    null&#xA;                )&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Re-run the &lt;code&gt;desktopApp&lt;/code&gt;, &lt;code&gt;androidApp&lt;/code&gt;, and &lt;code&gt;iosApp&lt;/code&gt; configurations. You&#39;ll see this change reflected in all three apps:&lt;/p&gt; &lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/text_field_added.png&#34; height=&#34;350px&#34;&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;How to configure the iOS application&lt;/h2&gt; &#xA;&lt;p&gt;To get a better understanding of this template&#39;s setup and learn how to configure the basic properties of your iOS app without Xcode, open the &lt;code&gt;iosApp/Configuration/Config.xcconfig&lt;/code&gt; file in Android Studio. The configuration file contains:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;APP_NAME&lt;/code&gt;, a target executable and an application bundle name.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BUNDLE_ID&lt;/code&gt;, which &lt;a href=&#34;https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleidentifier#discussion&#34;&gt;uniquely identifies the app throughout the system&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TEAM_ID&lt;/code&gt;, &lt;a href=&#34;https://developer.apple.com/help/account/manage-your-team/locate-your-team-id/#:~:text=A%20Team%20ID%20is%20a,developer%20in%20App%20Store%20Connect&#34;&gt;a unique identifier generated by Apple that&#39;s assigned to your team&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To configure the &lt;code&gt;APP_NAME&lt;/code&gt; option, open &lt;code&gt;Config.xcconfig&lt;/code&gt; in any text editor &lt;em&gt;before opening&lt;/em&gt; the project in Android Studio, and then set the desired name.&lt;/p&gt; &#xA;&lt;p&gt;If you need to change this option after you open the project in Android Studio, do the following:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Close the project in Android Studio.&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;./cleanup.sh&lt;/code&gt; in your terminal.&lt;/li&gt; &#xA; &lt;li&gt;Change the setting.&lt;/li&gt; &#xA; &lt;li&gt;Open the project in Android Studio again.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;To configure advanced settings, use Xcode. After opening the project in Android Studio, open the &lt;code&gt;iosApp/iosApp.xcworkspace&lt;/code&gt; file in Xcode and make changes there.&lt;/p&gt; &#xA;&lt;h2&gt;Next steps&lt;/h2&gt; &#xA;&lt;p&gt;We encourage you to explore Compose Multiplatform further and try out more projects:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-ios-android-template#readme&#34;&gt;Create an application targeting iOS and Android with Compose Multiplatform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-desktop-template#readme&#34;&gt;Create an application targeting Windows, macOS, and Linux with Compose Multiplatform for Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/raw/master/tutorials/README.md&#34;&gt;Complete more Compose Multiplatform tutorials&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/raw/master/examples/README.md&#34;&gt;Explore some more advanced Compose Multiplatform example projects&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
</feed>