<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-04T02:44:21Z</updated>
  <subtitle>Monthly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>square/okhttp</title>
    <updated>2022-06-04T02:44:21Z</updated>
    <id>tag:github.com,2022-06-04:/square/okhttp</id>
    <link href="https://github.com/square/okhttp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Square’s meticulous HTTP client for the JVM, Android, and GraalVM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OkHttp&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://square.github.io/okhttp/&#34;&gt;project website&lt;/a&gt; for documentation and APIs.&lt;/p&gt; &#xA;&lt;p&gt;HTTP is the way modern applications network. It’s how we exchange data &amp;amp; media. Doing HTTP efficiently makes your stuff load faster and saves bandwidth.&lt;/p&gt; &#xA;&lt;p&gt;OkHttp is an HTTP client that’s efficient by default:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTTP/2 support allows all requests to the same host to share a socket.&lt;/li&gt; &#xA; &lt;li&gt;Connection pooling reduces request latency (if HTTP/2 isn’t available).&lt;/li&gt; &#xA; &lt;li&gt;Transparent GZIP shrinks download sizes.&lt;/li&gt; &#xA; &lt;li&gt;Response caching avoids the network completely for repeat requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OkHttp perseveres when the network is troublesome: it will silently recover from common connection problems. If your service has multiple IP addresses, OkHttp will attempt alternate addresses if the first connect fails. This is necessary for IPv4+IPv6 and services hosted in redundant data centers. OkHttp supports modern TLS features (TLS 1.3, ALPN, certificate pinning). It can be configured to fall back for broad connectivity.&lt;/p&gt; &#xA;&lt;p&gt;Using OkHttp is easy. Its request/response API is designed with fluent builders and immutability. It supports both synchronous blocking calls and async calls with callbacks.&lt;/p&gt; &#xA;&lt;h2&gt;Get a URL&lt;/h2&gt; &#xA;&lt;p&gt;This program downloads a URL and prints its contents as a string. &lt;a href=&#34;https://raw.github.com/square/okhttp/master/samples/guide/src/main/java/okhttp3/guide/GetExample.java&#34;&gt;Full source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;OkHttpClient client = new OkHttpClient();&#xA;&#xA;String run(String url) throws IOException {&#xA;  Request request = new Request.Builder()&#xA;      .url(url)&#xA;      .build();&#xA;&#xA;  try (Response response = client.newCall(request).execute()) {&#xA;    return response.body().string();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Post to a Server&lt;/h2&gt; &#xA;&lt;p&gt;This program posts data to a service. &lt;a href=&#34;https://raw.github.com/square/okhttp/master/samples/guide/src/main/java/okhttp3/guide/PostExample.java&#34;&gt;Full source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public static final MediaType JSON&#xA;    = MediaType.get(&#34;application/json; charset=utf-8&#34;);&#xA;&#xA;OkHttpClient client = new OkHttpClient();&#xA;&#xA;String post(String url, String json) throws IOException {&#xA;  RequestBody body = RequestBody.create(json, JSON);&#xA;  Request request = new Request.Builder()&#xA;      .url(url)&#xA;      .post(body)&#xA;      .build();&#xA;  try (Response response = client.newCall(request).execute()) {&#xA;    return response.body().string();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Further examples are on the &lt;a href=&#34;https://square.github.io/okhttp/recipes/&#34;&gt;OkHttp Recipes page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;OkHttp works on Android 5.0+ (API level 21+) and Java 8+.&lt;/p&gt; &#xA;&lt;p&gt;OkHttp depends on &lt;a href=&#34;https://github.com/square/okio&#34;&gt;Okio&lt;/a&gt; for high-performance I/O and the &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin standard library&lt;/a&gt;. Both are small libraries with strong backward-compatibility.&lt;/p&gt; &#xA;&lt;p&gt;We highly recommend you keep OkHttp up-to-date. As with auto-updating web browsers, staying current with HTTPS clients is an important defense against potential security problems. &lt;a href=&#34;https://square.github.io/okhttp/tls_configuration_history/&#34;&gt;We track&lt;/a&gt; the dynamic TLS ecosystem and adjust OkHttp to improve connectivity and security.&lt;/p&gt; &#xA;&lt;p&gt;OkHttp uses your platform&#39;s built-in TLS implementation. On Java platforms OkHttp also supports &lt;a href=&#34;https://github.com/google/conscrypt/&#34;&gt;Conscrypt&lt;/a&gt;, which integrates BoringSSL with Java. OkHttp will use Conscrypt if it is the first security provider:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Security.insertProviderAt(Conscrypt.newProvider(), 1);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The OkHttp 3.12.x branch supports Android 2.3+ (API level 9+) and Java 7+. These platforms lack support for TLS 1.2 and should not be used. But because upgrading is difficult, we will backport critical fixes to the &lt;a href=&#34;https://github.com/square/okhttp/tree/okhttp_3.12.x&#34;&gt;3.12.x branch&lt;/a&gt; through December 31, 2021.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://square.github.io/okhttp/changelog/&#34;&gt;change log&lt;/a&gt; has release history.&lt;/p&gt; &#xA;&lt;p&gt;The latest release is available on &lt;a href=&#34;https://search.maven.org/artifact/com.squareup.okhttp3/okhttp/4.9.3/jar&#34;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation(&#34;com.squareup.okhttp3:okhttp:4.9.3&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Snapshot builds are &lt;a href=&#34;https://s01.oss.sonatype.org/content/repositories/snapshots/&#34;&gt;available&lt;/a&gt;. &lt;a href=&#34;https://square.github.io/okhttp/features/r8_proguard/&#34;&gt;R8 and ProGuard&lt;/a&gt; rules are available.&lt;/p&gt; &#xA;&lt;p&gt;Also, we have a &lt;a href=&#34;https://docs.gradle.org/6.2/userguide/platforms.html#sub:bom_import&#34;&gt;bill of materials (BOM)&lt;/a&gt; available to help you keep OkHttp artifacts up to date and be sure about version compatibility.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;    dependencies {&#xA;       // define a BOM and its version&#xA;       implementation(platform(&#34;com.squareup.okhttp3:okhttp-bom:4.9.3&#34;))&#xA;&#xA;       // define any required OkHttp artifacts without version&#xA;       implementation(&#34;com.squareup.okhttp3:okhttp&#34;)&#xA;       implementation(&#34;com.squareup.okhttp3:logging-interceptor&#34;)&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;MockWebServer&lt;/h2&gt; &#xA;&lt;p&gt;OkHttp includes a library for testing HTTP, HTTPS, and HTTP/2 clients.&lt;/p&gt; &#xA;&lt;p&gt;The latest release is available on &lt;a href=&#34;https://search.maven.org/artifact/com.squareup.okhttp3/mockwebserver/4.9.3/jar&#34;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;testImplementation(&#34;com.squareup.okhttp3:mockwebserver:4.9.3&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GraalVM Native Image&lt;/h2&gt; &#xA;&lt;p&gt;Building your native images with Graal &lt;a href=&#34;https://www.graalvm.org/&#34;&gt;https://www.graalvm.org/&lt;/a&gt; should work automatically. This is not currently in a final released version, so 5.0.0-alpha.2 should be used. Please report any bugs or workarounds you find.&lt;/p&gt; &#xA;&lt;p&gt;See the okcurl module for an example build.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./gradlew okcurl:nativeImage&#xA;$ ./okcurl/build/graal/okcurl https://httpbin.org/get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2019 Square, Inc.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>