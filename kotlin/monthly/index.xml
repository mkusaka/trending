<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-07-01T02:16:01Z</updated>
  <subtitle>Monthly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>tiann/KernelSU</title>
    <updated>2023-07-01T02:16:01Z</updated>
    <id>tag:github.com,2023-07-01:/tiann/KernelSU</id>
    <link href="https://github.com/tiann/KernelSU" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Kernel based root solution for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/tiann/KernelSU/main/README_CN.md&#34;&gt;简体中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/tiann/KernelSU/main/README_TW.md&#34;&gt;繁體中文&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/tiann/KernelSU/main/README_JP.md&#34;&gt;日本語&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/tiann/KernelSU/main/README_PT-BR.md&#34;&gt;Portuguese-Brazil&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/tiann/KernelSU/main/README_TR.md&#34;&gt;Türkçe&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;KernelSU&lt;/h1&gt; &#xA;&lt;p&gt;A Kernel based root solution for Android devices.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Kernel-based &lt;code&gt;su&lt;/code&gt; and root access management.&lt;/li&gt; &#xA; &lt;li&gt;Module system based on overlayfs.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Compatibility State&lt;/h2&gt; &#xA;&lt;p&gt;KernelSU officially supports Android GKI 2.0 devices(with kernel 5.10+), old kernels(4.14+) is also compatible, but you need to build kernel yourself.&lt;/p&gt; &#xA;&lt;p&gt;WSA and containter-based Android should also work with KernelSU integrated.&lt;/p&gt; &#xA;&lt;p&gt;And the current supported ABIs are : &lt;code&gt;arm64-v8a&lt;/code&gt; and &lt;code&gt;x86_64&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kernelsu.org/guide/installation.html&#34;&gt;Installation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kernelsu.org/guide/how-to-build.html&#34;&gt;How to build?&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Discussion&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Telegram: &lt;a href=&#34;https://t.me/KernelSU&#34;&gt;@KernelSU&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Files under &lt;code&gt;kernel&lt;/code&gt; directory are &lt;a href=&#34;https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html&#34;&gt;GPL-2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;All other parts except &lt;code&gt;kernel&lt;/code&gt; directory are &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.html&#34;&gt;GPL-3&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://git.zx2c4.com/kernel-assisted-superuser/about/&#34;&gt;kernel-assisted-superuser&lt;/a&gt;: the KernelSU idea.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/brevent/genuine/&#34;&gt;genuine&lt;/a&gt;: apk v2 signature validation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/m0nad/Diamorphine&#34;&gt;Diamorphine&lt;/a&gt;: some rootkit skills.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk&#34;&gt;Magisk&lt;/a&gt;: the sepolicy implementation.&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>RikkaApps/Shizuku</title>
    <updated>2023-07-01T02:16:01Z</updated>
    <id>tag:github.com,2023-07-01:/RikkaApps/Shizuku</id>
    <link href="https://github.com/RikkaApps/Shizuku" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Using system APIs directly with adb/root privileges from normal apps through a Java process started with app_process.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shizuku&lt;/h1&gt; &#xA;&lt;h2&gt;Background&lt;/h2&gt; &#xA;&lt;p&gt;When developing apps that requires root, the most common method is to run some commands in the su shell. For example, there is an app that uses the &lt;code&gt;pm enable/disable&lt;/code&gt; command to enable/disable components.&lt;/p&gt; &#xA;&lt;p&gt;This method has very big disadvantages:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;strong&gt;Extremely slow&lt;/strong&gt; (Multiple process creation)&lt;/li&gt; &#xA; &lt;li&gt;Needs to process texts (&lt;strong&gt;Super unreliable&lt;/strong&gt;)&lt;/li&gt; &#xA; &lt;li&gt;The possibility is limited to available commands&lt;/li&gt; &#xA; &lt;li&gt;Even if ADB has sufficient permissions, the app requires root privileges to run&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Shizuku uses a completely different way. See detailed description below.&lt;/p&gt; &#xA;&lt;h2&gt;User guide &amp;amp; Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://shizuku.rikka.app/&#34;&gt;https://shizuku.rikka.app/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How does Shizuku work?&lt;/h2&gt; &#xA;&lt;p&gt;First, we need to talk about how app use system APIs. For example, if the app wants to get installed apps, we all know we should use &lt;code&gt;PackageManager#getInstalledPackages()&lt;/code&gt;. This is actually an interprocess communication (IPC) process of the app process and system server process, just the Android framework did the inner works for us.&lt;/p&gt; &#xA;&lt;p&gt;Android uses &lt;code&gt;binder&lt;/code&gt; to do this type of IPC. &lt;code&gt;Binder&lt;/code&gt; allows the server-side to learn the uid and pid of the client-side, so that the system server can check if the app has the permission to do the operation.&lt;/p&gt; &#xA;&lt;p&gt;Usually, if there is a &#34;manager&#34; (e.g., &lt;code&gt;PackageManager&lt;/code&gt;) for apps to use, there should be a &#34;service&#34; (e.g., &lt;code&gt;PackageManagerService&lt;/code&gt;) in the system server process. We can simply think if the app holds the &lt;code&gt;binder&lt;/code&gt; of the &#34;service&#34;, it can communicate with the &#34;service&#34;. The app process will receive binders of system services on start.&lt;/p&gt; &#xA;&lt;p&gt;Shizuku guides users to run a process, Shizuku server, with root or ADB first. When the app starts, the &lt;code&gt;binder&lt;/code&gt; to Shizuku server will also be sent to the app.&lt;/p&gt; &#xA;&lt;p&gt;The most important feature Shizuku provides is something like be a middle man to receive requests from the app, sent them to the system server, and send back the results. You can see the &lt;code&gt;transactRemote&lt;/code&gt; method in &lt;code&gt;rikka.shizuku.server.ShizukuService&lt;/code&gt; class, and &lt;code&gt;moe.shizuku.api.ShizukuBinderWrapper&lt;/code&gt; class for the detail.&lt;/p&gt; &#xA;&lt;p&gt;So, we reached our goal, to use system APIs with higher permission. And to the app, it is almost identical to the use of system APIs directly.&lt;/p&gt; &#xA;&lt;h2&gt;Developer guide&lt;/h2&gt; &#xA;&lt;h3&gt;API &amp;amp; sample&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RikkaApps/Shizuku-API&#34;&gt;https://github.com/RikkaApps/Shizuku-API&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Migrating from pre-v11&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Existing applications still works, of course.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/RikkaApps/Shizuku-API#migration-guide-for-existing-applications-use-shizuku-pre-v11&#34;&gt;https://github.com/RikkaApps/Shizuku-API#migration-guide-for-existing-applications-use-shizuku-pre-v11&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Attention&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;ADB permissions are limited&lt;/p&gt; &lt;p&gt;ADB has limited permissions and different on various system versions. You can see permissions granted to ADB &lt;a href=&#34;https://github.com/aosp-mirror/platform_frameworks_base/raw/master/packages/Shell/AndroidManifest.xml&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Before calling the API, you can use &lt;code&gt;ShizukuService#getUid&lt;/code&gt; to check if Shizuku is running user ADB, or use &lt;code&gt;ShizukuService#checkPermission&lt;/code&gt; to check if the server has sufficient permissions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Hidden API limitation from Android 9&lt;/p&gt; &lt;p&gt;As of Android 9, the usage of the hidden APIs is limited for normal apps. Please use other methods (such as &lt;a href=&#34;https://github.com/LSPosed/AndroidHiddenApiBypass&#34;&gt;https://github.com/LSPosed/AndroidHiddenApiBypass&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Android 8.0 &amp;amp; ADB&lt;/p&gt; &lt;p&gt;At present, the way Shizuku service gets the app process is to combine &lt;code&gt;IActivityManager#registerProcessObserver&lt;/code&gt; and &lt;code&gt;IActivityManager#registerUidObserver&lt;/code&gt; (26+) to ensure that the app process will be sent when the app starts. However, on API 26, ADB lacks permissions to use &lt;code&gt;registerUidObserver&lt;/code&gt;, so if you need to use Shizuku in a process that might not be started by an Activity, it is recommended to trigger the send binder by starting a transparent activity.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Direct use of &lt;code&gt;transactRemote&lt;/code&gt; requires attention&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;The API may be different under different Android versions, please be sure to check it carefully. Also, the &lt;code&gt;android.app.IActivityManager&lt;/code&gt; has the aidl form in API 26 and later, and &lt;code&gt;android.app.IActivityManager$Stub&lt;/code&gt; exists only on API 26.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;code&gt;SystemServiceHelper.getTransactionCode&lt;/code&gt; may not get the correct transaction code, such as &lt;code&gt;android.content.pm.IPackageManager$Stub.TRANSACTION_getInstalledPackages&lt;/code&gt; does not exist on API 25 and there is &lt;code&gt;android.content.pm.IPackageManager$Stub.TRANSACTION_getInstalledPackages_47&lt;/code&gt; (this situation has been dealt with, but it is not excluded that there may be other circumstances). This problem is not encountered with the &lt;code&gt;ShizukuBinderWrapper&lt;/code&gt; method.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Developing Shizuku itself&lt;/h2&gt; &#xA;&lt;h3&gt;Build&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone with &lt;code&gt;git clone --recurse-submodules&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run gradle task &lt;code&gt;:manager:assembleDebug&lt;/code&gt; or &lt;code&gt;:manager:assembleRelease&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The &lt;code&gt;:manager:assembleDebug&lt;/code&gt; task generates a debuggable server. You can attach a debugger to &lt;code&gt;shizuku_server&lt;/code&gt; to debug the server. Be aware that, in Android Studio, &#34;Run/Debug configurations&#34; - &#34;Always install with package manager&#34; should be checked, so that the server will use the latest code.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;The code for this project is available under the Apache-2.0 license.&lt;/p&gt; &#xA;&lt;h3&gt;Exceptions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;You are &lt;strong&gt;FORBIDDEN&lt;/strong&gt; to use image files listed below in any way (unless for displaying Shizuku itself).&lt;/p&gt; &lt;pre&gt;&lt;code&gt;manager/src/main/res/mipmap-hdpi/ic_launcher.png&#xA;manager/src/main/res/mipmap-hdpi/ic_launcher_background.png&#xA;manager/src/main/res/mipmap-hdpi/ic_launcher_foreground.png&#xA;manager/src/main/res/mipmap-xhdpi/ic_launcher.png&#xA;manager/src/main/res/mipmap-xhdpi/ic_launcher_background.png&#xA;manager/src/main/res/mipmap-xhdpi/ic_launcher_foreground.png&#xA;manager/src/main/res/mipmap-xxhdpi/ic_launcher.png&#xA;manager/src/main/res/mipmap-xxhdpi/ic_launcher_background.png&#xA;manager/src/main/res/mipmap-xxhdpi/ic_launcher_foreground.png&#xA;manager/src/main/res/mipmap-xxxhdpi/ic_launcher.png&#xA;manager/src/main/res/mipmap-xxxhdpi/ic_launcher_background.png&#xA;manager/src/main/res/mipmap-xxxhdpi/ic_launcher_foreground.png&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;For the project as a whole, it is not free. You are &lt;strong&gt;FORBIDDEN&lt;/strong&gt; to distribute the apk compiled by &lt;strong&gt;you&lt;/strong&gt; (including modified, e.g., rename app name &#34;Shizuku&#34; to something else) to any store (IBNLT Google Play Store, F-Droid, Amazon Appstore etc.).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>CymChad/BaseRecyclerViewAdapterHelper</title>
    <updated>2023-07-01T02:16:01Z</updated>
    <id>tag:github.com,2023-07-01:/CymChad/BaseRecyclerViewAdapterHelper</id>
    <link href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;BRVAH:Powerful and flexible RecyclerAdapter&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/7698209/33198075-ef8f2230-d123-11e7-85a3-4cb9b22f877d.png&#34; alt=&#34;&#34;&gt; &lt;a href=&#34;https://repo.maven.apache.org/maven2/io/github/cymchad/BaseRecyclerViewAdapterHelper/&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.github.cymchad/BaseRecyclerViewAdapterHelper&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=16&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API-16%2B-brightgreen.svg?style=flat&#34; alt=&#34;API&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/details/1/3644&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android%20Arsenal-BaseRecyclerViewAdapterHelper-green.svg?style=true&#34; alt=&#34;Android Arsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/CymChad/BaseRecyclerViewAdapterHelper/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/CymChad/BaseRecyclerViewAdapterHelper/tree/master.svg?style=svg&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mp.weixin.qq.com/s/5UlMx9HDgEcvxJb4w5-gBA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E4%BD%9C%E8%80%85-%E9%99%88%E5%AE%87%E6%98%8E-7AD6FD.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/limuyang2&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E4%BD%9C%E8%80%85-limuyang2-7AD6FD&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;BRVAH&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.recyclerview.org/&#34;&gt;http://www.recyclerview.org/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Powerful and flexible RecyclerView Adapter, Please feel free to use this. (Welcome to &lt;strong&gt;Star&lt;/strong&gt; and &lt;strong&gt;Fork&lt;/strong&gt;)&lt;/p&gt; &#xA;&lt;p&gt;强大而灵活的RecyclerView Adapter（欢迎 &lt;strong&gt;Star&lt;/strong&gt; 和 &lt;strong&gt;Fork&lt;/strong&gt;）&lt;/p&gt; &#xA;&lt;p&gt;​&lt;br&gt; 新版4.x.x已发布 alpha 版本，完美兼容&lt;code&gt;ConcatAdapter&lt;/code&gt;，解决了许多遗留问题，拆分了功能模块，BaseAdapter更加简洁干净。“多类型布局”更加灵活。向上、向下加载得到极大加强。 v4版本已经上传 maven 中央仓库，不需要再引入三方仓库配置了。欢迎尝试。 &lt;strong&gt;注意，4.0为非兼容升级，建议在新项目尝试&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;implementation &#34;io.github.cymchad:BaseRecyclerViewAdapterHelper:4.0.0-beta14&#34;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Of course, you can continue to use the &lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper/tree/2.x&#34;&gt;2.x&lt;/a&gt; version.&lt;/p&gt; &#xA;&lt;p&gt;当然，你也可以继续使用&lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper/tree/2.x&#34;&gt;2.x&lt;/a&gt; 版本、&lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper/raw/3.x/readme/0-BaseRecyclerViewAdapterHelper.md&#34;&gt;3.x&lt;/a&gt;版本。&lt;/p&gt; &#xA;&lt;h1&gt;Document&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;English Writing ...&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper/raw/3.x/readme/0-BaseRecyclerViewAdapterHelper.md&#34;&gt;3.0版本 中文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper/wiki&#34;&gt;4.0版本 中文&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;(由于各位项目成员工作较为繁忙，请各位同学谅解)&lt;/p&gt; &#xA;&lt;h2&gt;v4 版本 Demo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper/wiki&#34;&gt;wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;proguard-rules.pro&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;此资源库自带混淆规则，并且会自动导入，正常情况下无需手动导入。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;The library comes with &lt;code&gt;proguard-rules.pro&lt;/code&gt; rules and is automatically imported. Normally no manual import is required. You can also go here to view &lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper/raw/master/library/proguard-rules.pro&#34;&gt;proguard-rules&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Thanks&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/JoanZapata/base-adapter-helper&#34;&gt;JoanZapata / base-adapter-helper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper/raw/master/LICENSE&#34;&gt;License&lt;/a&gt;&lt;/h1&gt;</summary>
  </entry>
</feed>