<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Monthly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-12-01T02:03:07Z</updated>
  <subtitle>Monthly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>android/nowinandroid</title>
    <updated>2022-12-01T02:03:07Z</updated>
    <id>tag:github.com,2022-12-01:/android/nowinandroid</id>
    <link href="https://github.com/android/nowinandroid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fully functional Android app built entirely with Kotlin and Jetpack Compose&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/nia-splash.jpg&#34; alt=&#34;Now in Android&#34; title=&#34;Now in Android&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.samples.apps.nowinandroid&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; height=&#34;70&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Now in Android App&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Learn how this app was designed and built in the &lt;a href=&#34;https://goo.gle/nia-figma&#34;&gt;design case study&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ArchitectureLearningJourney.md&#34;&gt;architecture learning journey&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ModularizationLearningJourney.md&#34;&gt;modularization learning journey&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;This is the repository for the &lt;a href=&#34;https://developer.android.com/series/now-in-android&#34;&gt;Now in Android&lt;/a&gt; app. It is a &lt;strong&gt;work in progress&lt;/strong&gt; 🚧.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Now in Android&lt;/strong&gt; is a fully functional Android app built entirely with Kotlin and Jetpack Compose. It follows Android design and development best practices and is intended to be a useful reference for developers. As a running app, it&#39;s intended to help developers keep up-to-date with the world of Android development by providing regular news updates.&lt;/p&gt; &#xA;&lt;p&gt;The app is currently in development. The &lt;code&gt;demoRelease&lt;/code&gt; variant is &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.samples.apps.nowinandroid&#34;&gt;available on the Play Store in open beta&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Now in Android&lt;/strong&gt; displays content from the &lt;a href=&#34;https://developer.android.com/series/now-in-android&#34;&gt;Now in Android&lt;/a&gt; series. Users can browse for links to recent videos, articles and other content. Users can also follow topics they are interested in or follow specific authors.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/screenshots.png&#34; alt=&#34;Screenshot showing For You screen, Interests screen and Topic detail screen&#34; title=&#34;Screenshot showing For You screen, Interests screen and Topic detail screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development Environment&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Now in Android&lt;/strong&gt; uses the Gradle build system and can be imported directly into the latest stable version of Android Studio (available &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;here&lt;/a&gt;). The &lt;code&gt;debug&lt;/code&gt; build can be built and run using the default configuration.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;re up and running, you can refer to the learning journeys below to get a better understanding of which libraries and tools are being used, the reasoning behind the approaches to UI, testing, architecture and more, and how all of these different pieces of the project fit together to create a complete app.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Building the app using an M1 Mac will require the use of &lt;a href=&#34;https://support.apple.com/en-gb/HT211861&#34;&gt;Rosetta&lt;/a&gt;. See &lt;a href=&#34;https://github.com/protocolbuffers/protobuf/issues/9397#issuecomment-1086138036&#34;&gt;the following bug&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Now in Android&lt;/strong&gt; app follows the &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;official architecture guidance&lt;/a&gt; and is described in detail in the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ArchitectureLearningJourney.md&#34;&gt;architecture learning journey&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Modularization&lt;/h1&gt; &#xA;&lt;p&gt;The &lt;strong&gt;Now in Android&lt;/strong&gt; app has been fully modularized and you can find the detailed guidance and description of the modularization strategy used in &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ModularizationLearningJourney.md&#34;&gt;modularization learning journey&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Build&lt;/h1&gt; &#xA;&lt;p&gt;The app contains the usual &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; build variants.&lt;/p&gt; &#xA;&lt;p&gt;In addition, the &lt;code&gt;benchmark&lt;/code&gt; variant of &lt;code&gt;app&lt;/code&gt; is used to test startup performance and generate a baseline profile (see below for more information).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;app-nia-catalog&lt;/code&gt; is a standalone app that displays the list of components that are stylized for &lt;strong&gt;Now in Android&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The app also uses &lt;a href=&#34;https://developer.android.com/studio/build/build-variants#product-flavors&#34;&gt;product flavors&lt;/a&gt; to control where content for the app should be loaded from.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;demo&lt;/code&gt; flavor uses static local data to allow immediate building and exploring of the UI.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;prod&lt;/code&gt; flavor makes real network calls to a backend server, providing up-to-date content. At this time, there is not a public backend available.&lt;/p&gt; &#xA;&lt;p&gt;For normal development use the &lt;code&gt;demoDebug&lt;/code&gt; variant. For UI performance testing use the &lt;code&gt;demoRelease&lt;/code&gt; variant.&lt;/p&gt; &#xA;&lt;h1&gt;Testing&lt;/h1&gt; &#xA;&lt;p&gt;To facilitate testing of components, &lt;strong&gt;Now in Android&lt;/strong&gt; uses dependency injection with &lt;a href=&#34;https://developer.android.com/training/dependency-injection/hilt-android&#34;&gt;Hilt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Most data layer components are defined as interfaces. Then, concrete implementations (with various dependencies) are bound to provide those interfaces to other components in the app. In tests, &lt;strong&gt;Now in Android&lt;/strong&gt; notably does &lt;em&gt;not&lt;/em&gt; use any mocking libraries. Instead, the production implementations can be replaced with test doubles using Hilt&#39;s testing APIs (or via manual constructor injection for &lt;code&gt;ViewModel&lt;/code&gt; tests).&lt;/p&gt; &#xA;&lt;p&gt;These test doubles implement the same interface as the production implementations and generally provide a simplified (but still realistic) implementation with additional testing hooks. This results in less brittle tests that may exercise more production code, instead of just verifying specific calls against mocks.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In instrumentation tests, a temporary folder is used to store the user&#39;s preferences, which is wiped after each test. This allows using the real &lt;code&gt;DataStore&lt;/code&gt; and exercising all related code, instead of mocking the flow of data updates.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There are &lt;code&gt;Test&lt;/code&gt; implementations of each repository, which implement the normal, full repository interface and also provide test-only hooks. &lt;code&gt;ViewModel&lt;/code&gt; tests use these &lt;code&gt;Test&lt;/code&gt; repositories, and thus can use the test-only hooks to manipulate the state of the &lt;code&gt;Test&lt;/code&gt; repository and verify the resulting behavior, instead of checking that specific repository methods were called.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;UI&lt;/h1&gt; &#xA;&lt;p&gt;The app was designed using &lt;a href=&#34;https://m3.material.io/&#34;&gt;Material 3 guidelines&lt;/a&gt;. Learn more about the design process and obtain the design files in the &lt;a href=&#34;https://goo.gle/nia-figma&#34;&gt;Now in Android Material 3 Case Study&lt;/a&gt; (design assets &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/Now-In-Android-Design-File.pdf&#34;&gt;also available as a PDF&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;The Screens and UI elements are built entirely using &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The app has two themes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic color - uses colors based on the &lt;a href=&#34;https://material.io/blog/announcing-material-you&#34;&gt;user&#39;s current color theme&lt;/a&gt; (if supported)&lt;/li&gt; &#xA; &lt;li&gt;Default theme - uses predefined colors when dynamic color is not supported&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each theme also supports dark mode.&lt;/p&gt; &#xA;&lt;p&gt;The app uses adaptive layouts to &lt;a href=&#34;https://developer.android.com/guide/topics/large-screens/support-different-screen-sizes&#34;&gt;support different screen sizes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find out more about the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ArchitectureLearningJourney.md#ui-layer&#34;&gt;UI architecture here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Baseline profiles&lt;/h1&gt; &#xA;&lt;p&gt;The baseline profile for this app is located at &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/app/src/main/baseline-prof.txt&#34;&gt;&lt;code&gt;app/src/main/baseline-prof.txt&lt;/code&gt;&lt;/a&gt;. It contains rules that enable AOT compilation of the critical user path taken during app launch. For more information on baseline profiles, read &lt;a href=&#34;https://developer.android.com/studio/profile/baselineprofiles&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: The baseline profile needs to be re-generated for release builds that touch code which changes app startup.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To generate the baseline profile, select the &lt;code&gt;benchmark&lt;/code&gt; build variant and run the &lt;code&gt;BaselineProfileGenerator&lt;/code&gt; benchmark test on an AOSP Android Emulator. Then copy the resulting baseline profile from the emulator to &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/app/src/main/baseline-prof.txt&#34;&gt;&lt;code&gt;app/src/main/baseline-prof.txt&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Now in Android&lt;/strong&gt; is distributed under the terms of the Apache License (Version 2.0). See the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/LICENSE&#34;&gt;license&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>bannedbook/fanqiang</title>
    <updated>2022-12-01T02:03:07Z</updated>
    <id>tag:github.com,2022-12-01:/bannedbook/fanqiang</id>
    <link href="https://github.com/bannedbook/fanqiang" rel="alternate"></link>
    <summary type="html">&lt;p&gt;翻墙-科学上网&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;翻墙-科学上网、翻墙工具、翻墙教程项目库&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jsvpn/jsproxy/tree/dev#tt&#34;&gt;热点禁闻&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/%E5%AE%89%E5%8D%93%E7%BF%BB%E5%A2%99%E8%BD%AF%E4%BB%B6&#34;&gt;安卓翻墙软件&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android&#34;&gt;安卓翻墙APP教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/Chrome%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85&#34;&gt;Chrome一键翻墙包&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/%E7%81%AB%E7%8B%90firefox%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85&#34;&gt;火狐firefox一键翻墙包&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/raw/master/v2ss/%E8%87%AA%E5%BB%BAV2ray%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B.md&#34;&gt;自建V2ray服务器翻墙简明教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/raw/master/v2ss/%E8%87%AA%E5%BB%BAShadowsocks%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B.md&#34;&gt;自建Shadowsocks服务器翻墙简明教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/%E5%85%8D%E8%B4%B9ss%E8%B4%A6%E5%8F%B7&#34;&gt;免费ss账号&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/v2ray%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7&#34;&gt;v2ray免费账号&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91MAC%E7%BF%BB%E5%A2%99&#34;&gt;苹果电脑MAC翻墙&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/iphone%E7%BF%BB%E5%A2%99&#34;&gt;iphone翻墙&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/TorBrowser%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85&#34;&gt;TorBrowser一键翻墙包&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/windows&#34;&gt;Windows V2ray/SS/SSR 翻墙教程&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/windows/ClashDotNetFramework.md&#34;&gt;Clash for Windows 翻墙教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/windows/V2RayN.md&#34;&gt;V2rayN 教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/windows/SSTap.md&#34;&gt;SSTap教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/windows/ShadowsocksR.md&#34;&gt;Windows翻墙之SSR教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/windows/tor-v2ray.md&#34;&gt;TorBrowser+V2rayN配置使用教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios&#34;&gt;iPhone/iPad/iOS V2ray/SS 翻墙APP教程&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/iphone%E7%BF%BB%E5%A2%99&#34;&gt;iphone翻墙&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/AppleID.md&#34;&gt;注册苹果美区 Apple ID 帐号并购买APP指南&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/fqByLan.md&#34;&gt;Iphone/iPad通过电脑局域网共享翻墙&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/PotatsoLite.md&#34;&gt;Potatso Lite 教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/Shadowrocket.md&#34;&gt;Shadowrocket小火箭配置使用教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/Kitsunebi.md&#34;&gt;Kitsunebi 教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/QuantumultX.md&#34;&gt;Quantumult X 配置使用简易教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/Surge.md&#34;&gt;iOS翻墙之Surge教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/Quantumult_sub.md&#34;&gt;iOS翻墙之Quantumult教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/ios/Quantumult_conf.md&#34;&gt;iOS翻墙之导入 Quantumult 完整配置教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android&#34;&gt;Android 安卓翻墙APP教程&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android/v2free.md&#34;&gt;V2free安卓翻墙教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android/clash.md&#34;&gt;Clash for android 教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android/BifrostV.md&#34;&gt;BifrostV 教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android/Shadowsocks.md&#34;&gt;Shadowsocks for android 教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android/ShadowsocksR.md&#34;&gt;SSR 安卓翻墙教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android/Surfboard.md&#34;&gt;Surfboard 教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/android/V2RayNG.md&#34;&gt;V2RayNG 教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/macos&#34;&gt;Mac翻墙软件教程&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91MAC%E7%BF%BB%E5%A2%99&#34;&gt;苹果电脑MAC翻墙&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/macos/ClashX.md&#34;&gt;macOS翻墙之ClashX翻墙教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/macos/V2RayU.md&#34;&gt;macOS翻墙之V2rayU教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/macos/Surge.md&#34;&gt;macOS翻墙之Surge教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/macos/V2rayX.md&#34;&gt;macOS翻墙之V2rayX教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/router&#34;&gt;路由器翻墙教程&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/router/Merlin.md&#34;&gt;梅林路由器翻墙教程&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/router/OpenWRT.md&#34;&gt;OpenWRT路由器翻墙教程&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/tree/master/linux&#34;&gt;Linux翻墙教程&lt;/a&gt;&lt;/h2&gt; &#xA;&lt;h2&gt;ChromeGo - Chrome一键翻墙包&lt;/h2&gt; &#xA;&lt;p&gt;一个集成Goflyway、v2ray、Daze、SSR、Brook、Lightsocks、trojan、蓝灯、psiphon等N多翻墙工具的电脑翻墙包（推荐按前面所列顺序依次尝试），所有工具全部内置免费服务器，长期更新。由于国内网络环境复杂、地区不同，网络运营商不同，封锁情况都不同，所以使用效果会有差别，有的地区几乎所有的软件都能使用，有的只能用几款，因此具体哪款软件适合你的网络环境，需要你自己来尝试。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;推荐：&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/V2ray%E6%9C%BA%E5%9C%BA&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/bannedbook/fanqiang/master/v2ss/images/v2free.jpg&#34; height=&#34;300&#34; alt=&#34;V2free翻墙-不限流量、高速稳定、性价比超强&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;下载Chrome一键翻墙包&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/bannedbook/fanqiang/wiki/Chrome%E4%B8%80%E9%94%AE%E7%BF%BB%E5%A2%99%E5%8C%85&#34;&gt;Chrome一键翻墙包&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;使用Chrome一键翻墙包&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;请首先自行安装Google Chrome 浏览器，然后下载Chrome一键翻墙包，本软件会自动调用Google Chrome 浏览器翻墙。 下载后，解压出来，请不要解压到含有中文或空格的目录路径，请不要不解压就直接从压缩包里运行！不解压会出错！ 下载后，请认真阅读里面的使用帮助说明，然后 0.xx-10.xx翻墙 可依次尝试。 自动回复最新翻墙信息网址：&lt;a href=&#34;mailto:freeman105@gmail.com&#34;&gt;freeman105@gmail.com&lt;/a&gt;，邮箱不解答问题,如需反馈交流，请&lt;a href=&#34;https://github.com/bannedbook/fanqiang/issues&#34;&gt;点我&lt;/a&gt;或加入翻墙电报群: &lt;a href=&#34;https://t.me/fqchat&#34;&gt;https://t.me/fqchat&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;版权声明&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;请随意分发，勿做商业使用。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>googlecodelabs/android-compose-codelabs</title>
    <updated>2022-12-01T02:03:07Z</updated>
    <id>tag:github.com,2022-12-01:/googlecodelabs/android-compose-codelabs</id>
    <link href="https://github.com/googlecodelabs/android-compose-codelabs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jetpack Compose Codelabs&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of Android Studio projects to help you learn about Compose in Android. Each sample contains the code for a specific Compose codelab.&lt;/p&gt; &#xA;&lt;p&gt;For more information about Jetpack Compose, please &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;read the documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💻 Requirements&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio Chipmunk&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🧬 Codelabs&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-basics&#34;&gt;Basics codelabs&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Go hands-on and learn the fundamentals of declarative UI, working with state, layouts and theming.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-layouts&#34;&gt;Basic layouts codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn how to implement real-world designs with the composables and modifiers that Compose provides out of the box.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-state&#34;&gt;State codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Understand patterns for working with state in a declarative world by building a Wellness application.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-theming&#34;&gt;Theming codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Go hands on with Compose’s implementation of Material Design to understand how to theme an application’s colors, typography and shapes and support light and dark themes.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-migration&#34;&gt;Migration codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Understand how Jetpack Compose and View-based UIs can co-exist and interact, making it easy to adopt Compose at your own pace.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-animation&#34;&gt;Animation codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn how to use Jetpack Compose Animation APIs.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-navigation&#34;&gt;Navigation codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn how to use the Jetpack Navigation library in Compose, navigate within your application, navigate with arguments, support deep-links, and test your navigation.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-testing&#34;&gt;Testing codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn about testing Jetpack Compose UIs. Write your first tests, and learn about testing in isolation, debugging tests, the semantics tree, and test synchronization.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://developer.android.com/codelabs/jetpack-compose-accessibility&#34;&gt;Accessibility codelab&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Learn about the various ways to improve an app’s accessibility. Increase touch target sizes, add content descriptions, create custom actions, and more.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2021 The Android Open Source Project&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>