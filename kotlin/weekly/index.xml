<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-31T02:15:56Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>burhanrashid52/PhotoEditor</title>
    <updated>2022-07-31T02:15:56Z</updated>
    <id>tag:github.com,2022-07-31:/burhanrashid52/PhotoEditor</id>
    <link href="https://github.com/burhanrashid52/PhotoEditor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Photo Editor library with simple, easy support for image editing using paints,text,filters,emoji and Sticker like stories.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PhotoEditor&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/burhanrashid52/PhotoEditor/actions/workflows/app_build_and_test.yml/badge.svg?sanitize=true&#34; alt=&#34;Github Action&#34;&gt; &lt;a href=&#34;https://search.maven.org/artifact/com.burhanrashid52/photoeditor/2.0.0/aar&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Download-2.0.0-blue.svg?sanitize=true&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/API-14%2B-brightgreen.svg?sanitize=true&#34; alt=&#34;API&#34;&gt; &lt;a href=&#34;https://burhanrashid52.github.io/PhotoEditor/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/JavaDoc-PhotoEditor-blue.svg?sanitize=true&#34; alt=&#34;JavaDoc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.uplabs.com/posts/photoeditor&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Uplabs-PhotoEditor-orange.svg?sanitize=true&#34; alt=&#34;Uplabs&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/details/1/6736&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android%20Arsenal-PhotoEditor-blue.svg?sanitize=true&#34; alt=&#34;AndroidArsenal&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.androiddevdigest.com/digest-185&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/AndroidDev%20Digest-%23185-brightgreen.svg?sanitize=true&#34; alt=&#34;AndroidDevDigest&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android.libhunt.com/newsletter/97&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Awesome%20Android-%2397-red.svg?sanitize=true&#34; alt=&#34;AwesomeAndroid&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://androidweekly.net/issues/issue-312&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Android%20Weekly-%23312-blue.svg?sanitize=true&#34; alt=&#34;AndroidWeekly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mindorks.com/newsletter/edition/4&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Mindorks%20Newsletter-%234-ff69b4.svg?sanitize=true&#34; alt=&#34;Mindorks&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A Photo Editor library with simple, easy support for image editing using Paints, Text, Filters, Emoji and Sticker like stories.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://drive.google.com/drive/folders/1pw_iZ_PIyOSJzCWR_uLnoe7PKCDTgosp?usp=sharing&#34;&gt;Download link&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ZYtLHTZ.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/photoeditor-2?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-photoeditor-2&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=297508&amp;amp;theme=light&#34; alt=&#34;PhotoEditor - Android SDK with simple, easy support for image editing. | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/burhanrashid52&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;Buy Me A Coffee&#34; style=&#34;height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#drawing&#34;&gt;&lt;strong&gt;Drawing&lt;/strong&gt;&lt;/a&gt; on image with option to change its Brush&#39;s Color, Size, Opacity, Erasing and basic shapes.&lt;/li&gt; &#xA; &lt;li&gt;Apply &lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#filter-effect&#34;&gt;&lt;strong&gt;Filter Effect&lt;/strong&gt;&lt;/a&gt; on image using MediaEffect&lt;/li&gt; &#xA; &lt;li&gt;Adding/Editing &lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#text&#34;&gt;&lt;strong&gt;Text&lt;/strong&gt;&lt;/a&gt; with option to change its Color with Custom Fonts.&lt;/li&gt; &#xA; &lt;li&gt;Adding &lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#emoji&#34;&gt;&lt;strong&gt;Emoji&lt;/strong&gt;&lt;/a&gt; with Custom Emoji Fonts.&lt;/li&gt; &#xA; &lt;li&gt;Adding &lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#adding-imagesstickers&#34;&gt;&lt;strong&gt;Images/Stickers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Pinch to Scale and Rotate views.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#undo-and-redo&#34;&gt;&lt;strong&gt;Undo and Redo&lt;/strong&gt;&lt;/a&gt; for Brush and Views.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#deleting&#34;&gt;&lt;strong&gt;Deleting&lt;/strong&gt;&lt;/a&gt; Views&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#saving&#34;&gt;&lt;strong&gt;Saving&lt;/strong&gt;&lt;/a&gt; Photo after editing.&lt;/li&gt; &#xA; &lt;li&gt;More &lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#faq&#34;&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/burhanrashid52/PhotoEditor/master/#lesson-learned-from-building-successful-android-library-photoeditor-droidcon-berlin-2021&#34;&gt;Lesson Learned from building successful android library PhotoEditor: Droidcon Berlin 2021&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Benefits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Hassle free coding&lt;/li&gt; &#xA; &lt;li&gt;Increase efficiency&lt;/li&gt; &#xA; &lt;li&gt;Easy image editing&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To start with this, we need to simply add the dependencies from &lt;code&gt;mavenCentral()&lt;/code&gt; in the gradle file of our app module like this&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-groovy&#34;&gt;implementation &#39;com.burhanrashid52:photoeditor:2.0.0&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or we can also import the :photoeditor module from sample for further customization&lt;/p&gt; &#xA;&lt;h2&gt;Migrations&lt;/h2&gt; &#xA;&lt;h3&gt;AndroidX&lt;/h3&gt; &#xA;&lt;p&gt;PhotoEditor &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/releases/tag/v.1.0.0&#34;&gt;v.1.0.0&lt;/a&gt; is a migration to androidX and dropping the support of older support library. There are no API changes. If you find any issue migrating to v.1.0.0 , please follow this &lt;a href=&#34;https://developer.android.com/jetpack/androidx/migrate&#34;&gt;Guide&lt;/a&gt;. If you still facing the issue than you can always rollback to &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/releases/tag/v.0.4.0&#34;&gt;v.0.4.0&lt;/a&gt;. Any fix in PR are Welcome :)&lt;/p&gt; &#xA;&lt;h3&gt;Kotlin&lt;/h3&gt; &#xA;&lt;p&gt;PhotoEditor &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/releases/tag/v.2.0.0&#34;&gt;v.2.0.0&lt;/a&gt; is fully migrated to Kotlin. You can use &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/releases/tag/v.1.5.1&#34;&gt;v.1.5.1&lt;/a&gt; for the Java version. There are no breaking API changes in these two versions.&lt;/p&gt; &#xA;&lt;h2&gt;Setting up the View&lt;/h2&gt; &#xA;&lt;p&gt;First we need to add &lt;code&gt;PhotoEditorView&lt;/code&gt; in our xml layout&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt; &amp;lt;ja.burhanrashid52.photoeditor.PhotoEditorView&#xA;        android:id=&#34;@+id/photoEditorView&#34;&#xA;        android:layout_width=&#34;match_parent&#34;&#xA;        android:layout_height=&#34;match_parent&#34;&#xA;        app:photo_src=&#34;@drawable/got_s&#34; /&amp;gt;&#xA;  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can define our drawable or color resource directly using &lt;code&gt;app:photo_src&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can set the image programmatically by getting source from &lt;code&gt;PhotoEditorView&lt;/code&gt; which will return a &lt;code&gt;ImageView&lt;/code&gt; so that we can load image from resources,file or (Picasso/Glide)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;PhotoEditorView mPhotoEditorView = findViewById(R.id.photoEditorView);&#xA;&#xA;mPhotoEditorView.getSource().setImageResource(R.drawable.got);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building a PhotoEditor&lt;/h2&gt; &#xA;&lt;p&gt;To use the image editing feature we need to build a PhotoEditor which requires a Context and PhotoEditorView which we have to setup in our xml layout&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;//Use custom font using latest support library&#xA;Typeface mTextRobotoTf = ResourcesCompat.getFont(this, R.font.roboto_medium);&#xA;&#xA;//loading font from asset&#xA;Typeface mEmojiTypeFace = Typeface.createFromAsset(getAssets(), &#34;emojione-android.ttf&#34;);&#xA;&#xA;mPhotoEditor = new PhotoEditor.Builder(this, mPhotoEditorView)&#xA;         .setPinchTextScalable(true)&#xA;         .setClipSourceImage(true)&#xA;         .setDefaultTextTypeface(mTextRobotoTf)&#xA;         .setDefaultEmojiTypeface(mEmojiTypeFace)&#xA;         .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can customize the properties in the PhotoEditor as per our requirement&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Property&lt;/th&gt; &#xA;   &lt;th&gt;Usage&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;setPinchTextScalable()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;set false to disable pinch to zoom on text insertion. Default: true.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;setClipSourceImage()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;set true to clip the drawing brush to the source image. Default: false.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;setDefaultTextTypeface()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;set default text font to be added on image&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;setDefaultEmojiTypeface()&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;set default font specifc to add emojis&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;That&#39;s it we are done with setting up our library&lt;/p&gt; &#xA;&lt;h2&gt;Drawing&lt;/h2&gt; &#xA;&lt;p&gt;We can customize our brush and paint with different set of property. To start drawing on image we need to enable the drawing mode&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/INi5LIy.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Method&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Enable/Disable&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mPhotoEditor.setBrushDrawingMode(true);&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shape (brush, line, oval, rectangle)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mPhotoEditor.addShape(shape)&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shape size (px)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mPhotoEditor.setBrushSize(brushSize)&lt;/code&gt; or through the a ShapeBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shape opacity (In %)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mPhotoEditor.setOpacity(opacity)&lt;/code&gt; or through the a ShapeBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shape color&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mPhotoEditor.setBrushColor(colorCode)&lt;/code&gt; or through the a ShapeBuilder&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Brush Eraser&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;mPhotoEditor.brushEraser()&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Whenever we set any property of a brush for drawing it will automatically enable the drawing mode&lt;/p&gt; &#xA;&lt;h2&gt;Shapes&lt;/h2&gt; &#xA;&lt;p&gt;We can draw shapes from &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/releases/tag/v.1.5.0&#34;&gt;v.1.5.0&lt;/a&gt;. We use &lt;code&gt;ShapeBuilder&lt;/code&gt; to define shape and other properties.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://im2.ezgif.com/tmp/ezgif-2-5d5f7ddbe72e.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;mShapeBuilder = new ShapeBuilder()&#xA;         .withShapeOpacity(100)&#xA;         .withShapeType(ShapeType.OVAL)&#xA;         .withShapeSize(50);&#xA;&#xA;mPhotoEditor.setShape(mShapeBuilder)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more details check &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/raw/master/photoeditor/src/main/java/ja/burhanrashid52/photoeditor/shape/ShapeBuilder.java&#34;&gt;ShapeBuilder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Filter Effect&lt;/h2&gt; &#xA;&lt;p&gt;We can apply inbuild filter to the source images using&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mPhotoEditor.setFilterEffect(PhotoFilter.BRIGHTNESS);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/xXTGcVC.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can also apply custom effect using &lt;code&gt;Custom.Builder&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more details check &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/wiki/Filter-Effect&#34;&gt;Custom Filters&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Text&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/491BmE8.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can add the text with inputText and colorCode like this&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mPhotoEditor.addText(inputText, colorCode);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;It will take default fonts provided in the builder. If we want different fonts for different text we can set typeface with each text like this&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mPhotoEditor.addText(mTypeface,inputText, colorCode);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;In order to edit the text we need the view, which we will receive in our PhotoEditor callback. This callback will trigger when we &lt;strong&gt;Long Press&lt;/strong&gt; the added text&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;mPhotoEditor.setOnPhotoEditorListener(new OnPhotoEditorListener() {&#xA;           @Override&#xA;           public void onEditTextChangeListener(View rootView, String text, int colorCode) {&#xA;               &#xA;           }&#xA;       });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Now we can edit the text with a view like this&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mPhotoEditor.editText(rootView, inputText, colorCode);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want more customization on text. Please refer the wiki page for more details.&lt;/p&gt; &#xA;&lt;h2&gt;Emoji&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/RP8kqz6.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;We can add the Emoji by &lt;code&gt;PhotoEditor.getEmojis(getActivity());&lt;/code&gt; which will return a list of emojis unicode.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mPhotoEditor.addEmoji(emojiUnicode);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;It will take default fonts provided in the builder. If we want different Emoji fonts for different emoji we can set typeface with each Emoji like this&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;mPhotoEditor.addEmoji(mEmojiTypeface,emojiUnicode);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Adding Images/Stickers&lt;/h2&gt; &#xA;&lt;p&gt;We need to provide a Bitmap to add our Images &lt;code&gt;mPhotoEditor.addImage(bitmap);&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Undo and Redo&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/1Y9WcCB.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;  mPhotoEditor.undo();&#xA;  mPhotoEditor.redo();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Deleting&lt;/h2&gt; &#xA;&lt;p&gt;For deleting a Text/Emoji/Image we can click on the view to toggle the view highlighter box which will have a close icon. So, by clicking on the icon we can delete the view.&lt;/p&gt; &#xA;&lt;h2&gt;Saving&lt;/h2&gt; &#xA;&lt;p&gt;We need to provide a file with callback method when edited image is saved&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; mPhotoEditor.saveAsFile(filePath, new PhotoEditor.OnSaveListener() {&#xA;                 @Override&#xA;                 public void onSuccess(@NonNull String imagePath) {&#xA;                    Log.e(&#34;PhotoEditor&#34;,&#34;Image Saved Successfully&#34;);&#xA;                 }&#xA;&#xA;                 @Override&#xA;                 public void onFailure(@NonNull Exception exception) {&#xA;                     Log.e(&#34;PhotoEditor&#34;,&#34;Failed to save Image&#34;);&#xA;                 }&#xA;             });&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more detail check &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/wiki/Saving&#34;&gt;Saving&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;How to contribute?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Check out contribution guidelines 👉&lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/raw/master/CONTRIBUTING.md&#34;&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Questions?🤔&lt;/h2&gt; &#xA;&lt;p&gt;Hit me on twitter &lt;a href=&#34;https://twitter.com/burhanrashid52&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Twitter-%40burhanrashid52-blue.svg?sanitize=true&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://medium.com/@burhanrashid52&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Medium-%40burhanrashid52-brightgreen.svg?sanitize=true&#34; alt=&#34;Medium&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/Bursid&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Facebook-Burhanuddin%20Rashid-blue.svg?sanitize=true&#34; alt=&#34;Facebook&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Can I use this library in my app for free?&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;Yes. It&#39;s an open-source library and free to use. If this library has saved your time then showing a little credit will increase my motivation towards making the library better :)&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Does it support the CROP feature?&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;Currently, No. I started to build in branch &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/issues/79&#34;&gt;PE-79&lt;/a&gt;. But due to time constraint, I drop the idea. Any PR related to CROP is welcomed :)&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Facing issues in applying Filter?&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;The filter effect is applied using &lt;code&gt;GlSurfaceView&lt;/code&gt; and the implementation of this feature causing a lot of issues. Need to think of some other alternative solution. Here is the issue &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/issues?q=is%3Aissue+is%3Aopen+filter&#34;&gt;list&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Does is support in other platforms (iOS, Web, Flutter)?&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;No. Currently, the focus is on making the android library better. We don&#39;t have any plans for &lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/issues/24&#34;&gt;other Platform&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Other Know Issues&lt;/summary&gt; &#xA; &lt;p&gt; &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/issues/10&#34;&gt;Image Scaling&lt;/a&gt;. &lt;br&gt;&lt;a href=&#34;https://github.com/burhanrashid52/PhotoEditor/issues/48&#34;&gt;Memory Issue in Filter&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Who is using PhotoEditor?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.swastik.quotesandstatus&amp;amp;hl=en_US&#34;&gt;Best Quotes &amp;amp; Status 2019 (99000+ Collection)&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.pixxo.breezil.pixxo&#34;&gt;Pixxo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.coupleblog&#34;&gt;Couple Blog: Long distance&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I will be happy to add your app to the list. Please reach out to me with details. You know how to reach me :)&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;p&gt;This project is inspired from &lt;a href=&#34;https://github.com/eventtus/photo-editor-android&#34;&gt;PhotoEditorSDK&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Buy a cup of coffee&lt;/h2&gt; &#xA;&lt;p&gt;If you found this project helpful or you learned something from the source code and want to thank me, consider buying me a cup of ☕️ &lt;a href=&#34;https://www.buymeacoffee.com/burhanrashid52&#34;&gt;BuyMeACoffee&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/photoeditor-2?utm_source=badge-review&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-photoeditor-2#discussion-body&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/review.svg?post_id=297508&amp;amp;theme=light&#34; alt=&#34;PhotoEditor - Android SDK with simple, easy support for image editing. | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Lesson Learned from building successful android library PhotoEditor: Droidcon Berlin 2021&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://player.vimeo.com/video/643904719&#34; title=&#34;Lesson Learned from building successful android library PhotoEditor&#34;&gt;&lt;img src=&#34;https://burhanrashid52.com/wp-content/uploads/2021/11/246719409_10220774611897971_6342954485444508610_n-940x510.jpg&#34; alt=&#34;Lesson Learned from building successful android library PhotoEditor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;MIT License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright (c) 2020 Burhanuddin Rashid&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>revanced/revanced-patches</title>
    <updated>2022-07-31T02:15:56Z</updated>
    <id>tag:github.com,2022-07-31:/revanced/revanced-patches</id>
    <link href="https://github.com/revanced/revanced-patches" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🧩 Official patches by ReVanced&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🧩 ReVanced Patches&lt;/h1&gt; &#xA;&lt;p&gt;Official patches by ReVanced&lt;/p&gt; &#xA;&lt;h2&gt;📜 List of available patches&lt;/h2&gt; &#xA;&lt;h3&gt;📦 &lt;code&gt;com.twitter.android&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;💊 Patch&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;📜 Description&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;🏹 Target Version&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;timeline-ads&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Removes ads from the Twitter timeline.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;all&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;📦 &lt;code&gt;com.reddit.frontpage&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;💊 Patch&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;📜 Description&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;🏹 Target Version&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;general-reddit-ads&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Removes general ads from the Reddit frontpage and subreddits.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;all&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;📦 &lt;code&gt;com.google.android.apps.youtube.music&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;💊 Patch&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;📜 Description&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;🏹 Target Version&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;minimized-playback-music&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Enables minimized playback on Kids music.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;tasteBuilder-remover&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Removes the &#34;Tell us which artists you like&#34; card from the home screen.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;hide-get-premium&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Removes all &#34;Get Premium&#34; evidences from the avatar menu.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;compact-header&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hides the music category bar at the top of the homepage.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;upgrade-button-remover&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Removes the upgrade tab from the pivot bar.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;background-play&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Enables playing music in the background.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;music-microg-support&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Allows YouTube Music ReVanced to run without root and under a different package name.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;music-video-ads&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Removes ads in the music player.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;codecs-unlock&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Adds more audio codec options. The new audio codecs usually result in better audio quality.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;exclusive-audio-playback&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Enables the option to play music without video.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;5.16.51&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;📦 &lt;code&gt;com.google.android.youtube&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;table&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;💊 Patch&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;📜 Description&lt;/th&gt; &#xA;    &lt;th align=&#34;center&#34;&gt;🏹 Target Version&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;swipe-controls&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Adds volume and brightness swipe controls.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;seekbar-tapping&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Enables tap-to-seek on the seekbar of the video player.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;minimized-playback&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Enables minimized and background playback.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;amoled&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Enables pure black theme.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;disable-create-button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hides the create button in the navigation bar.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;hide-cast-button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hides the cast button in the video player.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;all&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;return-youtube-dislike&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Shows the dislike count of videos using the Return YouTube Dislike API.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;hide-autoplay-button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hides the autoplay button in the video player.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;premium-heading&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Shows premium branding on the home screen.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;all&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;custom-branding&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Changes the YouTube launcher icon to be ReVanced&#39;s.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;all&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;disable-fullscreen-panels&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Disables video description and comments panel in fullscreen view.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;old-quality-layout&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Enables the original quality flyout menu.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;hide-shorts-button&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hides the shorts button on the navigation bar.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;hide-watermark&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hides creator&#39;s watermarks on videos.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;sponsorblock&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Integrate SponsorBlock.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;enable-wide-searchbar&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Replaces the search icon with a wide search bar. This will hide the YouTube logo when active.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;force-vp9-codec&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Forces the VP9 codec for videos.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;always-autorepeat&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Always repeats the playing video again.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;microg-support&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Allows YouTube ReVanced to run without root and under a different package name with Vanced MicroG&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;enable-debugging&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Enables app debugging by patching the manifest file.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;all&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;custom-playback-speed&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Adds more video playback speed options.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;hdr-auto-brightness&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Makes the brightness of HDR videos follow the system default.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;remember-video-quality&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Adds the ability to remember the video quality you chose in the video quality flyout.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;video-ads&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Removes ads in the video player.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;general-ads&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Removes general ads.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;&lt;code&gt;hide-infocard-suggestions&lt;/code&gt;&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;Hides infocards in videos.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt;17.29.34&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/details&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/Exposed</title>
    <updated>2022-07-31T02:15:56Z</updated>
    <id>tag:github.com,2022-07-31:/JetBrains/Exposed</id>
    <link href="https://github.com/JetBrains/Exposed" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin SQL Framework&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/logo.png&#34; alt=&#34;Exposed&#34; width=&#34;315&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/team.svg?sanitize=true&#34; alt=&#34;JetBrains team project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.slack.com/archives/C0CG7E0A1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@kotlinlang/exposed-yellow.svg?logo=slack?style=flat&#34; alt=&#34;Kotlinlang Slack Channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_Exposed_Build&amp;amp;guest=1&#34;&gt;&lt;img src=&#34;https://teamcity.jetbrains.com/app/rest/builds/buildType:(id:KotlinTools_Exposed_Build)/statusIcon&#34; alt=&#34;TC Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/org.jetbrains.exposed/exposed-core&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/org.jetbrains.exposed/exposed-core/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to &lt;strong&gt;Exposed&lt;/strong&gt;, an ORM framework for &lt;a href=&#34;https://github.com/JetBrains/kotlin&#34;&gt;Kotlin&lt;/a&gt;. Exposed offers two levels of database access: typesafe SQL wrapping DSL and lightweight data access objects. Our official mascot is Cuttlefish, which is best known for its outstanding mimicry abilities letting it blend seamlessly in any environment. Just like our mascot, Exposed can mimic a variety of database engines and help you build database applications without hard dependencies on any specific database engine, and switch between them with very little or no changes in your code.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Databases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;H2&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;MariaDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/ORACLE.md&#34;&gt;Oracle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL using the &lt;a href=&#34;https://github.com/impossibl/pgjdbc-ng&#34;&gt;pgjdbc-ng&lt;/a&gt; JDBC driver&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/SQLServer.md&#34;&gt;SQL Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SQLite&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;Exposed is currently available for &lt;strong&gt;maven/gradle builds&lt;/strong&gt; at &lt;a href=&#34;https://search.maven.org/search?q=g:org.jetbrains.exposed&#34;&gt;Maven Central&lt;/a&gt; (read &lt;a href=&#34;https://github.com/JetBrains/Exposed/wiki/Getting-Started#download&#34;&gt;Getting started&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/Exposed/wiki&#34;&gt;Wiki&lt;/a&gt; with examples and docs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt; to see what&#39;s coming next.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/ChangeLog.md&#34;&gt;Change log&lt;/a&gt; of improvements and bug fixes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have any questions feel free to ask at our &lt;a href=&#34;https://kotlinlang.slack.com/archives/C0CG7E0A1&#34;&gt;#exposed&lt;/a&gt; channel on &lt;a href=&#34;https://kotlinlang.slack.com&#34;&gt;kotlinlang.slack.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;SQL DSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import org.jetbrains.exposed.sql.*&#xA;import org.jetbrains.exposed.sql.transactions.transaction&#xA;&#xA;object Users : Table() {&#xA;    val id = varchar(&#34;id&#34;, 10) // Column&amp;lt;String&amp;gt;&#xA;    val name = varchar(&#34;name&#34;, length = 50) // Column&amp;lt;String&amp;gt;&#xA;    val cityId = (integer(&#34;city_id&#34;) references Cities.id).nullable() // Column&amp;lt;Int?&amp;gt;&#xA;&#xA;    override val primaryKey = PrimaryKey(id, name = &#34;PK_User_ID&#34;) // name is optional here&#xA;}&#xA;&#xA;object Cities : Table() {&#xA;    val id = integer(&#34;id&#34;).autoIncrement() // Column&amp;lt;Int&amp;gt;&#xA;    val name = varchar(&#34;name&#34;, 50) // Column&amp;lt;String&amp;gt;&#xA;&#xA;    override val primaryKey = PrimaryKey(id, name = &#34;PK_Cities_ID&#34;)&#xA;}&#xA;&#xA;fun main() {&#xA;    Database.connect(&#34;jdbc:h2:mem:test&#34;, driver = &#34;org.h2.Driver&#34;, user = &#34;root&#34;, password = &#34;&#34;)&#xA;&#xA;    transaction {&#xA;        addLogger(StdOutSqlLogger)&#xA;&#xA;        SchemaUtils.create (Cities, Users)&#xA;&#xA;        val saintPetersburgId = Cities.insert {&#xA;            it[name] = &#34;St. Petersburg&#34;&#xA;        } get Cities.id&#xA;&#xA;        val munichId = Cities.insert {&#xA;            it[name] = &#34;Munich&#34;&#xA;        } get Cities.id&#xA;&#xA;        val pragueId = Cities.insert {&#xA;            it.update(name, stringLiteral(&#34;   Prague   &#34;).trim().substring(1, 2))&#xA;        }[Cities.id]&#xA;&#xA;        val pragueName = Cities.select { Cities.id eq pragueId }.single()[Cities.name]&#xA;        assertEquals(pragueName, &#34;Pr&#34;)&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;andrey&#34;&#xA;            it[name] = &#34;Andrey&#34;&#xA;            it[Users.cityId] = saintPetersburgId&#xA;        }&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;sergey&#34;&#xA;            it[name] = &#34;Sergey&#34;&#xA;            it[Users.cityId] = munichId&#xA;        }&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;eugene&#34;&#xA;            it[name] = &#34;Eugene&#34;&#xA;            it[Users.cityId] = munichId&#xA;        }&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;alex&#34;&#xA;            it[name] = &#34;Alex&#34;&#xA;            it[Users.cityId] = null&#xA;        }&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;smth&#34;&#xA;            it[name] = &#34;Something&#34;&#xA;            it[Users.cityId] = null&#xA;        }&#xA;&#xA;        Users.update({ Users.id eq &#34;alex&#34;}) {&#xA;            it[name] = &#34;Alexey&#34;&#xA;        }&#xA;&#xA;        Users.deleteWhere{ Users.name like &#34;%thing&#34;}&#xA;&#xA;        println(&#34;All cities:&#34;)&#xA;&#xA;        for (city in Cities.selectAll()) {&#xA;            println(&#34;${city[Cities.id]}: ${city[Cities.name]}&#34;)&#xA;        }&#xA;&#xA;        println(&#34;Manual join:&#34;)&#xA;        (Users innerJoin Cities).slice(Users.name, Cities.name).&#xA;            select {(Users.id.eq(&#34;andrey&#34;) or Users.name.eq(&#34;Sergey&#34;)) and&#xA;                    Users.id.eq(&#34;sergey&#34;) and Users.cityId.eq(Cities.id)}.forEach {&#xA;            println(&#34;${it[Users.name]} lives in ${it[Cities.name]}&#34;)&#xA;        }&#xA;&#xA;        println(&#34;Join with foreign key:&#34;)&#xA;&#xA;&#xA;        (Users innerJoin Cities).slice(Users.name, Users.cityId, Cities.name).&#xA;                select { Cities.name.eq(&#34;St. Petersburg&#34;) or Users.cityId.isNull()}.forEach {&#xA;            if (it[Users.cityId] != null) {&#xA;                println(&#34;${it[Users.name]} lives in ${it[Cities.name]}&#34;)&#xA;            }&#xA;            else {&#xA;                println(&#34;${it[Users.name]} lives nowhere&#34;)&#xA;            }&#xA;        }&#xA;&#xA;        println(&#34;Functions and group by:&#34;)&#xA;&#xA;        ((Cities innerJoin Users).slice(Cities.name, Users.id.count()).selectAll().groupBy(Cities.name)).forEach {&#xA;            val cityName = it[Cities.name]&#xA;            val userCount = it[Users.id.count()]&#xA;&#xA;            if (userCount &amp;gt; 0) {&#xA;                println(&#34;$userCount user(s) live(s) in $cityName&#34;)&#xA;            } else {&#xA;                println(&#34;Nobody lives in $cityName&#34;)&#xA;            }&#xA;        }&#xA;&#xA;        SchemaUtils.drop (Users, Cities)&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generated SQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;    SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, CONSTRAINT PK_Cities_ID PRIMARY KEY (id))&#xA;    SQL: CREATE TABLE IF NOT EXISTS Users (id VARCHAR(10) NOT NULL, name VARCHAR(50) NOT NULL, city_id INT NULL, CONSTRAINT PK_User_ID PRIMARY KEY (id))&#xA;    SQL: ALTER TABLE Users ADD FOREIGN KEY (city_id) REFERENCES Cities(id)&#xA;    SQL: INSERT INTO Cities (name) VALUES (&#39;St. Petersburg&#39;)&#xA;    SQL: INSERT INTO Cities (name) VALUES (&#39;Munich&#39;)&#xA;    SQL: INSERT INTO Cities (name) VALUES (&#39;Prague&#39;)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;andrey&#39;, &#39;Andrey&#39;, 1)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;sergey&#39;, &#39;Sergey&#39;, 2)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;eugene&#39;, &#39;Eugene&#39;, 2)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;alex&#39;, &#39;Alex&#39;, NULL)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;smth&#39;, &#39;Something&#39;, NULL)&#xA;    SQL: UPDATE Users SET name=&#39;Alexey&#39; WHERE Users.id = &#39;alex&#39;&#xA;    SQL: DELETE FROM Users WHERE Users.name LIKE &#39;%thing&#39;&#xA;    All cities:&#xA;    SQL: SELECT Cities.id, Cities.name FROM Cities&#xA;    1: St. Petersburg&#xA;    2: Munich&#xA;    3: Prague&#xA;    Manual join:&#xA;    SQL: SELECT Users.name, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE ((Users.id = &#39;andrey&#39;) or (Users.name = &#39;Sergey&#39;)) and Users.id = &#39;sergey&#39; and Users.city_id = Cities.id&#xA;    Sergey lives in Munich&#xA;    Join with foreign key:&#xA;    SQL: SELECT Users.name, Users.city_id, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE (Cities.name = &#39;St. Petersburg&#39;) or (Users.city_id IS NULL)&#xA;    Andrey lives in St. Petersburg&#xA;    Functions and group by:&#xA;    SQL: SELECT Cities.name, COUNT(Users.id) FROM Cities INNER JOIN Users ON Cities.id = Users.city_id GROUP BY Cities.name&#xA;    1 user(s) live(s) in St. Petersburg&#xA;    2 user(s) live(s) in Munich&#xA;    SQL: DROP TABLE Users&#xA;    SQL: DROP TABLE Cities&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DAO&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import org.jetbrains.exposed.dao.*&#xA;import org.jetbrains.exposed.dao.id.EntityID&#xA;import org.jetbrains.exposed.dao.id.IntIdTable&#xA;import org.jetbrains.exposed.sql.*&#xA;import org.jetbrains.exposed.sql.transactions.transaction&#xA;&#xA;object Users : IntIdTable() {&#xA;    val name = varchar(&#34;name&#34;, 50).index()&#xA;    val city = reference(&#34;city&#34;, Cities)&#xA;    val age = integer(&#34;age&#34;)&#xA;}&#xA;&#xA;object Cities: IntIdTable() {&#xA;    val name = varchar(&#34;name&#34;, 50)&#xA;}&#xA;&#xA;class User(id: EntityID&amp;lt;Int&amp;gt;) : IntEntity(id) {&#xA;    companion object : IntEntityClass&amp;lt;User&amp;gt;(Users)&#xA;&#xA;    var name by Users.name&#xA;    var city by City referencedOn Users.city&#xA;    var age by Users.age&#xA;}&#xA;&#xA;class City(id: EntityID&amp;lt;Int&amp;gt;) : IntEntity(id) {&#xA;    companion object : IntEntityClass&amp;lt;City&amp;gt;(Cities)&#xA;&#xA;    var name by Cities.name&#xA;    val users by User referrersOn Users.city&#xA;}&#xA;&#xA;fun main() {&#xA;    Database.connect(&#34;jdbc:h2:mem:test&#34;, driver = &#34;org.h2.Driver&#34;, user = &#34;root&#34;, password = &#34;&#34;)&#xA;&#xA;    transaction {&#xA;        addLogger(StdOutSqlLogger)&#xA;&#xA;        SchemaUtils.create (Cities, Users)&#xA;&#xA;        val stPete = City.new {&#xA;            name = &#34;St. Petersburg&#34;&#xA;        }&#xA;&#xA;        val munich = City.new {&#xA;            name = &#34;Munich&#34;&#xA;        }&#xA;&#xA;        User.new {&#xA;            name = &#34;a&#34;&#xA;            city = stPete&#xA;            age = 5&#xA;        }&#xA;&#xA;        User.new {&#xA;            name = &#34;b&#34;&#xA;            city = stPete&#xA;            age = 27&#xA;        }&#xA;&#xA;        User.new {&#xA;            name = &#34;c&#34;&#xA;            city = munich&#xA;            age = 42&#xA;        }&#xA;&#xA;        println(&#34;Cities: ${City.all().joinToString {it.name}}&#34;)&#xA;        println(&#34;Users in ${stPete.name}: ${stPete.users.joinToString {it.name}}&#34;)&#xA;        println(&#34;Adults: ${User.find { Users.age greaterEq 18 }.joinToString {it.name}}&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generated SQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;    SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, CONSTRAINT pk_Cities PRIMARY KEY (id))&#xA;    SQL: CREATE TABLE IF NOT EXISTS Users (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, city INT NOT NULL, age INT NOT NULL, CONSTRAINT pk_Users PRIMARY KEY (id))&#xA;    SQL: CREATE INDEX Users_name ON Users (name)&#xA;    SQL: ALTER TABLE Users ADD FOREIGN KEY (city) REFERENCES Cities(id)&#xA;    SQL: INSERT INTO Cities (name) VALUES (&#39;St. Petersburg&#39;),(&#39;Munich&#39;)&#xA;    SQL: SELECT Cities.id, Cities.name FROM Cities&#xA;    Cities: St. Petersburg, Munich&#xA;    SQL: INSERT INTO Users (name, city, age) VALUES (&#39;a&#39;, 1, 5),(&#39;b&#39;, 1, 27),(&#39;c&#39;, 2, 42)&#xA;    SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.city = 1&#xA;    Users in St. Petersburg: a, b&#xA;    SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.age &amp;gt;= 18&#xA;    Adults: b, c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt; or &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>