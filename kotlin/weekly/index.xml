<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-12-10T01:58:13Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>kotlin-hands-on/advent-of-code-kotlin-template</title>
    <updated>2023-12-10T01:58:13Z</updated>
    <id>tag:github.com,2023-12-10:/kotlin-hands-on/advent-of-code-kotlin-template</id>
    <link href="https://github.com/kotlin-hands-on/advent-of-code-kotlin-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Advent of Code template project for Kotlin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Advent of Code Kotlin Template&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; – an annual event in December since 2015. Every year since then, with the first day of December, a programming puzzles contest is published every day for twenty-four days. A set of Christmas-oriented challenges provides any input you have to use to answer using the language of your choice. We offer you a template prepared to use with &lt;a href=&#34;https://kotlinlang.org&#34;&gt;Kotlin&lt;/a&gt; language within this repository.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kotlin-hands-on/advent-of-code-kotlin-template/main/.github/readme/cover.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Workflow&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Advent of Code Kotlin Template&lt;/strong&gt; is a particular type of GitHub repository that lets you speed up the setup phase and start writing your AoC solutions immediately.&lt;/p&gt; &#xA;&lt;p&gt;The general idea is straightforward – to create a new project based on this template, you need to log in to your GitHub account and use the &lt;strong&gt;Use this template&lt;/strong&gt; green button. And remember – &lt;strong&gt;do not fork it!&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;After creating a new project based on this template in your account, a dedicated GitHub Actions workflow will start and clean up the code from redundant files. It will also personalize code to use your username and project name in namespaces and Gradle properties. How cool is that?&lt;/p&gt; &#xA;&lt;p&gt;You can clone it within the IntelliJ IDEA whenever the &lt;a href=&#34;https://github.com/actions-user&#34;&gt;@actions-user&lt;/a&gt; actor pushes the second commit to your repository.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;Right after opening the project in IntelliJ IDEA, verify if you use at least &lt;strong&gt;Java 11&lt;/strong&gt; as Project SDK. To do that, visit &lt;a href=&#34;https://www.jetbrains.com/help/idea/project-settings-and-structure.html&#34;&gt;Project Structure Settings&lt;/a&gt; (&lt;kbd&gt;⌘ Cmd&lt;/kbd&gt;&lt;kbd&gt;;&lt;/kbd&gt; on macOS or &lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;S&lt;/kbd&gt; on Windows/Linux).&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;From now on, everything&#39;s in your hands! Join the &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; contest to solve the &lt;em&gt;Day 01&lt;/em&gt; as soon as it is published.&lt;/p&gt; &#xA;&lt;p&gt;Copy the &lt;code&gt;Day01.kt&lt;/code&gt; solution file for the following days and increment the day number.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;Remember to join the Kotlin contest!&lt;/p&gt; &#xA; &lt;p&gt;To do that, edit your project&#39;s &lt;em&gt;About&lt;/em&gt; section with ⚙️ icon and add the &lt;code&gt;aoc-2023-in-kotlin&lt;/code&gt; topic to your project.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;We will find your repository and count you in our giveaway.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;After you create a new project based on the current template repository using the &lt;strong&gt;Use this template&lt;/strong&gt; button, a bare minimal scaffold will appear in your GitHub account with the following structure:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;.&#xA;├── README.md               README file&#xA;├── build.gradle.kts        Gradle configuration created with Kotlin DSL&#xA;├── settings.gradle.kts     Gradle project settings&#xA;├── gradle*                 Gradle wrapper files&#xA;└── src&#xA;    ├── Day01.kt            An empty implementation for the first AoC day&#xA;    ├── Utils.kt            A set of utility methods shared across your days&#xA;    │                       &#xA;    │                       (create those files manually)&#xA;    ├── Day01.txt           An empty file for the Day 01 input data&#xA;    └── Day01_test.txt      An optional Day 01 test input data used for checks&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;All task input files (&lt;code&gt;src/*.txt&lt;/code&gt;) are excluded from the repository with &lt;code&gt;.gitignore&lt;/code&gt; – we should not post them publicly, as &lt;a href=&#34;https://twitter.com/ericwastl/status/1465805354214830081&#34;&gt;Eric Wastl requested for&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;When the first puzzle appears, go to the &lt;code&gt;Day01.kt&lt;/code&gt;, and for each &lt;code&gt;part1&lt;/code&gt; and &lt;code&gt;part2&lt;/code&gt; function, provide an algorithm implementation using the &lt;code&gt;input&lt;/code&gt; data loaded from the &lt;code&gt;src/Day01.txt&lt;/code&gt; file. This input data is common for both parts, and you can find it at the bottom of each day on the &lt;a href=&#34;https://adventofcode.com&#34;&gt;Advent of Code&lt;/a&gt; page.&lt;/p&gt; &#xA;&lt;p&gt;To read the input data, you can go with the &lt;code&gt;readInput(name: String)&lt;/code&gt; utility method provided in the &lt;a href=&#34;https://raw.githubusercontent.com/kotlin-hands-on/advent-of-code-kotlin-template/main/src/Utils.kt&#34;&gt;&lt;code&gt;Utils.kt&lt;/code&gt;&lt;/a&gt; file, like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    fun part1(input: List&amp;lt;String&amp;gt;): Int {&#xA;        return input.size&#xA;    }&#xA;&#xA;    val input = readInput(&#34;Day01&#34;)&#xA;    println(part1(input))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Running&lt;/h2&gt; &#xA;&lt;p&gt;To call the algorithm you&#39;re implementing, click the green Play button next to the &lt;code&gt;fun main()&lt;/code&gt; definition.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/kotlin-hands-on/advent-of-code-kotlin-template/main/.github/readme/run.png&#34; alt=&#34;img.png&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;Create relevant files Before running tasks or tests, like: &lt;code&gt;src/Day01.txt&lt;/code&gt; or &lt;code&gt;src/Day01_test.txt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://raw.githubusercontent.com/kotlin-hands-on/advent-of-code-kotlin-template/main/src/Utils.kt&#34;&gt;&lt;code&gt;Utils.kt&lt;/code&gt;&lt;/a&gt; file also contains the &lt;code&gt;String.md5()&lt;/code&gt; method for generating MD5 hash out of the given string and expects more helper functions for the sake of the &lt;a href=&#34;https://en.wikipedia.org/wiki/KISS_principle&#34;&gt;KISS principle&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Each puzzle describes some test conditions, a small portion of the information that helps check if the produced value for the given test input is valid. To handle that case, you can put such an input into a separate file and perform a check against the output, like:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    // ...&#xA;    &#xA;    val testInput = readInput(&#34;Day01_test&#34;)&#xA;    check(part1(testInput) == 13)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The current approach of providing both &lt;code&gt;part1&lt;/code&gt; and &lt;code&gt;part2&lt;/code&gt; solutions within the single &lt;code&gt;Day##.kt&lt;/code&gt; file may sometimes bring a disadvantage due to the first solution calculation when we expect to work on the second part only. With simple cases that don&#39;t consume too much of your time and resources that can be almost unnoticeable, but when the solution takes seconds, it is worth considering breaking the daily solution into two separated pieces, like &lt;code&gt;Day07_part1.kt&lt;/code&gt; and &lt;code&gt;Day07_part2.kt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The final result of your algorithm will be printed on the screen so that you can pass it to the Advent of Code website.&lt;/p&gt; &#xA;&lt;p&gt;To go with the next day, place the &lt;code&gt;Day02.txt&lt;/code&gt; file into the &lt;code&gt;src&lt;/code&gt; with relevant input data and create a &lt;code&gt;Day02.kt&lt;/code&gt; file with a similar code scaffold:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    fun part1(input: List&amp;lt;String&amp;gt;): Int {&#xA;        return 0&#xA;    }&#xA;&#xA;    fun part2(input: List&amp;lt;String&amp;gt;): Int {&#xA;        return 0&#xA;    }&#xA;&#xA;    val input = readInput(&#34;Day02&#34;)&#xA;    println(part1(input))&#xA;    println(part2(input))&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;There is a fork of this repository available that utilizes the Amper tool for project configuration, recently &lt;a href=&#34;https://blog.jetbrains.com/blog/2023/11/09/amper-improving-the-build-tooling-user-experience/&#34;&gt;introduced by JetBrains&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;For more, see &lt;a href=&#34;https://github.com/kotlin-hands-on/advent-of-code-kotlin-template-amper&#34;&gt;Advent of Code Kotlin Template — Amper&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Getting help&lt;/h2&gt; &#xA;&lt;p&gt;If you are stuck with Kotlin-specific questions or anything related to this template, check out the following resources:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/home.html&#34;&gt;Kotlin docs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://surveys.jetbrains.com/s3/kotlin-slack-sign-up&#34;&gt;Kotlin Slack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Template &lt;a href=&#34;https://github.com/kotlin-hands-on/advent-of-code-kotlin-template/issues&#34;&gt;issue tracker&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>AkaneTan/Gramophone</title>
    <updated>2023-12-10T01:58:13Z</updated>
    <id>tag:github.com,2023-12-10:/AkaneTan/Gramophone</id>
    <link href="https://github.com/AkaneTan/Gramophone" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A sane music player built with media3 and material design library that is following android&#39;s standard strictly.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gramophone&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/license/AkaneTan/Gramophone?style=flat-square&amp;amp;logoColor=white&amp;amp;labelColor=black&amp;amp;color=azure&#34; alt=&#34;GitHub&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/tag/AkaneTan/Gramophone?style=flat-square&amp;amp;logoColor=white&amp;amp;labelColor=black&amp;amp;color=azure&#34; alt=&#34;GitHub tag (with filter)&#34;&gt; &lt;a href=&#34;https://t.me/AkaneFoundation&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-Content?style=flat-square&amp;amp;logo=telegram&amp;amp;logoColor=black&amp;amp;color=azure&#34; alt=&#34;Static Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#akanefoundation:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Matrix-Content?style=flat-square&amp;amp;logo=matrix&amp;amp;logoColor=black&amp;amp;color=azure&#34; alt=&#34;Static Badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;A sane music player built with media3 and material design library that is following android&#39;s standard strictly.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Up-to-date material 3 design&lt;/li&gt; &#xA; &lt;li&gt;Monet themed icon on Android 12+&lt;/li&gt; &#xA; &lt;li&gt;Dynamic player UI monet color&lt;/li&gt; &#xA; &lt;li&gt;View and play your favorite music&lt;/li&gt; &#xA; &lt;li&gt;Search your favourite music&lt;/li&gt; &#xA; &lt;li&gt;Web streaming (coming soon!)&lt;/li&gt; &#xA; &lt;li&gt;Synced lyrics&lt;/li&gt; &#xA; &lt;li&gt;Manage &amp;amp; Add your playlist&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why us?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clean code and unified code style&lt;/li&gt; &#xA; &lt;li&gt;Friendly for inline compile with custom ROMs&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_1.jpg&#34; alt=&#34;Screenshot 1&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_2.jpg&#34; alt=&#34;Screenshot 2&#34;&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_3.jpg&#34; alt=&#34;Screenshot 3&#34;&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_4.jpg&#34; alt=&#34;Screenshot 4&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_5.jpg&#34; alt=&#34;Screenshot 5&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_6.jpg&#34; alt=&#34;Screenshot 6&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_7.jpg&#34; alt=&#34;Screenshot 7&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_8.jpg&#34; alt=&#34;Screenshot 8&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/AkaneTan/Gramophone/beta/fastlane/metadata/android/en-US/images/phoneScreenshots/screenshot_9.jpg&#34; alt=&#34;Screenshot 9&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;You can download the latest version of the app from the &lt;a href=&#34;https://t.me/AkaneDevRel&#34;&gt;telegram channel&lt;/a&gt;. Github release is outdated and will be updated when 1.0.2&#39;s final release is out.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;To build this app, you will need the latest beta version of android studio and a fast network. Simply clone it and build it.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is licensed under the GNU General Public License v3.0 - see the &lt;a href=&#34;https://github.com/AkaneTan/Gramophone/raw/beta/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/engage/gramophone/&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widget/gramophone/strings-xml/287x66-white.png&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Notice&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;For bug reporting: &lt;a href=&#34;https://t.me/AkaneFoundation&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Friend&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/lambada10/songsync&#34;&gt;SongSync&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>polodarb/GMS-Flags</title>
    <updated>2023-12-10T01:58:13Z</updated>
    <id>tag:github.com,2023-12-10:/polodarb/GMS-Flags</id>
    <link href="https://github.com/polodarb/GMS-Flags" rel="alternate"></link>
    <summary type="html">&lt;p&gt;GMS Flags is a tool for changing parameters in Google services to activate or deactivate certain functionality in Google applications&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GMS-Flags&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/polodarb/GMS-Flags/total?style=for-the-badge&#34; alt=&#34;Downloads&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/polodarb/GMS-Flags?style=for-the-badge&#34; alt=&#34;Start&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/polodarb/GMS-Flags?style=for-the-badge&#34; alt=&#34;License&#34;&gt; &lt;a href=&#34;https://t.me/gmsflags&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/telegram-telegram?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&amp;amp;label=GMS%20Flags&amp;amp;color=%23229ED9&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/polodarb/GMS-Flags/master/gf_banner.png&#34; alt=&#34;Banner&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/polodarb/GMS-Flags/master/gf_root.png&#34; alt=&#34;Root&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Suggestions screen&lt;/strong&gt; - This is a screen that prompts the user to activate some interesting flags. The suggested flags allow the user to read some notes, open the application itself and its settings. It is possible to reset the flag value, see more detailed information or report some problem to the developer.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Apps screen&lt;/strong&gt; - This screen generates a list of applications and their associated list of packages with flags within them. This allows you to quickly and conveniently find the appropriate flag.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Saved screen&lt;/strong&gt; - Display lists of user-saved packages and flags.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Packages screen&lt;/strong&gt; - Display a list of all packages in alphabetical order that contain flags. There is a search and an option to save the package for quick access.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Flag Change screen&lt;/strong&gt; - The most important screen, which allows you to change the parameters of the flags. Flags are divided into 4 different types - Boolean/Int/Float/String. Screen functionality: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Ability to select some or all booleans flags and activate or deactivate them in one click.&lt;/li&gt; &#xA;   &lt;li&gt;Ability to save all selected flags in one click.&lt;/li&gt; &#xA;   &lt;li&gt;Ability to send a list of selected flags to another application.&lt;/li&gt; &#xA;   &lt;li&gt;Ability to suggest or report a problem about a flag or set of flags.&lt;/li&gt; &#xA;   &lt;li&gt;For Int/Float/String flags, it is possible to delete an overwritten value.&lt;/li&gt; &#xA;   &lt;li&gt;Filtering of flags by modified, activated and deactivated flags.&lt;/li&gt; &#xA;   &lt;li&gt;Ability to add a flag manually.&lt;/li&gt; &#xA;   &lt;li&gt;Ability to delete all flags changes, e.g. if it caused any problems.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Add Multiple Flags screen&lt;/strong&gt; - Ability to record a large set of flags of all available types at once.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Settings screen&lt;/strong&gt; - Settings allow you to delete ALL overwritten flags and saved flags/packages. It is also possible to assign a start screen when launching the application and the ability to view more detailed information about the GMS Flags.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Note&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT] It usually takes 1 to 3 force-stops for a flag to be applied. If the flag still does not apply, you should wait 24 hours or reset the application data.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;Download&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/polodarb/GMS-Flags/releases/download/1.1.0/gms_flags_1.1.0.apk&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/polodarb/GMS-Flags/master/gh_download.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-MIT&#34;&gt;&#xA;Copyright (c) 2023 Danyil Kobzar&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &#34;Software&#34;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in all&#xA;copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&#xA;SOFTWARE.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>