<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-06-01T02:13:08Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>libre-tube/LibreTube</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/libre-tube/LibreTube</id>
    <link href="https://github.com/libre-tube/LibreTube" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An alternative frontend for YouTube, for Android. [WIP]&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://libre-tube.github.io/assets/gh-banner.png&#34; width=&#34;auto&#34; height=&#34;auto&#34; alt=&#34;LibreTube&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0.en.html&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/license-widget.svg?sanitize=true&#34; alt=&#34;GPL-v3&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#LibreTube:matrix.org&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/mat-widget.svg?sanitize=true&#34; alt=&#34;Matrix&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/libretube&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/tg-widget.svg?sanitize=true&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/libretube&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/tw-widget.svg?sanitize=true&#34; alt=&#34;Twitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/Libretube/&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/rd-widget.svg?sanitize=true&#34; alt=&#34;Reddit&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.github.libretube/&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/fdrload.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/libre-tube/LibreTube/releases/latest&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/ghload.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/LibreTube&#34;&gt;&lt;img src=&#34;https://libre-tube.github.io/assets/tgload.png&#34; alt=&#34;Get it on GitHub&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_1.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_2.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_3.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_3.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_4.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_4.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_5.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_5.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_6.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_6.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_7.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_7.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_8.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_8.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_9.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/libre-tube/LibreTube/master/fastlane/metadata/android/en-US/images/phoneScreenshots/shot_9.png&#34; width=&#34;160&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Feature&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User Accounts&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Subscriptions&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;User Playlists&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Channel Playlists&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Search Filters&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SponsorBlock&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Subtitles&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Comments&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Whether you have ideas, translations, design changes, code cleaning, or real heavy code changes, help is always welcome. The more is done the better it gets!&lt;/p&gt; &#xA;&lt;p&gt;WARNING: THIS IS A BETA VERSION, THEREFORE YOU MAY ENCOUNTER BUGS. IF YOU DO, OPEN AN ISSUE VIA OUR GITHUB REPOSITORY.&lt;/p&gt; &#xA;&lt;h3&gt;Translation&lt;/h3&gt; &#xA;&lt;a href=&#34;https://hosted.weblate.org/projects/libretube/#languages&#34;&gt; &lt;img src=&#34;https://hosted.weblate.org/widgets/libretube/-/287x66-grey.png&#34; alt=&#34;Translation status&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Donate&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;BTC:&lt;/strong&gt; &lt;code&gt;bc1q0hk2smc74ej8fxupfrp05wk867e54e2zztnxfc&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;XMR:&lt;/strong&gt; &lt;code&gt;44txdmy4E5bDzMYQJh1ZSoHbrp1sWfpGa2FYg26L2ya8EaRejPsh42yVrYhepW9P4YWvrqmTZvms35z5FDgqy1xcVewk18d&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Mirrors (read-only)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://gitlab.com/libretube/LibreTube&#34;&gt;GitLab&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>tytydraco/LADB</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/tytydraco/LADB</id>
    <link href="https://github.com/tytydraco/LADB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A local ADB shell for Android!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LADB&lt;/h1&gt; &#xA;&lt;p&gt;A local ADB shell for Android!&lt;/p&gt; &#xA;&lt;h1&gt;How does it work?&lt;/h1&gt; &#xA;&lt;p&gt;LADB bundles an ADB server within the app libraries. Normally, this server cannot connect to the local device because it requires an active USB connection. However, Android&#39;s Wireless ADB Debugging feature allows the server and the client to speak to each other locally.&lt;/p&gt; &#xA;&lt;h1&gt;Initial Setup:&lt;/h1&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;About -&amp;gt; Build Number -&amp;gt; Click 7 times&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; Wireless ADB Debugging -&amp;gt; On&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; ADB Debugging -&amp;gt; On&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Troubleshooting:&lt;/h1&gt; &#xA;&lt;p&gt;If you encounter &#34;device unauthorized&#34; or &#34;multiple devices connected&#34;, try this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Enable Airplane Mode&lt;/li&gt; &#xA; &lt;li&gt;Disconnect any USB devices&lt;/li&gt; &#xA; &lt;li&gt;Kill and restart LADB&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Still not working? Try this:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Close LADB completely&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; Wireless ADB Debugging -&amp;gt; Off&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; ADB Debugging -&amp;gt; Off&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; Revoke authorizations&lt;/li&gt; &#xA; &lt;li&gt;Reboot&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; Wireless ADB Debugging -&amp;gt; On&lt;/li&gt; &#xA; &lt;li&gt;Developer Settings -&amp;gt; ADB Debugging -&amp;gt; On&lt;/li&gt; &#xA; &lt;li&gt;Enable Airplane Mode&lt;/li&gt; &#xA; &lt;li&gt;Open LADB&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Credit&lt;/h1&gt; &#xA;&lt;p&gt;Thanks to Surge1223 for compiling ADB for the ARM/ARM64 architecture.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;While this project is GPLv3 licensed, I would like to add an additional parameter: please do not publish unofficial (user) LADB builds to the Google Play Store.&lt;/p&gt; &#xA;&lt;p&gt;Still confused? Email me at &lt;a href=&#34;mailto:tylernij@gmail.com&#34;&gt;tylernij@gmail.com&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skydoves/android-developer-roadmap</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/skydoves/android-developer-roadmap</id>
    <link href="https://github.com/skydoves/android-developer-roadmap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🗺 The 2022 Android Developer Roadmap suggests learning paths to understanding Android development.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Android Developer Roadmap 2022&lt;/h1&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves/android-developer-roadmap/actions/workflows/build.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/skydoves/android-developer-roadmap/actions/workflows/build.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mailchi.mp/kotlinweekly/kotlin-weekly-279&#34;&gt;&lt;img alt=&#34;Kotlin Weekly&#34; src=&#34;https://skydoves.github.io/badges/kotlin-weekly2.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://androidweekly.net/issues/issue-495&#34;&gt;&lt;img alt=&#34;Android Weekly&#34; src=&#34;https://skydoves.github.io/badges/android-weekly.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves&#34;&gt;&lt;img alt=&#34;Profile&#34; src=&#34;https://skydoves.github.io/badges/skydoves.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/README.md&#34; target=&#34;_blank&#34;&gt; English &lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/README_KR.md&#34; target=&#34;_blank&#34;&gt; 한국어 &lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/README_DE.md&#34; target=&#34;_blank&#34;&gt; Deutsch &lt;/a&gt;| &lt;a href=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/README_ES.md&#34; target=&#34;_blank&#34;&gt; Español&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/README_TR.md&#34; target=&#34;_blank&#34;&gt; Turkish&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/README_ID.md&#34; target=&#34;_blank&#34;&gt; Bahasa Indonesia&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Android Developer Roadmap 2022 suggests learning paths to understanding Android development. You can read the roadmap following the line path in the middle of the map. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each node indicates concepts of Android systems, Android SDK, and generally used libraries. It would be helpful to refer to the &lt;a href=&#34;https://developer.android.com/reference&#34;&gt;Android Developers Reference&lt;/a&gt; or GitHub for the specific terminologies. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;In addition, &lt;strong&gt;you don&#39;t need to learn everything from this roadmap&lt;/strong&gt;. So we recommend only reading the sections that would be helpful to you.&lt;/p&gt; &#xA;&lt;h2&gt;Roadmap&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/images/android_developer_roadmap.png&#34; alt=&#34;Roadmap&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Articles&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://getstream.io/blog/android-developer-roadmap/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/images/article.png&#34;&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;The 2022 Android Developer Roadmap is designed to give you a comprehensive understanding of the current Android ecosystem and provides suggested learning paths along the way to help you grasp the concepts.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;In this multipart series, you&#39;ll learn all about the Android development ecosystem following our 2022 Android Developer Roadmap, giving you a more holistic view of the Android community and how you can progress as a developer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://getstream.io/blog/android-developer-roadmap/&#34;&gt;The 2022 Android Developer Roadmap: Part 1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://getstream.io/blog/android-developer-roadmap-part-2/&#34;&gt;The 2022 Android Developer Roadmap: Part 2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://getstream.io/blog/android-developer-roadmap-part-3/&#34;&gt;The 2022 Android Developer Roadmap: Part 3&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;d like to get notified as we release future posts, join the &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/android-developer-roadmap/watchers&#34;&gt;watchers&lt;/a&gt;&lt;/strong&gt; on GitHub or follow &lt;strong&gt;&lt;a href=&#34;https://twitter.com/getstream_io&#34;&gt;Stream&lt;/a&gt;&lt;/strong&gt; on Twitter. You can also follow the &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;author&lt;/a&gt;&lt;/strong&gt; of this repository on GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Demo Application&lt;/h2&gt; &#xA;&lt;p&gt;This project includes a demo project which shows the roadmap image. You can download the latest APK on the &lt;a href=&#34;https://github.com/skydoves/android-developer-roadmap/releases&#34;&gt;Releases&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;This project doesn&#39;t cover everything, so if something is missing or should be fixed, anyone can contribute to this project by following the &lt;a href=&#34;https://raw.githubusercontent.com/skydoves/android-developer-roadmap/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; guides.&lt;/p&gt; &#xA;&lt;h2&gt;Inspiration&lt;/h2&gt; &#xA;&lt;p&gt;This project is inspired by &lt;a href=&#34;https://github.com/mobile-roadmap/android-developer-roadmap&#34;&gt;Android Developer Roadmap 2020&lt;/a&gt;. So thank you for the authors providing the roadmap ideas. Also, you can learn a lot of knowledge from the repository.&lt;/p&gt; &#xA;&lt;h2&gt;Find this project useful? &lt;span&gt;❤️&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/android-developer-roadmap/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;⭐&lt;/span&gt; &lt;br&gt; And &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;follow&lt;/a&gt;&lt;/strong&gt; me for my next creations! 🤩&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2021 Stream.IO, Inc. All Rights Reserved.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>saikou-app/saikou</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/saikou-app/saikou</id>
    <link href="https://github.com/saikou-app/saikou" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An Android Anilist only client, which lets you stream &amp; download Anime &amp; Manga.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;Saikou&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/5TXAWTU5qr&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-7289DA?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://telegram.me/saikou_app&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/saikou-app/saikou/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/saikou-app/saikou/total?color=%233DDC84&amp;amp;logo=android&amp;amp;logoColor=%23fff&amp;amp;style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Saikou is crafted based on simplistic yet state-of-the-art elegance. It is an &lt;a href=&#34;https://anilist.co/&#34;&gt;Anilist&lt;/a&gt; only client, which also lets you stream-download Anime &amp;amp; Manga. &lt;br&gt;&lt;br&gt; &lt;i&gt;Saikou (最高; Sai-kō) literally means the best in japanese. Well, we would like to say this is the best open source app for anime and manga on Android, but hey, Try it out yourself &amp;amp; judge! &lt;/i&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h3&gt;🌟STAR THIS REPOSITORY TO SUPPORT THE DEVELOPER AND ENCOURAGE THE DEVELOPMENT OF THE APPLICATION!&lt;/h3&gt; &#xA;&lt;br&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Please do not attempt to upload Saikou or any of it&#39;s forks on Playstore or any other Android appstores on the internet. Doing so, may infringe their terms and conditions. This may result to legal action or immediate take-down of the app.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-175525.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-175542.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-175551.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-175600.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-183102.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-183112.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-183120.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-182352.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&amp;nbsp;&amp;nbsp;&lt;img src=&#34;https://github.com/saikou-app/saikou-app.github.io/raw/main/assets/Screenshot_20220330-182421.png?raw=true&#34; style=&#34;width: 23%;margin:16px;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;APP FEATURES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy and functional way to both, watch anime and read manga, Ad Free.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;A completely open source app with a nice UI &amp;amp; Animations :)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The most Efficient scraping for anime and manga from multiple sources. (&lt;em&gt;Spoiler Alert : No web-views were harmed&lt;/em&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Synchronize anime and manga real-time with AniList. Easily categorise anime and manga based on your current status. (Powered by AniList)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Find all shows using thoroughly and frequently updated list of all trending, popular and ongoing anime based on scores.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;View extensive details about anime shows, movies and manga titles. It also features ability to countdown to the next episode of airing anime. (Powered by AniList &amp;amp; MyAnimeList)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Available Anime sources:-&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;SITE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;STATUS&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;DOWNLOADS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://gogoanime.cm&#34;&gt;Gogo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;SOME&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://zoro.to&#34;&gt;Zoro&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://animekisa.in&#34;&gt;9Anime&lt;/a&gt; 😮&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;NO&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://tenshi.moe&#34;&gt;Tenshi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YES&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://allanime.site&#34;&gt;AllAnime&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;YES&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Available Manga sources:-&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;SITE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;STATUS&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mangabuddy.com/&#34;&gt;MangaBuddy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mangasee123.com/&#34;&gt;MangaSee&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mangapill.com/&#34;&gt;MangaPill&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mangadex.org/&#34;&gt;MangaDex&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;https://mangareader.to/&#34;&gt;MangaReaderTo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;WORKING&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Planned Stuff&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Rework Manga Reader #18&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;User Profile&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Downloads for Manga&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;source subscribe (will notify when new chapter/ep is released)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add novel sources (1lib.in)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add new anime sources (All anime, animepahe, Real 9anime ) &amp;amp; (hentaihaven)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Add new manga sources (mangakakalot) &amp;amp; (nhentai)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;anime schedule page&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Rejected Stuff&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Sources of any language except English&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;News Section in the App&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;More Search Options&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Comment Section&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Accent Color Change (Hot Pink Supremacy.)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Subtitles Customization&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Help wanted for:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;TV support&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;PiP&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Multi Quality Download&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bulk Download&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Novel Reader&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;WANT TO CONTRIBUTE?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;All contributions are welcome, from code to documentation to graphics to design suggestions to bug reports. Please use GitHub to its fullest; contribute Pull Requests, contribute tutorials or other content- whatever you have to offer, we can use it!&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You can come hang out with our awesome community and request new features and report any bugs or issue at our discord server too.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Official Discord Server&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://discord.gg/5TXAWTU5qr&#34;&gt; &lt;img src=&#34;https://invidget.switchblade.xyz/5TXAWTU5qr&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;h3&gt;Official Telegram Group&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://telegram.me/saikou_app&#34;&gt;https://telegram.me/saikou_app&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;VISIT FOR MORE INFORMATION:-&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://saikou-app.github.io/&#34;&gt;https://saikou-app.github.io/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;DISCLAIMER&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Saikou only scrapes links from various websites and makes it easier for users to find anime and manga.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Saikou or any of its developer/staff doesn&#39;t host any of the contents found inside Saikou. Any and all images and anime/manga information found in the app are taken from various public APIs (AniList, MyAnimeList, Kitsu).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Furthermore, all of the anime/manga links found in Saikou are taken from various 3rd party anime hosting websites.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Saikou or it&#39;s owners aren&#39;t liable for any misuse of any of the contents found inside or outside of the app and cannot be held accountable for the distribution of any of the contents found inside the app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;By using Saikou, you comply to the fact that the developer of the app is not responsible for any of the contents found in the app; nonetheless they may or may not be from their legitimate sources.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;If the internet infringement issues are involved, please contact the source website. The developer does not assume any legal responsibility.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Saikou is licensed under the &lt;a href=&#34;https://raw.githubusercontent.com/saikou-app/saikou/main/LICENSE.md&#34;&gt;GNU General Public License v3.0&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uber/RIBs</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/uber/RIBs</id>
    <link href="https://github.com/uber/RIBs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Uber&#39;s cross-platform mobile architecture framework.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/uber/ribs/raw/assets/rib_horizontal_black.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; alt=&#34;RIBs&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/uber/RIBs/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/uber/RIBs/actions/workflows/android.yml/badge.svg?branch=main&#34; alt=&#34;Android CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/com.uber.rib/rib-android&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.uber.rib/rib-android.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/ribs&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/RIBs.svg?sanitize=true&#34; alt=&#34;Cocoapods Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?sanitize=true&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RIBs is the cross-platform architecture framework behind many mobile apps at Uber. The name RIBs is short for Router, Interactor and Builder, which are core components of this architecture. This framework is designed for mobile apps with a large number of engineers and nested states.&lt;/p&gt; &#xA;&lt;p&gt;The RIBs architecture provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shared architecture across iOS and Android.&lt;/strong&gt; Build cross-platform apps that have similar architecture, enabling iOS and Android teams to cross-review business logic code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Testability and Isolation.&lt;/strong&gt; Classes must be easy to unit test and reason about in isolation. Individual RIB classes have distinct responsibilities like: routing, business, view logic, creation. Plus, most RIB logic is decoupled from child RIB logic. This makes RIB classes easy to test and reason about independently.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tooling for developer productivity.&lt;/strong&gt; RIBs come with IDE tooling around code generation, memory leak detection, static analysis and runtime integrations - all which improve developer productivity for large teams or small.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;An architecture that scales.&lt;/strong&gt; This architecture has proven to scale to hundreds of engineers working on the same codebase and apps with hundreds of RIBs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To get started with RIBs, please refer to the &lt;a href=&#34;https://github.com/uber/RIBs/wiki&#34;&gt;RIBs documentation&lt;/a&gt;. This describes key concepts on RIBs, from what they are for, their structure and common use cases.&lt;/p&gt; &#xA;&lt;p&gt;To get more hands on with RIBs, we have written a &lt;a href=&#34;https://github.com/uber/RIBs/wiki&#34;&gt;series of tutorials&lt;/a&gt; that run you through the main aspects of the architecture with hands-on examples.&lt;/p&gt; &#xA;&lt;p&gt;To read about the backstory on why we created RIBs, see &lt;a href=&#34;https://eng.uber.com/new-rider-app/&#34;&gt;this blog post&lt;/a&gt; we wrote when releasing RIBs in production the first time and see &lt;a href=&#34;https://www.youtube.com/watch?v=Q5cTT0M0YXg&#34;&gt;this short video&lt;/a&gt; where we discussed how the RIBs architecture works.&lt;/p&gt; &#xA;&lt;h4&gt;What is the difference between RIBs and MV*/VIPER?&lt;/h4&gt; &#xA;&lt;p&gt;MVC, MVP, MVI, MVVM and VIPER are architecture patterns. RIBs is a framework. What differentiates RIBs from frameworks based on MV*/VIPER is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Business logic drives the app, not the view tree&lt;/strong&gt;. Unlike with MV*/VIPER, a RIB does not have to have a view. This means that the app hierarchy is driven by the business logic, not the view tree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Independent business logic and view trees&lt;/strong&gt;. RIBs decouple how the business logic scopes are structured from view hierarchies. This allows the application to have a deep business logic tree, isolating business logic nodes, while maintaining a shallow view hierarchy making layouts, animations and transitions easy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are some other novel things about RIBs. However, these could also be implemented with other MV*/VIPER frameworks. These are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-platform approach&lt;/strong&gt;, allowing iOS and Android architecture to stay in sync.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tooling for easier adoption&lt;/strong&gt; on larger apps or teams. Tooling we are open sourcing includes IDE plugins for code generation and static code analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strong opinions about how state should be communicated&lt;/strong&gt;, using DI and Rx. Each RIB defines its dependencies and what dependencies it needs from its parent. Parent components that fulfill a child’s parent dependencies are provided to child Builders as a constructor dependency to allow for hierarchical DI scoping. This means that information is communicated via these dependencies up and down the tree.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Integrate using your preferred installation mechanism&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For usage of the tooling built around RIBs, please see the &lt;a href=&#34;https://github.com/uber/RIBs/wiki#rib-tooling&#34;&gt;Tooling section&lt;/a&gt; in our documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Installation for Android&lt;/h2&gt; &#xA;&lt;p&gt;To integrate the recommended minimum setup for RIBs add the following to your &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;  annotationProcessor &#39;com.uber.rib:rib-compiler-test:0.13.0&#39;&#xA;  implementation &#39;com.uber.rib:rib-android:0.13.0&#39;&#xA;  testImplementation &#39;com.uber.rib:rib-test:0.13.0&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are a number of extension packages available as well including Kotlin extensions, Jetpack Compose support, Coroutines support&lt;/p&gt; &#xA;&lt;h2&gt;Installation for iOS&lt;/h2&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;p&gt;To integrate RIBs into your project add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;RIBs&#39;, &#39;~&amp;gt; 0.9&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Carthage&lt;/h4&gt; &#xA;&lt;p&gt;To integrate RIBs into your project using Carthage add the following to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;github &#34;uber/RIBs&#34; ~&amp;gt; 0.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;p&gt;If you like RIBs, check out other related open source projects from our team:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/needle&#34;&gt;Needle&lt;/a&gt;: a compile-time safe Swift dependency injection framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/motif&#34;&gt;Motif&lt;/a&gt;: An abstract on top of Dagger offering simpler APIs for nested scopes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-concurrency&#34;&gt;Swift Concurrency&lt;/a&gt;: a set of concurrency utility classes used by Uber, inspired by the equivalent &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/package-summary.html&#34;&gt;java.util.concurrent&lt;/a&gt; package classes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-abstract-class&#34;&gt;Swift Abstract Class&lt;/a&gt;: a light-weight library along with an executable that enables compile-time safe abstract class development for Swift projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-common&#34;&gt;Swift Common&lt;/a&gt;: common libraries used by this set of Swift open source projects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2017 Uber Technologies&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>apollographql/apollo-kotlin</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/apollographql/apollo-kotlin</id>
    <link href="https://github.com/apollographql/apollo-kotlin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🤖  A strongly-typed, caching GraphQL client for the JVM, Android, and Kotlin multiplatform.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Apollo Kotlin&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/apollographql/apollo-android/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-lightgrey.svg?maxAge=2592000&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://community.apollographql.com/new-topic?category=Help&amp;amp;tags=mobile,client&#34;&gt;&lt;img src=&#34;https://img.shields.io/discourse/status?label=Join%20the%20community&amp;amp;server=https%3A%2F%2Fcommunity.apollographql.com&#34; alt=&#34;Join the community&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.slack.com/client/T09229ZC6/C01A6KM1SBZ&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=kotlinlang&amp;amp;message=apollo-android&amp;amp;color=15a2f5&amp;amp;logo=slack&#34; alt=&#34;Slack&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/apollographql/apollo-android/actions&#34;&gt;&lt;img src=&#34;https://github.com/apollographql/apollo-android/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://repo1.maven.org/maven2/com/apollographql/apollo3/&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.apollographql.apollo3/apollo-api&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://s01.oss.sonatype.org/content/repositories/snapshots/com/apollographql/apollo3/&#34;&gt;&lt;img src=&#34;https://img.shields.io/nexus/s/com.apollographql.apollo3/apollo-api?server=https%3A%2F%2Fs01.oss.sonatype.org&amp;amp;label=oss-snapshots&#34; alt=&#34;OSS Snapshots&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Apollo Kotlin (formerly known as Apollo Android) is a GraphQL client that generates Kotlin and Java models from GraphQL queries.&lt;/p&gt; &#xA;&lt;p&gt;Apollo Kotlin executes queries and mutations against a GraphQL server and returns results as query-specific Kotlin types. This means you don&#39;t have to deal with parsing JSON, or passing around &lt;code&gt;Map&lt;/code&gt;s and making clients cast values to the right type manually. You also don&#39;t have to write model types yourself, because these are generated from the GraphQL definitions your UI uses.&lt;/p&gt; &#xA;&lt;p&gt;Because generated types are query-specific, you can only access data that you actually specify as part of a query. If you don&#39;t ask for a particular field in a query, you can&#39;t access the corresponding property on the returned data structure.&lt;/p&gt; &#xA;&lt;p&gt;This library is designed primarily with Android in mind, but you can use it in any Java/Kotlin app, including multiplatform.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java and Kotlin Multiplatform code generation&lt;/li&gt; &#xA; &lt;li&gt;Queries, Mutations and Subscriptions&lt;/li&gt; &#xA; &lt;li&gt;Reflection-free parsing&lt;/li&gt; &#xA; &lt;li&gt;Normalized cache&lt;/li&gt; &#xA; &lt;li&gt;Custom scalar types&lt;/li&gt; &#xA; &lt;li&gt;HTTP cache&lt;/li&gt; &#xA; &lt;li&gt;Auto Persisted Queries&lt;/li&gt; &#xA; &lt;li&gt;Query batching&lt;/li&gt; &#xA; &lt;li&gt;File uploads&lt;/li&gt; &#xA; &lt;li&gt;Espresso IdlingResource&lt;/li&gt; &#xA; &lt;li&gt;Fake models for tests&lt;/li&gt; &#xA; &lt;li&gt;AppSync and graphql-ws websockets&lt;/li&gt; &#xA; &lt;li&gt;GraphQL AST parser&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Multiplatform&lt;/h2&gt; &#xA;&lt;p&gt;Apollo Kotlin is a &lt;a href=&#34;https://kotlinlang.org/docs/multiplatform.html&#34;&gt;Kotlin Multiplatform&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;Here&#39;s the current matrix of supported features per platform:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;jvm&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Apple¹&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;js&lt;/code&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;code&gt;linuxX64&lt;/code&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;apollo-api&lt;/code&gt; (models)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;apollo-runtime&lt;/code&gt; (network, query batching, apq, ...)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🚫&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;apollo-normalized-cache&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🚫&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;apollo-adapters&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🚫&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;apollo-normalized-cache-sqlite&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🚫&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🚫&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;apollo-http-cache&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;✅&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🚫&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🚫&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;🚫&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;¹: Apple currently includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;macosX64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;macosArm64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;iosArm64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;iosX64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;iosSimulatorArm64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;watchosArm64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;watchosSimulatorArm64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tvosArm64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tvosX64&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;tvosSimulatorArm64&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Check &lt;a href=&#34;https://www.apollographql.com/docs/android/&#34;&gt;the project website&lt;/a&gt; for in depth documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Getting started&lt;/h2&gt; &#xA;&lt;p&gt;If you are new to GraphQL, check out &lt;a href=&#34;https://www.apollographql.com/docs/android/tutorial/00-introduction/&#34;&gt;the tutorial&lt;/a&gt; that will guide you through building an Android app using Apollo, Kotlin and coroutines.&lt;/p&gt; &#xA;&lt;p&gt;If you&#39;d like to add Apollo Kotlin to an existing project, follow these steps:&lt;/p&gt; &#xA;&lt;p&gt;Add the plugin to your &lt;code&gt;build.gradle.kts&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;  id(&#34;com.apollographql.apollo3&#34;).version(&#34;3.3.0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add the runtime dependency:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies { &#xA;  implementation(&#34;com.apollographql.apollo3:apollo-runtime:3.3.0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set the package name to use for the generated models:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;apollo {&#xA;  packageName.set(&#34;com.example&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Apollo Kotlin supports three types of files:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;.graphqls&lt;/code&gt; schema files: describes the types in your backend using the GraphQL syntax.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.json&lt;/code&gt; schema files: describes the types in your backend using the Json syntax.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.graphql&lt;/code&gt; executable files: describes your queries and operations in the GraphQL syntax.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;By default, Apollo Kotlin requires a schema in your module&#39;s &lt;code&gt;src/main/graphql&lt;/code&gt; directory. You can download a schema using introspection with the &lt;code&gt;./gradlew downloadApolloSchema&lt;/code&gt; task. Sometimes introspection is disabled and you will have to ask your backend team to provide a schema. Copy this schema to your module:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;cp ${schema} ${module}/src/main/graphql/ &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Write a query in a &lt;code&gt;${module}/src/main/graphql/GetRepository.graphql&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-graphql&#34;&gt;query HeroQuery($id: String!) {&#xA;  hero(id: $id) {&#xA;    id&#xA;    name&#xA;    appearsIn&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Build your project, this will generate a &lt;code&gt;HeroQuery&lt;/code&gt; class that you can use with an instance of &lt;code&gt;ApolloClient&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;  // Create a client&#xA;  val apolloClient = ApolloClient.Builder()&#xA;      .serverUrl(&#34;https://example.com/graphql&#34;)&#xA;      .build()&#xA;&#xA;  // Execute your query. This will suspend until the response is received.&#xA;  val response = apolloClient.query(HeroQuery(id = &#34;1&#34;)).execute()&#xA;&#xA;  println(&#34;Hero.name=${response.data?.hero?.name}&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;To learn more about other Apollo Kotlin APIs:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Execute your first &lt;a href=&#34;https://www.apollographql.com/docs/android/essentials/mutations/&#34;&gt;mutation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Handle &lt;a href=&#34;https://www.apollographql.com/docs/android/essentials/custom-scalars/&#34;&gt;custom scalar types&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Factor common patterns using &lt;a href=&#34;https://www.apollographql.com/docs/android/essentials/inline-fragments&#34;&gt;fragments&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Proguard / R8 configuration&lt;/h2&gt; &#xA;&lt;p&gt;As the code generated by Apollo Kotlin doesn&#39;t use any reflection, it can safely be optimized / obfuscated by Proguard or R8, so no particular exclusions need to be configured.&lt;/p&gt; &#xA;&lt;h2&gt;IntelliJ Plugin&lt;/h2&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://jimkyndemeyer.github.io/js-graphql-intellij-plugin/&#34;&gt;JS Graphql IntelliJ Plugin&lt;/a&gt; provides auto-completion, error highlighting, and go-to-definition functionality for your &lt;code&gt;.graphql&lt;/code&gt; files. You can create a &lt;a href=&#34;https://jimkyndemeyer.github.io/js-graphql-intellij-plugin/docs/developer-guide#working-with-graphql-endpoints-and-scratch-files&#34;&gt;&lt;code&gt;.graphqlconfig&lt;/code&gt;&lt;/a&gt; file to use GraphQL scratch files to work with your schema outside product code (such as to write temporary queries to test resolvers).&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;The latest version is &lt;a href=&#34;https://repo1.maven.org/maven2/com/apollographql/apollo3/&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.apollographql.apollo3/apollo-api&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://github.com/apollographql/apollo-android/releases&#34;&gt;changelog&lt;/a&gt; for the release history.&lt;/p&gt; &#xA;&lt;p&gt;Releases are hosted on &lt;a href=&#34;https://repo1.maven.org/maven2/com/apollographql/apollo3/&#34;&gt;Maven Central&lt;/a&gt;. The plugin is additionally hosted on the &lt;a href=&#34;https://plugins.gradle.org/plugin/com.apollographql.apollo3&#34;&gt;Gradle Plugin Portal&lt;/a&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;  id(&#34;com.apollographql.apollo3&#34;).version(&#34;3.3.0&#34;)&#xA;}&#xA;&#xA;repositories {&#xA;  mavenCentral()&#xA;}&#xA;&#xA;dependencies {&#xA;  implementation(&#34;com.apollographql.apollo3:apollo-runtime:3.3.0&#34;)&#xA;&#xA;  // optional: if you want to use the normalized cache&#xA;  implementation(&#34;com.apollographql.apollo3:apollo-normalized-cache-sqlite:3.3.0&#34;)&#xA;  // optional: if you just want the generated models and parsers and write your own HTTP code/cache code, you can remove apollo-runtime&#xA;  // and use apollo-api instead  &#xA;  implementation(&#34;com.apollographql.apollo3:apollo-api:3.3.0&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Snapshots&lt;/h2&gt; &#xA;&lt;p&gt;Latest development changes are available in Sonatype&#39;s snapshots repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// build.gradle.kts&#xA;repositories {&#xA;  maven {&#xA;    url = uri(&#34;https://s01.oss.sonatype.org/content/repositories/snapshots/&#34;)&#xA;  }&#xA;  mavenCentral()&#xA;  // other repositories...&#xA;}&#xA;&#xA;// settings.gradle.kts&#xA;pluginManagement {&#xA;  repositories {&#xA;    maven {&#xA;      url = uri(&#34;https://s01.oss.sonatype.org/content/repositories/snapshots/&#34;)&#xA;    }&#xA;    gradlePluginPortal()&#xA;    mavenCentral()&#xA;    // other repositories...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And then use the &lt;code&gt;3.3.1-SNAPSHOT&lt;/code&gt; version for the plugin and libraries.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;Some platforms have specific requirements:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android API level 21+ (&lt;code&gt;apollo-http-cache&lt;/code&gt; and &lt;code&gt;apollo-adapters&lt;/code&gt; require enabling &lt;a href=&#34;https://developer.android.com/studio/write/java8-support#library-desugaring&#34;&gt;core library desugaring&lt;/a&gt; on Android API levels &amp;lt; 26)&lt;/li&gt; &#xA; &lt;li&gt;JDK 8+ (JDK 11+ when using Android Gradle Plugin 7.0+)&lt;/li&gt; &#xA; &lt;li&gt;iOS 13+&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For building, it requires:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Gradle 5.6&lt;/li&gt; &#xA; &lt;li&gt;Kotlin 1.5+ (1.6+ for native)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to contribute, please see &lt;a href=&#34;https://github.com/apollographql/apollo-android/raw/main/CONTRIBUTING.md&#34;&gt;Contributing.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Community integrations&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;If you&#39;re using the &lt;a href=&#34;https://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; build tool, &lt;a href=&#34;https://github.com/aoudiamoncef/apollo-client-maven-plugin&#34;&gt;https://github.com/aoudiamoncef/apollo-client-maven-plugin&lt;/a&gt; is a Maven plugin that calls the Apollo Android compiler to generate your Java/Kotlin sources.&lt;/li&gt; &#xA; &lt;li&gt;If you&#39;re using &lt;a href=&#34;https://hexdocs.pm/absinthe_phoenix/readme.html&#34;&gt;Absinthe Phoenix subscriptions&lt;/a&gt;, &lt;a href=&#34;https://github.com/ajacquierbret/kotlin-phoenix&#34;&gt;kotlin-phoenix&lt;/a&gt; has a &lt;a href=&#34;https://github.com/ajacquierbret/kotlin-phoenix/raw/main/kotlinphoenix-adapters/src/commonMain/kotlin/io/github/ajacquierbret/kotlinphoenix/adapters/apollo/PhoenixNetworkTransport.kt&#34;&gt;PhoenixNetworkTransport&lt;/a&gt; that you can use together with &lt;code&gt;ApolloClient&lt;/code&gt; (&lt;a href=&#34;https://github.com/ajacquierbret/kotlin-phoenix/tree/main/kotlinphoenix-adapters&#34;&gt;doc&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/joreilly/MortyComposeKMM&#34;&gt;MortyComposeKMM&lt;/a&gt;: A Kotlin Multiplatform Github template using Apollo Kotlin, SwiftUI and Jetpack Compose.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=GN6LHrqyimI&#34;&gt;A journey to Kotlin multiplatform&lt;/a&gt;: how the project was moved to Kotlin multiplatform, talk given at Kotliners in June 2020.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://fragmentedpodcast.com/episodes/125/&#34;&gt;#125, Fragmented Podcast&lt;/a&gt;: Why&#39;s and How&#39;s about Apollo Kotlin and the entire journey.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://graphql.org&#34;&gt;GraphQL.org&lt;/a&gt; for an introduction and reference to GraphQL itself.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://www.apollographql.com/&#34;&gt;apollographql.com&lt;/a&gt; to learn about Apollo open-source and commercial tools.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/blog/&#34;&gt;The Apollo blog&lt;/a&gt; for long-form articles about GraphQL, feature announcements for Apollo, and guest articles from the community.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/apollographql&#34;&gt;The Apollo Twitter account&lt;/a&gt; for in-the-moment news.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who is Apollo?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://apollographql.com/&#34;&gt;Apollo&lt;/a&gt; builds open-source software and a graph platform to unify GraphQL across your apps and services. We help you ship faster with:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/studio/develop/&#34;&gt;Apollo Studio&lt;/a&gt; – A free, end-to-end platform for managing your GraphQL lifecycle. Track your GraphQL schemas in a hosted registry to create a source of truth for everything in your graph. Studio provides an IDE (Apollo Explorer) so you can explore data, collaborate on queries, observe usage, and safely make schema changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/apollo-federation&#34;&gt;Apollo Federation&lt;/a&gt; – The industry-standard open architecture for building a distributed graph. Use Apollo’s gateway to compose a unified graph from multiple subgraphs, determine a query plan, and route requests across your services.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/apollo-client/&#34;&gt;Apollo Client&lt;/a&gt; – The most popular GraphQL client for the web. Apollo also builds and maintains &lt;a href=&#34;https://github.com/apollographql/apollo-ios&#34;&gt;Apollo iOS&lt;/a&gt; and &lt;a href=&#34;https://github.com/apollographql/apollo-android&#34;&gt;Apollo Kotlin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.apollographql.com/docs/apollo-server/&#34;&gt;Apollo Server&lt;/a&gt; – A production-ready JavaScript GraphQL server that connects to any microservice, API, or database. Compatible with all popular JavaScript frameworks and deployable in serverless environments.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Learn how to build with Apollo&lt;/h2&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://odyssey.apollographql.com/&#34;&gt;Odyssey&lt;/a&gt; learning platform, the perfect place to start your GraphQL journey with videos and interactive code challenges. Join the &lt;a href=&#34;https://community.apollographql.com/&#34;&gt;Apollo Community&lt;/a&gt; to interact with and get technical help from the GraphQL community.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/compose-samples</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/android/compose-samples</id>
    <link href="https://github.com/android/compose-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Official Jetpack Compose samples.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jetpack Compose Samples&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/samples_montage.gif&#34; alt=&#34;Jetpack Compose Samples&#34; width=&#34;1024&#34;&gt; &#xA;&lt;p&gt;This repository contains a set of individual Android Studio projects to help you learn about Compose in Android. Each sample demonstrates different use cases, complexity levels and APIs.&lt;/p&gt; &#xA;&lt;p&gt;For more information, please &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;read the documentation&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;💻 Requirements&lt;/h2&gt; &#xA;&lt;p&gt;To try out these sample apps, you need to use &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt;. You can clone this repository or import the project from Android Studio following the steps &lt;a href=&#34;https://developer.android.com/jetpack/compose/setup#sample&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;🧬 Samples&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetnews.png&#34; alt=&#34;JetNews&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt; A sample blog post viewer that demonstrates the use of Compose with a typical Material app and real-world architecture. &lt;br&gt;&lt;br&gt; • Medium complexity&lt;br&gt;• Varied UI&lt;br&gt;• Light &amp;amp; dark themes&lt;br&gt;• Resource loading&lt;br&gt;• UI Testing &lt;br&gt;&lt;br&gt; &lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/JetNews/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/JetNews.png&#34; width=&#34;320&#34; alt=&#34;Jetnews sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetchat.png&#34; alt=&#34;Jetchat&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A sample chat app that focuses on UI state patterns and text input.&lt;br&gt;&lt;br&gt;• Low complexity&lt;br&gt;• Material Design 3 theme and Material You dynamic color&lt;br&gt;• Resource loading&lt;br&gt;• Back button handling&lt;br&gt;• Integration with Architecture Components: Navigation, Fragments, LiveData, ViewModel&lt;br&gt;• Animation&lt;br&gt;• UI Testing&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Jetchat/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Jetchat.png&#34; width=&#34;320&#34; alt=&#34;Jetchat sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetsurvey.png&#34; alt=&#34;Jetsurvey&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A sample survey app that showcases text input, validation and UI state management in Compose.&lt;br&gt;&lt;br&gt;• Low complexity&lt;br&gt;• &lt;code&gt;TextField&lt;/code&gt; and form validation&lt;br&gt;• Snackbar implementation&lt;br&gt;• Element reusability and styling&lt;br&gt;• Various form elements&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Jetsurvey/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Jetsurvey.png&#34; width=&#34;320&#34; alt=&#34;Jetsurvey sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetsnack.png&#34; alt=&#34;Jetsnack&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;Jetsnack is a sample snack ordering app built with Compose.&lt;br&gt;&lt;br&gt;• Medium complexity&lt;br&gt;• Custom design system&lt;br&gt;• Custom layouts&lt;br&gt;• Animation&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Jetsnack/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Jetsnack.png&#34; width=&#34;320&#34; alt=&#34;Jetsnack sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/jetcaster.png&#34; alt=&#34;Jetcaster&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A sample podcast app that features a full-featured, Redux-style architecture and showcases dynamic themes.&lt;br&gt;&lt;br&gt;• Advanced sample&lt;br&gt;• Dynamic theming using podcast artwork&lt;br&gt;• Image fetching&lt;br&gt;• &lt;a href=&#34;https://developer.android.com/reference/kotlin/android/view/WindowInsets&#34;&gt;&lt;code&gt;WindowInsets&lt;/code&gt;&lt;/a&gt; support&lt;br&gt;• Coroutines&lt;br&gt;• Local storage with Room&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Jetcaster/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Jetcaster.png&#34; width=&#34;320&#34; alt=&#34;Jetcaster sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/rally.png&#34; alt=&#34;Rally&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A Compose implementation of the Rally Material study, a financial app that focuses on data, charts, reusability and animations.&lt;br&gt;&lt;br&gt;• Low complexity&lt;br&gt;• Material theming with a dark-only theme&lt;br&gt;• Custom layouts and reusable elements&lt;br&gt;• Charts and tables&lt;br&gt;• Animations&lt;br&gt;• Screenshot tests&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Rally/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Rally.png&#34; width=&#34;320&#34; alt=&#34;Rally sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/crane.png&#34; alt=&#34;Crane&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A Compose implementation of the Crane Material study, a travel app that uses Material Design components and Material Theming to create a personalized, on-brand experience.&lt;br&gt;&lt;br&gt;• Medium complexity&lt;br&gt;• Draggable UI elements&lt;br&gt;• UI state handling&lt;br&gt;• UI Tests&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Crane/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Crane.png&#34; width=&#34;320&#34; alt=&#34;Crane sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/owl.png&#34; alt=&#34;Owl&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A Compose implementation of the Owl Material study. The Owl brand uses bold color, shape, and typography to express its brand attributes: energy, daring, and fun.&lt;br&gt;&lt;br&gt;• Medium complexity&lt;br&gt;• Material theming &amp;amp; light/dark themes&lt;br&gt;• Custom layout&lt;br&gt;• Animation&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/compose-samples/main/Owl/&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Owl.png&#34; width=&#34;320&#34; alt=&#34;Owl sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🧬 Additional samples&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Project&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/material_catalog.png&#34; alt=&#34;Material Catalog&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A catalog of Material Design components and features available in Jetpack Compose. See how to implement them and how they look and behave on real devices.&lt;br&gt;&lt;br&gt;• Lives in AOSP—always up to date&lt;br&gt;• Uses the same samples as API reference docs&lt;br&gt;• Theme picker to change Material Theming values at runtime&lt;br&gt;• Links to guidelines, docs, source code, and issue tracker&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=androidx.compose.material.catalog&#34;&gt;&amp;gt; Get it on Google Play&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://cs.android.com/androidx/platform/frameworks/support/+/androidx-main:compose/integration-tests/material-catalog&#34;&gt;&amp;gt; Browse on AOSP&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Material_Catalog.png&#34; width=&#34;320&#34; alt=&#34;Material Catalog sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/sunflower.png&#34; alt=&#34;Sunflower&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A gardening app illustrating Android development best practices with Android Jetpack. The &lt;code&gt;compose&lt;/code&gt; branch is partially built with Jetpack Compose.&lt;br&gt;&lt;br&gt;• Compose working in an existing app: including integration with strings, resources, and themes and styles&lt;br&gt;• Integration with an existing architecture based on Jetpack libraries&lt;br&gt;• &lt;code&gt;CollapsingToolbarLayout&lt;/code&gt; behavior implemented manually with Compose&lt;br&gt;• Showing &lt;a href=&#34;https://material.io/components/snackbars&#34;&gt;Snackbars&lt;/a&gt; with Compose&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://goo.gle/sunflower-compose&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Sunflower.png&#34; width=&#34;320&#34; alt=&#34;Sunflower sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/tivi.png&#34; alt=&#34;Tivi&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;A work-in-progress TV show tracking Android app, which connects to &lt;a href=&#34;https://www.trakt.tv&#34;&gt;Trakt.tv&lt;/a&gt;.&lt;br&gt;&lt;br&gt;• Entirely written in &lt;a href=&#34;https://kotlinlang.org&#34;&gt;Kotlin&lt;/a&gt; and uses &lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines/coroutines-guide.html&#34;&gt;Kotlin Coroutines&lt;/a&gt; throughout&lt;br&gt;• Uses many of the &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture&#34;&gt;Architecture Components&lt;/a&gt;: Room, Lifecycle, Navigation&lt;br&gt;• Uses &lt;a href=&#34;https://dagger.dev/hilt&#34;&gt;Hilt&lt;/a&gt; for dependency injection&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://tivi.app&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/Tivi.jpg&#34; width=&#34;320&#34; alt=&#34;Tivi sample demo&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;br&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/nia.png&#34; alt=&#34;Now in Android&#34; width=&#34;240&#34;&gt; &lt;br&gt;&lt;br&gt;An app for keeping up to date with the latest news and developments in Android.&lt;br&gt;&lt;br&gt;• &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; first app.&lt;br&gt;• Implements the recommended Android &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;Architecture Guidelines&lt;/a&gt; &lt;br&gt;• Integrates &lt;a href=&#34;https://developer.android.com/jetpack&#34;&gt;Jetpack Libraries&lt;/a&gt; holistically in the context of a real world app&lt;br&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/android/nowinandroid&#34;&gt;&amp;gt; Browse&lt;/a&gt;&lt;/strong&gt; &lt;br&gt;&lt;br&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/compose-samples/main/readme/screenshots/NiA.png&#34; width=&#34;320&#34; alt=&#34;Now In Android Github Repository&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2020 The Android Open Source Project&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>android/architecture-samples</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/android/architecture-samples</id>
    <link href="https://github.com/android/architecture-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of samples to discuss and showcase different architectural tools and patterns for Android apps.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Architecture Blueprints&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/googlesamples/android-architecture/wiki/images/aab-logov2.png&#34; alt=&#34;Illustration by Virginia Poltrack&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;Android Architecture Blueprints is a project to showcase different architectural approaches to developing Android apps. In its different branches you&#39;ll find the same app (a TODO app) implemented with small differences.&lt;/p&gt; &#xA;&lt;p&gt;In this branch you&#39;ll find:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User Interface built with &lt;strong&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;A single-activity architecture, using &lt;strong&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose/navigation&#34;&gt;Navigation Compose&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A presentation layer that contains a Compose screen (View) and a &lt;strong&gt;ViewModel&lt;/strong&gt; per screen (or feature).&lt;/li&gt; &#xA; &lt;li&gt;Reactive UIs using &lt;strong&gt;&lt;a href=&#34;https://developer.android.com/kotlin/flow&#34;&gt;Flow&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=&#34;https://kotlinlang.org/docs/coroutines-overview.html&#34;&gt;coroutines&lt;/a&gt;&lt;/strong&gt; for asynchronous operations.&lt;/li&gt; &#xA; &lt;li&gt;A &lt;strong&gt;data layer&lt;/strong&gt; with a repository and two data sources (local using Room and a fake remote).&lt;/li&gt; &#xA; &lt;li&gt;Two &lt;strong&gt;product flavors&lt;/strong&gt;, &lt;code&gt;mock&lt;/code&gt; and &lt;code&gt;prod&lt;/code&gt;, &lt;a href=&#34;https://android-developers.googleblog.com/2015/12/leveraging-product-flavors-in-android.html&#34;&gt;to ease development and testing&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;A collection of unit, integration and e2e &lt;strong&gt;tests&lt;/strong&gt;, including &#34;shared&#34; tests that can be run on emulator/device or Robolectric.&lt;/li&gt; &#xA; &lt;li&gt;A simple service locator for inversion of control.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Variations&lt;/h2&gt; &#xA;&lt;p&gt;This project hosts each sample app in separate repository branches. For more information, see the &lt;code&gt;README.md&lt;/code&gt; file in each branch.&lt;/p&gt; &#xA;&lt;h3&gt;Stable samples - Kotlin&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sample&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/main&#34;&gt;main&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This branch&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/hilt&#34;&gt;hilt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A simple Hilt setup that removes the two flavors and service locator (not using Compose yet)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/livedata&#34;&gt;livedata&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses LiveData instead of StateFlow as the data stream solution&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/usecases&#34;&gt;usecases&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Adds a new domain layer that uses UseCases for business logic (not using Compose yet)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture/tree/views&#34;&gt;views&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Uses Views instead of Jetpack Compose to render UI elements on the screen&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Why a to-do app?&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://github.com/googlesamples/android-architecture/wiki/images/todoapp.gif&#34; alt=&#34;A demo illustraating the UI of the app&#34; width=&#34;288&#34; height=&#34;512&#34; style=&#34;display: inline; float: right&#34;&gt; &#xA;&lt;p&gt;The app in this project aims to be simple enough that you can understand it quickly, but complex enough to showcase difficult design decisions and testing scenarios. For more information, see the &lt;a href=&#34;https://github.com/googlesamples/android-architecture/wiki/To-do-app-specification&#34;&gt;app&#39;s specification&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;What is it not?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A UI/Material Design sample. The interface of the app is deliberately kept simple to focus on architecture. Check out the &lt;a href=&#34;https://github.com/android/compose-samples&#34;&gt;Compose Samples&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;A complete Jetpack sample covering all libraries. Check out &lt;a href=&#34;https://github.com/googlesamples/android-sunflower&#34;&gt;Android Sunflower&lt;/a&gt; or the advanced &lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/GithubBrowserSample&#34;&gt;GitHub Browser Sample&lt;/a&gt; instead.&lt;/li&gt; &#xA; &lt;li&gt;A real production app with network access, user authentication, etc. Check out the &lt;a href=&#34;https://github.com/android/nowinandroid&#34;&gt;Now in Android app&lt;/a&gt; instead.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Who is it for?&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intermediate developers and beginners looking for a way to structure their app in a testable and maintainable way.&lt;/li&gt; &#xA; &lt;li&gt;Advanced developers looking for quick reference.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Opening a sample in Android Studio&lt;/h2&gt; &#xA;&lt;p&gt;To open one of the samples in Android Studio, begin by checking out one of the sample branches, and then open the root directory in Android Studio. The following series of steps illustrate how to open the &lt;a href=&#34;https://raw.githubusercontent.com/android/architecture-samples/main/tree/usecases/&#34;&gt;usecases&lt;/a&gt; sample.&lt;/p&gt; &#xA;&lt;p&gt;Clone the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git clone git@github.com:android/architecture-samples.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This step checks out the master branch. If you want to change to a different sample:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git checkout usecases&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To review a different sample, replace &lt;code&gt;usecases&lt;/code&gt; with the name of sample you want to check out.&lt;/p&gt; &#xA;&lt;p&gt;Finally open the &lt;code&gt;architecture-samples/&lt;/code&gt; directory in Android Studio.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2022 Google, Inc.&#xA;&#xA;Licensed to the Apache Software Foundation (ASF) under one or more contributor&#xA;license agreements. See the NOTICE file distributed with this work for&#xA;additional information regarding copyright ownership. The ASF licenses this&#xA;file to you under the Apache License, Version 2.0 (the &#34;License&#34;); you may not&#xA;use this file except in compliance with the License. You may obtain a copy of&#xA;the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT&#xA;WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the&#xA;License for the specific language governing permissions and limitations under&#xA;the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>SimpleMobileTools/Simple-Gallery</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/SimpleMobileTools/Simple-Gallery</id>
    <link href="https://github.com/SimpleMobileTools/Simple-Gallery" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Browse your memories without any interruptions with this photo and video gallery&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Simple Gallery&lt;/h1&gt; &#xA;&lt;img alt=&#34;Logo&#34; src=&#34;https://raw.githubusercontent.com/SimpleMobileTools/Simple-Gallery/master/fastlane/metadata/android/en-US/images/icon.png&#34; width=&#34;120&#34;&gt; &#xA;&lt;p&gt;Simple Gallery Pro is a highly customizable lightweight gallery loved by millions of people for its great user experience. Organize and edit your photos, recover deleted files with the recycle bin, protect &amp;amp; hide files and easily view a huge variety of different photo and video formats including RAW, SVG, GIF, panoramic and much more.&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;SIMPLE GALLERY PRO – FEATURES&lt;/h2&gt; &#xA;&lt;p&gt;• A beautiful modern gallery with no ads or popups&lt;/p&gt; &#xA;&lt;p&gt;• Photo editor – crop, rotate, resize, draw, filters &amp;amp; more&lt;/p&gt; &#xA;&lt;p&gt;• No internet access needed, giving you more privacy, security and stability&lt;/p&gt; &#xA;&lt;p&gt;• No unnecessary permissions required&lt;/p&gt; &#xA;&lt;p&gt;• Quickly search images, videos &amp;amp; other files&lt;/p&gt; &#xA;&lt;p&gt;• Open and view many different photo and video types (RAW, SVG, panoramic, GIF etc)&lt;/p&gt; &#xA;&lt;p&gt;• A variety of intuitive gestures to easily edit, rotate &amp;amp; organize files&lt;/p&gt; &#xA;&lt;p&gt;• Lots of ways to filter, group and sort files&lt;/p&gt; &#xA;&lt;p&gt;• Customize the appearance of Simple Gallery Pro&lt;/p&gt; &#xA;&lt;p&gt;• Available in over 30 languages&lt;/p&gt; &#xA;&lt;p&gt;• Mark files as favorites for quick access&lt;/p&gt; &#xA;&lt;p&gt;• Protect your photos &amp;amp; videos with a pattern, pin or fingerprint&lt;/p&gt; &#xA;&lt;p&gt;• Use pin, pattern &amp;amp; fingerprint to protect the app launch or specific functions too&lt;/p&gt; &#xA;&lt;p&gt;• Recover deleted photos &amp;amp; videos from the recycle bin&lt;/p&gt; &#xA;&lt;p&gt;• Toggle visibility of files to hide photos &amp;amp; videos&lt;/p&gt; &#xA;&lt;p&gt;• Create a customizable slideshow of your files with many options&lt;/p&gt; &#xA;&lt;p&gt;• View detailed information of your files (resolution, EXIF values etc)&lt;/p&gt; &#xA;&lt;p&gt;• Zoom high quality photos, videos and GIFs easily with gestures&lt;/p&gt; &#xA;&lt;p&gt;• Easily force portrait or landscape orientation for easy video viewing&lt;/p&gt; &#xA;&lt;p&gt;• Quick file share to social media, email or anywhere else&lt;/p&gt; &#xA;&lt;p&gt;• Print images or set them as wallpaper with a few clicks&lt;/p&gt; &#xA;&lt;p&gt;• Create home screen shortcuts or widgets to easily access any file or folder&lt;/p&gt; &#xA;&lt;p&gt;• Show the image location on a map, if available&lt;/p&gt; &#xA;&lt;p&gt;• Obvious presence of standard operations like rename, copy/move, un/hide, delete&lt;/p&gt; &#xA;&lt;p&gt;• Rewind videos with horizontal gestures&lt;/p&gt; &#xA;&lt;p&gt;• Change photo and video brightness, or volume with vertical gestures&lt;/p&gt; &#xA;&lt;p&gt;• Reorder, lock folders or change cover thumbnails anytime&lt;/p&gt; &#xA;&lt;p&gt;• Set any image as wallpaper without hassle&lt;/p&gt; &#xA;&lt;p&gt;… and much much more!&lt;/p&gt; &#xA;&lt;p&gt;ADVANCED PHOTO EDITOR Simple Gallery Pro makes it easy to edit your pictures on the fly. Crop, flip, rotate and resize your pictures. If you’re feeling a little more creative you can add filters and draw on your pictures!&lt;/p&gt; &#xA;&lt;p&gt;SUPPORT FOR MANY FILE TYPES Simple Gallery Pro supports a huge range of different file types including JPEG, PNG, MP4, MKV, RAW, SVG, GIF Panoramic photos, Panoramic videos and many more.&lt;/p&gt; &#xA;&lt;p&gt;HIGHLY CUSTOMIZABLE FILE MANAGER From the UI to the function buttons on the bottom toolbar, Simple Gallery Pro is highly customizable and works the way you want it to. No other gallery has this kind of flexibility! Thanks to being open source, we’re also available in over 30 languages!&lt;/p&gt; &#xA;&lt;p&gt;RECOVER DELETED PHOTOS &amp;amp; VIDEOS Accidentally deleted a precious photo or video? Don’t worry! Simple Gallery Pro features a handy recycle bin where you can recover deleted photos &amp;amp; videos easily.&lt;/p&gt; &#xA;&lt;p&gt;PROTECT &amp;amp; HIDE PHOTOS, VIDEOS &amp;amp; FILES Using pin, pattern or your device’s fingerprint scanner you can protect and hide photos, videos &amp;amp; entire albums. You can protect the app itself or place locks on specific functions of the app. For example, you can’t delete a file without a fingerprint scan, helping to protect your files from accidental deletion.&lt;/p&gt; &#xA;&lt;p&gt;Check out the full suite of Simple Tools here: &lt;a href=&#34;https://www.simplemobiletools.com&#34;&gt;https://www.simplemobiletools.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Standalone website of Simple Gallery Pro: &lt;a href=&#34;https://www.simplemobiletools.com/gallery&#34;&gt;https://www.simplemobiletools.com/gallery&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Facebook: &lt;a href=&#34;https://www.facebook.com/simplemobiletools&#34;&gt;https://www.facebook.com/simplemobiletools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Reddit: &lt;a href=&#34;https://www.reddit.com/r/SimpleMobileTools&#34;&gt;https://www.reddit.com/r/SimpleMobileTools&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Don&#39;t forget that if you uninstall any paid app within 2 hours, you will automatically be refunded. If you want a refund anytime later, just contact us at &lt;a href=&#34;mailto:hello@simplemobiletools.com&#34;&gt;hello@simplemobiletools.com&lt;/a&gt; and you will get it. That makes it easy to try it out :)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.simplemobiletools.gallery.pro&#34;&gt;&lt;img src=&#34;https://simplemobiletools.com/images/button-google-play.svg?sanitize=true&#34; alt=&#34;Get it on Google Play&#34; height=&#34;45&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.simplemobiletools.gallery.pro&#34;&gt;&lt;img src=&#34;https://simplemobiletools.com/images/button-f-droid.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;45&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;div style=&#34;display:flex;&#34;&gt; &#xA; &lt;img alt=&#34;App image&#34; src=&#34;https://raw.githubusercontent.com/SimpleMobileTools/Simple-Gallery/master/fastlane/metadata/android/en-US/images/phoneScreenshots/english/1.jpg&#34; width=&#34;30%&#34;&gt; &#xA; &lt;img alt=&#34;App image&#34; src=&#34;https://raw.githubusercontent.com/SimpleMobileTools/Simple-Gallery/master/fastlane/metadata/android/en-US/images/phoneScreenshots/english/2.jpg&#34; width=&#34;30%&#34;&gt; &#xA; &lt;img alt=&#34;App image&#34; src=&#34;https://raw.githubusercontent.com/SimpleMobileTools/Simple-Gallery/master/fastlane/metadata/android/en-US/images/phoneScreenshots/english/3.jpg&#34; width=&#34;30%&#34;&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
  <entry>
    <title>chenxiaolong/BCR</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/chenxiaolong/BCR</id>
    <link href="https://github.com/chenxiaolong/BCR" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Basic Call Recorder for rooted Android devices&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Basic Call Recorder&lt;/h1&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/chenxiaolong/BCR/master/app/images/icon.svg?sanitize=true&#34; alt=&#34;app icon&#34; width=&#34;72&#34;&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/chenxiaolong/BCR?sort=semver&#34; alt=&#34;latest release badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/license/chenxiaolong/BCR&#34; alt=&#34;license badge&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;BCR is a simple Android call recording app for rooted devices or devices running custom firmware. Once enabled, it stays out of the way and automatically records incoming and outgoing calls in the background.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chenxiaolong/BCR/master/app/images/light.png&#34; alt=&#34;light mode screenshot&#34; width=&#34;200&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/chenxiaolong/BCR/master/app/images/dark.png&#34; alt=&#34;dark mode screenshot&#34; width=&#34;200&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports Android 9 through 13&lt;/li&gt; &#xA; &lt;li&gt;Supports compressed output in various formats: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;OGG/Opus - Lossy, smallest files, default on Android 10+&lt;/li&gt; &#xA;   &lt;li&gt;M4A/AAC - Lossy, smaller files, default on Android 9&lt;/li&gt; &#xA;   &lt;li&gt;FLAC - Lossless, larger files&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Records at the device&#39;s native sample rate&lt;/li&gt; &#xA; &lt;li&gt;Supports Android&#39;s Storage Access Framework (can record to SD cards, USB devices, etc.)&lt;/li&gt; &#xA; &lt;li&gt;Quick settings toggle&lt;/li&gt; &#xA; &lt;li&gt;Material You dynamic theming&lt;/li&gt; &#xA; &lt;li&gt;No persistent notification unless a recording is in progress&lt;/li&gt; &#xA; &lt;li&gt;No network access permission&lt;/li&gt; &#xA; &lt;li&gt;No third party dependencies&lt;/li&gt; &#xA; &lt;li&gt;Works with call screening on Pixel devices (records the caller, but not the automated system)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Non-features&lt;/h3&gt; &#xA;&lt;p&gt;As the name alludes, BCR intends to be a basic as possible. The project will have succeeded at its goal if the only updates it ever needs are for compatibility with new Android versions. Thus, many potentially useful features will never be implemented, such as:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Automatic deletion of old recordings&lt;/li&gt; &#xA; &lt;li&gt;Changing the filename format&lt;/li&gt; &#xA; &lt;li&gt;Support for old Android versions (support is dropped as soon as maintenance becomes cumbersome)&lt;/li&gt; &#xA; &lt;li&gt;Workarounds for &lt;a href=&#34;https://dontkillmyapp.com/&#34;&gt;OEM-specific battery optimization and app killing behavior&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Workarounds for devices that don&#39;t support the &lt;a href=&#34;https://developer.android.com/reference/android/media/MediaRecorder.AudioSource#VOICE_CALL&#34;&gt;&lt;code&gt;VOICE_CALL&lt;/code&gt; audio source&lt;/a&gt; (eg. using microphone + speakerphone)&lt;/li&gt; &#xA; &lt;li&gt;Support for direct boot mode (the state before the device is initially unlocked after reboot)&lt;/li&gt; &#xA; &lt;li&gt;Support for stock, unrooted firmware&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download the latest version from the &lt;a href=&#34;https://github.com/chenxiaolong/BCR/releases&#34;&gt;releases page&lt;/a&gt;. To verify the digital signature, see the &lt;a href=&#34;https://raw.githubusercontent.com/chenxiaolong/BCR/master/#verifying-digital-signatures&#34;&gt;verifying digital signatures&lt;/a&gt; section.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install BCR as a system app.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;For devices rooted with Magisk&lt;/strong&gt;, simply flash the zip as a Magisk module from within the Magisk app.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;For unrooted custom firmware&lt;/strong&gt;, the files from the &lt;code&gt;system/&lt;/code&gt; folder in the zip will need to be baked into the system image (or otherwise made available on the actual &lt;code&gt;/system&lt;/code&gt; volume).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reboot and open BCR.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Enable call recording and pick an output directory. If no output directory is selected or if the output directory is no longer accessible, then recordings will be saved to &lt;code&gt;/sdcard/Android/data/com.chiller3.bcr/files&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;To install future updates, there are a couple methods:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;If installed via Magisk, the module can be updated right from Magisk Manager&#39;s modules tab. Flashing the new version in Magisk manually also works just as well.&lt;/li&gt; &#xA;   &lt;li&gt;The &lt;code&gt;.apk&lt;/code&gt; can also be extracted from the zip and be directly installed. With this method, the old version exists as a system app and the new version exists as a user-installed update to the system app. This method is more convenient if BCR is baked into the Android firmware image.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;How it works&lt;/h3&gt; &#xA;&lt;p&gt;BCR relies heavily on system app permissions in order to function properly. This is primarily because of two permissions:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;CONTROL_INCALL_EXPERIENCE&lt;/code&gt;&lt;/p&gt; &lt;p&gt;This permission allows Android&#39;s telephony service to bind to BCR&#39;s &lt;code&gt;InCallService&lt;/code&gt; without BCR being a wearable companion app, a car UI, or the default dialer. Once bound, the service will receive callbacks for call change events (eg. incoming call in the ringing state). This method is much more reliable than using the &lt;code&gt;READ_PHONE_STATE&lt;/code&gt; permission and relying on &lt;code&gt;android.intent.action.PHONE_STATE&lt;/code&gt; broadcasts.&lt;/p&gt; &lt;p&gt;This method has a couple additional benefits. Due to the way that the telephony service binds to BCR&#39;s &lt;code&gt;InCallService&lt;/code&gt;, the service can bring itself in and out of the foreground as needed when a call is in progress and access the audio stream without hitting Android 12+&#39;s background microphone access limitations. It also does not require the service to be manually started from an &lt;code&gt;ACTION_BOOT_COMPLETED&lt;/code&gt; broadcast receiver and thus is not affected by that broadcast&#39;s delays during initial boot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;code&gt;CAPTURE_AUDIO_OUTPUT&lt;/code&gt;&lt;/p&gt; &lt;p&gt;This permission is used to record from the &lt;code&gt;VOICE_CALL&lt;/code&gt; audio stream. This stream, along with some others, like &lt;code&gt;VOICE_DOWNLINK&lt;/code&gt; and &lt;code&gt;VOICE_UPLINK&lt;/code&gt;, cannot be accessed without this system permission.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;With these two permissions, BCR can reliably detect phone calls and record from the call&#39;s audio stream. The recording process pulls PCM s16le raw audio at the device&#39;s native sample rate and uses Android&#39;s built-in encoders to produce the compressed output file.&lt;/p&gt; &#xA;&lt;h3&gt;Verifying digital signatures&lt;/h3&gt; &#xA;&lt;p&gt;Both the zip file and the APK contained within are digitally signed.&lt;/p&gt; &#xA;&lt;p&gt;To verify the signature of the zip file, first retrieve the public key: &lt;code&gt;2233C479609BDCEC43BE9232F6A3B19090EFF32C&lt;/code&gt;. This is the same key used to sign the git tags in this repository.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gpg --recv-key 2233C479609BDCEC43BE9232F6A3B19090EFF32C&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, verify the signature of the zip file.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gpg --verify BCR-&amp;lt;version&amp;gt;-release.zip.asc BCR-&amp;lt;version&amp;gt;-release.zip&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The command output should include both &lt;code&gt;Good signature&lt;/code&gt; and the GPG fingerprint listed above.&lt;/p&gt; &#xA;&lt;p&gt;To verify the signature of the APK, extract it from the zip and then run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;apksigner verify --print-certs system/priv-app/com.chiller3.bcr/app-release.apk&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The SHA-256 digest of the APK signing certificate is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;d16f9b375df668c58ef4bb855eae959713d6d02e45f7f2c05ce2c27ae944f4f9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Building from source&lt;/h3&gt; &#xA;&lt;p&gt;BCR can be built like most other Android apps using Android Studio or the gradle command line.&lt;/p&gt; &#xA;&lt;p&gt;To build the APK:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew assembleDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build the Magisk module zip (which automatically runs the &lt;code&gt;assembleDebug&lt;/code&gt; task if needed):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew zipDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The output file is written to &lt;code&gt;app/build/distributions/debug/&lt;/code&gt;. The APK will be signed with the default autogenerated debug key.&lt;/p&gt; &#xA;&lt;p&gt;To create a release build with a specific signing key, set up the following environment variables:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export RELEASE_KEYSTORE=/path/to/keystore.jks&#xA;export RELEASE_KEY_ALIAS=alias_name&#xA;&#xA;read -r -s RELEASE_KEYSTORE_PASSPHRASE&#xA;read -r -s RELEASE_KEY_PASSPHRASE&#xA;export RELEASE_KEYSTORE_PASSPHRASE&#xA;export RELEASE_KEY_PASSPHRASE&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;and then build the release zip:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew zipRelease&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;Bug fix and translation pull requests are welcome and much appreciated!&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in implementing a new feature and would like to see it included in BCR, please open an issue to discuss it first. I intend for BCR to be as simple and low-maintenance as possible, so I am not too inclined to add any new features, but I could be convinced otherwise.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;BCR is licensed under GPLv3. Please see &lt;a href=&#34;https://raw.githubusercontent.com/chenxiaolong/BCR/master/LICENSE&#34;&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for the full license text.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ankidroid/Anki-Android</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/ankidroid/Anki-Android</id>
    <link href="https://github.com/ankidroid/Anki-Android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;AnkiDroid: Anki flashcards on Android. Your secret trick to achieve superhuman information retention.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/banner_readme.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankidroid/Anki-Android/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/ankidroid/Anki-Android&#34; alt=&#34;release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ankidroid/Anki-Android/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/checks-status/ankidroid/Anki-Android/main?label=build&#34; alt=&#34;build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid&#34;&gt;&lt;img src=&#34;https://img.shields.io/opencollective/all/ankidroid&#34; alt=&#34;Open Collective backers and sponsors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ankidroid/Anki-Android/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/ankidroid/Anki-Android&#34; alt=&#34;commit-activity&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ankidroid/Anki-Android/network/members&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/forks/ankidroid/Anki-Android&#34; alt=&#34;forks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ankidroid/Anki-Android/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/ankidroid/Anki-Android&#34; alt=&#34;stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/ankidroid&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/ankidroid/localized.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ankidroid/Anki-Android/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/ankidroid/Anki-Android&#34; alt=&#34;contributors&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/qjzcRTx&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/368267295601983490&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ankidroid/Anki-Android/raw/main/COPYING&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/ankidroid/Anki-Android&#34; alt=&#34;license&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;AnkiDroid&lt;/h1&gt; &#xA;&lt;p&gt;A semi-official port of the open source &lt;a href=&#34;https://apps.ankiweb.net/index.html&#34;&gt;Anki&lt;/a&gt; spaced repetition flashcard system to Android. Memorize anything with AnkiDroid!&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/ankidroid_logo.png&#34; align=&#34;right&#34; width=&#34;40%&#34; height=&#34;100%&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;div style=&#34;display:flex;&#34;&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;night mode&lt;/li&gt; &#xA;  &lt;li&gt;whiteboard&lt;/li&gt; &#xA;  &lt;li&gt;progress widget&lt;/li&gt; &#xA;  &lt;li&gt;detailed statistics&lt;/li&gt; &#xA;  &lt;li&gt;syncing with AnkiWeb&lt;/li&gt; &#xA;  &lt;li&gt;write answers (optional)&lt;/li&gt; &#xA;  &lt;li&gt;text-to-speech integration&lt;/li&gt; &#xA;  &lt;li&gt;more than 6000 premade decks&lt;/li&gt; &#xA;  &lt;li&gt;spaced repetition (supermemo 2 algorithm)&lt;/li&gt; &#xA;  &lt;li&gt;supported contents: text, images, sounds, MathJax&lt;/li&gt; &#xA;  &lt;li&gt;add cards by intent from other applications like dictionaries&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;div style=&#34;display:flex;&#34;&gt; &#xA; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.ichi2.anki&amp;amp;utm_source=global_co&amp;amp;utm_medium=prtnr&amp;amp;utm_content=Mar2515&amp;amp;utm_campaign=PartBadge&amp;amp;pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt; &lt;img alt=&#34;Get it on Google Play&#34; height=&#34;80&#34; src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/google-badge.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://f-droid.org/repository/browse/?fdid=com.ichi2.anki&#34;&gt; &lt;img alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34; src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/f-droid-badge.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;http://www.amazon.com/gp/product/B004L1G7T2/ref=mas_pm_ankidroid_flashcards&#34;&gt; &lt;img alt=&#34;Get it on Amazon app store&#34; height=&#34;80&#34; src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/amazon-badge.png&#34;&gt; &lt;/a&gt; &#xA; &lt;a href=&#34;https://appgallery5.huawei.com/#/app/C102711481&#34;&gt; &lt;img alt=&#34;Get it on Huawei app gallery&#34; height=&#34;80&#34; src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/huawei-badge.png&#34;&gt; &lt;/a&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Wiki&lt;/h2&gt; &#xA;&lt;p&gt;View &lt;a href=&#34;https://github.com/ankidroid/Anki-Android/wiki&#34;&gt;Wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Help&lt;/h2&gt; &#xA;&lt;p&gt;Check the &lt;a href=&#34;https://ankidroid.org/docs/manual.html&#34;&gt;user manual&lt;/a&gt; and the wiki for usage instructions. See the &lt;a href=&#34;https://ankidroid.org/docs/help.html&#34;&gt;help page&lt;/a&gt; for how to submit a bug report or contact a project member, etc.&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;You can contribute to AnkiDroid by beta testing, translating, or submitting code. See the &lt;a href=&#34;https://github.com/ankidroid/Anki-Android/wiki/Contributing&#34;&gt;contribution wiki page&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Join Us On&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/qjzcRTx&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/discord_logo_color.png&#34; height=&#34;50px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/Anki&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/reddit_logo_color.png&#34; height=&#34;50px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.facebook.com/AnkiDroid/&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/facebook_logo_color.png&#34; height=&#34;50px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/ankidroid&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ankidroid/Anki-Android/main/docs/graphics/logos/twitter_logo_color.png&#34; height=&#34;50px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Credits&lt;/h2&gt; &#xA;&lt;h3&gt;Github Contributors&lt;/h3&gt; &#xA;&lt;p&gt;Thanks to these awesome contributors who keep this project going&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankidroid/Anki-Android/graphs/contributors&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/contributors.svg?width=890&amp;amp;button=false&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://opencollective.com/ankidroid#sponsor&#34;&gt;Sponsors&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/0/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/0/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/1/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/1/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/2/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/2/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/3/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/3/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/4/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/4/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/5/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/5/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/6/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/6/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/7/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/7/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/8/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/8/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/9/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/9/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/10/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/10/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/11/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/11/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/12/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/12/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/13/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/13/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/14/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/14/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/15/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/15/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/16/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/16/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/17/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/17/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/18/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/18/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/19/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/19/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opencollective.com/ankidroid/sponsor/20/website&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/sponsor/20/avatar.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://opencollective.com/ankidroid#backer&#34;&gt;Backers&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Thank you to all our backers! 🙏&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ankidroid#backers&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/backers.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://opencollective.com/ankidroid#contributors&#34;&gt;Contributors&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Our Awesome Team of Contributors&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://opencollective.com/ankidroid#contributors&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://opencollective.com/ankidroid/contributors.svg?width=890&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ankidroid/Anki-Android/raw/main/COPYING&#34;&gt;GPL-3.0 License&lt;/a&gt; &lt;a href=&#34;https://github.com/ankitects/anki/raw/main/LICENSE&#34;&gt;AGPL-3.0 Licence&lt;/a&gt; for some part of the back-end&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>UnlegitMC/FDPClient</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/UnlegitMC/FDPClient</id>
    <link href="https://github.com/UnlegitMC/FDPClient" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Minecraft hack client based on LiquidBounce&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FDPClient&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/trekhleb/state-of-the-art-shitcode&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=State-of-the-art&amp;amp;message=Shitcode&amp;amp;color=7B5804&#34; alt=&#34;State-of-the-art Shitcode&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/languages/code-size/UnlegitMC/FDPClient&#34; alt=&#34;GitHub code size in bytes&#34;&gt; &lt;img src=&#34;https://tokei.rs/b1/github/UnlegitMC/FDPClient&#34; alt=&#34;GitHub lines of code&#34;&gt; &lt;a href=&#34;https://codeclimate.com/github/UnlegitMC/FDPClient/maintainability&#34;&gt;&lt;img src=&#34;https://api.codeclimate.com/v1/badges/a41ae7bde63c143e426a/maintainability&#34; alt=&#34;Maintainability&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/badge/game-Minecraft-brightgreen&#34; alt=&#34;Minecraft&#34;&gt;&lt;br&gt; A free mixin-based injection hacked-client for Minecraft using Minecraft Forge based on LiquidBounce.&lt;/p&gt; &#xA;&lt;p&gt;Website: &lt;a href=&#34;https://FDPClient.club&#34;&gt;https://FDPClient.club&lt;/a&gt;&lt;br&gt; Latest: &lt;a href=&#34;https://github.com/UnlegitMC/FDPClient/actions/workflows/build.yml?query=event%3Apush&#34;&gt;github-actions&lt;/a&gt;&lt;br&gt; Discord: &lt;a href=&#34;https://discord.gg/55x7TaHWXG&#34;&gt;https://discord.gg/55x7TaHWXG&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Issues&lt;/h2&gt; &#xA;&lt;p&gt;If you notice any bugs or missing features, you can let us know by opening an issue &lt;a href=&#34;https://github.com/UnlegitMC/FDPClient/issues&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;This project is subject to the &lt;a href=&#34;https://raw.githubusercontent.com/UnlegitMC/FDPClient/main/LICENSE&#34;&gt;GNU General Public License v3.0&lt;/a&gt;. This does only apply for source code located directly in this clean repository. During the development and compilation process, additional source code may be used to which we have obtained no rights. Such code is not covered by the GPL license.&lt;/p&gt; &#xA;&lt;p&gt;For those who are unfamiliar with the license, here is a summary of its main points. This is by no means legal advise nor legally binding.&lt;/p&gt; &#xA;&lt;p&gt;You are allowed to&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;use&lt;/li&gt; &#xA; &lt;li&gt;share&lt;/li&gt; &#xA; &lt;li&gt;modify&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;this project entirely or partially for free and even commercially. However, please consider the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;You must disclose the source code of your modified work and the source code you took from this project. This means you are not allowed to use code from this project (even partially) in a closed-source (or even obfuscated) application.&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Your modified application must also be licensed under the GPL&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Do the above and share your source code with everyone; just like we do.&lt;/p&gt; &#xA;&lt;h2&gt;Setting up a Workspace&lt;/h2&gt; &#xA;&lt;p&gt;FDPClient uses gradle, so make sure that it is installed properly. Instructions can be found on &lt;a href=&#34;https://gradle.org/install/&#34;&gt;Gradle&#39;s website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone the repository using &lt;code&gt;git clone --recurse-submodules https://github.com/UnlegitMC/FDPClient.git&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;CD into the local repository folder.&lt;/li&gt; &#xA; &lt;li&gt;Depending on which IDE you are using execute either of the following commands: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For IntelliJ: &lt;code&gt;gradlew --debug setupDevWorkspace idea genIntellijRuns build&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;For Eclipse: &lt;code&gt;gradlew --debug setupDevWorkspace eclipse build&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Open the folder as a Gradle project in your IDE.&lt;/li&gt; &#xA; &lt;li&gt;Select the Forge run configuration.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Additional libraries&lt;/h2&gt; &#xA;&lt;h3&gt;Mixins&lt;/h3&gt; &#xA;&lt;p&gt;Mixins can be used to modify classes at runtime before they are loaded. FDPClient uses it to inject its code into the Minecraft client. This way, we do not have to ship Mojangs copyrighted code. If you want to learn more about it, check out its &lt;a href=&#34;https://docs.spongepowered.org/5.1.0/en/plugin/internals/mixins.html&#34;&gt;Documentation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;We are welcome for your contributing, but you have to follow these rules to make us merge your pull request.&lt;/p&gt; &#xA;&lt;h3&gt;Language and Code Quality&lt;/h3&gt; &#xA;&lt;p&gt;First of all, your code at least can be build, and make bugs as less as you can!&lt;br&gt; And we want to use kotlin features to make coding easier and faster, please use kotlin and make the &lt;a href=&#34;https://github.com/detekt/detekt&#34;&gt;Detekt&lt;/a&gt; code quality check good and use kotlin features if you can &lt;strong&gt;*&lt;/strong&gt;, we never merge shitcode.&lt;/p&gt; &#xA;&lt;h4&gt;Kotlin features&lt;/h4&gt; &#xA;&lt;p&gt;Usage of kotlin features and help enhance the code readability&lt;br&gt; kotlin feature examples&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;Timer().schedule(2000L) { &#xA;    // your code&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;not using kotlin feature&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;Timer().schedule(object : TimerTask(){&#xA;    override fun run() {&#xA;        // your code&#xA;    }&#xA;},2000L)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Skid codes&lt;/h3&gt; &#xA;&lt;p&gt;Please use original code if you can, and no direct code steals, but we welcome skid using packet logger or anything else like that to skid from a close source and make the cheating community more open!&lt;/p&gt; &#xA;&lt;h3&gt;Useless features&lt;/h3&gt; &#xA;&lt;p&gt;Useless features means feature only you think its usable ,or feature can be have with config change.&lt;br&gt; Like the &#34;TimerSpeed&#34; option to InfiniteAura, this feature can be added with bind Timer to the key with InfiniteAura, or use macro system in FDP Client.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/kotlin</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/JetBrains/kotlin</id>
    <link href="https://github.com/JetBrains/kotlin" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Kotlin Programming Language.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;official project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://teamcity.jetbrains.com/buildConfiguration/Kotlin_KotlinPublic_Compiler?branch=%3Cdefault%3E&amp;amp;buildTypeTab=overview&amp;amp;mode=builds&#34;&gt;&lt;img src=&#34;https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/Kotlin_KotlinPublic_Compiler.svg?sanitize=true&#34; alt=&#34;TeamCity (simple build status)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.jetbrains.kotlin%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.jetbrains.kotlin/kotlin-maven-plugin.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://ge.jetbrains.com/scans?search.rootProjectNames=Kotlin&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Revved%20up%20by-Gradle%20Enterprise-06A0CE?logo=Gradle&amp;amp;labelColor=02303A&#34; alt=&#34;Revved up by Gradle Enterprise&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Kotlin Programming Language&lt;/h1&gt; &#xA;&lt;p&gt;Welcome to &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt;!&lt;br&gt; It is an open-source, statically typed programming language supported and developed by &lt;a href=&#34;https://www.jetbrains.com/&#34;&gt;JetBrains&lt;/a&gt; and open-source contributors.&lt;/p&gt; &#xA;&lt;p&gt;Some handy links:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin Site&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/tutorials/getting-started.html&#34;&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.kotlinlang.org/&#34;&gt;Try Kotlin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/api/latest/jvm/stdlib/index.html&#34;&gt;Kotlin Standard Library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://youtrack.jetbrains.com/issues/KT&#34;&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCP7uiEZIqci43m22KDl0sNw&#34;&gt;Kotlin YouTube Channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://discuss.kotlinlang.org/&#34;&gt;Forum&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.jetbrains.com/kotlin/&#34;&gt;Kotlin Blog&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCP7uiEZIqci43m22KDl0sNw&#34;&gt;Subscribe to Kotlin YouTube channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/kotlin&#34;&gt;Follow Kotlin on Twitter&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://slack.kotlinlang.org/&#34;&gt;Public Slack channel&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://teamcity.jetbrains.com/project.html?tab=projectOverview&amp;amp;projectId=Kotlin&#34;&gt;TeamCity CI build&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Kotlin Multiplatform capabilities&lt;/h2&gt; &#xA;&lt;p&gt;Support for multiplatform programming is one of Kotlin’s key benefits. It reduces time spent writing and maintaining the same code for &lt;a href=&#34;https://kotlinlang.org/docs/reference/mpp-supported-platforms.html&#34;&gt;different platforms&lt;/a&gt; while retaining the flexibility and benefits of native programming.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/lp/mobile/&#34;&gt;Kotlin Multiplatform Mobile&lt;/a&gt; for sharing code between Android and iOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/mobile/create-first-app.html&#34;&gt;Getting Started with Kotlin Multiplatform Mobile Guide&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/multiplatform.html&#34;&gt;Kotlin Multiplatform Benefits&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/mpp-share-on-platforms.html#share-code-on-all-platforms&#34;&gt;Share code on all platforms&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/reference/mpp-share-on-platforms.html#share-code-on-similar-platforms&#34;&gt;Share code on similar platforms&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Editing Kotlin&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/tutorials/getting-started.html&#34;&gt;Kotlin IntelliJ IDEA Plugin&lt;/a&gt; (&lt;a href=&#34;https://github.com/JetBrains/intellij-community/tree/master/plugins/kotlin&#34;&gt;source code&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/tutorials/getting-started-eclipse.html&#34;&gt;Kotlin Eclipse Plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vkostyukov/kotlin-sublime-package&#34;&gt;Kotlin Sublime Text Package&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Build environment requirements&lt;/h2&gt; &#xA;&lt;p&gt;This repository is using &lt;a href=&#34;https://docs.gradle.org/current/userguide/toolchains.html&#34;&gt;Gradle toolchains&lt;/a&gt; feature to select and auto-provision required JDKs from &lt;a href=&#34;https://adoptopenjdk.net&#34;&gt;AdoptOpenJdk&lt;/a&gt; project.&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately &lt;a href=&#34;https://adoptopenjdk.net&#34;&gt;AdoptOpenJdk&lt;/a&gt; project does not provide required JDK 1.6 and 1.7 images, so you could either download them manually and provide path to installation via &lt;code&gt;JDK_16&lt;/code&gt; and &lt;code&gt;JDK_17&lt;/code&gt; environment variables or use following SDK managers:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://asdf-vm.com/&#34;&gt;Asdf-vm&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/shyiko/jabba&#34;&gt;Jabba&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sdkman.io/&#34;&gt;SDKMAN!&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Alternatively, it is still possible to only provide required JDKs via environment variables (see &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/kotlin/master/gradle.properties#L5&#34;&gt;gradle.properties&lt;/a&gt; for supported variable names). To ensure Gradle uses only JDKs from environmental variables - disable Gradle toolchain auto-detection by passing &lt;code&gt;-Porg.gradle.java.installations.auto-detect=false&lt;/code&gt; option (or put it into &lt;code&gt;$GRADLE_USER_HOME/gradle.properties&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;For local development, if you&#39;re not working on the standard library, it&#39;s OK to avoid installing JDK 1.6 and JDK 1.7. Add &lt;code&gt;kotlin.build.isObsoleteJdkOverrideEnabled=true&lt;/code&gt; to the &lt;code&gt;local.properties&lt;/code&gt; file, so build will only use JDK 1.8+. Note, that in this case, build will have Gradle remote build cache misses for some tasks.&lt;/p&gt; &#xA;&lt;p&gt;Note: The JDK 6 for MacOS is not available on Oracle&#39;s site. You can install it by&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ brew tap homebrew/cask-versions&#xA;$ brew install --cask java6&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On Windows you might need to add long paths setting to the repo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;git config core.longpaths true &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;The project is built with Gradle. Run Gradle to build the project and to run the tests using the following command on Unix/macOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew &amp;lt;tasks-and-options&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;or the following command on Windows:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;gradlew &amp;lt;tasks-and-options&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;On the first project configuration gradle will download and setup the dependencies on&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;intellij-core&lt;/code&gt; is a part of command line compiler and contains only necessary APIs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;idea-full&lt;/code&gt; is a full blown IntelliJ IDEA Community Edition to be used in the plugin module.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;These dependencies are quite large, so depending on the quality of your internet connection you might face timeouts getting them. In this case, you can increase timeout by specifying the following command line parameters on the first run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;./gradlew -Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Important gradle tasks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;clean&lt;/code&gt; - clean build results&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dist&lt;/code&gt; - assembles the compiler distribution into &lt;code&gt;dist/kotlinc/&lt;/code&gt; folder&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;install&lt;/code&gt; - build and install all public artifacts into local maven repository&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;coreLibsTest&lt;/code&gt; - build and run stdlib, reflect and kotlin-test tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;gradlePluginTest&lt;/code&gt; - build and run gradle plugin tests&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;compilerTest&lt;/code&gt; - build and run all compiler tests&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To reproduce TeamCity build use &lt;code&gt;-Pteamcity=true&lt;/code&gt; flag. Local builds don&#39;t run proguard and have jar compression disabled by default.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;OPTIONAL:&lt;/strong&gt; Some artifacts, mainly Maven plugin ones, are built separately with Maven. Refer to &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/kotlin/master/libraries/ReadMe.md&#34;&gt;libraries/ReadMe.md&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;p&gt;To build Kotlin/Native, see &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/kotlin/master/kotlin-native/README.md#building-from-source&#34;&gt;kotlin-native/README.md&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;&lt;a name=&#34;working-in-idea&#34;&gt;&lt;/a&gt; Working with the project in IntelliJ IDEA&lt;/h2&gt; &#xA;&lt;p&gt;Working with the Kotlin project requires at least IntelliJ IDEA 2019.1. You can download IntelliJ IDEA 2019.1 &lt;a href=&#34;https://www.jetbrains.com/idea/download&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;After cloning the project, to import the project in IntelliJ choose the project directory in the Open project dialog. Then, after project opened, select &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;New&lt;/code&gt; -&amp;gt; &lt;code&gt;Module from Existing Sources...&lt;/code&gt; in the menu, and select &lt;code&gt;build.gradle.kts&lt;/code&gt; file in the project&#39;s root folder.&lt;/p&gt; &#xA;&lt;p&gt;In the import dialog, select &lt;code&gt;use default gradle wrapper&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To be able to run tests from IntelliJ easily, check &lt;code&gt;Delegate IDE build/run actions to Gradle&lt;/code&gt; and choose &lt;code&gt;Gradle Test Runner&lt;/code&gt; in the Gradle runner settings after importing the project.&lt;/p&gt; &#xA;&lt;p&gt;At this time, you can use the latest released &lt;code&gt;1.6.x&lt;/code&gt; version of the Kotlin plugin for working with the code. To make sure you have the latest version installed, use &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;Kotlin&lt;/code&gt; -&amp;gt; &lt;code&gt;Configure Kotlin Plugin Updates&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;For handy work with compiler tests it&#39;s recommended to use &lt;a href=&#34;https://github.com/demiurg906/test-data-helper-plugin&#34;&gt; Kotlin Compiler Test Helper&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Dependency verification&lt;/h3&gt; &#xA;&lt;p&gt;We have a &lt;a href=&#34;https://docs.gradle.org/current/userguide/dependency_verification.html&#34;&gt;dependencies verification&lt;/a&gt; feature enabled in the repository for all Gradle builds. Gradle will check hashes (md5 and sha256) of used dependencies and will fail builds with &lt;code&gt;Dependency verification failed&lt;/code&gt; errors when local artifacts are absent or have different hashes listed in the &lt;a href=&#34;https://github.com/JetBrains/kotlin/raw/master/gradle/verification-metadata.xml&#34;&gt;verification-metadata.xml&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;p&gt;It&#39;s expected that &lt;code&gt;verification-metadata.xml&lt;/code&gt; should only be updated with the commits that modify the build. There are some tips how to perform such updates:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use auto-generation for getting an initial list of new hashes (verify updates relate to you changes).&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;code&gt;./gradlew -M sha256,md5 help&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;(any other task may be used instead of &lt;code&gt;help&lt;/code&gt;)&lt;/em&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Consider removing old versions from the file if you are updating dependencies.&lt;/li&gt; &#xA; &lt;li&gt;Leave meaningful &lt;code&gt;origin&lt;/code&gt; attribute (instead of &lt;code&gt;Generated by Gradle&lt;/code&gt;) if you did some manual verification of the artifact.&lt;/li&gt; &#xA; &lt;li&gt;Always do manual verification if several hashes are needed, and a new &lt;code&gt;also-trust&lt;/code&gt; tag has to be added.&lt;/li&gt; &#xA; &lt;li&gt;If you’re adding a dependency with OS mentioning in an artifact name (&lt;code&gt;darwin&lt;/code&gt;, &lt;code&gt;mac&lt;/code&gt;, &lt;code&gt;osx&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;windows&lt;/code&gt;), remember to add counterparts for other platforms.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Using -dev and -SNAPSHOT versions&lt;/h2&gt; &#xA;&lt;p&gt;We publish &lt;code&gt;-dev&lt;/code&gt; and &lt;code&gt;-SNAPSHOT&lt;/code&gt; versions frequently.&lt;/p&gt; &#xA;&lt;p&gt;For &lt;code&gt;-dev&lt;/code&gt; versions you can use the &lt;a href=&#34;https://maven.pkg.jetbrains.space/kotlin/p/kotlin/bootstrap/org/jetbrains/kotlin/kotlin-compiler/maven-metadata.xml&#34;&gt;list of available versions&lt;/a&gt; and include this maven repository:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;maven { url = uri(&#34;https://maven.pkg.jetbrains.space/kotlin/p/kotlin/bootstrap&#34;) }&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;For &lt;code&gt;-SNAPSHOT&lt;/code&gt; versions that are updated daily, you can use the &lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots/org/jetbrains/kotlin/kotlin-compiler/maven-metadata.xml&#34;&gt;list of available versions&lt;/a&gt; and include this maven repository:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;maven { url = uri(&#34;https://oss.sonatype.org/content/repositories/snapshots/&#34;) }&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Kotlin is distributed under the terms of the Apache License (Version 2.0). See &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/kotlin/master/license/README.md&#34;&gt;license folder&lt;/a&gt; for details.&lt;/p&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please be sure to review Kotlin&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/kotlin/master/docs/contributing.md&#34;&gt;contributing guidelines&lt;/a&gt; to learn how to help the project.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>florisboard/florisboard</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/florisboard/florisboard</id>
    <link href="https://github.com/florisboard/florisboard" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An open-source keyboard for Android which respects your privacy. Currently in early-beta.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img align=&#34;left&#34; width=&#34;80&#34; height=&#34;80&#34; src=&#34;https://raw.githubusercontent.com/florisboard/florisboard/master/.github/repo_icon.png&#34; alt=&#34;App icon&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;FlorisBoard &lt;a href=&#34;https://crowdin.florisboard.patrickgold.dev&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/florisboard/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://matrix.to/#/#florisboard:matrix.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-%23florisboard%3amatrix.org-blue&#34; alt=&#34;Matrix badge&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://github.com/florisboard/florisboard/workflows/FlorisBoard%20CI/badge.svg?event=push&#34; alt=&#34;FlorisBoard CI&#34;&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;FlorisBoard&lt;/strong&gt; is a free and open-source keyboard for Android 7.0+ devices. It aims at being modern, user-friendly and customizable while fully respecting your privacy. Currently in early-beta state.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;h3&gt;Stable &lt;a href=&#34;https://github.com/florisboard/florisboard/releases/latest&#34;&gt;&lt;img alt=&#34;Latest stable release&#34; src=&#34;https://img.shields.io/github/v/release/florisboard/florisboard&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; width=&#34;50%&#34;&gt; &lt;h3&gt;Beta &lt;a href=&#34;https://github.com/florisboard/florisboard/releases&#34;&gt;&lt;img alt=&#34;Latest beta release&#34; src=&#34;https://img.shields.io/github/v/release/florisboard/florisboard?include_prereleases&#34;&gt;&lt;/a&gt;&lt;/h3&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td valign=&#34;top&#34;&gt; &lt;p&gt;&lt;i&gt;Major versions only, 1 release per 1-5 months&lt;/i&gt;&lt;br&gt;&lt;br&gt;Updates are more polished, new features are matured and tested through to ensure a stable experience.&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td valign=&#34;top&#34;&gt; &lt;p&gt;&lt;i&gt;Beta versions, up to 1-2 releases per week&lt;/i&gt;&lt;br&gt;&lt;br&gt;Updates contain new features that may not be fully matured yet and bugs are more likely to occur. Allows you to give early feedback.&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td valign=&#34;top&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/dev.patrickgold.florisboard&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; height=&#34;64&#34; alt=&#34;F-Droid badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Google Play&lt;/strong&gt;: Join the &lt;a href=&#34;https://groups.google.com/g/florisboard-public-alpha-test&#34;&gt;FlorisBoard Test Group&lt;/a&gt;, then visit the &lt;a href=&#34;https://play.google.com/apps/testing/dev.patrickgold.florisboard&#34;&gt;testing page&lt;/a&gt;. Once joined and installed, updates will be delivered like for any other app. (&lt;a href=&#34;https://play.google.com/store/apps/details?id=dev.patrickgold.florisboard&#34;&gt;Store entry&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Manual&lt;/strong&gt;: Download and install the APK from the release page.&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;/td&gt; &#xA;   &lt;td valign=&#34;top&#34;&gt; &lt;p&gt;&lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/dev.patrickgold.florisboard.beta&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; height=&#34;64&#34; alt=&#34;IzzySoft repo badge&#34;&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Google Play&lt;/strong&gt;: Join the &lt;a href=&#34;https://groups.google.com/g/florisboard-public-alpha-test&#34;&gt;FlorisBoard Test Group&lt;/a&gt;, then visit the &lt;a href=&#34;https://play.google.com/apps/testing/dev.patrickgold.florisboard.beta&#34;&gt;beta testing page&lt;/a&gt;. Once joined and installed, updates will be delivered like for any other app. (&lt;a href=&#34;https://play.google.com/store/apps/details?id=dev.patrickgold.florisboard.beta&#34;&gt;Store entry&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;Manual&lt;/strong&gt;: Download and install the APK from the release page.&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;p&gt;Beginning with v0.4.0 FlorisBoard will follow &lt;a href=&#34;https://semver.org/#summary&#34;&gt;SemVer&lt;/a&gt; versioning scheme and enter the public beta on Google Play.&lt;/p&gt; &#xA;&lt;h2&gt;Highlighted features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integrated clipboard manager / history&lt;/li&gt; &#xA; &lt;li&gt;Advanced theming support and customization&lt;/li&gt; &#xA; &lt;li&gt;Integrated extension support (still evolving)&lt;/li&gt; &#xA; &lt;li&gt;Emoji keyboard&lt;/li&gt; &#xA; &lt;li&gt;Spell checking service&lt;/li&gt; &#xA; &lt;li&gt;Glide typing (currently English only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Word suggestions are not included in the current releases and are a major goal for the v0.4.0 milestone.&lt;/p&gt; &#xA;&lt;p&gt;Feature roadmap: See &lt;a href=&#34;https://raw.githubusercontent.com/florisboard/florisboard/master/ROADMAP.md&#34;&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Wanna contribute to FlorisBoard? That&#39;s great to hear! There are lots of different ways to help out. Bug reporting, making pull requests, translating FlorisBoard to make it more accessible, etc. For more information see the &lt;a href=&#34;https://raw.githubusercontent.com/florisboard/florisboard/master/CONTRIBUTING.md&#34;&gt;contributing guidelines&lt;/a&gt;. Thank you for your help!&lt;/p&gt; &#xA;&lt;h2&gt;List of permissions FlorisBoard requests&lt;/h2&gt; &#xA;&lt;p&gt;Please refer to this &lt;a href=&#34;https://github.com/florisboard/florisboard/wiki/List-of-permissions-FlorisBoard-requests&#34;&gt;page&lt;/a&gt; to get more information on this topic.&lt;/p&gt; &#xA;&lt;h2&gt;Used libraries, components and icons&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/androidx/androidx&#34;&gt;AndroidX libraries&lt;/a&gt; by &lt;a href=&#34;https://github.com/androidx&#34;&gt;Android Jetpack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/accompanist/&#34;&gt;Accompanist Compose UI libraries&lt;/a&gt; by &lt;a href=&#34;https://github.com/google&#34;&gt;Google&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mikepenz/AboutLibraries&#34;&gt;AboutLibraries&lt;/a&gt; by &lt;a href=&#34;https://github.com/mikepenz&#34;&gt;mikepenz&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/material-design-icons&#34;&gt;Google Material icons&lt;/a&gt; by &lt;a href=&#34;https://github.com/google&#34;&gt;Google&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/patrickgold/jetpref&#34;&gt;JetPref preference library&lt;/a&gt; by &lt;a href=&#34;https://github.com/patrickgold&#34;&gt;patrickgold&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;KotlinX coroutines library&lt;/a&gt; by &lt;a href=&#34;https://github.com/Kotlin&#34;&gt;Kotlin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.serialization&#34;&gt;KotlinX serialization library&lt;/a&gt; by &lt;a href=&#34;https://github.com/Kotlin&#34;&gt;Kotlin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/unicode-org/icu&#34;&gt;ICU4C&lt;/a&gt; by &lt;a href=&#34;https://github.com/unicode-org&#34;&gt;The Unicode Consortium&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/nuspell/nuspell&#34;&gt;Nuspell&lt;/a&gt; by &lt;a href=&#34;https://github.com/nuspell&#34;&gt;Nuspell&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Many thanks to &lt;a href=&#34;https://www.behance.net/nikolayanzarov&#34;&gt;Nikolay Anzarov&lt;/a&gt; (&lt;a href=&#34;https://github.com/BloodRaven0&#34;&gt;@BloodRaven0&lt;/a&gt;) for designing and providing the main app icons to this project!&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2020-2022 Patrick Goldinger&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>CarlosEsco/Neko</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/CarlosEsco/Neko</id>
    <link href="https://github.com/CarlosEsco/Neko" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free, open source, unofficial MangaDex reader for Android&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/CarlosEsco/Neko&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/CarlosEsco/Neko/master/.github/readme-images/logo.png&#34; alt=&#34;Neko&#34; width=&#34;200&#34;&gt;&lt;/a&gt; &lt;br&gt; Neko &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A Free, Open source unofficial manga reader for MangaDex&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/CarlosEsco/Neko/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/CarlosEsco/Neko.svg?maxAge=3600&amp;amp;style=for-the-badge&amp;amp;label=download&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/CarlosEsco/Neko/actions/workflows/ci-draft-release.yml?query=workflow%3A%22Release+app%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/workflow/status/carlosesco/neko/Android%20CI?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/CarlosEsco/Neko.svg?style=for-the-badge&#34;&gt; &lt;a href=&#34;https://discord.gg/tachiyomi&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/349436576037732353.svg?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;About:&lt;/h2&gt; &#xA;&lt;p&gt;This is a &lt;a href=&#34;https://mangadex.org/&#34;&gt;MangaDex&lt;/a&gt; specific fork of &lt;a href=&#34;https://github.com/inorichi/tachiyomi&#34;&gt;Tachiyomi&lt;/a&gt; and &lt;a href=&#34;https://github.com/Jays2Kings/tachiyomiJ2K&#34;&gt;TachiyomiJ2K&lt;/a&gt;. This contains features specific to Mangadex that those versions cannot offer. It also features almost every feature that J2K has except for other sources,local sources, and editting manga.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This fork is for Android 7+&lt;/p&gt; &#xA;&lt;h2&gt;Specific features:&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports native login to MangaDex and 2FA&lt;/li&gt; &#xA; &lt;li&gt;Use MDList as Tracker&lt;/li&gt; &#xA; &lt;li&gt;Similar Manga Recommendations&lt;/li&gt; &#xA; &lt;li&gt;Manually sync of Manga to and from Mangadex follows list&lt;/li&gt; &#xA; &lt;li&gt;Sync Followed Manga&#39;s read chapters from MangaDex into Neko automatically&lt;/li&gt; &#xA; &lt;li&gt;Filter by Scanlation Group in chapter list&lt;/li&gt; &#xA; &lt;li&gt;Look at an additional source for missing chapters not hosted on MangaDex&lt;/li&gt; &#xA; &lt;li&gt;Ability to attempt to merge missing chapters from MangaDex with another source&lt;/li&gt; &#xA; &lt;li&gt;And many more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Get the app from our &lt;a href=&#34;https://github.com/CarlosEsco/Neko/releases&#34;&gt;releases page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Thanks&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/inorichi&#34;&gt;Inorichi&lt;/a&gt; for making the original Tachiyomi&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/arkon&#34;&gt;Arkon&lt;/a&gt; Current maintainer of Tachiyomi&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Jays2Kings&#34;&gt;Jays2Kings&lt;/a&gt; for the wonderful new UI of J2K&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/goldbattle&#34;&gt;GoldBattle&lt;/a&gt; for all the similar manga logic&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2015 Javier Tomás&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&#xA;Modifications copyright (C) 2019 Carlos Escobedo&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The developer of this application does not have any affiliation with the content providers available.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ktorio/ktor</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/ktorio/ktor</id>
    <link href="https://github.com/ktorio/ktor" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Framework for quickly creating connected applications in Kotlin with minimal effort&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/ktorio/ktor/main/.github/images/ktor-logo-for-dark.svg&#34;&gt; &#xA;  &lt;img alt=&#34;Ktor logo&#34; src=&#34;https://raw.githubusercontent.com/ktorio/ktor/main/.github/images/ktor-logo-for-light.svg?sanitize=true&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;http://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;Official JetBrains project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mvnrepository.com/artifact/io.ktor&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.ktor/ktor&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-1.6.21-blue.svg?logo=kotlin&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.slack.com/messages/ktor/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-slack-green.svg?logo=slack&#34; alt=&#34;Slack channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Ktor is an asynchronous framework for creating microservices, web applications and more. Written in Kotlin from the ground up.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import io.ktor.server.netty.*&#xA;import io.ktor.server.routing.*&#xA;import io.ktor.server.application.*&#xA;import io.ktor.http.*&#xA;import io.ktor.server.response.*&#xA;import io.ktor.server.engine.*&#xA;&#xA;fun main(args: Array&amp;lt;String&amp;gt;) {&#xA;    embeddedServer(Netty, 8080) {&#xA;        routing {&#xA;            get(&#34;/&#34;) {&#xA;                call.respondText(&#34;Hello, world!&#34;, ContentType.Text.Html)&#xA;            }&#xA;        }&#xA;    }.start(wait = true)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Runs embedded web server on &lt;code&gt;localhost:8080&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Installs routing and responds with &lt;code&gt;Hello, world!&lt;/code&gt; when receiving a GET http request for the root path&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Principles&lt;/h2&gt; &#xA;&lt;h4&gt;Unopinionated&lt;/h4&gt; &#xA;&lt;p&gt;Ktor Framework doesn&#39;t impose a lot of constraints on what technology a project is going to use – logging, templating, messaging, persistence, serialization, dependency injection, etc. Sometimes it may be required to implement a simple interface, but usually it is a matter of writing a transforming or intercepting function. Features are installed into the application using a unified &lt;em&gt;interception&lt;/em&gt; mechanism which allows building arbitrary pipelines.&lt;/p&gt; &#xA;&lt;p&gt;Ktor Applications can be hosted in any servlet container with Servlet 3.0+ API support such as Tomcat, or standalone using Netty or Jetty. Support for other hosts can be added through the unified hosting API.&lt;/p&gt; &#xA;&lt;p&gt;Ktor APIs are mostly functions calls with lambdas. Thanks to Kotlin DSL capabilities, the code looks declarative. Application composition is entirely up to the developer&#39;s choice – with functions or classes, using dependency injection framework or doing it all manually in the main function.&lt;/p&gt; &#xA;&lt;h4&gt;Asynchronous&lt;/h4&gt; &#xA;&lt;p&gt;The Ktor pipeline machinery and API are utilising Kotlin coroutines to provide easy-to-use asynchronous programming model without making it too cumbersome. All host implementations are using asynchronous I/O facilities to avoid thread blocking.&lt;/p&gt; &#xA;&lt;h4&gt;Testable&lt;/h4&gt; &#xA;&lt;p&gt;Ktor applications can be hosted in a special test environment, which emulates a web server to some extent without actually doing any networking. It provides easy way to test an application without mocking too much stuff, and still achieve good performance while validating application calls. Running integration tests with a real embedded web server are of course possible, too.&lt;/p&gt; &#xA;&lt;h2&gt;JetBrains Product&lt;/h2&gt; &#xA;&lt;p&gt;Ktor is an official &lt;a href=&#34;https://jetbrains.com&#34;&gt;JetBrains&lt;/a&gt; product and is primarily developed by the team at JetBrains, with contributions from the community.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Please visit &lt;a href=&#34;http://ktor.io&#34;&gt;ktor.io&lt;/a&gt; for Quick Start and detailed explanations of features, usage and machinery.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Getting started with &lt;a href=&#34;https://ktor.io/docs/gradle.html&#34;&gt;Gradle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Getting started with &lt;a href=&#34;https://ktor.io/docs/maven.html&#34;&gt;Maven&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Getting started with &lt;a href=&#34;https://ktor.io/docs/intellij-idea.html&#34;&gt;IDEA&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Reporting Issues / Support&lt;/h2&gt; &#xA;&lt;p&gt;Please use &lt;a href=&#34;https://youtrack.jetbrains.com/issues/KTOR&#34;&gt;our issue tracker&lt;/a&gt; for filing feature requests and bugs. If you&#39;d like to ask a question, we recommend &lt;a href=&#34;https://stackoverflow.com/questions/tagged/ktor&#34;&gt;StackOverflow&lt;/a&gt; where members of the team monitor frequently.&lt;/p&gt; &#xA;&lt;p&gt;There is also community support on the &lt;a href=&#34;https://app.slack.com/client/T09229ZC6/C0A974TJ9&#34;&gt;Kotlin Slack Ktor channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;If you find a security vulnerability in Ktor, we kindly request that you reach out to the JetBrains security team via our &lt;a href=&#34;https://www.jetbrains.com/legal/terms/responsible-disclosure.html&#34;&gt;responsible disclosure process&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Inspirations&lt;/h2&gt; &#xA;&lt;p&gt;Kotlin web frameworks such as Wasabi and Kara, which are currently deprecated.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/ktorio/ktor/main/CONTRIBUTING.md&#34;&gt;the contribution guide&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/ktorio/ktor/main/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt; before contributing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/permissions-samples</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/android/permissions-samples</id>
    <link href="https://github.com/android/permissions-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multiple samples showing the best practices in permissions on Android.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Permissions Samples Repository&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of individual Android Studio projects to help you get started writing/understanding Android Permissions.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/play-billing-samples</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/android/play-billing-samples</id>
    <link href="https://github.com/android/play-billing-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Samples for Google Play In-app Billing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Play Billing Samples&lt;/h1&gt; &#xA;&lt;p&gt;Sample applications for Google Play Billing. To build each sample, see the README instructions in the project directory.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/android/play-billing-samples/tree/master/TrivialDriveJava&#34;&gt;Trivial Drive Java&lt;/a&gt; - Purchase items/subscriptions in your Android app (serverless).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/android/play-billing-samples/tree/master/TrivialDriveKotlin&#34;&gt;Trivial Drive Kotlin&lt;/a&gt; - Purchase items/subscriptions in your Android app (serverless).&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/android/play-billing-samples/tree/master/ClassyTaxiAppKotlin&#34;&gt;Classy Taxi Kotlin App&lt;/a&gt; - Purchase subscriptions in your Android app and manage subscriptions on your server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/android/play-billing-samples/tree/master/ClassyTaxiJava&#34;&gt;Classy Taxi Java App&lt;/a&gt; - Purchase subscriptions in your Android app and manage subscriptions on your server.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/android/play-billing-samples/tree/master/ClassyTaxiServer&#34;&gt;Classy Taxi Server&lt;/a&gt; - Manage subscriptions on your server.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Google Play Billing&lt;/h2&gt; &#xA;&lt;p&gt;For more information about Google Play Billing, see the documentation.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/google/play/billing/billing_overview&#34;&gt;Google Play Billing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/google/play/billing/billing_library_overview&#34;&gt;Google Play Billing Library&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/google/play/developer-api&#34;&gt;Google Play Developer API&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/google/play/billing/realtime_developer_notifications&#34;&gt;Real-time Developer Notifications&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;CHANGELOG&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;2021-05-18&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Updated all samples for Google Play Billing Library v4.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2021-04-28&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Publish &lt;code&gt;TrivialDriveJava&lt;/code&gt; : Billing Library Java sample for purchases.&lt;/li&gt; &#xA;   &lt;li&gt;Rewrite &lt;code&gt;TrivialDriveKotlin&lt;/code&gt; : Billing Library Java/Kotlin hybrid sample for purchases, now supports billing ktx/coroutines.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2020-02-28&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Publish &lt;code&gt;ClassyTaxiJava&lt;/code&gt;: Billing Library Java sample - currently only supports subscriptions.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2019-12-30&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Restructure &lt;code&gt;ClassyTaxi&lt;/code&gt; to separate Android, web, and server implementations. &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;The &lt;code&gt;ClassyTaxi&lt;/code&gt; Android app now lives &lt;a href=&#34;https://github.com/android/play-billing-samples/tree/master/ClassyTaxiAppKotlin&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;The &lt;code&gt;ClassyTaxi&lt;/code&gt; read-only web app now lives &lt;a href=&#34;https://github.com/android/play-billing-samples/tree/master/ClassyTaxiAppWeb&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;     &lt;li&gt;The &lt;code&gt;ClassyTaxi&lt;/code&gt; server implementation now lives &lt;a href=&#34;https://github.com/android/play-billing-samples/tree/master/ClassyTaxiServer&#34;&gt;here&lt;/a&gt;.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2019-10-10&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Remove apps that do not support Google Play Billing Library 2.0 or newer. The AIDL and older versions of the Google Play Billing Library are deprecated. The old samples are available on GitHub at the following links: &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/android/play-billing-samples/tree/7a94c6905a9c125518354c216b5c3094fde47ce1/TrivialDrive&#34;&gt;&lt;code&gt;TrivialDrive&lt;/code&gt; archive&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://github.com/android/play-billing-samples/tree/7a94c6905a9c125518354c216b5c3094fde47ce1/TrivialDrive_v2&#34;&gt;&lt;code&gt;TrivialDrive_v2&lt;/code&gt; archive&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2019-01-16&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Publish &lt;code&gt;TrivialDriveKotlin&lt;/code&gt;: Kotlin sample&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2018-05-03&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Publish &lt;code&gt;ClassyTaxi&lt;/code&gt;: Subscriptions sample&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2017-07-12&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Publish &lt;code&gt;TrivialDrive_v2&lt;/code&gt;: Billing Library 1.0 sample&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;2015-09-18&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Initial repo port to GitHub&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;TrivialDrive&lt;/code&gt;: AIDL sample&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>KieronQuinn/TapTap</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/KieronQuinn/TapTap</id>
    <link href="https://github.com/KieronQuinn/TapTap" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Port of the double tap on back of device feature from Android 12 to any Android 7.0+ device&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tap, Tap&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;Download&lt;/strong&gt;: &lt;a href=&#34;https://github.com/KieronQuinn/TapTap/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release/KieronQuinn/TapTap.svg?maxAge=3600&amp;amp;label=download&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Tap, Tap is a port of the &lt;a href=&#34;https://www.xda-developers.com/google-pixel-android-11-double-tap-rear-gestures/&#34;&gt;double tap on back of device gesture&lt;/a&gt; from Pixels running Android 12 to any Android 7.0+ device*.&lt;/p&gt; &#xA;&lt;p&gt;Tap, Tap provides over 50 actions that can be run from double or triple taps on the back of your device, including:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Launching an app&lt;/li&gt; &#xA; &lt;li&gt;Launching a shortcut&lt;/li&gt; &#xA; &lt;li&gt;Toggling the flashlight&lt;/li&gt; &#xA; &lt;li&gt;Simulating button presses, such as home or back&lt;/li&gt; &#xA; &lt;li&gt;Running a Tasker task&lt;/li&gt; &#xA; &lt;li&gt;Quick Tap to Snap**&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;... and many more!&lt;/p&gt; &#xA;&lt;p&gt;The gesture can also be fully controlled, to only run under certain conditions, or run different actions in different scenarios; such as only when an app is running, the screen is off, or when listening to music (many more options are available).&lt;/p&gt; &#xA;&lt;p&gt;The sensitivity and response of the gesture can be controlled, picking from 8 &#34;models&#34;, trained for devices ranging in size from 5.7&#34; to 6.3&#34; in height, as well as finer control of the sensitivity of gesture detection, meaning there is a configuration that will work well for most devices.&lt;/p&gt; &#xA;&lt;p&gt;Tap, Tap also tries to be easy on the battery, only running the gesture detection when required, and integrates with the &#34;low power mode&#34; available on select Pixel devices, otherwise using the lower-power machine learning capabilities of devices, where available.&lt;/p&gt; &#xA;&lt;p&gt;* Your device must have an accelerometer and gyroscope.&lt;/p&gt; &#xA;&lt;p&gt;** Requires a compatible Pixel device or root, see &lt;a href=&#34;https://kieronquinn.co.uk/redirect/TapTap/qtts&#34;&gt;this page&lt;/a&gt; for more info.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://i.imgur.com/oN3Iimo.png&#34;&gt;&lt;img src=&#34;https://i.imgur.com/oN3Iimol.png&#34; alt=&#34;Tap, Tap&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://streamable.com/4jd1mu&#34;&gt;Example video, showing launching the camera on double tap&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kieronquinn.co.uk/redirect/TapTap/xda&#34;&gt;XDA thread&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reporting issues and feature requests&lt;/h2&gt; &#xA;&lt;p&gt;If you have encountered a crash or error, please make an issue on the &lt;a href=&#34;https://github.com/KieronQuinn/TapTap/issues&#34;&gt;Issues&lt;/a&gt; page. For crashes, include a crash report, which Tap, Tap should create for you and show a notification after a hard crash (enable the option on the &#34;More&#34; page first if you have disabled it). Before making an issue, make sure it has not been reported before, and does not fall under the &#34;service killed&#34; pinned issue, as those will be closed and ignored.&lt;/p&gt; &#xA;&lt;p&gt;To request a feature, either make an issue stating &#34;Feature Request&#34;, or post a reply in the XDA thread. Note that only relatively simple features will be considered, anything more complex including toggling specific system features should be done using the Tasker capabilities of Tap, Tap, as the app is not meant to be a Tasker replacement.&lt;/p&gt; &#xA;&lt;h2&gt;Building Tap, Tap&lt;/h2&gt; &#xA;&lt;p&gt;If you would prefer to build from source, Tap, Tap can be built like any other Android app, simply by opening the source in Android Studio and running the app.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MatsuriDayo/Matsuri</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/MatsuriDayo/Matsuri</id>
    <link href="https://github.com/MatsuriDayo/Matsuri" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Matsuri (茉莉) / Android proxy toolchain / 安卓代理应用 / Fork of SagerNet&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Matsuri (茉莉) for Android&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; style=&#34;width: 20%&#34; src=&#34;https://avatars.githubusercontent.com/u/95122236&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://android-arsenal.com/api?level=21&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat&#34; alt=&#34;API&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/MatsuriDayo/Matsuri/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/MatsuriDayo/Matsuri&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL--3.0-orange.svg?sanitize=true&#34; alt=&#34;License: GPL-3.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/moe.matsuri.lite&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;适用于 Android 的代理工具链，用 Kotlin 编写。&lt;/p&gt; &#xA;&lt;p&gt;A proxy toolchain for Android, written in Kotlin.&lt;/p&gt; &#xA;&lt;h2&gt;喵 Nya&lt;/h2&gt; &#xA;&lt;p&gt;这是 SagerNet 的一个分支，部分功能不同，改进了部分情况下的体验。支持高级插件。&lt;/p&gt; &#xA;&lt;p&gt;This is a fork of SagerNet with different features and improved experience in some situations. With &#34;advanced plugin&#34; support.&lt;/p&gt; &#xA;&lt;h2&gt;更改记录和发布频道 Changelog and Telegram channel&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://t.me/Matsuridayo&#34;&gt;https://t.me/Matsuridayo&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;文档 Documents&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://matsuridayo.github.io&#34;&gt;https://matsuridayo.github.io&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;代理 Proxy&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;SOCKS (4/4a/5)&lt;/li&gt; &#xA; &lt;li&gt;HTTP(S)&lt;/li&gt; &#xA; &lt;li&gt;SSH&lt;/li&gt; &#xA; &lt;li&gt;Shadowsocks&lt;/li&gt; &#xA; &lt;li&gt;ShadowsocksR&lt;/li&gt; &#xA; &lt;li&gt;VMess&lt;/li&gt; &#xA; &lt;li&gt;Trojan&lt;/li&gt; &#xA; &lt;li&gt;Trojan-Go ( trojan-go-plugin )&lt;/li&gt; &#xA; &lt;li&gt;NaïveProxy ( naive-plugin )&lt;/li&gt; &#xA; &lt;li&gt;Hysteria ( hysteria-plugin )&lt;/li&gt; &#xA; &lt;li&gt;WireGuard ( wireguard-plugin )&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;ROOT required&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ping Tunnel ( pingtunnel-plugin )&lt;/li&gt; &#xA; &lt;li&gt;Hysteria faketcp ( hysteria-plugin )&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;订阅 Subscription&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;原始：所有广泛使用的格式（base64 clash 或原始配置）&lt;/li&gt; &#xA; &lt;li&gt;Raw: All widely used formats (base64, clash or origin configuration)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Shadowsocks-NET/OpenOnlineConfig&#34;&gt;Open Online Config&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://shadowsocks.org/en/wiki/SIP008-Online-Configuration-Delivery.html&#34;&gt;Shadowsocks SIP008&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>detekt/detekt</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/detekt/detekt</id>
    <link href="https://github.com/detekt/detekt" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Static code analysis for Kotlin&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;strong&gt;detekt&lt;/strong&gt;&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kotlinlang.slack.com/archives/C88E12QH4&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%23detekt-on_slack-red.svg?logo=slack&#34; alt=&#34;Join the chat at #detekt on KotlinLang&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://detekt.dev/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/visit-website-red.svg?logo=firefox&#34; alt=&#34;Visit the website at detekt.dev/&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/io.gitlab.arturbosch.detekt/detekt-cli&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/io.gitlab.arturbosch.detekt/detekt-cli?label=MavenCentral&amp;amp;logo=apache-maven&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://plugins.gradle.org/plugin/io.gitlab.arturbosch.detekt&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-metadata/v/https/plugins.gradle.org/m2/io/gitlab/arturbosch/detekt/io.gitlab.arturbosch.detekt.gradle.plugin/maven-metadata.xml.svg?label=Gradle&amp;amp;logo=gradle&#34; alt=&#34;Gradle Plugin&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/detekt/detekt/workflows/Pre%20Merge%20Checks/badge.svg?branch=main&#34; alt=&#34;Pre Merge Checks&#34;&gt; &lt;a href=&#34;https://codecov.io/gh/detekt/detekt&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/detekt/detekt/branch/main/graph/badge.svg?sanitize=true&#34; alt=&#34;Codecov&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/KotlinBy/awesome-kotlin&#34;&gt;&lt;img src=&#34;https://kotlin.link/awesome-kotlin.svg?sanitize=true&#34; alt=&#34;Awesome Kotlin Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://app.fossa.com/projects/custom%2B25591%2Fgithub.com%2Fdetekt%2Fdetekt?ref=badge_small&#34;&gt;&lt;img src=&#34;https://app.fossa.com/api/projects/custom%2B25591%2Fgithub.com%2Fdetekt%2Fdetekt.svg?type=small&#34; alt=&#34;FOSSA Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Meet &lt;em&gt;detekt&lt;/em&gt;, a static code analysis tool for the &lt;em&gt;Kotlin&lt;/em&gt; programming language. It operates on the abstract syntax tree provided by the Kotlin compiler.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/detekt/detekt/main/docs/images/detekt_in_action.png&#34; alt=&#34;detekt in action&#34; title=&#34;detekt in action&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Code smell analysis for your Kotlin projects&lt;/li&gt; &#xA; &lt;li&gt;Complexity reports based on lines of code, cyclomatic complexity and amount of code smells&lt;/li&gt; &#xA; &lt;li&gt;Highly configurable rule sets&lt;/li&gt; &#xA; &lt;li&gt;Suppression of findings with Kotlin&#39;s &lt;code&gt;@Suppress&lt;/code&gt; and Java&#39;s &lt;code&gt;@SuppressWarnings&lt;/code&gt; annotations&lt;/li&gt; &#xA; &lt;li&gt;Specification of quality gates which will break your build&lt;/li&gt; &#xA; &lt;li&gt;Code Smell baseline and suppression for legacy projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/detekt/detekt/main/#with-gradle&#34;&gt;Gradle plugin&lt;/a&gt; for code analysis via Gradle builds&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/sonar-kotlin&#34;&gt;SonarQube integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extensibility by enabling incorporation of personal rule sets, &lt;code&gt;FileProcessListener&#39;s&lt;/code&gt; and &lt;code&gt;OutputReport&#39;s&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/detekt-intellij-plugin&#34;&gt;IntelliJ integration&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Third party integrations for &lt;a href=&#34;https://github.com/Ozsie/detekt-maven-plugin&#34;&gt;Maven&lt;/a&gt;, &lt;a href=&#34;https://github.com/buildfoundation/bazel_rules_detekt/&#34;&gt;Bazel&lt;/a&gt; and Github Actions (&lt;a href=&#34;https://github.com/marketplace/actions/detekt-all&#34;&gt;Docker based&lt;/a&gt; and &lt;a href=&#34;https://github.com/marketplace/actions/setup-detekt&#34;&gt;Javascript based&lt;/a&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Project Website&lt;/h3&gt; &#xA;&lt;p&gt;Visit &lt;a href=&#34;https://detekt.dev/&#34;&gt;the project website&lt;/a&gt; for installation guides, release notes, migration guides, rule descriptions and configuration options.&lt;/p&gt; &#xA;&lt;h4&gt;Quick-Links&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/changelog.html&#34;&gt;Changelog and migration guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/cli.html&#34;&gt;Available CLI options&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/complexity.html&#34;&gt;Rule set and rule descriptions&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/extensions.html&#34;&gt;Writing custom rules and extending detekt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/suppressing-rules.html&#34;&gt;Suppressing issues in code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/baseline.html&#34;&gt;Suppressing issues via baseline file&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://detekt.dev/configurations.html&#34;&gt;Configuring detekt&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Sample Gradle integrations examples: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/detekt/raw/main/build.gradle.kts&#34;&gt;multi project (Kotlin DSL)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/arturbosch/kutils/raw/master/build.gradle&#34;&gt;single project (Groovy DSL)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/detekt/sonar-kotlin/raw/main/pom.xml&#34;&gt;single project (Unofficial Maven plugin)&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Start ...&lt;/h3&gt; &#xA;&lt;h4&gt;with the command-line interface&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;curl -sSLO https://github.com/detekt/detekt/releases/download/v[version]/detekt-cli-[version]-all.jar&#xA;java -jar detekt-cli-[version]-all.jar --help&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find &lt;a href=&#34;https://detekt.dev/cli.html&#34;&gt;other ways to install detekt here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;with Gradle&lt;/h4&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;    id(&#34;io.gitlab.arturbosch.detekt&#34;).version(&#34;[version]&#34;)&#xA;}&#xA;&#xA;repositories {&#xA;    mavenCentral()&#xA;}&#xA;&#xA;detekt {&#xA;    buildUponDefaultConfig = true // preconfigure defaults&#xA;    allRules = false // activate all available (even unstable) rules.&#xA;    config = files(&#34;$projectDir/config/detekt.yml&#34;) // point to your custom config defining rules to run, overwriting default behavior&#xA;    baseline = file(&#34;$projectDir/config/baseline.xml&#34;) // a way of suppressing issues before introducing detekt&#xA;}&#xA;&#xA;tasks.withType&amp;lt;Detekt&amp;gt;().configureEach {&#xA;    reports {&#xA;        html.required.set(true) // observe findings in your browser with structure and code snippets&#xA;        xml.required.set(true) // checkstyle like format mainly for integrations like Jenkins&#xA;        txt.required.set(true) // similar to the console output, contains issue signature to manually edit baseline files&#xA;        sarif.required.set(true) // standardized SARIF format (https://sarifweb.azurewebsites.net/) to support integrations with Github Code Scanning&#xA;    }&#xA;}&#xA;&#xA;// Groovy DSL&#xA;tasks.withType(Detekt).configureEach {&#xA;    jvmTarget = &#34;1.8&#34;&#xA;}&#xA;tasks.withType(DetektCreateBaselineTask).configureEach {&#xA;    jvmTarget = &#34;1.8&#34;&#xA;}&#xA;&#xA;// or&#xA;&#xA;// Kotlin DSL&#xA;tasks.withType&amp;lt;Detekt&amp;gt;().configureEach {&#xA;    jvmTarget = &#34;1.8&#34;&#xA;}&#xA;tasks.withType&amp;lt;DetektCreateBaselineTask&amp;gt;().configureEach {&#xA;    jvmTarget = &#34;1.8&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://search.maven.org/artifact/io.gitlab.arturbosch.detekt/detekt-cli&#34;&gt;maven central&lt;/a&gt; for releases and &lt;a href=&#34;https://oss.sonatype.org/#view-repositories;snapshots~browsestorage~io/gitlab/arturbosch/detekt&#34;&gt;sonatype&lt;/a&gt; for snapshots.&lt;/p&gt; &#xA;&lt;p&gt;If you want to use a SNAPSHOT version, you can find more info on &lt;a href=&#34;https://detekt.dev/snapshots.html&#34;&gt;this documentation page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Requirements&lt;/h4&gt; &#xA;&lt;p&gt;Gradle 6.1+ is the minimum requirement. However, the recommended versions together with the other tools recommended versions are:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Detekt Version&lt;/th&gt; &#xA;   &lt;th&gt;Gradle&lt;/th&gt; &#xA;   &lt;th&gt;Kotlin&lt;/th&gt; &#xA;   &lt;th&gt;AGP&lt;/th&gt; &#xA;   &lt;th&gt;Java Target Level&lt;/th&gt; &#xA;   &lt;th&gt;JDK Max Version&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.20.0&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;7.4.2&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.6.20&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;7.1.3&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;1.8&lt;/code&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;17&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;The list of &lt;a href=&#34;https://detekt.dev/compatibility.html&#34;&gt;recommended versions for previous detekt version is listed here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Adding more rule sets&lt;/h3&gt; &#xA;&lt;p&gt;detekt itself provides a wrapper over &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt; as a &lt;code&gt;formatting&lt;/code&gt; rule set which can be easily added to the Gradle configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies {&#xA;    detektPlugins(&#34;io.gitlab.arturbosch.detekt:detekt-formatting:[version]&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Likewise custom &lt;a href=&#34;https://detekt.dev/extensions.html&#34;&gt;extensions&lt;/a&gt; can be added to detekt.&lt;/p&gt; &#xA;&lt;h3&gt;Contributing&lt;/h3&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/detekt/detekt/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Thanks to all the people who contributed to detekt!&lt;/p&gt; &#xA;&lt;a href=&#34;https://github.com/detekt/detekt/graphs/contributors&#34;&gt; &lt;img src=&#34;https://contrib.rocks/image?repo=detekt/detekt&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Mentions&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://androidweekly.net/issues/issue-259&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/androidweekly.net-259-orange.svg?style=flat-square&#34; alt=&#34;androidweekly&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://androidweekly.cn/android-dev-wekly-issue-154/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/androidweekly.cn-154-orange.svg?style=flat-square&#34; alt=&#34;androidweekly&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;As mentioned in...&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.droidcon.com/2021/11/17/detekt-state-of-the-union-2/&#34;&gt;driodcon London 2021 - Detekt - State of the Union&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=yjhQiP0329M&#34;&gt;KotlinConf 2018 - Safe(r) Kotlin Code - Static Analysis Tools for Kotlin by Marvin Ramin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LT6m5_LO2DQ&#34;&gt;droidcon NYC 2018 - Static Code Analysis For Kotlin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Kotlin on Code Quality Tools - by @vanniktech &lt;a href=&#34;https://docs.google.com/presentation/d/1sUoQCRHTR01JfaS67Qkd7K1rdRLOhO6QGCelZZwxOKs/edit&#34;&gt;Slides&lt;/a&gt; &lt;a href=&#34;https://www.youtube.com/watch?v=FKDNE6PPTTE&#34;&gt;Presentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.raywenderlich.com/24470020-integrating-detekt-in-the-workflow&#34;&gt;Integrating detekt in the Workflow&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://blog.frankel.ch/check-quality-kotlin-code/&#34;&gt;Check the quality of Kotlin code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://smyachenkov.com/posts/kotlin-static-analysis-tools/&#34;&gt;Kotlin Static Analysis Tools&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://doi.org/10.1145/3267183.3267186&#34;&gt;Are you still smelling it?: A comparative study between Java and Kotlin language&lt;/a&gt; by &lt;a href=&#34;https://github.com/matheusflauzino/smells-experiment-Kotlin-and-Java&#34;&gt;Flauzino et al.&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://galler.dev/preventing-software-antipatterns-with-detekt/&#34;&gt;Preventing software antipatterns with Detekt&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Integrations:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.codacy.com&#34;&gt;Codacy&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/vanniktech/gradle-code-quality-tools-plugin&#34;&gt;Gradle plugin that configures Error Prone, Checkstyle, PMD, CPD, Lint, Detekt &amp;amp; Ktlint&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/tomasbjerre/violations-lib&#34;&gt;Violations Lib&lt;/a&gt; is a Java library for parsing report files like static code analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/TouK/sputnik&#34;&gt;sputnik&lt;/a&gt; is a free tool for static code review and provides support for detekt&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/novoda/gradle-static-analysis-plugin&#34;&gt;Novoda Gradle Static Analysis plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Ozsie/detekt-maven-plugin&#34;&gt;Detekt Maven plugin&lt;/a&gt; that wraps the Detekt CLI&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/buildfoundation/bazel_rules_detekt&#34;&gt;Detekt Bazel plugin&lt;/a&gt; that wraps the Detekt CLI&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/btkelly/gnag&#34;&gt;Gradle plugin that helps facilitate GitHub PR checking and automatic commenting of violations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://codefactor.io/&#34;&gt;Codefactor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marketplace/actions/detekt-all&#34;&gt;GitHub Action: Detekt All&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/intellij-platform-plugin-template&#34;&gt;IntelliJ Platform Plugin Template&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/marketplace/muse-dev&#34;&gt;Sonatype Lift&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Custom rules and reports from 3rd parties:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/cph-cachet/detekt-verify-implementation&#34;&gt;detekt-verify-implementation&lt;/a&gt; by cph-cachet&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/mkohm/detekt-hint&#34;&gt;detekt-hint&lt;/a&gt; by mkohm is a plugin to detekt that provides detection of design principle violations through integration with Danger&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gitlab.com/cromefire_/detekt-gitlab-report&#34;&gt;GitLab report format&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h4&gt;Credits&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/jetbrains/&#34;&gt;JetBrains&lt;/a&gt; - Creating IntelliJ + Kotlin&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/pmd/pmd&#34;&gt;PMD&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/checkstyle/checkstyle&#34;&gt;Checkstyle&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt; - Ideas for threshold values and style rules&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>shadowsocks/shadowsocks-android</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/shadowsocks/shadowsocks-android</id>
    <link href="https://github.com/shadowsocks/shadowsocks-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A shadowsocks client for Android&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;a href=&#34;https://shadowsocks.org&#34;&gt;Shadowsocks&lt;/a&gt; for Android&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/shadowsocks/shadowsocks-android&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/shadowsocks/shadowsocks-android.svg?style=shield&#34; alt=&#34;CircleCI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=23&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API-23%2B-brightgreen.svg?style=flat&#34; alt=&#34;API&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-android/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/shadowsocks/shadowsocks-android/total.svg?sanitize=true&#34; alt=&#34;Releases&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-android/search?l=kotlin&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/languages/top/shadowsocks/shadowsocks-android.svg?sanitize=true&#34; alt=&#34;Language: Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.codacy.com/gh/shadowsocks/shadowsocks-android/dashboard?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=shadowsocks/shadowsocks-android&amp;amp;utm_campaign=Badge_Grade&#34;&gt;&lt;img src=&#34;https://app.codacy.com/project/badge/Grade/22ca240f272445548e332a42d5a20d95&#34; alt=&#34;Codacy Badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.gnu.org/licenses/gpl-3.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPL--3.0-orange.svg?sanitize=true&#34; alt=&#34;License: GPL-3.0&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.github.shadowsocks&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; height=&#34;48&#34;&gt;&lt;/a&gt; for Android &amp;amp; Chrome OS (&lt;a href=&#34;https://play.google.com/apps/testing/com.github.shadowsocks&#34;&gt;beta&lt;/a&gt;)&lt;br&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.github.shadowsocks.tv&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; height=&#34;48&#34;&gt;&lt;/a&gt; for Android TV (&lt;a href=&#34;https://play.google.com/apps/testing/com.github.shadowsocks.tv&#34;&gt;beta&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;h3&gt;PREREQUISITES&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;JDK 11+&lt;/li&gt; &#xA; &lt;li&gt;Android SDK &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Android NDK&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Rust with Android targets installed&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  $ cd core/src/main/rust/shadowsocks-rust&#xA;  $ rustup target add armv7-linux-androideabi aarch64-linux-android i686-linux-android x86_64-linux-android&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;BUILD&lt;/h3&gt; &#xA;&lt;p&gt;You can check whether the latest commit builds under UNIX environment by checking Travis status.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Install prerequisites&lt;/li&gt; &#xA; &lt;li&gt;Clone the repo using &lt;code&gt;git clone --recurse-submodules &amp;lt;repo&amp;gt;&lt;/code&gt; or update submodules using &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Build it using Android Studio or gradle script&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;BUILD WITH DOCKER&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Clone the repo using &lt;code&gt;git clone --recurse-submodules &amp;lt;repo&amp;gt;&lt;/code&gt; or update submodules using &lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run &lt;code&gt;docker run --rm -v ${PWD}:/build -w /build shadowsocks/android-ndk-go ./gradlew assembleDebug&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;CONTRIBUTING&lt;/h3&gt; &#xA;&lt;p&gt;If you are interested in contributing or getting involved with this project, please read the CONTRIBUTING page for more information. The page can be found &lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-android/raw/master/CONTRIBUTING.md&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://discourse.shadowsocks.org/t/poeditor-translation-main-thread/30&#34;&gt;TRANSLATE&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;OPEN SOURCE LICENSES&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;redsocks: &lt;a href=&#34;https://github.com/shadowsocks/redsocks/raw/shadowsocks-android/README&#34;&gt;APL 2.0&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;libevent: &lt;a href=&#34;https://github.com/shadowsocks/libevent/raw/master/LICENSE&#34;&gt;BSD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;tun2socks: &lt;a href=&#34;https://github.com/shadowsocks/badvpn/raw/shadowsocks-android/COPYING&#34;&gt;BSD&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;shadowsocks-rust: &lt;a href=&#34;https://github.com/shadowsocks/shadowsocks-rust/raw/master/LICENSE&#34;&gt;MIT&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;libsodium: &lt;a href=&#34;https://github.com/jedisct1/libsodium/raw/master/LICENSE&#34;&gt;ISC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;OpenSSL: &lt;a href=&#34;https://www.openssl.org/source/license-openssl-ssleay.txt&#34;&gt;OpenSSL License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;LICENSE&lt;/h3&gt; &#xA;&lt;p&gt;Copyright (C) 2017 by Max Lv &amp;lt;&lt;a href=&#34;mailto:max.c.lv@gmail.com&#34;&gt;max.c.lv@gmail.com&lt;/a&gt;&amp;gt;&lt;br&gt; Copyright (C) 2017 by Mygod Studio &amp;lt;&lt;a href=&#34;mailto:contact-shadowsocks-android@mygod.be&#34;&gt;contact-shadowsocks-android@mygod.be&lt;/a&gt;&amp;gt;&lt;/p&gt; &#xA;&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/storage-samples</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/android/storage-samples</id>
    <link href="https://github.com/android/storage-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multiple samples showing the best practices in storage APIs on Android.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Storage Samples Repository&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of individual Android Studio projects to help you learn about storage in Android (saving files in storage, key-value data, sharing simple data, sharing files, printing files, content providers, Storage Access Framework [SAF], etc.).&lt;/p&gt; &#xA;&lt;p&gt;For more information, please &lt;a href=&#34;https://developer.android.com/guide/topics/providers/document-provider&#34;&gt;read our documentation&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/camera-samples</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/android/camera-samples</id>
    <link href="https://github.com/android/camera-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Multiple samples showing the best practices in camera APIs on Android.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Camera Samples Repository&lt;/h1&gt; &#xA;&lt;p&gt;This repository contains a set of individual Android Studio projects to help you get started with the &lt;a href=&#34;https://developer.android.com/training/camerax&#34;&gt;CameraX&lt;/a&gt; and &lt;a href=&#34;https://developer.android.com/training/camera2&#34;&gt;Camera2&lt;/a&gt; APIs in Android.&lt;/p&gt; &#xA;&lt;h2&gt;Samples&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Sample&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/camera-samples/main/CameraXBasic&#34;&gt;CameraXBasic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates how to use CameraX APIs.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/camera-samples/main/CameraXAdvanced&#34;&gt;CameraXAdvanced&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates how to use CameraX APIs with TFLite and others&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/camera-samples/main/CameraXVideo&#34;&gt;CameraXVideo&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates how to use CameraX VideoCapture API.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/camera-samples/main/Camera2Basic&#34;&gt;Camera2Basic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates capturing JPEG, RAW and DEPTH images, e.g. unprocessed pixel data directly from the camera sensor.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/camera-samples/main/Camera2SlowMotion&#34;&gt;Camera2SlowMotion&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates capturing high-speed video in a constrained camera capture session.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/camera-samples/main/Camera2Video&#34;&gt;Camera2Video&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates recording video using the Camera2 API and MediaRecorder.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/camera-samples/main/Camera2Extensions&#34;&gt;Camera2Extensions&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates Camera2 extension live preview and still capture.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/android/camera-samples/main/HdrViewfinder&#34;&gt;HdrViewfinder&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Demonstrates use of RenderScript to display a live HDR feed from camera frames using Camera2 API.&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>JetBrains/Exposed</title>
    <updated>2022-06-01T02:13:08Z</updated>
    <id>tag:github.com,2022-06-01:/JetBrains/Exposed</id>
    <link href="https://github.com/JetBrains/Exposed" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin SQL Framework&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/logo.png&#34; alt=&#34;Exposed&#34; width=&#34;315&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/team.svg?sanitize=true&#34; alt=&#34;JetBrains team project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.slack.com/archives/C0CG7E0A1&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@kotlinlang/exposed-yellow.svg?logo=slack?style=flat&#34; alt=&#34;Kotlinlang Slack Channel&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_Exposed_Build&amp;amp;guest=1&#34;&gt;&lt;img src=&#34;https://teamcity.jetbrains.com/app/rest/builds/buildType:(id:KotlinTools_Exposed_Build)/statusIcon&#34; alt=&#34;TC Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://maven-badges.herokuapp.com/maven-central/org.jetbrains.exposed/exposed-core&#34;&gt;&lt;img src=&#34;https://maven-badges.herokuapp.com/maven-central/org.jetbrains.exposed/exposed-core/badge.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Welcome to &lt;strong&gt;Exposed&lt;/strong&gt;, an ORM framework for &lt;a href=&#34;https://github.com/JetBrains/kotlin&#34;&gt;Kotlin&lt;/a&gt;. Exposed offers two levels of database access: typesafe SQL wrapping DSL and lightweight data access objects. Our official mascot is Cuttlefish, which is best known for its outstanding mimicry abilities letting it blend seamlessly in any environment. Just like our mascot, Exposed can mimic a variety of database engines and help you build database applications without hard dependencies on any specific database engine, and switch between them with very little or no changes in your code.&lt;/p&gt; &#xA;&lt;h2&gt;Supported Databases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;H2&lt;/li&gt; &#xA; &lt;li&gt;MySQL&lt;/li&gt; &#xA; &lt;li&gt;MariaDB&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/ORACLE.md&#34;&gt;Oracle&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL&lt;/li&gt; &#xA; &lt;li&gt;PostgreSQL using the &lt;a href=&#34;https://github.com/impossibl/pgjdbc-ng&#34;&gt;pgjdbc-ng&lt;/a&gt; JDBC driver&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/SQLServer.md&#34;&gt;SQL Server&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;SQLite&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Links&lt;/h2&gt; &#xA;&lt;p&gt;Exposed is currently available for &lt;strong&gt;maven/gradle builds&lt;/strong&gt; at &lt;a href=&#34;https://search.maven.org/search?q=g:org.jetbrains.exposed&#34;&gt;Maven Central&lt;/a&gt; (read &lt;a href=&#34;https://github.com/JetBrains/Exposed/wiki/Getting-Started#download&#34;&gt;Getting started&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/Exposed/wiki&#34;&gt;Wiki&lt;/a&gt; with examples and docs.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/ROADMAP.md&#34;&gt;Roadmap&lt;/a&gt; to see what&#39;s coming next.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/ChangeLog.md&#34;&gt;Change log&lt;/a&gt; of improvements and bug fixes.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you have any questions feel free to ask at our &lt;a href=&#34;https://kotlinlang.slack.com/archives/C0CG7E0A1&#34;&gt;#exposed&lt;/a&gt; channel on &lt;a href=&#34;https://kotlinlang.slack.com&#34;&gt;kotlinlang.slack.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;h3&gt;SQL DSL&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import org.jetbrains.exposed.sql.*&#xA;import org.jetbrains.exposed.sql.transactions.transaction&#xA;&#xA;object Users : Table() {&#xA;    val id = varchar(&#34;id&#34;, 10) // Column&amp;lt;String&amp;gt;&#xA;    val name = varchar(&#34;name&#34;, length = 50) // Column&amp;lt;String&amp;gt;&#xA;    val cityId = (integer(&#34;city_id&#34;) references Cities.id).nullable() // Column&amp;lt;Int?&amp;gt;&#xA;&#xA;    override val primaryKey = PrimaryKey(id, name = &#34;PK_User_ID&#34;) // name is optional here&#xA;}&#xA;&#xA;object Cities : Table() {&#xA;    val id = integer(&#34;id&#34;).autoIncrement() // Column&amp;lt;Int&amp;gt;&#xA;    val name = varchar(&#34;name&#34;, 50) // Column&amp;lt;String&amp;gt;&#xA;&#xA;    override val primaryKey = PrimaryKey(id, name = &#34;PK_Cities_ID&#34;)&#xA;}&#xA;&#xA;fun main() {&#xA;    Database.connect(&#34;jdbc:h2:mem:test&#34;, driver = &#34;org.h2.Driver&#34;, user = &#34;root&#34;, password = &#34;&#34;)&#xA;&#xA;    transaction {&#xA;        addLogger(StdOutSqlLogger)&#xA;&#xA;        SchemaUtils.create (Cities, Users)&#xA;&#xA;        val saintPetersburgId = Cities.insert {&#xA;            it[name] = &#34;St. Petersburg&#34;&#xA;        } get Cities.id&#xA;&#xA;        val munichId = Cities.insert {&#xA;            it[name] = &#34;Munich&#34;&#xA;        } get Cities.id&#xA;&#xA;        val pragueId = Cities.insert {&#xA;            it.update(name, stringLiteral(&#34;   Prague   &#34;).trim().substring(1, 2))&#xA;        }[Cities.id]&#xA;&#xA;        val pragueName = Cities.select { Cities.id eq pragueId }.single()[Cities.name]&#xA;        assertEquals(pragueName, &#34;Pr&#34;)&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;andrey&#34;&#xA;            it[name] = &#34;Andrey&#34;&#xA;            it[Users.cityId] = saintPetersburgId&#xA;        }&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;sergey&#34;&#xA;            it[name] = &#34;Sergey&#34;&#xA;            it[Users.cityId] = munichId&#xA;        }&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;eugene&#34;&#xA;            it[name] = &#34;Eugene&#34;&#xA;            it[Users.cityId] = munichId&#xA;        }&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;alex&#34;&#xA;            it[name] = &#34;Alex&#34;&#xA;            it[Users.cityId] = null&#xA;        }&#xA;&#xA;        Users.insert {&#xA;            it[id] = &#34;smth&#34;&#xA;            it[name] = &#34;Something&#34;&#xA;            it[Users.cityId] = null&#xA;        }&#xA;&#xA;        Users.update({ Users.id eq &#34;alex&#34;}) {&#xA;            it[name] = &#34;Alexey&#34;&#xA;        }&#xA;&#xA;        Users.deleteWhere{ Users.name like &#34;%thing&#34;}&#xA;&#xA;        println(&#34;All cities:&#34;)&#xA;&#xA;        for (city in Cities.selectAll()) {&#xA;            println(&#34;${city[Cities.id]}: ${city[Cities.name]}&#34;)&#xA;        }&#xA;&#xA;        println(&#34;Manual join:&#34;)&#xA;        (Users innerJoin Cities).slice(Users.name, Cities.name).&#xA;            select {(Users.id.eq(&#34;andrey&#34;) or Users.name.eq(&#34;Sergey&#34;)) and&#xA;                    Users.id.eq(&#34;sergey&#34;) and Users.cityId.eq(Cities.id)}.forEach {&#xA;            println(&#34;${it[Users.name]} lives in ${it[Cities.name]}&#34;)&#xA;        }&#xA;&#xA;        println(&#34;Join with foreign key:&#34;)&#xA;&#xA;&#xA;        (Users innerJoin Cities).slice(Users.name, Users.cityId, Cities.name).&#xA;                select { Cities.name.eq(&#34;St. Petersburg&#34;) or Users.cityId.isNull()}.forEach {&#xA;            if (it[Users.cityId] != null) {&#xA;                println(&#34;${it[Users.name]} lives in ${it[Cities.name]}&#34;)&#xA;            }&#xA;            else {&#xA;                println(&#34;${it[Users.name]} lives nowhere&#34;)&#xA;            }&#xA;        }&#xA;&#xA;        println(&#34;Functions and group by:&#34;)&#xA;&#xA;        ((Cities innerJoin Users).slice(Cities.name, Users.id.count()).selectAll().groupBy(Cities.name)).forEach {&#xA;            val cityName = it[Cities.name]&#xA;            val userCount = it[Users.id.count()]&#xA;&#xA;            if (userCount &amp;gt; 0) {&#xA;                println(&#34;$userCount user(s) live(s) in $cityName&#34;)&#xA;            } else {&#xA;                println(&#34;Nobody lives in $cityName&#34;)&#xA;            }&#xA;        }&#xA;&#xA;        SchemaUtils.drop (Users, Cities)&#xA;    }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generated SQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;    SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, CONSTRAINT PK_Cities_ID PRIMARY KEY (id))&#xA;    SQL: CREATE TABLE IF NOT EXISTS Users (id VARCHAR(10) NOT NULL, name VARCHAR(50) NOT NULL, city_id INT NULL, CONSTRAINT PK_User_ID PRIMARY KEY (id))&#xA;    SQL: ALTER TABLE Users ADD FOREIGN KEY (city_id) REFERENCES Cities(id)&#xA;    SQL: INSERT INTO Cities (name) VALUES (&#39;St. Petersburg&#39;)&#xA;    SQL: INSERT INTO Cities (name) VALUES (&#39;Munich&#39;)&#xA;    SQL: INSERT INTO Cities (name) VALUES (&#39;Prague&#39;)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;andrey&#39;, &#39;Andrey&#39;, 1)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;sergey&#39;, &#39;Sergey&#39;, 2)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;eugene&#39;, &#39;Eugene&#39;, 2)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;alex&#39;, &#39;Alex&#39;, NULL)&#xA;    SQL: INSERT INTO Users (id, name, city_id) VALUES (&#39;smth&#39;, &#39;Something&#39;, NULL)&#xA;    SQL: UPDATE Users SET name=&#39;Alexey&#39; WHERE Users.id = &#39;alex&#39;&#xA;    SQL: DELETE FROM Users WHERE Users.name LIKE &#39;%thing&#39;&#xA;    All cities:&#xA;    SQL: SELECT Cities.id, Cities.name FROM Cities&#xA;    1: St. Petersburg&#xA;    2: Munich&#xA;    3: Prague&#xA;    Manual join:&#xA;    SQL: SELECT Users.name, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE ((Users.id = &#39;andrey&#39;) or (Users.name = &#39;Sergey&#39;)) and Users.id = &#39;sergey&#39; and Users.city_id = Cities.id&#xA;    Sergey lives in Munich&#xA;    Join with foreign key:&#xA;    SQL: SELECT Users.name, Users.city_id, Cities.name FROM Users INNER JOIN Cities ON Cities.id = Users.city_id WHERE (Cities.name = &#39;St. Petersburg&#39;) or (Users.city_id IS NULL)&#xA;    Andrey lives in St. Petersburg&#xA;    Functions and group by:&#xA;    SQL: SELECT Cities.name, COUNT(Users.id) FROM Cities INNER JOIN Users ON Cities.id = Users.city_id GROUP BY Cities.name&#xA;    1 user(s) live(s) in St. Petersburg&#xA;    2 user(s) live(s) in Munich&#xA;    SQL: DROP TABLE Users&#xA;    SQL: DROP TABLE Cities&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;DAO&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import org.jetbrains.exposed.dao.*&#xA;import org.jetbrains.exposed.dao.id.EntityID&#xA;import org.jetbrains.exposed.dao.id.IntIdTable&#xA;import org.jetbrains.exposed.sql.*&#xA;import org.jetbrains.exposed.sql.transactions.transaction&#xA;&#xA;object Users : IntIdTable() {&#xA;    val name = varchar(&#34;name&#34;, 50).index()&#xA;    val city = reference(&#34;city&#34;, Cities)&#xA;    val age = integer(&#34;age&#34;)&#xA;}&#xA;&#xA;object Cities: IntIdTable() {&#xA;    val name = varchar(&#34;name&#34;, 50)&#xA;}&#xA;&#xA;class User(id: EntityID&amp;lt;Int&amp;gt;) : IntEntity(id) {&#xA;    companion object : IntEntityClass&amp;lt;User&amp;gt;(Users)&#xA;&#xA;    var name by Users.name&#xA;    var city by City referencedOn Users.city&#xA;    var age by Users.age&#xA;}&#xA;&#xA;class City(id: EntityID&amp;lt;Int&amp;gt;) : IntEntity(id) {&#xA;    companion object : IntEntityClass&amp;lt;City&amp;gt;(Cities)&#xA;&#xA;    var name by Cities.name&#xA;    val users by User referrersOn Users.city&#xA;}&#xA;&#xA;fun main() {&#xA;    Database.connect(&#34;jdbc:h2:mem:test&#34;, driver = &#34;org.h2.Driver&#34;, user = &#34;root&#34;, password = &#34;&#34;)&#xA;&#xA;    transaction {&#xA;        addLogger(StdOutSqlLogger)&#xA;&#xA;        SchemaUtils.create (Cities, Users)&#xA;&#xA;        val stPete = City.new {&#xA;            name = &#34;St. Petersburg&#34;&#xA;        }&#xA;&#xA;        val munich = City.new {&#xA;            name = &#34;Munich&#34;&#xA;        }&#xA;&#xA;        User.new {&#xA;            name = &#34;a&#34;&#xA;            city = stPete&#xA;            age = 5&#xA;        }&#xA;&#xA;        User.new {&#xA;            name = &#34;b&#34;&#xA;            city = stPete&#xA;            age = 27&#xA;        }&#xA;&#xA;        User.new {&#xA;            name = &#34;c&#34;&#xA;            city = munich&#xA;            age = 42&#xA;        }&#xA;&#xA;        println(&#34;Cities: ${City.all().joinToString {it.name}}&#34;)&#xA;        println(&#34;Users in ${stPete.name}: ${stPete.users.joinToString {it.name}}&#34;)&#xA;        println(&#34;Adults: ${User.find { Users.age greaterEq 18 }.joinToString {it.name}}&#34;)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Generated SQL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;    SQL: CREATE TABLE IF NOT EXISTS Cities (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, CONSTRAINT pk_Cities PRIMARY KEY (id))&#xA;    SQL: CREATE TABLE IF NOT EXISTS Users (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(50) NOT NULL, city INT NOT NULL, age INT NOT NULL, CONSTRAINT pk_Users PRIMARY KEY (id))&#xA;    SQL: CREATE INDEX Users_name ON Users (name)&#xA;    SQL: ALTER TABLE Users ADD FOREIGN KEY (city) REFERENCES Cities(id)&#xA;    SQL: INSERT INTO Cities (name) VALUES (&#39;St. Petersburg&#39;),(&#39;Munich&#39;)&#xA;    SQL: SELECT Cities.id, Cities.name FROM Cities&#xA;    Cities: St. Petersburg, Munich&#xA;    SQL: INSERT INTO Users (name, city, age) VALUES (&#39;a&#39;, 1, 5),(&#39;b&#39;, 1, 27),(&#39;c&#39;, 2, 42)&#xA;    SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.city = 1&#xA;    Users in St. Petersburg: a, b&#xA;    SQL: SELECT Users.id, Users.name, Users.city, Users.age FROM Users WHERE Users.age &amp;gt;= 18&#xA;    Adults: b, c&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Apache License, Version 2.0, (&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/Exposed/master/LICENSE.txt&#34;&gt;LICENSE&lt;/a&gt; or &lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;)&lt;/p&gt;</summary>
  </entry>
</feed>