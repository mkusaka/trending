<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-07-24T02:13:36Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>android/nowinandroid</title>
    <updated>2022-07-24T02:13:36Z</updated>
    <id>tag:github.com,2022-07-24:/android/nowinandroid</id>
    <link href="https://github.com/android/nowinandroid" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A fully functional Android app built entirely with Kotlin and Jetpack Compose&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/nia-splash.jpg&#34; alt=&#34;Now in Android&#34; title=&#34;Now in Android&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Now in Android App [Work in progress 🚧]&lt;/h1&gt; &#xA;&lt;p&gt;This is the repository for the &lt;a href=&#34;https://developer.android.com/series/now-in-android&#34;&gt;Now in Android&lt;/a&gt; app.&lt;/p&gt; &#xA;&lt;p&gt;Now in Android is a fully functional Android app built entirely with Kotlin and Jetpack Compose. It follows Android design and development best practices and is intended to be a useful reference for developers. As a running app, it&#39;s intended to help developers keep up-to-date with the world of Android development by providing regular news updates.&lt;/p&gt; &#xA;&lt;p&gt;The app is currently in early stage development and is not yet available on the Play Store.&lt;/p&gt; &#xA;&lt;h1&gt;Features&lt;/h1&gt; &#xA;&lt;p&gt;Now in Android displays content from the &lt;a href=&#34;https://developer.android.com/series/now-in-android&#34;&gt;Now in Android&lt;/a&gt; series. Users can browse for links to recent videos, articles and other content. Users can also follow topics they are interested in or follow specific authors.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/screenshot-1-foryou.png&#34; alt=&#34;Screenshot showing For You screen&#34; title=&#34;Screenshot showing For You screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/screenshot-2-interests.png&#34; alt=&#34;Screenshot showing Interests screen&#34; title=&#34;Screenshot showing Interests screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/images/screenshot-3-topicdetail.png&#34; alt=&#34;Screenshot showing Topic detail screen&#34; title=&#34;Screenshot showing Topic detail screen&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Development Environment&lt;/h1&gt; &#xA;&lt;p&gt;Now in Android uses the Gradle build system and can be imported directly into the latest stable version of Android Studio (available &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;here&lt;/a&gt;). The &lt;code&gt;debug&lt;/code&gt; build can be built and run using the default configuration.&lt;/p&gt; &#xA;&lt;p&gt;Once you&#39;re up and running, you can refer to the learning journeys below to get a better understanding of which libraries and tools are being used, the reasoning behind the approaches to UI, testing, architecture and more, and how all of these different pieces of the project fit together to create a complete app.&lt;/p&gt; &#xA;&lt;p&gt;NOTE: Building the app using an M1 Mac will require the use of &lt;a href=&#34;https://support.apple.com/en-gb/HT211861&#34;&gt;Rosetta&lt;/a&gt;. See &lt;a href=&#34;https://github.com/protocolbuffers/protobuf/issues/9397#issuecomment-1086138036&#34;&gt;the following bug&lt;/a&gt; for more details.&lt;/p&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;The Now in Android app follows the &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;official architecture guidance&lt;/a&gt; and is described in detail in the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ArchitectureLearningJourney.md&#34;&gt;architecture learning journey&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Modularization&lt;/h1&gt; &#xA;&lt;p&gt;The Now in Android app has been fully modularized and you can find the detailed guidance and description of the modularization strategy used in &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ModularizationLearningJourney.md&#34;&gt;modularization learning journey&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Build&lt;/h1&gt; &#xA;&lt;p&gt;The app contains the usual &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; build variants.&lt;/p&gt; &#xA;&lt;p&gt;In addition, the &lt;code&gt;benchmark&lt;/code&gt; variant of &lt;code&gt;app&lt;/code&gt; is used to test startup performance and generate a baseline profile (see below for more information).&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;app-nia-catalog&lt;/code&gt; is a standalone app that displays the list of components that are stylized for Now in Android.&lt;/p&gt; &#xA;&lt;p&gt;The app also uses &lt;a href=&#34;https://developer.android.com/studio/build/build-variants#product-flavors&#34;&gt;product flavors&lt;/a&gt; to control where content for the app should be loaded from.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;demo&lt;/code&gt; flavor uses static local data to allow immediate building and exploring the UI.&lt;/p&gt; &#xA;&lt;p&gt;The &lt;code&gt;prod&lt;/code&gt; flavor makes real network calls to a backend server, providing up-to-date content. At this time, there is not a public backend available.&lt;/p&gt; &#xA;&lt;p&gt;For normal development use the &lt;code&gt;demoDebug&lt;/code&gt; variant. For UI performance testing use the &lt;code&gt;demoRelease&lt;/code&gt; variant.&lt;/p&gt; &#xA;&lt;h1&gt;Testing&lt;/h1&gt; &#xA;&lt;p&gt;To facilitate testing of components, Now in Android uses dependency injection with &lt;a href=&#34;https://developer.android.com/training/dependency-injection/hilt-android&#34;&gt;Hilt&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Most data layer components are defined as interfaces. Then, concrete implementations (with various dependencies) are bound to provide those interfaces to other components in the app. In tests, Now in Android notably does &lt;em&gt;not&lt;/em&gt; use any mocking libraries. Instead, the production implementations can be replaced with test doubles using Hilt&#39;s testing APIs (or via manual constructor injection for &lt;code&gt;ViewModel&lt;/code&gt; tests).&lt;/p&gt; &#xA;&lt;p&gt;These test doubles implement the same interface as the production implementations, and generally provide a simplified (but still realistic) implementation with additional testing hooks. This results in less brittle tests that may exercise more production code, instead of just verifying specific calls against mocks.&lt;/p&gt; &#xA;&lt;p&gt;Examples:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;In instrumentation tests, a temporary folder is used to store the user&#39;s preferences, which is wiped after reach test. This allows using the real &lt;code&gt;DataStore&lt;/code&gt; and exercising all related code, instead of mocking the flow of data updates.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;There are &lt;code&gt;Test&lt;/code&gt; implementations of each repository, which implement the normal, full repository interface and also provide test-only hooks. &lt;code&gt;ViewModel&lt;/code&gt; tests use these &lt;code&gt;Test&lt;/code&gt; repositories, and thus can use the test-only hooks to manipulate the the state of the &lt;code&gt;Test&lt;/code&gt; repository and verify the resulting behavior, instead of checking that specific repository methods were called.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;UI&lt;/h1&gt; &#xA;&lt;p&gt;UI components are designed according to &lt;a href=&#34;https://m3.material.io/&#34;&gt;Material 3 guidelines&lt;/a&gt; and built entirely using &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The app has two themes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Dynamic color - uses colors based on the &lt;a href=&#34;https://material.io/blog/announcing-material-you&#34;&gt;user&#39;s current color theme&lt;/a&gt; (if supported)&lt;/li&gt; &#xA; &lt;li&gt;Default theme - uses predefined colors when dynamic color is not supported&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Each theme also supports dark mode.&lt;/p&gt; &#xA;&lt;p&gt;The app uses adaptive layouts to &lt;a href=&#34;https://developer.android.com/guide/topics/large-screens/support-different-screen-sizes&#34;&gt;support different screen sizes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Find out more about the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/docs/ArchitectureLearningJourney.md#ui-layer&#34;&gt;UI architecture here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Baseline profiles&lt;/h1&gt; &#xA;&lt;p&gt;The baseline profile for this app is located at &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/app/src/main/baseline-prof.txt&#34;&gt;&lt;code&gt;app/src/main/baseline-prof.txt&lt;/code&gt;&lt;/a&gt;. It contains rules that enable AOT compilation of the critical user path taken during app launch. For more information on baseline profiles, read &lt;a href=&#34;https://developer.android.com/studio/profile/baselineprofiles&#34;&gt;this document&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: The baseline profile needs to be re-generated for release builds that touched code which changes app startup.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To generate the baseline profile, select the &lt;code&gt;benchmark&lt;/code&gt; build variant and run the &lt;code&gt;BaselineProfileGenerator&lt;/code&gt; benchmark test on an AOSP Android Emulator. Then copy the resulting baseline profile from the emulator to &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/app/src/main/baseline-prof.txt&#34;&gt;&lt;code&gt;app/src/main/baseline-prof.txt&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;Now in Android is distributed under the terms of the Apache License (Version 2.0). See the &lt;a href=&#34;https://raw.githubusercontent.com/android/nowinandroid/main/LICENSE&#34;&gt;license&lt;/a&gt; for more information.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mamoe/mirai</title>
    <updated>2022-07-24T02:13:36Z</updated>
    <id>tag:github.com,2022-07-24:/mamoe/mirai</id>
    <link href="https://github.com/mamoe/mirai" rel="alternate"></link>
    <summary type="html">&lt;p&gt;高效率 QQ 机器人支持库&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;160&#34; src=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/mirai.png&#34; alt=&#34;logo&#34;&gt;&#xA; &lt;br&gt; &#xA; &lt;img width=&#34;95&#34; src=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/mirai.svg?sanitize=true&#34; alt=&#34;title&#34;&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://gitter.im/mamoe/mirai?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;&lt;img src=&#34;https://badges.gitter.im/mamoe/mirai.svg?sanitize=true&#34; alt=&#34;Gitter&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mirai.mamoe.net&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/post-on%20MiraiForum-yellow&#34; alt=&#34;MiraiForum&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;mirai 是一个在全平台下运行，提供 QQ Android 协议支持的高效率机器人库&lt;/p&gt; &#xA; &lt;p&gt;这个项目的名字来源于 &lt;/p&gt;&#xA; &lt;p&gt;&lt;a href=&#34;http://www.kyotoanimation.co.jp/&#34;&gt;京都动画&lt;/a&gt;作品&lt;a href=&#34;https://zh.moegirl.org.cn/zh-hans/%E5%A2%83%E7%95%8C%E7%9A%84%E5%BD%BC%E6%96%B9&#34;&gt;《境界的彼方》&lt;/a&gt;的&lt;a href=&#34;https://zh.moegirl.org.cn/zh-hans/%E6%A0%97%E5%B1%B1%E6%9C%AA%E6%9D%A5&#34;&gt;栗山未来(Kuriyama &lt;b&gt;mirai&lt;/b&gt;)&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://www.crypton.co.jp/&#34;&gt;CRYPTON&lt;/a&gt;以&lt;a href=&#34;https://www.crypton.co.jp/miku_eng&#34;&gt;初音未来&lt;/a&gt;为代表的创作与活动&lt;a href=&#34;https://magicalmirai.com/2019/index_en.html&#34;&gt;(Magical &lt;b&gt;mirai&lt;/b&gt;)&lt;/a&gt;&lt;/p&gt; 图标以及形象由画师&#xA; &lt;a href=&#34;https://github.com/DazeCake&#34;&gt;DazeCake&lt;/a&gt;绘制&#xA; &lt;p&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;mirai&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/README-eng.md&#34;&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;h3&gt;一切开发旨在学习，请勿用于非法用途&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;mirai 是完全免费且开放源代码的软件，仅供学习和娱乐用途使用&lt;/li&gt; &#xA; &lt;li&gt;mirai 不会通过任何方式强制收取费用，或对使用者提出物质条件&lt;/li&gt; &#xA; &lt;li&gt;mirai 由整个开源社区维护，并不是属于某个个体的作品，所有贡献者都享有其作品的著作权。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;许可证&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2019-2022 Mamoe Technologies and contributors.&#xA;&#xA;This program is free software: you can redistribute it and/or modify&#xA;it under the terms of the GNU Affero General Public License as&#xA;published by the Free Software Foundation, either version 3 of the&#xA;License, or (at your option) any later version.&#xA;&#xA;This program is distributed in the hope that it will be useful,&#xA;but WITHOUT ANY WARRANTY; without even the implied warranty of&#xA;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#xA;GNU Affero General Public License for more details.&#xA;&#xA;You should have received a copy of the GNU Affero General Public License&#xA;along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;mirai&lt;/code&gt; 采用 &lt;code&gt;AGPLv3&lt;/code&gt; 协议开源。为了整个社区的良性发展，我们&lt;strong&gt;强烈建议&lt;/strong&gt;您做到以下几点：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;间接接触（包括但不限于使用 &lt;code&gt;Http API&lt;/code&gt; 或 跨进程技术）到 &lt;code&gt;mirai&lt;/code&gt; 的软件使用 &lt;code&gt;AGPLv3&lt;/code&gt; 开源&lt;/strong&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;不鼓励，不支持一切商业使用&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;鉴于项目的特殊性，开发团队可能在任何时间&lt;strong&gt;停止更新&lt;/strong&gt;或&lt;strong&gt;删除项目&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;h3&gt;&lt;strong&gt;mirai 的形象图及项目图标都拥有著作权保护。&lt;/strong&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;在未经过允许的情况下，任何人都不可以使用形象图和图标，或本文初的有关 mirai 名称来历的介绍原文，用于商业用途或是放置在项目首页，或其他未许可的行为。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h3&gt;衍生软件需声明引用&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;若引用 mirai 发布的软件包而不修改 mirai，则衍生项目需在描述的任意部位提及使用 mirai。&lt;/li&gt; &#xA; &lt;li&gt;若修改 mirai 源代码再发布，&lt;strong&gt;或参考 mirai 内部实现发布另一个项目&lt;/strong&gt;，则衍生项目必须在&lt;strong&gt;文章首部&lt;/strong&gt;或 &#39;mirai&#39; 相关内容&lt;strong&gt;首次出现&lt;/strong&gt;的位置&lt;strong&gt;明确声明&lt;/strong&gt;来源于本仓库 (&lt;code&gt;https://github.com/mamoe/mirai&lt;/code&gt;)。不得扭曲或隐藏免费且开源的事实。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;协议支持&lt;/h2&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;支持的协议列表&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;消息相关&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;文字&lt;/li&gt; &#xA;  &lt;li&gt;原生表情&lt;/li&gt; &#xA;  &lt;li&gt;商城表情&lt;/li&gt; &#xA;  &lt;li&gt;戳一戳&lt;/li&gt; &#xA;  &lt;li&gt;图片 （自定义表情）&lt;/li&gt; &#xA;  &lt;li&gt;XML，JSON 等富文本消息&lt;/li&gt; &#xA;  &lt;li&gt;长消息（5000 字符 + 50 图片）&lt;/li&gt; &#xA;  &lt;li&gt;引用回复&lt;/li&gt; &#xA;  &lt;li&gt;合并转发&lt;/li&gt; &#xA;  &lt;li&gt;撤回&lt;/li&gt; &#xA;  &lt;li&gt;提及群员&lt;/li&gt; &#xA;  &lt;li&gt;提及全体成员&lt;/li&gt; &#xA;  &lt;li&gt;语音&lt;/li&gt; &#xA;  &lt;li&gt;闪照&lt;/li&gt; &#xA;  &lt;li&gt;撤回群员消息&lt;/li&gt; &#xA;  &lt;li&gt;自定义消息&lt;/li&gt; &#xA;  &lt;li&gt;音乐分享&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;群相关&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;群列表&lt;/li&gt; &#xA;  &lt;li&gt;成员列表&lt;/li&gt; &#xA;  &lt;li&gt;群员权限&lt;/li&gt; &#xA;  &lt;li&gt;禁言&lt;/li&gt; &#xA;  &lt;li&gt;全体禁言&lt;/li&gt; &#xA;  &lt;li&gt;群公告管理&lt;/li&gt; &#xA;  &lt;li&gt;群设置（自动审批、入群公告、成员邀请、匿名聊天）&lt;/li&gt; &#xA;  &lt;li&gt;处理入群申请&lt;/li&gt; &#xA;  &lt;li&gt;移除群员&lt;/li&gt; &#xA;  &lt;li&gt;群文件&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;好友相关&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;好友列表&lt;/li&gt; &#xA;  &lt;li&gt;处理新好友申请&lt;/li&gt; &#xA;  &lt;li&gt;删除好友&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;p&gt;&lt;strong&gt;其他客户端&lt;/strong&gt;&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;同步其他客户端的消息&lt;/li&gt; &#xA;  &lt;li&gt;向其他客户端发送消息&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h4&gt;不会支持的协议&lt;/h4&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;金钱相关，如点赞、收付款&lt;/li&gt; &#xA; &lt;li&gt;敏感操作，如主动添加好友、主动加入群、主动邀请好友加群&lt;/li&gt; &#xA; &lt;li&gt;安全相关，获取账号登录凭证(token，cookie等)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;一切开发旨在学习，请勿用于非法用途&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;开始&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;用户手册&lt;/strong&gt;: &lt;a href=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/UserManual.md&#34;&gt;UserManual&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;开发文档: &lt;a href=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/README.md&#34;&gt;在 GitHub 阅读&lt;/a&gt; 或 &lt;a href=&#34;https://docs.mirai.mamoe.net/&#34;&gt;在 docs.mirai.mamoe.net 阅读&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;帮助 mirai: &lt;a href=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/docs/contributing/README.md&#34;&gt;CONTRIBUTING&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;论坛: &lt;a href=&#34;https://mirai.mamoe.net/&#34;&gt;Mirai Forum&lt;/a&gt;&lt;/p&gt; &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;&lt;em&gt;Mirai 只有唯一一个官方论坛 Mirai Forum&lt;/em&gt;&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;更新日志: &lt;a href=&#34;https://github.com/mamoe/mirai/releases&#34;&gt;release&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;开发计划: &lt;a href=&#34;https://github.com/mamoe/mirai/milestones&#34;&gt;milestones&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;在线讨论: &lt;a href=&#34;https://gitter.im/mamoe/mirai?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&#34;&gt;Gitter&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mirai 开发组和官方系列项目: &lt;a href=&#34;https://github.com/project-mirai&#34;&gt;project-mirai&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;mirai 社区相关项目 ( 旧): &lt;a href=&#34;https://github.com/project-mirai/awsome-mirai/raw/master/README.md&#34;&gt;awesome-mirai&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;本着与更多 mirai 开发者、用户、支持者共建更好的学习环境为目的，mirai 自 2021 年 3 月 1 日发起官方社区的建设。社区建设可能涉及：&lt;a href=&#34;https://mirai.mamoe.net&#34;&gt;学习论坛&lt;/a&gt;、&lt;a href=&#34;https://github.com/project-mirai/mirai-plugin-center&#34;&gt;插件中心（在建）&lt;/a&gt;等。由于社区的运维需要经费，mirai 项目开启 sponsor 功能。&lt;/li&gt; &#xA; &lt;li&gt;请注意，赞助是全自愿的。赞助者不会获得特权，不赞助也可以使用全部的功能。为资金管理方便，赞助后不设退款、折现等选项。最终解释权归社区运营团队所有。&lt;/li&gt; &#xA; &lt;li&gt;全部赞助金额、流向、票据单号等将&lt;a href=&#34;https://github.com/project-mirai/mirai-sponsor/tree/main&#34;&gt;透明化公示&lt;/a&gt;，欢迎任何人随时查看及提出建议。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;鸣谢&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/zh-hans/IntelliJ_IDEA&#34;&gt;IntelliJ IDEA&lt;/a&gt; 是一个在各个方面都最大程度地提高开发人员的生产力的 IDE，适用于 JVM 平台语言。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;特别感谢 &lt;a href=&#34;https://www.jetbrains.com/?from=mirai&#34;&gt;JetBrains&lt;/a&gt; 为开源项目提供免费的 &lt;a href=&#34;https://www.jetbrains.com/idea/?from=mirai&#34;&gt;IntelliJ IDEA&lt;/a&gt; 等 IDE 的授权&lt;br&gt; &lt;a href=&#34;https://www.jetbrains.com/?from=mirai&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mamoe/mirai/dev/.github/jetbrains-variant-3.png&#34; width=&#34;200&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>uber/RIBs</title>
    <updated>2022-07-24T02:13:36Z</updated>
    <id>tag:github.com,2022-07-24:/uber/RIBs</id>
    <link href="https://github.com/uber/RIBs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Uber&#39;s cross-platform mobile architecture framework.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://github.com/uber/ribs/raw/assets/rib_horizontal_black.png&#34; width=&#34;60%&#34; height=&#34;60%&#34; alt=&#34;RIBs&#34;&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/uber/RIBs/actions/workflows/android.yml&#34;&gt;&lt;img src=&#34;https://github.com/uber/RIBs/actions/workflows/android.yml/badge.svg?branch=main&#34; alt=&#34;Android CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/com.uber.rib/rib-android&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.uber.rib/rib-android.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/ribs&#34;&gt;&lt;img src=&#34;https://img.shields.io/cocoapods/v/RIBs.svg?sanitize=true&#34; alt=&#34;Cocoapods Compatible&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Carthage/Carthage&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?sanitize=true&#34; alt=&#34;Carthage Compatible&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;RIBs is the cross-platform architecture framework behind many mobile apps at Uber. The name RIBs is short for Router, Interactor and Builder, which are core components of this architecture. This framework is designed for mobile apps with a large number of engineers and nested states.&lt;/p&gt; &#xA;&lt;p&gt;The RIBs architecture provides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Shared architecture across iOS and Android.&lt;/strong&gt; Build cross-platform apps that have similar architecture, enabling iOS and Android teams to cross-review business logic code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Testability and Isolation.&lt;/strong&gt; Classes must be easy to unit test and reason about in isolation. Individual RIB classes have distinct responsibilities like: routing, business, view logic, creation. Plus, most RIB logic is decoupled from child RIB logic. This makes RIB classes easy to test and reason about independently.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tooling for developer productivity.&lt;/strong&gt; RIBs come with IDE tooling around code generation, memory leak detection, static analysis and runtime integrations - all which improve developer productivity for large teams or small.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;An architecture that scales.&lt;/strong&gt; This architecture has proven to scale to hundreds of engineers working on the same codebase and apps with hundreds of RIBs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;To get started with RIBs, please refer to the &lt;a href=&#34;https://github.com/uber/RIBs/wiki&#34;&gt;RIBs documentation&lt;/a&gt;. This describes key concepts on RIBs, from what they are for, their structure and common use cases.&lt;/p&gt; &#xA;&lt;p&gt;To get more hands on with RIBs, we have written a &lt;a href=&#34;https://github.com/uber/RIBs/wiki&#34;&gt;series of tutorials&lt;/a&gt; that run you through the main aspects of the architecture with hands-on examples.&lt;/p&gt; &#xA;&lt;p&gt;To read about the backstory on why we created RIBs, see &lt;a href=&#34;https://eng.uber.com/new-rider-app/&#34;&gt;this blog post&lt;/a&gt; we wrote when releasing RIBs in production the first time and see &lt;a href=&#34;https://www.youtube.com/watch?v=Q5cTT0M0YXg&#34;&gt;this short video&lt;/a&gt; where we discussed how the RIBs architecture works.&lt;/p&gt; &#xA;&lt;h4&gt;What is the difference between RIBs and MV*/VIPER?&lt;/h4&gt; &#xA;&lt;p&gt;MVC, MVP, MVI, MVVM and VIPER are architecture patterns. RIBs is a framework. What differentiates RIBs from frameworks based on MV*/VIPER is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Business logic drives the app, not the view tree&lt;/strong&gt;. Unlike with MV*/VIPER, a RIB does not have to have a view. This means that the app hierarchy is driven by the business logic, not the view tree.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Independent business logic and view trees&lt;/strong&gt;. RIBs decouple how the business logic scopes are structured from view hierarchies. This allows the application to have a deep business logic tree, isolating business logic nodes, while maintaining a shallow view hierarchy making layouts, animations and transitions easy.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;There are some other novel things about RIBs. However, these could also be implemented with other MV*/VIPER frameworks. These are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cross-platform approach&lt;/strong&gt;, allowing iOS and Android architecture to stay in sync.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tooling for easier adoption&lt;/strong&gt; on larger apps or teams. Tooling we are open sourcing includes IDE plugins for code generation and static code analysis.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strong opinions about how state should be communicated&lt;/strong&gt;, using DI and Rx. Each RIB defines its dependencies and what dependencies it needs from its parent. Parent components that fulfill a child’s parent dependencies are provided to child Builders as a constructor dependency to allow for hierarchical DI scoping. This means that information is communicated via these dependencies up and down the tree.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Clone this repository&lt;/li&gt; &#xA; &lt;li&gt;Integrate using your preferred installation mechanism&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;For usage of the tooling built around RIBs, please see the &lt;a href=&#34;https://github.com/uber/RIBs/wiki#rib-tooling&#34;&gt;Tooling section&lt;/a&gt; in our documentation.&lt;/p&gt; &#xA;&lt;h2&gt;Installation for Android&lt;/h2&gt; &#xA;&lt;p&gt;To integrate the recommended minimum setup for RIBs add the following to your &lt;code&gt;build.gradle&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;  annotationProcessor &#39;com.uber.rib:rib-compiler-test:0.13.0&#39;&#xA;  implementation &#39;com.uber.rib:rib-android:0.13.0&#39;&#xA;  testImplementation &#39;com.uber.rib:rib-test:0.13.0&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;There are a number of extension packages available as well including Kotlin extensions, Jetpack Compose support, Coroutines support&lt;/p&gt; &#xA;&lt;h2&gt;Installation for iOS&lt;/h2&gt; &#xA;&lt;h4&gt;CocoaPods&lt;/h4&gt; &#xA;&lt;p&gt;To integrate RIBs into your project add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;pod &#39;RIBs&#39;, &#39;~&amp;gt; 0.9&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Carthage&lt;/h4&gt; &#xA;&lt;p&gt;To integrate RIBs into your project using Carthage add the following to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;github &#34;uber/RIBs&#34; ~&amp;gt; 0.9&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Related projects&lt;/h2&gt; &#xA;&lt;p&gt;If you like RIBs, check out other related open source projects from our team:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/needle&#34;&gt;Needle&lt;/a&gt;: a compile-time safe Swift dependency injection framework.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/motif&#34;&gt;Motif&lt;/a&gt;: An abstract on top of Dagger offering simpler APIs for nested scopes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-concurrency&#34;&gt;Swift Concurrency&lt;/a&gt;: a set of concurrency utility classes used by Uber, inspired by the equivalent &lt;a href=&#34;https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/package-summary.html&#34;&gt;java.util.concurrent&lt;/a&gt; package classes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-abstract-class&#34;&gt;Swift Abstract Class&lt;/a&gt;: a light-weight library along with an executable that enables compile-time safe abstract class development for Swift projects.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/uber/swift-common&#34;&gt;Swift Common&lt;/a&gt;: common libraries used by this set of Swift open source projects.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright (C) 2017 Uber Technologies&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>