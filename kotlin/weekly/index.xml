<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-10-15T01:48:20Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>square/okhttp</title>
    <updated>2023-10-15T01:48:20Z</updated>
    <id>tag:github.com,2023-10-15:/square/okhttp</id>
    <link href="https://github.com/square/okhttp" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Square’s meticulous HTTP client for the JVM, Android, and GraalVM.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OkHttp&lt;/h1&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://square.github.io/okhttp/&#34;&gt;project website&lt;/a&gt; for documentation and APIs.&lt;/p&gt; &#xA;&lt;p&gt;HTTP is the way modern applications network. It’s how we exchange data &amp;amp; media. Doing HTTP efficiently makes your stuff load faster and saves bandwidth.&lt;/p&gt; &#xA;&lt;p&gt;OkHttp is an HTTP client that’s efficient by default:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;HTTP/2 support allows all requests to the same host to share a socket.&lt;/li&gt; &#xA; &lt;li&gt;Connection pooling reduces request latency (if HTTP/2 isn’t available).&lt;/li&gt; &#xA; &lt;li&gt;Transparent GZIP shrinks download sizes.&lt;/li&gt; &#xA; &lt;li&gt;Response caching avoids the network completely for repeat requests.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;OkHttp perseveres when the network is troublesome: it will silently recover from common connection problems. If your service has multiple IP addresses, OkHttp will attempt alternate addresses if the first connect fails. This is necessary for IPv4+IPv6 and services hosted in redundant data centers. OkHttp supports modern TLS features (TLS 1.3, ALPN, certificate pinning). It can be configured to fall back for broad connectivity.&lt;/p&gt; &#xA;&lt;p&gt;Using OkHttp is easy. Its request/response API is designed with fluent builders and immutability. It supports both synchronous blocking calls and async calls with callbacks.&lt;/p&gt; &#xA;&lt;h2&gt;Get a URL&lt;/h2&gt; &#xA;&lt;p&gt;This program downloads a URL and prints its contents as a string. &lt;a href=&#34;https://raw.github.com/square/okhttp/master/samples/guide/src/main/java/okhttp3/guide/GetExample.java&#34;&gt;Full source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;OkHttpClient client = new OkHttpClient();&#xA;&#xA;String run(String url) throws IOException {&#xA;  Request request = new Request.Builder()&#xA;      .url(url)&#xA;      .build();&#xA;&#xA;  try (Response response = client.newCall(request).execute()) {&#xA;    return response.body().string();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Post to a Server&lt;/h2&gt; &#xA;&lt;p&gt;This program posts data to a service. &lt;a href=&#34;https://raw.github.com/square/okhttp/master/samples/guide/src/main/java/okhttp3/guide/PostExample.java&#34;&gt;Full source&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public static final MediaType JSON = MediaType.get(&#34;application/json&#34;);&#xA;&#xA;OkHttpClient client = new OkHttpClient();&#xA;&#xA;String post(String url, String json) throws IOException {&#xA;  RequestBody body = RequestBody.create(json, JSON);&#xA;  Request request = new Request.Builder()&#xA;      .url(url)&#xA;      .post(body)&#xA;      .build();&#xA;  try (Response response = client.newCall(request).execute()) {&#xA;    return response.body().string();&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Further examples are on the &lt;a href=&#34;https://square.github.io/okhttp/recipes/&#34;&gt;OkHttp Recipes page&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;p&gt;OkHttp works on Android 5.0+ (API level 21+) and Java 8+.&lt;/p&gt; &#xA;&lt;p&gt;OkHttp depends on &lt;a href=&#34;https://github.com/square/okio&#34;&gt;Okio&lt;/a&gt; for high-performance I/O and the &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin standard library&lt;/a&gt;. Both are small libraries with strong backward-compatibility.&lt;/p&gt; &#xA;&lt;p&gt;We highly recommend you keep OkHttp up-to-date. As with auto-updating web browsers, staying current with HTTPS clients is an important defense against potential security problems. &lt;a href=&#34;https://square.github.io/okhttp/tls_configuration_history/&#34;&gt;We track&lt;/a&gt; the dynamic TLS ecosystem and adjust OkHttp to improve connectivity and security.&lt;/p&gt; &#xA;&lt;p&gt;OkHttp uses your platform&#39;s built-in TLS implementation. On Java platforms OkHttp also supports &lt;a href=&#34;https://github.com/google/conscrypt/&#34;&gt;Conscrypt&lt;/a&gt;, which integrates &lt;a href=&#34;https://github.com/google/boringssl&#34;&gt;BoringSSL&lt;/a&gt; with Java. OkHttp will use Conscrypt if it is the first security provider:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Security.insertProviderAt(Conscrypt.newProvider(), 1);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The OkHttp &lt;code&gt;3.12.x&lt;/code&gt; branch supports Android 2.3+ (API level 9+) and Java 7+. These platforms lack support for TLS 1.2 and should not be used.&lt;/p&gt; &#xA;&lt;h2&gt;Releases&lt;/h2&gt; &#xA;&lt;p&gt;Our &lt;a href=&#34;https://square.github.io/okhttp/changelog/&#34;&gt;change log&lt;/a&gt; has release history.&lt;/p&gt; &#xA;&lt;p&gt;The latest release is available on &lt;a href=&#34;https://search.maven.org/artifact/com.squareup.okhttp3/okhttp/4.11.0/jar&#34;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation(&#34;com.squareup.okhttp3:okhttp:4.11.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Snapshot builds are &lt;a href=&#34;https://s01.oss.sonatype.org/content/repositories/snapshots/&#34;&gt;available&lt;/a&gt;. &lt;a href=&#34;https://square.github.io/okhttp/features/r8_proguard/&#34;&gt;R8 and ProGuard&lt;/a&gt; rules are available.&lt;/p&gt; &#xA;&lt;p&gt;Also, we have a &lt;a href=&#34;https://docs.gradle.org/6.2/userguide/platforms.html#sub:bom_import&#34;&gt;bill of materials (BOM)&lt;/a&gt; available to help you keep OkHttp artifacts up to date and be sure about version compatibility.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;    dependencies {&#xA;       // define a BOM and its version&#xA;       implementation(platform(&#34;com.squareup.okhttp3:okhttp-bom:4.11.0&#34;))&#xA;&#xA;       // define any required OkHttp artifacts without version&#xA;       implementation(&#34;com.squareup.okhttp3:okhttp&#34;)&#xA;       implementation(&#34;com.squareup.okhttp3:logging-interceptor&#34;)&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;MockWebServer&lt;/h2&gt; &#xA;&lt;p&gt;OkHttp includes a library for testing HTTP, HTTPS, and HTTP/2 clients.&lt;/p&gt; &#xA;&lt;p&gt;The latest release is available on &lt;a href=&#34;https://search.maven.org/artifact/com.squareup.okhttp3/mockwebserver/4.11.0/jar&#34;&gt;Maven Central&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;testImplementation(&#34;com.squareup.okhttp3:mockwebserver:4.11.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;GraalVM Native Image&lt;/h2&gt; &#xA;&lt;p&gt;Building your native images with Graal &lt;a href=&#34;https://www.graalvm.org/&#34;&gt;https://www.graalvm.org/&lt;/a&gt; should work automatically. This is not currently in a final released version, so &lt;code&gt;5.0.0-alpha.2&lt;/code&gt; should be used. Please report any bugs or workarounds you find.&lt;/p&gt; &#xA;&lt;p&gt;See the okcurl module for an example build.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ ./gradlew okcurl:nativeImage&#xA;$ ./okcurl/build/graal/okcurl https://httpbin.org/get&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2019 Square, Inc.&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>Moriafly/SaltPlayerSource</title>
    <updated>2023-10-15T01:48:20Z</updated>
    <id>tag:github.com,2023-10-15:/Moriafly/SaltPlayerSource</id>
    <link href="https://github.com/Moriafly/SaltPlayerSource" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Salt Player 椒盐音乐，你若热爱 我即强大&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;椒盐音乐 Salt Player&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://moriafly.xyz/HiMoriafly/&#34;&gt;官方网站 HiMoriafly Salt Player&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;椒盐音乐是一款 Android 平台本地音乐播放软件。&lt;/p&gt; &#xA;&lt;p&gt;本仓库是用来发布更新椒盐音乐新版本、收集反馈、发布一些通知的，而不是椒盐音乐的完整项目代码开源库。椒盐音乐属于&lt;b&gt;闭源软件&lt;/b&gt;。&lt;/p&gt; &#xA;&lt;h2&gt;下载地址&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;请在正确的渠道下载本应用，请勿使用他人重新签名的安装文件。&lt;/code&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/Moriafly/SaltPlayerSource/releases&#34;&gt;Github release&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.salt.music&#34;&gt;Google Play&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://www.coolapk.com/apk/284064&#34;&gt;酷安&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;&lt;a href=&#34;https://apkpure.com/p/com.salt.music&#34;&gt;ApkPure&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;同时发布标准渠道（Moriafly）和鸿蒙版（Hmos）&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;发布谷歌渠道版本&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;首发正式版&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;ApkPure 非官方上传，同谷歌渠道版本&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;开放文档&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Moriafly/SaltPlayerSource/main/open/open.md&#34;&gt;点击查看开放文档&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;使用帮助&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://moriafly.xyz/HiMoriafly/docs/salt-player/FQA&#34;&gt;FQA&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;可以通过提交 issue 来反馈你在椒盐音乐使用中遇到的问题&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/issues/Moriafly/SaltPlayerSource/%E9%94%99%E8%AF%AF%20bug?color=d73a4a&amp;amp;label=%E9%94%99%E8%AF%AF%20bug&#34; alt=&#34;错误 bug&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/issues/Moriafly/SaltPlayerSource/%E5%A2%9E%E5%BC%BA%20enhancement?color=a2eeef&amp;amp;label=%E5%A2%9E%E5%BC%BA%20enhancement&#34; alt=&#34;增强 enhancement&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;建议先查看应用内帮助文档哦，若无法解决请提交 issue 。特别注意，多问题请分开提交多个 issue ，请勿写在一起~&lt;/p&gt; &#xA;&lt;h2&gt;本地化适配&lt;/h2&gt; &#xA;&lt;p&gt;可以提交到 &lt;a href=&#34;https://github.com/Moriafly/SaltPlayerSource/tree/main/translations&#34;&gt;translations&lt;/a&gt; 中帮助翻译哦~&lt;/p&gt; &#xA;&lt;h2&gt;版本说明&lt;/h2&gt; &#xA;&lt;p&gt;椒盐音乐安装包大小约 10 MB ，解压安装后约占用 30 MB 空间（后续使用产生的用户数据不包含）。&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;仅提供 64 位版本（架构 arm-v8a），需要安卓 6.0 以上。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Google Play 版本由谷歌签名发布，与此仓库安装包不兼容。&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;版权信息&lt;/h2&gt; &#xA;&lt;p&gt;相关法律信息请在软件内部即相关网站查询。&lt;/p&gt;</summary>
  </entry>
</feed>