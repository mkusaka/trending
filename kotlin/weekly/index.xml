<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-11-06T01:46:59Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>iSoron/uhabits</title>
    <updated>2022-11-06T01:46:59Z</updated>
    <id>tag:github.com,2022-11-06:/iSoron/uhabits</id>
    <link href="https://github.com/iSoron/uhabits" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Loop Habit Tracker, a mobile app for creating and maintaining long-term positive habits&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Loop Habit Tracker&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/iSoron/uhabits/actions?query=workflow%3A%22Build+%26+Test%22&#34;&gt; &lt;img src=&#34;https://github.com/iSoron/uhabits/workflows/Build%20&amp;amp;%20Test/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/iSoron/uhabits/releases/latest&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/v/release/iSoron/uhabits&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://github.com/iSoron/uhabits/discussions&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/GitHub-Discussions-%23fc4ebc&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;Loop is a mobile app that helps you create and maintain good habits, allowing you to achieve your long-term goals. Detailed graphs and statistics show you how your habits improved over time. It is completely ad-free and open source.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.isoron.uhabits&amp;amp;utm_source=global_co&amp;amp;utm_medium=prtnr&amp;amp;utm_content=Mar2515&amp;amp;utm_campaign=PartBadge&amp;amp;pcampaignid=MKT-AC-global-none-all-co-pr-py-PartBadges-Oct1515-1&#34;&gt;&lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/images/apps/en-play-badge-border.png&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/app/org.isoron.uhabits&#34;&gt;&lt;img alt=&#34;Get it on F-Droid&#34; src=&#34;https://i.imgur.com/baSPE7X.png&#34; height=&#34;75px&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/1.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/1.thumb.png&#34; alt=&#34;Main screen&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/2.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/2.thumb.png&#34; alt=&#34;Edit habit&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/3.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/3.thumb.png&#34; alt=&#34;Habit strength&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/4.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/4.thumb.png&#34; alt=&#34;Habit history and streaks&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/5.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/5.thumb.png&#34; alt=&#34;Widgets&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/6.png&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/iSoron/uhabits/dev/screenshots/6.thumb.png&#34; alt=&#34;Night mode&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;Beautiful, minimalistic and lightweight interface.&lt;/b&gt; Loop has an elegant and minimalistic interface that is very easy to use, even for first-time users. Highly optimized for speed, the app works well even on older phones.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;Habit score.&lt;/b&gt; Loop has an advanced formula for calculating the strength of your habits. Every repetition makes your habit stronger and every missed day makes it weaker. A few missed days after a long streak, however, will not completely destroy your progress, unlike many other don&#39;t-break-the-chain apps.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;Flexible schedules.&lt;/b&gt; In addition to daily habits, Loop supports habits with more complex schedules, such as 3 times per week or every other day.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;Reminders.&lt;/b&gt; Schedule notifications to remind you of your habits. Each habit can have its own reminder, at a chosen time of the day. Easily check or dismiss your habit directly from the notification.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;Widgets.&lt;/b&gt; Be reminded of your habits whenever you unlock your phone. Colorful widgets allow you to track your habits directly from your home screen, without even opening the app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;Take control of your data.&lt;/b&gt; If you want to further analyze your data, or move it to another service, Loop allows you to export it to spreadsheets (CSV) or to a database file (SQLite). For power users, checkmarks can be added through other apps, such as Tasker.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;No limitations.&lt;/b&gt; Track as many habits as you wish. Loop imposes no artificial limits on how many habits you can have. All features are available to all users. There are no in-app purchases.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;Completely ad-free and open source.&lt;/b&gt; There are no advertisements, annoying notifications or intrusive permissions in this app, and there will never be. The app is completely open-source (GPLv3).&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;b&gt;Works offline and respects your privacy.&lt;/b&gt; Loop doesn&#39;t require an Internet connection or online account registration. Your confidential data is never sent to anyone. Neither the developers nor any third-parties have access to it.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installing&lt;/h2&gt; &#xA;&lt;p&gt;The easiest way to install Loop is through the &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.isoron.uhabits&#34;&gt;Google Play Store&lt;/a&gt; or &lt;a href=&#34;https://f-droid.org/app/org.isoron.uhabits&#34;&gt;F-Droid&lt;/a&gt;. You may also download and install the APK from the &lt;a href=&#34;https://github.com/iSoron/uhabits/releases&#34;&gt;releases page&lt;/a&gt;; note, however, that the app will not be updated automatically. To build this app from the source code, see &lt;a href=&#34;https://github.com/iSoron/uhabits/raw/dev/docs/BUILD.md&#34;&gt;build instructions&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Loop is an open source project developed entirely by volunteers. If you would like to contribute to the project, you are very welcome. There are many ways to contribute, even if you are not a software developer.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Report bugs, suggest features.&lt;/strong&gt; The easiest way to contribute is to simply use the app and let us know if you find any problems or have any suggestions to improve it. To report a problem, please &lt;a href=&#34;https://github.com/iSoron/uhabits/issues/new/choose&#34;&gt;create a new bug report&lt;/a&gt;. To request a new feature or vote on existing feature requests, please visit our &lt;a href=&#34;https://github.com/iSoron/uhabits/discussions/categories/feature-requests&#34;&gt;GitHub Discussions page&lt;/a&gt;. If you would like to receive the newest versions of the app earlier than everyone else, &lt;a href=&#34;https://play.google.com/apps/testing/org.isoron.uhabits&#34;&gt;join our open beta on Google Play&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Spread the word.&lt;/strong&gt; If you like the app, share it with your family, friends and colleagues. You can also rate and review the app on Google Play Store, to help other users find it more easily.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Translate the app into your own language.&lt;/strong&gt; If you are not a native English speaker, and would like to see the app translated into your own language, please join our &lt;a href=&#34;https://translate.loophabits.org&#34;&gt;open translation project&lt;/a&gt;. If the translation is already completed, you are also very welcome to join and proofread it.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Write some code.&lt;/strong&gt; If you are an Android developer, you are very welcome to contribute with code. Please see the &lt;a href=&#34;https://github.com/iSoron/uhabits/raw/dev/docs/GUIDELINES.md&#34;&gt;guidelines&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://www.gnu.org/graphics/gplv3-88x31.png&#34;&gt; &#xA;&lt;p&gt;Copyright (C) 2016-2021 √Ålinson Santos Xavier &lt;a href=&#34;mailto:isoron@gmail.com&#34;&gt;isoron@gmail.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Loop Habit Tracker is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt; &#xA;&lt;p&gt;Loop Habit Tracker is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt; &#xA;&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see &lt;a href=&#34;https://www.gnu.org/licenses/&#34;&gt;https://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/architecture-components-samples</title>
    <updated>2022-11-06T01:46:59Z</updated>
    <id>tag:github.com,2022-11-06:/android/architecture-components-samples</id>
    <link href="https://github.com/android/architecture-components-samples" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Samples for Android Architecture Components.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Architecture Components samples&lt;/h1&gt; &#xA;&lt;p&gt;A collection of samples using the &lt;a href=&#34;https://developer.android.com/arch&#34;&gt;Architecture Components&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/room&#34;&gt;Room&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/lifecycle&#34;&gt;Lifecycle-aware components&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModels&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/livedata&#34;&gt;LiveData&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/paging/&#34;&gt;Paging&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/navigation/&#34;&gt;Navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/view-binding&#34;&gt;ViewBinding&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/workmanager/&#34;&gt;WorkManager&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Samples&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/BasicSample&#34;&gt;BasicSample&lt;/a&gt;&lt;/strong&gt; - Shows how to persist data using a SQLite database and Room. Also uses ViewModels and LiveData.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/PersistenceContentProviderSample&#34;&gt;PersistenceContentProviderSample&lt;/a&gt;&lt;/strong&gt; - Shows how to expose data via a Content Provider using Room.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/GithubBrowserSample&#34;&gt;GithubBrowserSample&lt;/a&gt;&lt;/strong&gt; - An &lt;strong&gt;advanced&lt;/strong&gt; sample that uses the Architecture components, Dagger and the Github API, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/BasicRxJavaSample&#34;&gt;BasicRxJavaSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use Room with RxJava 2. Also uses ViewModels.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/PersistenceMigrationsSample&#34;&gt;PersistenceMigrationsSample&lt;/a&gt;&lt;/strong&gt; - Shows how to implement migrations in Room.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/raw/master/BasicRxJavaSampleKotlin&#34;&gt;BasicRxJavaKotlinSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use ViewModels and Room together with RxJava, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/PagingSample&#34;&gt;PagingSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use the Paging library with Room, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/PagingWithNetworkSample&#34;&gt;PagingNetworkSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use the Paging library with a backend API via Retrofit, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/NavigationBasicSample&#34;&gt;NavigationBasicSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use Navigation to perform navigation and deep linking in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/NavigationAdvancedSample&#34;&gt;NavigationAdvancedSample&lt;/a&gt;&lt;/strong&gt; - Shows how to handle multiple back stacks with Navigation and a BottomNavigationView.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/LiveDataSample&#34;&gt;LiveDataSample&lt;/a&gt;&lt;/strong&gt; - Shows how to integrate Kotlin coroutines with Architecture Components such as &lt;code&gt;LiveData&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/ViewBindingSample&#34;&gt;ViewBindingSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use view bindings in an activity and in fragments.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/WorkManagerSample&#34;&gt;WorkManagerSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use WorkManager to do background work, in Kotlin.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/tree/master/WorkManagerMultiprocessSample&#34;&gt;WorkManagerMultiprocessSample&lt;/a&gt;&lt;/strong&gt; - Shows how to use WorkManager in apps that manage multiple processes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Reporting Issues&lt;/h3&gt; &#xA;&lt;p&gt;You can report an &lt;a href=&#34;https://github.com/googlesamples/android-architecture-components/issues&#34;&gt;Issue&lt;/a&gt; on the samples using this repository. If you find an issue with the Architecture Components, report it using the &lt;a href=&#34;https://issuetracker.google.com/issues/new?component=197448&amp;amp;template=878802&#34;&gt;Architecture Components Issue Tracker&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2018 The Android Open Source Project, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>android/sunflower</title>
    <updated>2022-11-06T01:46:59Z</updated>
    <id>tag:github.com,2022-11-06:/android/sunflower</id>
    <link href="https://github.com/android/sunflower" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A gardening app illustrating Android development best practices with Android Jetpack.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Android Sunflower with Compose&lt;/h1&gt; &#xA;&lt;p&gt;A gardening app illustrating Android development best practices with migrating a View-based app to Jetpack Compose.&lt;/p&gt; &#xA;&lt;p&gt;This sample showcases:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Compose working in an existing app: including integration with strings, resources, and themes and styles.&lt;/li&gt; &#xA; &lt;li&gt;Integration with an existing architecture based on Jetpack libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;CollapsingToolbarLayout&lt;/code&gt; behavior implemented manually with Compose.&lt;/li&gt; &#xA; &lt;li&gt;Showing &lt;a href=&#34;https://material.io/components/snackbars&#34;&gt;Snackbars&lt;/a&gt; with Compose.&lt;/li&gt; &#xA; &lt;li&gt;Using Compose within a &lt;code&gt;RecyclerView&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: To see the original View implementation of Sunflower, checkout the &lt;a href=&#34;https://github.com/android/sunflower/tree/views&#34;&gt;&lt;code&gt;views&lt;/code&gt;&lt;/a&gt; branch.&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/android/sunflower/main/screenshots/screenshots.png&#34;&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;p&gt;Sunflower&#39;s &lt;a href=&#34;https://raw.githubusercontent.com/android/sunflower/main/app/src/main/java/com/google/samples/apps/sunflower/PlantDetailFragment.kt&#34;&gt;plant details screen&lt;/a&gt; is built with Compose as well as the &lt;a href=&#34;https://raw.githubusercontent.com/android/sunflower/main/app/src/main/java/com/google/samples/apps/sunflower/compose/plantlist/PlantListItemView.kt&#34;&gt;plant list item&lt;/a&gt; view within a &lt;code&gt;RecyclerView&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;All Compose code can be found in the &lt;code&gt;compose&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/android/sunflower/main/app/src/main/java/com/google/samples/apps/sunflower/compose&#34;&gt;folder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: As Compose cannot render HTML code in &lt;code&gt;Text&lt;/code&gt; yet. The &lt;code&gt;AndroidViewBinding&lt;/code&gt; API is used to embed a &lt;code&gt;TextView&lt;/code&gt; in Compose. See the &lt;code&gt;PlantDescription&lt;/code&gt; composable in the &lt;a href=&#34;https://raw.githubusercontent.com/android/sunflower/main/app/src/main/java/com/google/samples/apps/sunflower/compose/plantdetail/PlantDetailView.kt&#34;&gt;PlantDetailView file&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;h3&gt;Unsplash API key&lt;/h3&gt; &#xA;&lt;p&gt;Sunflower uses the &lt;a href=&#34;https://unsplash.com/developers&#34;&gt;Unsplash API&lt;/a&gt; to load pictures on the gallery screen. To use the API, you will need to obtain a free developer API key. See the &lt;a href=&#34;https://unsplash.com/documentation&#34;&gt;Unsplash API Documentation&lt;/a&gt; for instructions.&lt;/p&gt; &#xA;&lt;p&gt;Once you have the key, add this line to the &lt;code&gt;gradle.properties&lt;/code&gt; file, either in your user home directory (usually &lt;code&gt;~/.gradle/gradle.properties&lt;/code&gt; on Linux and Mac) or in the project&#39;s root folder:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;unsplash_access_key=&amp;lt;your Unsplash access key&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The app is still usable without an API key, though you won&#39;t be able to navigate to the gallery screen.&lt;/p&gt; &#xA;&lt;h2&gt;Android Studio IDE setup&lt;/h2&gt; &#xA;&lt;p&gt;For development, the latest version of Android Studio is required. The latest version can be downloaded from &lt;a href=&#34;https://developer.android.com/studio/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Sunflower uses &lt;a href=&#34;https://ktlint.github.io/&#34;&gt;ktlint&lt;/a&gt; to enforce Kotlin coding styles. Here&#39;s how to configure it for use with Android Studio (instructions adapted from the ktlint &lt;a href=&#34;https://github.com/shyiko/ktlint/raw/master/README.md&#34;&gt;README&lt;/a&gt;):&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Close Android Studio if it&#39;s open&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download ktlint using these &lt;a href=&#34;https://github.com/pinterest/ktlint/raw/master/README.md#installation&#34;&gt;installation instructions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Apply ktlint settings to Android Studio using these &lt;a href=&#34;https://github.com/pinterest/ktlint/raw/master/README.md#-with-intellij-idea&#34;&gt;instructions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Start Android Studio&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Additional resources&lt;/h2&gt; &#xA;&lt;p&gt;Check out these Wiki pages to learn more about Android Sunflower:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/android/sunflower/wiki/Notable-Community-Contributions&#34;&gt;Notable Community Contributions&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/android/sunflower/wiki/Sunflower-Publications&#34;&gt;Publications&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Non-Goals&lt;/h2&gt; &#xA;&lt;p&gt;Previously, this sample app was focused on demonstrating best practices for multiple Jetpack libraries. However, this is no longer the case and development will instead be focused on how to adopt Compose in an existing View-based app. So, there are no plans to implement features outside of this scope. Keep this in mind when making contributions to this library.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Stack Overflow: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/tagged/android-jetpack-compose&#34;&gt;https://stackoverflow.com/questions/tagged/android-jetpack-compose&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you&#39;ve found an error in this sample, please file an issue: &lt;a href=&#34;https://github.com/android/sunflower/issues&#34;&gt;https://github.com/android/sunflower/issues&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Patches are encouraged, and may be submitted by forking this project and submitting a pull request through GitHub.&lt;/p&gt; &#xA;&lt;h2&gt;Third Party Content&lt;/h2&gt; &#xA;&lt;p&gt;Select text used for describing the plants (in &lt;code&gt;plants.json&lt;/code&gt;) are used from Wikipedia via CC BY-SA 3.0 US (license in &lt;code&gt;ASSETS_LICENSE&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;&#34;&lt;a href=&#34;https://thenounproject.com/search/?q=seed&amp;amp;i=1585971&#34;&gt;seed&lt;/a&gt;&#34; by &lt;a href=&#34;https://thenounproject.com/aisyahalmasyira/&#34;&gt;Aisyah&lt;/a&gt; is licensed under &lt;a href=&#34;https://creativecommons.org/licenses/by/3.0/us/legalcode&#34;&gt;CC BY 3.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Copyright 2018 Google, Inc.&lt;/p&gt; &#xA;&lt;p&gt;Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the &#34;License&#34;); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.apache.org/licenses/LICENSE-2.0&#34;&gt;https://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &#34;AS IS&#34; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</summary>
  </entry>
</feed>