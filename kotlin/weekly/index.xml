<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-08-06T01:55:01Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>ShiftHackZ/Stable-Diffusion-Android</title>
    <updated>2023-08-06T01:55:01Z</updated>
    <id>tag:github.com,2023-08-06:/ShiftHackZ/Stable-Diffusion-Android</id>
    <link href="https://github.com/ShiftHackZ/Stable-Diffusion-Android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Stable Diffusion AI client app for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ShiftHackZ/Stable-Diffusion-Android/master/docs/assets/github-header-image.png&#34; alt=&#34;Header&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Stable-Diffusion-Android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/endpoint?color=blue&amp;amp;logo=google-play&amp;amp;logoColor=white&amp;amp;url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Dcom.shifthackz.aisdv1.app%26l%3DGoogle%2520Play%26m%3D%24version&#34; alt=&#34;Google Play&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ff-droid.org%2Fapi%2Fv1%2Fpackages%2Fcom.shifthackz.aisdv1.app.foss&amp;amp;query=%24.packages%5B0%5D.versionName&amp;amp;label=F-Droid&amp;amp;link=https%3A%2F%2Ff-droid.org%2Fpackages%2Fcom.shifthackz.aisdv1.app.foss%2F&#34; alt=&#34;F-Droid&#34;&gt; &lt;img src=&#34;https://img.shields.io/endpoint?url=https://apt.izzysoft.de/fdroid/api/v1/shield/com.shifthackz.aisdv1.app.foss&#34; alt=&#34;Izzy On Droid&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.shifthackz.aisdv1.app&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ShiftHackZ/Stable-Diffusion-Android/master/docs/assets/google_play.png&#34; alt=&#34;Google Play&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.shifthackz.aisdv1.app.foss&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ShiftHackZ/Stable-Diffusion-Android/master/docs/assets/fdroid.png&#34; alt=&#34;F-Droid&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/com.shifthackz.aisdv1.app.foss&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/ShiftHackZ/Stable-Diffusion-Android/master/docs/assets/izzy_on_droid.png&#34; alt=&#34;Izzy On Droid&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Stable Diffusion AI is an easy-to-use app that lets you quickly generate images from text or other images with just a few clicks. With this app, you can communicate with your own server and generate high-quality images in seconds.&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Can use server environment powered by &lt;a href=&#34;https://stablehorde.net/&#34;&gt;AI Horde&lt;/a&gt; (a crowdsourced distributed cluster of Stable Diffusion workers)&lt;/li&gt; &#xA; &lt;li&gt;Can use server environment powered by &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;Stable-Diffusion-WebUI&lt;/a&gt; (AUTOMATIC1111)&lt;/li&gt; &#xA; &lt;li&gt;Supports original Txt2Img, Img2Img modes &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Positive&lt;/strong&gt; and &lt;strong&gt;negative&lt;/strong&gt; prompt support&lt;/li&gt; &#xA;   &lt;li&gt;Support dynamic &lt;strong&gt;size&lt;/strong&gt; in range from 64 to 2048 px (for width and height)&lt;/li&gt; &#xA;   &lt;li&gt;Selection of different &lt;strong&gt;sampling methods&lt;/strong&gt; (available samplers are loaded from server)&lt;/li&gt; &#xA;   &lt;li&gt;Unique &lt;strong&gt;seed&lt;/strong&gt; input&lt;/li&gt; &#xA;   &lt;li&gt;Dynamic &lt;strong&gt;sampling steps&lt;/strong&gt; in range from 1 to 150&lt;/li&gt; &#xA;   &lt;li&gt;Dynamic &lt;strong&gt;CFG scale&lt;/strong&gt; in range from 1.0 to 30.0&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Restore faces&lt;/strong&gt; option&lt;/li&gt; &#xA;   &lt;li&gt;( Img2Img ONLY ) : Image selection from device gallery &lt;em&gt;(requires user permission)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;( Img2Img ONLY ) : Capture input image from camera &lt;em&gt;(requires user permission)&lt;/em&gt;&lt;/li&gt; &#xA;   &lt;li&gt;( Img2Img ONLY ) : Fetching random image for the input&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;In-app Gallery, stored locally, contains all AI generated images &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Displays generated images grid&lt;/li&gt; &#xA;   &lt;li&gt;Image detail view: Zoom, Pinch, Generation Info.&lt;/li&gt; &#xA;   &lt;li&gt;Export all gallery to &lt;strong&gt;.zip&lt;/strong&gt; file&lt;/li&gt; &#xA;   &lt;li&gt;Export single photo to &lt;strong&gt;.zip&lt;/strong&gt; file&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Settings &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;WebUI server URL&lt;/li&gt; &#xA;   &lt;li&gt;Active SD Model selection&lt;/li&gt; &#xA;   &lt;li&gt;Server availability monitoring (http-ping method)&lt;/li&gt; &#xA;   &lt;li&gt;Enable/Disable auto-saving of generated images&lt;/li&gt; &#xA;   &lt;li&gt;Clear gallery / app cache&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Setup instruction&lt;/h2&gt; &#xA;&lt;h3&gt;Option 1: Use your own Automatic1111 instance&lt;/h3&gt; &#xA;&lt;p&gt;This requires you to have the AUTOMATIC1111 WebUI that is running in server mode.&lt;/p&gt; &#xA;&lt;p&gt;You can have it running either on your own hardware with modern GPU from Nvidia or AMD, or running it using Google Colab.&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Follow the setup instructions on &lt;a href=&#34;https://github.com/AUTOMATIC1111/stable-diffusion-webui&#34;&gt;Stable-Diffusion-WebUI&lt;/a&gt; repository.&lt;/li&gt; &#xA; &lt;li&gt;Add the arguments &lt;code&gt;--api --listen&lt;/code&gt; to the command line arguments of WebUI launch script.&lt;/li&gt; &#xA; &lt;li&gt;After running the server, get the IP address, or URL of your WebUI server.&lt;/li&gt; &#xA; &lt;li&gt;On the first launch, app will ask you for the server URL, enter it and press Connect button. If you want to change the server URL, go to Settings tab, choose Configure option, and repeat the setup flow.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If for some reason you have no ability to run your server instance, you can toggle the &lt;strong&gt;Demo mode&lt;/strong&gt; swith on server setup page: it will allow you to test the app and get familiar with it, but it will return some mock images instead of AI-generated ones.&lt;/p&gt; &#xA;&lt;h3&gt;Option 2: Use AI Horde&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://stablehorde.net/&#34;&gt;AI Horde&lt;/a&gt; is a crowdsourced distributed cluster of Image generation workers and text generation workers.&lt;/p&gt; &#xA;&lt;p&gt;AI Horde requires to use API KEY, this mobile app alows to use either default API KEY (which is &#34;0000000000&#34;), or type your own. You can sign up and get your own AI Horde API KEY &lt;a href=&#34;https://stablehorde.net/register&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Option 3: Use SDAI Cloud&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Disclaimer: This option is only available in &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.shifthackz.aisdv1.app&#34;&gt;GooglePlay&lt;/a&gt; app version.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Google Play app version includes some proprietary libraries (like Firebase and Google AdMob) to monetize this option. This functionality is NOT a part of the FOSS build and will be never included in FOSS build&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;SDAI Cloud is the AUTOMATIC1111 hosted by author of this app as an option for users that for some reason are not able to run or host their own AUTOMATIC1111 instance.&lt;/p&gt; &#xA;&lt;p&gt;Hosting this instance costs some money, and as this project is non-profitable the usage of SDAI Cloud is monetized by ads. Also the SDAI Cloud may not be available full-time, as this is running on the app author&#39;s own bare-metal machine which is hosted in Ukraine, as this area now is a warzone electricity and network downtimes can happen sometimes.&lt;/p&gt; &#xA;&lt;h2&gt;Supported languages&lt;/h2&gt; &#xA;&lt;p&gt;App uses the language provided by OS default settings.&lt;/p&gt; &#xA;&lt;p&gt;User interface of the app is translated for languages listed in this table:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Language&lt;/th&gt; &#xA;   &lt;th&gt;Since version&lt;/th&gt; &#xA;   &lt;th&gt;Status&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;English&lt;/td&gt; &#xA;   &lt;td&gt;0.1.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Translated&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ukrainian&lt;/td&gt; &#xA;   &lt;td&gt;0.1.0&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Translated&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Turkish&lt;/td&gt; &#xA;   &lt;td&gt;0.4.1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;code&gt;Translated&lt;/code&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Any contributions to the translations are welcome.&lt;/p&gt; &#xA;&lt;h2&gt;Donate&lt;/h2&gt; &#xA;&lt;p&gt;Main &lt;strong&gt;foss&lt;/strong&gt; flavor of the app is open source, and you are welcome to use it for free. Only &lt;strong&gt;play&lt;/strong&gt; flavor contains small ad-banner at the bottom navigation.&lt;/p&gt; &#xA;&lt;p&gt;The donation is optional, if you&#39;d like to say thanks and show a little support, here is the button:&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.buymeacoffee.com/shifthackz&#34;&gt;&lt;img src=&#34;https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png&#34; alt=&#34;&amp;quot;Buy Me A Coffee&amp;quot;&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>videolan/vlc-android</title>
    <updated>2023-08-06T01:55:01Z</updated>
    <id>tag:github.com,2023-08-06:/videolan/vlc-android</id>
    <link href="https://github.com/videolan/vlc-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;VLC for Android, Android TV and ChromeOS&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VLC for Android&lt;/h1&gt; &#xA;&lt;p&gt;This is the official &lt;strong&gt;Android&lt;/strong&gt; port of &lt;a href=&#34;https://videolan.org/vlc/&#34;&gt;VLC&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;VLC on Android plays all the same files as the classical version of VLC, and features a media database for Audio and Video files and stream.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#project-structure&#34;&gt;Project Structure&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#libvlc&#34;&gt;LibVLC&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#build&#34;&gt;Build&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#build-application&#34;&gt;Build Application&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#build-libvlc&#34;&gt;Build LibVLC&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#contribute&#34;&gt;Contribute&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#pull-requests&#34;&gt;Pull requests&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#translations&#34;&gt;Translations&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#issues-and-feature-requests&#34;&gt;Issues and feature requests&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/#support&#34;&gt;Support&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Project Structure&lt;/h2&gt; &#xA;&lt;p&gt;Here are the current folders of vlc-android project:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;extension-api : Application extensions SDK (not released yet)&lt;/li&gt; &#xA; &lt;li&gt;application : Android application source code, organized by modules.&lt;/li&gt; &#xA; &lt;li&gt;buildsystem : Build scripts, CI and maven publication configuration&lt;/li&gt; &#xA; &lt;li&gt;libvlc : LibVLC gradle module, VLC source code will be cloned in &lt;code&gt;vlc/&lt;/code&gt; at root level.&lt;/li&gt; &#xA; &lt;li&gt;medialibrary : Medialibrary gradle module&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;LibVLC&lt;/h2&gt; &#xA;&lt;p&gt;LibVLC is the Android library embedding VLC engine, which provides a lot of multimedia features, like:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Play every media file formats, every codec and every streaming protocols&lt;/li&gt; &#xA; &lt;li&gt;Hardware and efficient decoding on every platform, up to 8K&lt;/li&gt; &#xA; &lt;li&gt;Network browsing for distant filesystems (SMB, FTP, SFTP, NFS...) and servers (UPnP, DLNA)&lt;/li&gt; &#xA; &lt;li&gt;Playback of Audio CD, DVD and Bluray with menu navigation&lt;/li&gt; &#xA; &lt;li&gt;Support for HDR, including tonemapping for SDR streams&lt;/li&gt; &#xA; &lt;li&gt;Audio passthrough with SPDIF and HDMI, including for Audio HD codecs, like DD+, TrueHD or DTS-HD&lt;/li&gt; &#xA; &lt;li&gt;Support for video and audio filters&lt;/li&gt; &#xA; &lt;li&gt;Support for 360 video and 3D audio playback, including Ambisonics&lt;/li&gt; &#xA; &lt;li&gt;Ability to cast and stream to distant renderers, like Chromecast and UPnP renderers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And more.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://images.videolan.org/images/libvlc_stack.png&#34; alt=&#34;LibVLC stack&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can use our LibVLC module to power your own Android media player. Download the &lt;code&gt;.aar&lt;/code&gt; directly from &lt;a href=&#34;https://search.maven.org/artifact/org.videolan.android/libvlc-all&#34;&gt;Maven&lt;/a&gt; or build from source.&lt;/p&gt; &#xA;&lt;p&gt;Have a look at our &lt;a href=&#34;https://code.videolan.org/videolan/libvlc-android-samples&#34;&gt;sample codes&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;VLC for Android is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/COPYING&#34;&gt;GPLv2 (or later)&lt;/a&gt;. Android libraries make this, de facto, a GPLv3 application.&lt;/p&gt; &#xA;&lt;p&gt;VLC engine &lt;em&gt;(LibVLC)&lt;/em&gt; for Android is licensed under &lt;a href=&#34;https://raw.githubusercontent.com/videolan/vlc-android/master/libvlc/COPYING.LIB&#34;&gt;LGPLv2&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;p&gt;Native libraries are published on bintray. So you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Build the application and get libraries via gradle dependencies (JVM build only)&lt;/li&gt; &#xA; &lt;li&gt;Build the whole app (LibVLC + Medialibrary + Application)&lt;/li&gt; &#xA; &lt;li&gt;Build LibVLC only, and get an .aar package&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build Application&lt;/h3&gt; &#xA;&lt;p&gt;VLC-Android build relies on gradle build modes :&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;Release&lt;/code&gt; &amp;amp; &lt;code&gt;Debug&lt;/code&gt; will get LibVLC and Medialibrary from Bintray, and build application source code only.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;SignedRelease&lt;/code&gt; also, but it will allow you to sign application apk with a local keystore.&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;Dev&lt;/code&gt; will build build LibVLC, Medialibrary, and then build the application with these binaries. (via build scripts only)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Build LibVLC&lt;/h3&gt; &#xA;&lt;p&gt;You will need a recent Linux distribution to build VLC. It should work with Windows 10, and macOS, but there is no official support for this.&lt;/p&gt; &#xA;&lt;h4&gt;Setup&lt;/h4&gt; &#xA;&lt;p&gt;Check our &lt;a href=&#34;https://wiki.videolan.org/AndroidCompile/&#34;&gt;AndroidCompile wiki page&lt;/a&gt;, especially for build dependencies.&lt;/p&gt; &#xA;&lt;p&gt;Here are the essential points:&lt;/p&gt; &#xA;&lt;p&gt;On Debian/Ubuntu, install the required dependencies:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install automake ant autopoint cmake build-essential libtool-bin \&#xA;    patch pkg-config protobuf-compiler ragel subversion unzip git \&#xA;    openjdk-8-jre openjdk-8-jdk flex python wget&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Setup the build environment: Set &lt;code&gt;$ANDROID_SDK&lt;/code&gt; to point to your Android SDK directory &lt;code&gt;export ANDROID_SDK=/path/to/android-sdk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Set &lt;code&gt;$ANDROID_NDK&lt;/code&gt; to point to your Android NDK directory &lt;code&gt;export ANDROID_NDK=/path/to/android-ndk&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Then, you are ready to build!&lt;/p&gt; &#xA;&lt;h4&gt;Build&lt;/h4&gt; &#xA;&lt;p&gt;&lt;code&gt;buildsystem/compile.sh -l -a &amp;lt;ABI&amp;gt;&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;ABI can be &lt;code&gt;arm&lt;/code&gt;, &lt;code&gt;arm64&lt;/code&gt;, &lt;code&gt;x86&lt;/code&gt;, &lt;code&gt;x86_64&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; for a multi-abis build&lt;/p&gt; &#xA;&lt;p&gt;You can do a library release build with &lt;code&gt;-r&lt;/code&gt; argument&lt;/p&gt; &#xA;&lt;h4&gt;Medialibrary&lt;/h4&gt; &#xA;&lt;p&gt;Build Medialibrary with &lt;code&gt;-ml&lt;/code&gt; instead of &lt;code&gt;-l&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute&lt;/h2&gt; &#xA;&lt;p&gt;VLC is a libre and open source project, we welcome all contributions.&lt;/p&gt; &#xA;&lt;p&gt;Just respect our &lt;a href=&#34;https://wiki.videolan.org/CoC/&#34;&gt;Code of Conduct&lt;/a&gt;, and if you want do contribute to the UI or add a new feature, please open an issue first so there can be a discussion about it.&lt;/p&gt; &#xA;&lt;h3&gt;Pull requests&lt;/h3&gt; &#xA;&lt;p&gt;Pull requests must be proposed on our &lt;a href=&#34;https://code.videolan.org/videolan/vlc-android/&#34;&gt;gitlab server&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;So you must create an account, fork vlc-android project, and propose your merge requests from it.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Except for translations&lt;/strong&gt;, see the section below.&lt;/p&gt; &#xA;&lt;h3&gt;Translations&lt;/h3&gt; &#xA;&lt;p&gt;You can help improving translations too by joining the &lt;a href=&#34;https://www.transifex.com/yaron/vlc-trans/dashboard/&#34;&gt;transifex vlc project&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Translations merge requests are then generated from transifex work.&lt;/p&gt; &#xA;&lt;h2&gt;Issues and feature requests&lt;/h2&gt; &#xA;&lt;p&gt;VLC for Android bugtracker is hosted on &lt;a href=&#34;https://code.videolan.org/videolan/vlc-android/issues&#34;&gt;VideoLAN gitlab&lt;/a&gt;&lt;br&gt; Please look for existing issues and provide as much useful details as you can (e.g. vlc app version, device and Android version).&lt;/p&gt; &#xA;&lt;p&gt;A template is provided, please use it!&lt;/p&gt; &#xA;&lt;p&gt;Issues without relevant information will be ignored, we cannot help in this case.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android mailing list: &lt;a href=&#34;mailto:android@videolan.org&#34;&gt;android@videolan.org&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;bugtracker: &lt;a href=&#34;https://code.videolan.org/videolan/vlc-android/issues&#34;&gt;https://code.videolan.org/videolan/vlc-android/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;IRC: &lt;em&gt;#videolan&lt;/em&gt; channel on &lt;a href=&#34;http://freenode.net/&#34;&gt;freenode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;VideoLAN forum: &lt;a href=&#34;https://forum.videolan.org/&#34;&gt;https://forum.videolan.org/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tytydraco/LADB</title>
    <updated>2023-08-06T01:55:01Z</updated>
    <id>tag:github.com,2023-08-06:/tytydraco/LADB</id>
    <link href="https://github.com/tytydraco/LADB" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A local ADB shell for Android!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;LADB&lt;/h1&gt; &#xA;&lt;p&gt;A local ADB shell for Android!&lt;/p&gt; &#xA;&lt;h1&gt;How does it work?&lt;/h1&gt; &#xA;&lt;p&gt;LADB bundles an ADB server within the app libraries. Normally, this server cannot connect to the local device because it requires an active USB connection. However, Android&#39;s Wireless ADB Debugging feature allows the server and the client to speak to each other locally.&lt;/p&gt; &#xA;&lt;h1&gt;Initial Setup&lt;/h1&gt; &#xA;&lt;p&gt;Use split-screen more or a pop-out window with LADB and Settings at the same time. This is because Android will invalidate the pairing information if the dialog gets dismissed. Add a Wireless Debugging connection, and copy the pairing code and port into LADB. Keep both windows open until the Settings dialog dismisses itself.&lt;/p&gt; &#xA;&lt;h1&gt;Issues&lt;/h1&gt; &#xA;&lt;p&gt;LADB is sadly incompatible with Shizuku at the current moment. That means that if you have Shiuzuku installed, LADB will usually fail to connect properly. You must uninstall it and reboot to use LADB.&lt;/p&gt; &#xA;&lt;h1&gt;Troubleshooting&lt;/h1&gt; &#xA;&lt;p&gt;Most errors can be fixed by clearing the app data for LADB, removing all Wireless Debugging connections from Settings, and rebooting.&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;p&gt;While this project is GPLv3 licensed, I would like to add a parameter: please do not publish unofficial (user) LADB builds to the Google Play Store.&lt;/p&gt; &#xA;&lt;h1&gt;Support&lt;/h1&gt; &#xA;&lt;p&gt;Still confused? Email me at &lt;a href=&#34;mailto:tylernij+LADB@gmail.com&#34;&gt;tylernij+LADB@gmail.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;We also have a Telegram server here: &lt;a href=&#34;https://t.me/ladb_support&#34;&gt;https://t.me/ladb_support&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Privacy Policy&lt;/h1&gt; &#xA;&lt;p&gt;LADB does not send any device data outside the app. Your data is not collected or processed.&lt;/p&gt;</summary>
  </entry>
</feed>