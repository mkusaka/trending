<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-04-23T01:56:49Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JetBrains/compose-multiplatform-template</title>
    <updated>2023-04-23T01:56:49Z</updated>
    <id>tag:github.com,2023-04-23:/JetBrains/compose-multiplatform-template</id>
    <link href="https://github.com/JetBrains/compose-multiplatform-template" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Compose Multiplatform Application project template&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;http://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;official project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform&#34;&gt;Compose Multiplatform&lt;/a&gt; Application&lt;/h1&gt; &#xA;&lt;p&gt;Use this template to start developing your own Compose Multiplatform application targeting Desktop, Android, and iOS (Alpha).&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/banner.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Setting up your development environment&lt;/h2&gt; &#xA;&lt;p&gt;Your Compose Multiplatform application targeting Desktop, Android and iOS is a Kotlin Multiplatform project. Let&#39;s make sure you have set up your environment for mobile development with Kotlin Multiplatform.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; Writing and running iOS-specific code for a simulated or real device requires macOS. This is an Apple limitation.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;To work with this template, you will need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;A machine running a recent version of macOS&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.apple.com/xcode/&#34;&gt;Xcode&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://plugins.jetbrains.com/plugin/14936-kotlin-multiplatform-mobile&#34;&gt;Kotlin Multiplatform Mobile plugin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/docs/native-cocoapods.html&#34;&gt;CocoaPods&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Checking your development environment with &lt;code&gt;kdoctor&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Before opening the project in Android Studio&lt;/strong&gt;, use &lt;a href=&#34;https://github.com/Kotlin/kdoctor&#34;&gt;&lt;code&gt;kdoctor&lt;/code&gt;&lt;/a&gt; to ensure your development environment is configured correctly. Install &lt;code&gt;kdoctor&lt;/code&gt; via &lt;a href=&#34;https://brew.sh/&#34;&gt;&lt;code&gt;brew&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install kdoctor&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, run &lt;code&gt;kdoctor&lt;/code&gt; from your terminal. If everything is set up correctly, you should see valid output. Otherwise, &lt;code&gt;kdoctor&lt;/code&gt; will provide you which parts of your setup still need configuration:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;Environment diagnose (to see all details, use -v option):&#xA;[✓] Operation System&#xA;[✓] Java&#xA;[✓] Android Studio&#xA;[✓] Xcode&#xA;[✓] Cocoapods&#xA;&#xA;Conclusion:&#xA;  ✓ Your system is ready for Kotlin Multiplatform Mobile Development!&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Opening the project&lt;/h2&gt; &#xA;&lt;p&gt;Use Android Studio to open the project. Make sure you have the &lt;a href=&#34;https://plugins.jetbrains.com/plugin/14936-kotlin-multiplatform-mobile&#34;&gt;Kotlin Multiplatform Mobile plugin&lt;/a&gt; installed.&lt;/p&gt; &#xA;&lt;h2&gt;Examining the project structure&lt;/h2&gt; &#xA;&lt;p&gt;Switch to the Project View to see all files and targets belonging to the project.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/open_project_view.png&#34; height=&#34;300px&#34;&gt; &#xA;&lt;p&gt;Your Compose Multiplatform project includes three modules:&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;shared&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This Kotlin module that contains the logic common for Desktop, Android and iOS applications – the code you share between platforms.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is also where you will write your Compose Multiplatform code&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The shared root &lt;code&gt;@Composable&lt;/code&gt; function for your app lives in &lt;code&gt;shared/src/commonMain/kotlin/App.kt&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;shared&lt;/code&gt; uses Gradle as the build system. You can add dependencies and change settings in &lt;code&gt;shared/build.gradle.kts&lt;/code&gt;. The shared module builds into a Java library, an Android library and an iOS framework.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;desktopApp&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This Kotlin module that builds into a Desktop application. It uses Gradle as the build system. The desktopApp module depends on and uses the shared module as a regular library.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;androidApp&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This Kotlin module that builds into an Android application. It uses Gradle as the build system. The androidApp module depends on and uses the shared module as a regular Android library.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;iosApp&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;p&gt;This is the Xcode project that builds into an iOS application. It depends on and uses the shared module as a CocoaPods dependency.&lt;/p&gt; &#xA;&lt;h2&gt;Running your application&lt;/h2&gt; &#xA;&lt;h2&gt;Desktop&lt;/h2&gt; &#xA;&lt;p&gt;This template contains &lt;code&gt;desktopApp&lt;/code&gt; run configuration that you can use to run the desktop target in Android Studio or IntelliJ IDEA.&lt;/p&gt; &#xA;&lt;p&gt;Useful Gradle tasks:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew run&lt;/code&gt; - run application&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;./gradlew package&lt;/code&gt; - package native distribution into &lt;code&gt;build/compose/binaries&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Android&lt;/h2&gt; &#xA;&lt;p&gt;To run your application on an Android emulator:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Create an &lt;a href=&#34;https://developer.android.com/studio/run/managing-avds#createavd&#34;&gt;Android virtual device&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Select the &lt;code&gt;androidApp&lt;/code&gt; run configuration.&lt;/li&gt; &#xA; &lt;li&gt;Select your target device and press &lt;strong&gt;Run&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/run_on_android.png&#34; height=&#34;60px&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/android_app_running.png&#34; height=&#34;200px&#34;&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Using Gradle&lt;/summary&gt; &#xA; &lt;p&gt;&lt;code&gt;./gradlew installDebug&lt;/code&gt; - install Android application on an Android device (on a real device or on an emulator)&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;iOS&lt;/h2&gt; &#xA;&lt;p&gt;We suggest going through the &#34;Hello, World&#34; steps of creating and deploying a sample project in Xcode to a simulator and/or your physical device. A video tutorial for setting up Xcode and running your first &#34;Hello, World&#34; application is available in &lt;a href=&#34;https://youtu.be/bqu6BquVi2M?start=716&amp;amp;end=1399&#34;&gt;this Standford CS193P lecture recording&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Running on an iOS simulator&lt;/h3&gt; &#xA;&lt;p&gt;Once you have configured your environment correctly, you will be able to select which iOS simulator to run your application in Android Studio on by modifying the &lt;code&gt;iosApp&lt;/code&gt; run configuration.&lt;/p&gt; &#xA;&lt;p&gt;Select &#34;Run&#34; | &#34;Edit Configurations...&#34; and navigate to the &#34;iOS Application&#34; | &#34;iosApp&#34; run configuration. In the &#34;Execution target&#34; drop-down, select your target device.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/edit_run_config.png&#34; height=&#34;200px&#34;&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/target_device.png&#34;&gt; &#xA;&lt;p&gt;Press the &#34;Run&#34; button to run your Compose Multiplatform app on the iOS simulator.&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/hello_world_ios.png&#34; height=&#34;200px&#34;&gt; &#xA;&lt;h3&gt;Running on a real iOS device&lt;/h3&gt; &#xA;&lt;p&gt;Running your Compose Multiplatform application on a physical device can be done for free. You need:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;an &lt;a href=&#34;https://support.apple.com/en-us/HT204316&#34;&gt;Apple ID&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;the registered iOS device in Xcode&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Before you continue, make sure that you can successfully run a plain &#34;Hello, World&#34; application from Xcode on your physical device.&lt;/p&gt; &#xA;&lt;p&gt;To run the application, set the &lt;code&gt;TEAM_ID&lt;/code&gt; associated with your Apple ID in &lt;code&gt;iosApp/Configuration/Config.xcconfig&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Finding your Team ID&lt;/h4&gt; &#xA;&lt;p&gt;Use &lt;code&gt;kdoctor --team-ids&lt;/code&gt; to find and set your Team ID. This will list all Team IDs currently configured on your system, for example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;3ABC246XYZ (Max Sample)&#xA;ZABCW6SXYZ (SampleTech Inc.)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Alternative way of finding your Team ID&lt;/summary&gt; &#xA; &lt;p&gt;If you&#39;re running into trouble with the method described above, you can try this alternative method.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Run the &lt;code&gt;iosApp&lt;/code&gt; run configuration from Android Studio (it will fail)&lt;/li&gt; &#xA;  &lt;li&gt;Open the &lt;code&gt;iosApp/iosApp.xcworkspace&lt;/code&gt; in Xcode&lt;/li&gt; &#xA;  &lt;li&gt;Select &lt;code&gt;iosApp&lt;/code&gt; in the menu on the left side&lt;/li&gt; &#xA;  &lt;li&gt;Navigate to &#34;Signing &amp;amp; Capabilities&#34;&lt;/li&gt; &#xA;  &lt;li&gt;Select your Personal Team in the &#34;Team&#34; dropdown. If you haven&#39;t set up your team, use the &#34;Add account...&#34; option and follow the steps inside Xcode.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Set this Team ID in &lt;code&gt;iosApp/Configuration/Config.xcconfig&lt;/code&gt; in the &lt;code&gt;TEAM_ID&lt;/code&gt; field.&lt;/p&gt; &#xA;&lt;p&gt;After that you can re-open the project in Android Studio, and it will show the registered iOS device in the &lt;code&gt;iosApp&lt;/code&gt; run configuration.&lt;/p&gt; &#xA;&lt;h3&gt;Make your first changes&lt;/h3&gt; &#xA;&lt;p&gt;The common entry point for your Compose Multiplatform app is located in &lt;code&gt;shared/src/commonMain/kotlin/App.kt&lt;/code&gt;. Here, you will see the code that is responsible for rendering the &#34;Hello, World&#34; button and the animated Compose Multplatform logo. If you make changes here, you will see them reflected on both Android and iOS:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;@OptIn(ExperimentalResourceApi::class)&#xA;@Composable&#xA;internal fun App() {&#xA;    MaterialTheme {&#xA;        var greetingText by remember { mutableStateOf(&#34;Hello, World!&#34;) }&#xA;        var showImage by remember { mutableStateOf(false) }&#xA;        Column(Modifier.fillMaxWidth(), horizontalAlignment = Alignment.CenterHorizontally) {&#xA;            Button(onClick = {&#xA;                greetingText = &#34;Hello, ${getPlatformName()}&#34;&#xA;                showImage = !showImage&#xA;            }) {&#xA;                Text(greetingText)&#xA;            }&#xA;            AnimatedVisibility(showImage) {&#xA;                Image(&#xA;                    painterResource(&#34;compose-multiplatform.xml&#34;),&#xA;                    null&#xA;                )&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Update the shared code by adding a text field that will update the name displayed on the button:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;@OptIn(ExperimentalResourceApi::class)&#xA;@Composable&#xA;internal fun App() {&#xA;    MaterialTheme {&#xA;        var greetingText by remember { mutableStateOf(&#34;Hello, World!&#34;) }&#xA;        var showImage by remember { mutableStateOf(false) }&#xA;        Column(Modifier.fillMaxWidth(), horizontalAlignment = Alignment.CenterHorizontally) {&#xA;            Button(onClick = {&#xA;                greetingText = &#34;Hello, ${getPlatformName()}&#34;&#xA;                showImage = !showImage&#xA;            }) {&#xA;                Text(greetingText)&#xA;            }&#xA;+           TextField(greetingText, onValueChange = { greetingText = it })&#xA;            AnimatedVisibility(showImage) {&#xA;                Image(&#xA;                    painterResource(&#34;compose-multiplatform.xml&#34;),&#xA;                    null&#xA;                )&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform-template/main/readme_images/text_field_added.png&#34; height=&#34;200px&#34;&gt; &#xA;&lt;h3&gt;Configuring the iOS application&lt;/h3&gt; &#xA;&lt;p&gt;This template contains a &lt;code&gt;iosApp/Configuration/Config.xcconfig&lt;/code&gt; configuration file that allows you to configure most basic properties without having to move to Xcode. It contains:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;APP_NAME&lt;/code&gt; - target executable and application bundle name&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;BUNDLE_ID&lt;/code&gt; - &lt;a href=&#34;https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleidentifier#discussion&#34;&gt;bundle identifier&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;TEAM_ID&lt;/code&gt; - &lt;a href=&#34;https://developer.apple.com/help/account/manage-your-team/locate-your-team-id/#:~:text=A%20Team%20ID%20is%20a,developer%20in%20App%20Store%20Connect.&#34;&gt;Team ID&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Note: To configure the &lt;code&gt;APP_NAME&lt;/code&gt; setting, open &lt;code&gt;Config.xcconfig&lt;/code&gt; in any text editor &lt;em&gt;before opening&lt;/em&gt; the project in Android Studio, and set the desired name.&lt;/p&gt; &#xA;&lt;p&gt;If you need to change this setting after you open the project in Android Studio, please do the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;close the project in Android Studio&lt;/li&gt; &#xA; &lt;li&gt;run &lt;code&gt;./cleanup.sh&lt;/code&gt; in your terminal&lt;/li&gt; &#xA; &lt;li&gt;change the setting&lt;/li&gt; &#xA; &lt;li&gt;open the project in Android Studio again&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For configuring advanced settings, you can use Xcode. Open the &lt;code&gt;iosApp/iosApp.xcworkspace&lt;/code&gt; in Xcode after opening the project in Android Studio, and use Xcode to make your changes.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>freyacodes/Lavalink</title>
    <updated>2023-04-23T01:56:49Z</updated>
    <id>tag:github.com,2023-04-23:/freyacodes/Lavalink</id>
    <link href="https://github.com/freyacodes/Lavalink" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Standalone audio sending node based on Lavaplayer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lavalink&lt;/h1&gt; &#xA;&lt;p&gt;A standalone audio sending node based on &lt;a href=&#34;https://github.com/sedmelluq/lavaplayer&#34;&gt;Lavaplayer&lt;/a&gt; and &lt;a href=&#34;https://github.com/KyokoBot/koe&#34;&gt;Koe&lt;/a&gt;. Allows for sending audio without it ever reaching any of your shards.&lt;/p&gt; &#xA;&lt;p&gt;Being used in production by FredBoat, Dyno, LewdBot, and more.&lt;/p&gt; &#xA;&lt;p&gt;A &lt;a href=&#34;https://raw.githubusercontent.com/freyacodes/Lavalink/master/Testbot&#34;&gt;basic example bot&lt;/a&gt; is available.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://discord.gg/ZW4s47Ppw4&#34;&gt;&lt;img src=&#34;https://discordapp.com/api/guilds/1082302532421943407/embed.png?style=banner2&#34; alt=&#34;Lavalink uild&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Powered by Lavaplayer&lt;/li&gt; &#xA; &lt;li&gt;Minimal CPU/memory footprint&lt;/li&gt; &#xA; &lt;li&gt;Twitch/YouTube stream support&lt;/li&gt; &#xA; &lt;li&gt;Event system&lt;/li&gt; &#xA; &lt;li&gt;Seeking&lt;/li&gt; &#xA; &lt;li&gt;Volume control&lt;/li&gt; &#xA; &lt;li&gt;REST API for resolving Lavaplayer tracks, controlling players, and more&lt;/li&gt; &#xA; &lt;li&gt;Statistics (good for load balancing)&lt;/li&gt; &#xA; &lt;li&gt;Basic authentication&lt;/li&gt; &#xA; &lt;li&gt;Prometheus metrics&lt;/li&gt; &#xA; &lt;li&gt;Docker images&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/freyacodes/Lavalink/master/PLUGINS.md&#34;&gt;Plugin support&lt;/a&gt; (beta)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Java 11* LTS or newer required.&lt;/li&gt; &#xA; &lt;li&gt;OpenJDK or Zulu running on Linux AMD64 is officially supported.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Support for Darwin (Mac), Windows AMD64, and Linux ARM (Raspberry Pi) is provided on a best-effort basis. This is dependent on Lavaplayer&#39;s native libraries.&lt;/p&gt; &#xA;&lt;p&gt;Lavaplayer currently supports following architectures:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Darwin (M1 &amp;amp; Intel)&lt;/code&gt;, &lt;code&gt;Linux aarch32&lt;/code&gt;, &lt;code&gt;Linux aarch64&lt;/code&gt;, &lt;code&gt;Linux ARMv7+ 32/64&lt;/code&gt;, &lt;code&gt;Linux ARMHF(v6) 32&lt;/code&gt;, &lt;code&gt;Linux i386 32&lt;/code&gt;, &lt;code&gt;Linux x86 64&lt;/code&gt;, &lt;code&gt;Windows i386 32&lt;/code&gt; and &lt;code&gt;Windows x86 64&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;JDA-NAS(Native Audio Buffer) &amp;amp; the Timescale filter are currently not supported on following architectures:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;Linux ARMHF(v6) 32&lt;/code&gt; and &lt;code&gt;Linux aarch32&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Support for other JVMs is also best-effort. Periodic CPU utilization stats are prone not to work everywhere.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;*Java 11 appears to have some issues with Discord&#39;s TLS 1.3. Java 14 has other undiagnosed HTTPS problems. Use Java 13. Docker images have been updated.&lt;/strong&gt; See &lt;a href=&#34;https://github.com/freyacodes/Lavalink/issues/258&#34;&gt;#258&lt;/a&gt;, &lt;a href=&#34;https://github.com/freyacodes/Lavalink/issues/260&#34;&gt;#260&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Changelog&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/freyacodes/Lavalink/master/CHANGELOG.md&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Versioning policy&lt;/h2&gt; &#xA;&lt;p&gt;Lavalink follows &lt;a href=&#34;https://semver.org/&#34;&gt;Semantic Versioning&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Given a version number &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt;, the following rules apply:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;MAJOR breaking API changes&#xA;MINOR new backwards compatible features&#xA;PATCH backwards compatible bug fixes&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Additional labels for release candidates are available as extensions to the &lt;code&gt;MAJOR.MINOR.PATCH-rcNUMBER&lt;/code&gt;(&lt;code&gt;3.6.0-rc1&lt;/code&gt;) format.&lt;/p&gt; &#xA;&lt;h2&gt;Client libraries:&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Client&lt;/th&gt; &#xA;   &lt;th&gt;Platform&lt;/th&gt; &#xA;   &lt;th&gt;Compatible With&lt;/th&gt; &#xA;   &lt;th&gt;REST API Support&lt;/th&gt; &#xA;   &lt;th&gt;Additional Information&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/freyacodes/lavalink-client&#34;&gt;Lavalink-Client&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Java&lt;/td&gt; &#xA;   &lt;td&gt;JDA/&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DRSchlaubi/lavalink.kt&#34;&gt;Lavalink.kt&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Kotlin&lt;/td&gt; &#xA;   &lt;td&gt;JDA/Kord/&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;Kotlin Coroutines&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Devoxin/Lavalink.py&#34;&gt;Lavalink.py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/vicky5124/lavasnek_rs&#34;&gt;lavasnek_rs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any*&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;*&lt;code&gt;asyncio&lt;/code&gt;-based libraries only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/HazemMeqdad/lavaplayer&#34;&gt;lavaplayer-py&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any*&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;*&lt;code&gt;asyncio&lt;/code&gt;-based libraries only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ooliver1/mafic&#34;&gt;Mafic&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;discord.py &lt;strong&gt;V2&lt;/strong&gt;/nextcord/disnake/py-cord&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/PythonistaGuild/Wavelink&#34;&gt;Wavelink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;discord.py &lt;strong&gt;V2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/cloudwithax/pomice&#34;&gt;Pomice&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;discord.py &lt;strong&gt;V2&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Axelware/discord-ext-lava&#34;&gt;discord-ext-lava&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;discord.py&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Aspect1103/Lavapy&#34;&gt;Lavapy&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;discord.py&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/initzx/magma&#34;&gt;Magma&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;discord.py&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/interactions-py/lavalink&#34;&gt;interactions-lavalink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Python&lt;/td&gt; &#xA;   &lt;td&gt;interactions.py&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lavaclient/lavadeno&#34;&gt;Lavadeno&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Deno&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/OverleapTechnologies/LavaJS&#34;&gt;LavaJS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lavaclient/lavaclient&#34;&gt;LavaClient&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/XzFirzal/lavacoffee&#34;&gt;Lavacoffee&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lavacord/lavacord&#34;&gt;Lavacord&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ThePedroo/FastLink&#34;&gt;FastLink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/1Lucas1apk/moonlink.js&#34;&gt;Moonlink.js&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/skyra-project/audio&#34;&gt;@skyra/audio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;discord.js&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Archived&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/parasop/poru&#34;&gt;Poru&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Deivu/Shoukaku&#34;&gt;Shoukaku&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/rilysh/lavaudio&#34;&gt;Lavaudio&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Gorillas-Team/Gorilink&#34;&gt;Gorilink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;discord.js&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Archived/Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/MrJohnCoder/SandySounds&#34;&gt;SandySounds&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/briantanner/eris-lavalink&#34;&gt;eris-lavalink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Node.js&lt;/td&gt; &#xA;   &lt;td&gt;eris&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Yucked/Victoria&#34;&gt;Victoria&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;.NET&lt;/td&gt; &#xA;   &lt;td&gt;Discord.Net&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/angelobreuer/Lavalink4NET&#34;&gt;Lavalink4NET&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;.NET&lt;/td&gt; &#xA;   &lt;td&gt;Discord.Net/DSharpPlus&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DSharpPlus/DSharpPlus/tree/master/DSharpPlus.Lavalink&#34;&gt;DSharpPlus.Lavalink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;.NET&lt;/td&gt; &#xA;   &lt;td&gt;DSharpPlus&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Dev-Yukine/Lavalink.NET&#34;&gt;Lavalink.NET&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;.NET&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Devoxin/SharpLink&#34;&gt;SharpLink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;.NET&lt;/td&gt; &#xA;   &lt;td&gt;Discord.Net&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/Aiko-IT-Systems/DisCatSharp/tree/main/DisCatSharp.Lavalink&#34;&gt;DisCatSharp.Lavalink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;.NET&lt;/td&gt; &#xA;   &lt;td&gt;DisCatSharp&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/DHCPCD9/Nomia&#34;&gt;Nomia&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;.NET&lt;/td&gt; &#xA;   &lt;td&gt;DSharpPlus&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/disgoorg/disgolink&#34;&gt;DisGoLink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/lukasl-dev/waterlink&#34;&gt;waterlink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/foxbot/gavalink&#34;&gt;gavalink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Go&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;Unmaintained&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gitlab.com/vicky5124/lavalink-rs&#34;&gt;Lavalink-rs&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Rust&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Any*&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;❌&lt;/td&gt; &#xA;   &lt;td&gt;*&lt;code&gt;tokio&lt;/code&gt;-based libraries only&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/ThePedroo/Coglink&#34;&gt;Coglink&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;C&lt;/td&gt; &#xA;   &lt;td&gt;Concord&lt;/td&gt; &#xA;   &lt;td&gt;✅&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Or alternatively, you can create your own client library, following the &lt;a href=&#34;https://github.com/freyacodes/Lavalink/raw/master/IMPLEMENTATION.md&#34;&gt;implementation documentation&lt;/a&gt;. Any client libraries marked with &lt;code&gt;Unmaintained&lt;/code&gt; have been marked as such as their repositories have not received any commits for at least 1 year since time of checking, however they are listed as they may still support Lavalink, and/or have not needed maintenance, however keep in mind that compatibility and full feature support is not guaranteed.&lt;/p&gt; &#xA;&lt;h2&gt;Server configuration&lt;/h2&gt; &#xA;&lt;p&gt;Download binaries from &lt;a href=&#34;https://github.com/freyacodes/Lavalink/actions&#34;&gt;the GitHub actions&lt;/a&gt; or &lt;a href=&#34;https://github.com/freyacodes/Lavalink/releases&#34;&gt;the GitHub releases&lt;/a&gt;(specific versions prior to &lt;code&gt;v3.5&lt;/code&gt; can be found in the &lt;a href=&#34;https://ci.fredboat.com/viewLog.html?buildId=lastSuccessful&amp;amp;buildTypeId=Lavalink_Build&amp;amp;tab=artifacts&amp;amp;guest=1&#34;&gt;CI Server&lt;/a&gt;).&lt;/p&gt; &#xA;&lt;p&gt;Put an &lt;code&gt;application.yml&lt;/code&gt; file in your working directory. (&lt;a href=&#34;https://github.com/freyacodes/Lavalink/raw/master/LavalinkServer/application.yml.example&#34;&gt;Example here&lt;/a&gt;)&lt;/p&gt; &#xA;&lt;p&gt;Run with &lt;code&gt;java -jar Lavalink.jar&lt;/code&gt;&lt;/p&gt; &#xA;&lt;p&gt;Docker images can be found under &lt;a href=&#34;https://github.com/freyacodes/Lavalink/pkgs/container/lavalink&#34;&gt;packages&lt;/a&gt; with old builds prior to &lt;code&gt;v3.7.4&lt;/code&gt; being available on &lt;a href=&#34;https://hub.docker.com/r/fredboat/lavalink/&#34;&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
</feed>