<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-03-12T01:54:36Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>JetBrains/compose-multiplatform</title>
    <updated>2023-03-12T01:54:36Z</updated>
    <id>tag:github.com,2023-03-12:/JetBrains/compose-multiplatform</id>
    <link href="https://github.com/JetBrains/compose-multiplatform" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Compose Multiplatform, a modern UI framework for Kotlin that makes building performant and beautiful user interfaces easy and enjoyable.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;http://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;official project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/releases/latest&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/JetBrains/compose-multiplatform?color=brightgreen&amp;amp;label=latest%20release&#34; alt=&#34;Latest release&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/JetBrains/compose-multiplatform?color=orange&amp;amp;include_prereleases&amp;amp;label=latest%20build&#34; alt=&#34;Latest build&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Compose Multiplatform, by JetBrains&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/artwork/readme/apps.png&#34; alt=&#34;&#34;&gt; Compose Kotlin UI framework port for desktop platforms (macOS, Linux, Windows) and Web, components outside of the core &lt;a href=&#34;https://android.googlesource.com/platform/frameworks/support&#34;&gt;Compose repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Preview functionality (check your application UI without building/running it) for desktop platforms is available via &lt;a href=&#34;https://plugins.jetbrains.com/plugin/16541-compose-multiplatform-ide-support&#34;&gt;IDEA plugin&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Tutorials&lt;/h2&gt; &#xA;&lt;h3&gt;Compose for Desktop&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Getting_Started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Image_And_Icons_Manipulations&#34;&gt;Image and icon manipulations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Mouse_Events&#34;&gt;Mouse events and hover&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Desktop_Components#scrollbars&#34;&gt;Scrolling and scrollbars&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Desktop_Components#tooltips&#34;&gt;Tooltips&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Context_Menu/README.md&#34;&gt;Context Menu&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Window_API_new&#34;&gt;Top level windows management&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Tray_Notifications_MenuBar_new&#34;&gt;Menu, tray, notifications&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Keyboard&#34;&gt;Keyboard support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Tab_Navigation&#34;&gt;Tab focus navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Swing_Integration&#34;&gt;Swing interoperability&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Navigation&#34;&gt;Navigation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/tree/master/tutorials/Accessibility&#34;&gt;Accessibility&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Native_distributions_and_local_execution&#34;&gt;Building a native distribution&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Also, see &lt;a href=&#34;https://developer.android.com/jetpack/compose/documentation#core&#34;&gt;Foundation&lt;/a&gt; and &lt;a href=&#34;https://developer.android.com/jetpack/compose/documentation#design&#34;&gt;Design&lt;/a&gt; docs from Google. They were originally written for Android, but most of information applies to Compose for Desktop as well.&lt;/p&gt; &#xA;&lt;h3&gt;Compose for Web HTML&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Web/Getting_Started&#34;&gt;Getting started&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Web/Building_UI&#34;&gt;Building web UI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Web/Events_Handling&#34;&gt;Handling Events&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Web/Controlled_Uncontrolled_Inputs&#34;&gt;Controlled and Uncontrolled inputs&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Web/Style_Dsl&#34;&gt;Style DSL&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Web/Using_Test_Utils&#34;&gt;Using test-utils&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Jetpack Compose for Android&lt;/h3&gt; &#xA;&lt;p&gt;Compose Multiplatform uses Jetpack Compose developed by Google when you target Android platform. See more info about it &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/tutorials/Development_for_Android&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose/documentation&#34;&gt;The docs&lt;/a&gt; published by Google are great and decribe how to develop on Compose for Android.&lt;/p&gt; &#xA;&lt;p&gt;Note that when you use Compose Multiplatform, you setup your project differently. You can create a multiplatform project with Android support via IDEA Project Wizard, or by copying &lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/tree/master/templates/multiplatform-template&#34;&gt;multiplatform template&lt;/a&gt;. In &lt;code&gt;androidMain&lt;/code&gt; source set you can use almost all information from the docs, and in &lt;code&gt;commonMain&lt;/code&gt; source set you can use information from Foundation and Design sections.&lt;/p&gt; &#xA;&lt;h3&gt;Experimental targets&lt;/h3&gt; &#xA;&lt;p&gt;The other targets (iOS, Compose for Web Canvas) are experimental and under development. Use them at your own risk.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/codeviewer&#34;&gt;codeviewer&lt;/a&gt; - File Browser and Code Viewer application for Android and Desktop&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/imageviewer&#34;&gt;imageviewer&lt;/a&gt; - Image Viewer application for Android and Desktop&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/issues&#34;&gt;issues&lt;/a&gt; - GitHub issue tracker with an adaptive UI and ktor-client&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/falling-balls&#34;&gt;Falling Balls&lt;/a&gt; - Simple game&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/notepad&#34;&gt;notepad&lt;/a&gt; - Notepad, using the new experimental Composable Window API&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/todoapp&#34;&gt;todoapp&lt;/a&gt; - TODO items tracker with persistence and multiple screens, written with external navigation library&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/todoapp-lite&#34;&gt;todoapp-lite&lt;/a&gt; - A simplified version of &lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/todoapp&#34;&gt;todoapp&lt;/a&gt;, fully based on Compose&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/widgets-gallery&#34;&gt;widgets gallery&lt;/a&gt; - Gallery of standard widgets&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/intellij-plugin&#34;&gt;IDEA plugin&lt;/a&gt; - Plugin for IDEA using Compose for Desktop&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/web-compose-bird&#34;&gt;compose-bird&lt;/a&gt; - A flappy bird clone using Compose for Web&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/web-landing&#34;&gt;web-landing&lt;/a&gt; - A landing page built using Compose for Web (HTML composable api)&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/web-with-react&#34;&gt;compose-web-with-react&lt;/a&gt; - Using compose-in-react and react-in-compose&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/examples/web-compose-in-js&#34;&gt;compose-web-in-js&lt;/a&gt; - Using Html based composables in js&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Other&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/artwork&#34;&gt;artwork&lt;/a&gt; - design artifacts&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/benchmarks&#34;&gt;benchmarks&lt;/a&gt; - collection of benchmarks&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/compose&#34;&gt;compose&lt;/a&gt; - composite build of &lt;a href=&#34;https://github.com/JetBrains/androidx&#34;&gt;Compose Multiplatform sources&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/ci&#34;&gt;ci&lt;/a&gt; - Continuous Integration helpers&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/gradle-plugins&#34;&gt;gradle-plugins&lt;/a&gt; - a plugin, simplifying usage of Compose Multiplatform with Gradle&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/templates&#34;&gt;templates&lt;/a&gt; - new application templates&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/components&#34;&gt;components&lt;/a&gt; - custom components of Compose Multiplatform &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/components/SplitPane&#34;&gt;Split Pane&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/experimental&#34;&gt;experimental&lt;/a&gt; - experimental components and examples &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform-template&#34;&gt;Compose Multiplatform template project&lt;/a&gt; that includes experimental iOS target&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/experimental/examples&#34;&gt;examples&lt;/a&gt; - examples that use new experimental functionality&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/experimental/cef&#34;&gt;cef&lt;/a&gt; - CEF integration in Jetpack Compose (somewhat outdated)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/experimental/components/VideoPlayer&#34;&gt;Video Player&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/experimental/lwjgl-integration&#34;&gt;LWJGL integration&lt;/a&gt; - An example showing how to integrate Compose with &lt;a href=&#34;https://www.lwjgl.org&#34;&gt;LWJGL&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/experimental/build_from_cli&#34;&gt;CLI example&lt;/a&gt; - An example showing how to build Compose without Gradle&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Versions&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/releases/latest&#34;&gt;The latest stable release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/JetBrains/compose-multiplatform/releases&#34;&gt;The latest dev release&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/VERSIONING.md&#34;&gt;Compatibility and versioning overview&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/JetBrains/compose-multiplatform/master/CHANGELOG.md&#34;&gt;Changelog&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>tangshimin/MuJing</title>
    <updated>2023-03-12T01:54:36Z</updated>
    <id>tag:github.com,2023-03-12:/tangshimin/MuJing</id>
    <link href="https://github.com/tangshimin/MuJing" rel="alternate"></link>
    <summary type="html">&lt;p&gt;幕境 - 沉浸式学英语,使用自己感兴趣的电影、美剧或文档，生成词库（单词本）。在记忆单词时，可以用键盘打字，练习拼写并观看相关的视频片段，以便更好的理解和记忆单词。播放电影时，以弹幕的形式复习词库中的单词，使得单词记忆不再是一件乏味的事。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;幕境&lt;/h2&gt; &#xA;&lt;p&gt;沉浸式学英语,使用自己感兴趣的电影、美剧或文档，生成词库（单词本）。在记忆单词时，可以练习拼写并观看相关的视频片段，以便更好的理解和记忆单词。播放电影时，以弹幕的形式复习词库中的单词，使得单词记忆不再是一件乏味的事。&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tangshimin/MuJing/releases&#34;&gt;下载地址&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;主要功能：&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tangshimin/MuJing/wiki#%E5%A6%82%E4%BD%95%E7%94%A8-mkv-%E8%A7%86%E9%A2%91%E7%94%9F%E6%88%90%E8%AF%8D%E5%BA%93&#34;&gt;用 MKV 格式的电影、电视剧生成词库(单词本)&lt;/a&gt;，让每个单词都有具体的语境。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16540656/184311741-15fab9c3-83ba-4080-bac7-ca3a163c67d0.png&#34; alt=&#34;Demo-Generate-Vocabulary-Light&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tangshimin/MuJing/wiki#%E5%A6%82%E4%BD%95%E7%94%A8%E5%AD%97%E5%B9%95%E7%94%9F%E6%88%90%E8%AF%8D%E5%BA%93&#34;&gt;不是 MKV 格式的视频可以使用字幕 + 视频生成词库(单词本)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;记忆单词，记忆单词的时候，会自动播放单词的读音，然后用键盘打字练习拼写，每个单词都可以输入多次，直到记住为止。从 MKV 生成的词库(单词本)，可以抄写单词对应的字幕，播放单词对应的视频片段。每个单元有 20 个单词，记完一个单元还有听写测试，检查记忆效果。默认使用 Enter 键切换下一个单词。&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/16540656/163662386-e82dc534-7a5a-4566-8449-fc71db51f960.mp4&#34;&gt;https://user-images.githubusercontent.com/16540656/163662386-e82dc534-7a5a-4566-8449-fc71db51f960.mp4&lt;/a&gt;&lt;/p&gt; &lt;p&gt;demo 中的电影片段来源于 &lt;a href=&#34;https://www.youtube.com/watch?v=eRsGyueVLvQ&#34;&gt;Sintel&lt;/a&gt;。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;视频播放器，以弹幕的形式复习单词。播放电影时，添加用电影生成的词库到播放器，单词会以弹幕的形式出现。要查看某个单词的中文解释，只需要输入单词或对应的数字就可以查看。打开弹幕的快捷方式：如果正在记忆某个由视频或字幕生成的词库，把视频拖放到记忆单词界面，就可以快速的打开视频和弹幕。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16540656/220088640-2f9c3a54-500e-477b-8c63-bc31b32d2d71.jpg&#34; alt=&#34;videoPlayer&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;字幕浏览器，可以浏览字幕，练习跟读美剧、电影、TED演讲，可以选择性的播放一条或多条字幕，还可以抄写字幕。如果要播放多行字幕，点击左边的数字就可以开启，点击 5 和 10 再点击左边的播放按钮， 就会从第5行开始播放，到第10行结束。&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://user-images.githubusercontent.com/16540656/174944474-e5947df9-c8ed-4546-9c67-057fe52c2d51.mp4&#34;&gt;https://user-images.githubusercontent.com/16540656/174944474-e5947df9-c8ed-4546-9c67-057fe52c2d51.mp4&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;听写复习，可以选择多个章节的单词一起复习，先听写测试，然后再复习错误的单词。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16540656/184179317-f8c0ac99-9048-48da-b59b-5badbaae7c62.png&#34; alt=&#34;DictionReview&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;抄写文本，可以抄写 &lt;a href=&#34;https://www.gutenberg.org/&#34;&gt;古腾堡计划&lt;/a&gt; 所有 txt 格式的电子书，非&lt;a href=&#34;https://www.gutenberg.org/&#34;&gt;古腾堡计划&lt;/a&gt; 的电子书，抄写前可能需要先格式化，把每行的字母数量限制在 75 个以内。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16540656/175084580-6b26abc3-671f-455e-ac5f-aa583297a0e0.png&#34; alt=&#34;Demo-Text&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tangshimin/MuJing/wiki#%E5%A6%82%E4%BD%95%E7%94%A8%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E8%AF%8D%E5%BA%93&#34;&gt;用英文文档生成词库(单词本)&lt;/a&gt;要读一篇陌生单词比较多的英文文档，又不想一边查词典一边看文档，可以先用文档生成词库，把陌生单词先记一遍，然后看文档的时候会更加流畅。&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tangshimin/MuJing/wiki#%E9%93%BE%E6%8E%A5%E5%AD%97%E5%B9%95%E8%AF%8D%E5%BA%93&#34;&gt;用 MKV 视频或字幕生成的词库，可以链接到用文档生成的词库或内置的词库&lt;/a&gt;。下面着张图片表示，电影 Sintel 的所有字幕中，有 9 条字幕，匹配了四级词库中的 6 个单词。&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/16540656/166690274-2075b736-af51-42f0-a881-6535ca11d4d3.png&#34; alt=&#34;Link Vocabulary&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;应用平台：Windows / macOS&lt;/h2&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://github.com/tangshimin/MuJing/releases&#34;&gt;下载地址&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h2&gt;开发环境&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;UI 框架：&lt;a href=&#34;https://github.com/JetBrains/compose-jb&#34;&gt;Compose Desktop&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;开发语言：Kotlin、Java&lt;/li&gt; &#xA; &lt;li&gt;OpenJDK: &#xA;  &lt;blockquote&gt; &#xA;   &lt;p&gt;Windows : OpenJDK 17.0.1&lt;br&gt; macOS : OpenJDK 17.0.5&lt;/p&gt; &#xA;  &lt;/blockquote&gt; &lt;/li&gt; &#xA; &lt;li&gt;gradle 7.5.1&lt;/li&gt; &#xA; &lt;li&gt;启动项目之前需要将 &lt;code&gt;MuJing\resources\common\dictionary&lt;/code&gt; 文件夹里的词典文件&lt;code&gt;ecdict.mv.db.7z&lt;/code&gt; 解压缩。不然不能使用生成词库功能。打包之前要把&lt;code&gt;ecdict.mv.db.7z&lt;/code&gt;删掉。&lt;/li&gt; &#xA; &lt;li&gt;macOS 系统还需要下载 &lt;a href=&#34;https://www.videolan.org/&#34;&gt;VLC 视频播放器&lt;/a&gt;， windows 系统也可以下载 VLC，用于调试应用程序，但是程序优先使用项目内置的 VLC DLL,如果内置的 DLL 有问题再试本机安装的 VLC.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;致谢&lt;/h2&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/Kaiyiwing/qwerty-learner&#34;&gt;qwerty-learner&lt;/a&gt; 的所有贡献者，让我有机会把我曾经放弃的一个 app，又找到新的方式实现。&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/skywind3000&#34;&gt;skywind3000&lt;/a&gt; 开源 &lt;a href=&#34;https://github.com/skywind3000/ECDICT&#34;&gt;ECDICT&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://github.com/libregd&#34;&gt;libregd&lt;/a&gt; 为本项目贡献了一些交互设和及非常好的功能建议，以及为 Typing Learner 设计 Logo。&lt;/p&gt; &#xA;&lt;p&gt;感谢 &lt;a href=&#34;https://www.youdao.com/&#34;&gt;网易有道&lt;/a&gt; 为本项目提供专业的词典发音。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>MrXiaoM/Aoki</title>
    <updated>2023-03-12T01:54:36Z</updated>
    <id>tag:github.com,2023-03-12:/MrXiaoM/Aoki</id>
    <link href="https://github.com/MrXiaoM/Aoki" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Mirai 一键登录处理器&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img width=&#34;192&#34; src=&#34;https://raw.githubusercontent.com/MrXiaoM/Aoki/main/app/src/main/res/drawable/icon_round.png&#34; alt=&#34;logo&#34;&gt;&#xA; &lt;br&gt; &#xA; &lt;img width=&#34;96&#34; src=&#34;https://raw.githubusercontent.com/MrXiaoM/Aoki/main/docs/images/logo.svg?sanitize=true&#34;&gt; &#xA; &lt;hr&gt; &#xA; &lt;p&gt;Aoki 是在 Android 平台上基于 &lt;a href=&#34;https://github.com/mamoe/mirai&#34;&gt;mirai&lt;/a&gt; 开发的登录处理器&lt;/p&gt; &#xA; &lt;p&gt;本项目名称来源于&lt;/p&gt; &#xA; &lt;p&gt;i-style project 推出的&lt;a href=&#34;https://en.wikipedia.org/wiki/Aoki_Lapis&#34;&gt;蒼姫ラピス (&lt;strong&gt;Aoki&lt;/strong&gt; Lapis)&lt;/a&gt;&lt;/p&gt; &#xA; &lt;p&gt;项目图标由&lt;a href=&#34;https://www.pixiv.net/artworks/103427447&#34;&gt;人间工作&lt;/a&gt;绘制&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;注意事项&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;请确保你在&lt;strong&gt;真实的&lt;/strong&gt; Android 设备上进行登录&lt;/li&gt; &#xA; &lt;li&gt;请确保你已在该 Android 设备登录了&lt;strong&gt;官方的&lt;/strong&gt; QQ 客户端&lt;/li&gt; &#xA; &lt;li&gt;Aoki 可以确保你在第一次登录时能够正常登录，不能保证已经触发过 235/237 的账号能登录&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;使用方法&lt;/h2&gt; &#xA;&lt;p&gt;在&lt;strong&gt;真实的&lt;/strong&gt; Android 手机上安装 Aoki，打开并按照引导进行登录。出现「登录成功」提示后，你可以&lt;/p&gt; &#xA;&lt;h3&gt;压缩并分享&lt;/h3&gt; &#xA;&lt;p&gt;登录成功后点击「打包并分享到…」，然后在弹出的分享面板中想办法将该文件发送到电脑上，比如 通过QQ文件传输助手发送到电脑，或者 使用蓝牙连接发送到电脑 等等。&lt;/p&gt; &#xA;&lt;p&gt;你也可以在「账号管理」中找到「打包并分享到…」。&lt;/p&gt; &#xA;&lt;h3&gt;通过路径复制文件&lt;/h3&gt; &#xA;&lt;p&gt;使用任何你能想到的方法将手机储存目录下的 &lt;code&gt;Android/data/top.mrxiaom.mirai.aoki/files/AokiMirai&lt;/code&gt; 文件夹传输到电脑上，可用的方法包括但不限于如下：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;使用数据线复制文件夹&lt;/li&gt; &#xA; &lt;li&gt;压缩文件夹，通过QQ文件传输助手发送到电脑&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;将从以上其中一种方法获得的 &lt;code&gt;bots&lt;/code&gt; 文件夹中以qq号命名的文件夹， 覆盖到 MCL 目录，然后你就可以在 MCL 中登录你的账户了。&lt;/p&gt; &#xA;&lt;h2&gt;下载&lt;/h2&gt; &#xA;&lt;p&gt;在 &lt;a href=&#34;https://github.com/MrXiaoM/Aoki/releases&#34;&gt;Github Releases&lt;/a&gt; 下载最新版本&lt;/p&gt;</summary>
  </entry>
</feed>