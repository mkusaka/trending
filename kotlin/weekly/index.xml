<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2025-02-09T01:42:38Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>pebble-dev/mobile-app</title>
    <updated>2025-02-09T01:42:38Z</updated>
    <id>tag:github.com,2025-02-09:/pebble-dev/mobile-app</id>
    <link href="https://github.com/pebble-dev/mobile-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cobble: Rebble device companion app for iOS and Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rebble app&lt;/h1&gt; &#xA;&lt;p&gt;A multi platform watch companion app for Pebble/RebbleOS devices&lt;/p&gt; &#xA;&lt;h1&gt;Development&lt;/h1&gt; &#xA;&lt;h2&gt;Building the app&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Checkout this repo&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/settings/tokens&#34;&gt;Generate new Github token with &lt;code&gt;read:packages&lt;/code&gt; permission&lt;/a&gt;. This is required to fetch libpebblecommons from Github packages repository.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Create &lt;code&gt;local.properties&lt;/code&gt; file in &lt;code&gt;android&lt;/code&gt; folder. Write following to the file:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;GITHUB_ACTOR=&amp;lt;YOUR GITHUB USERNAME&amp;gt;&#xA;GITHUB_TOKEN=&amp;lt;GENERATED TOKEN&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Install flutter on your machine. To make builds reproducible, we use exact flutter version in pubspec.yml. Thus we recommend you use &lt;a href=&#34;https://fvm.app/documentation/getting-started/installation&#34;&gt;FVM&lt;/a&gt; to install flutter. After you install FVM, just run &lt;code&gt;fvm install&lt;/code&gt; command in the project folder and you will automatically get the required flutter version.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://flutter.dev/docs/get-started/editor&#34;&gt;Setup flutter in the IDE of your choice&lt;/a&gt;. Be sure to also configure it with &lt;a href=&#34;https://fvm.app/docs/getting_started/configuration#ide&#34;&gt;FVM Flutter path&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open this repo in the IDE set up in step 5&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you do not have an IDE, from step 5, you&#39;ll instead:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;fvm flutter pub get&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Launch an emulator: &lt;code&gt;fvm flutter emulators --launch Pixel_2_API_30&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;fvm flutter run&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h3&gt;Host-specific instructions: Ubuntu and similar&lt;/h3&gt; &#xA;&lt;p&gt;To install FVM on Ubuntu, try something like:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo snap install flutter --classic&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;flutter config --no-analytics # if you want&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dart --disable-analytics # if you want&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;dart pub global activate fvm&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;export PATH=&#34;$PATH&#34;:&#34;$HOME/.pub-cache/bin&#34;&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;If you don&#39;t have Android Studio installed, and you want an emulator, do:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo snap install android-studio --classic&lt;/code&gt; (hey, what&#39;s 900MB between friends?)&lt;/li&gt; &#xA; &lt;li&gt;Launch &lt;code&gt;android-studio&lt;/code&gt;. Update everything in sight (hey, what&#39;s 400MB between friends?)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;sudo apt-get install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils&lt;/code&gt; (hey, what&#39;s 140MB between friends?)&lt;/li&gt; &#xA; &lt;li&gt;Hit &#39;More actions...&#39;, then &#39;AVD Manager&#39;. Then &#39;Create Virtual Device&#39;. Then choose a device (I chose Pixel 2), then download R (hey, what&#39;s 620MB between friends?), then hit finish.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Building the app for iOS&lt;/h2&gt; &#xA;&lt;p&gt;iOS requires CocoaPods to be installed. To install CocoaPods, run the following commands:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;brew install ruby&#xA;sudo gem install cocoapods&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;After installing CocoaPods, you should build the app using &lt;code&gt;fvm flutter build ios&lt;/code&gt;, which will also run &lt;code&gt;pod install&lt;/code&gt; for you ready for building the app in Xcode.&lt;/p&gt; &#xA;&lt;h2&gt;Building mappings&lt;/h2&gt; &#xA;&lt;p&gt;To build all the mappings in this project (such as entity &amp;lt;&amp;gt; map mapping for SQL), you have to run the following command:&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;fvm flutter pub run build_runner build --delete-conflicting-outputs&lt;/code&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Building pigeons&lt;/h2&gt; &#xA;&lt;p&gt;Type safe communication between Flutter and native code is performed using &lt;a href=&#34;https://pub.dev/packages/pigeon&#34;&gt;Pigeon&lt;/a&gt;. To add new communication interfaces, edit &lt;a href=&#34;https://raw.githubusercontent.com/pebble-dev/mobile-app/master/pigeons/pigeons.dart&#34;&gt;pigeons/pigeons.dart&lt;/a&gt; file and then re-compile interface with the following command:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;fvm flutter pub run pigeon \&#xA;  --input pigeons/pigeons.dart \&#xA;  --dart_out lib/infrastructure/pigeons/pigeons.g.dart \&#xA;  --java_out ./android/app/src/main/kotlin/io/rebble/cobble/pigeons/Pigeons.java \&#xA;  --java_package &#34;io.rebble.cobble.pigeons&#34; \&#xA;  --objc_header_out ./ios/Runner/Pigeon/Pigeons.h \&#xA;  --objc_source_out ./ios/Runner/Pigeon/Pigeons.m&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Architecture&lt;/h1&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/pebble-dev/mobile-app/wiki&#34;&gt;Wiki&lt;/a&gt; for more info on app architecture.&lt;/p&gt; &#xA;&lt;h2&gt;Using Cobble theming&lt;/h2&gt; &#xA;&lt;p&gt;App&#39;s components are styled through modified Material theme, in theory you should never specify custom styles in your own component. If you have to, try to use colors that are defined in &lt;code&gt;ThemeData&lt;/code&gt; (accessed by &lt;code&gt;WithCobbleTheme(context).theme&lt;/code&gt;) or alternatively in &lt;code&gt;CobbleSchemeData&lt;/code&gt; (&lt;code&gt;WithCobbleTheme(context).scheme&lt;/code&gt;). Scheme is collection of colors, created by designer while the theme is higher-level grouping of these colours to provide meaningful base styles for components. If you start using Material component which isn&#39;t styled properly, take a look at Material theme and see if you can set styles there before setting styles directly on component. There is limited set of text types, as defined by designer, if you need different text style, extends these types with &lt;code&gt;.copyWith&lt;/code&gt; instead of creating your own.&lt;/p&gt; &#xA;&lt;h2&gt;Using Navigator&lt;/h2&gt; &#xA;&lt;p&gt;We are using iOS-style tabbed navigation, where each tab has its own stack of screens. In practice this means there might be multiple stacks (1 main stack and one each for tab) but only 1 stack is active. In order to push page on an active stack import &lt;code&gt;CobbleNavigator&lt;/code&gt; extension and then call &lt;code&gt;context.push(SomeScreen())&lt;/code&gt;. &lt;code&gt;SomeScreen&lt;/code&gt; widget should also implement interface &lt;code&gt;CobbleScreen&lt;/code&gt; and use &lt;code&gt;CobbleScaffold.page&lt;/code&gt; or &lt;code&gt;CobbleScaffold.tab&lt;/code&gt;, which takes care of title and back button in navigation bar.&lt;/p&gt; &#xA;&lt;h2&gt;Custom Cobble components&lt;/h2&gt; &#xA;&lt;p&gt;A lot of components were refactored in custom Widgets, like CobbleCard, CobbleTile, CobbleButton, etc. and these components should serve you as building blocks upon which to build your UI. They are showcased in WidgetLibrary screen and in golden (aka snapshot) tests. All golden images (how widgets should look) are included in /test/components/goldens.&lt;/p&gt; &#xA;&lt;h2&gt;Using localization&lt;/h2&gt; &#xA;&lt;p&gt;To use localized string, add it to all &lt;code&gt;.json&lt;/code&gt; files in &lt;code&gt;/lang&lt;/code&gt;, start build_runner to generate localized models (see &lt;a href=&#34;https://raw.githubusercontent.com/pebble-dev/mobile-app/master/#building-mappings&#34;&gt;Building mappings&lt;/a&gt; above) and then use it as &lt;code&gt;tr.canBeNested.yourKey&lt;/code&gt;. Generator also supports named and positional parameters:&lt;br&gt; &lt;code&gt;&#34;key&#34;: &#34;fixed value, named parameter -&amp;gt; {named}, positional parameter -&amp;gt; {}&lt;/code&gt; and generates function instead of string. Use this function similar to string:&lt;br&gt; &lt;code&gt;tr.canBeNested.yourKey(&#39;positional&#39;, named: &#39;named param&#39;)&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;App&#39;s localization is stored in /lang directory, one &lt;code&gt;.json&lt;/code&gt; file for one language. Structure of these &lt;code&gt;.json&lt;/code&gt; files is then converted to localized model with a help of &lt;code&gt;ModelGenerator&lt;/code&gt;. Model is in turn used to load and parse correct &lt;code&gt;.json&lt;/code&gt; file at app&#39;s startup. Refer to &lt;a href=&#34;https://raw.githubusercontent.com/pebble-dev/mobile-app/master/build.yaml&#34;&gt;build.yaml&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/pebble-dev/mobile-app/master/lib/localization/localization_delegate.dart&#34;&gt;CobbleLocalizationDelegate&lt;/a&gt; for more info.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>zaneschepke/wgtunnel</title>
    <updated>2025-02-09T01:42:38Z</updated>
    <id>tag:github.com,2025-02-09:/zaneschepke/wgtunnel</id>
    <link href="https://github.com/zaneschepke/wgtunnel" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An alternative Android client app for WireGuard® and AmneziaWG&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; WG Tunnel &lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;An alternative Android client app for &lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard®&lt;/a&gt; and &lt;a href=&#34;https://docs.amnezia.org/documentation/amnezia-wg/&#34;&gt;AmneziaWG&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/zaneschepke/wgtunnel/issues/new?assignees=zaneschepke&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%5BBUG%5D+-+Problem+with+app&#34;&gt;Report a Bug&lt;/a&gt; · &lt;a href=&#34;https://github.com/zaneschepke/wgtunnel/issues/new?assignees=zaneschepke&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%5BFEATURE%5D+-+New+feature+request&#34;&gt;Request a Feature&lt;/a&gt; · &lt;a href=&#34;https://github.com/zaneschepke/wgtunnel/discussions&#34;&gt;Ask a Question&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;br&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.zaneschepke.wireguardautotunnel&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Google_Play-414141?style=for-the-badge&amp;amp;logo=google-play&amp;amp;logoColor=white&#34; alt=&#34;Google Play&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.zaneschepke.wireguardautotunnel/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?style=for-the-badge&amp;amp;message=F-Droid&amp;amp;color=1976D2&amp;amp;logo=F-Droid&amp;amp;logoColor=FFFFFF&amp;amp;label=&#34; alt=&#34;F-Droid&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zaneschepke/fdroid&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?style=for-the-badge&amp;amp;message=Personal&amp;amp;color=1976D2&amp;amp;logo=F-Droid&amp;amp;logoColor=FFFFFF&amp;amp;label=&#34; alt=&#34;Personal&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://discord.gg/rbRRNh6H7V&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://t.me/wgtunnel&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;details open&gt; &#xA; &lt;summary&gt;Table of Contents&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/#about&#34;&gt;About&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/#acknowledgements&#34;&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/#screenshots&#34;&gt;Screenshots&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/#features&#34;&gt;Features&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/#building&#34;&gt;Building&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/#translation&#34;&gt;Translation&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;div style=&#34;text-align: left;&#34;&gt; &#xA; &lt;h2&gt;About&lt;/h2&gt; &#xA; &lt;p&gt;Inspired by the official &lt;a href=&#34;https://github.com/WireGuard/wireguard-android&#34;&gt;wireguard-android&lt;/a&gt; app, WG Tunnel was created to address features and support missing from the official app. This app combines support for both &lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard®&lt;/a&gt; and &lt;a href=&#34;https://docs.amnezia.org/documentation/amnezia-wg/&#34;&gt;AmneziaWG&lt;/a&gt;, with its primary feature of auto-tunneling (on-demand tunneling).&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;div style=&#34;text-align: left;&#34;&gt; &#xA; &lt;h2&gt;Acknowledgements&lt;/h2&gt; &#xA; &lt;p&gt;Thank you to the following:&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;All of the users that have helped contribute to the project with ideas, translations, feedback, bug reports, testing, and donations.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.wireguard.com/&#34;&gt;WireGuard®&lt;/a&gt; - © Jason A. Donenfeld (&lt;a href=&#34;https://github.com/WireGuard/wireguard-android&#34;&gt;https://github.com/WireGuard/wireguard-android&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://docs.amnezia.org/documentation/amnezia-wg/&#34;&gt;AmneziaWG&lt;/a&gt; - Amnezia Team (&lt;a href=&#34;https://github.com/amnezia-vpn/amneziawg-android&#34;&gt;https://github.com/amnezia-vpn/amneziawg-android&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;/div&gt; &#xA;&lt;div style=&#34;display: flex; flex-wrap: wrap; justify-content: center; gap: 10px;&#34;&gt; &#xA; &lt;img label=&#34;Main&#34; src=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/fastlane/metadata/android/en-US/images/phoneScreenshots/main_screen.png&#34; width=&#34;200&#34;&gt; &#xA; &lt;img label=&#34;Settings&#34; src=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/fastlane/metadata/android/en-US/images/phoneScreenshots/settings_screen.png&#34; width=&#34;200&#34;&gt; &#xA; &lt;img label=&#34;Auto&#34; src=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/fastlane/metadata/android/en-US/images/phoneScreenshots/auto_screen.png&#34; width=&#34;200&#34;&gt; &#xA; &lt;img label=&#34;Config&#34; src=&#34;https://raw.githubusercontent.com/zaneschepke/wgtunnel/main/fastlane/metadata/android/en-US/images/phoneScreenshots/config_screen.png&#34; width=&#34;200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;div style=&#34;text-align: left;&#34;&gt; &#xA; &lt;h2&gt;Features&lt;/h2&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Add tunnels via .conf file, zip, manual entry, clipboard, or QR code&lt;/li&gt; &#xA;  &lt;li&gt;Auto-tunnel based on Wi-Fi SSID, ethernet, or mobile data&lt;/li&gt; &#xA;  &lt;li&gt;Split tunneling by application with search&lt;/li&gt; &#xA;  &lt;li&gt;Support for kernel and userspace modes&lt;/li&gt; &#xA;  &lt;li&gt;Amnezia support for userspace mode for DPI/censorship protection&lt;/li&gt; &#xA;  &lt;li&gt;Pre/Post Up/Down scripts support for all modes on a rooted device&lt;/li&gt; &#xA;  &lt;li&gt;Always-On VPN support&lt;/li&gt; &#xA;  &lt;li&gt;Export tunnels to zip&lt;/li&gt; &#xA;  &lt;li&gt;Quick tile support for tunnel toggling, auto-tunneling&lt;/li&gt; &#xA;  &lt;li&gt;Shortcuts support for tunnel toggling, auto-tunneling&lt;/li&gt; &#xA;  &lt;li&gt;Intent automation support for all tunnels&lt;/li&gt; &#xA;  &lt;li&gt;In app VPN kill switch with LAN bypass&lt;/li&gt; &#xA;  &lt;li&gt;Automatic auto-tunneling service and/or tunnel restart after reboot or app update&lt;/li&gt; &#xA;  &lt;li&gt;Battery preservation measures&lt;/li&gt; &#xA;  &lt;li&gt;Restart tunnel on ping failure&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA; &lt;h2&gt;Building&lt;/h2&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git clone https://github.com/zaneschepke/wgtunnel&#xA;cd wgtunnel&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./gradlew assembleDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;h2&gt;Translation&lt;/h2&gt; &#xA; &lt;p&gt;This app is using &lt;a href=&#34;https://weblate.org&#34;&gt;Weblate&lt;/a&gt; to assist with translations.&lt;/p&gt; &#xA; &lt;p&gt;Help translate WG Tunnel into your language at &lt;a href=&#34;https://hosted.weblate.org/engage/wg-tunnel/&#34;&gt;Hosted Weblate&lt;/a&gt;.&lt;br&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/wg-tunnel/&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/wg-tunnel/-/multi-auto.svg?sanitize=true&#34; alt=&#34;Translation status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA; &lt;h2&gt;Contributing&lt;/h2&gt; &#xA; &lt;p&gt;Any contributions in the form of feedback, issues, code, or translations are welcome and much appreciated!&lt;/p&gt; &#xA; &lt;p&gt;Please read the &lt;a href=&#34;https://github.com/zaneschepke/wgtunnel?tab=coc-ov-file#contributor-code-of-conduct&#34;&gt;code of conduct&lt;/a&gt; before contributing.&lt;/p&gt; &#xA;&lt;/div&gt;</summary>
  </entry>
</feed>