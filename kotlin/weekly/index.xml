<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-01-22T01:56:28Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Kotlin/kotlinx.serialization</title>
    <updated>2023-01-22T01:56:28Z</updated>
    <id>tag:github.com,2023-01-22:/Kotlin/kotlinx.serialization</id>
    <link href="https://github.com/Kotlin/kotlinx.serialization" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Kotlin multiplatform / multi-format serialization&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kotlin multiplatform / multi-format reflectionless serialization&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kotlinlang.org/docs/components-stability.html&#34;&gt;&lt;img src=&#34;https://kotl.in/badges/stable.svg?sanitize=true&#34; alt=&#34;Kotlin Stable&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;https://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;JetBrains official project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://teamcity.jetbrains.com/viewType.html?buildTypeId=KotlinTools_KotlinxSerialization_Ko&amp;amp;guest=1&#34;&gt;&lt;img src=&#34;https://img.shields.io/teamcity/http/teamcity.jetbrains.com/s/KotlinTools_KotlinxSerialization_Ko.svg?sanitize=true&#34; alt=&#34;TeamCity build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-1.7.20-blue.svg?logo=kotlin&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/artifact/org.jetbrains.kotlinx/kotlinx-serialization-core/1.4.1/pom&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/org.jetbrains.kotlinx/kotlinx-serialization-core/1.4.1&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.org/api/kotlinx.serialization/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/API_reference-KDoc-blue&#34; alt=&#34;KDoc link&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://kotlinlang.slack.com/messages/serialization/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/chat-slack-blue.svg?logo=slack&#34; alt=&#34;Slack channel&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Kotlin serialization consists of a compiler plugin, that generates visitor code for serializable classes, runtime library with core serialization API and support libraries with various serialization formats.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports Kotlin classes marked as &lt;code&gt;@Serializable&lt;/code&gt; and standard collections.&lt;/li&gt; &#xA; &lt;li&gt;Provides &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/formats/README.md#JSON&#34;&gt;JSON&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/formats/README.md#ProtoBuf&#34;&gt;Protobuf&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/formats/README.md#CBOR&#34;&gt;CBOR&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/formats/README.md#HOCON&#34;&gt;Hocon&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/formats/README.md#properties&#34;&gt;Properties&lt;/a&gt; formats.&lt;/li&gt; &#xA; &lt;li&gt;Complete multiplatform support: JVM, JS and Native.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Table of contents&lt;/h2&gt; &#xA;&lt;!-- TOC --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#introduction-and-references&#34;&gt;Introduction and references&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#setup&#34;&gt;Setup&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#gradle&#34;&gt;Gradle&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#using-the-plugins-block&#34;&gt;Using the &lt;code&gt;plugins&lt;/code&gt; block&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#using-apply-plugin-the-old-way&#34;&gt;Using &lt;code&gt;apply plugin&lt;/code&gt; (the old way)&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#dependency-on-the-json-library&#34;&gt;Dependency on the JSON library&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#android&#34;&gt;Android&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#multiplatform-common-js-native&#34;&gt;Multiplatform (Common, JS, Native)&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#maven&#34;&gt;Maven&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/#bazel&#34;&gt;Bazel&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;!-- END --&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Additional links&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/docs/serialization-guide.md&#34;&gt;Kotlin Serialization Guide&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/api/kotlinx.serialization/&#34;&gt;Full API reference&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Introduction and references&lt;/h2&gt; &#xA;&lt;p&gt;Here is a small example.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import kotlinx.serialization.*&#xA;import kotlinx.serialization.json.*&#xA;&#xA;@Serializable &#xA;data class Project(val name: String, val language: String)&#xA;&#xA;fun main() {&#xA;    // Serializing objects&#xA;    val data = Project(&#34;kotlinx.serialization&#34;, &#34;Kotlin&#34;)&#xA;    val string = Json.encodeToString(data)  &#xA;    println(string) // {&#34;name&#34;:&#34;kotlinx.serialization&#34;,&#34;language&#34;:&#34;Kotlin&#34;} &#xA;    // Deserializing back into objects&#xA;    val obj = Json.decodeFromString&amp;lt;Project&amp;gt;(string)&#xA;    println(obj) // Project(name=kotlinx.serialization, language=Kotlin)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You can get the full code &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/guide/example/example-readme-01.kt&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;!-- TEST_NAME ReadmeTest --&gt; &#xA;&lt;!-- TEST &#xA;{&#34;name&#34;:&#34;kotlinx.serialization&#34;,&#34;language&#34;:&#34;Kotlin&#34;}&#xA;Project(name=kotlinx.serialization, language=Kotlin)&#xA;--&gt; &#xA;&lt;p&gt;&lt;strong&gt;Read the &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx.serialization/master/docs/serialization-guide.md&#34;&gt;Kotlin Serialization Guide&lt;/a&gt; for all details.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You can find auto-generated documentation website on &lt;a href=&#34;https://kotlinlang.org/api/kotlinx.serialization/&#34;&gt;kotlinlang.org&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Kotlin serialization plugin is shipped with the Kotlin compiler distribution, and the IDEA plugin is bundled into the Kotlin plugin.&lt;/p&gt; &#xA;&lt;p&gt;Using Kotlin Serialization requires Kotlin compiler &lt;code&gt;1.4.0&lt;/code&gt; or higher. Make sure you have the corresponding Kotlin plugin installed in the IDE, no additional plugins for IDE are required.&lt;/p&gt; &#xA;&lt;h3&gt;Gradle&lt;/h3&gt; &#xA;&lt;h4&gt;Using the &lt;code&gt;plugins&lt;/code&gt; block&lt;/h4&gt; &#xA;&lt;p&gt;You can set up the serialization plugin with the Kotlin plugin using &lt;a href=&#34;https://docs.gradle.org/current/userguide/plugins.html#sec:plugins_block&#34;&gt;Gradle plugins DSL&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Kotlin DSL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;    kotlin(&#34;jvm&#34;) version &#34;1.7.20&#34; // or kotlin(&#34;multiplatform&#34;) or any other kotlin plugin&#xA;    kotlin(&#34;plugin.serialization&#34;) version &#34;1.7.20&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Groovy DSL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;plugins {&#xA;    id &#39;org.jetbrains.kotlin.multiplatform&#39; version &#39;1.7.20&#39;&#xA;    id &#39;org.jetbrains.kotlin.plugin.serialization&#39; version &#39;1.7.20&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Kotlin versions before 1.4.0 are not supported by the stable release of Kotlin serialization&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h4&gt;Using &lt;code&gt;apply plugin&lt;/code&gt; (the old way)&lt;/h4&gt; &#xA;&lt;p&gt;First, you have to add the serialization plugin to your classpath as the other &lt;a href=&#34;https://kotlinlang.org/docs/reference/compiler-plugins.html&#34;&gt;compiler plugins&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;p&gt;Kotlin DSL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;buildscript {&#xA;    repositories { mavenCentral() }&#xA;&#xA;    dependencies {&#xA;        val kotlinVersion = &#34;1.7.20&#34;&#xA;        classpath(kotlin(&#34;gradle-plugin&#34;, version = kotlinVersion))&#xA;        classpath(kotlin(&#34;serialization&#34;, version = kotlinVersion))&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Groovy DSL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;buildscript {&#xA;    ext.kotlin_version = &#39;1.7.20&#39;&#xA;    repositories { mavenCentral() }&#xA;&#xA;    dependencies {&#xA;        classpath &#34;org.jetbrains.kotlin:kotlin-serialization:$kotlin_version&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then you can &lt;code&gt;apply plugin&lt;/code&gt; (example in Groovy):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;apply plugin: &#39;kotlin&#39; // or &#39;kotlin-multiplatform&#39; for multiplatform projects&#xA;apply plugin: &#39;kotlinx-serialization&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Dependency on the JSON library&lt;/h4&gt; &#xA;&lt;p&gt;After setting up the plugin one way or another, you have to add a dependency on the serialization library. Note that while the plugin has version the same as the compiler one, runtime library has different coordinates, repository and versioning.&lt;/p&gt; &#xA;&lt;p&gt;Kotlin DSL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;repositories {&#xA;    mavenCentral()&#xA;}&#xA;&#xA;dependencies {&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Groovy DSL:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;repositories {&#xA;    mavenCentral()&#xA;}&#xA;&#xA;dependencies {&#xA;    implementation &#34;org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;We also provide &lt;code&gt;kotlinx-serialization-core&lt;/code&gt; artifact that contains all serialization API but does not have bundled serialization format with it&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Android&lt;/h3&gt; &#xA;&lt;p&gt;The library works on Android, but, if you&#39;re using ProGuard, you need to add rules to your &lt;code&gt;proguard-rules.pro&lt;/code&gt; configuration to cover all classes that are serialized at runtime.&lt;/p&gt; &#xA;&lt;p&gt;The following configuration keeps serializers for &lt;em&gt;all&lt;/em&gt; serializable classes that are retained after shrinking. Uncomment and modify the last section in case you&#39;re serializing classes with named companion objects.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-proguard&#34;&gt;# Keep `Companion` object fields of serializable classes.&#xA;# This avoids serializer lookup through `getDeclaredClasses` as done for named companion objects.&#xA;-if @kotlinx.serialization.Serializable class **&#xA;-keepclassmembers class &amp;lt;1&amp;gt; {&#xA;    static &amp;lt;1&amp;gt;$Companion Companion;&#xA;}&#xA;&#xA;# Keep `serializer()` on companion objects (both default and named) of serializable classes.&#xA;-if @kotlinx.serialization.Serializable class ** {&#xA;    static **$* *;&#xA;}&#xA;-keepclassmembers class &amp;lt;2&amp;gt;$&amp;lt;3&amp;gt; {&#xA;    kotlinx.serialization.KSerializer serializer(...);&#xA;}&#xA;&#xA;# Keep `INSTANCE.serializer()` of serializable objects.&#xA;-if @kotlinx.serialization.Serializable class ** {&#xA;    public static ** INSTANCE;&#xA;}&#xA;-keepclassmembers class &amp;lt;1&amp;gt; {&#xA;    public static &amp;lt;1&amp;gt; INSTANCE;&#xA;    kotlinx.serialization.KSerializer serializer(...);&#xA;}&#xA;&#xA;# @Serializable and @Polymorphic are used at runtime for polymorphic serialization.&#xA;-keepattributes RuntimeVisibleAnnotations,AnnotationDefault&#xA;&#xA;# Serializer for classes with named companion objects are retrieved using `getDeclaredClasses`.&#xA;# If you have any, uncomment and replace classes with those containing named companion objects.&#xA;#-keepattributes InnerClasses # Needed for `getDeclaredClasses`.&#xA;#-if @kotlinx.serialization.Serializable class&#xA;#com.example.myapplication.HasNamedCompanion, # &amp;lt;-- List serializable classes with named companions.&#xA;#com.example.myapplication.HasNamedCompanion2&#xA;#{&#xA;#    static **$* *;&#xA;#}&#xA;#-keepnames class &amp;lt;1&amp;gt;$$serializer { # -keepnames suffices; class is kept when serializer() is kept.&#xA;#    static &amp;lt;1&amp;gt;$$serializer INSTANCE;&#xA;#}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In case you want to exclude serializable classes that are used, but never serialized at runtime, you will need to write custom rules with narrower &lt;a href=&#34;https://www.guardsquare.com/manual/configuration/usage&#34;&gt;class specifications&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Example of custom rules&lt;/summary&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-proguard&#34;&gt;-keepattributes RuntimeVisibleAnnotations,AnnotationDefault&#xA;&#xA;# kotlinx-serialization-json specific. Add this if you have java.lang.NoClassDefFoundError kotlinx.serialization.json.JsonObjectSerializer&#xA;-keepclassmembers class kotlinx.serialization.json.** {&#xA;    *** Companion;&#xA;}&#xA;-keepclasseswithmembers class kotlinx.serialization.json.** {&#xA;    kotlinx.serialization.KSerializer serializer(...);&#xA;}&#xA;&#xA;# Application rules&#xA;&#xA;# Change here com.yourcompany.yourpackage&#xA;-keepclassmembers @kotlinx.serialization.Serializable class com.yourcompany.yourpackage.** {&#xA;    # lookup for plugin generated serializable classes&#xA;    *** Companion;&#xA;    # lookup for serializable objects&#xA;    *** INSTANCE;&#xA;    kotlinx.serialization.KSerializer serializer(...);&#xA;}&#xA;# lookup for plugin generated serializable classes&#xA;-if @kotlinx.serialization.Serializable class com.yourcompany.yourpackage.**&#xA;-keepclassmembers class com.yourcompany.yourpackage.&amp;lt;1&amp;gt;$Companion {&#xA;    kotlinx.serialization.KSerializer serializer(...);&#xA;}&#xA;&#xA;# Serialization supports named companions but for such classes it is necessary to add an additional rule.&#xA;# This rule keeps serializer and serializable class from obfuscation. Therefore, it is recommended not to use wildcards in it, but to write rules for each such class.&#xA;-keepattributes InnerClasses # Needed for `getDeclaredClasses`.&#xA;-keep class com.yourcompany.yourpackage.SerializableClassWithNamedCompanion$$serializer {&#xA;    *** INSTANCE;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Multiplatform (Common, JS, Native)&lt;/h3&gt; &#xA;&lt;p&gt;Most of the modules are also available for Kotlin/JS and Kotlin/Native. You can add dependency to the required module right to the common source set:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;commonMain {&#xA;    dependencies {&#xA;        // Works as common dependency as well as the platform one&#xA;        implementation &#34;org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_version&#34;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The same artifact coordinates can be used to depend on platform-specific artifact in platform-specific source-set.&lt;/p&gt; &#xA;&lt;h3&gt;Maven&lt;/h3&gt; &#xA;&lt;p&gt;Ensure the proper version of Kotlin and serialization version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;properties&amp;gt;&#xA;    &amp;lt;kotlin.version&amp;gt;1.7.20&amp;lt;/kotlin.version&amp;gt;&#xA;    &amp;lt;serialization.version&amp;gt;1.4.1&amp;lt;/serialization.version&amp;gt;&#xA;&amp;lt;/properties&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add serialization plugin to Kotlin compiler plugin:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;build&amp;gt;&#xA;    &amp;lt;plugins&amp;gt;&#xA;        &amp;lt;plugin&amp;gt;&#xA;            &amp;lt;groupId&amp;gt;org.jetbrains.kotlin&amp;lt;/groupId&amp;gt;&#xA;            &amp;lt;artifactId&amp;gt;kotlin-maven-plugin&amp;lt;/artifactId&amp;gt;&#xA;            &amp;lt;version&amp;gt;${kotlin.version}&amp;lt;/version&amp;gt;&#xA;            &amp;lt;executions&amp;gt;&#xA;                &amp;lt;execution&amp;gt;&#xA;                    &amp;lt;id&amp;gt;compile&amp;lt;/id&amp;gt;&#xA;                    &amp;lt;phase&amp;gt;compile&amp;lt;/phase&amp;gt;&#xA;                    &amp;lt;goals&amp;gt;&#xA;                        &amp;lt;goal&amp;gt;compile&amp;lt;/goal&amp;gt;&#xA;                    &amp;lt;/goals&amp;gt;&#xA;                &amp;lt;/execution&amp;gt;&#xA;            &amp;lt;/executions&amp;gt;&#xA;            &amp;lt;configuration&amp;gt;&#xA;                &amp;lt;compilerPlugins&amp;gt;&#xA;                    &amp;lt;plugin&amp;gt;kotlinx-serialization&amp;lt;/plugin&amp;gt;&#xA;                &amp;lt;/compilerPlugins&amp;gt;&#xA;            &amp;lt;/configuration&amp;gt;&#xA;            &amp;lt;dependencies&amp;gt;&#xA;                &amp;lt;dependency&amp;gt;&#xA;                    &amp;lt;groupId&amp;gt;org.jetbrains.kotlin&amp;lt;/groupId&amp;gt;&#xA;                    &amp;lt;artifactId&amp;gt;kotlin-maven-serialization&amp;lt;/artifactId&amp;gt;&#xA;                    &amp;lt;version&amp;gt;${kotlin.version}&amp;lt;/version&amp;gt;&#xA;                &amp;lt;/dependency&amp;gt;&#xA;            &amp;lt;/dependencies&amp;gt;&#xA;        &amp;lt;/plugin&amp;gt;&#xA;    &amp;lt;/plugins&amp;gt;&#xA;&amp;lt;/build&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Add dependency on serialization runtime library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;dependency&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;org.jetbrains.kotlinx&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;kotlinx-serialization-json&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;${serialization.version}&amp;lt;/version&amp;gt;&#xA;&amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Bazel&lt;/h3&gt; &#xA;&lt;p&gt;To setup the Kotlin compiler plugin for Bazel, follow &lt;a href=&#34;https://github.com/bazelbuild/rules_kotlin/tree/master/examples/plugin/src/serialization&#34;&gt;the example&lt;/a&gt; from the &lt;code&gt;rules_kotlin&lt;/code&gt; repository.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>celzero/rethink-app</title>
    <updated>2023-01-22T01:56:28Z</updated>
    <id>tag:github.com,2023-01-22:/celzero/rethink-app</id>
    <link href="https://github.com/celzero/rethink-app" rel="alternate"></link>
    <summary type="html">&lt;p&gt;DNS over HTTPS / DNS over Tor / DNSCrypt client, firewall, and connection tracker for Android.&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Rethink DNS + Firewall for Android&lt;/h2&gt; &#xA;&lt;p&gt;An &lt;a href=&#34;https://github.com/evilsocket/opensnitch&#34;&gt;OpenSnitch&lt;/a&gt;-inspired firewall and network monitor + a &lt;a href=&#34;https://github.com/pi-hole/pi-hole&#34;&gt;pi-hole&lt;/a&gt;-inspired DNS over HTTPS client with blocklists.&lt;/p&gt; &#xA;&lt;p&gt;In other words, Rethink DNS + Firewall has two primary modes, DNS and Firewall. The DNS mode routes all DNS traffic generated by apps to &lt;em&gt;any&lt;/em&gt; user chosen DNS-over-HTTPS or DNSCrypt resolver. The Firewall mode lets the user deny internet-access to entire applications based on events like screen-on / screen-off, app-foreground / app-background, unmetered-connection / metered-connection; or based on play-store defined categories like Social, Games, Utility, Productivity; or additionally, based on user-defined denylists.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/com.celzero.bravedns/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;70&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.celzero.bravedns&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;Get it on Google Play&#34; height=&#34;70&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Firewall&lt;/h3&gt; &#xA;&lt;p&gt;The firewall doesn&#39;t really care about the connections per se rather what&#39;s making those connections. This is different from the traditional firewalls but in-line with &lt;a href=&#34;https://www.obdev.at/products/littlesnitch/index.html&#34;&gt;Little Snitch&lt;/a&gt;, &lt;a href=&#34;https://objective-see.com/products/lulu.html&#34;&gt;LuLu&lt;/a&gt;, &lt;a href=&#34;https://glasswire.com/&#34;&gt;Glasswire&lt;/a&gt; and others.&lt;/p&gt; &#xA;&lt;p&gt;Currently, per-app connection mapping is implemented by capturing &lt;code&gt;udp&lt;/code&gt; and &lt;code&gt;tcp&lt;/code&gt; connections managed by &lt;a href=&#34;https://github.com/celzero/firestack&#34;&gt;&lt;code&gt;firestack&lt;/code&gt;&lt;/a&gt; (written in golang) and asking &lt;a href=&#34;https://developer.android.com/about/versions/10/privacy/changes#proc-net-filesystem&#34;&gt;ConnectivityService for the owner&lt;/a&gt;, an API available only on Android 10 or higher. &lt;code&gt;procfs&lt;/code&gt; (&lt;code&gt;/proc/net/tcp&lt;/code&gt; and &lt;code&gt;/proc/net/udp&lt;/code&gt;) is read on-demand to track per-app connections like &lt;a href=&#34;https://github.com/M66B/NetGuard/&#34;&gt;NetGuard&lt;/a&gt; or OpenSnitch do, on Android 9 and lower versions.&lt;/p&gt; &#xA;&lt;h3&gt;Network Monitor&lt;/h3&gt; &#xA;&lt;p&gt;A network monitor is a per-app report-card of sorts on when connections were made, how many were made, and to where. Tracking TCP has turned out to be so far straight-forward. DNS packets are trickier to track, and so a rough heuristic is used for now, which may not hold good in all cases.&lt;/p&gt; &#xA;&lt;h3&gt;DNS over HTTPS client&lt;/h3&gt; &#xA;&lt;p&gt;Almost all of the network related code (&lt;code&gt;firestack&lt;/code&gt;), including DNS over HTTPS split-tunnel, is a very minimal fork of &lt;a href=&#34;https://github.com/Jigsaw-Code/outline-go-tun2socks&#34;&gt;Jigsaw-Code/outline-go-tun2socks&lt;/a&gt; written in golang. A majority of work is on the UI with other parts remaining same as on &lt;a href=&#34;https://github.com/Jigsaw-Code/Intra/&#34;&gt;Jigsaw-Code/Intra&lt;/a&gt;. A split-tunnel traps requests sent to the VPN&#39;s DNS endpoint and relays it to a DNS over HTTPS endpoint of the user&#39;s choosing, logging the end-to-end latency, time of request, the dns request query itself and its answer.&lt;/p&gt; &#xA;&lt;h3&gt;The Rethink DNS Resolver&lt;/h3&gt; &#xA;&lt;p&gt;A malware and ad-blocking DNS over HTTPS resolver at &lt;code&gt;https://sky.rethinkdns.com/1:IAAgAA==&lt;/code&gt; (deployed to 300+ locations world-wide via Cloudflare Workers) is the default DNS endpoint on the app, though the user is free to change that. A configurable DNS resolver that lets users add or remove denylists and allowlists, add rewrites, analyse DNS requests is launching late 2022. Right now, a free-to-use DNS over HTTPS endpoint with custom blocklists can be setup here: &lt;a href=&#34;https://rethinkdns.com/configure&#34;&gt;rethinkdns.com/configure&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The resolver is deployed to &lt;a href=&#34;https://fly.io/&#34;&gt;Fly.io&lt;/a&gt; at &lt;code&gt;max.rethinkdns.com&lt;/code&gt; and &lt;a href=&#34;https://deno.com/deploy&#34;&gt;Deno Deploy&lt;/a&gt; at &lt;code&gt;rdns.deno.dev&lt;/code&gt; too, apart from the default deployment on &lt;a href=&#34;https://workers.dev&#34;&gt;Cloudflare Workers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The resolver is open source software: &lt;a href=&#34;https://github.com/serverless-dns/serverless-dns&#34;&gt;serverless-dns&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The telegram community is super active and full of crypto-bros. Kidding. We are generally a welcoming bunch. Feel free to get in touch: &lt;a href=&#34;https://t.me/rethinkdns&#34;&gt;t.me/rethinkdns&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Or, if you prefer &lt;a href=&#34;https://matrix.to/#/!jrTSpJiEkFNNBMhSaE:matrix.org&#34;&gt;Matrix&lt;/a&gt; (which is bridged to Telegram).&lt;/li&gt; &#xA; &lt;li&gt;Or, email us: &lt;a href=&#34;mailto:hello@celzero.com&#34;&gt;hello@celzero.com&lt;/a&gt; (we read all emails immediately and reply once we fix the issues being reported).&lt;/li&gt; &#xA; &lt;li&gt;We&#39;re also kind of active on the bird app, mostly nerd-sniping other engs or shit-posting about our tech stack: &lt;a href=&#34;https://twitter.com/rethinkdns&#34;&gt;twitter/rethinkdns&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Translation&lt;/h3&gt; &#xA;&lt;p&gt;Help translate Rethink DNS + Firewall on &lt;a href=&#34;https://weblate.org/&#34;&gt;Weblate&lt;/a&gt;:&lt;br&gt; &lt;a href=&#34;https://hosted.weblate.org/engage/rethink-dns-firewall&#34;&gt;&lt;img src=&#34;https://hosted.weblate.org/widgets/rethink-dns-firewall/-/287x66-black.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;What Rethink DNS + Firewall is not&lt;/h3&gt; &#xA;&lt;p&gt;Rethink is not an anonymity tool: It helps users tackle unabated censorship and surveillance but doesn&#39;t lay claim to protecting a user&#39;s identity at all times, if ever.&lt;/p&gt; &#xA;&lt;p&gt;Rethink doesn&#39;t aim to be a feature-rich traditional firewall: It is more in-line with &lt;a href=&#34;https://www.obdev.at/products/littlesnitch/index.html&#34;&gt;Little Snitch&lt;/a&gt; than IP tables, say.&lt;/p&gt; &#xA;&lt;p&gt;Rethink is not an anti-virus: Rethink may stop users from phishing attacks, malware, scareware websites through its DNS-based blocklists, but it doesn&#39;t actively mitigate threats or even look for them or act on them, otherwise.&lt;/p&gt; &#xA;&lt;h3&gt;What Rethink DNS + Firewall aspires to be&lt;/h3&gt; &#xA;&lt;p&gt;To turn Android devices into user-agents: Something that users can control as they please without requiring root-access. A big part of this, for an always-on, always-connected devices, is capturing network traffic and reporting it in a way that makes sense to the end-users who can then take a series of actions to limit their exposure but not necessarily eliminate it. Take DNS for example-- for most if not all connections, apps send out a DNS request first, and by tracking just those one can glean a lot of intelligence about what&#39;s happening with the phone and which app&#39;s responsible.&lt;/p&gt; &#xA;&lt;p&gt;To deliver the promise of open-internet for all: With the inevitable ESNI standardization and the imminent adoption of DNS over HTTPS and DNS over TLS across operating systems, we&#39;re that much closer to an open internet. Of course, &lt;em&gt;Deep Packet Inspection&lt;/em&gt; remains a credible threat that can&#39;t be mitigated with this, but it is one example of delivering maximum impact (circumvent internet censorship in most countries) with minimal effort (not requiring use of a VPN or access via IPFS, for example). Rethink would continue to make these technologies accessible in the most simplest way possible, especially the ones that get 90% of the way there with 10% effort.&lt;/p&gt; &#xA;&lt;h2&gt;Development&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Feel free to fork and send along a pull request for any reproducible bug fixes.&lt;/li&gt; &#xA; &lt;li&gt;The codebase is raw and is lacking documentation and comprehensive tests. If you need help, feel free to create a Wikipage to highlight the pain with building, testing, writing, committing code.&lt;/li&gt; &#xA; &lt;li&gt;Write descriptive commit messages that explain concisely the changes made.&lt;/li&gt; &#xA; &lt;li&gt;Each commit must reference an open issue on the project. This is to make sure there isn&#39;t duplicated effort more than anything else.&lt;/li&gt; &#xA; &lt;li&gt;If you plan to work on a feature, please create a github issue on the project first to kickstart the discussion before committing to doing any work. Again, this is to avoid duplicate work more than anything else.&lt;/li&gt; &#xA; &lt;li&gt;Prod releases are usually once every 2 months, while betas are released bi-weekly.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Tenets (unless you know better ones)&lt;/h2&gt; &#xA;&lt;p&gt;We aren&#39;t there yet, may never will be but these are some tenets for the project for the foreseeable future.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Make it right, make it secure, make it resilient, make it fast. In that order.&lt;/li&gt; &#xA; &lt;li&gt;Easy to use, no-root, no-gimmicks features that are anti-censorship and anti-surveillance. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Easy to use: Any of the 3B+ Android users must be able to use it. Think CleanMaster / Instagram levels of ease-of-use.&lt;/li&gt; &#xA;   &lt;li&gt;no-root: Shouldn&#39;t require root-access for any functionality added to it.&lt;/li&gt; &#xA;   &lt;li&gt;no-gimmicks: Misleading material bordering on scareware, for example.&lt;/li&gt; &#xA;   &lt;li&gt;anti-censorship: Features focused on helping bring an open internet to everyone, preferably in the most efficient way possible (both monetarily and technically).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Anti-surveillance: As above, but features that further limit (may not necessarily eliminate) surveillance by apps.&lt;/li&gt; &#xA; &lt;li&gt;Incremental changes in balance with newer features. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;For example, work on nagging UI issues or OEM specific bugs, must be taken up on equal weight to newer features, and a release must probably establish a good balance between the two. However; working on only incremental changes for a release is fine.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Opinionated. Chip-away complexity. Do not expect users to require a PhD in Computer Science to use the app. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;No duplicate functionality.&lt;/li&gt; &#xA;   &lt;li&gt;A concerted effort to not provide too many tunable knobs and settings. To err on the side of easy over simple.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Ignore all tenets. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Common sense always takes over when tenets get in the way.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Must be distributable on the PlayStore, at least some toned down version of it. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;This unfortunately means on-device blocklists aren&#39;t possible; however, &lt;a href=&#34;https://www.cloudflare.com/teams-gateway/&#34;&gt;Cloudflare Gateway&lt;/a&gt;-esque cloud-based per-user blocklists get us the same functionality.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Practice what you preach: Be obsessively private and secure.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Backstory&lt;/h2&gt; &#xA;&lt;p&gt;Internet censorship (sometimes ISP-enforced and often times government-enforced), unabated dragnet surveillance (by pretty much every company and app) stirred us upon this path. The three of us university classmates, &lt;a href=&#34;https://www.linkedin.com/in/hussain-mohammed-2525a626/&#34;&gt;Mohammed&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/murtaza-aliakbar/&#34;&gt;Murtaza&lt;/a&gt;, &lt;a href=&#34;https://www.linkedin.com/in/santhosh-ponnusamy-2b781244/&#34;&gt;Santhosh&lt;/a&gt; got together in late 2019 in the sleepy town of Coimbatore, India to do something about it. Our main gripe was there were all these wonderful tools that people could use but couldn&#39;t, either due to cost or due to inability to grok Computer-specific jargon. A lot has happened since we started and a lot has changed but our focus has always been on Android and its 2B+ unsuspecting users. The current idea has been in the works for since May 2020, with the pandemic derailing a bit of progress, and a bit of snafu with abandoning our previous version in favour of the current fork, which we aren&#39;t proud of yet, but it is a start. All&#39;s good now that we&#39;ve won a grant from the &lt;a href=&#34;https://builders.mozilla.community/&#34;&gt;Mozilla Builders MVP program&lt;/a&gt; to go ahead and build this thing that we wanted to... do so faster... and not simply sleep our way through the execution. I hope you&#39;re excited but not as much as us that you quit your jobs for this like we did.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>moezbhatti/qksms</title>
    <updated>2023-01-22T01:56:28Z</updated>
    <id>tag:github.com,2023-01-22:/moezbhatti/qksms</id>
    <link href="https://github.com/moezbhatti/qksms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The most beautiful SMS messenger for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/4358785/39079306-a5a409b6-44e5-11e8-8589-b4acd63b636e.jpg&#34; alt=&#34;QKSMS&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;QKSMS&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/gh/moezbhatti/qksms/tree/master&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/moezbhatti/qksms/tree/master.svg?style=svg&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crowdin.com/project/qksms&#34;&gt;&lt;img src=&#34;https://badges.crowdin.net/qksms/localized.svg?sanitize=true&#34; alt=&#34;Crowdin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://liberapay.com/moezbhatti/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-liberapay-yellow.svg?sanitize=true&#34; alt=&#34;Liberapay donation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qklabs.com/donate-btc/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-bitcoin-yellow.svg?sanitize=true&#34; alt=&#34;Bitcoin donation&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://qklabs.com/donate&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/donate-paypal-yellow.svg?sanitize=true&#34; alt=&#34;PayPal donation&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;QKSMS is an open source replacement to the &lt;a href=&#34;https://github.com/android/platform_packages_apps_mms&#34;&gt;stock messaging app&lt;/a&gt; on Android. It is currently available on the &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.moez.QKSMS&#34;&gt;Google Play Store&lt;/a&gt; and on &lt;a href=&#34;https://f-droid.org/repository/browse/?fdid=com.moez.QKSMS&#34;&gt;F-Droid&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.moez.QKSMS&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png&#34; alt=&#34;Download on Google Play&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;a href=&#34;https://f-droid.org/repository/browse/?fdid=com.moez.QKSMS&#34;&gt;&lt;img src=&#34;https://f-droid.org/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;100&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reporting bugs&lt;/h2&gt; &#xA;&lt;p&gt;A great bug report contains a description of the problem and steps to reproduce the problem. We need to know what we&#39;re looking for and where to look for it.&lt;/p&gt; &#xA;&lt;p&gt;When reporting a bug, please make sure to provide the following information:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Steps to reproduce the issue&lt;/li&gt; &#xA; &lt;li&gt;QKSMS version&lt;/li&gt; &#xA; &lt;li&gt;Device / OS information&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translations&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;d like to add translations to QKSMS, please join the project on &lt;a href=&#34;https://crowdin.com/project/qksms&#34;&gt;Crowdin&lt;/a&gt;. Translations that are committed directly to source files will not be accepted.&lt;/p&gt; &#xA;&lt;h2&gt;Thank you&lt;/h2&gt; &#xA;&lt;p&gt;A special thank you to Jake (&lt;a href=&#34;https://github.com/klinker41&#34;&gt;@klinker41&lt;/a&gt;) and Luke Klinker (&lt;a href=&#34;https://github.com/klinker24&#34;&gt;@klinker24&lt;/a&gt;) for their work on &lt;a href=&#34;https://github.com/klinker41/android-smsmms&#34;&gt;android-smsmms&lt;/a&gt;, which has been an unspeakably large help in implementing MMS into QKSMS.&lt;/p&gt; &#xA;&lt;h2&gt;Contact&lt;/h2&gt; &#xA;&lt;p&gt;QKSMS is developed and maintained by &lt;a href=&#34;https://github.com/moezbhatti&#34;&gt;Moez Bhatti&lt;/a&gt;. Feel free to reach out to &lt;a href=&#34;mailto:moez@qklabs.com&#34;&gt;moez@qklabs.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;QKSMS is released under the &lt;strong&gt;The GNU General Public License v3.0 (GPLv3)&lt;/strong&gt;, which can be found in the &lt;code&gt;LICENSE&lt;/code&gt; file in the root of this project.&lt;/p&gt;</summary>
  </entry>
</feed>