<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-06-09T01:42:01Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>Kotlin/kotlinx-rpc</title>
    <updated>2024-06-09T01:42:01Z</updated>
    <id>tag:github.com,2024-06-09:/Kotlin/kotlinx-rpc</id>
    <link href="https://github.com/Kotlin/kotlinx-rpc" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Add asynchronous RPC services to your multiplatform applications.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;picture&gt; &#xA;  &lt;source media=&#34;(prefers-color-scheme: dark)&#34; srcset=&#34;https://raw.githubusercontent.com/kotlin/kotlinx-rpc/main/.github/images/logo_dark.png&#34;&gt; &#xA;  &lt;img alt=&#34;kotlinx.rpc logo&#34; src=&#34;https://raw.githubusercontent.com/kotlin/kotlinx-rpc/main/.github/images/logo_light.png&#34;&gt; &#xA; &lt;/picture&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://kotlinlang.org/docs/components-stability.html&#34;&gt;&lt;img src=&#34;https://kotl.in/badges/experimental.svg?sanitize=true&#34; alt=&#34;Kotlin Experimental&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub&#34;&gt;&lt;img src=&#34;http://jb.gg/badges/official.svg?sanitize=true&#34; alt=&#34;Official JetBrains project&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://kotlinlang.org&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/kotlin-1.7.0--1.9.24-blue.svg?logo=kotlin&#34; alt=&#34;Kotlin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%20License%202.0-blue.svg?style=flat&#34; alt=&#34;GitHub License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; is a Kotlin library for adding asynchronous Remote Procedure Call (RPC) services to your applications. Build your RPC with already known language constructs and nothing more!&lt;/p&gt; &#xA;&lt;h2&gt;Quick start&lt;/h2&gt; &#xA;&lt;p&gt;First, create your &lt;code&gt;RPC&lt;/code&gt; service and define some methods:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;import kotlinx.rpc.RPC&#xA;&#xA;interface AwesomeService : RPC {&#xA;    suspend fun getNews(city: String): Flow&amp;lt;String&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;In your server code define how to respond by simply implementing the service:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class AwesomeServiceImpl(override val coroutineContext: CoroutineContext) : AwesomeService {&#xA;    override suspend fun getNews(city: String): Flow&amp;lt;String&amp;gt; {&#xA;        return flow { &#xA;            emit(&#34;Today is 23 degrees!&#34;)&#xA;            emit(&#34;Harry Potter is in $city!&#34;)&#xA;            emit(&#34;New dogs cafe has opened doors to all fluffy customers!&#34;)&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Then, choose how do you want your service to communicate. For example, you can use integration with &lt;a href=&#34;https://ktor.io/&#34;&gt;Ktor&lt;/a&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;fun main() {&#xA;    embeddedServer(Netty, 8080) {&#xA;        install(RPC)&#xA;        routing {&#xA;            rpc(&#34;/awesome&#34;) {&#xA;                rpcConfig {&#xA;                    serialization {&#xA;                        json()&#xA;                    }&#xA;                }&#xA;&#xA;                registerService&amp;lt;AwesomeService&amp;gt; { ctx -&amp;gt; AwesomeServiceImpl(ctx) }&#xA;            }&#xA;        }&#xA;    }.start(wait = true)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To connect to the server use the following &lt;a href=&#34;https://ktor.io/docs/create-client.html&#34;&gt;Ktor Client&lt;/a&gt; setup:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val rpcClient = HttpClient { installRPC() }.rpc {&#xA;    url(&#34;ws://localhost:8080/awesome&#34;)&#xA;&#xA;    rpcConfig {&#xA;        serialization {&#xA;            json()&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;streamScoped {&#xA;    rpcClient.withService&amp;lt;AwesomeService&amp;gt;().getNews(&#34;KotlinBurg&#34;).collect { article -&amp;gt;&#xA;        println(article)&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out our &lt;a href=&#34;https://kotlin.github.io/kotlinx-rpc&#34;&gt;getting started guide&lt;/a&gt; for a thorough overview of all components and features.&lt;/p&gt; &#xA;&lt;h2&gt;Configure the project&lt;/h2&gt; &#xA;&lt;h3&gt;Plugin dependencies&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; has the following plugin dependencies:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;The &lt;code&gt;org.jetbrains.kotlinx.rpc.plugin&lt;/code&gt; will set up BOM and code generation for targets in the project.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;org.jetbrains.kotlinx.rpc.platform&lt;/code&gt; will only set up BOM. It is useful when you want to split your app into modules, and some of them will contain service declarations, thus using code generation, while others will only consume them.&lt;/li&gt; &#xA; &lt;li&gt;The &lt;code&gt;com.google.devtools.ksp&lt;/code&gt; is required by the library. Corresponding configurations will be set up automatically by &lt;code&gt;org.jetbrains.kotlinx.rpc.plugin&lt;/code&gt; plugin.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;To use the &lt;code&gt;kotlinx.rpc&lt;/code&gt; Gradle plugins, you need to add the following repositories in the &lt;code&gt;settings.gradle.kts&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;pluginManagement {&#xA;    repositories {&#xA;        maven(url = &#34;https://maven.pkg.jetbrains.space/public/p/krpc/maven&#34;)&#xA;        gradlePluginPortal()&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example of plugins setup in a project&#39;s &lt;code&gt;build.gradle.kts&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// build.gradle.kts&#xA;plugins {&#xA;    kotlin(&#34;jvm&#34;) version &#34;1.9.24&#34;&#xA;    kotlin(&#34;plugin.serialization&#34;) version &#34;1.9.24&#34;&#xA;    id(&#34;com.google.devtools.ksp&#34;) version &#34;1.9.24-1.0.20&#34;&#xA;    id(&#34;org.jetbrains.kotlinx.rpc.plugin&#34;) version &#34;0.1.0&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Runtime dependencies&lt;/h3&gt; &#xA;&lt;p&gt;To use &lt;code&gt;kotlinx.rpc&lt;/code&gt; runtime dependencies, you need to add our Space repository to the list of project repositories:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;repositories {&#xA;    maven(&#34;https://maven.pkg.jetbrains.space/public/p/krpc/maven&#34;)&#xA;    mavenCentral() // for other dependencies, e.g. Ktor&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;And now you can add dependencies to your project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;dependencies {&#xA;    // client API&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-runtime-client&#34;)&#xA;    // server API&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-runtime-server&#34;) &#xA;    // serialization module. also, protobuf and cbor are available&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-runtime-serialization-json&#34;) &#xA;&#xA;    // transport implementation for Ktor&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-transport-ktor-client&#34;)&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-transport-ktor-server&#34;)&#xA;&#xA;    // Ktor API&#xA;    implementation(&#34;io.ktor:ktor-client-cio-jvm:$ktor_version&#34;)&#xA;    implementation(&#34;io.ktor:ktor-server-netty-jvm:$ktor_version&#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can see example projects in the &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-rpc/main/samples&#34;&gt;samples&lt;/a&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;Transport&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; is designed to be transport agnostic. That means that the library aims to provide the best RPC experience regardless of how the resulting messages are transferred. That allows for easy integration into existing solutions, such as Ktor, without the need to rewrite code. Just plug-in &lt;code&gt;kotlinx.rpc&lt;/code&gt;, provide it with means to transfer encoded data (or use out-of-the-box integrations) and it will run. With enough time it might even work with &lt;a href=&#34;https://en.wikipedia.org/wiki/IP_over_Avian_Carriers&#34;&gt;avian carriers&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; provides its own transfer protocol called kRPC, which takes responsibility for tracking serializing and handling other complex request operations. When using kRPC you only need to provide a transport or choose from the officially supported ones:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Ktor transport&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides that, one can even provide their own protocol or integration with one to use with services and &lt;code&gt;kotlinx.rpc&lt;/code&gt; API with it. Though possible, it is much more complicated way to use the library and generally not needed. &lt;code&gt;kotlinx.rpc&lt;/code&gt; aims to provide most common protocols integrations as well as the in-house one called kRPC.&lt;br&gt; Integrations in progress:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Integration with &lt;a href=&#34;https://grpc.io/&#34;&gt;gRPC&lt;/a&gt; (in prototype)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Kotlin compatibility&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; heavily relies on Kotlin compiler plugin to be able to generate client service implementations and other needed code. That results in the need to be bound to Kotlin compiler version and the versions of library, so &lt;code&gt;kotlinx.rpc&lt;/code&gt; version may look like this: &lt;code&gt;1.9.10-1.0.0&lt;/code&gt;, where the prefix (&lt;code&gt;1.9.10&lt;/code&gt;) is the Kotlin version and the suffix (&lt;code&gt;1.0.0&lt;/code&gt;) is the &lt;code&gt;kotlinx.rpc&lt;/code&gt; feature (or core) version. To mitigate inconveniences related to the need to update Kotlin version then one wants to have newer version of the library &lt;code&gt;kotlinx.rpc&lt;/code&gt; provides all its feature releases for all stable releases of the 3 last major Kotlin versions. Currently, they are:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;1.7.0, 1.7.10, 1.7.20, 1.7.21, 1.7.22&lt;/li&gt; &#xA; &lt;li&gt;1.8.0, 1.8.10, 1.8.20, 1.8.21, 1.8.22&lt;/li&gt; &#xA; &lt;li&gt;1.9.0, 1.9.10, 1.9.20, 1.9.21, 1.9.22, 1.9.23, 1.9.24&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;That generates resulting versions &lt;code&gt;1.7.0-1.0.0&lt;/code&gt;, &lt;code&gt;1.7.10-1.0.0&lt;/code&gt;, etc. To simplify project configuration, our Gradle plugin sets proper library version automatically using BOM, based on the project&#39;s Kotlin version:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;plugins {&#xA;    kotlin(&#34;jvm&#34;) version &#34;1.9.24&#34;&#xA;    id(&#34;org.jetbrains.kotlinx.rpc.plugin&#34;) version &#34;1.0.0&#34;&#xA;}&#xA;&#xA;dependencies {&#xA;    implementation(&#34;org.jetbrains.kotlinx:kotlinx-rpc-runtime&#34;) // version is 1.9.24-1.0.0 is set by Gradle plugin&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;JetBrains Product&lt;/h2&gt; &#xA;&lt;p&gt;&lt;code&gt;kotlinx.rpc&lt;/code&gt; is an official &lt;a href=&#34;https://jetbrains.com&#34;&gt;JetBrains&lt;/a&gt; product and is primarily developed by the team at JetBrains, with contributions from the community.&lt;/p&gt; &#xA;&lt;h2&gt;Support&lt;/h2&gt; &#xA;&lt;p&gt;Community support is available on the &lt;a href=&#34;https://kotlinlang.slack.com/archives/C072YJ3Q91V&#34;&gt;Kotlin Slack kotlinx-rpc channel&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Reporting Security Vulnerabilities&lt;/h2&gt; &#xA;&lt;p&gt;If you find a security vulnerability in &lt;code&gt;kotlinx.rpc&lt;/code&gt;, we kindly request that you reach out to the JetBrains security team via our &lt;a href=&#34;https://www.jetbrains.com/legal/terms/responsible-disclosure.html&#34;&gt;responsible disclosure process&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;Please see &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-rpc/main/CONTRIBUTING.md&#34;&gt;the contribution guide&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/Kotlin/kotlinx-rpc/main/CODE_OF_CONDUCT.md&#34;&gt;Code of conduct&lt;/a&gt; before contributing.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>Mahmud0808/Iconify</title>
    <updated>2024-06-09T01:42:01Z</updated>
    <id>tag:github.com,2024-06-09:/Mahmud0808/Iconify</id>
    <link href="https://github.com/Mahmud0808/Iconify" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Iconify lets you customize your Android 12+ device easily. Change icons, colors, shapes, and even the notification panel for a personalized look that suits your style.&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Mahmud0808/Iconify/beta/.github/resources/banner.png&#34; width=&#34;100%&#34; alt=&#34;Banner&#34;&gt; &#xA; &lt;h1&gt;v6.8.0 is out!&lt;/h1&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/Mahmud0808/Iconify/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/downloads/Mahmud0808/Iconify/total?color=%233DDC84&amp;amp;logo=android&amp;amp;logoColor=%23fff&amp;amp;style=for-the-badge&#34; alt=&#34;Downloads&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Mahmud0808/Iconify&#34;&gt;&lt;img alt=&#34;Repo Size&#34; src=&#34;https://img.shields.io/github/repo-size/Mahmud0808/Iconify?style=for-the-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Mahmud0808/Iconify/actions&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/actions/workflow/status/Mahmud0808/Iconify/build_debug.yml?branch=beta&amp;amp;label=Debug%20Build&amp;amp;style=for-the-badge&#34; alt=&#34;Debug Build&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://telegram.me/IconifyOfficial&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-5K+-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34; alt=&#34;Telegram&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/com.drdisagree.iconify&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; width=&#34;30%&#34;&gt;&lt;/a&gt; &#xA; &lt;h1&gt;Iconify&lt;/h1&gt; &#xA; &lt;h3&gt;Free and Open-Source Android Customizer Application&lt;/h3&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Iconify is an open-source Android mobile application aimed at providing users with the ability to customize various aspects of their device&#39;s user interface. 📱 &lt;br&gt;&lt;br&gt; Furthermore, the open-source nature of Iconify encourages community contributions and continuous improvement, ensuring a dynamic and evolving user experience. 🤝 &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;br&gt; &#xA; &lt;a href=&#34;https://www.buymeacoffee.com/DrDisagree&#34;&gt;&lt;img src=&#34;https://github.com/Mahmud0808/Iconify/raw/beta/.github/resources/bmc-button.png&#34; width=&#34;30%&#34; alt=&#34;Buy me a coffee&#34;&gt;&lt;/a&gt; &#xA; &lt;br&gt;&#xA; &lt;br&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/Mahmud0808/Iconify/beta/.github/resources/features.png&#34; width=&#34;100%&#34; alt=&#34;Features&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!CAUTION]&lt;/p&gt; &#xA; &lt;p&gt;This app requires Magisk/KernelSU/APatch for root access. Any alternative methods won&#39;t work.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;🛠 Requirements&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Android 12+ Pixel / AOSP based custom ROM&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/topjohnwu/Magisk&#34;&gt;Magisk&lt;/a&gt; (Recommended) / &lt;a href=&#34;https://github.com/tiann/KernelSU&#34;&gt;KernelSU&lt;/a&gt; / &lt;a href=&#34;https://github.com/bmax121/APatch&#34;&gt;APatch&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/LSPosed/LSPosed&#34;&gt;LSPosed&lt;/a&gt; / &lt;a href=&#34;https://github.com/mywalkb/LSPosed_mod&#34;&gt;LSPosed_mod&lt;/a&gt; (Optional)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Decryption Supported Custom Recovery (Just in case)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;👨‍💻 Installation&lt;/h1&gt; &#xA;&lt;h3&gt;Installation for Magisk Users:​&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;p&gt;Download and install the Iconify app.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Open the app, grant root permission and follow the instructions.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Wait for it to finish generating rom specific module.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reboot the device when prompted, profit!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!NOTE]&lt;/p&gt; &#xA; &lt;p&gt;If some or most of the customizations are still not working for Magisk users, you might need to disable &lt;code&gt;Unmount modules&lt;/code&gt; option from magisk manager (if available) and/or enable root permission for SystemUI.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Installation for KernelSU/APatch Users:​&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Flash &lt;a href=&#34;https://github.com/HuskyDG/magic_overlayfs/releases&#34;&gt;Magic Overlayfs&lt;/a&gt; module (to make read-only system read-write)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!IMPORTANT]&lt;/p&gt; &#xA; &lt;p&gt;Remember to edit &lt;em&gt;mode.sh&lt;/em&gt; file inside the module and change these values before flashing:&lt;/p&gt; &#xA; &lt;p&gt;&lt;code&gt;OVERLAY_MODE=1&lt;/code&gt; &lt;code&gt;DO_UNMOUNT_KSU=true&lt;/code&gt;&lt;/p&gt; &#xA; &lt;p&gt;Note: If one of the above variable doesn&#39;t exist, skip that particular variable.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Flash &lt;a href=&#34;https://github.com/Dr-TSNG/ZygiskNext/releases/latest&#34;&gt;ZygiskNext&lt;/a&gt; module (only if you want to use LSPosed features)&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Grant SuperSU/root permission for SystemUI from KernelSU app&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Disable &lt;code&gt;Unmount modules&lt;/code&gt; option if it&#39;s available in the app&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Reboot your device to get the modules installed successfully&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Now follow the installation steps of magisk users and voila!&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!TIP]&lt;/p&gt; &#xA; &lt;p&gt;KernelSU doesn&#39;t show root prompt. You will have to manually enable root access for Iconify from KernelSU app itself.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;🤫 Roadmap&lt;/h1&gt; &#xA;&lt;p&gt;You can track all the progress &lt;a href=&#34;https://github.com/Mahmud0808/Iconify/commits/beta&#34;&gt;HERE&lt;/a&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Fix bugs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Improve UI/UX.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;🤝 Contribution&lt;/h1&gt; &#xA;&lt;p&gt;We highly appreciate and welcome all forms of contributions, ranging from code, documentation, graphics, design suggestions, to bug reports. We encourage you to make the most of GitHub&#39;s collaborative platform by submitting Pull Requests, providing tutorials or other relevant content. Whatever you have to offer, we value and can utilize it effectively in our project.&lt;/p&gt; &#xA;&lt;h1&gt;🌐 Translation&lt;/h1&gt; &#xA;&lt;p&gt;You can help translate Iconify &lt;a href=&#34;https://crowdin.com/project/iconify&#34;&gt;on Crowdin&lt;/a&gt;. Here are a few tips:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;When using quotation marks, insert the symbols specific to the target language, as listed in &lt;a href=&#34;https://en.wikipedia.org/wiki/Quotation_mark#Summary_table&#34;&gt;this table&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Iconify uses title case for some English UI text. Title case isn’t used in other languages; opt for sentence case instead.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Some English terminology may have no commonly used equivalents in other languages. In such cases, use short descriptive phrases–for example, the equivalent of &lt;em&gt;shade generator&lt;/em&gt; for &lt;em&gt;monet engine&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;🤓 FAQ&lt;/h1&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How does Iconify work?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Iconify uses Android overlays and Xposed framework that allows modifications to be applied to the user interface (UI) of the device without directly modifying the underlying system files.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Do I need a root access for Iconify to work?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Yes, root access is required for Iconify to function properly. While Iconify does support KernelSU and APatch, it is highly recommended to use Magisk for the best compatibility.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Why is LSPosed listed as an optional requirement?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;LSPosed is categorized as optional due to the fact that even without its installation, you can access the majority of the features offered by iconify. However, should you choose to install LSPosed, you will gain access to certain additional features such as header clocks, lockscreen clocks, header image, battery styles, among others.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Which devices does Iconify support?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Iconify exclusively supports stock Pixel or custom AOSP ROMs. It does not support other OEMs such as MIUI, OneUI, ColorOS, NothingOS, MotoUI, etc.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is Android version &#34;xx&#34; supported?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Iconify officially supports Android 12 and later versions. Compatibility with earlier Android versions is not provided, and there are no plans to introduce support for those versions.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;I got bootloop. How do I fix it?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Boot into &lt;a href=&#34;https://www.androidauthority.com/how-to-enter-safe-mode-android-801476/&#34;&gt;Safe Mode&lt;/a&gt;. Or, you can remove the Iconify folder from /data/adb/modules/ using custom recovery.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;What is the difference between Release build and Debug build?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;a href=&#34;https://github.com/Mahmud0808/Iconify/releases/latest&#34;&gt;Release build&lt;/a&gt; is an optimized version intended for distribution to end-users, while &lt;a href=&#34;https://github.com/Mahmud0808/Iconify/actions&#34;&gt;Debug build&lt;/a&gt; includes additional features and information for debugging and development purposes.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Can I use Iconify in conjunction with other customization apps?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Yes, Iconify can be used alongside other customization apps. However, it&#39;s important to note that conflicts or overlapping modifications may occur, which could affect the overall user experience.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Is there any official support available for Iconify?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Yes, you can visit the official &lt;a href=&#34;https://t.me/IconifyDiscussion&#34;&gt;Iconify telegram group&lt;/a&gt; to access resources, seek assistance, and engage with other Iconify users.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;I found a bug. How do I report it?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;To report a bug, please navigate to the &lt;a href=&#34;https://github.com/Mahmud0808/Iconify/issues/new/choose&#34;&gt;Issues&lt;/a&gt; section. Create a new issue and ensure you select the &lt;code&gt;Bug Report&lt;/code&gt; template. Provide as much detailed information as possible, including steps to reproduce the bug and any relevant error messages or screenshots.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;How do I request a new feature?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;If you have a feature request, please go to the &lt;a href=&#34;https://github.com/Mahmud0808/Iconify/issues/new/choose&#34;&gt;Issues&lt;/a&gt; section. Create a new issue and choose the &lt;code&gt;Feature Request&lt;/code&gt; template. Be sure to include comprehensive details about the desired feature, its potential benefits, and any other relevant information that can assist in understanding and evaluating the request.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Where can I make a donation?&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;The preferred and designated means for donating to the project&#39;s developer is via the &#34;&lt;a href=&#34;https://www.buymeacoffee.com/DrDisagree&#34;&gt;Buy me a coffee&lt;/a&gt;&#34; page.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;h1&gt;❤ Credits&lt;/h1&gt; &#xA;&lt;h3&gt;Thanks to:&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://source.android.com&#34;&gt;Android Open Source Project (AOSP)&lt;/a&gt; for Android source code.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/substratum/substratum&#34;&gt;Substratum&lt;/a&gt; for overlay building tricks.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://icons8.com&#34;&gt;icons8.com&lt;/a&gt; for giving me permission to use their icons.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://iconsax.io&#34;&gt;iconsax.io&lt;/a&gt; for in-app icon set.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/jai_08&#34;&gt;@Jai&lt;/a&gt; for helping me with shell script.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/Rodolphe06&#34;&gt;@Flodor&lt;/a&gt;, &lt;a href=&#34;https://t.me/ModestCat03&#34;&gt;@modestCat&lt;/a&gt;, &lt;a href=&#34;https://t.me/ArzjoDev&#34;&gt;@Jorge ARZ&lt;/a&gt;, &lt;a href=&#34;https://t.me/hyp3r_sh&#34;&gt;@ɦʏքɛʀ.sɦ&lt;/a&gt; for helping with resources.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/siavash79/AOSPMods&#34;&gt;AOSPMods&lt;/a&gt;, &lt;a href=&#34;https://t.me/siavash7999&#34;&gt;@siavash79&lt;/a&gt; for helping me with Xposed mods.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://t.me/sanely_insane&#34;&gt;@Sanely_insane&lt;/a&gt;, &lt;a href=&#34;https://t.me/Jaguar0066&#34;&gt;@Jaguar&lt;/a&gt; for support and motivation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Magisk-Modules-Repo/HideNavBar&#34;&gt;HideNavBar&lt;/a&gt; for the navbar tweaks.&lt;/li&gt; &#xA; &lt;li&gt;And everyone who &lt;a href=&#34;https://github.com/Mahmud0808/Iconify/graphs/contributors&#34;&gt;contributed&lt;/a&gt; and &lt;a href=&#34;https://crowdin.com/project/iconify/members&#34;&gt;translated&lt;/a&gt;... :)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;📝 Disclaimer&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;[!WARNING]&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Please note that Iconify may not be fully compatible with all custom ROMs. It is discouraged to use on heavily modified ROMs.&lt;/li&gt; &#xA;  &lt;li&gt;I cannot be held responsible for any potential damage or issues that may occur to your device while using Iconify.&lt;/li&gt; &#xA;  &lt;li&gt;It is highly recommended to have a custom recovery installed on your device to revert any changes in case of unexpected problems.&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
</feed>