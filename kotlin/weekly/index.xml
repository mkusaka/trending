<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-01-07T01:51:35Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>coil-kt/coil</title>
    <updated>2024-01-07T01:51:35Z</updated>
    <id>tag:github.com,2024-01-07:/coil-kt/coil</id>
    <link href="https://github.com/coil-kt/coil" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Image loading for Android and Compose Multiplatform.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/logo.svg?sanitize=true&#34; alt=&#34;Coil&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;An image loading library for Android backed by Kotlin Coroutines. Coil is:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Coil performs a number of optimizations including memory and disk caching, downsampling the image in memory, automatically pausing/cancelling requests, and more.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt;: Coil adds ~2000 methods to your APK (for apps that already use OkHttp and Coroutines), which is comparable to Picasso and significantly less than Glide and Fresco.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Easy to use&lt;/strong&gt;: Coil&#39;s API leverages Kotlin&#39;s language features for simplicity and minimal boilerplate.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Modern&lt;/strong&gt;: Coil is Kotlin-first and uses modern libraries including Coroutines, OkHttp, Okio, and AndroidX Lifecycles.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Coil is an acronym for: &lt;strong&gt;Co&lt;/strong&gt;routine &lt;strong&gt;I&lt;/strong&gt;mage &lt;strong&gt;L&lt;/strong&gt;oader.&lt;/p&gt; &#xA;&lt;p&gt;Translations: &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-ko.md&#34;&gt;한국어&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-zh.md&#34;&gt;中文&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-tr.md&#34;&gt;Türkçe&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/coil-kt/coil/main/README-ja.md&#34;&gt;日本語&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;Coil is available on &lt;code&gt;mavenCentral()&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation(&#34;io.coil-kt:coil:2.5.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;h4&gt;ImageViews&lt;/h4&gt; &#xA;&lt;p&gt;To load an image into an &lt;code&gt;ImageView&lt;/code&gt;, use the &lt;code&gt;load&lt;/code&gt; extension function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// URL&#xA;imageView.load(&#34;https://example.com/image.jpg&#34;)&#xA;&#xA;// File&#xA;imageView.load(File(&#34;/path/to/image.jpg&#34;))&#xA;&#xA;// And more...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Requests can be configured with an optional trailing lambda:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;imageView.load(&#34;https://example.com/image.jpg&#34;) {&#xA;    crossfade(true)&#xA;    placeholder(R.drawable.image)&#xA;    transformations(CircleCropTransformation())&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Jetpack Compose&lt;/h4&gt; &#xA;&lt;p&gt;Import the &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; extension library:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;implementation(&#34;io.coil-kt:coil-compose:2.5.0&#34;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load an image, use the &lt;code&gt;AsyncImage&lt;/code&gt; composable:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;AsyncImage(&#xA;    model = &#34;https://example.com/image.jpg&#34;,&#xA;    contentDescription = null,&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Image Loaders&lt;/h4&gt; &#xA;&lt;p&gt;Both &lt;code&gt;imageView.load&lt;/code&gt; and &lt;code&gt;AsyncImage&lt;/code&gt; use the singleton &lt;code&gt;ImageLoader&lt;/code&gt; to execute image requests. The singleton &lt;code&gt;ImageLoader&lt;/code&gt; can be accessed using a &lt;code&gt;Context&lt;/code&gt; extension function:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val imageLoader = context.imageLoader&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;code&gt;ImageLoader&lt;/code&gt;s are designed to be shareable and are most efficient when you create a single instance and share it throughout your app. That said, you can also create your own &lt;code&gt;ImageLoader&lt;/code&gt; instance(s):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val imageLoader = ImageLoader(context)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you do not want the singleton &lt;code&gt;ImageLoader&lt;/code&gt;, depend on &lt;code&gt;io.coil-kt:coil-base&lt;/code&gt; instead of &lt;code&gt;io.coil-kt:coil&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h4&gt;Requests&lt;/h4&gt; &#xA;&lt;p&gt;To load an image into a custom target, &lt;code&gt;enqueue&lt;/code&gt; an &lt;code&gt;ImageRequest&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val request = ImageRequest.Builder(context)&#xA;    .data(&#34;https://example.com/image.jpg&#34;)&#xA;    .target { drawable -&amp;gt;&#xA;        // Handle the result.&#xA;    }&#xA;    .build()&#xA;val disposable = imageLoader.enqueue(request)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To load an image imperatively, &lt;code&gt;execute&lt;/code&gt; an &lt;code&gt;ImageRequest&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val request = ImageRequest.Builder(context)&#xA;    .data(&#34;https://example.com/image.jpg&#34;)&#xA;    .build()&#xA;val drawable = imageLoader.execute(request).drawable&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Check out Coil&#39;s &lt;a href=&#34;https://coil-kt.github.io/coil/getting_started/&#34;&gt;full documentation here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;R8 / Proguard&lt;/h2&gt; &#xA;&lt;p&gt;Coil is fully compatible with R8 out of the box and doesn&#39;t require adding any extra rules.&lt;/p&gt; &#xA;&lt;p&gt;If you use Proguard, you may need to add rules for &lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines/raw/master/kotlinx-coroutines-core/jvm/resources/META-INF/proguard/coroutines.pro&#34;&gt;Coroutines&lt;/a&gt; and &lt;a href=&#34;https://github.com/square/okhttp/raw/master/okhttp/src/main/resources/META-INF/proguard/okhttp3.pro&#34;&gt;OkHttp&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2023 Coil Contributors&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>BobbyESP/Spowlo</title>
    <updated>2024-01-07T01:51:35Z</updated>
    <id>tag:github.com,2024-01-07:/BobbyESP/Spowlo</id>
    <link href="https://github.com/BobbyESP/Spowlo" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A Spotify songs downloader for Android made with Jetpack Compose, Material You and the spotDL Python library&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/60316747/219976475-6dd606b0-8cb8-4dee-8665-544ae4e08ff2.svg?sanitize=true&#34; alt=&#34;spotify&#34; width=&#34;100&#34; height=&#34;100&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Spowlo&lt;/h1&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;A Spotify songs downloader powered by &lt;a href=&#34;https://github.com/spotDL/spotify-downloader/&#34;&gt;spotDL&lt;/a&gt; made with Jetpack Compose and Material You&lt;/p&gt; &#xA; &lt;p&gt;&lt;a href=&#34;https://t.me/spowlo_chatroom&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Telegram-Spowlo-green?style=flat&amp;amp;logo=telegram&#34; alt=&#34;Telegram Channel&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/downloads/BobbyESP/Spowlo/total?label=Downloads&amp;amp;logo=github&#34; alt=&#34;GitHub all releases&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/stars/BobbyESP/Spowlo?color=informational&amp;amp;label=Stars&#34; alt=&#34;GitHub Repo stars&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/languages/code-size/BobbyESP/Spowlo?logo=github&amp;amp;logoColor=%23fff&amp;amp;style=for-the-badge&#34; alt=&#34;GitHub code size in bytes&#34;&gt; &lt;img src=&#34;https://img.shields.io/github/languages/top/BobbyESP/Spowlo?style=for-the-badge&#34; alt=&#34;GitHub top language&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;📸 Screenshots&lt;/h2&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;div&gt; &#xA;  &lt;img src=&#34;https://user-images.githubusercontent.com/60316747/219976933-f0d72d37-2202-4eed-a152-50e3f346f322.jpg&#34; width=&#34;30%&#34;&gt; &#xA;  &lt;img src=&#34;https://user-images.githubusercontent.com/60316747/219976935-01b6457e-8793-463c-8c31-0b2557b636c2.jpg&#34; width=&#34;30%&#34;&gt; &#xA;  &lt;img src=&#34;https://user-images.githubusercontent.com/60316747/219976936-6bf56e67-8763-47cf-af8b-ce56ece4caa2.jpg&#34; width=&#34;30%&#34;&gt; &#xA; &lt;/div&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;⚠️ Warning&lt;/h2&gt; &#xA;&lt;p&gt;Spowlo uses YT Music and YouTube to download the songs. This is because Spotify DRM bypassing can lead to an account ban and legal issues. If YT Music isn&#39;t available in your country, don&#39;t worry, you can still use YouTube as audio provider or use a VPN. We are working on making a regional bypass so don&#39;t matter your region. Thank you for understanding.&lt;/p&gt; &#xA;&lt;h2&gt;🔮 Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Download songs from Spotify thanks to the &lt;a href=&#34;https://github.com/spotDL/spotify-downloader/&#34;&gt;spotDL&lt;/a&gt; library.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Downloading without links, just a search query&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Download full playlists with just one click.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Embed synced lyrics into the downloaded songs.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Easy to use and user-friendly.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://m3.material.io/&#34;&gt;Material Design 3&lt;/a&gt; style UI, with dynamic color theme.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;MAD: UI and logic written purely on Kotlin. It&#39;s used just an activity and composable destinations and deep links thanks to the navigation library.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;⬇️Download&lt;/h2&gt; &#xA;&lt;p&gt;For most devices, it is recommended to install the &lt;strong&gt;ARM64-v8a&lt;/strong&gt; version of the apks&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Download the latest stable version from &lt;a href=&#34;https://github.com/BobbyESP/Spowlo/releases/latest&#34;&gt;GitHub releases&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Translation&lt;/h2&gt; &#xA;&lt;p&gt;We are using Hosted Weblate for the translations of the app. if you want to contribute follow &lt;a href=&#34;https://hosted.weblate.org/engage/spowlo/&#34;&gt;this link&lt;/a&gt; 🖇️&lt;/p&gt; &#xA;&lt;h2&gt;📖Credits&lt;/h2&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/xnetcat&#34;&gt;xnetcat&lt;/a&gt; for it&#39;s help with some spotDL related things!&lt;/p&gt; &#xA;&lt;p&gt;Thanks to &lt;a href=&#34;https://github.com/JunkFood02/Seal&#34;&gt;Seal&lt;/a&gt; and &lt;a href=&#34;https://github.com/JunkFood02&#34;&gt;JunkFood02&lt;/a&gt; for some of the code of the app and UI ideas. (Without you, this app would not have existed). I learnt a lot about architectures, corroutines, Jetpack Compose...&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/c/PhilippLackner&#34;&gt;Philipp Lackner&lt;/a&gt;. Infinite thanks to you, Philipp. You made me learn infinite things with just a few videos. This guy explains literally everything about what is he coding, make apps just to make the community learn, and give us some amazing utilities. Without he, probably I wouldn&#39;t started coding for Android.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/material-foundation/material-color-utilities&#34;&gt;Material color utilities&lt;/a&gt; for having Material You coloring support in any device.&lt;/p&gt; &#xA;&lt;p&gt;Katoka, for the app name. (Thank you! Without your moral support I couldn&#39;t have done the app hahaha)&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/c/MouredevApps&#34;&gt;MoureDev by Brais Moure&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/c/AristiDevs&#34;&gt;Programación Android by AristiDevs&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;And also thank you all for the internal tests of the app!&lt;/p&gt;</summary>
  </entry>
</feed>