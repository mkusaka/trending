<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-08-14T02:14:45Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>chrisbanes/tivi</title>
    <updated>2022-08-14T02:14:45Z</updated>
    <id>tag:github.com,2022-08-14:/chrisbanes/tivi</id>
    <link href="https://github.com/chrisbanes/tivi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Tivi is a work-in-progress TV show tracking Android app, which connects to Trakt.tv. It is still in its early stages of development and currently only contains two pieces of UI. It is under heavy development.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chrisbanes/tivi/main/art/banner.png&#34; alt=&#34;Tivi&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;Tivi üì∫ (work-in-progress üë∑üîßÔ∏èüë∑‚Äç‚ôÄÔ∏è‚õè)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;strong&gt;This is not an official Google product&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Tivi is a &lt;strong&gt;work-in-progress&lt;/strong&gt; TV show tracking Android app, which connects to &lt;a href=&#34;https://www.trakt.tv&#34;&gt;Trakt.tv&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;a href=&#34;https://play.google.com/store/apps/details?id=app.tivi&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://play.google.com/intl/en_gb/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;240&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;Android development&lt;/h2&gt; &#xA;&lt;p&gt;Tivi is an app that attempts to use the latest libraries and tools. As a summary:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Entirely written in &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;UI completely written in &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; (see below).&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://kotlinlang.org/docs/reference/coroutines/coroutines-guide.html&#34;&gt;Kotlin Coroutines&lt;/a&gt; throughout.&lt;/li&gt; &#xA; &lt;li&gt;Uses many of the &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/&#34;&gt;Architecture Components&lt;/a&gt;, including: Room, Lifecycle, Navigation.&lt;/li&gt; &#xA; &lt;li&gt;Uses &lt;a href=&#34;https://dagger.dev/hilt/&#34;&gt;Hilt&lt;/a&gt; for dependency injection&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Development setup&lt;/h2&gt; &#xA;&lt;p&gt;First off, you require the latest &lt;a href=&#34;https://developer.android.com/studio&#34;&gt;Android Studio Dolphin&lt;/a&gt; (or newer) to be able to build the app.&lt;/p&gt; &#xA;&lt;h3&gt;Code style&lt;/h3&gt; &#xA;&lt;p&gt;This project uses &lt;a href=&#34;https://github.com/pinterest/ktlint&#34;&gt;ktlint&lt;/a&gt;, provided via the &lt;a href=&#34;https://github.com/diffplug/spotless&#34;&gt;spotless&lt;/a&gt; gradle plugin, and the bundled project IntelliJ codestyle.&lt;/p&gt; &#xA;&lt;p&gt;If you find that one of your pull reviews does not pass the CI server check due to a code style conflict, you can easily fix it by running: &lt;code&gt;./gradlew spotlessApply&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;API keys&lt;/h3&gt; &#xA;&lt;p&gt;You need to supply API / client keys for the various services the app uses:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://trakt.docs.apiary.io&#34;&gt;Trakt.tv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developers.themoviedb.org&#34;&gt;TMDb&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can find information about how to gain access via the relevant links.&lt;/p&gt; &#xA;&lt;p&gt;When creating a Trakt API project, you need to set the OAuth redirect uri to &lt;code&gt;app.tivi.debug://auth/oauth2callback&lt;/code&gt; for debug build types, or &lt;code&gt;app.tivi://auth/oauth2callback&lt;/code&gt; for release build types.&lt;/p&gt; &#xA;&lt;p&gt;Once you obtain the keys, you can set them in your &lt;code&gt;~/.gradle/gradle.properties&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;# Get these from Trakt.tv&#xA;TIVI_TRAKT_CLIENT_ID=&amp;lt;insert&amp;gt;&#xA;TIVI_TRAKT_CLIENT_SECRET=&amp;lt;insert&amp;gt;&#xA;&#xA;# Get this from TMDb&#xA;TIVI_TMDB_API_KEY=&amp;lt;insert&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Jetpack Compose&lt;/h2&gt; &#xA;&lt;p&gt;As mentioned above, this app&#39;s UI is completely written in &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt;. Some screens highlighted are:&lt;/p&gt; &#xA;&lt;h3&gt;Show details&lt;/h3&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://raw.githubusercontent.com/chrisbanes/tivi/main/ui-showdetails&#34;&gt;source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chrisbanes/tivi/main/art/show-details.gif&#34; alt=&#34;Show Details demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Episode details&lt;/h3&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://raw.githubusercontent.com/chrisbanes/tivi/main/ui-episodedetails&#34;&gt;source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chrisbanes/tivi/main/art/episode-details.gif&#34; alt=&#34;Show Details demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Account&lt;/h3&gt; &#xA;&lt;p&gt;[&lt;a href=&#34;https://raw.githubusercontent.com/chrisbanes/tivi/main/ui-account&#34;&gt;source&lt;/a&gt;]&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/chrisbanes/tivi/main/art/account.png&#34; alt=&#34;Show Details demo&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contributions&lt;/h2&gt; &#xA;&lt;p&gt;If you&#39;ve found an error in this sample, please file an issue.&lt;/p&gt; &#xA;&lt;p&gt;Patches are encouraged and may be submitted by forking this project and submitting a pull request. Since this project is still in its very early stages, if your change is substantial, please raise an issue first to discuss it.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright 2020 Google LLC&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>yairm210/Unciv</title>
    <updated>2022-08-14T02:14:45Z</updated>
    <id>tag:github.com,2022-08-14:/yairm210/Unciv</id>
    <link href="https://github.com/yairm210/Unciv" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Open-source Android/Desktop remake of Civ V&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Unciv - FOSS Civ V for Android+Desktop&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yairm210/Unciv/master/extraImages/GithubPreviewImage.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.unciv.app&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Google&amp;amp;message=Play&amp;amp;color=607D8B&amp;amp;logo=google-play&#34; alt=&#34;Google Play&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/en/packages/com.unciv.app/&#34;&gt;&lt;img src=&#34;https://img.shields.io/f-droid/v/com.unciv.app?logo=f-droid&#34; alt=&#34;F-Droid&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://yairm210.itch.io/unciv&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=itch.io&amp;amp;message=Unciv&amp;amp;color=607D8B&amp;amp;logo=itch.io&#34; alt=&#34;itch.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://flathub.org/apps/details/io.github.yairm210.unciv&#34;&gt;&lt;img src=&#34;https://img.shields.io/flathub/v/io.github.yairm210.unciv?logo=flathub&#34; alt=&#34;Flathub&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Botspot/pi-apps&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=pi-apps&amp;amp;message=Unciv&amp;amp;color=607D8B&amp;amp;logo=raspberry-pi&#34; alt=&#34;pi-apps&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/yairm210/Unciv/workflows/Build%20and%20deploy/badge.svg?sanitize=true&#34; alt=&#34;Build and deploy&#34;&gt; &lt;a href=&#34;https://discord.gg/bjrB4Xw&#34;&gt;&lt;img src=&#34;https://img.shields.io/discord/586194543280390151.svg?sanitize=true&#34; alt=&#34;Discord Chat&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is this?&lt;/h2&gt; &#xA;&lt;p&gt;An open-source, mod-friendly Android+Desktop remake of Civ V, made with LibGDX&lt;/p&gt; &#xA;&lt;h2&gt;Is this any good?&lt;/h2&gt; &#xA;&lt;p&gt;Depends what you&#39;re looking for. If you&#39;re in the market for high-res graphics, amazing soundtracks, animations etc, I highly recommend Firaxis&#39;s Civ-V-like game, &#34;Civilization V&#34;.&lt;/p&gt; &#xA;&lt;p&gt;If you want a small, fast, moddable, FOSS, in-depth 4X that can still run on a potato, you&#39;ve come to the right place :)&lt;/p&gt; &#xA;&lt;h2&gt;What&#39;s the roadmap?&lt;/h2&gt; &#xA;&lt;p&gt;In this order:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Polish! As you may have noticed, Unciv is fully functional but rough around the edges. This means: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;UI+UX improvements (suggestions welcome!)&lt;/li&gt; &#xA;   &lt;li&gt;Better automation, AI etc. in-game&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Finishing off Vanilla mechanics - Time Victory, Air sweep action - mostly done!&lt;/li&gt; &#xA; &lt;li&gt;G&amp;amp;K mechanics - espionage, the Maya&#39;s, etc.&lt;/li&gt; &#xA; &lt;li&gt;BNW mechanics - trade routes, world congress, etc.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;h3&gt;How can I help?&lt;/h3&gt; &#xA;&lt;p&gt;Programmers start &lt;a href=&#34;https://yairm210.github.io/Unciv/Developers/Building-Locally/&#34;&gt;here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Translators start &lt;a href=&#34;https://yairm210.github.io/Unciv/Other/Translating/&#34;&gt;here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;Modders start &lt;a href=&#34;https://yairm210.github.io/Unciv/Modders/Mods/&#34;&gt;here&lt;/a&gt;!&lt;/p&gt; &#xA;&lt;p&gt;You can join us in any of the open issue, or work on improving anything you want - once you&#39;re finished, issue a pull request and it&#39;ll go into the next version!&lt;/p&gt; &#xA;&lt;p&gt;If not, you can help by spreading the word - vote for Unciv where you can, mention it on Reddit or Twitter etc, and help us with new ideas of how to get the word out!&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Will you implement {feature}?&lt;/h3&gt; &#xA;&lt;p&gt;If it&#39;s in the original Civ V, then yes!&lt;/p&gt; &#xA;&lt;p&gt;There&#39;s a lot left to implement, so it&#39;s hard to give an estimation of when exactly each feature will be added, but we&#39;re constantly improving!&lt;/p&gt; &#xA;&lt;p&gt;If not, then the feature won&#39;t be added until we&#39;ve finished all the features from the original Civ - as mentioned, this will take a while!&lt;/p&gt; &#xA;&lt;h4&gt;Why not? This is its own game, why not add features that weren&#39;t in Civ V?&lt;/h4&gt; &#xA;&lt;p&gt;Having a clear vision is important for actually getting things done.&lt;/p&gt; &#xA;&lt;p&gt;Anyone can make a suggestion. Not all are good, viable, or simple. Not many can actually implement stuff.&lt;/p&gt; &#xA;&lt;p&gt;As an open source project, this stuff is done in our spare time, of which there isn&#39;t much.&lt;/p&gt; &#xA;&lt;p&gt;We need a clear-cut criteria to decide what to work on and what not to work on.&lt;/p&gt; &#xA;&lt;h3&gt;Will you implement Civ VI?&lt;/h3&gt; &#xA;&lt;p&gt;Considering how long it took to get this far, no.&lt;/p&gt; &#xA;&lt;h3&gt;Is there a desktop version?&lt;/h3&gt; &#xA;&lt;p&gt;Yes! Windows and Linux versions are available at &lt;a href=&#34;https://yairm210.itch.io/unciv&#34;&gt;itch.io&lt;/a&gt;, and if you&#39;re using the Itch app, your game will stay up-to-date - and we release pretty frequently so that&#39;s an issue ;)&lt;/p&gt; &#xA;&lt;p&gt;Unciv can also be installed on macOS, a guide on how to do that can be found &lt;a href=&#34;https://yairm210.github.io/Unciv/Other/Installing-on-macOS/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you have Java 8, and are familiar with the command line, there are (considerably smaller) JARs in &lt;a href=&#34;https://github.com/yairm210/UnCiv/releases&#34;&gt;Releases&lt;/a&gt; which you can run with &lt;code&gt;java -jar Unciv.jar&lt;/code&gt;. For Mac users, you&#39;ll need to add extra parameters, &lt;code&gt;java -XstartOnFirstThread -Djava.awt.headless=true -jar Unciv.jar&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If you use Flatpaks, there&#39;s a Flatpak by &lt;a href=&#34;https://github.com/MayeulC&#34;&gt;MayeulC&lt;/a&gt; and you can know more about it &lt;a href=&#34;https://github.com/flathub/io.github.yairm210.unciv&#34;&gt;here&lt;/a&gt;. Flathub link is available in the &lt;a href=&#34;https://raw.githubusercontent.com/yairm210/Unciv/master/#downloads&#34;&gt;Downloads&lt;/a&gt; section.&lt;/p&gt; &#xA;&lt;p&gt;If you want to build it from scratch for some reason, &lt;a href=&#34;https://yairm210.github.io/Unciv/Developers/Building-locally-without-Android-Studio/&#34;&gt;we have instructions for that as well&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How about IOS?&lt;/h3&gt; &#xA;&lt;p&gt;I&#39;m not planning on it.&lt;/p&gt; &#xA;&lt;p&gt;It means paying money to Apple, yet another release path, and since I don&#39;t have an IOS device it means I can&#39;t test it properly.&lt;/p&gt; &#xA;&lt;h3&gt;How can I learn to play? Where&#39;s the wiki?&lt;/h3&gt; &#xA;&lt;p&gt;All the tutorial information is available in-game at menu &amp;gt; civilopedia &amp;gt; tutorials&lt;/p&gt; &#xA;&lt;p&gt;All the information is included in the amazing &lt;a href=&#34;https://civilization.fandom.com/wiki/&#34;&gt;Civ V wiki&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Since this is a Civ V clone, you can search Google for how to play Civ V and there are loads of answers =)&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, you could &lt;a href=&#34;https://discord.gg/bjrB4Xw&#34;&gt;join us on Discord&lt;/a&gt; and ask there =D&lt;/p&gt; &#xA;&lt;h3&gt;Aren&#39;t you basically making a Civ V clone? Is that even legal?&lt;/h3&gt; &#xA;&lt;p&gt;This is a subject that I&#39;ve heard a lot of hearsay on but no solid sources of law.&lt;/p&gt; &#xA;&lt;p&gt;From what I gather, it is illegal:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;To use the Civilization name&lt;/li&gt; &#xA; &lt;li&gt;To impersonate the Civ games (so calling yourself civi|zation with a similar logo, for instance)&lt;/li&gt; &#xA; &lt;li&gt;To use any assets from the original game (images, sound etc) - they belong to Firaxis&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;From what I understand, intellectual property rights apply to names, characters and settings. They do not apply to mechanics - as I&#39;m sure you know, there are a billion Flappy Bird knockoffs&lt;/p&gt; &#xA;&lt;p&gt;If anyone has any real legal sources, or can shed some light on the limits of what is and is not allowed, I&#39;d be happy to hear!&lt;/p&gt; &#xA;&lt;h2&gt;Disclosure&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://yairm210.github.io/Unciv/Other/Multiplayer/&#34;&gt;Multiplayer&lt;/a&gt; takes advantage of Dropbox, which is &lt;em&gt;non-free software&lt;/em&gt;, for syncing purposes.&lt;/p&gt; &#xA;&lt;p&gt;Single player does not use this feature.&lt;/p&gt; &#xA;&lt;h2&gt;Downloads&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://yairm210.itch.io/unciv&#34;&gt;&lt;img src=&#34;https://static.itch.io/images/badge.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.unciv.app&#34;&gt;&lt;img src=&#34;https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.unciv.app/&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://flathub.org/apps/details/io.github.yairm210.unciv&#34;&gt;&lt;img src=&#34;https://flathub.org/assets/badges/flathub-badge-en.svg?sanitize=true&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Run with Docker&lt;/h2&gt; &#xA;&lt;p&gt;If you have docker and docker-compose installed, you can:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Run &lt;code&gt;$ docker-compose build &amp;amp;&amp;amp; docker-compose up&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Open &lt;a href=&#34;http://localhost:6901/vnc.html?password=headless&#34;&gt;http://localhost:6901/vnc.html?password=headless&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;And if you are using docker desktop:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;$ docker compose build &amp;amp;&amp;amp; docker compose up&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;http://localhost:6901/vnc.html?password=headless&#34;&gt;http://localhost:6901/vnc.html?password=headless&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;a href=&#34;https://raw.githubusercontent.com/yairm210/Unciv/master/docs/Credits.md&#34;&gt;Credits and 3rd parties&lt;/a&gt;&lt;/h2&gt;</summary>
  </entry>
  <entry>
    <title>skydoves/Balloon</title>
    <updated>2022-08-14T02:14:45Z</updated>
    <id>tag:github.com,2022-08-14:/skydoves/Balloon</id>
    <link href="https://github.com/skydoves/Balloon" rel="alternate"></link>
    <summary type="html">&lt;p&gt;üéà Modernized and sophisticated tooltips, fully customizable with an arrow and animations for Android.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Balloon&lt;/h1&gt;&#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;span&gt;üéà&lt;/span&gt; Modernized and sophisticated tooltips, fully customizable with an arrow and animations on Android. &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://devlibrary.withgoogle.com/products/android/repos/skydoves-Balloon&#34;&gt;&lt;img alt=&#34;Google&#34; src=&#34;https://skydoves.github.io/badges/google-devlib.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/googledevs/status/1476223093773418502&#34;&gt;&lt;img alt=&#34;Twitter&#34; src=&#34;https://skydoves.github.io/badges/twitter-developers.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:6881990083344519168/&#34;&gt;&lt;img alt=&#34;LinkedIn&#34; src=&#34;https://skydoves.github.io/badges/linkedin-developers.svg?sanitize=true&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=17&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-17%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves/Balloon/actions&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/skydoves/Balloon/workflows/Android%20CI/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://medium.com/swlh/a-lightweight-tooltip-popup-for-android-ef9484a992d7&#34;&gt;&lt;img alt=&#34;Medium&#34; src=&#34;https://skydoves.github.io/badges/Story-Medium.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves&#34;&gt;&lt;img alt=&#34;Profile&#34; src=&#34;https://skydoves.github.io/badges/skydoves.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://skydoves.github.io/libraries/balloon/html/balloon/com.skydoves.balloon/index.html&#34;&gt;&lt;img alt=&#34;Dokka&#34; src=&#34;https://skydoves.github.io/badges/dokka-balloon.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/61194943-f9d70380-a6ff-11e9-807f-ba1ca8126f8a.gif&#34; width=&#34;280&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/61225579-d346b600-a75b-11e9-84f8-3c06047b5003.gif&#34; width=&#34;280&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/148673977-dba2e44c-c2fb-4fb4-a648-e26e8541e865.png&#34; width=&#34;252&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Who&#39;s using Balloon?&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;üëâ &lt;a href=&#34;https://raw.githubusercontent.com/skydoves/Balloon/main/usecases.md&#34;&gt;Check out who&#39;s using Balloon&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Balloon for Jetpack Compose&lt;/h2&gt; &#xA;&lt;p&gt;If you want to use Balloon in your Jetpack Compose project, check out the &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/Orchestra#balloon&#34;&gt;Orchestra&#39;s Balloon&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Including in your project&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://search.maven.org/search?q=g:%22com.github.skydoves%22%20AND%20a:%22balloon%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.github.skydoves/balloon.svg?label=Maven%20Central&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Gradle&lt;/h3&gt; &#xA;&lt;p&gt;Add the dependency below to your &lt;strong&gt;module&lt;/strong&gt;&#39;s &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    implementation &#34;com.github.skydoves&lt;span&gt;üéà&lt;/span&gt;1.4.7&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;SNAPSHOT&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots/com/github/skydoves/balloon/&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=snapshot&amp;amp;message=balloon&amp;amp;logo=apache%20maven&amp;amp;color=C71A36&#34; alt=&#34;Balloon&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;See how to import the snapshot&lt;/summary&gt; &#xA; &lt;h3&gt;Including the SNAPSHOT&lt;/h3&gt; &#xA; &lt;p&gt;Snapshots of the current development version of Balloon are available, which track &lt;a href=&#34;https://oss.sonatype.org/content/repositories/snapshots/com/github/skydoves/balloon/&#34;&gt;the latest versions&lt;/a&gt;.&lt;/p&gt; &#xA; &lt;p&gt;To import snapshot versions on your project, add the code snippet below on your gradle file.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-Gradle&#34;&gt;repositories {&#xA;   maven { url &#39;https://oss.sonatype.org/content/repositories/snapshots/&#39; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Next, add the below dependency to your &lt;strong&gt;module&lt;/strong&gt;&#39;s &lt;code&gt;build.gradle&lt;/code&gt; file.&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;dependencies {&#xA;    implementation &#34;com.github.skydoves&lt;span&gt;üéà&lt;/span&gt;1.4.8-SNAPSHOT&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h2&gt;How to Use&lt;/h2&gt; &#xA;&lt;p&gt;Balloon supports both Kotlin and Java projects, so you can reference it by your language.&lt;/p&gt; &#xA;&lt;h3&gt;Create Balloon with Kotlin&lt;/h3&gt; &#xA;&lt;p&gt;We can create an instance of the Balloon with the &lt;code&gt;Balloon.Builder&lt;/code&gt; class.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val balloon = Balloon.Builder(context)&#xA;  .setWidthRatio(1.0f)&#xA;  .setHeight(BalloonSizeSpec.WRAP)&#xA;  .setText(&#34;Edit your profile here!&#34;)&#xA;  .setTextColorResource(R.color.white_87)&#xA;  .setTextSize(15f)&#xA;  .setIconDrawableResource(R.drawable.ic_edit)&#xA;  .setArrowPositionRules(ArrowPositionRules.ALIGN_ANCHOR)&#xA;  .setArrowSize(10)&#xA;  .setArrowPosition(0.5f)&#xA;  .setPadding(12)&#xA;  .setCornerRadius(8f)&#xA;  .setBackgroundColorResource(R.color.skyBlue)&#xA;  .setBalloonAnimation(BalloonAnimation.ELASTIC)&#xA;  .setLifecycleOwner(lifecycle)&#xA;  .build()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Create Balloon with Kotlin DSL&lt;/h3&gt; &#xA;&lt;p&gt;We can also create an instance of the Balloon with the Kotlin DSL.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Keep reading for more details&lt;/summary&gt; &#xA; &lt;p&gt;You can create an instance of the Balloon with &lt;code&gt;createBalloon&lt;/code&gt; as the example below:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val balloon = createBalloon(context) {&#xA;  setWidthRatio(1.0f)&#xA;  setHeight(BalloonSizeSpec.WRAP)&#xA;  setText(&#34;Edit your profile here!&#34;)&#xA;  setTextColorResource(R.color.white_87)&#xA;  setTextSize(15f)&#xA;  setIconDrawableResource(R.drawable.ic_edit)&#xA;  setArrowPositionRules(ArrowPositionRules.ALIGN_ANCHOR)&#xA;  setArrowSize(10)&#xA;  setArrowPosition(0.5f)&#xA;  setPadding(12)&#xA;  setCornerRadius(8f)&#xA;  setBackgroundColorResource(R.color.skyBlue)&#xA;  setBalloonAnimation(BalloonAnimation.ELASTIC)&#xA;  setLifecycleOwner(lifecycle)&#xA;  build()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Create Balloon with Java&lt;/h3&gt; &#xA;&lt;p&gt;You can create an instance of the Balloon with Java by using the &lt;code&gt;Balloon.Builder&lt;/code&gt; class.&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Keep reading for more details&lt;/summary&gt; &#xA; &lt;p&gt;You can create an instance of the Balloon as the following example below:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Balloon balloon = new Balloon.Builder(context)&#xA;    .setArrowSize(10)&#xA;    .setArrowOrientation(ArrowOrientation.TOP)&#xA;    .setArrowPositionRules(ArrowPositionRules.ALIGN_ANCHOR)&#xA;    .setArrowPosition(0.5f)&#xA;    .setWidth(BalloonSizeSpec.WRAP)&#xA;    .setHeight(65)&#xA;    .setTextSize(15f)&#xA;    .setCornerRadius(4f)&#xA;    .setAlpha(0.9f)&#xA;    .setText(&#34;You can access your profile from now on.&#34;)&#xA;    .setTextColor(ContextCompat.getColor(context, R.color.white_93))&#xA;    .setTextIsHtml(true)&#xA;    .setIconDrawable(ContextCompat.getDrawable(context, R.drawable.ic_profile))&#xA;    .setBackgroundColor(ContextCompat.getColor(context, R.color.colorPrimary))&#xA;    .setOnBalloonClickListener(onBalloonClickListener)&#xA;    .setBalloonAnimation(BalloonAnimation.FADE)&#xA;    .setLifecycleOwner(lifecycleOwner)&#xA;    .build();&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Show up Balloon&lt;/h3&gt; &#xA;&lt;p&gt;We can show up the Balloon using the functions below. If we use &lt;code&gt;showAlign__&lt;/code&gt; method, we can show up the Balloon based on alignments (&lt;strong&gt;top, bottom, right, left&lt;/strong&gt;). Also, we can adjust specific positions of the Balloon by using &lt;code&gt;x-Offset&lt;/code&gt; and &lt;code&gt;y-Offset&lt;/code&gt; parameters. &lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.showAlignTop(anchor: View) // shows the balloon on an anchor view as the top alignment.&#xA;balloon.showAlignTop(anchor: View, xOff: Int, yOff: Int) // shows top alignment with x-off and y-off.&#xA;balloon.showAlignBottom(anchor: View) // shows the balloon on an anchor view as the bottom alignment.&#xA;balloon.showAlignBottom(anchor: View, xOff: Int, yOff: Int) // shows bottom alignment with x-off and y-off.&#xA;balloon.showAlignRight(anchor: View) // shows the balloon on an anchor view as the right alignment.&#xA;balloon.showAlignRight(anchor: View, xOff: Int, yOff: Int) // shows right alignment with x-off and y-off.&#xA;balloon.showAlignLeft(anchor: View) // shows the balloon on an anchor view as the left alignment.&#xA;balloon.showAlignLeft(anchor: View, xOff: Int, yOff: Int) // shows left alignment with x-off and y-off.&#xA;balloon.showAsDropDown(anchor: View) // shows the balloon as a dropdown without any alignments.&#xA;balloon.showAsDropDown(anchor: View, xOff: Int, yOff: Int) // shows no alignments with x-off and y-off.&#xA;balloon.showAtCenter(anchor: View, xOff: Int, yOff: Int, centerAlign: BalloonCenterAlign.TOP)&#xA;// shows the balloon over the anchor view (overlap) as the center aligns.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, We can show up the Balloon with Kotlin extensions.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;myButton.showAlignTop(balloon)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Dismiss Balloon&lt;/h3&gt; &#xA;&lt;p&gt;We can dismiss the Balloon by using the &lt;code&gt;Balloon.dismiss()&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.dismiss()&#xA;balloon.dismissWithDelay(1000L) // dismisses 1000 milliseconds later when the popup is shown&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can dismiss automatically with delay after the Balloon is showing up with the &lt;code&gt;setAutoDismissDuration&lt;/code&gt; method..&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;Balloon.Builder(context)&#xA;   // dismisses automatically 1000 milliseconds later when the popup is shown.&#xA;   .setAutoDismissDuration(1000L)&#xA;   ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Show up Balloon Sequentially&lt;/h3&gt; &#xA;&lt;p&gt;We can show up a couple of Balloons sequentially with the &lt;code&gt;relayShow__&lt;/code&gt; methods.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;customListBalloon&#xA;  .relayShowAlignBottom(customProfileBalloon, circleImageView) // relay to customListBalloon&#xA;  .relayShowAlignTop(customTagBalloon, bottomNavigationView, 130, 0) // relay to customProfileBalloon&#xA;&#xA;// show sequentially customListBalloon-customProfileBalloon-customTagBalloon&#xA;customListBalloon.showAlignBottom(anchorView)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Note: The &lt;code&gt;relayShow__&lt;/code&gt; methods overwrites the &lt;code&gt;setOnDismissListener&lt;/code&gt; internally, so you can&#39;t use the &lt;code&gt;setOnDismissListener&lt;/code&gt; at the same time.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Width and height&lt;/h3&gt; &#xA;&lt;p&gt;We can adjust specific width and height sizes of Balloon with the below builder methods. If we don&#39;t set any specific sizes of the width and height of the Balloon, the size of the Balloon will be decided by the content.&lt;/p&gt; &#xA;&lt;h4&gt;Specific size&lt;/h4&gt; &#xA;&lt;p&gt;We can set specific sizes of the Balloon regardless size of the contents.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.setWidth(220) // sets 220dp width size.&#xA;balloon.setHeight(160) // sets 160dp height size.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Wrap Content Sizes&lt;/h4&gt; &#xA;&lt;p&gt;We can set dynamic sizes of Balloon, which depends on sizes of the internal content.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.setWidth(BalloonSizeSpec.WRAP) // sets width size depending on the content&#39;s size.&#xA;balloon.setHeight(BalloonSizeSpec.WRAP) // sets height size depending on the content&#39;s size.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Depending on Screen Size&lt;/h4&gt; &#xA;&lt;p&gt;Also, we can set the width size depending on the ratio of the screen&#39;s size (horizontal).&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.setWidthRatio(0.5f) // sets width as 50% of the horizontal screen&#39;s size.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Padding&lt;/h3&gt; &#xA;&lt;p&gt;Balloon wraps contents. We can adjust the content size of the Balloon by adding paddings on the content like.&lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.setPadding(6) // sets 6dp padding to all directions (left-top-right-bottom)&#xA;balloon.setPaddingLeft(8) // sets 8dp padding to content&#39;s left.&#xA;balloon.setPaddingTop(12) // sets 12dp padding to content&#39;s top.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Margin&lt;/h3&gt; &#xA;&lt;p&gt;If the location of the balloon according to the anchor would be located at the boundaries on the screen,&lt;br&gt; the balloon will be stick to the end of the screen. In this case, we can give horizontal margins to the balloon.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;.setMargin(12) // sets the margin on the balloon all directions.&#xA;.setMarginLeft(14) // sets the left margin on the balloon.&#xA;.setMarginRight(14) // sets the right margin on the balloon.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Arrow Composition&lt;/h3&gt; &#xA;&lt;p&gt;We can customize the arrow on the Balloon with various methods. For more details, check out the &lt;a href=&#34;https://skydoves.github.io/libraries/balloon/html/balloon/com.skydoves.balloon/-balloon/-builder/index.html&#34;&gt;Balloon.Builder&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;.setIsVisibleArrow(true) // sets the visibility of the arrow.&#xA;.setArrowSize(10) // sets the arrow size.&#xA;.setArrowSize(BalloonSizeSpec.WRAP) // sets arrow size depending on the original resources&#39; size.&#xA;.setArrowPosition(0.8f) // sets the arrow position using the popup size&#39;s ratio (0 ~ 1.0)&#xA;.setArrowOrientation(ArrowOrientation.TOP) // sets the arrow orientation. top, bottom, left, right&#xA;.setArrowDrawable(ContextCompat.getDrawable(context, R.drawable.arrow)) // sets the arrow drawable.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ArrowPositionRules&lt;/h4&gt; &#xA;&lt;p&gt;We can decide the position of the arrow depending on the aligning rules with the &lt;code&gt;ArrowPositionRules&lt;/code&gt;.&lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Align the arrow position depending on an anchor.&#xA;// if `arrowPosition` is 0.5, the arrow will be located in the middle of an anchor.&#xA;.setArrowPositionRules(ArrowPositionRules.ALIGN_ANCHOR) // default&#xA;&#xA;// Align the arrow position depending on the balloon popup body.&#xA;// if `arrowPosition` is 0.5, he arrow will be located in the middle of the tooltip.&#xA;.setArrowPositionRules(ArrowPositionRules.ALIGN_BALLOON)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;ArrowOrientationRules&lt;/h4&gt; &#xA;&lt;p&gt;We can decide the orientation of the arrow depending on the aligning rules with the &lt;code&gt;ArrowOrientationRules&lt;/code&gt;.&lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;// Align depending on the position of an anchor.&#xA;// For example, `arrowOrientation` is ArrowOrientation.TOP and &#xA;// we want to show up the balloon under an anchor using the `Balloon.showAlignBottom`.&#xA;// However, if there is not enough free space to place the tooltip at the bottom of the anchor,&#xA;// tooltips will be placed top of the anchor and the orientation of the arrow will be `ArrowOrientation.BOTTOM`.&#xA;.setArrowOrientationRules(ArrowOrientationRules.ALIGN_ANCHOR) // default&#xA;&#xA;// Align to fixed ArrowOrientation value.&#xA;.setArrowOrientationRules(ArrowOrientationRules.ALIGN_FIXED)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Below previews are shows examples of &lt;code&gt;setArrowOrientation&lt;/code&gt; and &lt;code&gt;setArrowPosition&lt;/code&gt; methods. &lt;br&gt; The &lt;code&gt;setArrowPosition&lt;/code&gt; measures the Balloon&#39;s size and sets the arrow&#39;s position with the ratio value.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Orientation: BOTTOM&lt;br&gt; Position: 0.62&lt;br&gt; showAlignTop&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Orientation: TOP&lt;br&gt; Position : 0.5&lt;br&gt; showAlignBottom&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Orientation: LEFT&lt;br&gt; Position: 0.5&lt;br&gt; showAlignRight&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Orientation: RIGHT&lt;br&gt; Position: 0.5&lt;br&gt; showAlignLeft&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/61320410-55120e80-a844-11e9-9af6-cae49b8897e7.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/61320412-55120e80-a844-11e9-9ca9-81375707886e.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/61320415-55aaa500-a844-11e9-874f-ca44be02aace.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/61320416-55aaa500-a844-11e9-9aa1-53e409ca63fb.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Text Composition&lt;/h3&gt; &#xA;&lt;p&gt;We can customize the text on the Balloon.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;.setText(&#34;You can edit your profile now!&#34;)&#xA;.setTextSize(15f)&#xA;.setTextTypeface(Typeface.BOLD)&#xA;.setTextColorResource(R.color.colorAccent))&#xA;.setTextGravity(Gravity.START)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If your text includes HTML tags, you can render the text by enabling HTML option with &lt;code&gt;setTextIsHtml&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;.setTextIsHtml(true)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This method will parse the text with the &lt;code&gt;Html.fromHtml(text)&lt;/code&gt; internally.&lt;/p&gt; &#xA;&lt;h3&gt;TextForm&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;TextForm&lt;/code&gt; has some attributes for &lt;code&gt;TextView&lt;/code&gt; to customize the text of the Balloon. You can create the &lt;code&gt;TextForm&lt;/code&gt; instance and reuse it on multiple Balloons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val textForm = TextForm.Builder(context)&#xA;  .setText(&#34;Edit you profile here!&#34;)&#xA;  .setTextColorResource(R.color.white_87)&#xA;  .setTextSize(14f)&#xA;  .setTextTypeface(Typeface.BOLD)&#xA;  .build()&#xA;&#xA;val balloon = Balloon.Builder(context)&#xA;  .setTextForm(textForm)&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Create TextForm with Kotlin DSL&lt;/summary&gt; &#xA; &lt;p&gt;You can create an instance of the &lt;code&gt;TextForm&lt;/code&gt; with Kotlin DSL as the example below:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val textForm = textForm(context) {&#xA;  setText(&#34;Edit you profile here!&#34;)&#xA;  setTextColorResource(R.color.white_87)&#xA;  setTextSize(14f)&#xA;  setTextTypeface(Typeface.BOLD)&#xA;}&#xA;&#xA;val balloon = Balloon.Builder(context)&#xA;  .setTextForm(textForm)&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Create TextForm with Java&lt;/summary&gt; &#xA; &lt;p&gt;You can create an instance of the &lt;code&gt;TextForm&lt;/code&gt; with Java as the example below:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;TextForm textForm = new TextForm.Builder(context)&#xA;  .setText(&#34;Edit you profile here!&#34;)&#xA;  .setTextColorResource(R.color.white_87)&#xA;  .setTextSize(14f)&#xA;  .setTextTypeface(Typeface.BOLD)&#xA;  .build();&#xA;&#xA;Balloon balloon = new Balloon.Builder(context)&#xA;  .setTextForm(textForm)&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Icon Composition&lt;/h3&gt; &#xA;&lt;p&gt;We can customize the icon on the balloon.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;.setIconSpace(10) // sets right margin of the icon.&#xA;.setIconSize(20) // sets size of the icon.&#xA;.setIconDrawable(ContextCompat.getDrawable(context, R.drawable.ic_edit)) // sets a drawable resource.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;IconForm&lt;/h3&gt; &#xA;&lt;p&gt;&lt;code&gt;IconForm&lt;/code&gt; has some attributes for &lt;code&gt;ImageView&lt;/code&gt; to customize the icon of the Balloon. You can create the &lt;code&gt;IconForm&lt;/code&gt; instance and reuse it on multiple Balloons.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val iconForm = IconForm.Builder(context)&#xA;  .setDrawable(ContextCompat.getDrawable(context, R.drawable.arrow))&#xA;  .setIconColor(ContextCompat.getColor(context, R.color.skyblue))&#xA;  .setIconSize(20)&#xA;  .setIconSize(12)&#xA;  .build()&#xA;&#xA;val balloon = Balloon.Builder(context)&#xA;  .setIconForm(iconForm)&#xA;  ...  &#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Create IconForm with Kotlin DSL&lt;/summary&gt; &#xA; &lt;p&gt;You can create an instance of the &lt;code&gt;IconForm&lt;/code&gt; with Kotlin DSL as the example below:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val iconForm = iconForm(context) {&#xA;  setDrawable(ContextCompat.getDrawable(context, R.drawable.arrow))&#xA;  setIconColor(ContextCompat.getColor(context, R.color.skyblue))&#xA;  setIconSize(20)&#xA;  setIconSize(12)&#xA;}&#xA;&#xA;val balloon = Balloon.Builder(context)&#xA;  .setIconForm(iconForm)&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Create IconForm with Java&lt;/summary&gt; &#xA; &lt;p&gt;You can create an instance of the &lt;code&gt;IconForm&lt;/code&gt; with Java as the example below:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;IconForm iconForm = new IconForm.Builder(context)&#xA;  .setDrawable(ContextCompat.getDrawable(context, R.drawable.arrow))&#xA;  .setIconColor(ContextCompat.getColor(context, R.color.skyblue))&#xA;  .setIconSize(20)&#xA;  .setIconSize(12)&#xA;  .build();&#xA;&#xA;Balloon balloon = new Balloon.Builder(context)&#xA;  .setIconForm(iconForm)&#xA;  ...&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;OnBalloonClickListener, OnBalloonDismissListener, OnBalloonOutsideTouchListener&lt;/h3&gt; &#xA;&lt;p&gt;We can listen to if the Balloon is clicked, dismissed, and touched outside with the below listeners.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;.setOnBalloonClickListener { Toast.makeText(context, &#34;clicked&#34;, Toast.LENGTH_SHORT).show() }&#xA;.setOnBalloonDismissListener { Toast.makeText(context, &#34;dismissed&#34;, Toast.LENGTH_SHORT).show() }&#xA;.setOnBalloonOutsideTouchListener { Toast.makeText(context, &#34;touched outside&#34;, Toast.LENGTH_SHORT).show() }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Set Listeners with Java&lt;/summary&gt; &#xA; &lt;p&gt;You can set listeners with Java as the example below:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;balloon.setOnBalloonClickListener(new OnBalloonClickListener() {&#xA;  @Override&#xA;  public void onBalloonClick() {&#xA;    // doSomething;&#xA;  }&#xA;});&#xA;    &#xA;balloon.setOnBalloonDismissListener(new OnBalloonDismissListener() {&#xA;  @Override&#xA;  public void onBalloonDismiss() {&#xA;    // doSomething;&#xA;  }&#xA;});&#xA;&#xA;balloon.setOnBalloonOutsideTouchListener(new OnBalloonOutsideTouchListener() {&#xA;  @Override&#xA;  public void onBalloonOutsideTouch() {&#xA;    // doSomething;&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Custom Balloon Layout&lt;/h3&gt; &#xA;&lt;p&gt;You can fully customize the layout of the Balloon with the method below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;.setLayout(R.layout.my_balloon_layout)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can build the Balloon with your own layout as the following example:&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/61226019-aba41d80-a75c-11e9-9362-52e4742244b5.gif&#34; align=&#34;right&#34; width=&#34;310px&#34;&gt; &#xA;&lt;p&gt;First, create your XML layout file like &lt;code&gt;layout_custom_profile&lt;/code&gt; on your taste and set it on the with &lt;code&gt;setLayout&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val balloon = Balloon.Builder(context)&#xA;  .setLayout(R.layout.layout_custom_profile)&#xA;  .setArrowSize(10)&#xA;  .setArrowOrientation(ArrowOrientation.TOP)&#xA;  .setArrowPosition(0.5f)&#xA;  .setWidthRatio(0.55f)&#xA;  .setHeight(250)&#xA;  .setCornerRadius(4f)&#xA;  .setBackgroundColor(ContextCompat.getColor(this, R.color.black))&#xA;  .setBalloonAnimation(BalloonAnimation.CIRCULAR)&#xA;  .setLifecycleOwner(lifecycleOwner)&#xA;  .build()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;That&#39;s all. If you need to get Views or need some interactions, you can get your custom layout with the &lt;code&gt;getContentView()&lt;/code&gt; method from your instance of the Balloon.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;val button: Button = &#xA;  balloon.getContentView().findViewById(R.id.button_edit)&#xA;button.setOnClickListener {&#xA;  Toast.makeText(context, &#34;Edit&#34;, Toast.LENGTH_SHORT).show()&#xA;  balloon.dismiss()&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Persistence&lt;/h3&gt; &#xA;&lt;p&gt;If you want to show up the Balloon only once or a specific number of times, you can implement it as the following example:&lt;br&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.setPreferenceName(&#34;MyBalloon&#34;) // sets preference name of the Balloon.&#xA;balloon.setShowCounts(3) // show-up three of times the popup. the default value is 1.&#xA;balloon.runIfReachedShowCounts {&#xA;  // do something after the preference showing counts is reached the goal.&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also, you can clear all persisted preferences with the method below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.clearAllPreferences()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Avoid Memory leak&lt;/h3&gt; &#xA;&lt;p&gt;Dialog, PopupWindow etc, can have memory leak issues if not dismissed before the activity or fragment is destroyed.&lt;br&gt; But Lifecycles are now integrated with the Support Library since Architecture Components 1.0 Stable was released.&lt;br&gt; So we can solve the memory leak issue very easily like the below.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;Just use &lt;code&gt;setLifecycleOwner&lt;/code&gt; method. Then the &lt;code&gt;dismiss()&lt;/code&gt; method will be called automatically before your activity or fragment would be destroyed.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;.setLifecycleOwner(lifecycleOwner)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Lazy initialization&lt;/h3&gt; &#xA;&lt;p&gt;You can initialize a property of the Balloon lazily with the &lt;code&gt;balloon()&lt;/code&gt; extension and &lt;code&gt;Balloon.Factory&lt;/code&gt; abstract class.&lt;br&gt; The &lt;code&gt;balloon()&lt;/code&gt; extension keyword can be used on your &lt;code&gt;Activity&lt;/code&gt;, &lt;code&gt;Fragment&lt;/code&gt;, and &lt;code&gt;View&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Before&lt;/strong&gt;&lt;br&gt; &lt;code&gt;CustomActivity.kt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class CustomActivity : AppCompatActivity() {&#xA;  private val profileBalloon by lazy { BalloonUtils.getProfileBalloon(context = this, lifecycleOwner = this) }&#xA;&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;After&lt;/strong&gt;&lt;br&gt; &lt;code&gt;CustomActivity.kt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class CustomActivity : AppCompatActivity() {&#xA;  private val profileBalloon by balloon&amp;lt;ProfileBalloonFactory&amp;gt;()&#xA;&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We should create a class which extends &lt;code&gt;Balloon.Factory&lt;/code&gt;.&lt;br&gt; An implementation class of the factory must have a default(non-argument) constructor. &lt;br&gt;&lt;br&gt; &lt;code&gt;ProfileBalloonFactory.kt&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;class ProfileBalloonFactory : Balloon.Factory() {&#xA;&#xA;  override fun create(context: Context, lifecycle: LifecycleOwner): Balloon {&#xA;    return createBalloon(context) {&#xA;      setLayout(R.layout.layout_custom_profile)&#xA;      setArrowSize(10)&#xA;      setArrowOrientation(ArrowOrientation.TOP)&#xA;      setArrowPosition(0.5f)&#xA;      setWidthRatio(0.55f)&#xA;      setHeight(250)&#xA;      setCornerRadius(4f)&#xA;      setBackgroundColor(ContextCompat.getColor(context, R.color.background900))&#xA;      setBalloonAnimation(BalloonAnimation.CIRCULAR)&#xA;      setLifecycleOwner(lifecycle)&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;BalloonOverlay&lt;/h3&gt; &#xA;&lt;p&gt;We can show up an overlay over the whole screen except an anchor view.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.setIsVisibleOverlay(true) // sets the visibility of the overlay for highlighting an anchor.&#xA;balloon.setOverlayColorResource(R.color.overlay) // background color of the overlay using a color resource.&#xA;balloon.setOverlayPadding(6f) // sets a padding value of the overlay shape internally.  &#xA;balloon.setOverlayPaddingColorResource(R.color.colorPrimary) // sets color of the overlay padding using a color resource.&#xA;balloon.setBalloonOverlayAnimation(BalloonOverlayAnimation.FADE) // default is fade.&#xA;balloon.setDismissWhenOverlayClicked(false) // disable dismissing the balloon when the overlay is clicked.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can change the shape of the highlighting using the &lt;code&gt;.setOverlayShape&lt;/code&gt; method.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.setOverlayShape(BalloonOverlayOval) // default shape&#xA;balloon.setOverlayShape(BalloonOverlayRect)&#xA;balloon.setOverlayShape(BalloonOverlayCircle(radius = 36f))&#xA;balloon.setOverlayShape(BalloonOverlayRoundRect(12f, 12f))&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;OVAL&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CIRCLE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;RECT&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;ROUNDRECT&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/96139366-c7870800-0f39-11eb-9542-e98eac7ef193.gif&#34; align=&#34;center&#34; width=&#34;280px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/96138448-c0abc580-0f38-11eb-92e6-daf2f8266a3e.gif&#34; align=&#34;center&#34; width=&#34;280px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/96139358-c524ae00-0f39-11eb-82ff-90a4a734e076.gif&#34; align=&#34;center&#34; width=&#34;280px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/96138463-c3a6b600-0f38-11eb-8a2d-57cf96c4190c.gif&#34; align=&#34;center&#34; width=&#34;280px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;Also, we can set the specific position of the overlay shape with the method below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;balloon.setOverlayPosition(Point(x, y)) // sets a specific position of the overlay shape.&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;BalloonAnimation&lt;/h3&gt; &#xA;&lt;p&gt;We can implement popup animations while showing and dismissing.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;BalloonAnimation.NONE&#xA;BalloonAnimation.FADE&#xA;BalloonAnimation.OVERSHOOT&#xA;BalloonAnimation.ELASTIC&#xA;BalloonAnimation.CIRCULAR&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;FADE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;OVERSHOOT&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;ELASTIC&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;CIRCULAR&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/74601168-6115c580-50de-11ea-817b-a334f33b6f96.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/74601171-6410b600-50de-11ea-9ba0-5634e11f148a.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/74601170-63781f80-50de-11ea-8db4-93f1dd1291fc.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/74607359-b6bc9300-511b-11ea-978b-23bcc4399dce.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;BalloonHighlightAnimation&lt;/h3&gt; &#xA;&lt;p&gt;We can give a repeated dynamic animations to the Balloon while it&#39;s showing up. The animation would work differently by the position of the arrow.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;HEARTBEAT&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;SHAKE&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;BREATH&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;ROTATE&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/135755074-6a9c87fc-55b2-460e-b34e-0b6808684a97.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/135755077-02eeddbe-95fe-49ee-ad22-1f15879e84f1.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/135755079-29ed8cd8-92fe-4b2a-8671-b3522999c551.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/135755080-36dc7c8b-063a-442b-bcbd-bc000e92f9ac.gif&#34; align=&#34;center&#34; width=&#34;100%&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;BalloonHighlightAnimation.NONE&#xA;BalloonHighlightAnimation.HEARTBEAT&#xA;BalloonHighlightAnimation.SHAKE&#xA;BalloonHighlightAnimation.BREATH&#xA;BalloonHighlightAnimation.ROTATE&#xA;&#xA;.setBalloonHighlightAnimation(BalloonHighlightAnimation.SHAKE)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;We can implement the rotate animation like the example below:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-kotlin&#34;&gt;.setBalloonHighlightAnimation(BalloonHighlightAnimation.ROTATE)&#xA;.setBalloonRotationAnimation(&#xA;        BalloonRotateAnimation.Builder().setLoops(2).setSpeeds(2500).setTurns(INFINITE).build())&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Balloon builder methods&lt;/h2&gt; &#xA;&lt;p&gt;For more details, you can check out the documentations below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skydoves.github.io/libraries/balloon/html/balloon/com.skydoves.balloon/-balloon/index.html&#34;&gt;Balloon documentations&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://skydoves.github.io/libraries/balloon/html/balloon/com.skydoves.balloon/-balloon/-builder/index.html&#34;&gt;Builder documentations&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;.setWidth(value: Int)&#xA;.setWidthRatio(@FloatRange(from = 0.0, to = 1.0) value: Float)&#xA;.setHeight(value: Int)&#xA;.setSize(value: Int, value: Int)&#xA;.setSpace(value: Int)&#xA;.setPadding(value: Int)&#xA;.setPaddingLeft(value: Int)&#xA;.setPaddingTop(value: Int)&#xA;.setPaddingRight(value: Int)&#xA;.setPaddingBottom(value: Int)&#xA;.setMargin(value: Int)&#xA;.setMarginLeft(value: Int)&#xA;.setMarginTop(value: Int)&#xA;.setMarginRight(value: Int)&#xA;.setMarginBottom(value: Int)&#xA;.setElevation(value: Int)&#xA;.setIsVisibleArrow(value: Boolean)&#xA;.setArrowSize(value: Int)&#xA;.setArrowPosition(@FloatRange(from = 0.0, to = 1.0) value: Float)&#xA;.setArrowOrientation(value: ArrowOrientation)&#xA;.setArrowPositionRules(ArrowPositionRules.ALIGN_ANCHOR)&#xA;.setArrowColor(value: Int)&#xA;.setArrowColorResource(@ColorRes value: Int)&#xA;.setArrowDrawable(value: Drawable?)&#xA;.setArrowDrawableResource(@DrawableRes value: Int)&#xA;.setArrowAlignAnchorPadding(value: Int)&#xA;.setArrowAlignAnchorPaddingRatio(value: Float)&#xA;.setBackgroundColor(value: Int)&#xA;.setBackgroundColorResource(@ColorRes value: Int)&#xA;.setBackgroundDrawable(value: Drawable?)&#xA;.setBackgroundDrawableResource(@DrawableRes value: Int)&#xA;.setCornerRadius(value: Float)&#xA;.setText(value: String)&#xA;.setTextResource(value: Int)&#xA;.setTextColor(value: Int)&#xA;.setTextColorResource(value: Int)&#xA;.setTextSize(value: Float)&#xA;.setTextTypeface(value: Int)&#xA;.setTextGravity(value: Int)&#xA;.setTextForm(value: TextForm)&#xA;.setIconDrawable(value: Drawable?)&#xA;.setIconDrawableResource(@DrawableRes value: Int)&#xA;.setIconSize(value: Int)&#xA;.setIconWidth(value: Int)&#xA;.setIconHeight(value: Int)&#xA;.setIconColor(value: Int)&#xA;.setIconColorResource(@ColorRes value: Int)&#xA;.setIconSpace(value: Int)&#xA;.setIconForm(value: IconForm)&#xA;.setIconGravity(value: IconGravity)&#xA;.setAlpha(@FloatRange(from = 0.0, to = 1.0) value: Float)&#xA;.setLayout(@LayoutRes layout: Int)&#xA;.setIsVisibleOverlay(value: Boolean)&#xA;.setOverlayColor(@ColorInt value: Int)&#xA;.setOverlayColorResource(@ColorRes value: Int)&#xA;.setOverlayPadding(@Dp value: Float)&#xA;.setOverlayPosition(value: Point)&#xA;.setOverlayShape(value: BalloonOverlayShape)&#xA;.setPreferenceName(value: String)&#xA;.setShowCount(value: Int)&#xA;.setFocusable(value: Boolean)&#xA;.setLifecycleOwner(value: LifecycleOwner)&#xA;.setDismissWhenClicked(value: Boolean)&#xA;.setDismissWhenLifecycleOnPause(value: Boolean)&#xA;.setDismissWhenTouchOutside(value: Boolean)&#xA;.setDismissWhenShowAgain(value: Boolean)&#xA;.setDismissWhenOverlayClicked(value: Boolean)&#xA;.setBalloonAnimation(value: BalloonAnimation)&#xA;.setOnBalloonClickListener(value: OnBalloonClickListener)&#xA;.setOnBalloonDismissListener(value: OnBalloonDismissListener)&#xA;.setOnBalloonInitializedListener(value: OnBalloonInitializedListener)&#xA;.setOnBalloonOutsideTouchListener(value: OnBalloonOutsideTouchListener)&#xA;.setOnBalloonOverlayClickListener(value: OnBalloonOverlayClickListener)&#xA;.setDismissWhenTouchOutside(value: Boolean)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Find this library useful? &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/balloon/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;‚≠ê&lt;/span&gt;&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;Copyright 2019 skydoves (Jaewoong Eum)&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>