<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2023-02-05T08:42:01Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>vitorpamplona/amethyst</title>
    <updated>2023-02-05T08:42:01Z</updated>
    <id>tag:github.com,2023-02-05:/vitorpamplona/amethyst</id>
    <link href="https://github.com/vitorpamplona/amethyst" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Nostr client for Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Amethyst: Nostr client for Android&lt;/h1&gt; &#xA;&lt;img align=&#34;right&#34; src=&#34;https://raw.githubusercontent.com/vitorpamplona/amethyst/main/docs/screenshots/home.png&#34; data-canonical-src=&#34;./docs/screenshots/home.png&#34; width=&#34;350px&#34;&gt; &#xA;&lt;p&gt;Amethyst brings the best social network to your Android phone. Just insert your Nostr private key and start posting.&lt;/p&gt; &#xA;&lt;h1&gt;Current Features&lt;/h1&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Account Management&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Home Feed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Notifications Feed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Global Feed&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Reactions (like, boost, reply)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Image Preview (gifs, svgs)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Url Preview&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; View Threads&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Private Messages (NIP-04)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; User Profiles (follow/unfollow)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; Public Chats (NIP-28)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Notification Bubbles&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Infinity Scroll&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Dropdown to Link Users/Posts when writing&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Identity Verification (NIP-05)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Event Delegation (NIP-09)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Filter messages from Unknown People&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Profile Edit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Relay Edit&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Account Creation / Backup Guidance&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; Message Sent feedback&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Development Overview&lt;/h1&gt; &#xA;&lt;h2&gt;Overall Architecture&lt;/h2&gt; &#xA;&lt;p&gt;This is a native Android app made with Kotlin and Jetpack Compose. The app uses a modified version of the &lt;a href=&#34;https://github.com/Giszmo/NostrPostr/tree/master/nostrpostrlib&#34;&gt;nostrpostrlib&lt;/a&gt; to talk to Nostr relays. The overall architecture consists in the UI, which uses the usual State/ViewModel/Composition, the service layer that connects with Nostr relays, and the model/repository layer, which keeps all Nostr objects in memory, in a full OO graph.&lt;/p&gt; &#xA;&lt;p&gt;The repository layer stores Nostr Events as Notes and Users separately. Those classes use LiveData objects to allow the UI and other parts of the app to subscribe to each individual Note/User and receive updates when they happen. They are also responsible for updating viewModels when needed. Filters react to changes in the screen. As the user sees different Events, the Datasource classes are used to receive more information about those particular Events.&lt;/p&gt; &#xA;&lt;p&gt;Most of the UI is reactive to changes in the repository classes. The service layer assembles Nostr filters for each need of the app, receives the data from the Relay, and sends it to the repository. Connection with relays is never closed during the use of the app. The UI receives a notification that objects were updated. Instances of User and Notes are mutable directly. There will never be two Notes with the same ID or two User instances with the same pubkey.&lt;/p&gt; &#xA;&lt;p&gt;Lastly, the user&#39;s account information (priv key/pub key) is stored in the Android KeyStore for security.&lt;/p&gt; &#xA;&lt;h2&gt;Setup&lt;/h2&gt; &#xA;&lt;p&gt;Make sure to have the following pre-requisites installed:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Java 11&lt;/li&gt; &#xA; &lt;li&gt;Android Studio&lt;/li&gt; &#xA; &lt;li&gt;Android 8.0+ Phone or Emulation setup&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;Fork and clone this repository and import into Android Studio&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/vitorpamplona/amethyst.git&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Use one of the Android Studio builds to install and run the app in your device or a simulator.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;Build the app:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew assembleDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew test&#xA;./gradlew connectedAndroidTest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installing on device&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew installDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;How to Deploy&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Generate a new signing key&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;keytool -genkey -v -keystore &amp;lt;my-release-key.keystore&amp;gt; -alias &amp;lt;alias_name&amp;gt; -keyalg RSA -keysize 2048 -validity 10000&#xA;openssl base64 &amp;lt; &amp;lt;my-release-key.keystore&amp;gt; | tr -d &#39;\n&#39; | tee some_signing_key.jks.base64.txt&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;2&#34;&gt; &#xA; &lt;li&gt;Create 4 Secret Key variables on your GitHub repository and fill in with the signing key information &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;KEY_ALIAS&lt;/code&gt; &amp;lt;- &lt;code&gt;&amp;lt;alias_name&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KEY_PASSWORD&lt;/code&gt; &amp;lt;- &lt;code&gt;&amp;lt;your password&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;KEY_STORE_PASSWORD&lt;/code&gt; &amp;lt;- &lt;code&gt;&amp;lt;your key store password&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;SIGNING_KEY&lt;/code&gt; &amp;lt;- the data from &lt;code&gt;&amp;lt;my-release-key.keystore&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Change the &lt;code&gt;versionCode&lt;/code&gt; and &lt;code&gt;versionName&lt;/code&gt; on &lt;code&gt;app/build.gradle&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Commit and push.&lt;/li&gt; &#xA; &lt;li&gt;Tag the commit with &lt;code&gt;v{x.x.x}&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Let the &lt;a href=&#34;https://github.com/vitorpamplona/amethyst/actions/workflows/create-release.yml&#34;&gt;Create Release GitHub Action&lt;/a&gt; build a new &lt;code&gt;aab&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Add your CHANGE LOG to the description of the new release&lt;/li&gt; &#xA; &lt;li&gt;Download the &lt;code&gt;aab&lt;/code&gt; file and upload it to the` PlayStore.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vitorpamplona/amethyst/issues&#34;&gt;Issues&lt;/a&gt; and &lt;a href=&#34;https://github.com/vitorpamplona/amethyst/pulls&#34;&gt;pull requests&lt;/a&gt; are very welcome.&lt;/p&gt; &#xA;&lt;h1&gt;MIT License&lt;/h1&gt; &#xA;&lt;p&gt;Copyright (c) 2023 Vitor Pamplona&lt;/p&gt; &#xA;&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &#34;Software&#34;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt; &#xA;&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt; &#xA;&lt;p&gt;THE SOFTWARE IS PROVIDED &#34;AS IS&#34;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>pinterest/ktlint</title>
    <updated>2023-02-05T08:42:01Z</updated>
    <id>tag:github.com,2023-02-05:/pinterest/ktlint</id>
    <link href="https://github.com/pinterest/ktlint" rel="alternate"></link>
    <summary type="html">&lt;p&gt;An anti-bikeshedding Kotlin linter with built-in formatter&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; &lt;a href=&#34;https://pinterest.github.io/ktlint/&#34;&gt; &lt;img src=&#34;https://cloud.githubusercontent.com/assets/370176/26518284/38b680da-4262-11e7-8d27-2b9e849fb55f.png&#34;&gt; &lt;/a&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://kotlinlang.slack.com/messages/CKS3XG0LS&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/slack-@kotlinlang/ktlint-yellow.svg?logo=slack&#34; alt=&#34;Join the chat at https://kotlinlang.slack.com&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pinterest/ktlint/actions?query=workflow%3A%22Snapshot+Publish%22&#34;&gt;&lt;img src=&#34;https://github.com/pinterest/ktlint/workflows/Snapshot%20Publish/badge.svg?sanitize=true&#34; alt=&#34;Build status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.pinterest%22%20AND%20a%3A%22ktlint%22&#34;&gt;&lt;img src=&#34;https://img.shields.io/maven-central/v/com.pinterest/ktlint.svg?sanitize=true&#34; alt=&#34;Maven Central&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://pinterest.github.io/ktlint/&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/code%20style-%E2%9D%A4-FF4081.svg?sanitize=true&#34; alt=&#34;ktlint&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://kotlinlang.org/&#34;&gt;Kotlin&lt;/a&gt; linter in spirit of &lt;a href=&#34;https://github.com/standard/standard&#34;&gt;standard/standard&lt;/a&gt; (JavaScript) and &lt;a href=&#34;https://golang.org/cmd/gofmt/&#34;&gt;gofmt&lt;/a&gt; (Go). &lt;/p&gt; &#xA;&lt;h2&gt;Key features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No configuration required&lt;/li&gt; &#xA; &lt;li&gt;Built-in Rule sets&lt;/li&gt; &#xA; &lt;li&gt;Built-in formatter&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;.editorconfig&lt;/code&gt; support&lt;/li&gt; &#xA; &lt;li&gt;Several built-in reporters: &lt;code&gt;plain&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;checkstyle&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Executable jar&lt;/li&gt; &#xA; &lt;li&gt;Allows extension with custom rule sets and reporters&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pinterest.github.io/ktlint/&#34;&gt;User guide&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Legal&lt;/h3&gt; &#xA;&lt;p&gt;This project is not affiliated with nor endorsed by JetBrains.&lt;br&gt; All code, unless specified otherwise, is licensed under the &lt;a href=&#34;https://opensource.org/licenses/MIT&#34;&gt;MIT&lt;/a&gt; license.&lt;br&gt; Copyright (c) 2019 Pinterest, Inc.&lt;br&gt; Copyright (c) 2016-2019 Stanley Shyiko.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>skydoves/chatgpt-android</title>
    <updated>2023-02-05T08:42:01Z</updated>
    <id>tag:github.com,2023-02-05:/skydoves/chatgpt-android</id>
    <link href="https://github.com/skydoves/chatgpt-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📱 ChatGPT Android demonstrates OpenAI&#39;s ChatGPT on Android with Stream Chat SDK for Compose.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/207994894-0cd5307b-f62e-4c38-be89-610a3ed459c0.jpg&#34; alt=&#34;cover&#34;&gt;&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://opensource.org/licenses/Apache-2.0&#34;&gt;&lt;img alt=&#34;License&#34; src=&#34;https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://android-arsenal.com/api?level=21&#34;&gt;&lt;img alt=&#34;API&#34; src=&#34;https://img.shields.io/badge/API-21%2B-brightgreen.svg?style=flat&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves/chatgpt-android/actions/workflows/android.yml&#34;&gt;&lt;img alt=&#34;Build Status&#34; src=&#34;https://github.com/skydoves/chatgpt-android/actions/workflows/android.yml/badge.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/skydoves&#34;&gt;&lt;img alt=&#34;Profile&#34; src=&#34;https://skydoves.github.io/badges/skydoves.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; demonstrates &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;OpenAI&#39;s ChatGPT&lt;/a&gt; on Android with &lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Stream Chat SDK for Compose&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The purpose of this repository is to demonstrate below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Demonstrates &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt;&#39;s unofficial APIs.&lt;/li&gt; &#xA; &lt;li&gt;Implementing entire UI elements with Jetpack Compose.&lt;/li&gt; &#xA; &lt;li&gt;Implementation of Android architecture components with Jetpack libraries such as Hilt and AppStartup.&lt;/li&gt; &#xA; &lt;li&gt;Performing background tasks with Kotlin Coroutines.&lt;/li&gt; &#xA; &lt;li&gt;Integrating chat systems with Stream Chat SDK for real-time event handling.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📷 Previews&lt;/h2&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview0.png&#34; alt=&#34;drawing&#34; width=&#34;270px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview1.png&#34; alt=&#34;drawing&#34; width=&#34;270px&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/previews/preview2.gif&#34; alt=&#34;drawing&#34; width=&#34;269px&#34;&gt;&lt;br&gt; &lt;/p&gt; &#xA;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt; &lt;img src=&#34;https://user-images.githubusercontent.com/24237865/138428440-b92e5fb7-89f8-41aa-96b1-71a5486c5849.png&#34; align=&#34;right&#34; width=&#34;12%&#34;&gt; &lt;/a&gt; &#xA;&lt;h2&gt;🛥 Stream Chat SDK&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; is built with &lt;strong&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Stream Chat SDK for Compose&lt;/a&gt;&lt;/strong&gt; to implement messaging systems. If you’re interested in adding powerful In-App Messaging to your app, check out the &lt;strong&gt;&lt;a href=&#34;https://getstream.io/tutorials/android-chat?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Android Chat Messaging Tutorial&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getStream/stream-chat-android&#34;&gt;Stream Chat SDK for Android on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/getStream/android-samples&#34;&gt;Android Samples for Stream Chat SDK on GitHub&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getstream.io/chat/docs/sdk/android/compose/overview/&#34;&gt;Stream Chat Compose UI Componenets Guidelines&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;📲 Download APK&lt;/h2&gt; &#xA;&lt;p&gt;Go to the &lt;a href=&#34;https://github.com/skydoves/chatgpt-android/releases&#34;&gt;Releases&lt;/a&gt; to download the latest APK.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This app is using unofficial APIs, so normally it takes 10~15 seconds to get the entire response and the app might not work as your expected anytime.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;💻 How to build the project?&lt;/h2&gt; &#xA;&lt;p&gt;To build this project properly, you should follow the instructions below:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;strong&gt;&lt;a href=&#34;https://getstream.io/try-for-free?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong_ChatGPT&amp;amp;utm_term=DevRelOss&#34;&gt;Stream login page&lt;/a&gt;&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;If you have your GitHub account, click the &lt;strong&gt;SIGN UP WITH GITHUB&lt;/strong&gt; button and you can sign up within a couple of seconds.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/stream0.png&#34; alt=&#34;stream&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;If you don&#39;t have a GitHub account, fill in the inputs and click the &lt;strong&gt;START FREE TRIAL&lt;/strong&gt; button.&lt;/li&gt; &#xA; &lt;li&gt;Go to the &lt;strong&gt;&lt;a href=&#34;https://dashboard.getstream.io?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong_ChatGPT&amp;amp;utm_term=DevRelOss&#34;&gt;Dashboard&lt;/a&gt;&lt;/strong&gt; and click the &lt;strong&gt;Create App&lt;/strong&gt; button like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/stream1.png&#34; alt=&#34;stream&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;Fill in the blanks like the below and click the &lt;strong&gt;Create App&lt;/strong&gt; bitton.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/stream2.png&#34; alt=&#34;stream&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;6&#34;&gt; &#xA; &lt;li&gt;You will see the &lt;strong&gt;Key&lt;/strong&gt; like the figure below and then copy it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/stream3.png&#34; alt=&#34;stream&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;7&#34;&gt; &#xA; &lt;li&gt;Add the key on your &lt;code&gt;local.properties&lt;/code&gt; file on the project (Android Studio) like the below.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/stream5.png&#34; alt=&#34;stream&#34;&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-gradle&#34;&gt;STREAM_CHAT_SDK=..&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ol start=&#34;8&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Go to your &lt;strong&gt;&lt;a href=&#34;https://dashboard.getstream.io?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong_ChatGPT&amp;amp;utm_term=DevRelOss&#34;&gt;Dashboard&lt;/a&gt;&lt;/strong&gt; again and click your App.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;In the &lt;strong&gt;Overview&lt;/strong&gt; menu, you can find the &lt;strong&gt;Authentication&lt;/strong&gt; category by scrolling to the middle of the page.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Switch on the &lt;strong&gt;Disable Auth Checks&lt;/strong&gt; option and click the &lt;strong&gt;Submit&lt;/strong&gt; button like the figure below.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/stream4.png&#34; alt=&#34;stream&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;11&#34;&gt; &#xA; &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;Explorer&lt;/strong&gt; tab on the left side menu.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Click &lt;strong&gt;users&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Create New User&lt;/strong&gt; button sequentially and add fill in the user like the below:&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/stream6.png&#34; alt=&#34;stream&#34;&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;User Name: &lt;code&gt;Chat GPT&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;User ID: &lt;code&gt;70ef052a-da88-4451-af92-99f7ed335a71&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;ol start=&#34;13&#34;&gt; &#xA; &lt;li&gt;Build and run the project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;⚙️ How to run the application?&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Go to the &lt;a href=&#34;https://chat.openai.com/chat&#34;&gt;ChatGPT&lt;/a&gt; website and click the &lt;strong&gt;Sign up&lt;/strong&gt; button.&lt;/li&gt; &#xA; &lt;li&gt;Create your account &lt;strong&gt;with an Email Address, not your Google or Microsoft account&lt;/strong&gt; like the one below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/login2.png&#34; alt=&#34;login&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;3&#34;&gt; &#xA; &lt;li&gt;After finishing the additional steps, go back to the application screen like the below:&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/login0.png&#34; alt=&#34;login&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;4&#34;&gt; &#xA; &lt;li&gt;Then click the &lt;strong&gt;Log in&lt;/strong&gt; button and type your account information like the below. You must log in with your &lt;strong&gt;Email address, not your Google or Microsoft account&lt;/strong&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/login1.png&#34; alt=&#34;login&#34;&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;5&#34;&gt; &#xA; &lt;li&gt;If you login correctly, you will get the success toast message and move to the channel list screen.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;🛠 Tech Stack &amp;amp; Open Source Libraries&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Minimum SDK level 21.&lt;/li&gt; &#xA; &lt;li&gt;100% &lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Jetpack Compose&lt;/a&gt; based + &lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;Coroutines&lt;/a&gt; + &lt;a href=&#34;https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.flow/&#34;&gt;Flow&lt;/a&gt; for asynchronous.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://getstream.io/chat/sdk/compose?utm_source=Github&amp;amp;utm_medium=Github_Repo_Content_Ad&amp;amp;utm_content=Developer&amp;amp;utm_campaign=Github_Dec2022_Jaewoong&amp;amp;utm_term=DevRelOss&#34;&gt;Compose Chat SDK for Messaging&lt;/a&gt;: The Jetpack Compose Chat Messaging SDK is built on a low-level chat client and provides modular, customizable Compose UI components that you can easily drop into your app.&lt;/li&gt; &#xA; &lt;li&gt;Jetpack &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Compose: Android’s modern toolkit for building native UI.&lt;/li&gt; &#xA;   &lt;li&gt;ViewModel: UI related data holder and lifecycle aware.&lt;/li&gt; &#xA;   &lt;li&gt;App Startup: Provides a straightforward, performant way to initialize components at application startup.&lt;/li&gt; &#xA;   &lt;li&gt;Navigation: For navigating screens and &lt;a href=&#34;https://developer.android.com/jetpack/compose/libraries#hilt&#34;&gt;Hilt Navigation Compose&lt;/a&gt; for injecting dependencies.&lt;/li&gt; &#xA;   &lt;li&gt;Room: Constructs Database by providing an abstraction layer over SQLite to allow fluent database access.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://dagger.dev/hilt/&#34;&gt;Hilt&lt;/a&gt;: Dependency Injection.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skydoves/landscapist#glide&#34;&gt;Landscapist Glide&lt;/a&gt;, &lt;a href=&#34;https://github.com/skydoves/landscapist#animation&#34;&gt;animation&lt;/a&gt;, &lt;a href=&#34;https://github.com/skydoves/landscapist#placeholder&#34;&gt;placeholder&lt;/a&gt;: Jetpack Compose image loading library that fetches and displays network images with Glide, Coil, and Fresco.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/retrofit&#34;&gt;Retrofit2 &amp;amp; OkHttp3&lt;/a&gt;: Construct the REST APIs and paging network data.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skydoves/Sandwich&#34;&gt;Sandwich&lt;/a&gt;: Construct a lightweight and modern response interface to handle network payload for Android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/square/moshi/&#34;&gt;Moshi&lt;/a&gt;: A modern JSON library for Kotlin and Java.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/google/ksp&#34;&gt;ksp&lt;/a&gt;: Kotlin Symbol Processing API.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skydoves/balloon&#34;&gt;Balloon&lt;/a&gt;: Modernized and sophisticated tooltips, fully customizable with an arrow and animations for Android.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/skydoves/viewmodel-lifecycle&#34;&gt;viewmodel-lifecycle&lt;/a&gt;: ViewModel Lifecycle allows you to track and observe Jetpack&#39;s ViewModel lifecycle changes.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/GetStream/stream-log&#34;&gt;StreamLog&lt;/a&gt;: A lightweight and extensible logger library for Kotlin and Android.&lt;/li&gt; &#xA; &lt;li&gt;Baseline Profiles: To improve app performance by including a list of classes and methods specifications in your APK that can be used by Android Runtime.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🏛️ Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; follows the &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;Google&#39;s official architecture guidance&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure0.png&#34; alt=&#34;architecture&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; was built with &lt;a href=&#34;https://developer.android.com/topic/architecture&#34;&gt;Guide to app architecture&lt;/a&gt;, so it would be a great sample to show how the architecture works in real-world projects.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;The overall architecture is composed of two layers; UI Layer and the data layer. Each layer has dedicated components and they each have different responsibilities. The arrow means the component has a dependency on the target component following its direction.&lt;/p&gt; &#xA;&lt;h3&gt;Architecture Overview&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure1.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Each layer has different responsibilities below. Basically, they follow &lt;a href=&#34;https://developer.android.com/topic/architecture/ui-layer#udf&#34;&gt;unidirectional event/data flow&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;UI Layer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure2.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The UI Layer consists of UI elements like buttons, menus, tabs that could interact with users and &lt;a href=&#34;https://developer.android.com/topic/libraries/architecture/viewmodel&#34;&gt;ViewModel&lt;/a&gt; that holds app states and restores data when configuration changes.&lt;/p&gt; &#xA;&lt;h3&gt;Data Layer&lt;/h3&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure3.png&#34; alt=&#34;layer&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;The data Layer consists of repositories, which include business logic, such as querying data from the local database and requesting remote data from the network. It is implemented as an offline-first source of business logic and follows the &lt;a href=&#34;https://en.wikipedia.org/wiki/Single_source_of_truth&#34;&gt;single source of truth&lt;/a&gt; principle.&lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;For more information about the overall architecture, check out &lt;strong&gt;&lt;a href=&#34;https://getstream.io/blog/build-whatsapp-clone/&#34;&gt;Build a Real-Time WhatsApp Clone With Jetpack Compose&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Modularization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/skydoves/chatgpt-android/main/figures/figure4.png&#34; alt=&#34;modules&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;ChatGPT Android&lt;/strong&gt; adopted modularization strategies below:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reusability&lt;/strong&gt;: Modulizing reusable codes properly enable opportunities for code sharing and limits code accessibility in other modules at the same time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Parallel Building&lt;/strong&gt;: Each module can be run in parallel and it reduces the build time.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Decentralized focusing&lt;/strong&gt;: Each developer team can assign their dedicated module and they can focus on their own modules.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;💯 MAD Score&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/24237865/158918011-bc766482-ec83-47dd-9237-d8a226cab263.png&#34; alt=&#34;summary&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;🤝 Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Most of the features are not completed except the chat feature, so anyone can contribute and improve this project following the &lt;a href=&#34;https://github.com/skydoves/chatgpt-android/raw/main/CONTRIBUTING.md&#34;&gt;Contributing Guideline&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Find this repository useful? 💙&lt;/h2&gt; &#xA;&lt;p&gt;Support it by joining &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves/chatgpt-android/stargazers&#34;&gt;stargazers&lt;/a&gt;&lt;/strong&gt; for this repository. &lt;span&gt;⭐&lt;/span&gt; &lt;br&gt; Also, &lt;strong&gt;&lt;a href=&#34;https://github.com/skydoves&#34;&gt;follow me&lt;/a&gt;&lt;/strong&gt; on GitHub for my next creations! 🤩&lt;/p&gt; &#xA;&lt;h1&gt;License&lt;/h1&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;Designed and developed by 2022 skydoves (Jaewoong Eum)&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;   http://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
</feed>