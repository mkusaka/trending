<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub Kotlin Weekly Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2024-02-11T01:48:09Z</updated>
  <subtitle>Weekly Trending of Kotlin in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>msasikanth/twine</title>
    <updated>2024-02-11T01:48:09Z</updated>
    <id>tag:github.com,2024-02-11:/msasikanth/twine</id>
    <link href="https://github.com/msasikanth/twine" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Twine: A multiplatform RSS reader built using Kotlin and Compose&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Twine - RSS Reader&lt;/h1&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/msasikanth/twine/actions/workflows/ci_checks.yml/badge.svg?branch=main&#34; alt=&#34;CI-MAIN&#34;&gt; &lt;a href=&#34;https://github.com/sponsors/msasikanth&#34;&gt;&lt;img src=&#34;https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;color=%23fe8e86&#34; alt=&#34;Sponsor&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/banner.png&#34; alt=&#34;banner&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Twine is a multiplatform RSS reader app built using Kotlin and Compose Multiplatform. It features an nice user interface and experience to browse through the feeds, and supports Material 3 content based &lt;a href=&#34;https://m3.material.io/styles/color/dynamic-color/user-generated-color&#34;&gt;dynamic theming&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=dev.sasikanth.rss.reader&amp;amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&#34;&gt;&lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;200px&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://apps.apple.com/us/app/twine-rss-reader/id6465694958?itsct=apps_box_badge&amp;amp;itscg=30200&#34; style=&#34;display: inline-block; overflow: hidden; border-radius: 13px;&#34;&gt;&lt;img src=&#34;https://tools.applemediaservices.com/api/badges/download-on-the-app-store/white/en-us;releaseDate=1694390400&#34; alt=&#34;Download on the App Store&#34; width=&#34;200px&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;p style=&#34;text-align: center;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/home.png&#34; width=&#34;250&#34; alt=&#34;Home Screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/home_scrolled.png&#34; width=&#34;250&#34; alt=&#34;Home Screen Scrolled&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/feeds_sheet.png&#34; width=&#34;250&#34; alt=&#34;Feeds Sheet&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/feeds_sheet_add_feed.png&#34; width=&#34;250&#34; alt=&#34;Add Feed&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/feeds_sheet_edit.png&#34; width=&#34;250&#34; alt=&#34;Edit Feeds&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/search.png&#34; width=&#34;250&#34; alt=&#34;Search Screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/bookmarks.png&#34; width=&#34;250&#34; alt=&#34;Bookmarks Screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/settings.png&#34; width=&#34;250&#34; alt=&#34;Settings Screen&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/readme_images/reader_screen.png&#34; width=&#34;250&#34; alt=&#34;Reader Screen&#34;&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Features ‚ú®&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Supports RSS &amp;amp; Atom feeds&lt;/li&gt; &#xA; &lt;li&gt;Gorgeous home feed&lt;/li&gt; &#xA; &lt;li&gt;Pin frequently visited feeds&lt;/li&gt; &#xA; &lt;li&gt;Smart fetching: Twine looks for feeds when given any website homepage&lt;/li&gt; &#xA; &lt;li&gt;Reading view with shortcut to fetch full article&lt;/li&gt; &#xA; &lt;li&gt;Bookmark posts to read later&lt;/li&gt; &#xA; &lt;li&gt;Search posts&lt;/li&gt; &#xA; &lt;li&gt;Background sync&lt;/li&gt; &#xA; &lt;li&gt;Feed management: Add, Edit &amp;amp; Pin feeds&lt;/li&gt; &#xA; &lt;li&gt;Import and exports your feeds with OPML&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Tech Stack üìö&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://kotlinlang.org/lp/multiplatform/&#34;&gt;Kotlin Multiplatform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/Kotlin/kotlinx.coroutines&#34;&gt;Kotlin Coroutines&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/lp/compose-multiplatform/&#34;&gt;Compose Multiplatform&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://ktor.io/&#34;&gt;Ktor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://cashapp.github.io/sqldelight/2.0.0-alpha05/&#34;&gt;SQLDelight&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://arkivanov.github.io/Decompose/&#34;&gt;Decompose&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/evant/kotlin-inject&#34;&gt;Kotlin-inject&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For full list of dependencies used, please take a look at the &lt;a href=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/gradle/libs.versions.toml&#34;&gt;catalog&lt;/a&gt; file.&lt;/p&gt; &#xA;&lt;h2&gt;Development üõ†Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;You can just clone the repo and build it locally without requiring any changes.&lt;/p&gt; &#xA;&lt;p&gt;Project requires JDK 20+, and based on the AGP version defined in &lt;a href=&#34;https://raw.githubusercontent.com/msasikanth/twine/main/gradle/libs.versions.toml&#34;&gt;&lt;code&gt;libs.versions.toml&lt;/code&gt;&lt;/a&gt; file, you can use appropriate Android Studio to import the project.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing üõ†Ô∏è&lt;/h2&gt; &#xA;&lt;p&gt;You can contribute bug fixes to the project via PRs, for anything else open an issue to start a conversation.&lt;/p&gt; &#xA;&lt;p&gt;This project uses ktfmt, provided via the spotless gradle plugin, and the bundled project IntelliJ codestyle. Run &lt;code&gt;./gradlew spotlessApply&lt;/code&gt; to format the code before raising a PR.&lt;/p&gt; &#xA;&lt;h2&gt;Made by ‚ù§Ô∏è&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.sasikanth.dev&#34;&gt;Sasikanth Miriyampalli&lt;/a&gt; / Development&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://twitter.com/edpratti&#34;&gt;Eduardo Pratti&lt;/a&gt; / Design&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code&gt;Copyright Sasikanth Miriyampalli&#xA;&#xA;Licensed under the Apache License, Version 2.0 (the &#34;License&#34;);&#xA;you may not use this file except in compliance with the License.&#xA;You may obtain a copy of the License at&#xA;&#xA;    https://www.apache.org/licenses/LICENSE-2.0&#xA;&#xA;Unless required by applicable law or agreed to in writing, software&#xA;distributed under the License is distributed on an &#34;AS IS&#34; BASIS,&#xA;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xA;See the License for the specific language governing permissions and&#xA;limitations under the License.&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>dessalines/thumb-key</title>
    <updated>2024-02-11T01:48:09Z</updated>
    <id>tag:github.com,2024-02-11:/dessalines/thumb-key</id>
    <link href="https://github.com/dessalines/thumb-key" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A privacy-conscious Android keyboard made for your thumbs&lt;/p&gt;&lt;hr&gt;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://img.shields.io/github/tag/dessalines/thumb-key.svg?sanitize=true&#34; alt=&#34;GitHub tag (latest SemVer)&#34;&gt; &lt;a href=&#34;https://woodpecker.join-lemmy.org/dessalines/thumb-key&#34;&gt;&lt;img src=&#34;https://woodpecker.join-lemmy.org/api/badges/dessalines/thumb-key/status.svg?sanitize=true&#34; alt=&#34;status-badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dessalines/thumb-key/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues-raw/dessalines/thumb-key.svg?sanitize=true&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/dessalines/thumb-key/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/dessalines/thumb-key.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;img src=&#34;https://img.shields.io/github/stars/dessalines/thumb-key?style=social&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/p&gt; &#xA;&lt;/div&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/dessalines/thumb-key&#34; rel=&#34;noopener&#34;&gt; &lt;img width=&#34;200px&#34; height=&#34;200px&#34; src=&#34;https://raw.githubusercontent.com/dessalines/thumb-key/main/fastlane/metadata/android/en-US/images/phoneScreenshots/1.png&#34; alt=&#34;phone_screen&#34;&gt; &lt;/a&gt; &lt;/p&gt;&#xA;&lt;h3 align=&#34;center&#34;&gt;&lt;a href=&#34;https://github.com/dessalines/thumb-key&#34;&gt;Thumb-Key&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; A privacy-conscious keyboard made for your thumbs &lt;br&gt; &lt;br&gt; &lt;a href=&#34;https://github.com/dessalines/thumb-key/issues&#34;&gt;Report Bug&lt;/a&gt; ¬∑ &lt;a href=&#34;https://github.com/dessalines/thumb-key/issues&#34;&gt;Request Feature&lt;/a&gt; ¬∑ &lt;a href=&#34;https://github.com/dessalines/thumb-key/releases&#34;&gt;Releases&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/com.dessalines.thumbkey&#34;&gt;&lt;img src=&#34;https://gitlab.com/IzzyOnDroid/repo/-/raw/master/assets/IzzyOnDroid.png&#34; alt=&#34;Get it on IzzyOnDroid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://f-droid.org/packages/com.dessalines.thumbkey&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.dessalines.thumbkey&#34;&gt;&lt;img src=&#34;https://cdn.rawgit.com/steverichey/google-play-badge-svg/master/img/en_get.svg?sanitize=true&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/dessalines/thumb-key/releases/latest&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/andOTP/andOTP/master/assets/badges/get-it-on-github.png&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;&lt;/p&gt; &#xA;&lt;h2&gt;About Thumb-Key&lt;/h2&gt; &#xA;&lt;p&gt;Thumb-Key is a &lt;em&gt;privacy-conscious&lt;/em&gt; smart keyboard, made specifically for your thumbs.&lt;/p&gt; &#xA;&lt;p&gt;It features a &lt;strong&gt;3x3 grid layout&lt;/strong&gt;, and uses swipes for the less common letters. Its easy to learn, and designed for fast typing speeds.&lt;/p&gt; &#xA;&lt;p&gt;Instead of relying on profit-driven, privacy-offending word and sentence prediction for accuracy, as do most popular phone keyboards like Gboard and Swiftkey, Thumb-Key uses &lt;strong&gt;large keys with predictable positions&lt;/strong&gt;, to prevent your eyes from &lt;a href=&#34;https://www.keyboardingonline.com/hunting-and-pecking/&#34;&gt;hunting and pecking&lt;/a&gt; for letters.&lt;/p&gt; &#xA;&lt;p&gt;As the key positions get ingrained into your muscle memory, eventually you&#39;ll be able to approximate the fast speeds of &lt;a href=&#34;https://en.m.wikipedia.org/wiki/Touch_typing&#34;&gt;touch-typing&lt;/a&gt;, your eyes never having to leave the text edit area.&lt;/p&gt; &#xA;&lt;p&gt;This project is a follow-up to the now unmaintained (and closed-source) &lt;a href=&#34;https://www.exideas.com/ME/&#34;&gt;MessageEase Keyboard&lt;/a&gt;, which is its main inspiration.&lt;/p&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Highly configurable.&lt;/li&gt; &#xA; &lt;li&gt;Customizeable sizing, ThumbKey and MessageEase layouts, dynamic / Material v3 themes, animations, haptic feedback, and audio feedback.&lt;/li&gt; &#xA; &lt;li&gt;Open-source, &lt;a href=&#34;https://raw.githubusercontent.com/dessalines/thumb-key/main/LICENSE&#34;&gt;AGPL License&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;User Guide&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tap&lt;/strong&gt;, or &lt;strong&gt;swipe&lt;/strong&gt; to type a letter.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe up&lt;/strong&gt; or &lt;strong&gt;down&lt;/strong&gt; on &lt;code&gt;A&lt;/code&gt; to capitalize. (If you changed the layout, the button next to &lt;code&gt;#&lt;/code&gt;)&lt;br&gt; &lt;img width=&#34;60px&#34; height=&#34;60px&#34; src=&#34;https://i.postimg.cc/Znt2Ft9G/thumbkey-1-1.png&#34;&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Double tap&lt;/strong&gt; the space bar to type a comma, triple tap to type a period. More taps have more punctuation.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe left&lt;/strong&gt; on the backspace key to delete whole words to the left of the cursor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe right&lt;/strong&gt; on the backspace key to delete whole words to the right of the cursor.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe left&lt;/strong&gt; or &lt;strong&gt;right&lt;/strong&gt; on the spacebar to move the cursor by 1 character.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Emoji Key&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tap&lt;/strong&gt; to access the emoji picker&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe up&lt;/strong&gt; to configure Thumb-key&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe right&lt;/strong&gt; to change keyboard position&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe down&lt;/strong&gt; to access IME switcher (switch between Thumb-key and other keyboards)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe left&lt;/strong&gt; to cycle between selected layouts (languages).&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe to bottom-left&lt;/strong&gt; to toggle voice input. Requires &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.futo.voiceinput&#34;&gt;FUTO Voice Input&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Symbol (&lt;code&gt;#&lt;/code&gt;) Key&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Tap&lt;/strong&gt; to access numbers &amp;amp; symbols&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe to top-left&lt;/strong&gt; to select all&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe up&lt;/strong&gt; to copy - If nothing is selected, all the text will be copied.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe to top-right&lt;/strong&gt; to cut - If nothing is selected, all the text will be selected and cut.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe right&lt;/strong&gt; to redo&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe down&lt;/strong&gt; to paste&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Swipe left&lt;/strong&gt; to undo&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Slide gestures&lt;/h3&gt; &#xA;&lt;p&gt;Enabling &lt;code&gt;Slide gestures&lt;/code&gt; in keyboard settings will enable the following continuous sliding gestures:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Slide spacebar horizontally to move cursor position left and right.&lt;/li&gt; &#xA; &lt;li&gt;Slide upwards while sliding the spacebar to select text.&lt;/li&gt; &#xA; &lt;li&gt;Slide backspace to the left to select text to be deleted. Text will be deleted when key is released.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enabling &lt;code&gt;Spacebar: Allow normal swipes to work with slide gestures&lt;/code&gt;, in keyboard settings will enable the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swipe left and right to move the cursor by a single character.&lt;/li&gt; &#xA; &lt;li&gt;Swipe up and down to move the cursor up or down a line.&lt;/li&gt; &#xA; &lt;li&gt;Allow us to use the other characters on the spacebars in the typesplit layouts.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Enabling &lt;code&gt;Backspace: Allow normal swipes to work with slide gestures&lt;/code&gt;, in keyboard settings will enable the following:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Swipe left to delete whole words to the left of the cursor.&lt;/li&gt; &#xA; &lt;li&gt;Swipe right to delete whole words to the right of the cursor.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Other&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Practice typing, and check your words per minute, using &lt;a href=&#34;https://monkeytype.com&#34;&gt;monkeytype.com&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Thumb-Key Design&lt;/h2&gt; &#xA;&lt;h3&gt;A History of Phone Keyboards&lt;/h3&gt; &#xA;&lt;p&gt;Physical keyboards, with the full-size &lt;em&gt;QWERTY&lt;/em&gt; layout, &lt;strong&gt;were not designed for use on small devices like phones&lt;/strong&gt;; they were designed specifically for 10 fingers resting on a keybed, sitting on a secure surface. Phones must be held with the fore-fingers and palm, or held with one hand and typed with the other, leaving only 1 or 2 thumbs (as opposed to 10 fingers) free to perform key-presses. As texting came into being, word prediction came to be seen as the best solution to slow input speeds.&lt;/p&gt; &#xA;&lt;p&gt;On phones that used the 9-key numeric layout, &lt;a href=&#34;https://en.m.wikipedia.org/wiki/T9_(predictive_text)&#34;&gt;T9 predictive text&lt;/a&gt; was used. Other phones used the full-hand layout with the familiar &lt;em&gt;QWERTY&lt;/em&gt; layout, with other proprietary predictive methods.&lt;/p&gt; &#xA;&lt;h4&gt;When phone keyboards became Keyloggers&lt;/h4&gt; &#xA;&lt;p&gt;As phones moved from physical buttons to soft-keyboards, key sizes became smaller and taps more imprecise and error-prone, with better predictive technology picking up the slack.&lt;/p&gt; &#xA;&lt;p&gt;Smartphone companies like Apple and Google, in an attempt to better their word prediction algorithms, as well as collect potentially profitable information on what their users were typing, began submitting and aggregating all their user&#39;s key-taps to their servers, violating user&#39;s privacy in the process. &lt;a href=&#34;https://usa.kaspersky.com/resource-center/definitions/keylogger&#34;&gt;Known as Keyloggers&lt;/a&gt;, and seen as &lt;em&gt;universally malicious&lt;/em&gt; programs on desktop computers, these apps unfortunately became normalized and seen as a necessity on phones.&lt;/p&gt; &#xA;&lt;p&gt;The lack of innovation on phone keyboard design, is best explained by the &lt;em&gt;potential profitability&lt;/em&gt; these companies stand to gain by collecting and aggregating everything a user types; including the commodification of this data directly, or information and trends about you learned from this data, that they can sell to advertisers and 3rd parties. These could include your buying preferences, preferred websites, what you most commonly talk about with friends, and &lt;strong&gt;everything you type into search bars and text boxes.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;As of today, phone keyboards are in such an abysmal state of privacy, that there aren&#39;t many keyboards left that can guarantee &lt;strong&gt;not to be logging all of your keystrokes.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h4&gt;MessageEase&lt;/h4&gt; &#xA;&lt;p&gt;As a testament to the stunning lack of innovation on both desktop and phone keyboards, the &lt;em&gt;QWERTY&lt;/em&gt; layout from the 1880s is still the dominant layout, even on smartphones in the 21st century.&lt;/p&gt; &#xA;&lt;p&gt;One company named Exideas created a keyboard app called &lt;a href=&#34;https://www.exideas.com/ME/&#34;&gt;MessageEase&lt;/a&gt;, which relied on the original large 9-key grid of old phones, and managed to achieve comparable fast typing speeds to other keyboards, without relying on big-data-powered word-prediction.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.exideas.com/ME/ICMI2003Paper.pdf&#34;&gt;Much research went into MessageEase&#39;s design&lt;/a&gt;, and many of its users can do &amp;gt; 50 words per minute.&lt;/p&gt; &#xA;&lt;p&gt;MessageEase is unfortunately unmaintained, and Thumb-Key uses a better alternating-thumb layout letter position (although the original MessageEase Keyboard layout is available in the settings).&lt;/p&gt; &#xA;&lt;h3&gt;Thumb-Key Letter Positions&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Large keys are in a predictable 9-key grid. Eventually, you should be able to keep your eyes on the text input area, rather than hunting-and-pecking for letters, approximating touch-typing.&lt;/li&gt; &#xA; &lt;li&gt;Letter positions are based on &lt;a href=&#34;https://en.m.wikipedia.org/wiki/Letter_frequency&#34;&gt;English text letter frequency&lt;/a&gt;. The most common letters are: &lt;strong&gt;ETAOINSHR&lt;/strong&gt;. These 9 letters alone make up ~70% of all English text.&lt;/li&gt; &#xA; &lt;li&gt;First 9 letters by frequency are the 9 center key taps. The next 8 are swipes to the center. The next 8 are swipes on the center hub key. Z is last.&lt;/li&gt; &#xA; &lt;li&gt;Alternate thumbs for vowels and consonants (Vowels on right side of keyboard, consonants on left). This naturally results in fast digram speeds.&lt;/li&gt; &#xA; &lt;li&gt;Prioritize bottom, and right side of keyboard. So EAO should be on the right side, and bottom to top, while TNS is on the left side.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Built With&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/jetpack/compose&#34;&gt;Android Jetpack Compose&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Installation / Releases&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dessalines/thumb-key/releases&#34;&gt;Releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://apt.izzysoft.de/fdroid/index/apk/com.dessalines.thumbkey&#34;&gt;IzzyOnDroid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://f-droid.org/en/packages/com.dessalines.thumbkey/&#34;&gt;F-Droid&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.dessalines.thumbkey&#34;&gt;Google Play&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How do I add my language or layout?&lt;/h2&gt; &#xA;&lt;p&gt;I&#39;d be happy to accept additions to add more languages, and layouts. To start:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Read the letter position guidelines above. This means you&#39;ll likely need a letter frequency chart for text written in your language. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;The general rule is: popular vowels on the right, bottom to top, consonants on the left.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Copy &lt;a href=&#34;https://github.com/dessalines/thumb-key/raw/main/app/src/main/java/com/dessalines/thumbkey/keyboards/ENThumbKey.kt&#34;&gt;this file&lt;/a&gt;, or another sample keyboard from the same folder. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Change the characters to whatever you&#39;d like.&lt;/li&gt; &#xA;   &lt;li&gt;This file contains both a &lt;em&gt;shifted&lt;/em&gt;, and &lt;em&gt;non-shifted&lt;/em&gt; keyboard, so make sure you take care of both.&lt;/li&gt; &#xA;   &lt;li&gt;You can also add or subtract columns if you want, but the layout must remain a grid. I &lt;strong&gt;highly recommend&lt;/strong&gt; sticking with the 3x3 layout.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Add the new keyboard to the end of &lt;a href=&#34;https://github.com/dessalines/thumb-key/raw/main/app/src/main/java/com/dessalines/thumbkey/utils/KeyboardLayout.kt&#34;&gt;KeyboardLayout.kt file&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Either open a pull request, or an issue, linking your new keyboard file. I&#39;ll handle the rest of the work.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Theming guide&lt;/h2&gt; &#xA;&lt;p&gt;To add a custom theme:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use google&#39;s &lt;a href=&#34;https://m3.material.io/theme-builder#/custom&#34;&gt;Material 3 custom theme generator&lt;/a&gt;, and save your &lt;code&gt;Theme.kt&lt;/code&gt; file.&lt;/li&gt; &#xA; &lt;li&gt;Copy the theme into &lt;code&gt;Color.kt&lt;/code&gt; like the others.&lt;/li&gt; &#xA; &lt;li&gt;Add the theme to the &lt;code&gt;ThemeColor&lt;/code&gt; enum in &lt;code&gt;Types.kt&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Add a translation string in &lt;code&gt;strings.xml&lt;/code&gt; for your theme name.&lt;/li&gt; &#xA; &lt;li&gt;Add the theme to the &lt;code&gt;colorPairs&lt;/code&gt; in &lt;code&gt;Theme.kt&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Support / Donate&lt;/h2&gt; &#xA;&lt;p&gt;Thumb-Key will always remain free, open-source software. We&#39;ve seen many keyboards (and open-source projects in general) go unmaintained after a few years. &lt;strong&gt;Recurring donations have proven to be the only way these projects can stay alive.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;Your donations directly support full-time development, and help keep this maintained. If you find yourself using Thumb-Key every day, consider donating:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://liberapay.com/dessalines&#34;&gt;Support me on Liberapay&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.patreon.com/dessalines&#34;&gt;Support me Patreon&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Crypto&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;bitcoin: &lt;code&gt;1Hefs7miXS5ff5Ck5xvmjKjXf5242KzRtK&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;ethereum: &lt;code&gt;0x400c96c96acbC6E7B3B43B1dc1BB446540a88A01&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;monero: &lt;code&gt;41taVyY6e1xApqKyMVDRVxJ76sPkfZhALLTjRvVKpaAh2pBd4wv9RgYj1tSPrx8wc6iE1uWUfjtQdTmTy2FGMeChGVKPQuV&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;cardano: &lt;code&gt;addr1q858t89l2ym6xmrugjs0af9cslfwvnvsh2xxp6x4dcez7pf5tushkp4wl7zxfhm2djp6gq60dk4cmc7seaza5p3slx0sakjutm&lt;/code&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Social / Contact&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://lemmy.ml/c/thumbkey&#34;&gt;lemmy.ml/c/thumbkey&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://matrix.to/#/#thumbkey-dev:matrix.org&#34;&gt;Thumbkey dev chat&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mastodon.social/@dessalines&#34;&gt;Mastodon&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Android IME Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/THEAccess/compose-keyboard-ime&#34;&gt;https://github.com/THEAccess/compose-keyboard-ime&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/65570024/build-software-keyboard-with-jetpack-compose-ime-input-method-with-jetpack-com&#34;&gt;https://stackoverflow.com/questions/65570024/build-software-keyboard-with-jetpack-compose-ime-input-method-with-jetpack-com&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://developer.android.com/develop/ui/views/touch-and-input/creating-input-method&#34;&gt;https://developer.android.com/develop/ui/views/touch-and-input/creating-input-method&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.answertopia.com/jetpack-compose/a-jetpack-compose-in-app-purchasing-tutorial/&#34;&gt;https://www.answertopia.com/jetpack-compose/a-jetpack-compose-in-app-purchasing-tutorial/&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>fcitx5-android/fcitx5-android</title>
    <updated>2024-02-11T01:48:09Z</updated>
    <id>tag:github.com,2024-02-11:/fcitx5-android/fcitx5-android</id>
    <link href="https://github.com/fcitx5-android/fcitx5-android" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Fcitx5 input method framework and engines ported to Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;fcitx5-android&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fcitx/fcitx5&#34;&gt;Fcitx5&lt;/a&gt; input method framework and engines ported to Android.&lt;/p&gt; &#xA;&lt;h2&gt;Download&lt;/h2&gt; &#xA;&lt;h3&gt;Latest CI builds&lt;/h3&gt; &#xA;&lt;p&gt;Jenkins: &lt;a href=&#34;https://jenkins.fcitx-im.org/job/android/job/fcitx5-android/&#34;&gt;&lt;img src=&#34;https://img.shields.io/jenkins/build.svg?jobUrl=https://jenkins.fcitx-im.org/job/android/job/fcitx5-android/&#34; alt=&#34;build status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Tagged releases&lt;/h3&gt; &#xA;&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/fcitx5-android/fcitx5-android/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/fcitx5-android/fcitx5-android&#34; alt=&#34;release version&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://f-droid.org/packages/org.fcitx.fcitx5.android&#34;&gt;&lt;img src=&#34;https://fdroid.gitlab.io/artwork/badge/get-it-on.png&#34; alt=&#34;Get it on F-Droid&#34; width=&#34;207&#34; height=&#34;80&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=org.fcitx.fcitx5.android&#34;&gt;&lt;img alt=&#34;Get it on Google Play&#34; src=&#34;https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png&#34; width=&#34;207&#34; height=&#34;80&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Project status&lt;/h2&gt; &#xA;&lt;h3&gt;Supported Languages&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;English (with spell check)&lt;/li&gt; &#xA; &lt;li&gt;Chinese &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Pinyin, Shuangpin, Wubi, Cangjie and custom tables (built-in, powered by &lt;a href=&#34;https://github.com/fcitx/fcitx5-chinese-addons&#34;&gt;fcitx5-chinese-addons&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Zhuyin/Bopomofo (via &lt;a href=&#34;https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/plugin/chewing&#34;&gt;Chewing Plugin&lt;/a&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Jyutping (via &lt;a href=&#34;https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/plugin/jyutping/&#34;&gt;Jyutping Plugin&lt;/a&gt;, powered by &lt;a href=&#34;https://github.com/fcitx/libime-jyutping&#34;&gt;libime-jyutping&lt;/a&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;Vietnamese (via &lt;a href=&#34;https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/plugin/unikey&#34;&gt;UniKey Plugin&lt;/a&gt;, supports Telex, VNI and VIQR)&lt;/li&gt; &#xA; &lt;li&gt;Japanese (via &lt;a href=&#34;https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/plugin/anthy&#34;&gt;Anthy Plugin&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Korean (via &lt;a href=&#34;https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/plugin/hangul&#34;&gt;Hangul Plugin&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Sinhala (via &lt;a href=&#34;https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/plugin/sayura&#34;&gt;Sayura Plugin&lt;/a&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Generic (via &lt;a href=&#34;https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/plugin/rime&#34;&gt;RIME Plugin&lt;/a&gt;, supports importing custom schemas)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Implemented Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Virtual Keyboard (layout not customizable yet)&lt;/li&gt; &#xA; &lt;li&gt;Expandable candidate view&lt;/li&gt; &#xA; &lt;li&gt;Clipboard management (plain text only)&lt;/li&gt; &#xA; &lt;li&gt;Theming (custom color scheme and background image)&lt;/li&gt; &#xA; &lt;li&gt;Popup preview on key press&lt;/li&gt; &#xA; &lt;li&gt;Long press popup keyboard for convenient symbol input&lt;/li&gt; &#xA; &lt;li&gt;Symbol and Emoji picker&lt;/li&gt; &#xA; &lt;li&gt;Plugin System for loading addons from other installed apk&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Planned Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Customizable keyboard layout&lt;/li&gt; &#xA; &lt;li&gt;More input methods (via plugin)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Screenshots&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;ÊãºÈü≥, Material Light theme, key border enabled&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Ëá™ÁÑ∂Á†ÅÂèåÊãº, Pixel Dark theme, key border disabled&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/fcitx5-android/fcitx5-android/assets/13914967/bd429247-62d9-4c78-bab8-70ef3ce47588&#34; width=&#34;360px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://github.com/fcitx5-android/fcitx5-android/assets/13914967/3ae969c1-7ed0-4f92-a5df-19dc8c90a8c3&#34; width=&#34;360px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Emoji picker, Pixel Light theme, key border enabled&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Symbol picker, Material Dark theme, key border disabled&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202181845-6a5f6bb2-a877-468c-851a-fd7e66e64ed4.png&#34; width=&#34;360px&#34;&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202181861-dd253439-1d5e-4f5f-9535-934f28796a6b.png&#34; width=&#34;360px&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Get involved&lt;/h2&gt; &#xA;&lt;p&gt;Trello kanban: &lt;a href=&#34;https://trello.com/b/gftk6ZdV/kanban&#34;&gt;https://trello.com/b/gftk6ZdV/kanban&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Matrix Room: &lt;a href=&#34;https://matrix.to/#/#fcitx5-android:mozilla.org&#34;&gt;https://matrix.to/#/#fcitx5-android:mozilla.org&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Discuss on Telegram: &lt;a href=&#34;https://t.me/fcitx5_android_group&#34;&gt;@fcitx5_android_group&lt;/a&gt; (&lt;a href=&#34;https://t.me/fcitx5_android&#34;&gt;@fcitx5_android&lt;/a&gt; originally)&lt;/p&gt; &#xA;&lt;h2&gt;Build&lt;/h2&gt; &#xA;&lt;h3&gt;Dependencies&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Android SDK Platform &amp;amp; Build-Tools 34.&lt;/li&gt; &#xA; &lt;li&gt;Android NDK (Side by side) 25 &amp;amp; CMake 3.22.1, they can be installed using SDK Manager in Android Studio or &lt;code&gt;sdkmanager&lt;/code&gt; command line.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/KDE/extra-cmake-modules&#34;&gt;KDE/extra-cmake-modules&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;GNU Gettext &amp;gt;= 0.20 (for &lt;code&gt;msgfmt&lt;/code&gt; binary; or install &lt;code&gt;appstream&lt;/code&gt; if you really have to use gettext &amp;lt;= 0.19.)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How to set up development environment&lt;/h3&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Prerequisites for Windows&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;Enable &lt;a href=&#34;https://learn.microsoft.com/en-us/windows/apps/get-started/enable-your-device-for-development&#34;&gt;Developer Mode&lt;/a&gt; so that symlinks can be created without administrator privilege.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;Enable symlink support for &lt;code&gt;git&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git config --global core.symlinks true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;First, clone this repository and fetch all submodules:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git clone git@github.com:fcitx5-android/fcitx5-android.git&#xA;git submodule update --init --recursive&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;On Windows, you may need to regenerate symlinks to submodules.&lt;/summary&gt; &#xA; &lt;p&gt;Run in PowerShell:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-powershell&#34;&gt;Remove-Item -Recurse app/src/main/assets/usr/share, plugin/hangul/src/main/assets/usr/share/libhangul, plugin/chewing/src/main/assets/usr/share/libchewing, plugin/jyutping/src/main/assets/usr/share/libime&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Or Command Prompt:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-bat&#34;&gt;RD /S /Q app\src\main\assets\usr\share plugin\hangul\src\main\assets\usr\share\libhangul plugin\chewing\src\main\assets\usr\share\libchewing plugin\jyutping\src\main\assets\usr\share\libime&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA; &lt;p&gt;Then let &lt;code&gt;git&lt;/code&gt; regenerate symlinks:&lt;/p&gt; &#xA; &lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;git checkout -- .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;/details&gt; &#xA;&lt;p&gt;Install &lt;code&gt;extra-cmake-modules&lt;/code&gt; and &lt;code&gt;gettext&lt;/code&gt; with your system package manager:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# For Arch Linux (Arch has gettext in it&#39;s base meta package)&#xA;sudo pacman -S extra-cmake-modules&#xA;&#xA;# For Debian/Ubuntu&#xA;sudo apt install extra-cmake-modules gettext&#xA;&#xA;# For macOS&#xA;brew install extra-cmake-modules gettext&#xA;&#xA;# For Windows, install MSYS2 and execute in its shell (UCRT64)&#xA;pacman -S mingw-w64-ucrt-x86_64-extra-cmake-modules mingw-w64-ucrt-x86_64-gettext&#xA;# then add C:\msys64\ucrt64\bin to PATH&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Install Android SDK Platform, Android SDK Build-Tools, Android NDK and cmake via SDK Manager in Android Studio:&lt;/p&gt; &#xA;&lt;details&gt; &#xA; &lt;summary&gt;Detailed steps (screenshots)&lt;/summary&gt; &#xA; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; These screenshots are for references and the versions in them may be out of date. The current recommended versions are recorded in &lt;a href=&#34;https://raw.githubusercontent.com/fcitx5-android/fcitx5-android/master/build-logic/convention/src/main/kotlin/Versions.kt&#34;&gt;Versions.kt&lt;/a&gt; file.&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202184493-3ee1546b-0a83-4cc9-9e41-d20b0904a0cf.png&#34; alt=&#34;Open SDK Manager&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202184534-340a9e7c-7c42-49bd-9cf5-1ec9dcafcf32.png&#34; alt=&#34;Install SDK Platform&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202185945-0c7a9f39-1fcc-4018-9c81-b3d2bf1c2d3f.png&#34; alt=&#34;Install SDK Build-Tools&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202185601-0cf877ea-e148-4b88-bd2f-70533189b3d4.png&#34; alt=&#34;Install NDK&#34;&gt;&lt;/p&gt; &#xA; &lt;p&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/13914967/202184655-3c1ab47c-432f-4bd7-a508-92096482de50.png&#34; alt=&#34;Install CMake&#34;&gt;&lt;/p&gt; &#xA;&lt;/details&gt; &#xA;&lt;h3&gt;Trouble-shooting&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Android Studio indexing takes forever to complete and cosumes a lot of memory.&lt;/p&gt; &lt;p&gt;Switch to &#34;Project&#34; view in the &#34;Project&#34; tool window (namely the file tree side bar), right click &lt;code&gt;lib/fcitx5/src/main/cpp/prebuilt&lt;/code&gt; directory, then select &#34;Mark Directory as &amp;gt; Excluded&#34;. You may also need to restart the IDE to interrupt ongoing indexing process.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Gradle error: &#34;No variants found for &#39;:app&#39;. Check build files to ensure at least one variant exists.&#34; or &#34;[CXX1210] &#xA;   &lt;whatever&gt;&#xA;    /CMakeLists.txt debug|arm64-v8a : No compatible library found&#34;&#xA;   &lt;/whatever&gt;&lt;/p&gt; &lt;p&gt;Examine if there are environment variables set such as &lt;code&gt;_JAVA_OPTIONS&lt;/code&gt; or &lt;code&gt;JAVA_TOOL_OPTIONS&lt;/code&gt;. You might want to clear them (maybe in the startup script &lt;code&gt;studio.sh&lt;/code&gt; of Android Studio), as some gradle plugin treats anything in stderr as errors and aborts.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Nix&lt;/h2&gt; &#xA;&lt;p&gt;Appropriate Android SDK with NDK is available in the development shell. The &lt;code&gt;gradlew&lt;/code&gt; should work out-of-the-box, so you can install the app to your phone with &lt;code&gt;./gradlew installDebug&lt;/code&gt; after applying the patch mentioned above. For development, you may want to install the unstable version of Android Studio, and point the project SDK path to &lt;code&gt;$ANDROID_SDK_ROOT&lt;/code&gt; defined in the shell. Notice that Android Studio may generate wrong &lt;code&gt;local.properties&lt;/code&gt; which sets the SDK location to &lt;code&gt;~/Android/SDK&lt;/code&gt; (installed by SDK Manager). In such case, you need specify &lt;code&gt;sdk.dir&lt;/code&gt; as the project SDK in that file manually, in case Android Studio sticks to the wrong global SDK.&lt;/p&gt;</summary>
  </entry>
</feed>