<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>GitHub All Languages Daily Trending</title>
  <id>http://mshibanami.github.io/GitHubTrendingRSS</id>
  <updated>2022-05-29T01:31:41Z</updated>
  <subtitle>Daily Trending of All Languages in GitHub</subtitle>
  <link href="http://mshibanami.github.io/GitHubTrendingRSS"></link>
  <entry>
    <title>PaddlePaddle/PaddleSpeech</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/PaddlePaddle/PaddleSpeech</id>
    <link href="https://github.com/PaddlePaddle/PaddleSpeech" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Easy-to-use Speech Toolkit including SOTA/Streaming ASR with punctuation, influential TTS with text frontend, Speaker Verification System and End-to-End Speech Simultaneous Translation.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;(&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/README_cn.md&#34;&gt;简体中文&lt;/a&gt;|English)&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/PaddleSpeech_logo.png&#34;&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-Apache%202-red.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/releases&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/v/release/PaddlePaddle/PaddleSpeech?color=ffa&#34;&gt;&lt;/a&gt; &lt;a href=&#34;support os&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/os-linux%2C%20win%2C%20mac-pink.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/python-3.7+-aff.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/graphs/contributors&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/contributors/PaddlePaddle/PaddleSpeech?color=9ea&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/commits&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/commit-activity/m/PaddlePaddle/PaddleSpeech?color=3af&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/PaddlePaddle/PaddleSpeech?color=9cc&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/PaddlePaddle/PaddleSpeech?color=ccf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/=https://pypi.org/project/paddlespeech/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dm/PaddleSpeech&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/=https://pypi.org/project/paddlespeech/&#34;&gt;&lt;img src=&#34;https://static.pepy.tech/badge/paddlespeech&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;h4&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start&#34;&gt; Quick Start &lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start-server&#34;&gt; Quick Start Server &lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start-streaming-server&#34;&gt; Quick Start Streaming Server&lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#documents&#34;&gt; Documents &lt;/a&gt; | &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#model-list&#34;&gt; Models List &lt;/a&gt; | &lt;a href=&#34;https://aistudio.baidu.com/aistudio/education/group/info/25130&#34;&gt; AIStudio Courses &lt;/a&gt; | &lt;a href=&#34;https://arxiv.org/abs/2205.12007&#34;&gt; Paper &lt;/a&gt; | &lt;a href=&#34;https://gitee.com/paddlepaddle/PaddleSpeech&#34;&gt; Gitee &lt;/a&gt; &lt;/h4&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;PaddleSpeech&lt;/strong&gt; is an open-source toolkit on &lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;PaddlePaddle&lt;/a&gt; platform for a variety of critical tasks in speech and audio, with the state-of-art and influential models.&lt;/p&gt; &#xA;&lt;h5&gt;Speech Recognition&lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt; Input Audio &lt;/th&gt; &#xA;    &lt;th width=&#34;550&#34;&gt; Recognition Result &lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/PaddleAudio/en.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200 style=&#34; max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;    &lt;td&gt;I knocked at the door on the ancient side of the building.&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/PaddleAudio/zh.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;    &lt;td&gt;我认为跑步最重要的就是给我带来了身体健康。&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h5&gt;Speech Translation (English to Chinese)&lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th&gt; Input Audio &lt;/th&gt; &#xA;    &lt;th width=&#34;550&#34;&gt; Translations Result &lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/PaddleAudio/en.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200 style=&#34; max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;    &lt;td&gt;我 在 这栋 建筑 的 古老 门上 敲门。&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h5&gt;Text-to-Speech&lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th width=&#34;550&#34;&gt; Input Text&lt;/th&gt; &#xA;    &lt;th&gt;Synthetic Audio&lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;Life was like a box of chocolates, you never know what you&#39;re gonna get.&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/Parakeet/docs/demos/tacotron2_ljspeech_waveflow_samples_0.2/sentence_1.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;早上好，今天是2020/10/29，最低温度是-3°C。&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/Parakeet/docs/demos/parakeet_espnet_fs2_pwg_demo/tn_g2p/parakeet/001.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;季姬寂，集鸡，鸡即棘鸡。棘鸡饥叽，季姬及箕稷济鸡。鸡既济，跻姬笈，季姬忌，急咭鸡，鸡急，继圾几，季姬急，即籍箕击鸡，箕疾击几伎，伎即齑，鸡叽集几基，季姬急极屐击鸡，鸡既殛，季姬激，即记《季姬击鸡记》。&lt;/td&gt; &#xA;    &lt;td align=&#34;center&#34;&gt; &lt;a href=&#34;https://paddlespeech.bj.bcebos.com/Parakeet/docs/demos/jijiji.wav&#34; rel=&#34;nofollow&#34;&gt; &lt;img align=&#34;center&#34; src=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/images/audio_icon.png&#34; width=&#34;200&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;br&gt; &lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;p&gt;For more synthesized audios, please refer to &lt;a href=&#34;https://paddlespeech.readthedocs.io/en/latest/tts/demo.html&#34;&gt;PaddleSpeech Text-to-Speech samples&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h5&gt;Punctuation Restoration&lt;/h5&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;table style=&#34;width:100%&#34;&gt; &#xA;  &lt;thead&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;th width=&#34;390&#34;&gt; Input Text &lt;/th&gt; &#xA;    &lt;th width=&#34;390&#34;&gt; Output Text &lt;/th&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/thead&gt; &#xA;  &lt;tbody&gt; &#xA;   &lt;tr&gt; &#xA;    &lt;td&gt;今天的天气真不错啊你下午有空吗我想约你一起去吃饭&lt;/td&gt; &#xA;    &lt;td&gt;今天的天气真不错啊！你下午有空吗？我想约你一起去吃饭。&lt;/td&gt; &#xA;   &lt;/tr&gt; &#xA;  &lt;/tbody&gt; &#xA; &lt;/table&gt; &#xA;&lt;/div&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;p&gt;Via the easy-to-use, efficient, flexible and scalable implementation, our vision is to empower both industrial application and academic research, including training, inference &amp;amp; testing modules, and deployment process. To be more specific, this toolkit features at:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;📦 &lt;strong&gt;Ease of Use&lt;/strong&gt;: low barriers to install, &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start&#34;&gt;CLI&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start-server&#34;&gt;Server&lt;/a&gt;, and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quick-start-streaming-server&#34;&gt;Streaming Server&lt;/a&gt; is available to quick-start your journey.&lt;/li&gt; &#xA; &lt;li&gt;🏆 &lt;strong&gt;Align to the State-of-the-Art&lt;/strong&gt;: we provide high-speed and ultra-lightweight models, and also cutting-edge technology.&lt;/li&gt; &#xA; &lt;li&gt;🏆 &lt;strong&gt;Streaming ASR and TTS System&lt;/strong&gt;: we provide production ready streaming asr and streaming tts system.&lt;/li&gt; &#xA; &lt;li&gt;💯 &lt;strong&gt;Rule-based Chinese frontend&lt;/strong&gt;: our frontend contains Text Normalization and Grapheme-to-Phoneme (G2P, including Polyphone and Tone Sandhi). Moreover, we use self-defined linguistic rules to adapt Chinese context.&lt;/li&gt; &#xA; &lt;li&gt;📦 &lt;strong&gt;Varieties of Functions that Vitalize both Industrial and Academia&lt;/strong&gt;: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;🛎️ &lt;em&gt;Implementation of critical audio tasks&lt;/em&gt;: this toolkit contains audio functions like Automatic Speech Recognition, Text-to-Speech Synthesis, Speaker Verfication, KeyWord Spotting, Audio Classification, and Speech Translation, etc.&lt;/li&gt; &#xA;   &lt;li&gt;🔬 &lt;em&gt;Integration of mainstream models and datasets&lt;/em&gt;: the toolkit implements modules that participate in the whole pipeline of the speech tasks, and uses mainstream datasets like LibriSpeech, LJSpeech, AIShell, CSMSC, etc. See also &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#model-list&#34;&gt;model list&lt;/a&gt; for more details.&lt;/li&gt; &#xA;   &lt;li&gt;🧩 &lt;em&gt;Cascaded models application&lt;/em&gt;: as an extension of the typical traditional audio tasks, we combine the workflows of the aforementioned tasks with other fields like Natural language processing (NLP) and Computer Vision (CV).&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Recent Update&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;👑 2022.05.13: Release &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/PPASR.md&#34;&gt;PP-ASR&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/PPTTS.md&#34;&gt;PP-TTS&lt;/a&gt;、&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/vpr/PPVPR.md&#34;&gt;PP-VPR&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.05.06: &lt;code&gt;Streaming ASR&lt;/code&gt; with &lt;code&gt;Punctuation Restoration&lt;/code&gt; and &lt;code&gt;Token Timestamp&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.05.06: &lt;code&gt;Server&lt;/code&gt; is available for &lt;code&gt;Speaker Verification&lt;/code&gt;, and &lt;code&gt;Punctuation Restoration&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.04.28: &lt;code&gt;Streaming Server&lt;/code&gt; is available for &lt;code&gt;Automatic Speech Recognition&lt;/code&gt; and &lt;code&gt;Text-to-Speech&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.03.28: &lt;code&gt;Server&lt;/code&gt; is available for &lt;code&gt;Audio Classification&lt;/code&gt;, &lt;code&gt;Automatic Speech Recognition&lt;/code&gt; and &lt;code&gt;Text-to-Speech&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2022.03.28: &lt;code&gt;CLI&lt;/code&gt; is available for &lt;code&gt;Speaker Verification&lt;/code&gt;.&lt;/li&gt; &#xA; &lt;li&gt;🤗 2021.12.14: &lt;a href=&#34;https://huggingface.co/spaces/KPatrick/PaddleSpeechASR&#34;&gt;ASR&lt;/a&gt; and &lt;a href=&#34;https://huggingface.co/spaces/KPatrick/PaddleSpeechTTS&#34;&gt;TTS&lt;/a&gt; Demos on Hugging Face Spaces are available!&lt;/li&gt; &#xA; &lt;li&gt;👏🏻 2021.12.10: &lt;code&gt;CLI&lt;/code&gt; is available for &lt;code&gt;Audio Classification&lt;/code&gt;, &lt;code&gt;Automatic Speech Recognition&lt;/code&gt;, &lt;code&gt;Speech Translation (English to Chinese)&lt;/code&gt; and &lt;code&gt;Text-to-Speech&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Community&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Scan the QR code below with your Wechat, you can access to official technical exchange group and get the bonus ( more than 20GB learning materials, such as papers, codes and videos ) and the live link of the lessons. Look forward to your participation.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://user-images.githubusercontent.com/23690325/169763015-cbd8e28d-602c-4723-810d-dbc6da49441e.jpg&#34; width=&#34;200&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;We strongly recommend our users to install PaddleSpeech in &lt;strong&gt;Linux&lt;/strong&gt; with &lt;em&gt;python&amp;gt;=3.7&lt;/em&gt;. Up to now, &lt;strong&gt;Linux&lt;/strong&gt; supports CLI for the all our tasks, &lt;strong&gt;Mac OSX&lt;/strong&gt; and &lt;strong&gt;Windows&lt;/strong&gt; only supports PaddleSpeech CLI for Audio Classification, Speech-to-Text and Text-to-Speech. To install &lt;code&gt;PaddleSpeech&lt;/code&gt;, please see &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/install.md&#34;&gt;installation&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;quickstart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start&lt;/h2&gt; &#xA;&lt;p&gt;Developers can have a try of our models with &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/paddlespeech/cli/README.md&#34;&gt;PaddleSpeech Command Line&lt;/a&gt;. Change &lt;code&gt;--input&lt;/code&gt; to test your own audio/text.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Audio Classification&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech cls --input input.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Speaker Verification&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech vector --task spk --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Automatic Speech Recognition&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech asr --lang zh --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;web demo for Automatic Speech Recognition is integrated to &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;Huggingface Spaces&lt;/a&gt; with &lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;. See Demo: &lt;a href=&#34;https://huggingface.co/spaces/KPatrick/PaddleSpeechASR&#34;&gt;ASR Demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Speech Translation&lt;/strong&gt; (English to Chinese) (not support for Mac and Windows now)&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech st --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text-to-Speech&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech tts --input &#34;你好，欢迎使用飞桨深度学习框架！&#34; --output output.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;web demo for Text to Speech is integrated to &lt;a href=&#34;https://huggingface.co/spaces&#34;&gt;Huggingface Spaces&lt;/a&gt; with &lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;. See Demo: &lt;a href=&#34;https://huggingface.co/spaces/KPatrick/PaddleSpeechTTS&#34;&gt;TTS Demo&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text Postprocessing&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Punctuation Restoration &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;paddlespeech text --task punc --input 今天的天气真不错啊你下午有空吗我想约你一起去吃饭&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;Batch Process&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;echo -e &#34;1 欢迎光临。\n2 谢谢惠顾。&#34; | paddlespeech tts&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Shell Pipeline&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;ASR + Punctuation Restoration&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech asr --input ./zh.wav | paddlespeech text --task punc&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more command lines, please see: &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/tree/develop/demos&#34;&gt;demos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;If you want to try more functions like training and tuning, please have a look at &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/quick_start.md&#34;&gt;Speech-to-Text Quick Start&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/quick_start.md&#34;&gt;Text-to-Speech Quick Start&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;quickstartserver&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start Server&lt;/h2&gt; &#xA;&lt;p&gt;Developers can have a try of our speech server with &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/paddlespeech/server/README.md&#34;&gt;PaddleSpeech Server Command Line&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Start server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech_server start --config_file ./paddlespeech/server/conf/application.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Speech Recognition Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech_client asr --server_ip 127.0.0.1 --port 8090 --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Text to Speech Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech_client tts --server_ip 127.0.0.1 --port 8090 --input &#34;您好，欢迎使用百度飞桨语音合成服务。&#34; --output output.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Audio Classification Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;paddlespeech_client cls --server_ip 127.0.0.1 --port 8090 --input input.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information about server command lines, please see: &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/tree/develop/demos/speech_server&#34;&gt;speech server demos&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;quickstartstreamingserver&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Quick Start Streaming Server&lt;/h2&gt; &#xA;&lt;p&gt;Developers can have a try of &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/streaming_asr_server/README.md&#34;&gt;streaming asr&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/streaming_tts_server/README.md&#34;&gt;streaming tts&lt;/a&gt; server.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Start Streaming Speech Recognition Server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech_server start --config_file ./demos/streaming_asr_server/conf/application.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Streaming Speech Recognition Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech_client asr_online --server_ip 127.0.0.1 --port 8090 --input input_16k.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Start Streaming Text to Speech Server&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech_server start --config_file ./demos/streaming_tts_server/conf/tts_online_application.yaml&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Access Streaming Text to Speech Services&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;paddlespeech_client tts_online --server_ip 127.0.0.1 --port 8092 --protocol http --input &#34;您好，欢迎使用百度飞桨语音合成服务。&#34; --output output.wav&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;For more information please see: &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/streaming_asr_server/README.md&#34;&gt;streaming asr&lt;/a&gt; and &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/streaming_tts_server/README.md&#34;&gt;streaming tts&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;ModelList&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Model List&lt;/h2&gt; &#xA;&lt;p&gt;PaddleSpeech supports a series of most popular models. They are summarized in &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/released_model.md&#34;&gt;released models&lt;/a&gt; and attached with available pretrained models.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;SpeechToText&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Speech-to-Text&lt;/strong&gt; contains &lt;em&gt;Acoustic Model&lt;/em&gt;, &lt;em&gt;Language Model&lt;/em&gt;, and &lt;em&gt;Speech Translation&lt;/em&gt;, with the following details:&lt;/p&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Speech-to-Text Module Type&lt;/th&gt; &#xA;   &lt;th&gt;Dataset&lt;/th&gt; &#xA;   &lt;th&gt;Model Type&lt;/th&gt; &#xA;   &lt;th&gt;Example&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;4&#34;&gt;Speech Recogination&lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt;Aishell&lt;/td&gt; &#xA;   &lt;td&gt;DeepSpeech2 RNN + Conv based Models&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell/asr0&#34;&gt;deepspeech2-aishell&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transformer based Attention Models &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell/asr1&#34;&gt;u2.transformer.conformer-aishell&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; Librispeech&lt;/td&gt; &#xA;   &lt;td&gt;Transformer based Attention Models &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/librispeech/asr0&#34;&gt;deepspeech2-librispeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/librispeech/asr1&#34;&gt;transformer.conformer.u2-librispeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/librispeech/asr2&#34;&gt;transformer.conformer.u2-kaldi-librispeech&lt;/a&gt; &lt;/td&gt;  &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;TIMIT&lt;/td&gt; &#xA;   &lt;td&gt;Unified Streaming &amp;amp; Non-streaming Two-pass&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/timit/asr1&#34;&gt; u2-timit&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Alignment&lt;/td&gt; &#xA;   &lt;td&gt;THCHS30&lt;/td&gt; &#xA;   &lt;td&gt;MFA&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/.examples/thchs30/align0&#34;&gt;mfa-thchs30&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;1&#34;&gt;Language Model&lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;Ngram Language Model&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/other/ngram_lm&#34;&gt;kenlm&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt;Speech Translation (English to Chinese)&lt;/td&gt; &#xA;   &lt;td rowspan=&#34;2&#34;&gt;TED En-Zh&lt;/td&gt; &#xA;   &lt;td&gt;Transformer + ASR MTL&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ted_en_zh/st0&#34;&gt;transformer-ted&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FAT + Transformer + ASR MTL&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ted_en_zh/st1&#34;&gt;fat-st-ted&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;TextToSpeech&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Text-to-Speech&lt;/strong&gt; in PaddleSpeech mainly contains three modules: &lt;em&gt;Text Frontend&lt;/em&gt;, &lt;em&gt;Acoustic Model&lt;/em&gt; and &lt;em&gt;Vocoder&lt;/em&gt;. Acoustic Model and Vocoder models are listed as follow:&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; Text-to-Speech Module Type &lt;/th&gt; &#xA;   &lt;th&gt; Model Type &lt;/th&gt; &#xA;   &lt;th&gt; Dataset &lt;/th&gt; &#xA;   &lt;th&gt; Example &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt; Text Frontend &lt;/td&gt; &#xA;   &lt;td colspan=&#34;2&#34;&gt;   &lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/other/tn&#34;&gt;tn&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/other/g2p&#34;&gt;g2p&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;4&#34;&gt;Acoustic Model&lt;/td&gt; &#xA;   &lt;td&gt;Tacotron2&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech / CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/tts0&#34;&gt;tacotron2-ljspeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/tts0&#34;&gt;tacotron2-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Transformer TTS&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/tts1&#34;&gt;transformer-ljspeech&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SpeedySpeech&lt;/td&gt; &#xA;   &lt;td&gt;CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/tts2&#34;&gt;speedyspeech-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;FastSpeech2&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech / VCTK / CSMSC / AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/tts3&#34;&gt;fastspeech2-ljspeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/vctk/tts3&#34;&gt;fastspeech2-vctk&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/tts3&#34;&gt;fastspeech2-csmsc&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/tts3&#34;&gt;fastspeech2-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;6&#34;&gt;Vocoder&lt;/td&gt; &#xA;   &lt;td&gt;WaveFlow&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/voc0&#34;&gt;waveflow-ljspeech&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Parallel WaveGAN&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech / VCTK / CSMSC / AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/voc1&#34;&gt;PWGAN-ljspeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/vctk/voc1&#34;&gt;PWGAN-vctk&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc1&#34;&gt;PWGAN-csmsc&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/voc1&#34;&gt;PWGAN-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Multi Band MelGAN&lt;/td&gt; &#xA;   &lt;td&gt;CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc3&#34;&gt;Multi Band MelGAN-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Style MelGAN&lt;/td&gt; &#xA;   &lt;td&gt;CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc4&#34;&gt;Style MelGAN-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;HiFiGAN&lt;/td&gt; &#xA;   &lt;td&gt;LJSpeech / VCTK / CSMSC / AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/ljspeech/voc5&#34;&gt;HiFiGAN-ljspeech&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/vctk/voc5&#34;&gt;HiFiGAN-vctk&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc5&#34;&gt;HiFiGAN-csmsc&lt;/a&gt; / &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/voc5&#34;&gt;HiFiGAN-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;WaveRNN&lt;/td&gt; &#xA;   &lt;td&gt;CSMSC&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/csmsc/voc6&#34;&gt;WaveRNN-csmsc&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td rowspan=&#34;3&#34;&gt;Voice Cloning&lt;/td&gt; &#xA;   &lt;td&gt;GE2E&lt;/td&gt; &#xA;   &lt;td&gt;Librispeech, etc.&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/other/ge2e&#34;&gt;ge2e&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GE2E + Tacotron2&lt;/td&gt; &#xA;   &lt;td&gt;AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/vc0&#34;&gt;ge2e-tacotron2-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;GE2E + FastSpeech2&lt;/td&gt; &#xA;   &lt;td&gt;AISHELL-3&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/aishell3/vc1&#34;&gt;ge2e-fastspeech2-aishell3&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;AudioClassification&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Audio Classification&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; Task &lt;/th&gt; &#xA;   &lt;th&gt; Dataset &lt;/th&gt; &#xA;   &lt;th&gt; Model Type &lt;/th&gt; &#xA;   &lt;th&gt; Example &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Audio Classification&lt;/td&gt; &#xA;   &lt;td&gt;ESC-50&lt;/td&gt; &#xA;   &lt;td&gt;PANN&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/esc50/cls0&#34;&gt;pann-esc50&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;SpeakerVerification&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Speaker Verification&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; Task &lt;/th&gt; &#xA;   &lt;th&gt; Dataset &lt;/th&gt; &#xA;   &lt;th&gt; Model Type &lt;/th&gt; &#xA;   &lt;th&gt; Example &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Speaker Verification&lt;/td&gt; &#xA;   &lt;td&gt;VoxCeleb12&lt;/td&gt; &#xA;   &lt;td&gt;ECAPA-TDNN&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/voxceleb/sv0&#34;&gt;ecapa-tdnn-voxceleb12&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;&lt;a name=&#34;PunctuationRestoration&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Punctuation Restoration&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;table style=&#34;width:100%&#34;&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt; Task &lt;/th&gt; &#xA;   &lt;th&gt; Dataset &lt;/th&gt; &#xA;   &lt;th&gt; Model Type &lt;/th&gt; &#xA;   &lt;th&gt; Example &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Punctuation Restoration&lt;/td&gt; &#xA;   &lt;td&gt;IWLST2012_zh&lt;/td&gt; &#xA;   &lt;td&gt;Ernie Linear&lt;/td&gt; &#xA;   &lt;td&gt; &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/examples/iwslt2012/punc0&#34;&gt;iwslt2012-punc0&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Documents&lt;/h2&gt; &#xA;&lt;p&gt;Normally, &lt;a href=&#34;https://paperswithcode.com/area/speech&#34;&gt;Speech SoTA&lt;/a&gt;, &lt;a href=&#34;https://paperswithcode.com/area/audio&#34;&gt;Audio SoTA&lt;/a&gt; and &lt;a href=&#34;https://paperswithcode.com/area/music&#34;&gt;Music SoTA&lt;/a&gt; give you an overview of the hot academic topics in the related area. To focus on the tasks in PaddleSpeech, you will find the following guidelines are helpful to grasp the core ideas.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/install.md&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#quickstart&#34;&gt;Quick Start&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/README.md&#34;&gt;Some Demos&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Tutorials &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/quick_start.md&#34;&gt;Automatic Speech Recognition&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/models_introduction.md&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/data_preparation.md&#34;&gt;Data Preparation&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/asr/ngram_lm.md&#34;&gt;Ngram LM&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/quick_start.md&#34;&gt;Text-to-Speech&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/models_introduction.md&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/advanced_usage.md&#34;&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/tts/zh_text_frontend.md&#34;&gt;Chinese Rule Based Text Frontend&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://paddlespeech.readthedocs.io/en/latest/tts/demo.html&#34;&gt;Test Audio Samples&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Speaker Verification &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/audio_searching/README.md&#34;&gt;Audio Searching&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/speaker_verification/README.md&#34;&gt;Speaker Verification&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/audio_tagging/README.md&#34;&gt;Audio Classification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/speech_translation/README.md&#34;&gt;Speech Translation&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/demos/speech_server/README.md&#34;&gt;Speech Server&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/released_model.md&#34;&gt;Released Models&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#SpeechToText&#34;&gt;Speech-to-Text&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#TextToSpeech&#34;&gt;Text-to-Speech&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#AudioClassification&#34;&gt;Audio Classification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#SpeakerVerification&#34;&gt;Speaker Verification&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#PunctuationRestoration&#34;&gt;Punctuation Restoration&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#Community&#34;&gt;Community&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#contribution&#34;&gt;Welcome to contribute&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/#License&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;The Text-to-Speech module is originally called &lt;a href=&#34;https://github.com/PaddlePaddle/Parakeet&#34;&gt;Parakeet&lt;/a&gt;, and now merged with this repository. If you are interested in academic research about this task, please see &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/tree/develop/docs/source/tts#overview&#34;&gt;TTS research overview&lt;/a&gt;. Also, &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/raw/develop/docs/source/tts/models_introduction.md&#34;&gt;this document&lt;/a&gt; is a good guideline for the pipeline components.&lt;/p&gt; &#xA;&lt;h2&gt;⭐ Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/JiehangXie/PaddleBoBo&#34;&gt;PaddleBoBo&lt;/a&gt;: Use PaddleSpeech TTS to generate virtual human voice.&lt;/strong&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt;&#xA; &lt;a href=&#34;https://www.bilibili.com/video/BV1cL411V71o?share_source=copy_web&#34;&gt;&lt;img src=&#34;https://ai-studio-static-online.cdn.bcebos.com/06fd746ab32042f398fb6f33f873e6869e846fe63c214596ae37860fe8103720&#34; width=&#34;500px&#34;&gt;&lt;/a&gt;&#xA;&lt;/div&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://paddlespeech.readthedocs.io/en/latest/demo_video.html&#34;&gt;PaddleSpeech Demo Video&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/jerryuhoo/VTuberTalk&#34;&gt;VTuberTalk&lt;/a&gt;: Use PaddleSpeech TTS and ASR to clone voice from videos.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;div align=&#34;center&#34;&gt; &#xA; &lt;img src=&#34;https://raw.githubusercontent.com/jerryuhoo/VTuberTalk/main/gui/gui.png&#34; width=&#34;500px&#34;&gt; &#xA;&lt;/div&gt; &#xA;&lt;h2&gt;Citation&lt;/h2&gt; &#xA;&lt;p&gt;To cite PaddleSpeech for research, please use the following format.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;@inproceedings{zhang2022paddlespeech,&#xA;    title = {PaddleSpeech: An Easy-to-Use All-in-One Speech Toolkit},&#xA;    author = {Hui Zhang, Tian Yuan, Junkun Chen, Xintong Li, Renjie Zheng, Yuxin Huang, Xiaojie Chen, Enlei Gong, Zeyu Chen, Xiaoguang Hu, dianhai yu, Yanjun Ma, Liang Huang},&#xA;    booktitle = {Proceedings of the 2022 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies: Demonstrations},&#xA;    year = {2022},&#xA;    publisher = {Association for Computational Linguistics},&#xA;}&#xA;&#xA;@inproceedings{zheng2021fused,&#xA;  title={Fused acoustic and text encoding for multimodal bilingual pretraining and speech translation},&#xA;  author={Zheng, Renjie and Chen, Junkun and Ma, Mingbo and Huang, Liang},&#xA;  booktitle={International Conference on Machine Learning},&#xA;  pages={12736--12746},&#xA;  year={2021},&#xA;  organization={PMLR}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;a name=&#34;contribution&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Contribute to PaddleSpeech&lt;/h2&gt; &#xA;&lt;p&gt;You are warmly welcome to submit questions in &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/discussions&#34;&gt;discussions&lt;/a&gt; and bug reports in &lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSpeech/issues&#34;&gt;issues&lt;/a&gt;! Also, we highly appreciate if you are willing to contribute to this project!&lt;/p&gt; &#xA;&lt;h3&gt;Contributors&lt;/h3&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/zh794390558&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3038472?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jackwaterveg&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/87408988?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/yt605155624&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24568452?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kuke&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/3064195?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/xinghai-sun&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7038341?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/pkuyym&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/5782283?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/KPatr1ck&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/22954146?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/LittleChenCc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/10339970?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/745165806&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/20623194?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Mingxue-Xu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/92848346?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chrisxu2016&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/18379485?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lfchener&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6771821?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/luotao1&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6836917?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wanghaoshuang&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7534971?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/gongel&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24390500?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/mmglove&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/38800877?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/iclementine&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/16222986?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ZeyuChen&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1371212?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AK391&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/81195143?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/qingqing01&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/7845005?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ericxk&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/4719594?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/kvinwang&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6442159?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jiqiren11&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/82639260?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/AshishKarel&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/58069375?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/chesterkuo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6285069?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/tensor-tang&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/21351065?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/hysunflower&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/52739577?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/wwhu&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/6081200?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/lispc&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/2833376?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/jerryuhoo&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/24245709?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/harisankarh&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/1307053?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Jackiexiao&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/18050469?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/limpidezza&#34;&gt;&lt;img src=&#34;https://avatars.githubusercontent.com/u/71760778?v=4&#34; width=&#34;75&#34; height=&#34;75&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;Acknowledgement&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/yeyupiaoling&#34;&gt;yeyupiaoling&lt;/a&gt;/&lt;a href=&#34;https://github.com/yeyupiaoling/PPASR&#34;&gt;PPASR&lt;/a&gt;/&lt;a href=&#34;https://github.com/yeyupiaoling/PaddlePaddle-DeepSpeech&#34;&gt;PaddlePaddle-DeepSpeech&lt;/a&gt;/&lt;a href=&#34;https://github.com/yeyupiaoling/VoiceprintRecognition-PaddlePaddle&#34;&gt;VoiceprintRecognition-PaddlePaddle&lt;/a&gt;/&lt;a href=&#34;https://github.com/yeyupiaoling/AudioClassification-PaddlePaddle&#34;&gt;AudioClassification-PaddlePaddle&lt;/a&gt; for years of attention, constructive advice and great help.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/mymagicpower&#34;&gt;mymagicpower&lt;/a&gt; for the Java implementation of ASR upon &lt;a href=&#34;https://github.com/mymagicpower/AIAS/tree/main/3_audio_sdks/asr_sdk&#34;&gt;short&lt;/a&gt; and &lt;a href=&#34;https://github.com/mymagicpower/AIAS/tree/main/3_audio_sdks/asr_long_audio_sdk&#34;&gt;long&lt;/a&gt; audio files.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/JiehangXie&#34;&gt;JiehangXie&lt;/a&gt;/&lt;a href=&#34;https://github.com/JiehangXie/PaddleBoBo&#34;&gt;PaddleBoBo&lt;/a&gt; for developing Virtual Uploader(VUP)/Virtual YouTuber(VTuber) with PaddleSpeech TTS function.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/745165806&#34;&gt;745165806&lt;/a&gt;/&lt;a href=&#34;https://github.com/745165806/PaddleSpeechTask&#34;&gt;PaddleSpeechTask&lt;/a&gt; for contributing Punctuation Restoration model.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/745165806&#34;&gt;kslz&lt;/a&gt; for supplementary Chinese documents.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/awmmmm&#34;&gt;awmmmm&lt;/a&gt; for contributing fastspeech2 aishell3 conformer pretrained model.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/phecda-xu&#34;&gt;phecda-xu&lt;/a&gt;/&lt;a href=&#34;https://github.com/phecda-xu/PaddleDubbing&#34;&gt;PaddleDubbing&lt;/a&gt; for developing a dubbing tool with GUI based on PaddleSpeech TTS model.&lt;/li&gt; &#xA; &lt;li&gt;Many thanks to &lt;a href=&#34;https://github.com/jerryuhoo&#34;&gt;jerryuhoo&lt;/a&gt;/&lt;a href=&#34;https://github.com/jerryuhoo/VTuberTalk&#34;&gt;VTuberTalk&lt;/a&gt; for developing a GUI tool based on PaddleSpeech TTS and code for making datasets from videos based on PaddleSpeech ASR.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Besides, PaddleSpeech depends on a lot of open source repositories. See &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/docs/source/reference.md&#34;&gt;references&lt;/a&gt; for more information.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a name=&#34;License&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;PaddleSpeech is provided under the &lt;a href=&#34;https://raw.githubusercontent.com/PaddlePaddle/PaddleSpeech/develop/LICENSE&#34;&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>yangzongzhuan/RuoYi</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/yangzongzhuan/RuoYi</id>
    <link href="https://github.com/yangzongzhuan/RuoYi" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🎉 (RuoYi)官方仓库 基于SpringBoot的权限管理系统 易读易懂、界面简洁美观。 核心技术采用Spring、MyBatis、Shiro没有任何其它重度依赖。直接运行即可用&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img alt=&#34;logo&#34; src=&#34;https://oscimg.oschina.net/oscnet/up-dd77653d7c9f197dd9d93684f3c8dcfbab6.png&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34; style=&#34;margin: 30px 0 30px; font-weight: bold;&#34;&gt;RuoYi v4.7.3&lt;/h1&gt; &#xA;&lt;h4 align=&#34;center&#34;&gt;基于SpringBoot开发的轻量级Java快速开发框架&lt;/h4&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://gitee.com/y_project/RuoYi/stargazers&#34;&gt;&lt;img src=&#34;https://gitee.com/y_project/RuoYi/badge/star.svg?theme=gvp&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitee.com/y_project/RuoYi&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/RuoYi-v4.7.3-brightgreen.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://gitee.com/y_project/RuoYi/blob/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/mashape/apistatus.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;平台简介&lt;/h2&gt; &#xA;&lt;p&gt;一直想做一款后台管理系统，看了很多优秀的开源项目但是发现没有合适的。于是利用空闲休息时间开始自己写了一套后台系统。如此有了若依。她可以用于所有的Web应用程序，如网站管理后台，网站会员中心，CMS，CRM，OA。所有前端后台代码封装过后十分精简易上手，出错概率低。同时支持移动客户端访问。系统会陆续更新一些实用功能。&lt;/p&gt; &#xA;&lt;p&gt;性别男，若依是给女儿取的名字（寓意：你若不离不弃，我必生死相依）&lt;/p&gt; &#xA;&lt;p&gt;若依是一套全部开源的快速开发平台，毫无保留给个人及企业免费使用。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;前后端分离版本，请移步&lt;a href=&#34;https://gitee.com/y_project/RuoYi-Vue&#34;&gt;RuoYi-Vue&lt;/a&gt;，微服务版本，请移步&lt;a href=&#34;https://gitee.com/y_project/RuoYi-Cloud&#34;&gt;RuoYi-Cloud&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;感谢 &lt;a href=&#34;https://gitee.com/hplus_admin/hplus&#34;&gt;hplus&lt;/a&gt; 后台主题 UI 框架。&lt;/li&gt; &#xA; &lt;li&gt;阿里云折扣场：&lt;a href=&#34;http://aly.ruoyi.vip&#34;&gt;点我进入&lt;/a&gt;，腾讯云秒杀场：&lt;a href=&#34;http://txy.ruoyi.vip&#34;&gt;点我进入&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/li&gt; &#xA; &lt;li&gt;阿里云优惠券：&lt;a href=&#34;https://www.aliyun.com/minisite/goods?userCode=brki8iof&amp;amp;share_source=copy_link&#34;&gt;点我领取&lt;/a&gt;，腾讯云优惠券：&lt;a href=&#34;https://cloud.tencent.com/redirect.php?redirect=1025&amp;amp;cps_key=198c8df2ed259157187173bc7f4f32fd&amp;amp;from=console&#34;&gt;点我领取&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;内置功能&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;用户管理：用户是系统操作者，该功能主要完成系统用户配置。&lt;/li&gt; &#xA; &lt;li&gt;部门管理：配置系统组织机构（公司、部门、小组），树结构展现支持数据权限。&lt;/li&gt; &#xA; &lt;li&gt;岗位管理：配置系统用户所属担任职务。&lt;/li&gt; &#xA; &lt;li&gt;菜单管理：配置系统菜单，操作权限，按钮权限标识等。&lt;/li&gt; &#xA; &lt;li&gt;角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。&lt;/li&gt; &#xA; &lt;li&gt;字典管理：对系统中经常使用的一些较为固定的数据进行维护。&lt;/li&gt; &#xA; &lt;li&gt;参数管理：对系统动态配置常用参数。&lt;/li&gt; &#xA; &lt;li&gt;通知公告：系统通知公告信息发布维护。&lt;/li&gt; &#xA; &lt;li&gt;操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。&lt;/li&gt; &#xA; &lt;li&gt;登录日志：系统登录日志记录查询包含登录异常。&lt;/li&gt; &#xA; &lt;li&gt;在线用户：当前系统中活跃用户状态监控。&lt;/li&gt; &#xA; &lt;li&gt;定时任务：在线（添加、修改、删除)任务调度包含执行结果日志。&lt;/li&gt; &#xA; &lt;li&gt;代码生成：前后端代码的生成（java、html、xml、sql）支持CRUD下载 。&lt;/li&gt; &#xA; &lt;li&gt;系统接口：根据业务代码自动生成相关的api接口文档。&lt;/li&gt; &#xA; &lt;li&gt;服务监控：监视当前系统CPU、内存、磁盘、堆栈等相关信息。&lt;/li&gt; &#xA; &lt;li&gt;缓存监控：对系统的缓存查询，删除、清空等操作。&lt;/li&gt; &#xA; &lt;li&gt;在线构建器：拖动表单元素生成相应的HTML代码。&lt;/li&gt; &#xA; &lt;li&gt;连接池监视：监视当前系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;在线体验&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;admin/admin123&lt;/li&gt; &#xA; &lt;li&gt;陆陆续续收到一些打赏，为了更好的体验已用于演示服务器升级。谢谢各位小伙伴。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;演示地址：&lt;a href=&#34;http://ruoyi.vip&#34;&gt;http://ruoyi.vip&lt;/a&gt;&lt;br&gt; 文档地址：&lt;a href=&#34;http://doc.ruoyi.vip&#34;&gt;http://doc.ruoyi.vip&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;演示图&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-42e518aa72a24d228427a1261cb3679f395.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-7f20dd0edba25e5187c5c4dd3ec7d3d9797.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-2dae3d87f6a8ca05057db059cd9a411d51d.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-ea4d98423471e55fba784694e45d12bd4bb.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-7f6c6e9f5873efca09bd2870ee8468b8fce.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-c708b65f2c382a03f69fe1efa8d341e6cff.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-9ab586c47dd5c7b92bca0d727962c90e3b8.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-ef954122a2080e02013112db21754b955c6.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-088edb4d531e122415a1e2342bccb1a9691.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-f886fe19bd820c0efae82f680223cac196c.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-c7a2eb71fa65d6e660294b4bccca613d638.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-e60137fb0787defe613bd83331dc4755a70.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-7c51c1b5758f0a0f92ed3c60469b7526f9f.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-15181aed45bb2461aa97b594cbf2f86ea5f.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-83326ad52ea63f67233d126226738054d98.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-3bd6d31e913b70df00107db51d64ef81df7.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-70a2225836bc82042a6785edf6299e2586a.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-0184d6ab01fdc6667a14327fcaf8b46345d.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-64d8086dc2c02c8f71170290482f7640098.png&#34;&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;img src=&#34;https://oscimg.oschina.net/oscnet/up-5e4daac0bb59612c5038448acbcef235e3a.png&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;h2&gt;若依交流群&lt;/h2&gt; &#xA;&lt;p&gt;QQ群： &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5HBAaYN&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-1389287-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5cHeRVW&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-1679294-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=53R0L5Z&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-1529866-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5g75dCU&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-1772718-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=58cPoHA&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-1366522-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5Ofd4Pb&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-1382251-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5yugASz&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-1145125-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5Rf3d2P&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-86752435-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5ZIjaeP&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-134072510-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5CJw1jY&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-210336300-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5omzbKc&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-339522636-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=qPIKBb7s&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-130035985-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=4NsjKbtU&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-143151071-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=VD2pkz2G&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-158781320-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=HlshFwkJ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-201531282-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=0ARRrO9V&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-101526938-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=up9k3ZXJ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-264355400-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=540WfdEr&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-298522656-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=ss91fC4t&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E5%B7%B2%E6%BB%A1-139845794-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=uUQpdY7J&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/213650505-blue.svg?sanitize=true&#34; alt=&#34;加入QQ群&#34;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>gustavoguanabara/html-css</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/gustavoguanabara/html-css</id>
    <link href="https://github.com/gustavoguanabara/html-css" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Curso de HTML5 e CSS3&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/gustavoguanabara/html-css/master/imagens/mascote.png&#34; align=&#34;right&#34; width=&#34;300&#34;&gt; &#xA;&lt;h1&gt;Curso de HTML5 e CSS3&lt;/h1&gt; &#xA;&lt;p&gt;Material público para o ensino básico de HTML5 e CSS3 para alunos iniciantes. Acesse o material em PDF, analise o código disponibilizado para cada exercício e veja-os funcionando em execução direta via repositório GitHub.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gustavoguanabara/html-css/tree/master/aulas-pdf&#34;&gt;Acesse os PDFs das aulas clicando aqui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gustavoguanabara/html-css/tree/master/exercicios&#34;&gt;Código disponível para os exercícios&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://gustavoguanabara.github.io/html-css/exercicios/&#34;&gt;Execute os exercícios aqui&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/gustavoguanabara/html-css/tree/master/desafios&#34;&gt;Resolva os desafios de HTML aqui&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Direitos de uso&lt;/h2&gt; &#xA;&lt;p&gt;Você tem todo o direito de usar esse material para seu próprio aprendizado. Professores também podem ter acesso a todo o conteúdo e usá-los com seus alunos. Porém todos o que usarem esse material - seja para qual for a finalidade - deverão manter a referência ao material original, criado e disponibilizado pelo Prof. Gustavo Guanabara. Este conteúdo não poderá ser utilizado em nenhuma hipótese para ser replicada - integral ou parcialmente - por autores/ editoras/ instituições de ensino para criar livros ou apostilas, com finalidades de obter ganho financeiro com ele.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>lucidrains/imagen-pytorch</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/lucidrains/imagen-pytorch</id>
    <link href="https://github.com/lucidrains/imagen-pytorch" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Implementation of Imagen, Google&#39;s Text-to-Image Neural Network, in Pytorch&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/lucidrains/imagen-pytorch/main/imagen.png&#34; width=&#34;450px&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Imagen - Pytorch (wip)&lt;/h2&gt; &#xA;&lt;p&gt;Implementation of &lt;a href=&#34;https://gweb-research-imagen.appspot.com/&#34;&gt;Imagen&lt;/a&gt;, Google&#39;s Text-to-Image Neural Network that beats DALL-E2, in Pytorch. It is the new SOTA for text-to-image synthesis.&lt;/p&gt; &#xA;&lt;p&gt;Architecturally, it is actually much simpler than DALL-E2. It consists of a cascading DDPM conditioned on text embeddings from a large pretrained T5 model (attention network). It also contains dynamic clipping for improved classifier free guidance, noise level conditioning, and a memory efficient unet design.&lt;/p&gt; &#xA;&lt;p&gt;It appears neither CLIP nor prior network is needed after all. And so research continues.&lt;/p&gt; &#xA;&lt;p&gt;Please join &lt;a href=&#34;https://discord.gg/xBPBXfcFHd&#34;&gt;&lt;img alt=&#34;Join us on Discord&#34; src=&#34;https://img.shields.io/discord/823813159592001537?color=5865F2&amp;amp;logo=discord&amp;amp;logoColor=white&#34;&gt;&lt;/a&gt; if you are interested in helping out with the replication with the &lt;a href=&#34;https://laion.ai/&#34;&gt;LAION&lt;/a&gt; community&lt;/p&gt; &#xA;&lt;h2&gt;Install&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ pip install imagen-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Usage&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from imagen_pytorch import Unet, Imagen&#xA;&#xA;# unet for imagen&#xA;&#xA;unet1 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = 3,&#xA;    layer_attns = (False, True, True, True),&#xA;    layer_cross_attns = (False, True, True, True)&#xA;)&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = (2, 4, 8, 8),&#xA;    layer_attns = (False, False, False, True),&#xA;    layer_cross_attns = (False, False, False, True)&#xA;)&#xA;&#xA;# imagen, which contains the unets above (base unet and super resoluting ones)&#xA;&#xA;imagen = Imagen(&#xA;    unets = (unet1, unet2),&#xA;    image_sizes = (64, 256),&#xA;    beta_schedules = (&#39;cosine&#39;, &#39;linear&#39;),&#xA;    timesteps = 1000,&#xA;    cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# mock images (get a lot of this) and text encodings from large T5&#xA;&#xA;text_embeds = torch.randn(4, 256, 768).cuda()&#xA;text_masks = torch.ones(4, 256).bool().cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# feed images into imagen, training each unet in the cascade&#xA;&#xA;for i in (1, 2):&#xA;    loss = imagen(images, text_embeds = text_embeds, text_masks = text_masks, unet_number = i)&#xA;    loss.backward()&#xA;&#xA;# do the above for many many many many steps&#xA;# now you can sample an image based on the text embeddings from the cascading ddpm&#xA;&#xA;images = imagen.sample(texts = [&#xA;    &#39;a whale breaching from afar&#39;,&#xA;    &#39;young girl blowing out candles on her birthday cake&#39;,&#xA;    &#39;fireworks with blue and green sparkles&#39;&#xA;], cond_scale = 2.)&#xA;&#xA;images.shape # (3, 3, 256, 256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;With the &lt;code&gt;ImagenTrainer&lt;/code&gt; wrapper class, the exponential moving averages for all of the U-nets in the cascading DDPM will be automatically taken care of when calling &lt;code&gt;update&lt;/code&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import torch&#xA;from imagen_pytorch import Unet, Imagen, ImagenTrainer&#xA;&#xA;# unet for imagen&#xA;&#xA;unet1 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = 3,&#xA;    layer_attns = (False, True, True, True),&#xA;)&#xA;&#xA;unet2 = Unet(&#xA;    dim = 32,&#xA;    cond_dim = 512,&#xA;    dim_mults = (1, 2, 4, 8),&#xA;    num_resnet_blocks = (2, 4, 8, 8),&#xA;    layer_attns = (False, False, False, True),&#xA;    layer_cross_attns = (False, False, False, True)&#xA;)&#xA;&#xA;# imagen, which contains the unets above (base unet and super resoluting ones)&#xA;&#xA;imagen = Imagen(&#xA;    unets = (unet1, unet2),&#xA;    text_encoder_name = &#39;t5-large&#39;,&#xA;    image_sizes = (64, 256),&#xA;    beta_schedules = (&#39;cosine&#39;, &#39;linear&#39;),&#xA;    timesteps = 1000,&#xA;    cond_drop_prob = 0.5&#xA;).cuda()&#xA;&#xA;# wrap imagen with the trainer class&#xA;&#xA;trainer = ImagenTrainer(imagen)&#xA;&#xA;# mock images (get a lot of this) and text encodings from large T5&#xA;&#xA;text_embeds = torch.randn(4, 256, 1024).cuda()&#xA;text_masks = torch.ones(4, 256).bool().cuda()&#xA;images = torch.randn(4, 3, 256, 256).cuda()&#xA;&#xA;# feed images into imagen, training each unet in the cascade&#xA;&#xA;for i in (1, 2):&#xA;    loss = trainer(images, text_embeds = text_embeds, text_masks = text_masks, unet_number = i)&#xA;    trainer.update(unet_number = i)&#xA;&#xA;# do the above for many many many many steps&#xA;# now you can sample an image based on the text embeddings from the cascading ddpm&#xA;&#xA;images = trainer.sample(texts = [&#xA;    &#39;a puppy looking anxiously at a giant donut on the table&#39;,&#xA;    &#39;the milky way galaxy in the style of monet&#39;&#xA;], cond_scale = 2.)&#xA;&#xA;images.shape # (2, 3, 256, 256)&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Shoutouts&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://stability.ai/&#34;&gt;StabilityAI&lt;/a&gt; for the generous sponsorship, as well as my other sponsors out there&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://huggingface.co/&#34;&gt;🤗 Huggingface&lt;/a&gt; for their amazing transformers library. The text encoder portion is pretty much taken care of because of them&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jorgemcgomes&#34;&gt;Jorge Gomes&lt;/a&gt; for helping out with the T5 loading code and advice on the correct T5 version&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/crowsonkb&#34;&gt;Katherine Crowson&lt;/a&gt;, for her &lt;a href=&#34;https://github.com/crowsonkb/v-diffusion-jax/raw/master/diffusion/utils.py&#34;&gt;beautiful code&lt;/a&gt;, which helped me understand the continuous time version of gaussian diffusion&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;You? It isn&#39;t done yet, chip in if you are a researcher or skilled ML engineer&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Todo&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; use huggingface transformers for T5-small text embeddings&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add dynamic thresholding&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add dynamic thresholding DALLE2 and video-diffusion repository as well&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; allow for one to set T5-large (and perhaps small factory method to take in any huggingface transformer)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add the lowres noise level with the pseudocode in appendix, and figure out what is this sweep they do at inference time&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; port over some training code from DALLE2&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; need to be able to use a different noise schedule per unet (cosine was used for base, but linear for SR)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; just make one master-configurable unet&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; complete resnet block (biggan inspired? but with groupnorm) - complete self attention&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; complete conditioning embedding block (and make it completely configurable, whether it be attention, film etc)&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; consider using perceiver-resampler from &lt;a href=&#34;https://github.com/lucidrains/flamingo-pytorch&#34;&gt;https://github.com/lucidrains/flamingo-pytorch&lt;/a&gt; in place of attention pooling&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add attention pooling option, in addition to cross attention and film&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled&gt; add optional cosine decay schedule with warmup, for each unet, to trainer&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; figure out if learned variance was used at all, and remove it if it was inconsequential&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; switch to continuous timesteps instead of discretized, as it seems that is what they used for all stages - first figure out the linear noise schedule case from the variational ddpm paper &lt;a href=&#34;https://openreview.net/forum?id=2LdBqxc1Yv&#34;&gt;https://openreview.net/forum?id=2LdBqxc1Yv&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; exercise efficient attention expertise + explore skip layer excitation&lt;/li&gt; &#xA; &lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled&gt; try out grid attention&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Citations&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Saharia2022PhotorealisticTD,&#xA;    title   = {Photorealistic Text-to-Image Diffusion Models with Deep Language Understanding},&#xA;    author  = {Chitwan Saharia and William Chan and Saurabh Saxena and Lala Li and Jay Whang and Emily L. Denton and Seyed Kamyar Seyed Ghasemipour and Burcu Karagol Ayan and Seyedeh Sara Mahdavi and Raphael Gontijo Lopes and Tim Salimans and Jonathan Ho and David Fleet and Mohammad Norouzi},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@inproceedings{Tu2022MaxViTMV,&#xA;    title   = {MaxViT: Multi-Axis Vision Transformer},&#xA;    author  = {Zhengzhong Tu and Hossein Talebi and Han Zhang and Feng Yang and Peyman Milanfar and Alan Conrad Bovik and Yinxiao Li},&#xA;    year    = {2022},&#xA;    url     = {https://arxiv.org/abs/2204.01697}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bibtex&#34;&gt;@article{Alayrac2022Flamingo,&#xA;    title   = {Flamingo: a Visual Language Model for Few-Shot Learning},&#xA;    author  = {Jean-Baptiste Alayrac et al},&#xA;    year    = {2022}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
  </entry>
  <entry>
    <title>github/copilot-docs</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/github/copilot-docs</id>
    <link href="https://github.com/github/copilot-docs" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Documentation for GitHub Copilot&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Copilot &lt;img src=&#34;https://img.shields.io/badge/version-technical_preview-green&#34; alt=&#34;Version&#34;&gt;&lt;/h1&gt; &#xA;&lt;img width=&#34;128&#34; alt=&#34;GitHub Copilot Logo&#34; src=&#34;https://user-images.githubusercontent.com/28068/123712981-02676c80-d839-11eb-919a-96ee0c895e15.png&#34;&gt; &#xA;&lt;p&gt;Welcome to the GitHub Copilot user community! In this repository, you can find documentation, walkthroughs, examples, and the latest resources you need to use GitHub Copilot.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;p&gt;To install GitHub Copilot, check out the Getting Started guides:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/visualstudiocode/gettingstarted.md#getting-started-with-github-copilot-in-visual-studio-code&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/visualstudio/gettingstarted.md#getting-started-with-github-copilot-in-visual-studio&#34;&gt;Visual Studio&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs/jetbrains/gettingstarted.md#getting-started-with-github-copilot-in-jetbrains&#34;&gt;JetBrains&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/copilot.vim#getting-started&#34;&gt;Neovim&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;For a tour of GitHub Copilot, visit the homepage at &lt;a href=&#34;https://copilot.github.com&#34;&gt;copilot.github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;How to get help&lt;/h2&gt; &#xA;&lt;p&gt;Have a question, or want to provide feedback? Visit the &lt;a href=&#34;https://github.com/github/feedback/discussions/categories/copilot-feedback&#34;&gt;Feedback forum&lt;/a&gt; to ask questions, share bugs or feedback, or chat with other users in the Preview. The GitHub Copilot team will respond as often as possible, but we also welcome you to share your experiences and help others in the community.&lt;/p&gt; &#xA;&lt;h2&gt;Safety&lt;/h2&gt; &#xA;&lt;p&gt;We take safety seriously and are constantly working to improve GitHub Copilot. If you discover dangerous, biased, or offensive output from GitHub Copilot, please report it privately to &lt;a href=&#34;mailto:copilot-safety@github.com&#34;&gt;copilot-safety@github.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Useful links&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://copilot.github.com&#34;&gt;GitHub Copilot homepage&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/gallery&#34;&gt;Gallery&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/github/feedback/discussions/categories/copilot-feedback&#34;&gt;Feedback forum&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Code of conduct&lt;/h2&gt; &#xA;&lt;p&gt;All users of GitHub Copilot are expected to comply with our &lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/CODE_OF_CONDUCT.md&#34;&gt;Code of Conduct&lt;/a&gt;. By participating in this repository, you are also agreeing to the same &lt;a href=&#34;https://help.github.com/articles/github-terms-of-service/&#34;&gt;Terms of Service&lt;/a&gt; that you agree to when using GitHub.com.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Content in this repository is released under &lt;a href=&#34;https://raw.githubusercontent.com/github/copilot-docs/main/LICENSE.txt&#34;&gt;CC-BY-4.0&lt;/a&gt;. When using the GitHub logos, be sure to follow the &lt;a href=&#34;https://github.com/logos&#34;&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>curated-intel/CTI-fundamentals</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/curated-intel/CTI-fundamentals</id>
    <link href="https://github.com/curated-intel/CTI-fundamentals" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A collection of papers, blogs, and resources that make up the quintessential aspects of cyber threat intelligence&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src=&#34;https://github.com/curated-intel/CTI-fundamentals/raw/main/ci-logo.png&#34; alt=&#34;logo&#34;&gt;&lt;/p&gt; &#xA;&lt;h1&gt;CTI Fundamentals&lt;/h1&gt; &#xA;&lt;p&gt;A collection of essential resources related to cyber threat intelligence theory.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;code&gt;CTI Theory&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Author&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Resource URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Central_Intelligence_Agency&#34;&gt;The US Central Intelligence Agency&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The traditional Intelligence cycle describes how intelligence is ideally processed in civilian and military intelligence agencies, and law enforcement organizations.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://web.archive.org/web/20200508151219/https://www.cia.gov/kids-page/6-12th-grade/who-we-are-what-we-do/the-intelligence-cycle.html&#34;&gt;the-intelligence-cycle.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://recordedfuture.com&#34;&gt;Recorded Future&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The traditional intelligence life cycle tailored to threat intelligence embedded in modern security operations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://web.archive.org/web/20210330021716/https://www.recordedfuture.com/threat-intelligence-lifecycle-phases/&#34;&gt;What the 6 Phases of the Threat Intelligence Lifecycle Mean for Your Team&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Central_Intelligence_Agency&#34;&gt;The US Central Intelligence Agency&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This primer highlights structured analytic techniques—some widely used in the private sector and academia, some unique to the intelligence profession&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.cia.gov/static/955180a45afe3f5013772c313b16face/Tradecraft-Primer-apr09.pdf&#34;&gt;Tradecraft-Primer-apr09.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.linkedin.com/company/isight-partners&#34;&gt;iSIGHT Partners&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The first definitive guide to cyber threat intelligence ever produced&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://cryptome.org/2015/09/cti-guide.pdf&#34;&gt;cti-guide.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/DavidJBianco&#34;&gt;David J. Bianco&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Analysing relationships between the types of indicators you might use to detect an adversary&#39;s activities and how much pain it will cause them when you are able to deny those indicators to them&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://detect-respond.blogspot.com/2013/03/the-pyramid-of-pain.html&#34;&gt;the-pyramid-of-pain.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Center for Cyber Intelligence Analysis and Threat Research&lt;/td&gt; &#xA;   &lt;td&gt;The Diamond Model: a novel model of intrusion analysis built by analysts, derived from years of experience&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.activeresponse.org/wp-content/uploads/2013/07/diamond.pdf?adlt=strict&#34;&gt;diamond.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Lockheed_Martin&#34;&gt;Lockheed Martin&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Cyber Kill Chain® framework is part of the Intelligence Driven Defense® model for the identification and prevention of cyber intrusions activity. The model identifies what the adversaries must complete in order to achieve their objective&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.lockheedmartin.com/content/dam/lockheed-martin/rms/documents/cyber/Gaining_the_Advantage_Cyber_Kill_Chain.pdf&#34;&gt;Cyber_Kill_Chain.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.sans.org/&#34;&gt;SANS&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;SANS shared a Cyber Kill Chain tailored to Industrial Control Systems (ICS), written by Michael J. Assante and Robert M. Lee.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/curated-intel/CTI-fundamentals/raw/main/Archive/SANS%20-%20ICS%20Kill%20Chain%20-%20Whitepaper.pdf&#34;&gt;The Industrial Control System Cyber Kill Chain&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Mercyhurst_University_Institute_for_Intelligence_Studies&#34;&gt;Mercyhurst University Institute for Intelligence Studies&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Analyst’s Style Manual is a product intended to assist student analysts with the many perplexing and complex rules they should follow in producing written intelligence products&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ncirc.bja.ojp.gov/sites/g/files/xyckuh326/files/media/document/analysts_style_manual.pdf&#34;&gt;analysts_style_manual.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://no.linkedin.com/in/fmurre?trk=pulse-article_main-author-card&#34;&gt;Freddy M&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Intelligence Architecture Map is based on interviews of industry experts, former intelligence practitioners, and Freddy&#39;s personal views. It represents a logical and meaningful way of how different aspects of producing intelligence should be put together.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.linkedin.com/pulse/intelligence-architecture-map-freddy-m/&#34;&gt;intelligence-architecture-map-freddy-m&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/euphoricfall&#34;&gt;Grace Chi&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;IS SHARING CARING? A comprehensive study on the current cyber threat intelligence inter-personal and social networking practices, results, and attitudes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pulsedive.com/downloads/ctinetworkingreport2022.pdf&#34;&gt;ctinetworkingreport2022.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://isri.cmu.edu/&#34;&gt;Institute for Software Research School of Computer Science Carnegie Mellon University&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A paper from the Carnegie Mellon ISR on the life-cycle of an advanced persistent threat group attack, from reconnaissance to data exfiltration&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;http://reports-archive.adm.cs.cmu.edu/anon/isr2017/CMU-ISR-17-100.pdf&#34;&gt;CMU-ISR-17-100.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/John_Boyd_(military_strategist)&#34;&gt;John Boyd&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The OODA loop is the cycle observe–orient–decide–act. The approach explains how agility can overcome raw power in dealing with human opponents. It is especially applicable to cyber security and cyberwarfare.&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/OODA_loop&#34;&gt;OODA_Loop.html&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/RAND_Corporation&#34;&gt;RAND Corporation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;RAND’s Four-Step Scalable Warning and Resilience Model&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.rand.org/content/dam/rand/pubs/research_reports/RRA300/RRA382-1/RAND_RRA382-1.pdf&#34;&gt;RAND_RRA382-1.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.nafn.gov.uk/&#34;&gt;UK National Anti Fraud Network&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Basics of Intelligence Management, including classification, evaluation, dissemination, and the intelligence confidence matrix&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.local.gov.uk/sites/default/files/documents/Intelligence%20Management%20Training.pdf&#34;&gt;Intelligence%20Management%20Training.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tandfonline.com/journals/ujic20&#34;&gt;International Journal of Intelligence and CounterIntelligence&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;An argument that CTI is a product without a process, which has several underlying causes and consequences for the CTI practice. It is also argues that the field needs to implement traditional intelligence analysis and methodology, rather than add more technology&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tandfonline.com/doi/full/10.1080/08850607.2020.1780062&#34;&gt;Cyber Threat Intelligence: A Product Without a Process?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mxm0z/&#34;&gt;mxm0z&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This is a collection of useful resources concerning intelligence writing such as manuals/guides, standards, books, and articles&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/mxm0z/awesome-intelligence-writing&#34;&gt;Awesome Intelligence Writing&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://threat-intelligence.eu&#34;&gt;threat-intelligence.eu&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Technical standards related to threat intelligence&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://threat-intelligence.eu/standards/&#34;&gt;Standards related to Threat Intelligence&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;code&gt;Practical Threat Intelligence&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Author&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Resource URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mandiant.com/&#34;&gt;Mandiant&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Mandiant&#39;s unprecedented report linking APT1 to China&#39;s 2nd Bureau of the People&#39;s Liberation Army (PLA) General Staff Department&#39;s (GSD) 3rd Department (Military Cover Designator 61398).&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mandiant.com/resources/apt1-exposing-one-of-chinas-cyber-espionage-units&#34;&gt;mandiant-apt1-report.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.crowdstrike.com/&#34;&gt;CrowdStrike&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CrowdStrike&#39;s &#34;breakout time&#34; report provided an illuminating look at which actors operate the fastest within networks they have gained access to, and how effective and rapid the defenders have to be to defeat some of the most capable adversaries&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.crowdstrike.com/blog/first-ever-adversary-ranking-in-2019-global-threat-report-highlights-the-importance-of-speed/&#34;&gt;crowdstrike.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/TrevorGiffen&#34;&gt;Trevor Giffen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The Initial Access Broker Landscape&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.curatedintel.org/2021/10/initial-access-broker-landscape.html&#34;&gt;curatedintel.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/TrevorGiffen&#34;&gt;Trevor Giffen&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Assessing the State of Breached Data Search Services&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.curatedintel.org/2021/03/assessing-state-of-breached-data-search.html&#34;&gt;curatedintel.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/BushidoToken&#34;&gt;William Thomas&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Threat Group Naming Schemes In Cyber Threat Intelligence&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.curatedintel.org/2022/05/threat-group-naming-schemes-in-cyber.html&#34;&gt;curatedintel.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/BushidoToken&#34;&gt;William Thomas&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CTI lexicon guide to some of the jargon and acronyms used in threat intelligence&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BushidoUK/CTI-Lexicon/raw/main/Lexicon.md&#34;&gt;CTI Lexicon&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/sj94356&#34;&gt;Sarah Jones&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;A Brief History of Attribution Mistakes - analyse the mistakes made by others so that you do not repeat them&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://securityandtechnology.org/wp-content/uploads/2020/07/summit_archive_1548105619.pdf&#34;&gt;securityandtechnology.org&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/xorlgr&#34;&gt;Anastasios Pingios&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Intelligence Agency and Security Services Internal Structuring&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/BushidoUK/Open-source-tools-for-CTI/raw/master/Adversary%20Intelligence.md#intelligence-agency-and-security-services-internal-structure&#34;&gt;xorl.wordpress.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/RAND_Corporation&#34;&gt;RAND Corporation&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;This report describes the fundamental characteristics of cybercriminal black markets and how they have grown into their current state in order to give insight into how their existence can harm the information security environment&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.rand.org/content/dam/rand/pubs/research_reports/RR600/RR610/RAND_RR610.pdf&#34;&gt;RAND_RR610.pdf&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/Bank_Security&#34;&gt;@Bank_Security&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;HUMINT activities during undercover operations are fundamental as a part of Cyber Intelligence activities. This guide shares insights how someone could engage Threat Actors during undercover operations in the cybercriminal underground&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://bank-security.medium.com/cyber-intelligence-humint-operations-2d3d526e4007&#34;&gt;cyber-intelligence-humint-operations&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/MsftSecIntel&#34;&gt;MSTIC&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The &#34;cybercrime gig economy&#34; describes the intricacies of Ransomware-as-a-Service (RaaS) and RaaS affiliate operations&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.microsoft.com/security/blog/2022/05/09/ransomware-as-a-service-understanding-the-cybercrime-gig-economy-and-how-to-protect-yourself/&#34;&gt;microsoft.com&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/ProjectZeroBugs&#34;&gt;Google Project Zero&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;GP0 has compiled a spreadsheet of 0day vulnerabilities leveraged in the wild by threat actors before the vendors were aware of them&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/view&#34;&gt;0days &#34;In the Wild&#34;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/likethecoins&#34;&gt;Katie Nickels&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Analysts have compiled a list of court documents issued by the Department of Justice (DOJ) specifically regarding various threat actor charges and indictments, from APT group members to ransomware operators&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/12iZfDkc-DtVNXV5ZoOiKKZuNGcsb3yQ0V3DNBQIalSo/htmlview#gid=1677585875&#34;&gt;Legal Documents of Interest to CTI Analysts&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://intel471.com&#34;&gt;Intel 471&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The CU-GIRH is a baseline tool to assist security professionals and teams in organizing, prioritizing, and producing cyber underground intelligence based on General Intelligence Requirements (GIRs) — a compilation of frequently asked intelligence requirements applicable to the cybercrime underground such as: forums, marketplaces, products, services, and threat actors. Access to the GIR Handbook includes an intelligence planning workbook (templates, samples)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://intel471.com/resources/cu-girh-download-request&#34;&gt;Cybercrime Underground General Intelligence Requirements Handbook (CU-GIRH)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;&lt;code&gt;Enterprise Threat Intelligence&lt;/code&gt;&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Author&lt;/th&gt; &#xA;   &lt;th&gt;Description&lt;/th&gt; &#xA;   &lt;th&gt;Resource URL&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.crest-approved.org/&#34;&gt;CREST&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;CREST released their CTI Maturity Model Assessment Tool (MMAT) in 2020, a customizable and modular tool for assessing the maturity of a threat intelligence program for free. This tool has three types: Summary, Intermediate, Detailed. In 2022, the tool vanished from CREST&#39;s website, but is archived by Curated Intelligence&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/curated-intel/CTI-fundamentals/tree/main/Archive/CREST%20CTI%20Maturity%20Model%20Tool&#34;&gt;CREST CTI Maturity Model Assessment Tool (MMAT)&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://recordedfuture.com&#34;&gt;Recorded Future&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Recorded Future periodically updates a handbook detailing their vendor-biased roadmap for building an intelligence-led security program. This is useful for understanding what threat intelligence capabilities may need to be integrated with an enterprise CTI program&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://go.recordedfuture.com/hubfs/ebooks/intelligence-handbook-fourth-edition.pdf&#34;&gt;The Intelligence Handbook: Fourth Edition&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://recordedfuture.com&#34;&gt;Recorded Future&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Recorded Future maintains a handbook detailing their vendor-biased playbooks for responding to typical CTI-type detections within an enterprise CTI program. This is useful for understanding what threat intelligence response cases may look like in an enterprise CTI program&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://go.recordedfuture.com/hubfs/The_Intelligence_Playbook_Practical_Applications_Across_the_Enterprise.pdf&#34;&gt;The Intelligence Playbook: Practical Applications Across the Enterprise&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mandiant.com/&#34;&gt;Mandiant&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;The core skills framework provides enterprises and individuals guidance with three things: 1. determine appropriate development roadmaps to ensure CTI skills progression; 2. provide a guidepost for aspirant CTI analysts to tailor their studies; 3. assist network defenders in understanding the roles and responsibilities of a CTI analyst&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.mandiant.com/sites/default/files/2022-05/cti-analyst-core-competencies-framework-v1.pdf&#34;&gt;The Mandiant Cyber Threat Intelligence (CTI) Analyst Core Competencies Framework&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>zijie0/HumanSystemOptimization</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/zijie0/HumanSystemOptimization</id>
    <link href="https://github.com/zijie0/HumanSystemOptimization" rel="alternate"></link>
    <summary type="html">&lt;p&gt;健康学习到150岁 - 人体系统调优不完全指南&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;背景&lt;/h1&gt; &#xA;&lt;p&gt;去年 5 月曾经写了一篇文章介绍了下 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/371254789&#34;&gt;Lex Fridman 大佬的日常生活安排&lt;/a&gt;，后续我也根据他的方法对自己的日常生活做了一系列规范和改进。这一年整体实行下来，效果还是非常显著的，本文的最后会对我的一些实践以及借助的工具做一些分享。&lt;/p&gt; &#xA;&lt;p&gt;最近几个月，偶然在油管上看到了个 &lt;a href=&#34;https://youtu.be/2ekdc6jCu2E&#34;&gt;Rich Roll 采访 Andrew Huberman 的 podcast&lt;/a&gt;，介绍了如何提升我们日常工作，学习表现的相关神经科学原理与可以利用的“工具”，瞬间打开了一扇新世界的大门。后续又一连追了好几集 Huberman 自己的 podcast，从各个方面了解了一下跟我们日常生活，健康，学习，工作，锻炼等方面相关的知识。与其它很多讲“养生”的文章和视频最大的区别在于，Huberman 本身是斯坦福的神经科学教授，其中讲述的内容都是&lt;strong&gt;来自于高质量，peer reviewed 的科学研究成果&lt;/strong&gt;，从机体工作原理出发，非常细致地介绍了相关的实验和结论，并给出了很多实操建议（很多都是零成本，不是搞推销的……）。&lt;/p&gt; &#xA;&lt;p&gt;通过一系列的学习，逐渐有种学习了各种人类的“组成和操作原理”的感觉。通过一系列的工具和实践，我们也可以&lt;strong&gt;像调优软件程序那样来“调优”我们自身的人体系统&lt;/strong&gt;。这篇文章就来介绍一些相关的知识内容。注意，原版的 podcast 中有非常多专业性的阐述，在这篇文章中基本都去掉了，尽量以故事性的描述来讲解，相对会比较好理解。当然准确性也会因此有所下降，如果希望获取更专业的内容，强烈建议观看 &lt;a href=&#34;https://hubermanlab.com/&#34;&gt;原版的 podcast 内容&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;睡眠&lt;/h1&gt; &#xA;&lt;p&gt;如果你想要获得健康，更好的工作学习状态，提升生理健康如免疫，新陈代谢，以及心理健康如更好的心情，专注能力等，最最重要的前提是拥有一个良好的睡眠。&lt;/p&gt; &#xA;&lt;h2&gt;原理&lt;/h2&gt; &#xA;&lt;p&gt;睡眠最重要的控制机理是我们内在的生物钟。随着生物钟的影响，我们体内的各类化学物质会发生变化，体温也随之改变，会影响我们的各种内在状态和外在行为。Huberman 教授很形象地描述了这个“生物钟”的具体作用方式：在早上，身体释放的皮质醇（cortisol）和肾上腺素（aderenaline）会让我们醒来，同时还会设定松果体释放褪黑素的倒计时钟，会在十多个小时之后让我们感到困意再次入睡。&lt;/p&gt; &#xA;&lt;p&gt;影响这个生物钟的最大因素是光照。我们的眼睛除了能够看到东西，另外一个重大的作用就是&lt;strong&gt;通过黑视素神经节细胞来接收光照信息，用以设定我们的内在生物钟&lt;/strong&gt;。这也是为什么有时候我们通宵工作之后，虽然已经持续很久时间没有睡眠了，但随着太阳升起，整体的生物钟被设定到了类似起床时的状态，各类化学物质的释放会让我们突然感觉又有精神了。后续很多最佳实践里也都跟这个原理相关，我们需要控制自己接收光照的时间点，类型和时长。&lt;/p&gt; &#xA;&lt;p&gt;此外，&lt;strong&gt;体温也是一个用于控制我们生物钟的手段&lt;/strong&gt;。一般来说我们的体温会从深睡眠中比较低的状态逐渐升高，到醒来后持续上升。到了一天的后半段会开始逐渐下降，直到再次进入睡眠。&lt;/p&gt; &#xA;&lt;h2&gt;实践&lt;/h2&gt; &#xA;&lt;p&gt;基于上面的原理，Huberman 教授提供了一系列提升睡眠的最佳实践：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;皮质醇的释放与接触阳光有关，因此如果想尽快醒来且保持日间良好的精神状态，&lt;strong&gt;起床后应该到外面去接触阳光，持续 2-10 分钟&lt;/strong&gt;。这对于血压控制，心理状态，设定睡眠的“倒计时钟”等都有很大好处。户外日光的效果最好，如果是人造光源，蓝光的效果会比较好，且最好是上部（天空的位置）的光源。根据光照强度推算，隔着窗户接收日光的强度会降低 50%以上，而达到同样效果所需要的光照时间则需要 50 到 100 倍。有意思的是，这一点对于视障人士也有效，因为前面提到的黑视素神经节细胞并不是用于视觉成像的细胞。&lt;/li&gt; &#xA; &lt;li&gt;对应的，&lt;strong&gt;在晚上要尽量减少光源的接触&lt;/strong&gt;，因为这会扰乱我们的生物钟，让身体系统误以为是在白天。尤其是晚上 11 点到次日凌晨 4 点之间接收光源，会抑制后续几天的多巴胺的释放，影响心情，心理健康，专注度，学习能力，新陈代谢等等。关于多巴胺的作用和机理，后面会再单独介绍。&lt;/li&gt; &#xA; &lt;li&gt;如果不可避免需要在晚上接触光源，处于较低位置，暗淡的红光，蜡烛之类的会相对好一些。如果要看电脑，建议使用 blue blockers 眼镜，这跟一些电脑软件会自动调节屏幕色温的效果可能类似。&lt;/li&gt; &#xA; &lt;li&gt;傍晚观察落日，对于后续入睡也有帮助，甚至能减轻晚上摄入光照的负面影响，有点神奇。&lt;/li&gt; &#xA; &lt;li&gt;人一天中的精神状态一般会在中间有个短暂的低谷，所以午睡对于有些人可能是有帮助的。也可以用一些其它的非睡眠深度休息的方式来替代，如 &lt;a href=&#34;https://youtu.be/M0u9GST_j3s&#34;&gt;Yoga Nidra&lt;/a&gt;，冥想，自我催眠（可以利用一些 App）等。&lt;/li&gt; &#xA; &lt;li&gt;体温对生物钟周期的影响： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;早上洗冷水澡，会让人快速升温，从而把睡眠周期往前移（早起）。&lt;/li&gt; &#xA;   &lt;li&gt;晚上锻炼身体，会让人保持高体温，从而延后周期（晚睡）。&lt;/li&gt; &#xA;   &lt;li&gt;可以选购一些自动控制体温的智能床垫来提升睡眠质量。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;一般建议的锻炼时间：醒来后 30 分钟，3 小时和 11 小时这三个时间点。不过总体来看好像影响度比较小。&lt;/li&gt; &#xA; &lt;li&gt;饮食和药物因素： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;咖啡因会占据腺苷（adenosine）的受体，阻断入睡的信号。有不少文章都提到中午之后尽量不要喝咖啡，但 Huberman 表示没有科学实验表明咖啡因对所有人的效果是一样的，得根据自己的测试情况来。比如他自己在下午 5 点喝咖啡也能正常入睡。&lt;/li&gt; &#xA;   &lt;li&gt;镁，对入睡有帮助。&lt;/li&gt; &#xA;   &lt;li&gt;芹黄素也能帮助入睡，但要注意对雌性激素的影响。&lt;/li&gt; &#xA;   &lt;li&gt;建议不要摄入太多牛磺酸。&lt;/li&gt; &#xA;   &lt;li&gt;不建议通过摄入褪黑素来帮助入睡，褪黑素药物本身的规格把控不严格，且褪黑素容易引起抑郁情绪。&lt;/li&gt; &#xA;   &lt;li&gt;中午可以吃低卡路里以及含酪氨酸的食物，如坚果，大豆，部分蔬菜等，提升多巴胺，肾上腺素，保持清醒。&lt;/li&gt; &#xA;   &lt;li&gt;晚上则可以吃点淀粉，白肉等富含色氨酸的食物，进而转化为血清素，会让人更加平静，容易入睡。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;对于绝大多数人，6-8 小时的睡眠时长是比较健康的。&lt;/li&gt; &#xA; &lt;li&gt;对于各类药物的检索可以参考：&lt;a href=&#34;https://examine.com/&#34;&gt;examine.com&lt;/a&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;饮食&lt;/h1&gt; &#xA;&lt;p&gt;在前面 Lex 的分享中，提到了他采取了生酮饮食以及 fasting（禁食）的习惯，这引起了我对于饮食习惯的注意。Huberman 教授正好也有几个 podcast 介绍了 fasting，肠道健康等话题，很有意思。&lt;/p&gt; &#xA;&lt;h2&gt;Fasting 的背景&lt;/h2&gt; &#xA;&lt;p&gt;我们可以把身体跟进食相关的化学状态分成 2 类：&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;吃饱了的状态，也就是血糖含量较高的状态。此时我们身体会更活跃地进行体内细胞的复制与成长。&lt;/li&gt; &#xA; &lt;li&gt;禁食的状态，也就是血糖含量较低的状态。此时我们的身体会更活跃地进行体内细胞的修复与清理（autophagic）。&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;由于睡眠时我们天然是不吃东西的，所以一般来说睡眠中的一部分时间会使我们处于禁食状态，饮食时间的选择实际上就是在控制上述两个状态的持续时间和平衡关系。比较有意思的是世界上很多民族文化和宗教中，都有一些跟禁食相关的习俗，甚至会持续很多天。&lt;/p&gt; &#xA;&lt;p&gt;在 2012 年，科学家开始对小白鼠做实验，把他们分成两大组，一组可以在一天中的任何时间吃东西，而另一组只能在固定的 8 小时里吃东西。在大组里再区分小组，给小白鼠吃健康的和不健康的食物。结果发现，只能在 8 小时里吃东西的小白鼠们，即使吃的是不健康的高脂肪食物，他们的健康水平仍然得到了保持甚至提高，相比所有不做限制的组都有明显的提升。&lt;/p&gt; &#xA;&lt;p&gt;这个研究震动了学术界，后续又有非常多的针对人类，不同性别，不同年龄，不同职业（包括运动员）的各种实验与论文发表，科学家们发现这种&lt;strong&gt;间歇性禁食状态对于身体有非常多的好处&lt;/strong&gt;，包括：促进肝脏健康，胆汁酸代谢，炎症自愈，保持体重，提升 brown fat 储备（对健康有益），防止非酒精性脂肪肝，血糖控制，肠道健康等等。如果养成间歇性禁食的习惯 60 天以上，还会让我们的身体倾向于代谢脂肪来供能，控制体重。&lt;/p&gt; &#xA;&lt;p&gt;因此，Huberman 教授指出，&lt;strong&gt;何时进食，与吃什么东西，其实是同等重要的&lt;/strong&gt;。这个研究也让很多学术界的研究人员自己也都养成了 fasting 的习惯，包括 Huberman 自己。&lt;/p&gt; &#xA;&lt;h2&gt;Fasting 的实践&lt;/h2&gt; &#xA;&lt;p&gt;由于长时间的禁食难度较大，所以绝大多数的研究都专注于间歇性禁食，也就是 time restricted feeding。简单来说就是跟前面的小白鼠实验一样，在一天的固定时间段来吃东西（跟睡眠周期对齐），而其它时间段都不摄入任何食物的做法。这里简单整理为基础和高阶两个版本：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;基础：如果想享受 fasting 的基础收益，最简单的执行原则是&lt;strong&gt;起床后至少 1 小时内不要吃东西，同时睡前的 2-3 小时不要吃任何东西&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;高阶：目前研究结果中&lt;strong&gt;最理想的进食窗口是 8 小时&lt;/strong&gt;，结合社会习俗等，一般比较合理的时间在 10-18 点或 12-20 点的范围。看起来&lt;strong&gt;不吃早饭并不是什么坏事&lt;/strong&gt; :)&lt;/li&gt; &#xA; &lt;li&gt;作者特地温馨提醒，如果想通过健身来增肌，建议可以把这个时间窗口往前移，因为早上摄入蛋白质会对肌肉增长有益。而健身的时间可以自由选择。&lt;/li&gt; &#xA; &lt;li&gt;尽量&lt;strong&gt;保证这个窗口时间的稳定性&lt;/strong&gt;，也非常重要。否则就跟频繁倒时差产生的效果差不多，会打不少收益折扣。&lt;/li&gt; &#xA; &lt;li&gt;如果想尝试高阶 fasting，建议逐渐切换进食习惯，例如每两天缩短 1 小时的进食窗口，逐渐达到理想的 8 小时。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;值得注意的是，这里说的不吃任何东西，并不是说连水也不能喝。从前面的背景可以看到，是否处于禁食状态，主要依据是血糖水平，因此：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;喝水，茶，咖啡（不加牛奶）等，并不会中断禁食。但一勺糖的摄入就会中断。&lt;/li&gt; &#xA; &lt;li&gt;晚饭后想尽快进入禁食状态，可以做一些轻量运动，比如散步等，加快血糖清理。&lt;/li&gt; &#xA; &lt;li&gt;二甲双胍，黄连素（berberine）等可以直接促进血糖清理。肉桂皮，柠檬汁，也能轻微降低血糖。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;最后，如果禁食期间觉得有些头晕，颤抖，并不需要立刻进食或摄入糖分。可以喝一点盐水（可以加柠檬汁），一般就能很好的缓解症状。这让我想起 Lex 会提到了会服用药片来补充各种电解质元素，比如钠，镁，钾等。&lt;/p&gt; &#xA;&lt;h2&gt;饮食与消化道健康&lt;/h2&gt; &#xA;&lt;p&gt;由于我个人的肠胃功能比较差，所以也特别关注了一下消化道健康的话题。Huberman 邀请了一位非常知名的微生物学家 Sonnenburg 来介绍肠胃微生物群落与我们的健康之间的关系，也是学到了很多新的知识：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;肠道的微生物群不仅影响消化系统的健康运作，&lt;strong&gt;对人体的免疫系统也起到了非常关键的因素&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;婴儿出生，成长的方式会形成非常不同的肠道菌群生态。暴露在微生物环境中（但要注意会引起疾病的情况），对于维持菌群环境是有益的，比如家里养宠物，让孩子自由玩耍等，不需要过度清洁与消毒。&lt;/li&gt; &#xA; &lt;li&gt;什么是健康的肠道菌群生态，目前没有一个标准的结论。不过总体来看，&lt;strong&gt;菌群的多样性程度高，一般就表示更加健康&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;抗生素会严重破坏肠道菌群生态，需要谨慎使用。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;在访谈中，两位重点讨论了一个实验，就是什么样的饮食方式会让我们更好的维持肠道菌群的多样性和健康。实验主要对比了两种附加饮食：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;高纤维食物：全谷类，豆类，蔬菜，坚果。这也是传统上被认为非常健康的食物，其中很多纤维的分解都需要肠道菌群的帮助，换句话说，纤维就是它们的“食物”。&lt;/li&gt; &#xA; &lt;li&gt;发酵类食物：酸奶，牛奶酒（kefir），康普茶，酸菜，泡菜，纳豆等。注意需要是自然发酵，一般是冷藏且非罐装的食品。而且像酸奶这类要格外注意不要加糖等添加剂。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;实验的结果也颇令人意外：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;摄入发酵类食品的组，显著提升了肠道菌群的多样性。被试者&lt;strong&gt;几十个免疫标志物的显著降低，对各类炎症都有更好的抑制作用&lt;/strong&gt;。没想到吧，肠道菌群还能调节炎症。&lt;/li&gt; &#xA; &lt;li&gt;肠道菌群本来的多样化程度比较高的人，摄入高纤维食物是有帮助的。如果不是，则摄入高纤维食物的帮助不大。在工业化进程中，人类的进食习惯已经有很多代都转变为了摄入大量肉类，加工食品等，肠道菌群的生态无法仅通过提高纤维食物的量来改变其族群结构。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;此外在访谈中，两位还讨论了具体食谱推荐的问题，引用了 &lt;a href=&#34;https://youtu.be/sJLK3sVexIk&#34;&gt;Christopher Gardner 关于生酮饮食与地中海饮食比较的研究&lt;/a&gt;。这里总结一下实践建议：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;如果要改善肠道菌群生态，最好的方式是一天两次摄入天然发酵类食品&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;高纤维食物对于肠道菌群生态的维护是有益的，建议日常饮食以植物类食物为主，尽量避免深度加工食品的摄入，控制糖的摄入。Sonnenburg 教授还讲了个故事，说微生物学家参加的会议，一般餐厅的沙拉吧总是会供不应求 :) 前面提到的 Rich Roll 大佬也是个素食者。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;益生菌的效果没有广泛研究支持&lt;/strong&gt;，且这类产品的监管很有限。&lt;strong&gt;益生元的效果也是好坏参半&lt;/strong&gt;，缺乏多样性，溶解速度太快等问题都使总体效果存疑。&lt;/li&gt; &#xA; &lt;li&gt;地中海饮食相比生酮饮食来说对健康的影响效果接近，但更容易坚持遵循。另外生酮饮食如果长期实践可能有一定的风险。所以&lt;strong&gt;总体更推荐地中海饮食结构&lt;/strong&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;另外值得参考的是我们也有官方的 &lt;a href=&#34;https://sspai.com/post/72984&#34;&gt;中国居民膳食指南&lt;/a&gt;，或许更适合东方人的饮食习惯。&lt;/p&gt; &#xA;&lt;h1&gt;心态与动力&lt;/h1&gt; &#xA;&lt;p&gt;这一部分主要介绍的是人体的多巴胺系统原理，以及如何利用它来形成健康，自律的生活方式。这一集是 Huberman 开播以来播放量最高的一集，对于强健我们的心智有着非常好的指导作用。&lt;/p&gt; &#xA;&lt;h2&gt;原理&lt;/h2&gt; &#xA;&lt;p&gt;多巴胺是一种非常重要的化学物质，主要作用于两个神经回路：一个影响身体的运动，例如帕金森病与多巴胺的分泌不足有关；另一个则影响我们的动机，欲望与快乐，这几乎与我们从事的各种活动有关，无论是工作，学习还是社交，休闲娱乐。这里我们会主要讨论多巴胺的后者影响能力。&lt;/p&gt; &#xA;&lt;p&gt;神经系统中多巴胺含量水平的高低会影响我们的情绪，当多巴胺水平低时，我们会感到情绪低落，没有动力，而多巴胺水平高时，我们会感到兴奋和快乐。在通常情况下，我们的身体处于多巴胺 baseline 的状态，当我们达成一些令人兴奋的目标（比如玩游戏胜利，考试拿高分）后，多巴胺的水平会达到一个高峰，此时我们就会获得巨大的愉悦感。在高峰之后，多巴胺水平会回落到比 baseline 更低的一个水平，且这个状态会持续一段时间。&lt;/p&gt; &#xA;&lt;p&gt;这里有两个非常重要的原理：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;多巴胺绝对值含量的高低只是一方面，&lt;strong&gt;更重要的是其“相对变化量”的多少&lt;/strong&gt;。比如在刷抖音时看到了一个很有趣的视频，多巴胺水平升高，你会感到快乐，刷到下一个视频时，你感到的快乐程度好像不会那么强烈了，因为多巴胺已经在一个比较高的水平，难以形成更大的变化量。而同样的视频，如果你是几天之后看到，或许你会觉得有意思的多。所以&lt;strong&gt;当你持续做一件喜欢的事情时，你感受到快乐的阈值也会不断提高&lt;/strong&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;多巴胺的总体“储备”是有限的&lt;/strong&gt;！也就是说无论你是通过学习，工作，娱乐，社交，运动等不同方式来获得快乐，所消耗的“快乐货币”都是同一种：多巴胺。举几个例子来看下这个原理带来的影响： &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;很多自律的人都会说自己是 work hard，play hard 的生活方式，比如工作日通过高强度的工作来获得成就和满足感，休息日进行各种休闲娱乐，运动，社交等方式来获得快乐，其实背后都是在释放多巴胺来获取快乐。长期持续，我们身体的多巴胺 baseline 会逐渐下降，出现一种耗尽（burn out）的心理感觉，对很多事物无法保持之前的兴趣与精力。&lt;/li&gt; &#xA;   &lt;li&gt;很多人会对玩电子游戏着迷，因为它们能带来巨大的多巴胺释放刺激让人感到快乐。但要意识到，多巴胺的储备是有限的，如果对此上瘾，你的多巴胺耗尽问题就会变得非常严重：一方面能够引起你兴趣的事物会变少，可能只有玩游戏才能带来快乐；另一方面，后续甚至会导致玩游戏本身也无法触发多巴胺释放，引起严重的抑郁问题。&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;另外，&lt;strong&gt;多巴胺也具有叠加效应&lt;/strong&gt;。比如你喜欢健身，那么运动就会刺激多巴胺的释放。而我们实际去健身时，可能会不自觉地安排了很多其它的“快乐因素”，比如选一个精神状态比较好的日子，运动前喝一些能量饮料，跟认识的朋友一起去，边健身边 social，听一些自己喜欢的音乐或 podcast，等等。这些因素也都会促进多巴胺的释放，让你感到“前所未有的快乐”。但要注意前面的原理，多巴胺的高峰越高，后面随之而来持续的低谷也会越长，而且长此以往，可能会降低你单纯从运动中获取快乐的能力。这样的例子还有很多，比如边跟朋友吃饭，边玩手机，拍照发朋友圈，可以计算一下叠加了几种快乐因素 :)&lt;/p&gt; &#xA;&lt;h2&gt;影响多巴胺的外界因素&lt;/h2&gt; &#xA;&lt;p&gt;我们来看下具体影响多巴胺释放的各类因素有哪些，首先是促进多巴胺分泌的：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;巧克力，提升到 1.5 倍的多巴胺 baseline&lt;/li&gt; &#xA; &lt;li&gt;性行为，提升到 2 倍&lt;/li&gt; &#xA; &lt;li&gt;尼古丁，提升到 2.5 倍&lt;/li&gt; &#xA; &lt;li&gt;可卡因，提升到 2.5 倍&lt;/li&gt; &#xA; &lt;li&gt;安非他命，提升到 10 倍&lt;/li&gt; &#xA; &lt;li&gt;咖啡因本身只会少量提升多巴胺，但它会抑制一些多巴胺受体，提升同等多巴胺造成感受的效果&lt;/li&gt; &#xA; &lt;li&gt;马黛茶，包含咖啡因，能控制血糖，还能保护多巴胺神经元&lt;/li&gt; &#xA; &lt;li&gt;刺蒺藜豆也能提升多巴胺（基本等同于 L-DOPA），还能提升男性精子数量和质量&lt;/li&gt; &#xA; &lt;li&gt;运动，带有主观成分，喜欢跑步的人，可以提升到 2 倍 baseline&lt;/li&gt; &#xA; &lt;li&gt;健康的社交关系也会促进多巴胺释放&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;食物方面感觉 Huberman 教授&lt;strong&gt;非常推荐马黛茶&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;也有很多提升多巴胺释放或影响其效果的药物：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;L-Tyrosine（酪氨酸），提升多巴胺&lt;/li&gt; &#xA; &lt;li&gt;Phenethylamine（PEA），巧克力中也包含，能够提升多巴胺&lt;/li&gt; &#xA; &lt;li&gt;Huperzine A，提升多巴胺&lt;/li&gt; &#xA; &lt;li&gt;各种“聪明药”，如 Adderall, Modafinil, Alpha-GPC, Ginkgo 等，留学党应该很多都有耳闻&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;通常来说，&lt;strong&gt;不推荐持续使用这些药物&lt;/strong&gt;，因为多巴胺释放之后的高峰会带来 baseline 水平的降低，导致无法享受活动的快乐，无法专注，限制学习能力和神经元可塑性等。Huberman 表示&lt;strong&gt;一周使用一次的频率应该是安全的&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;最后还有一个比较特别的研究，就是&lt;strong&gt;冷水浴能够提升多巴胺释放到 baseline 的 2.5 倍左右&lt;/strong&gt;，且持续时间更长，能达到 3 小时左右。建议使用 10-14 摄氏度的水温，注意安全。此外冷水浴也不需要太频繁，每周 11 分钟左右足够。如果已经习惯了冷水浴，那么也就没有释放多巴胺的效果了。&lt;/p&gt; &#xA;&lt;p&gt;还有一些因素会降低多巴胺，如：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;褪黑素，会引起多巴胺的减少&lt;/strong&gt;。前面也提到过并不建议使用褪黑素来帮助入睡，或者适应时差等。&lt;/li&gt; &#xA; &lt;li&gt;睡眠时段接触光源，也会引起接下来几天的多巴胺水平下降。&lt;strong&gt;半夜睡不着刷手机是很有害的哦&lt;/strong&gt;。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;维持健康的多巴胺水平&lt;/h2&gt; &#xA;&lt;p&gt;了解了原理和各种影响因素后，我们来看下如何有效设计我们的生活工作方式来维持健康，可持续的多巴胺水平。&lt;/p&gt; &#xA;&lt;p&gt;简单回顾一下，前面我们已经知道了多巴胺储备有限，且对一件事物上瘾会不断提高感受快乐的阈值，那么如何让我们能对一件事情保持长时间的兴趣和投入度，又不至于耗尽多巴胺呢？一个经典的例子是赌场的运作方式，我们并不是每一次下注都能赢，偶尔赢一次会释放多巴胺，而且根据赢得钱的多少有所上下浮动，这会吸引玩家持续参与。这就是一种非常有效的&lt;strong&gt;间歇性且随机的奖励机制&lt;/strong&gt;。感觉很多游戏，社交网络产品也借鉴了这个思路来进行设计。&lt;/p&gt; &#xA;&lt;p&gt;对于我们经常需要从事的活动，我们也可以模拟这个机制。还记得前面提到的&lt;strong&gt;多巴胺叠加效应&lt;/strong&gt;吗？我们可以&lt;strong&gt;通过随机化叠加因素的多少，来实现多巴胺释放的差异性&lt;/strong&gt;。还是以健身为例，我们可以随机决定今天是否要听音乐，是否去健身时带手机，是否要在健身前喝能量饮料等因素。如果其它什么都不做，只是单纯健身，那么多巴胺的释放量就会相对较低。如此就能模拟多巴胺释放有高有低的随机奖励机制。&lt;/p&gt; &#xA;&lt;h2&gt;成长型思维&lt;/h2&gt; &#xA;&lt;p&gt;最后来看下如何构建良好的思维方式来利用多巴胺系统提升自我。&lt;/p&gt; &#xA;&lt;p&gt;有一个非常知名的实验，挑选了一群天生喜爱画画的小朋友，在他们完成画作后给与一些奖励。后面在移除这些奖励后，小朋友们对于画画的兴趣和动力大大降低了。这个实验说明，当我们因为一个活动收到奖励（比如金钱，美食等）时，我们&lt;strong&gt;反而会降低活动本身的愉悦程度&lt;/strong&gt;。而且多巴胺本身影响我们对时间的认知，同时也影响我们的情绪状态，如果我们&lt;strong&gt;始终以完成活动后的奖励为目标，则整个过程中就很少释放多巴胺，让原本困难的过程变得更加难以坚持&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;仔细想一下，这是一个非常有意思的观察。多巴胺有点像我们的“本能系统”，决定了我们是否有动力做一件事。但反过来&lt;strong&gt;我们的主观思想却可以影响这个系统起作用的方式&lt;/strong&gt;，这也是人类为何能摆脱动物本能，达成很多需要“反人性”的投入才能取得的成就的原因吧。上述的实验是我们的主观思想造成的一个反面作用的例子，我们自然也可以实现正面作用，那就是成长型思维。&lt;/p&gt; &#xA;&lt;p&gt;具体来说，就是&lt;strong&gt;通过自我暗示，把努力过程本身当作一种“奖励”&lt;/strong&gt;。我在努力学习，这个过程本身就是有趣的，会让我不断变得更强，这样的想法会在过程中激发身体系统释放多巴胺，而多巴胺提升了我们的情绪和动力水平，也会让努力的过程中碰到的困难变得相对容易克服。专注于这个过程的本身，而不是在过程前进行各种外界刺激（如前面提到的药物），或者在过程后给自己巨大的奖励。&lt;/p&gt; &#xA;&lt;p&gt;这种思维方式看起来很主观，但这就是我们的神经系统工作的方式，虽然人类的“硬件系统”都差不多，但知识，思维这些运行之上的“软件”却可以千差万别。&lt;strong&gt;我们可以通过自律，自我暗示来改变自身对各类活动的喜好&lt;/strong&gt;。例如通过暗示 fasting 对我们健康的益处，来获取满足感，而不是借助于 fasting 结束后的大快朵颐。通过自律抵御高油盐食物的吸引力，并且自我暗示植物类食物对身体的好处，坚持一段时间，会觉得花椰菜也挺美味的。这也是为什么我们在这篇文章中介绍了很多原理性的内容，而不仅仅是行为建议。因为这些原理知识能够让我们做更好的自我暗示 :)&lt;/p&gt; &#xA;&lt;p&gt;这一节的 podcast 对我本人的冲击非常大，强烈建议大家观看这期 &lt;a href=&#34;https://hubermanlab.com/controlling-your-dopamine-for-motivation-focus-and-satisfaction/&#34;&gt;Mindset &amp;amp; Drive&lt;/a&gt;，相信也会有不同的收获。&lt;/p&gt; &#xA;&lt;h1&gt;学习与专注&lt;/h1&gt; &#xA;&lt;p&gt;在了解了多巴胺的运作机制基础上，我们可以继续探究一些跟大脑健康，专注度，如何进行高效学习相关的话题。&lt;/p&gt; &#xA;&lt;h2&gt;学习的原理&lt;/h2&gt; &#xA;&lt;p&gt;从脑神经科学来看，学习的本质是神经元的重新连接（rewire），进一步来看，需要大脑处在一种学习的化学状态下，也就是 Huberman 经常提到的神经可塑性（neuroplasticity）状态。&lt;/p&gt; &#xA;&lt;p&gt;简单来说，当我们尝试做一些事情，但没有达到预期目标时，身体会给大脑发信号，“我犯错了”。处在这种犯错，沮丧的认知状态下，神经系统会释放肾上腺素（提升 alertness），乙醯胆碱（提升 focus），多巴胺（促进神经元的 change，rewire）等化学物质，激活神经元的可塑性。也就是说，&lt;strong&gt;犯错是我们进入学习状态的重要前提&lt;/strong&gt;。搞机器学习的同学应该很熟悉了吧，这跟我们训练模型不是一模一样么 :) 另外很多人可能觉得心流（flow）状态是学习的最佳状态，而 Huberman 则不这么认为。&lt;strong&gt;心流是一种精神高度集中且接近于自动化的状态，是在做我们已经知道怎么做的事情，而不是在学习新的知识技能&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;对于这个学习状态，经典的实验是给人们戴上一些能转变角度的眼镜，然后执行一些类似物体抓取的任务。由于看到的东西通过眼镜改变了其本来的位置，一开始在尝试时总会出现抓取动作的偏离。但后续在进入神经可塑性状态后，我们能逐渐适应相关的视觉偏移，协调自己的听觉，动作等都与之协同，顺利完成任务。更有意思的是，&lt;strong&gt;这个“神经可塑性”的化学状态是可以持续的&lt;/strong&gt;，我们甚至可以先通过一些其它操作触发大脑的这个机制，再去进行真正的学习，以加快学习的速度。这里还有一个隐藏逻辑，当你在遇到挫折困难时，大脑进入了可塑性状态，而此时你却放弃了，那么&lt;strong&gt;神经元也会重新连接到这种容易放弃的行为模式，形成恶性循环&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;人在年幼时期大脑天然的神经可塑性会比较好，而在 25 岁以后则会大大下降。我们后面会提到如何来进行克服。&lt;/p&gt; &#xA;&lt;p&gt;另外，&lt;strong&gt;休息和睡眠时也会发生大量的神经元重连接的活动&lt;/strong&gt;，这也是之前我们就提到过的，高质量的睡眠是实现很多生理，心理健康强壮的先决条件。&lt;/p&gt; &#xA;&lt;h2&gt;利用神经可塑性&lt;/h2&gt; &#xA;&lt;p&gt;如果正在阅读文章的你还未满 25 岁，那么恭喜你，你的神经可塑性仍然非常的好，可以&lt;strong&gt;尽可能广泛的学习各种知识和技能&lt;/strong&gt;。比如你可以很快学会各种乐器，新的语言，新的运动，新的专业技能等等。通过更广阔领域的体验接触，尽量找到你最有兴趣的方向，可以后续再不断深入经营。&lt;/p&gt; &#xA;&lt;p&gt;如果已经像我一样超过了 25 岁，那么还有很多办法来提升神经可塑性：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;通过实验发现，&lt;strong&gt;成年人对于小幅度的增量学习是完全可以适应与掌握的&lt;/strong&gt;。例如每次视觉上的偏差只有 7 度，而不是一下子就来个 180 的大颠倒，那么成年人也能很快从错误中学习纠正。应用到实际学习中，我们每次学习的内容可以控制一下不要太多（本文有点违反了，建议收藏慢慢学习），多次积累来完成神经系统的调整学习。&lt;/li&gt; &#xA; &lt;li&gt;对于达成目标的渴求度越高，重要性越大，奖励的刺激越大（比如为了生存），则神经可塑性就会越容易出现。这个比较符合直觉，但是现实中可操作性可能不高。&lt;/li&gt; &#xA; &lt;li&gt;第三点最有意思，&lt;strong&gt;通过扰乱前庭神经系统（vestibular system），能够达到神经元可塑性的状态&lt;/strong&gt;。简单来说，就是让你的身体有一些“新颖的重力体验”，如倒立，瑜伽，体操，滑板，任何让身体会失去平衡的一些状态等，会快速激发“我犯错了”的信号，进入学习状态，甚至可以在之后去做别的任务的学习。这一下子就让我想到了&lt;strong&gt;淘宝成立初期的“倒立文化”，没想到还真的有科学依据&lt;/strong&gt;。需要注意的是，这个体验必须要新颖，也就是说如果你已经倒立很熟练了，那么去做倒立就是个日常行为，并不会给身体一种在犯错边缘，需要纠正的刺激。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;学习的理想状态&lt;/h2&gt; &#xA;&lt;p&gt;除了神经可塑性的化学状态外，我们也需要注意其它的因素。例如我们&lt;strong&gt;不能太放松以至于有些昏昏欲睡，也不能太紧张激动，无法控制自己拥有清晰的思考&lt;/strong&gt;等。这些也都跟我们体内的多巴胺，肾上腺素，乙醯胆碱，血清素，褪黑素等化学物质的水平有关，需要做好调节。在之前 Rich Roll 的访谈节目中，Huberman 提了一个非常有效的“呼吸工具”，叫&lt;strong&gt;生理叹息&lt;/strong&gt;（Physiological Sigh）。操作方法上简单来说就是吸两口气，然后出一口长气。通常情况下，只要一两次生理叹息就足以使我们的压力和警觉水平迅速下降，让人感到更加平静，提升学习表现。&lt;/p&gt; &#xA;&lt;p&gt;前面提到的成长型思维也很重要，在遇到错误导致的沮丧感觉时，可以不断增强自我暗示，失败是帮助我们学习成长的唯一路径，对我们是有益的，以此增加多巴胺的释放，提升学习动力和过程中的愉悦感。&lt;/p&gt; &#xA;&lt;p&gt;联系到睡眠对学习的促进作用，也有一些研究提供了一些相关的 tips：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在学习时听一些有规律的节拍，在入睡时也播放同样的微弱节拍，能够提升学习和记忆的效果。&lt;/li&gt; &#xA; &lt;li&gt;一般在 90 分钟的学习后（人体生物钟的周期），可以选择进行 20 分钟的休息（non sleep deep rest），也会加强学习的效果。&lt;/li&gt; &#xA; &lt;li&gt;Gap effect，在学习中随机停止 10 秒钟，这些停止会在睡眠中加速“播放”，提升学习效果。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;提升专注&lt;/h2&gt; &#xA;&lt;p&gt;“专注”背后的机理是大脑中两种“网络模式”的协调，一种叫 Default network，在我们不做任何事情时被激活，另一种叫 Task networks，在我们专注于做某些事情时被激活。普通人的大脑能够很好地协调这两个模式，两者像跷跷板一样，当一种模式被激活时另一种模式会被抑制。而具有专注障碍（比如多动症）的人来说，这两者无法很好地进行协调，因此会出现无法专注的现象。&lt;/p&gt; &#xA;&lt;p&gt;通过提升多巴胺水平，可以有效促进这两种网络模式的协调，因此有非常多的多动症治疗药物都跟提升多巴胺有关，例如 &lt;strong&gt;Adderall，Modafinil&lt;/strong&gt; 等。一些调查表明，这些药物（经常被称为聪明药，nootropics）在美国被滥用的程度甚至超过了大麻，不少“学霸”都以此来提升注意力，减少对睡眠的需求。但 Huberman 教授表示，一方面多巴胺的刺激提升后都会带来多巴胺水平的低谷，另一方面这些药物也可能导致上瘾，对新陈代谢作用造成扰动，有很多负面影响，&lt;strong&gt;对长期的学习与记忆效果可能并没有提升作用&lt;/strong&gt;。在之前介绍多巴胺的章节也有提到，应该谨慎使用这类药物，并严格控制使用频率不能过高。&lt;/p&gt; &#xA;&lt;p&gt;一些安全有效的提升专注力的方法包括：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;适量补充 &lt;strong&gt;Omega-3 EPA 鱼油&lt;/strong&gt;，这是神经细胞的组成原料之一，能够有效减轻抑郁，对治疗多动症（ADHD）也有帮助。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;通过身体其它部分释放运动，可以帮助提升注意力&lt;/strong&gt;。教授举的例子是作为神经科医生在开刀时，如果采用半蹲半站的姿态（运动释放），拿手术刀的手更稳定不容易颤抖。这让我想起以前读书时很多同学习惯转笔，现在工作了也有不少人喜欢玩指尖陀螺，或者站立办公，可能都是类似效果。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;限制视野范围，能够提升专注度&lt;/strong&gt;。比如我们经常因为眼睛瞟到了任务栏上的消息提示闪动而分心，可以通过一些设置来进入“专注模式”。&lt;/li&gt; &#xA; &lt;li&gt;视线的高低也会影响神经状态，&lt;strong&gt;视线往下看会让神经系统偏向镇静，放松，甚至困倦，而视线向上则会让系统提升警惕&lt;/strong&gt;。工作时一般至少把显示器放置在鼻子位置之上。&lt;/li&gt; &#xA; &lt;li&gt;大脑不擅长处理大量频繁的 context switch，典型的比如刷抖音，不同的信息以非常快的速度频繁切换，这对我们的注意力是有伤害作用的。2014 年的一项研究表示，&lt;strong&gt;我们每天在手机上花费的时间应该少于 60 分钟（青少年）/120 分钟（成年）&lt;/strong&gt;，以免引起注意力障碍问题。&lt;/li&gt; &#xA; &lt;li&gt;还有研究表明，&lt;strong&gt;17 分钟的冥想，能够对大脑中的神经元做重新连接，永久地改善注意力&lt;/strong&gt;。只要做一次就可以，完全可以尝试一下。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;大脑健康&lt;/h2&gt; &#xA;&lt;p&gt;最后来看下提升大脑健康和效能的一些方法。&lt;/p&gt; &#xA;&lt;p&gt;首先是前面提到过的，保证高质量的睡眠。&lt;/p&gt; &#xA;&lt;p&gt;运动方面，&lt;strong&gt;对大脑直接帮助最大的是有氧运动&lt;/strong&gt;，提升心肺功能，支持大脑供能。建议每周 150-180 分钟的有氧训练。&lt;/p&gt; &#xA;&lt;p&gt;对于大脑健康有帮助的食物，其中前三点是比较重要的，后面的部分涉及的研究没有那么多：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Omega3, 尤其是 EPA 等脂肪酸&lt;/strong&gt;，是大脑组成的重要部分，且一般人都容易摄入不足。多吃鱼，牡蛎，鱼子酱，奇亚籽，核桃，大豆。一天至少摄入 1.5 克，理想情况需要 3 克以上。不喜欢吃鱼的话可以辅助摄入鱼油。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;磷脂酰丝氨酸&lt;/strong&gt;，也对认知能力有帮助。通过鱼，肉类，卷心菜来摄入。&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;乙酰胆碱&lt;/strong&gt;，重要的神经调质，提升注意力。摄入胆碱的重要来源是鸡蛋，尤其是蛋黄。土豆，坚果，水果中也含有，虽然没有蛋黄中的含量那么丰富。可以通过 Alpha-GPC 等补充剂来获取。&lt;/li&gt; &#xA; &lt;li&gt;肌酸，尤其对于不吃肉的人，一天需要摄入 5 克左右。&lt;/li&gt; &#xA; &lt;li&gt;花青素，在蓝莓，黑莓，葡萄等食物中有提供。可以降低 DNA 损伤，缓解认知下降等问题。大约每天需要 60-120 克蓝莓的补充。&lt;/li&gt; &#xA; &lt;li&gt;谷氨酰胺，可以通过牛肉，鸡肉，鱼肉，鸡蛋，大豆，卷心菜，菠菜，芹菜等食物来摄取。提升大脑在缺氧（高海拔地区）下的表现，还能够抑制对糖的需求。&lt;/li&gt; &#xA; &lt;li&gt;水，钠，钾，镁等电解质是神经元信号传递所需的基础元素，需要保证。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;这一节中还讨论了我们身体对各种食物喜好进行判断的三个渠道，前两个分别是味觉判断和营养成分的下意识判断。第三个比较有意思，也跟多巴胺有关，即我们可以&lt;strong&gt;通过提升大脑代谢的活跃度来增加对某种食物的喜好&lt;/strong&gt;。比如你如果不喜欢吃鱼，一种方法是你可以把鱼跟你平时爱吃的食物一起吃，另一种是给自己足够的心理暗示，说服自己吃鱼是有益身体健康的。通过这两种办法，你都可以让大脑释放多巴胺，从而逐渐提升对鱼类食物的喜好程度。&lt;/p&gt; &#xA;&lt;p&gt;最后，如果你对膳食补充剂感兴趣，还可以看看 &lt;a href=&#34;https://www.thorne.com/u/huberman&#34;&gt;Huberman 教授平时会吃的补充剂有哪些&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;长寿&lt;/h1&gt; &#xA;&lt;p&gt;最后我们来看下如何延年益寿，这是 Huberman 跟这个领域的专家，来自哈佛的 David Sinclair 的一集访谈节目。&lt;/p&gt; &#xA;&lt;h2&gt;衰老的本质&lt;/h2&gt; &#xA;&lt;p&gt;Sinclair 认为，衰老是一种疾病，它本身导致了非常多通常意义上的疾病的出现，比如阿尔兹海默症，癌症等。我们可以通过科学的手段来“治疗”衰老，甚至逆转它。&lt;/p&gt; &#xA;&lt;p&gt;从本质上来说，衰老是&lt;strong&gt;基因信息的损失&lt;/strong&gt;，这分为两部分：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;DNA 本身的信息，比如细胞中的 DNA 结构会在辐射等情况下受到破坏。&lt;/li&gt; &#xA; &lt;li&gt;控制哪些基因进行表达的信息受到了破坏，也就是所谓的表观基因组（epigenome）。这部分在衰老的因素中占了 80%。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;人体内有一个天然的“衰老时钟”，而且并不是以匀速走的。在年轻时我们的生长发育过程中，这个时钟走得更快。所以如果青春期发育比较迅速的人，一般来说整体的时钟走的比较快，寿命也会相对短，是不是有点吓人……而且，一般比较矮小的人，像侏儒很少会得心脏病，癌症，也会明显更长寿。不过不要紧张，前面提到了，基因本身的信息只占了衰老因素的 20%，&lt;strong&gt;控制基因表达这部分占了大多数&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;这里有点意外的是 Sinclair 教授介绍的最重要的几个实验，都跟前面我们提到的 fasting 有关。比如一般老鼠的寿命大概是 2 年，他们实验室有一只叫 Yoda 的老鼠，活了足足 5 年。其主要的做法就是选取了侏儒基因，以及执行 fasting。&lt;/p&gt; &#xA;&lt;p&gt;教授详细介绍了 &lt;strong&gt;fasting 为何能提升动物/人类 30% 以上的寿命&lt;/strong&gt;：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;在低血糖水平时，身体会抑制哺乳动物雷帕霉素靶蛋白（mTOR），激活去乙酰化酶（sirtuin），形成一个非常良好的化学状态，清理旧蛋白质，提高胰岛素敏感度，提供更多能量，修复细胞等等。后面这个乙酰化酶是我们抵御衰老的一个重要武器。&lt;/li&gt; &#xA; &lt;li&gt;当胰岛素水平低时，“长寿基因”会被激活，如 SIRT1 等。&lt;/li&gt; &#xA; &lt;li&gt;fasting 会给细胞足够的“休息时间”。&lt;/li&gt; &#xA; &lt;li&gt;血糖水平低，会让身体对胰岛素更敏感，更快吸收血糖，也对健康有益。&lt;/li&gt; &#xA; &lt;li&gt;当你从来不感受饥饿时，你的衰老时钟也走的更快。&lt;/li&gt; &#xA; &lt;li&gt;除了 24 小时周期 fasting 触发的 autophagic，还有更深层次的清理机制，会在禁食第二，三天启动。在老年老鼠上的实验表明，这种长时间的禁食可以让他们延长寿命 35%。不过这个实操难度对普通人来说有点大。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Sinclair 也对比了一些上个世纪失败的研究，比如通过抗氧化剂来抵御衰老。现代长寿研究的核心思想是，如何&lt;strong&gt;通过一些机制手段来触发身体自身的衰老抵抗机制&lt;/strong&gt;。&lt;/p&gt; &#xA;&lt;p&gt;此外 Sinclair 也介绍了一些激动人心的前沿技术，例如&lt;strong&gt;通过基因治疗方法，可以重启我们的 DNA 表达系统&lt;/strong&gt;。通过一次注射，可以让盲人恢复视力，这已经在老鼠身上得到了验证。或许几年后，我们可以像死侍那样实现身体各部分的逆转老化。&lt;/p&gt; &#xA;&lt;h2&gt;实践&lt;/h2&gt; &#xA;&lt;p&gt;这里列出一些 Sinclair 自己的实践方式，如果想要采纳还是要结合自身的情况来看。有意思的是这集节目下有个热门留言是这个教授竟然已经 52 岁了，完全看不出来……所以你懂的。&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;不吃早饭，午饭也吃的比较少，酸奶或者橄榄油，晚饭吃蔬菜为主，加鱼和虾，基本不吃牛排。不吃糖，甜品，面包。基本达到了 2 小时进食窗口的高阶 fasting 状态。他偶尔也会尝试一整天都不吃东西，但比较难坚持。&lt;/li&gt; &#xA; &lt;li&gt;每天摄入 1 克的白藜芦醇（resveratrol），1 克的 NMN（进而会转化为 NAD，which is sirtuin 的“燃料”），还有二甲双胍（metformin）。其中锻炼的日子可能会跳过一些补充品。他并不吃复合维生素。&lt;/li&gt; &#xA; &lt;li&gt;以蔬菜为主食的好处：富含各种营养，维生素；包含异种激素（Xenohormesis），植物基于“压力”之下产生的物质，对长寿有益。后者也可以通过槲皮素（quercetin）来做膳食补充。&lt;/li&gt; &#xA; &lt;li&gt;一般会隔一天进行有氧运动和力量训练。有氧运动能提升 NAD 水平。&lt;/li&gt; &#xA; &lt;li&gt;根据家族病史来决定一些药物摄入，如他 29 岁就开始服用降胆固醇药物。&lt;/li&gt; &#xA; &lt;li&gt;对于人造甜味剂，教授认为总体来说是安全的。他偶尔也会喝健怡可乐。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;对于这一系列实践，Sinclair 教授都进行了 10 多年的自身实验，并使用各种手段来监控身体数据。通过监控数据可以推测出一个人的“生理年龄”如何（不是光看脸），他自己在上述实践下，生理年龄在持续下降，现在已经达到了 30 岁左右的水平（实际年龄 52 岁）。另外，他认为每个人的身体情况不一样，医院约定俗成的生理指标范围也不一定适合每个人。&lt;strong&gt;未来这种健康数据的实时监控与个性化诊断会成为主流&lt;/strong&gt;。他举了一些例子：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;监控血糖水平 HbA1c，观察 fasting 的影响等。&lt;/li&gt; &#xA; &lt;li&gt;监控炎症指标 CRP，与心脏病等各种疾病的诱发相关。&lt;/li&gt; &#xA; &lt;li&gt;监控 LDL，通过药物等进行控制。膳食胆固醇对血液胆固醇几乎没有影响，不需要戒红肉，黄油等。&lt;/li&gt; &#xA; &lt;li&gt;补充铁元素可能加速衰老。医学指标需要个性化，低铁元素含量并不一定导致贫血。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;还有一些影响寿命的负面因素：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;肥胖症会加速衰老。&lt;/li&gt; &#xA; &lt;li&gt;吸烟，会破坏基因表达，加速衰老。&lt;/li&gt; &#xA; &lt;li&gt;X 光检查同理，没有必要时，避免接触。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;展望一下 longevity 研究的未来，还是挺激动人心的。现代科学每一年能让我们的平均寿命延长 1/4 年，如果每一年能让我们的平均寿命延长超过 1 年，则达到了&lt;strong&gt;寿命“逃逸速度”&lt;/strong&gt;（类比以 1000 英里每小时的速度往西飞行，太阳永远不会落下），实现了“永生”。著名的未来学家 Ray Kurzweil 预测，大约 12 年后（2034 年）就能实现，让我们拭目以待。&lt;/p&gt; &#xA;&lt;p&gt;除了这集 podcast，也必须附上吴承霖大佬的万星项目 &lt;a href=&#34;https://github.com/geekan/HowToLiveLonger&#34;&gt;程序员延寿指南&lt;/a&gt;。&lt;/p&gt; &#xA;&lt;h1&gt;个人实践&lt;/h1&gt; &#xA;&lt;p&gt;前面介绍的内容有点多，这篇文章篇幅也有些超了。最后来简单介绍下我个人目前采纳的一些行动和辅助工具。&lt;/p&gt; &#xA;&lt;p&gt;睡眠方面暂时没有什么特别的措施，现在带娃基本上晚上睡眠质量也比较一般。只是会稍稍注意一下晚上 11 点后尽量不接触手机光源。早起接收光照这点，基本上就是早上遛狗或者开车通勤时间来接触，基本压力不大。如果比较讲究的同学，还可以下一个 &lt;a href=&#34;https://mycircadianclock.org/&#34;&gt;My Circadian Clock App&lt;/a&gt; 来追踪一下生物钟，也是 Satchin Panda 等大佬参与开发的项目，值得信赖。&lt;/p&gt; &#xA;&lt;p&gt;饮食方面，开始尝试 8 小时进食窗口的 fasting，目前感觉良好。中饭一般吃蔬菜为主的轻食，晚上就比较放飞自我，想吃啥吃啥。早上会看情况喝点盐水，茶或者 AG1 的补充剂。膳食补充剂目前基本只有复合维生素和 EPA 鱼油在使用，后面可以参考下 &lt;a href=&#34;https://fastlifehacks.com/andrew-huberman-supplements-list/&#34;&gt;Huberman 的“配方”&lt;/a&gt; 增加一些。Huberman 自己也在节目中表示&lt;strong&gt;对白藜芦醇和 NMN 还在观望状态&lt;/strong&gt;，我查了些资料发现有争议的地方还不少，所以我个人建议先采纳广受认可和使用的一些补充剂，如 EPA 鱼油，二甲双胍等。个人目前考虑的补充剂列表：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/basic-nutrients-2-day&#34;&gt;基础维生素&lt;/a&gt;，常规补充剂。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/super-epa-sp608nc&#34;&gt;Omega-3 EPA&lt;/a&gt;。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/betaine-hcl-pepsin-225-s&#34;&gt;Betaine HCL &amp;amp; Pepsin&lt;/a&gt;，保护肠胃。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/l-tyrosine&#34;&gt;L-Tyrosine&lt;/a&gt;，提升多巴胺，可能会买个尝尝鲜。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://zh.m.wikipedia.org/zh/%E4%BA%8C%E7%94%B2%E5%8F%8C%E8%83%8D&#34;&gt;二甲双胍&lt;/a&gt;，抗衰老“神药”。&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.thorne.com/products/dp/resveracel&#34;&gt;ResveraCel&lt;/a&gt;，白藜芦醇，NR 等抗衰老组合。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;很多人都关心 fasting 可能引发胆结石，这里提供一些补充信息：&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;从这篇 &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1419405/&#34;&gt;Bloch, H. M. 等人的论文&lt;/a&gt; 来看，fasting 过程中胆汁的饱和度有一个先上升后下降的过程，&lt;a href=&#34;https://youtu.be/2lGuXBwudKw&#34;&gt;Dr. Berg 也以此做了解释&lt;/a&gt;，认为 fasting 加生酮饮食（摄入脂肪）对胆囊健康反而是有益的。&lt;/li&gt; &#xA; &lt;li&gt;从这篇 &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1405175/&#34;&gt;Sichieri, R. 等人的论文&lt;/a&gt; 的结果来看，long overnight fasting 和节食会提升得胆结石的概率。不过减肥（减少脂肪）本身就会提升得胆结石的概率。&lt;/li&gt; &#xA; &lt;li&gt;持续 24 小时以上的禁食相关的研究比较少（比较难执行），但从机理上来说长时间的禁食应该会增加得胆结石的概率。&lt;/li&gt; &#xA; &lt;li&gt;饮食结构，自身状况对胆结石的形成也会有很大影响，例如高胆固醇，高胰岛素水平，高碳水饮食等。高纤维食物，健康的脂肪摄入，有助于降低得胆结石的概率。&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;总体看下来，我个人感觉这块的实验上没有一个定论（就跟 &lt;a href=&#34;https://www.coffeeandhealth.org/factsheet/gallstones-factsheet&#34;&gt;咖啡是否会引发胆结石&lt;/a&gt; 一样），但应该不是一个概率很大的问题，起码 Huberman 教授跟这个领域的另一位权威 Satchin Panda 教授都没有提到这块的问题。理想情况是执行 fasting 时持续对你的身体状况做医学指标的跟踪。其它就看个人选择了 :)&lt;/p&gt; &#xA;&lt;p&gt;工作，学习，专注方面，主要看自律了。这方面我总体控制还可以，在了解了多巴胺的工作原理之后就更加有自信了，主要靠各种软件的专注模式来近似执行番茄时钟法，此外也采用了升降桌，大概有 30% 的时间站立办公。工作间歇会尝试一下 Yoga Nidra。此外晚上学习时段会用 iPad 的 Books 来记录一下阅读时间，基本上每天保持 30 分钟以上，持续坚持。后面考虑试试工作时喝马黛茶，以及夏天开始尝试冷水澡。&lt;/p&gt; &#xA;&lt;p&gt;运动方面是这一年来改观最大的一项，依靠小米手环 PAI 指数功能的督促，基本上做到了每周平均 3 次的跑步或者羽毛球活动，持续把 PAI 值保持在 200 左右。总体来说对于精神状态的改观还是很大的，肚子上的脂肪也减少了很多。唯一比较困扰的是一般下班后运动都要 9，10 点开始了，结束后会离入睡的时间比较近，有时候会对睡眠质量有所影响。&lt;/p&gt; &#xA;&lt;p&gt;最后，Huberman 教授的 podcast 中还有很多其它内容，比如习惯养成，健身增肌，应对恐惧与创伤，情绪管理等，感兴趣的朋友可以进一步挖掘。本文以实验事实与原理假设的陈述为主，以上所有的行动方案都需要在咨询医师，专业人员的条件下，结合自身情况执行，注意自身安全，本人与 Huberman 都不负相关后果责任。&lt;/p&gt; &#xA;&lt;p&gt;备注：这篇文章也同时发布到了 &lt;a href=&#34;https://github.com/zijie0/HumanSystemOptimization&#34;&gt;Github&lt;/a&gt;，欢迎大家 Star 并提出宝贵建议，谢谢！如果你对我的其它作品感兴趣，也欢迎搜索关注公众号：RandomGenerator。&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebook/flipper</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/facebook/flipper</id>
    <link href="https://github.com/facebook/flipper" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A desktop debugging platform for mobile developers.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://fbflipper.com/img/icon.png&#34; alt=&#34;logo&#34; width=&#34;20%&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt; Flipper &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://search.maven.org/artifact/com.facebook.flipper/flipper&#34;&gt; &lt;img src=&#34;https://img.shields.io/maven-central/v/com.facebook.flipper/flipper&#34; alt=&#34;Android Maven Badge&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://cocoapods.org/pods/Flipper&#34;&gt; &lt;img src=&#34;https://img.shields.io/cocoapods/v/FlipperKit.svg?label=iOS&amp;amp;color=blue&#34; alt=&#34;iOS&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; Flipper (formerly Sonar) is a platform for debugging mobile apps on iOS and Android and, recently, even JS apps in your browser or in Node.js. Visualize, inspect, and control your apps from a simple desktop interface. Use Flipper as is or extend it using the plugin API. &lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/facebook/flipper/main/website/static/img/layout.png&#34; alt=&#34;Flipper&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Table of Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#in-this-repo&#34;&gt;In this repo&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#getting-started&#34;&gt;Getting started&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#requirements&#34;&gt;Requirements&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#building-from-source&#34;&gt;Building from Source&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#desktop&#34;&gt;Desktop&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#running-from-source&#34;&gt;Running from source&lt;/a&gt;&lt;/li&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#building-standalone-application&#34;&gt;Building standalone application&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#ios-sdk--sample-app&#34;&gt;iOS SDK + Sample App&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#android-sdk--sample-app&#34;&gt;Android SDK + Sample app&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#react-native-sdk--sample-app&#34;&gt;React Native SDK + Sample app&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#js-sdk--sample-react-app&#34;&gt;JS SDK + Sample React app&lt;/a&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#troubleshooting&#34;&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#documentation&#34;&gt;Documentation&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#contributing&#34;&gt;Contributing&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Mobile development&lt;/h2&gt; &#xA;&lt;p&gt;Flipper aims to be your number one companion for mobile app development on iOS and Android. Therefore, we provide a bunch of useful tools, including a log viewer, interactive layout inspector, and network inspector.&lt;/p&gt; &#xA;&lt;h2&gt;Extending Flipper&lt;/h2&gt; &#xA;&lt;p&gt;Flipper is built as a platform. In addition to using the tools already included, you can create your own plugins to visualize and debug data from your mobile apps. Flipper takes care of sending data back and forth, calling functions, and listening for events on the mobile app.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing to Flipper&lt;/h2&gt; &#xA;&lt;p&gt;Both Flipper&#39;s desktop app, native mobile SDKs, JS SDKs are open-source and MIT licensed. This enables you to see and understand how we are building plugins, and of course, join the community and help to improve Flipper. We are excited to see what you will build on this platform.&lt;/p&gt; &#xA;&lt;h1&gt;In this repo&lt;/h1&gt; &#xA;&lt;p&gt;This repository includes all parts of Flipper. This includes:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Flipper&#39;s desktop app built using &lt;a href=&#34;https://electronjs.org&#34;&gt;Electron&lt;/a&gt; (&lt;code&gt;/desktop&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;native Flipper SDKs for iOS (&lt;code&gt;/iOS&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;native Flipper SDKs for Android (&lt;code&gt;/android&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;React Native Flipper SDK (&lt;code&gt;/react-native&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;JS Flipper SDK (&lt;code&gt;/js&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;Plugins: &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Logs (&lt;code&gt;/desktop/plugins/public/logs&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Layout inspector (&lt;code&gt;/desktop/plugins/public/layout&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Network inspector (&lt;code&gt;/desktop/plugins/public/network&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;Shared Preferences/NSUserDefaults inspector (&lt;code&gt;/desktop/plugins/public/shared_preferences&lt;/code&gt;)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;website and documentation (&lt;code&gt;/website&lt;/code&gt; / &lt;code&gt;/docs&lt;/code&gt;)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Getting started&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to our &lt;a href=&#34;https://fbflipper.com/docs/getting-started/index&#34;&gt;Getting Started guide&lt;/a&gt; to set up Flipper. Or, (still experimental) run &lt;code&gt;npx flipper-server&lt;/code&gt; for a browser based version of Flipper.&lt;/p&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;node &amp;gt;= 8&lt;/li&gt; &#xA; &lt;li&gt;yarn &amp;gt;= 1.5&lt;/li&gt; &#xA; &lt;li&gt;iOS developer tools (for developing iOS plugins)&lt;/li&gt; &#xA; &lt;li&gt;Android SDK and adb&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Building from Source&lt;/h1&gt; &#xA;&lt;h2&gt;Desktop&lt;/h2&gt; &#xA;&lt;h3&gt;Running from source&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/facebook/flipper.git&#xA;cd flipper/desktop&#xA;yarn&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;NOTE: If you&#39;re on Windows, you need to use Yarn 1.5.1 until &lt;a href=&#34;https://github.com/yarnpkg/yarn/issues/6048&#34;&gt;this issue&lt;/a&gt; is resolved.&lt;/p&gt; &#xA;&lt;h3&gt;Building standalone application&lt;/h3&gt; &#xA;&lt;p&gt;Provide either &lt;code&gt;--mac&lt;/code&gt;, &lt;code&gt;--win&lt;/code&gt;, &lt;code&gt;--linux&lt;/code&gt; or any combination of them to &lt;code&gt;yarn build&lt;/code&gt; to build a release zip file for the given platform(s). E.g.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yarn build --mac --version $buildNumber&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can find the resulting artifact in the &lt;code&gt;dist/&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;iOS SDK + Sample App&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd iOS/Sample&#xA;rm -f Podfile.lock&#xA;pod install --repo-update&#xA;open Sample.xcworkspace&#xA;&amp;lt;Run app from xcode&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You can omit &lt;code&gt;--repo-update&lt;/code&gt; to speed up the installation, but watch out as you may be building against outdated dependencies.&lt;/p&gt; &#xA;&lt;h2&gt;Android SDK + Sample app&lt;/h2&gt; &#xA;&lt;p&gt;Start up an android emulator and run the following in the project root:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./gradlew :sample:installDebug&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;React Native SDK + Sample app&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd react-native/ReactNativeFlipperExample&#xA;yarn&#xA;yarn android&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that the first 2 steps need to be done only once.&lt;/p&gt; &#xA;&lt;p&gt;Alternatively, the app can be started on &lt;code&gt;iOS&lt;/code&gt; by running &lt;code&gt;yarn ios&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;If this is the first time running, you will also need to run &lt;code&gt;pod install --repo-update&lt;/code&gt; from the &lt;code&gt;react-native/ReactNativeFlipperExample/ios&lt;/code&gt; folder.&lt;/p&gt; &#xA;&lt;h2&gt;JS SDK + Sample React app&lt;/h2&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd js/react-flipper-example&#xA;yarn&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;Troubleshooting&lt;/h4&gt; &#xA;&lt;p&gt;Older yarn versions might show an error / hang with the message &#39;Waiting for the other yarn instance to finish&#39;. If that happens, run the command &lt;code&gt;yarn&lt;/code&gt; first separately in the directory &lt;code&gt;react-native/react-native-flipper&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Documentation&lt;/h1&gt; &#xA;&lt;p&gt;Find the full documentation for this project at &lt;a href=&#34;https://fbflipper.com/&#34;&gt;fbflipper.com&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Our documentation is built with &lt;a href=&#34;https://docusaurus.io/&#34;&gt;Docusaurus&lt;/a&gt;. You can build it locally by running this:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd website&#xA;yarn&#xA;yarn start&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;See the &lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt; file for how to help out.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;Flipper is MIT licensed, as found in the &lt;a href=&#34;https://raw.githubusercontent.com/facebook/flipper/main/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rust-lang/mdBook</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/rust-lang/mdBook</id>
    <link href="https://github.com/rust-lang/mdBook" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Create book from markdown files. Like Gitbook but implemented in Rust&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;mdBook&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rust-lang/mdBook/actions?workflow=CI&#34;&gt;&lt;img src=&#34;https://github.com/rust-lang/mdBook/workflows/CI/badge.svg?event=push&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://crates.io/crates/mdbook&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/mdbook.svg?sanitize=true&#34; alt=&#34;crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rust-lang/mdBook/master/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/license/rust-lang/mdBook.svg?sanitize=true&#34; alt=&#34;LICENSE&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;mdBook is a utility to create modern online books from Markdown files.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;strong&gt;&lt;a href=&#34;https://rust-lang.github.io/mdBook/&#34;&gt;User Guide&lt;/a&gt;&lt;/strong&gt; for a list of features and installation and usage information. The User Guide also serves as a demonstration to showcase what a book looks like.&lt;/p&gt; &#xA;&lt;p&gt;If you are interested in contributing to the development of mdBook, check out the &lt;a href=&#34;https://github.com/rust-lang/mdBook/raw/master/CONTRIBUTING.md&#34;&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;All the code in this repository is released under the &lt;em&gt;&lt;strong&gt;Mozilla Public License v2.0&lt;/strong&gt;&lt;/em&gt;, for more information take a look at the &lt;a href=&#34;https://github.com/rust-lang/mdBook/raw/master/LICENSE&#34;&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>payloadcms/payload</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/payloadcms/payload</id>
    <link href="https://github.com/payloadcms/payload" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Free and Open-source Headless CMS and Application Framework built with TypeScript, Node.js, React and MongoDB&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt;Payload&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;A free and open-source TypeScript headless CMS &amp;amp; application framework built with Express, MongoDB and React.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/payloadcms/payload/actions&#34;&gt; &lt;img src=&#34;https://github.com/payloadcms/payload/workflows/build/badge.svg?sanitize=true&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/payload&#34;&gt; &lt;img alt=&#34;npm&#34; src=&#34;https://img.shields.io/npm/v/payload&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://twitter.com/intent/tweet?text=Payload%20-%20A%20self-hosted%2C%20headless%20JavaScript%20CMS%20%26%20application%20framework&amp;amp;url=https%3A%2F%2Fgithub.com%2Fpayloadcms%2Fpayload&#34;&gt; &lt;img alt=&#34;Tweet Payload&#34; src=&#34;https://img.shields.io/twitter/url/http/shields.io.svg?style=social&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://discord.com/invite/r6sCXqVk3v&#34;&gt; &lt;img alt=&#34;Discord&#34; src=&#34;https://img.shields.io/discord/967097582721572934?label=Discord&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;a href=&#34;https://payloadcms.com&#34;&gt; &lt;img src=&#34;https://payloadcms.com/images/og-image.jpg&#34; alt=&#34;Payload headless CMS Admin panel built with React&#34;&gt; &lt;/a&gt; &#xA;&lt;h3&gt;Features&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Completely free and open-source&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/graphql/overview&#34;&gt;GraphQL&lt;/a&gt;, &lt;a href=&#34;https://payloadcms.com/docs/rest-api/overview&#34;&gt;REST&lt;/a&gt;, and &lt;a href=&#34;https://payloadcms.com/docs/local-api/overview&#34;&gt;Local&lt;/a&gt; APIs&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/admin/overview&#34;&gt;Easily customizable ReactJS Admin&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/production/deployment&#34;&gt;Fully self-hosted&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/authentication/overview&#34;&gt;Extensible Authentication&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/upload/overview&#34;&gt;Local file storage &amp;amp; upload&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/versions/overview&#34;&gt;Version History and Drafts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/configuration/localization&#34;&gt;Field-based Localization&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/fields/blocks&#34;&gt;Block-based Layout Builder&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/fields/rich-text&#34;&gt;Extensible SlateJS rich text editor&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/fields/array&#34;&gt;Array field type&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/fields/overview#conditional-logic&#34;&gt;Field conditional logic&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Extremely granular &lt;a href=&#34;https://payloadcms.com/docs/access-control/overview&#34;&gt;Access Control&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://payloadcms.com/docs/hooks/overview&#34;&gt;Document and field-level hooks&lt;/a&gt; for every action Payload provides&lt;/li&gt; &#xA; &lt;li&gt;Built with Typescript &amp;amp; very Typescript-friendly&lt;/li&gt; &#xA; &lt;li&gt;Intensely fast API&lt;/li&gt; &#xA; &lt;li&gt;Highly secure thanks to HTTP-only cookies, CSRF protection, and more&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Code-first&lt;/h3&gt; &#xA;&lt;p&gt;Payload is a CMS that has been designed for developers from the ground up to deliver them what they need to build great digital products. If you know JavaScript, you know Payload. It&#39;s a &lt;em&gt;code-first&lt;/em&gt; CMS, which allows us to do a lot of things right:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Payload gives you everything you need, but then steps back and lets you build what you want in JavaScript or TypeScript - with no unnecessary complexity brought by GUIs. You&#39;ll understand how your CMS works, because you will have written it exactly how you want it.&lt;/li&gt; &#xA; &lt;li&gt;Bring your own Express server and do whatever you need on top of Payload. Payload doesn&#39;t impose anything on you or your app.&lt;/li&gt; &#xA; &lt;li&gt;Completely control the Admin panel by using your own React components. Swap out fields or even entire views with ease.&lt;/li&gt; &#xA; &lt;li&gt;Use your data however and wherever you need thanks to auto-generated, yet fully extensible REST, GraphQL and Local Node APIs.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Quick Start&lt;/h3&gt; &#xA;&lt;p&gt;Before beginning to work with Payload, make sure you have all of the &lt;a href=&#34;https://payloadcms.com/docs/getting-started/installation&#34;&gt;required software&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;From there, the easiest way to get started with Payload is to use the &lt;code&gt;create-payload-app&lt;/code&gt; package:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npx create-payload-app&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Alternatively, it only takes about five minutes to &lt;a href=&#34;https://payloadcms.com/docs/getting-started/installation#from-scratch&#34;&gt;create an app from scratch&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Documentation&lt;/h3&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://payloadcms.com/docs/getting-started/what-is-payload&#34;&gt;Payload website&lt;/a&gt; to find in-depth documentation for everything that Payload offers.&lt;/p&gt; &#xA;&lt;h3&gt;Other Resources&lt;/h3&gt; &#xA;&lt;h5&gt;Discussions&lt;/h5&gt; &#xA;&lt;p&gt;There are lots of good conversations and resources in our &lt;a href=&#34;https://github.com/payloadcms/payload/discussions&#34;&gt;GitHub Discussions board&lt;/a&gt;. If you&#39;re struggling with something, chances are, someone&#39;s already solved what you&#39;re up against. Searching Discussions will often provide very helpful tips and tricks.&lt;/p&gt; &#xA;&lt;h5&gt;Discord&lt;/h5&gt; &#xA;&lt;p&gt;Join &lt;a href=&#34;https://discord.com/invite/r6sCXqVk3v&#34;&gt;Payload&#39;s Discord channel&lt;/a&gt; to interact with Payload developers in realtime.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>facebook/react</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/facebook/react</id>
    <link href="https://github.com/facebook/react" rel="alternate"></link>
    <summary type="html">&lt;p&gt;A declarative, efficient, and flexible JavaScript library for building user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt; · &lt;a href=&#34;https://github.com/facebook/react/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;GitHub license&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/react&#34;&gt;&lt;img src=&#34;https://img.shields.io/npm/v/react.svg?style=flat&#34; alt=&#34;npm version&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/facebook/react&#34;&gt;&lt;img src=&#34;https://circleci.com/gh/facebook/react.svg?style=shield&amp;amp;circle-token=:circle-token&#34; alt=&#34;CircleCI Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true&#34; alt=&#34;PRs Welcome&#34;&gt;&lt;/a&gt;&lt;/h1&gt; &#xA;&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don&#39;t make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using Node and power mobile apps using &lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://reactjs.org/docs/getting-started.html&#34;&gt;Learn how to use React in your project&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Use &lt;a href=&#34;https://reactjs.org/docs/getting-started.html#online-playgrounds&#34;&gt;Online Playgrounds&lt;/a&gt; to get a taste of React.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/add-react-to-a-website.html&#34;&gt;Add React to a Website&lt;/a&gt; as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in one minute.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/create-a-new-react-app.html&#34;&gt;Create a New React App&lt;/a&gt; if you&#39;re looking for a powerful JavaScript toolchain.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can use React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag from a &lt;a href=&#34;https://reactjs.org/docs/cdn-links.html&#34;&gt;CDN&lt;/a&gt;, or as a &lt;code&gt;react&lt;/code&gt; package on &lt;a href=&#34;https://www.npmjs.com/package/react&#34;&gt;npm&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;You can find the React documentation &lt;a href=&#34;https://reactjs.org/&#34;&gt;on the website&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Check out the &lt;a href=&#34;https://reactjs.org/docs/getting-started.html&#34;&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; &#xA;&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/tutorial/tutorial.html&#34;&gt;Tutorial&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/hello-world.html&#34;&gt;Main Concepts&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/jsx-in-depth.html&#34;&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/react-api.html&#34;&gt;API Reference&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/community/support.html&#34;&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;You can improve it by sending pull requests to &lt;a href=&#34;https://github.com/reactjs/reactjs.org&#34;&gt;this repository&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;p&gt;We have several examples &lt;a href=&#34;https://reactjs.org/&#34;&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { createRoot } from &#39;react-dom/client&#39;;&#xA;&#xA;function HelloMessage({ name }) {&#xA;  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;&#xA;}&#xA;&#xA;const root = createRoot(document.getElementById(&#39;container&#39;));&#xA;root.render(&amp;lt;HelloMessage name=&#34;Taylor&#34; /&amp;gt;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This example will render &#34;Hello Taylor&#34; into a container on the page.&lt;/p&gt; &#xA;&lt;p&gt;You&#39;ll notice that we used an HTML-like syntax; &lt;a href=&#34;https://reactjs.org/docs/introducing-jsx.html&#34;&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable and writing it feels like writing HTML. If you&#39;re using React as a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag, read &lt;a href=&#34;https://reactjs.org/docs/add-react-to-a-website.html#optional-try-react-with-jsx&#34;&gt;this section&lt;/a&gt; on integrating JSX; otherwise, the &lt;a href=&#34;https://reactjs.org/docs/create-a-new-react-app.html&#34;&gt;recommended JavaScript toolchains&lt;/a&gt; handle it automatically.&lt;/p&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://code.fb.com/codeofconduct&#34;&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href=&#34;https://code.fb.com/codeofconduct&#34;&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html&#34;&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; &#xA;&lt;p&gt;Read our &lt;a href=&#34;https://reactjs.org/docs/how-to-contribute.html&#34;&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; &#xA;&lt;h3&gt;Good First Issues&lt;/h3&gt; &#xA;&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href=&#34;https://github.com/facebook/react/labels/good%20first%20issue&#34;&gt;good first issues&lt;/a&gt; that contain bugs that have a relatively limited scope. This is a great place to get started.&lt;/p&gt; &#xA;&lt;h3&gt;License&lt;/h3&gt; &#xA;&lt;p&gt;React is &lt;a href=&#34;https://raw.githubusercontent.com/facebook/react/main/LICENSE&#34;&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>mswjs/msw</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/mswjs/msw</id>
    <link href="https://github.com/mswjs/msw" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Seamless REST/GraphQL API mocking library for browser and Node.js.&lt;/p&gt;&lt;hr&gt;&lt;br&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mswjs/msw/main/media/msw-logo.svg?sanitize=true&#34; width=&#34;100&#34; alt=&#34;Mock Service Worker logo&#34;&gt; &lt;/p&gt; &#xA;&lt;h1 align=&#34;center&#34;&gt;Mock Service Worker&lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt;Mock Service Worker (MSW) is an API mocking library for browser and Node.js.&lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://www.npmjs.com/package/msw&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/v/msw.svg?style=for-the-badge&amp;amp;label=Latest&amp;amp;color=black&#34; alt=&#34;Package version&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://circleci.com/gh/mswjs/msw&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/circleci/project/github/mswjs/msw/master.svg?style=for-the-badge&amp;amp;color=black&#34; alt=&#34;Build status&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://www.npmjs.com/package/msw&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/npm/dm/msw?style=for-the-badge&amp;amp;color=black&#34; alt=&#34;Downloads per month&#34;&gt; &lt;/a&gt; &lt;a href=&#34;https://kcd.im/discord&#34; target=&#34;_blank&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/chat-online-green?style=for-the-badge&amp;amp;color=black&#34; alt=&#34;Discord server&#34;&gt; &lt;/a&gt; &lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Features&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Seamless&lt;/strong&gt;. A dedicated layer of requests interception at your disposal. Keep your application&#39;s code and tests unaware of whether something is mocked or not.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Deviation-free&lt;/strong&gt;. Request the same production resources and test the actual behavior of your app. Augment an existing API, or design it as you go, when there is none.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Familiar &amp;amp; Powerful&lt;/strong&gt;. Use &lt;a href=&#34;https://github.com/expressjs/express&#34;&gt;Express&lt;/a&gt;-like routing syntax to capture outgoing requests. Use parameters, wildcards, and regular expressions to match requests, and respond with necessary status codes, headers, cookies, delays, or completely custom resolvers.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;hr&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&#34;&lt;em&gt;I found MSW and was thrilled that not only could I still see the mocked responses in my DevTools, but that the mocks didn&#39;t have to be written in a Service Worker and could instead live alongside the rest of my app. This made it silly easy to adopt. The fact that I can use it for testing as well makes MSW a huge productivity booster.&lt;/em&gt;&#34;&lt;/p&gt; &#xA; &lt;p&gt;– &lt;a href=&#34;https://twitter.com/kentcdodds&#34;&gt;Kent C. Dodds&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mswjs.io/docs&#34;&gt;Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mswjs.io/docs/getting-started/install&#34;&gt;&lt;strong&gt;Getting started&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mswjs.io/docs/recipes&#34;&gt;Recipes&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mswjs.io/docs/faq&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Examples&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;See the list of &lt;a href=&#34;https://github.com/mswjs/examples&#34;&gt;&lt;strong&gt;Usage examples&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Browser&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mswjs.io/docs/getting-started/integrate/browser&#34;&gt;Learn more about using MSW in a browser&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mswjs.io/docs/api/setup-worker&#34;&gt;&lt;code&gt;setupWorker&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How does it work?&lt;/h3&gt; &#xA;&lt;p&gt;Browser usage is what sets Mock Service Worker apart from other tools. Utilizing the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&#34;&gt;Service Worker API&lt;/a&gt;, which can intercept requests for the purpose of caching, Mock Service Worker responds to captured requests with your mock definition on the network level. This way your application knows nothing about the mocking.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Watch a 30 seconds explanation on how Mock Service Worker works in a browser:&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/HcQCqboatZk&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/mswjs/msw/main/media/msw-video-thumbnail.jpg&#34; alt=&#34;What is Mock Service Worker?&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;How is it different?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Intercepts requests on the network level, not the application level.&lt;/li&gt; &#xA; &lt;li&gt;If you think of your application as a box, Mock Service Worker lives in its own box next to yours, instead of opening and altering it for the purpose of mocking.&lt;/li&gt; &#xA; &lt;li&gt;Agnostic of request-issuing libraries, so you can use it with &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;axios&lt;/code&gt;, &lt;code&gt;react-query&lt;/code&gt;, you-name-it.&lt;/li&gt; &#xA; &lt;li&gt;The same mock definition can be reused for unit, integration, E2E testing, and debugging.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage example&lt;/h3&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// src/mocks.js&#xA;// 1. Import mocking utils.&#xA;import { setupWorker, rest } from &#39;msw&#39;&#xA;&#xA;// 2. Define request handlers and response resolvers.&#xA;const worker = setupWorker(&#xA;  rest.get(&#39;https://github.com/octocat&#39;, (req, res, ctx) =&amp;gt; {&#xA;    return res(&#xA;      ctx.delay(1500),&#xA;      ctx.status(202, &#39;Mocked status&#39;),&#xA;      ctx.json({&#xA;        message: &#39;Mocked response JSON body&#39;,&#xA;      }),&#xA;    )&#xA;  }),&#xA;)&#xA;&#xA;// 3. Start the Service Worker.&#xA;worker.start()&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Performing a &lt;code&gt;GET https://github.com/octocat&lt;/code&gt; request in your application will result into a mocked response that you can inspect in your browser&#39;s &#34;Network&#34; tab:&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/mswjs/msw/raw/main/media/msw-quick-look-network.png?raw=true&#34; alt=&#34;Chrome DevTools Network screenshot with the request mocked&#34;&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Did you know that although Service Worker runs in a separate thread, your mock definition executes on the client-side? That way you can use the same languages (i.e. TypeScript), third-party libraries, and internal logic in mocks.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Node&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mswjs.io/docs/getting-started/integrate/node&#34;&gt;Learn more about using MSW in Node.js&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://mswjs.io/docs/api/setup-server&#34;&gt;&lt;code&gt;setupServer&lt;/code&gt; API&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;How does it work?&lt;/h3&gt; &#xA;&lt;p&gt;Although Service Worker is a browser-specific API, this library allows reusing of the same mock definition to have API mocking in Node.js through augmenting native request issuing modules.&lt;/p&gt; &#xA;&lt;h3&gt;How is it different?&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Prevents from stubbing &lt;code&gt;fetch&lt;/code&gt;/&lt;code&gt;axios&lt;/code&gt;/etc. as a part of your test, allowing you to treat API mocking as a pre-requisite and focus on what actually matters during testing.&lt;/li&gt; &#xA; &lt;li&gt;The same mock definition you use for local development can be reused for testing.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Usage example&lt;/h3&gt; &#xA;&lt;p&gt;Here&#39;s an example of an actual integration test in Jest that uses &lt;a href=&#34;https://github.com/testing-library/react-testing-library&#34;&gt;React Testing Library&lt;/a&gt; and Mock Service Worker:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// test/LoginForm.test.js&#xA;import &#39;@testing-library/jest-dom&#39;&#xA;import React from &#39;react&#39;&#xA;import { rest } from &#39;msw&#39;&#xA;import { setupServer } from &#39;msw/node&#39;&#xA;import { render, screen } from &#39;@testing-library/react&#39;&#xA;import userEvent from &#39;@testing-library/user-event&#39;&#xA;import Login from &#39;../src/components/Login&#39;&#xA;&#xA;const server = setupServer(&#xA;  rest.post(&#39;/login&#39;, (req, res, ctx) =&amp;gt; {&#xA;    // Respond with a mocked user token that gets persisted&#xA;    // in the `sessionStorage` by the `Login` component.&#xA;    return res(ctx.json({ token: &#39;mocked_user_token&#39; }))&#xA;  }),&#xA;)&#xA;&#xA;// Enable API mocking before tests.&#xA;beforeAll(() =&amp;gt; server.listen())&#xA;&#xA;// Reset any runtime request handlers we may add during the tests.&#xA;afterEach(() =&amp;gt; server.resetHandlers())&#xA;&#xA;// Disable API mocking after the tests are done.&#xA;afterAll(() =&amp;gt; server.close())&#xA;&#xA;test(&#39;allows the user to log in&#39;, async () =&amp;gt; {&#xA;  render(&amp;lt;Login /&amp;gt;)&#xA;  userEvent.type(&#xA;    screen.getByRole(&#39;textbox&#39;, { name: /username/i }),&#xA;    &#39;john.maverick&#39;,&#xA;  )&#xA;  userEvent.type(&#xA;    screen.getByRole(&#39;textbox&#39;, { name: /password/i }),&#xA;    &#39;super-secret&#39;,&#xA;  )&#xA;  userEvent.click(screen.getByText(/submit/i))&#xA;  const alert = await screen.findByRole(&#39;alert&#39;)&#xA;&#xA;  // Assert successful login state&#xA;  expect(alert).toHaveTextContent(/welcome/i)&#xA;  expect(window.sessionStorage.getItem(&#39;token&#39;)).toEqual(fakeUserResponse.token)&#xA;})&#xA;&#xA;test(&#39;handles login exception&#39;, () =&amp;gt; {&#xA;  server.use(&#xA;    rest.post(&#39;/login&#39;, (req, res, ctx) =&amp;gt; {&#xA;      // Respond with &#34;500 Internal Server Error&#34; status for this test.&#xA;      return res(&#xA;        ctx.status(500),&#xA;        ctx.json({ message: &#39;Internal Server Error&#39; }),&#xA;      )&#xA;    }),&#xA;  )&#xA;&#xA;  render(&amp;lt;Login /&amp;gt;)&#xA;  userEvent.type(&#xA;    screen.getByRole(&#39;textbox&#39;, { name: /username/i }),&#xA;    &#39;john.maverick&#39;,&#xA;  )&#xA;  userEvent.type(&#xA;    screen.getByRole(&#39;textbox&#39;, { name: /password/i }),&#xA;    &#39;super-secret&#39;,&#xA;  )&#xA;  userEvent.click(screen.getByText(/submit/i))&#xA;&#xA;  // Assert meaningful error message shown to the user&#xA;  expect(alert).toHaveTextContent(/sorry, something went wrong/i)&#xA;  expect(window.sessionStorage.getItem(&#39;token&#39;)).toBeNull()&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; Did you know that although the API is called &lt;code&gt;setupServer&lt;/code&gt;, there are no actual servers involved? The name is chosen for familiarity, and the API is designed to resemble operating with an actual server.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Sponsors&lt;/h2&gt; &#xA;&lt;h3&gt;Golden Sponsors&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Become our first golden sponsor and get featured right here, enjoying other perks like issue prioritization and a personal consulting session with us.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Learn more on our &lt;a href=&#34;https://github.com/sponsors/mswjs&#34;&gt;GitHub Sponsors profile&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Silver Sponsors&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Become our first &lt;em&gt;silver sponsor&lt;/em&gt; and get your profile image and link featured right here.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Learn more on our &lt;a href=&#34;https://github.com/sponsors/mswjs&#34;&gt;GitHub Sponsors profile&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h3&gt;Bronze Sponsors&lt;/h3&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Become our first &lt;em&gt;bronze sponsor&lt;/em&gt; and get your profile image and link featured in this section.&lt;/p&gt; &#xA; &lt;p&gt;&lt;strong&gt;Learn more on our &lt;a href=&#34;https://github.com/sponsors/mswjs&#34;&gt;GitHub Sponsors profile&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;Awards &amp;amp; Mentions&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr valign=&#34;middle&#34;&gt; &#xA;   &lt;td width=&#34;124&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mswjs/msw/main/media/tech-radar.png&#34; width=&#34;124&#34; alt=&#34;Technology Radar&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;h4&gt;Solution Worth Pursuing&lt;/h4&gt; &lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.thoughtworks.com/radar/languages-and-frameworks/mock-service-worker&#34;&gt;Technology Radar&lt;/a&gt; (2020–2021)&lt;/em&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td width=&#34;124&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/mswjs/msw/main/media/os-awards.png&#34; width=&#34;124&#34; alt=&#34;Open Source Awards 2020&#34;&gt; &lt;/td&gt; &#xA;   &lt;td&gt; &lt;h4&gt;The Most Exciting Use of Technology&lt;/h4&gt; &lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://osawards.com/javascript/2020&#34;&gt;Open Source Awards&lt;/a&gt; (2020)&lt;/em&gt;&lt;/p&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt;</summary>
  </entry>
  <entry>
    <title>zephyrproject-rtos/zephyr</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/zephyrproject-rtos/zephyr</id>
    <link href="https://github.com/zephyrproject-rtos/zephyr" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Primary Git Repository for the Zephyr Project. Zephyr is a new generation, scalable, optimized, secure RTOS for multiple hardware architectures.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;.. raw:: html&lt;/p&gt; &#xA;&lt;a href=&#34;https://www.zephyrproject.org&#34;&gt; &lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/zephyrproject-rtos/zephyr/main/doc/_static/images/logo-readme.svg?sanitize=true&#34;&gt; &lt;/p&gt; &lt;/a&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://bestpractices.coreinfrastructure.org/projects/74&#34;&gt;&lt;img src=&#34;https://bestpractices.coreinfrastructure.org/projects/74/badge&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml?query=branch%3Amain&#34;&gt; &lt;img src=&#34;https://github.com/zephyrproject-rtos/zephyr/actions/workflows/twister.yaml/badge.svg?event=push&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;The Zephyr Project is a scalable real-time operating system (RTOS) supporting multiple hardware architectures, optimized for resource constrained devices, and built with security in mind.&lt;/p&gt; &#xA;&lt;p&gt;The Zephyr OS is based on a small-footprint kernel designed for use on resource-constrained systems: from simple embedded environmental sensors and LED wearables to sophisticated smart watches and IoT wireless gateways.&lt;/p&gt; &#xA;&lt;p&gt;The Zephyr kernel supports multiple architectures, including ARM (Cortex-A, Cortex-R, Cortex-M), Intel x86, ARC, Nios II, Tensilica Xtensa, and RISC-V, SPARC, MIPS, and a large number of &lt;code&gt;supported boards&lt;/code&gt;_.&lt;/p&gt; &#xA;&lt;p&gt;.. below included in doc/introduction/introduction.rst&lt;/p&gt; &#xA;&lt;p&gt;Getting Started&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Welcome to Zephyr! See the &lt;code&gt;Introduction to Zephyr&lt;/code&gt;_ for a high-level overview, and the documentation&#39;s &lt;code&gt;Getting Started Guide&lt;/code&gt;_ to start developing.&lt;/p&gt; &#xA;&lt;p&gt;.. start_include_here&lt;/p&gt; &#xA;&lt;p&gt;Community Support&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Community support is provided via mailing lists and Discord; see the Resources below for details.&lt;/p&gt; &#xA;&lt;p&gt;.. _project-resources:&lt;/p&gt; &#xA;&lt;p&gt;Resources&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;Here&#39;s a quick summary of resources to help you find your way around:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Help&lt;/strong&gt;: &lt;code&gt;Asking for Help Tips&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href=&#34;http://docs.zephyrproject.org&#34;&gt;http://docs.zephyrproject.org&lt;/a&gt; (&lt;code&gt;Getting Started Guide&lt;/code&gt;_)&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Source Code&lt;/strong&gt;: &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr&#34;&gt;https://github.com/zephyrproject-rtos/zephyr&lt;/a&gt; is the main repository; &lt;a href=&#34;https://elixir.bootlin.com/zephyr/latest/source&#34;&gt;https://elixir.bootlin.com/zephyr/latest/source&lt;/a&gt; contains a searchable index&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Releases&lt;/strong&gt;: &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr/releases&#34;&gt;https://github.com/zephyrproject-rtos/zephyr/releases&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Samples and example code&lt;/strong&gt;: see &lt;code&gt;Sample and Demo Code Examples&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Mailing Lists&lt;/strong&gt;: &lt;a href=&#34;mailto:users@lists.zephyrproject.org&#34;&gt;users@lists.zephyrproject.org&lt;/a&gt; and &lt;a href=&#34;mailto:devel@lists.zephyrproject.org&#34;&gt;devel@lists.zephyrproject.org&lt;/a&gt; are the main user and developer mailing lists, respectively. You can join the developer&#39;s list and search its archives at &lt;code&gt;Zephyr Development mailing list&lt;/code&gt;&lt;em&gt;. The other &lt;code&gt;Zephyr mailing list subgroups&lt;/code&gt;&lt;/em&gt; have their own archives and sign-up pages.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Nightly CI Build Status&lt;/strong&gt;: &lt;a href=&#34;https://lists.zephyrproject.org/g/builds&#34;&gt;https://lists.zephyrproject.org/g/builds&lt;/a&gt; The &lt;a href=&#34;mailto:builds@lists.zephyrproject.org&#34;&gt;builds@lists.zephyrproject.org&lt;/a&gt; mailing list archives the CI nightly build results.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Real-time chat happens in Zephyr&#39;s Discord Server. Use this &lt;code&gt;Discord Invite&lt;/code&gt;_ to register.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: see the &lt;code&gt;Contribution Guide&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Wiki&lt;/strong&gt;: &lt;code&gt;Zephyr GitHub wiki&lt;/code&gt;_&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Issues&lt;/strong&gt;: &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr/issues&#34;&gt;https://github.com/zephyrproject-rtos/zephyr/issues&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Security Issues&lt;/strong&gt;: Email &lt;a href=&#34;mailto:vulnerabilities@zephyrproject.org&#34;&gt;vulnerabilities@zephyrproject.org&lt;/a&gt; to report security issues; also see our &lt;code&gt;Security&lt;/code&gt;_ documentation. Security issues are tracked separately at &lt;a href=&#34;https://zephyrprojectsec.atlassian.net&#34;&gt;https://zephyrprojectsec.atlassian.net&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Zephyr Project Website&lt;/strong&gt;: &lt;a href=&#34;https://zephyrproject.org&#34;&gt;https://zephyrproject.org&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;.. _Discord Invite: &lt;a href=&#34;https://chat.zephyrproject.org&#34;&gt;https://chat.zephyrproject.org&lt;/a&gt; .. _supported boards: &lt;a href=&#34;http://docs.zephyrproject.org/latest/boards/index.html&#34;&gt;http://docs.zephyrproject.org/latest/boards/index.html&lt;/a&gt; .. _Zephyr Documentation: &lt;a href=&#34;http://docs.zephyrproject.org&#34;&gt;http://docs.zephyrproject.org&lt;/a&gt; .. _Introduction to Zephyr: &lt;a href=&#34;http://docs.zephyrproject.org/latest/introduction/index.html&#34;&gt;http://docs.zephyrproject.org/latest/introduction/index.html&lt;/a&gt; .. _Getting Started Guide: &lt;a href=&#34;http://docs.zephyrproject.org/latest/getting_started/index.html&#34;&gt;http://docs.zephyrproject.org/latest/getting_started/index.html&lt;/a&gt; .. _Contribution Guide: &lt;a href=&#34;http://docs.zephyrproject.org/latest/contribute/index.html&#34;&gt;http://docs.zephyrproject.org/latest/contribute/index.html&lt;/a&gt; .. _Zephyr GitHub wiki: &lt;a href=&#34;https://github.com/zephyrproject-rtos/zephyr/wiki&#34;&gt;https://github.com/zephyrproject-rtos/zephyr/wiki&lt;/a&gt; .. _Zephyr Development mailing list: &lt;a href=&#34;https://lists.zephyrproject.org/g/devel&#34;&gt;https://lists.zephyrproject.org/g/devel&lt;/a&gt; .. _Zephyr mailing list subgroups: &lt;a href=&#34;https://lists.zephyrproject.org/g/main/subgroups&#34;&gt;https://lists.zephyrproject.org/g/main/subgroups&lt;/a&gt; .. _Sample and Demo Code Examples: &lt;a href=&#34;http://docs.zephyrproject.org/latest/samples/index.html&#34;&gt;http://docs.zephyrproject.org/latest/samples/index.html&lt;/a&gt; .. _Security: &lt;a href=&#34;http://docs.zephyrproject.org/latest/security/index.html&#34;&gt;http://docs.zephyrproject.org/latest/security/index.html&lt;/a&gt; .. _Asking for Help Tips: &lt;a href=&#34;https://docs.zephyrproject.org/latest/getting_started/index.html#asking-for-help&#34;&gt;https://docs.zephyrproject.org/latest/getting_started/index.html#asking-for-help&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>livebud/bud</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/livebud/bud</id>
    <link href="https://github.com/livebud/bud" rel="alternate"></link>
    <summary type="html">&lt;p&gt;The Full-Stack Web Framework for Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bud&lt;/h1&gt; &#xA;&lt;p&gt;The Full-Stack Web Framework for Go. Bud writes the boring code for you, helping you launch your website faster.&lt;/p&gt; &#xA;&lt;h2&gt;Video Demo&lt;/h2&gt; &#xA;&lt;p&gt;Watch a video demonstrating how to build a minimal HN clone in 15 minutes with Bud.&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LoypcRqn-xA&#34;&gt;&lt;img src=&#34;https://user-images.githubusercontent.com/170299/168361927-9165c2f9-55d4-4fa0-a53e-966028a79b39.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;Read &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69&#34;&gt;the documentation&lt;/a&gt; to learn how to get started with Bud.&lt;/p&gt; &#xA;&lt;h1&gt;Installing Bud&lt;/h1&gt; &#xA;&lt;p&gt;Bud ships as a single binary that runs on Linux and Mac. You can follow along for Windows support in &lt;a href=&#34;https://github.com/livebud/bud/issues/7&#34;&gt;this issue&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;The easiest way to get started is by copying and pasting the command below in your terminal:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;$ curl -sf https://raw.githubusercontent.com/livebud/bud/main/install.sh | sh&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This script will download the right binary for your operating system and move the binary to the right location in your &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Confirm that you&#39;ve installed Bud by typing &lt;code&gt;bud&lt;/code&gt; in your terminal.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bud -h&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;You should see the following:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;Usage:&#xA;    bud [flags] [command]&#xA;&#xA;Flags:&#xA;  -C, --chdir  Change the working directory&#xA;&#xA;Commands:&#xA;  build    build the production server&#xA;  create   create a new project&#xA;  run      run the development server&#xA;  tool     extra tools&#xA;  version  Show package versions&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h1&gt;Requirements&lt;/h1&gt; &#xA;&lt;p&gt;The following software is required to use Bud.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Node v14+&lt;/p&gt; &lt;p&gt;This is a temporary requirement that we plan to remove in &lt;a href=&#34;https://github.com/livebud/bud/discussions/21&#34;&gt;v0.3&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Go v1.16+&lt;/p&gt; &lt;p&gt;Bud relies heavily on &lt;code&gt;io/fs&lt;/code&gt; and will take advantage of generics in the future, so while Go v1.16 will work, we suggest running Go v1.18+ if you can.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Your First Project&lt;/h1&gt; &#xA;&lt;p&gt;With bud installed, you can now scaffold a new project:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bud create hello&#xA;$ cd hello&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;The create command will scaffold everything you need to get started with bud.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ ls&#xA;go.mod  node_modules/  package-lock.json  package.json&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;... which is not very much by the way! Unlike most other fullstack frameworks, Bud starts out very minimal. As you add dependencies, Bud will generate all the boring code to glue your app together. Let&#39;s see this in action.&lt;/p&gt; &#xA;&lt;p&gt;Start the development server with &lt;code&gt;bud run&lt;/code&gt;:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bud run&#xA;| Listening on http://127.0.0.1:3000&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Click on the link to open the browser. You&#39;ll be greeted with bud&#39;s welcome page.&lt;/p&gt; &#xA;&lt;p&gt;Congrats! You&#39;re running your first web server with Bud. The welcome server is your jumping off point to learn more about the framework.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://denim-cub-301.notion.site/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fdb7f750b-a699-4117-ac07-303124e5d2f4%2FCleanShot_2022-05-12_at_22.00.192x.png?table=block&amp;amp;id=9488d91f-b72d-4c6d-9ce0-358c31f7f964&amp;amp;spaceId=faf0f409-6e25-40a4-871e-3b311037350f&amp;amp;width=2000&amp;amp;userId=&amp;amp;cache=v2&#34; alt=&#34;CleanShot 2022-05-12 at 22.00.19@2x.png&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Next Steps&lt;/h2&gt; &#xA;&lt;p&gt;Check out the Hacker News &lt;a href=&#34;https://www.youtube.com/watch?v=LoypcRqn-xA&#34;&gt;demo&lt;/a&gt;, read the &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69#156ea69b8d044bacb65fc2897f3e52b8&#34;&gt;documentation&lt;/a&gt;, &lt;a href=&#34;https://cal.com/mattmueller/30min&#34;&gt;schedule a quick call&lt;/a&gt; or go on your own adventure. The only limit is your imagination.&lt;/p&gt; &#xA;&lt;p&gt;Recent discussions: &lt;a href=&#34;https://www.reddit.com/r/golang/comments/uoxocj/bud_the_fullstack_web_framework_for_go_developers/&#34;&gt;Reddit&lt;/a&gt;, &lt;a href=&#34;https://news.ycombinator.com/item?id=31371340&#34;&gt;Hacker News&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/golivebud&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h1&gt;How did Bud come into existence?&lt;/h1&gt; &#xA;&lt;p&gt;I started working on Bud 2 years ago after seeing how productive people could be in &lt;a href=&#34;https://laravel.com/&#34;&gt;Laravel&lt;/a&gt;. I wanted the same for Go, so I decided to try creating Laravel for the Go ecosystem. However, my first version after 6 months needed to scaffold many files just to get started. If you are coming from &lt;a href=&#34;https://github.com/rails/rails&#34;&gt;Rails&lt;/a&gt; or Laravel, you may shrug and consider this as pretty normal.&lt;/p&gt; &#xA;&lt;p&gt;Unfortunately, I have been spoiled by the renaissance in frontend frameworks like &lt;a href=&#34;https://nextjs.org/&#34;&gt;Next.js&lt;/a&gt; that start barebones but every file you add incrementally enhances your web application. This keeps the initial complexity under control.&lt;/p&gt; &#xA;&lt;p&gt;With this additional inspiration, I worked on the next iteration for the ensuing 18 months.&lt;/p&gt; &#xA;&lt;p&gt;The goals are now:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;Generate files only as you need them. Keep these generated files away from your application code and give developers the choice to keep them out of source control. You shouldn&#39;t need to care about the generated code. You may be surprised to learn that Go also generates code to turn your Go code into an executable, but it works so well you don&#39;t need to think about it. Bud should feel like this.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Feel like using a modern JS framework. This means it should work with &lt;a href=&#34;https://github.com/livebud/bud/discussions/8&#34;&gt;multiple&lt;/a&gt; modern frontend frameworks like &lt;a href=&#34;https://svelte.dev/&#34;&gt;Svelte&lt;/a&gt; and &lt;a href=&#34;https://reactjs.org/&#34;&gt;React&lt;/a&gt;, support &lt;a href=&#34;https://denim-cub-301.notion.site/Hey-Bud-4d81622cc49942f9917c5033e5205c69#4c7dff15ef3e458587b81fb9b1819afb&#34;&gt;live reload&lt;/a&gt;, and have &lt;a href=&#34;https://www.reddit.com/r/golang/comments/uoxocj/bud_the_fullstack_web_framework_for_go_developers/i8ke92h/?utm_source=reddit&amp;amp;utm_medium=web2x&amp;amp;context=3&#34;&gt;server-side rendering&lt;/a&gt; for better performance and SEO.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;The framework should be extensible from Day 1. Bud is too ambitious for one person. We&#39;re going to need an ambitious community behind this framework. Extensibility should be primarily driven by adding code, rather than by adding configuration.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bud should provide high-level, type-safe APIs for developers while generating performant, low-level Go code under the covers.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;Bud should compile to a single binary that contains your entire web app and can be copied to a server that doesn&#39;t even have Go installed.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h1&gt;Contributing&lt;/h1&gt; &#xA;&lt;p&gt;Please refer to the &lt;a href=&#34;https://raw.githubusercontent.com/livebud/bud/main/Contributing.md&#34;&gt;Contributing Guide&lt;/a&gt; to learn how to run and test Bud locally.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>rzashakeri/beautify-github-profile</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/rzashakeri/beautify-github-profile</id>
    <link href="https://github.com/rzashakeri/beautify-github-profile" rel="alternate"></link>
    <summary type="html">&lt;p&gt;This repository helps you to have a more beautiful and attractive github profile, and you can access a complete set of tools and guides for beautifying your github profile. 🪄 ⭐&lt;/p&gt;&lt;hr&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautifygithubprofile/master/cover-repo.jpg&#34;&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.producthunt.com/posts/beautify-github-profile?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-beautify-github-profile&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=346331&amp;amp;theme=light&#34; alt=&#34;Beautify Github Profile - Create a beautiful and attractive github profile very easy | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://www.producthunt.com/posts/beautify-github-profile?utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-beautify-github-profile&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=346331&amp;amp;theme=light&amp;amp;period=daily&#34; alt=&#34;Beautify Github Profile - Create a beautiful and attractive github profile very easy | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://www.producthunt.com/posts/beautify-github-profile?utm_source=badge-review&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-beautify-github-profile#discussion-body&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://api.producthunt.com/widgets/embed-image/v1/review.svg?post_id=346331&amp;amp;theme=light&#34; alt=&#34;Beautify Github Profile - Create a beautiful and attractive github profile very easy | Product Hunt&#34; style=&#34;width: 250px; height: 54px;&#34; width=&#34;250&#34; height=&#34;54&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img alt=&#34;GitHub Repo stars&#34; src=&#34;https://img.shields.io/github/stars/rzashakeri/beautify-github-profile?style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub forks&#34; src=&#34;https://img.shields.io/github/forks/rzashakeri/beautify-github-profile?style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub watchers&#34; src=&#34;https://img.shields.io/github/watchers/rzashakeri/beautify-github-profile?style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub contributors&#34; src=&#34;https://img.shields.io/github/contributors/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub last commit&#34; src=&#34;https://img.shields.io/github/last-commit/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub&#34; src=&#34;https://img.shields.io/github/license/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub closed issues&#34; src=&#34;https://img.shields.io/github/issues-closed/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt; &lt;img alt=&#34;GitHub closed pull requests&#34; src=&#34;https://img.shields.io/github/issues-pr-closed/rzashakeri/beautify-github-profile?color=blue&amp;amp;style=flat-square&#34;&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h1&gt;Hello friends 🖐️&lt;/h1&gt; &#xA;&lt;p&gt;how are you If you want to make the look of your github profile more beautiful, you have come to the right place&lt;/p&gt; &#xA;&lt;h1&gt;📌 The first step : Set up the GitHub Repository&lt;/h1&gt; &#xA;&lt;p&gt;Create a repository with your GitHub username 👇&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/name.png&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;p&gt;Template : 👇&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/username/username&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Example : 👇&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;https://github.com/rzashakeri/rzashakeri&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;After Create Repository, &lt;strong&gt;Create a README.md&lt;/strong&gt; in Repository and Done ✅&lt;/h3&gt; &#xA;&lt;p&gt;Now that we have built the repository, we come to the interesting part: &lt;strong&gt;designing our README.md.&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Persian guide for first step 👉 &lt;a href=&#34;https://www.instagram.com/p/CQlxnAnHId0/&#34;&gt;Link 🔗&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h1&gt;💡 Where do we get ideas ?&lt;/h1&gt; &#xA;&lt;p&gt;You must have been asked which profiles to get ideas from? You can see the profile of different people through the site below the gateway profile and get ideas from them 👇&lt;/p&gt; &#xA;&lt;h3&gt;&lt;a href=&#34;https://zzetao.github.io/awesome-github-profile/&#34;&gt;🔗 Awesome Github Profile &lt;/a&gt;&lt;/h3&gt; &#xA;&lt;h1&gt;🚩 What do we do after seeing these profiles ?&lt;/h1&gt; &#xA;&lt;p&gt;Well, so far you have been able to find cool ideas from the profiles of different people. Now it&#39;s time to use different tools to beautify your github profile, which you can access from the list below.&lt;/p&gt; &#xA;&lt;h2&gt;🧩 Badges 👇&lt;/h2&gt; &#xA;&lt;h4&gt;1 . &lt;a href=&#34;https://github.com/Naereen/badges&#34;&gt;List of Badges, in Markdown&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A list of badges and cards, with their Markdown code, that can be included in a README.md file for a GitHub&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;a href=&#34;https://GitHub.com/Naereen/ama&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Ask%20me-anything-1abc9c.svg?sanitize=true&#34; alt=&#34;Ask Me Anything !&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://pypi.python.org/pypi/ansicolortags/&#34;&gt;&lt;img src=&#34;https://img.shields.io/pypi/dd/ansicolortags.svg?sanitize=true&#34; alt=&#34;PyPI download day&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://GitHub.com/Naereen/StrapDown.js/network/&#34;&gt;&lt;img src=&#34;https://badgen.net/github/forks/Naereen/Strapdown.js/&#34; alt=&#34;GitHub forks&#34;&gt;&lt;/a&gt; &amp;nbsp; &lt;a href=&#34;https://GitHub.com/Naereen/StrapDown.js/stargazers/&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/Naereen/StrapDown.js.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;2 . &lt;a href=&#34;https://github.com/Ileriayo/markdown-badges&#34;&gt;Markdown badges in many different categories &lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Badges for your personal developer branding, profile, and projects. &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/Bitcoin-000?style=for-the-badge&amp;amp;logo=bitcoin&amp;amp;logoColor=white&#34; alt=&#34;Bitcoin&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/mysql-%2300f.svg?style=for-the-badge&amp;amp;logo=mysql&amp;amp;logoColor=white&#34; alt=&#34;MySQL&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/react-%2320232a.svg?style=for-the-badge&amp;amp;logo=react&amp;amp;logoColor=%2361DAFB&#34; alt=&#34;React&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/python-3670A0?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=ffdd54&#34; alt=&#34;Python&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;3 . &lt;a href=&#34;https://github.com/jwenjian/visitor-badge&#34;&gt;Count Visitors Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A badge generator service to count visitors of your markdown file.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img src=&#34;https://visitor-badge.glitch.me/badge?page_id=jwenjian.visitor-badge&#34; alt=&#34;visitor badge&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://visitor-badge.glitch.me/badge?page_id=jwenjian.visitor-badge&amp;amp;left_color=red&amp;amp;right_color=green&amp;amp;left_text=HelloVisitors&#34; alt=&#34;visitor badge&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;4 . &lt;a href=&#34;https://shields.io/&#34;&gt;shields&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Concise, consistent, and legible badges in SVG and raster format and Make tokens with custom values&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/reza-shakeri-%20&#34;&gt; &amp;nbsp; &lt;img alt=&#34;AppVeyor tests badge&#34; src=&#34;https://img.shields.io/badge/tests-477%20passed%2C%202%20failed-red&#34;&gt; &amp;nbsp; &lt;img alt=&#34;Open VSX Rating (Stars) badge&#34; src=&#34;https://img.shields.io/badge/rating-%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%85-brightgreen&#34;&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;5 . &lt;a href=&#34;https://github.com/caneco/laravel-github-profile-view-counter&#34;&gt;laravel github profile view counter&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This package will allows you to track Github profile views and display them in your profile readme, for free.&lt;/p&gt; &#xA;&lt;h4&gt;6 . &lt;a href=&#34;https://github.com/claytonjhamilton/stackoverflow-badge&#34;&gt;Stackoverflow Badge&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Display your stats with this unique StackOverflow Badge&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img alt=&#34;StackOverflow user information&#34; src=&#34;https://camo.githubusercontent.com/0e3f8d75dc79e395d7ae8e617ab5b4b8d1e1cbda263347eb9556c4c1edf39004/68747470733a2f2f737461636b6f766572666c6f772d62616467652e6865726f6b756170702e636f6d2f6170692f537461636b4f766572666c6f7742616467652f3134313232333735&#34; data-canonical-src=&#34;https://stackoverflow-badge.herokuapp.com/api/StackOverflowBadge/14122375&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;7 . &lt;a href=&#34;https://github.com/DenverCoder1/github-readme-youtube-stats&#34;&gt;Github README YouTube Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Youtube stats badges for your Github profile README. Displays the total number of subscribers or the view count for your channel.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;img alt=&#34;youtube views&#34; title=&#34;Subscribe to my YouTube channel&#34; src=&#34;https://camo.githubusercontent.com/536bf6638e990166a87efd80d9a24b789f801f652ea530369addaa90e4662cf1/68747470733a2f2f6672657368696465612e636f6d2f6a6f6e61682f796f75747562652d6170692f766965772d636f756e742d62616467652e7068703f6c6162656c3d5669657773267374796c653d666f722d7468652d626164676526636f6c6f723d726564266c6162656c436f6c6f723d63653436333023&#34; data-canonical-src=&#34;https://freshidea.com/jonah/youtube-api/view-count-badge.php?label=Views&amp;amp;style=for-the-badge&amp;amp;color=red&amp;amp;labelColor=ce4630#&#34; style=&#34;max-width: 100%;&#34;&gt; &amp;nbsp; &lt;img alt=&#34;youtube subscribers&#34; title=&#34;Subscribe to my YouTube channel&#34; src=&#34;https://camo.githubusercontent.com/1e1b45604dd286eeaf3f408f4a724a03a776d6bfc9ea1f5b3c72b82919fbbdb9/68747470733a2f2f6672657368696465612e636f6d2f6a6f6e61682f796f75747562652d6170692f73756273637269626572732d62616467652e7068703f7374796c653d666f722d7468652d626164676523&#34; data-canonical-src=&#34;https://freshidea.com/jonah/youtube-api/subscribers-badge.php?style=for-the-badge#&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;8 . &lt;a href=&#34;https://github.com/Envoy-VC/Badges-for-GitHub&#34;&gt; Badges for GitHub&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A Curated list of Badges used in GitHub &lt;br&gt; &lt;br&gt; 📍 For example : &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&amp;amp;logo=gmail&amp;amp;logoColor=white&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&amp;amp;logo=linux&amp;amp;logoColor=black&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;9 . &lt;a href=&#34;https://github.com/alexandresanlim/Badges4-README.md-Profile&#34;&gt;Badges 4 README.md Profile&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Improve your README.md profile with these amazing badges.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://img.shields.io/badge/dev.to-0A0A0A?style=for-the-badge&amp;amp;logo=devdotto&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Xcode-007ACC?style=for-the-badge&amp;amp;logo=Xcode&amp;amp;logoColor=white&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/R-276DC3?style=for-the-badge&amp;amp;logo=r&amp;amp;logoColor=white&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;10 . &lt;a href=&#34;https://github.com/iampavangandhi/Gitwar&#34;&gt;Gitwar&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Gitwar - Compete with Github Check your Github Score. Based on - Your Public Repos , Stars on Public Repos , Forks on Public Repos , Github Followers ,Joined Github Organisations ...&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/df082b78463312b3557f5aab829931c006f52d786fc64711fe2e251e26564df7/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d50726f66696c652b7669657773266d6573736167653d3132333435363738393026636f6c6f723d303037656336267374796c653d666f722d7468652d6261646765&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/static/v1?label=Profile+views&amp;amp;message=1234567890&amp;amp;color=007ec6&amp;amp;style=for-the-badge&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://camo.githubusercontent.com/5a7bb22b0aa8d11e1d01515ce6e942d09a6b51c6ca94fa8602461a8a082faf0d/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d4749545741522b50524f46494c452b53434f5245266d6573736167653d3132333435363738393026636f6c6f723d303037656336&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/static/v1?label=PROFILE+SCORE&amp;amp;message=1234567890&amp;amp;color=007ec6&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;11 . &lt;a href=&#34;https://github.com/antonkomarev/github-profile-views-counter&#34;&gt;Github Profile Views Counter&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;It counts how many times your GitHub profile has been viewed. Free cloud micro-service.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://camo.githubusercontent.com/df082b78463312b3557f5aab829931c006f52d786fc64711fe2e251e26564df7/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d50726f66696c652b7669657773266d6573736167653d3132333435363738393026636f6c6f723d303037656336267374796c653d666f722d7468652d6261646765&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/static/v1?label=Profile+views&amp;amp;message=1234567890&amp;amp;color=007ec6&amp;amp;style=for-the-badge&#34; style=&#34;max-width: 100%;&#34;&gt; &amp;nbsp; &lt;img src=&#34;https://camo.githubusercontent.com/f7119a5d8e7bcbca5a6cce287a7dad354ea144ecff9fa322777346e3e330a08e/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d50726f66696c652b7669657773266d6573736167653d3132333435363738393026636f6c6f723d303037656336267374796c653d706c6173746963&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/static/v1?label=Profile+views&amp;amp;message=1234567890&amp;amp;color=007ec6&amp;amp;style=plastic&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;12 . &lt;a href=&#34;https://github.com/arturssmirnovs/github-profile-views-counter&#34;&gt;Github Profile Views Counter&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Github new features README profile views counter made with Yii2 framework.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://camo.githubusercontent.com/70efda0ea25590e8ec1d45dad689865a24485a757d9359a4547218d25c0fa352/68747470733a2f2f677076632e6172747572696f2e6465762f6769746875622d70726f66696c652d76696577732d636f756e746572&#34; alt=&#34;Profile views&#34; data-canonical-src=&#34;https://gpvc.arturio.dev/github-profile-views-counter&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;13 . &lt;a href=&#34;https://github.com/MikeCodesDotNET/ColoredBadges&#34;&gt;ColoredBadges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Some badges I created for my GitHub profile readme.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MikeCodesDotNET/ColoredBadges/master/svg/dev/languages/csharp.svg?sanitize=true&#34; alt=&#34;csharp&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MikeCodesDotNET/ColoredBadges/master/svg/dev/languages/python.svg?sanitize=true&#34; alt=&#34;python&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/MikeCodesDotNET/ColoredBadges/master/svg/dev/languages/php.svg?sanitize=true&#34; alt=&#34;php&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;14 . &lt;a href=&#34;https://www.appveyor.com/docs/status-badges/&#34;&gt;AppVeyor&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A Project status badge is a dynamically generated image displaying the status of the last build. You can put a status badge on the home page of your GitHub project or intranet portal:&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva?svg=true&#34; alt=&#34;Grunt status&#34;&gt; &lt;img src=&#34;https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva?svg=true&amp;amp;passingText=master%20-%20OK&#34; alt=&#34;Project Badge&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;15 . &lt;a href=&#34;https://github.com/BraveUX/for-the-badge&#34;&gt;For The Badge&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Badges for badges&#39; sake.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &lt;br&gt; &lt;br&gt; &lt;img src=&#34;https://forthebadge.com/images/badges/built-with-love.svg?sanitize=true&#34; alt=&#34;Grunt status&#34;&gt; &lt;img src=&#34;https://forthebadge.com/images/badges/built-for-android.svg?sanitize=true&#34; alt=&#34;Grunt status&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;16 . &lt;a href=&#34;https://gruntjs.com/built-with-grunt-badge&#34;&gt;Grunt Badge&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Do you use Grunt in a project and want to proudly display that in your project README or on your project website? Now you can with the &#34;Built with Grunt&#34; badge!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://cdn.gruntjs.com/builtwith.svg?sanitize=true&#34; alt=&#34;Built with Grunt&#34;&gt; &lt;img src=&#34;https://s3.amazonaws.com/assets.coveralls.io/badges/coveralls_100.svg?sanitize=true&#34; alt=&#34;Coverage Status&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;17 . &lt;a href=&#34;https://docs.semaphoreci.com/essentials/status-badges/&#34;&gt;semaphoreci Status Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;create a badge that displays your project&#39;s current build status. The build status is determined by the status of the first pipeline in your newest workflow. You can use this badge in your project&#39;s README file or any web page.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img alt=&#34;semaphore docs&#34; src=&#34;https://semaphore.semaphoreci.com/badges/docs/branches/master.svg?sanitize=true&#34;&gt; &#xA;&lt;h4&gt;18 . &lt;a href=&#34;https://github.com/J0B10/aoc-badges-action&#34;&gt;Aoc Badges Action&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Github Action to update the badges of your Readme to show your current Advent of Code stats&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/604c50b3ae16d7373a6a162f22e8e0354e1bb2081dfd61ce68b1007af2faa70f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6461792532302546302539462539332538352d32322d626c7565&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/badge/day%20%F0%9F%93%85-22-blue&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://camo.githubusercontent.com/c3d63f570446277a9c3381343581ce07ebbde605d58e866da3fd4d52c9adaae2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73746172732532302545322541442539302d33342d79656c6c6f77&#34; alt=&#34;&#34; data-canonical-src=&#34;https://img.shields.io/badge/stars%20%E2%AD%90-34-yellow&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;19 . &lt;a href=&#34;https://github.com/eugustavo/github-badges&#34;&gt;Github Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Application made to create badges for your readme 📑&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img alt=&#34;GithubBadges&#34; src=&#34;https://camo.githubusercontent.com/9b49974fc2ff46828045e867a959e0502e14bf954c9ffb6b36b995f9ac114ad9/68747470733a2f2f692e696d6775722e636f6d2f695648666c4c552e676966&#34; data-canonical-src=&#34;https://i.imgur.com/iVHflLU.gif&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;20 . &lt;a href=&#34;https://github.com/ashmonty/discord-md-badge&#34;&gt;Discord Md Badge&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add to your GitHub readme a badge that shows your Discord username and presence!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d01429f8fe0330ac6e0123f60fb037db4433d7b931ae8b9e5072b3813d01ba44/68747470733a2f2f646362616467652e76657263656c2e6170702f6170692f736869656c642f3835323937373936373737363339393430303f626f743d74727565&#34; alt=&#34;for-the-badge (default)&#34; data-canonical-src=&#34;https://dcbadge.vercel.app/api/shield/852977967776399400?bot=true&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;21 . &lt;a href=&#34;https://github.com/developStorm/simple-badges&#34;&gt;simple badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Awesome Simple Icons on your favorite Shields.io Badges. Try out on your profile today!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/Python-3776AB?logo=python&amp;amp;logoColor=fff&amp;amp;style=for-the-badge&#34; alt=&#34;Python Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/Iconify-1769AA?logo=iconify&amp;amp;logoColor=fff&amp;amp;style=flat-square&#34; alt=&#34;Iconify Badge&#34;&gt; &lt;img src=&#34;https://img.shields.io/badge/FIFA-326295?logo=fifa&amp;amp;logoColor=fff&amp;amp;style=plastic&#34; alt=&#34;FIFA Badge&#34;&gt;&lt;/p&gt; &#xA;&lt;h4&gt;22 . &lt;a href=&#34;https://github.com/Aveek-Saha/GitHub-Profile-Badges&#34;&gt;GitHub Profile Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Clean badges for your GitHub Profile Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img src=&#34;https://img.shields.io/badge/GitHub%20Actions-2088FF.svg?style=for-the-badge&amp;amp;logo=GitHub-Actions&amp;amp;logoColor=white&#34;&gt; &#xA;&lt;img src=&#34;https://img.shields.io/badge/GitHub-181717.svg?style=for-the-badge&amp;amp;logo=GitHub&amp;amp;logoColor=white&#34;&gt; &#xA;&lt;h4&gt;23 . &lt;a href=&#34;https://github.com/DenverCoder1/custom-icon-badges&#34;&gt;Custom Icon Badges&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Allows users to more easily use Octicons and their own icons and logos in shields.io badges&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34;&gt;&lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/stars/DenverCoder1/custom-icon-badges?logo=star&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/320a36935cdbebab0c0fb2f90bb04262e6264c927b4bab99def395d02c89b5c7/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f73746172732f44656e766572436f646572312f637573746f6d2d69636f6e2d6261646765733f6c6f676f3d73746172&#34; alt=&#34;stars&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/stars/DenverCoder1/custom-icon-badges?logo=star&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/issues-raw/DenverCoder1/custom-icon-badges?logo=issue&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8b0db5ed952994ff48cafd1294e0085c9b7170a805f47475937548d78bb613da/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f6973737565732d7261772f44656e766572436f646572312f637573746f6d2d69636f6e2d6261646765733f6c6f676f3d6973737565&#34; alt=&#34;open issues&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/issues-raw/DenverCoder1/custom-icon-badges?logo=issue&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/license/denvercoder1/custom-icon-badges?logo=repo&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/8039215166b89ec6ad27b3421ac2cc2d7ab26e0029dc7e09952a79668d1bf596/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f6c6963656e73652f64656e766572636f646572312f637573746f6d2d69636f6e2d6261646765733f6c6f676f3d7265706f&#34; alt=&#34;license&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/license/denvercoder1/custom-icon-badges?logo=repo&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/workflow/status/DenverCoder1/custom-icon-badges/Node.js%20CI?logo=check-circle-fill&amp;amp;logoColor=white&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/07496f5b8d244b13bbe160e33868ee28c7fd730a20d4d0624d6dbec34936ad71/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f776f726b666c6f772f7374617475732f44656e766572436f646572312f637573746f6d2d69636f6e2d6261646765732f4e6f64652e6a7325323043493f6c6f676f3d636865636b2d636972636c652d66696c6c266c6f676f436f6c6f723d7768697465&#34; alt=&#34;build&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/workflow/status/DenverCoder1/custom-icon-badges/Node.js%20CI?logo=check-circle-fill&amp;amp;logoColor=white&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/github/last-commit/DenverCoder1/custom-icon-badges?logo=history&amp;amp;logoColor=white&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/349db4a1624a2abbadcfec87d248e21382ca4e3b910797b91f19a51fe210fc3f/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f6769746875622f6c6173742d636f6d6d69742f44656e766572436f646572312f637573746f6d2d69636f6e2d6261646765733f6c6f676f3d686973746f7279266c6f676f436f6c6f723d7768697465&#34; alt=&#34;last commit&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/github/last-commit/DenverCoder1/custom-icon-badges?logo=history&amp;amp;logoColor=white&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://custom-icon-badges.herokuapp.com/badge/dynamic/json?logo=graph&amp;amp;logoColor=fff&amp;amp;color=blue&amp;amp;label=total%20contributions&amp;amp;query=%24.totalContributions&amp;amp;url=https%3A%2F%2Fgithub-readme-streak-stats.herokuapp.com%2F%3Fuser%3DDenverCoder1%26type%3Djson&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/4f9857c76e594acc5d15e5d7f4da909d259ba56625a4a7e0b45c05d7852e85d7/68747470733a2f2f637573746f6d2d69636f6e2d6261646765732e6865726f6b756170702e636f6d2f62616467652f64796e616d69632f6a736f6e3f6c6f676f3d6772617068266c6f676f436f6c6f723d66666626636f6c6f723d626c7565266c6162656c3d746f74616c253230636f6e747269627574696f6e732671756572793d2532342e746f74616c436f6e747269627574696f6e732675726c3d68747470732533412532462532466769746875622d726561646d652d73747265616b2d73746174732e6865726f6b756170702e636f6d2532462533467573657225334444656e766572436f64657231253236747970652533446a736f6e&#34; alt=&#34;total contributions&#34; data-canonical-src=&#34;https://custom-icon-badges.herokuapp.com/badge/dynamic/json?logo=graph&amp;amp;logoColor=fff&amp;amp;color=blue&amp;amp;label=total%20contributions&amp;amp;query=%24.totalContributions&amp;amp;url=https%3A%2F%2Fgithub-readme-streak-stats.herokuapp.com%2F%3Fuser%3DDenverCoder1%26type%3Djson&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;🛠️ Widgets 👇&lt;/h2&gt; &#xA;&lt;h4&gt;1 . &lt;a href=&#34;https://github.com/abhisheknaiidu/todoist-readme&#34;&gt;Todoist Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Updates README with Todoist Stats of a user &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/todoist-stat.png/&#34; width=&#34;400&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;2 . &lt;a href=&#34;https://github.com/anuraghazra/github-readme-stats&#34;&gt;github readme stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated stats for your github readmes &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/8fd2570f103d1aae8a4d8970535274ae19c2ee62587d8868d618be37001263d0/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f616e7572616768617a72612f696d6167652f75706c6f61642f76313539353137343533362f6772732d7468656d65735f6c34796e6a612e706e67&#34; alt=&#34;GitHub Readme Stats Themes&#34; data-canonical-src=&#34;https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d7490794a2d042e6eb6a434616022fe17f075368c31740e69bf1b3cb0acb273f/68747470733a2f2f6769746875622d726561646d652d73746174732e76657263656c2e6170702f6170692f746f702d6c616e67732f3f757365726e616d653d616e7572616768617a7261266c61796f75743d636f6d70616374&#34; alt=&#34;Top Langs&#34; data-canonical-src=&#34;https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;3 . &lt;a href=&#34;https://github.com/DenverCoder1/github-readme-streak-stats&#34;&gt;GitHub Readme Streak Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Stay motivated and show off your contribution streak! 🌟 Display your total contributions, current streak, and longest streak on your GitHub profile README &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d972b2456ee60cde9cd07dcae8d1195edf8a52c751f50f31cbfbc327fd809273/68747470733a2f2f692e696d6775722e636f6d2f496154755964532e706e67&#34; alt=&#34;default&#34; data-canonical-src=&#34;https://i.imgur.com/IaTuYdS.png&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;4 . &lt;a href=&#34;https://github.com/athul/waka-readme&#34;&gt;waka readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Wakatime Weekly Metrics on your Profile Readme. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/8397274/87243943-e6b45c00-c457-11ea-94c9-2aa0bf241be8.png&#34; alt=&#34;Project Preview&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;5 . &lt;a href=&#34;https://github.com/omidnikrah/profile-activity-generator&#34;&gt;Profile Activity Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate custom profile activity for your profile README&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/omidnikrah/profile-activity-generator/master/demo.png&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;6 . &lt;a href=&#34;https://github.com/jamesgeorge007/github-activity-readme&#34;&gt;Github Activity Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Updates README with the recent GitHub activity of a user &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img alt=&#34;profile-repo&#34; src=&#34;https://user-images.githubusercontent.com/25279263/87703301-3aa4a500-c7b8-11ea-8eb6-245121997a7b.png&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;7 . &lt;a href=&#34;https://rahuldkjain.github.io/gh-profile-readme-generator&#34;&gt;Github Profile Readme Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate GitHub profile README easily with the latest add-ons like visitors count, GitHub stats, etc using minimal UI. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rahuldkjain/github-profile-readme-generator/master/src/images/github-profile-readme-generator.gif&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;8 . &lt;a href=&#34;https://github.com/umutphp/github-action-dynamic-profile-page/&#34;&gt;Github Action Dynamic Profile Page&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;GitHub Action to push updates to your special profile repository. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/umutphp/github-action-dynamic-profile-page/master/assets/github_profile_sample.png&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;9 . &lt;a href=&#34;https://github.com/anmol098/waka-readme-stats&#34;&gt;waka readme stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This GitHub action helps to add cool dev metrics to your github profile Readme &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/25841814/79395484-5081ae80-7fac-11ea-9e27-ac91472e31dd.png&#34; alt=&#34;Project Preview&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;10 . &lt;a href=&#34;https://github.com/actions-js/profile-readme&#34;&gt;Profile Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Display profile activity and other cool widgets in your profile README.md &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;💪 Opened PR #43 in webview/webview_deno&lt;br&gt; ❗️ Closed issue #32 in denosaurs/denon&lt;br&gt; 🗣 Commented on #6 in nestdotland/hatcher&lt;br&gt; ❗️ Closed issue #22 in nestdotland/eggs&lt;br&gt; 🗣 Commented on #15 in nestdotland/eggs&lt;br&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;11 . &lt;a href=&#34;https://github.com/kittinan/spotify-github-profile&#34;&gt;Spotify Github Profile&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Show your Spotify playing on your Github profile &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kittinan/spotify-github-profile/master/img/novatorem.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/kittinan/spotify-github-profile/master/img/default.svg?sanitize=true&#34; alt=&#34;spotify-github-profile&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;12 . &lt;a href=&#34;https://github.com/gautamkrishnar/blog-post-workflow&#34;&gt;Blog Post Workflow&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Show your latest blog posts from any sources or StackOverflow activity or Youtube Videos on your GitHub profile/project readme automatically using the RSS feed &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/8397274/88047382-29b8b280-cb6f-11ea-9efb-2af2b10f3e0c.png&#34; alt=&#34;preview&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;13 . &lt;a href=&#34;https://github.com/omidnikrah/github-readme-medium&#34;&gt;Github Readme Medium&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated your latest Medium article on your GitHub readmes! &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/3374294011592525208ac3765e216aced5a5962769bfe8507e719bf5c589f7f5/68747470733a2f2f6769746875622d726561646d652d6d656469756d2e76657263656c2e6170702f3f757365726e616d653d6f6d69646e696b726168&#34; alt=&#34;Omid Nikrah Medium&#34; data-canonical-src=&#34;https://github-readme-medium.vercel.app/?username=omidnikrah&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;14 . &lt;a href=&#34;https://github.com/omidnikrah/github-readme-stackoverflow&#34;&gt;Github Readme Stackoverflow&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated your StackOverflow status on your GitHub READMEs! &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://camo.githubusercontent.com/a98eeb0429d81008fe5c1320d11983627b8f7365a3896e65764b73727275576d/68747470733a2f2f6769746875622d726561646d652d737461636b6f766572666c6f772e76657263656c2e6170702f3f7573657249443d36353538303432&#34; alt=&#34;Omid Nikrah StackOverflow&#34; data-canonical-src=&#34;https://github-readme-stackoverflow.vercel.app/?userID=6558042&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://camo.githubusercontent.com/551c5992d60f859b25ebe54384966ede70d00fef9a36a07855a1690bb93fb36b/68747470733a2f2f6769746875622d726561646d652d737461636b6f766572666c6f772e76657263656c2e6170702f3f7573657249443d36353538303432266c61796f75743d636f6d70616374&#34; alt=&#34;Omid Nikrah StackOverflow&#34; data-canonical-src=&#34;https://github-readme-stackoverflow.vercel.app/?userID=6558042&amp;amp;layout=compact&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;15 . &lt;a href=&#34;https://arturssmirnovs.github.io/github-profile-readme-generator/&#34;&gt;Github Profile Readme Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;GitHub profile readme generator allows you to create nice and simple GitHub profile readme files that will be included in your profile previews. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/37ecf5fc6ed20ef415e3e81bb9104771e7557ca3d828a06dee981d4c18fe9212/68747470733a2f2f617274757273736d69726e6f76732e6769746875622e696f2f6769746875622d70726f66696c652d726561646d652d67656e657261746f722f696d616765732f6769662e6769663f763d313233&#34; alt=&#34;Github readme generator&#34; data-canonical-src=&#34;https://arturssmirnovs.github.io/github-profile-readme-generator/images/gif.gif?v=123&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;16 . &lt;a href=&#34;https://github.com/teoxoy/profile-readme-stats&#34;&gt;Profile Readme Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Showcase your github stats on your profile README.md &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/readme.png&#34;&gt; &#xA;&lt;h4&gt;17 . &lt;a href=&#34;https://github.com/ABSphreak/readme-jokes&#34;&gt;Readme Jokes&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;😄 Jokes for your GitHub READMEs &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d22e78d4de47eff2328eddf6944835f9296a8134ec8b557ae6bb4afc89c4f741/68747470733a2f2f726561646d652d6a6f6b65732e76657263656c2e6170702f6170693f68696465426f72646572&#34; alt=&#34;Jokes Card&#34; data-canonical-src=&#34;https://readme-jokes.vercel.app/api?hideBorder&#34; style=&#34;max-width: 100%;&#34; align=&#34;left&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;18 . &lt;a href=&#34;https://github.com/ryo-ma/github-profile-trophy&#34;&gt;Github Profile Trophy&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add dynamically generated GitHub Stat Trophies on your readme &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/a575f5f00a8bcd492b9fcce7c2c1305139306392e4b2d96479fa6a02b4758646/68747470733a2f2f6769746875622d70726f66696c652d74726f7068792e76657263656c2e6170702f3f757365726e616d653d72796f2d6d6126636f6c756d6e3d362672616e6b3d5353532c53532c532c4141412c41412c412c422c43&#34; data-canonical-src=&#34;https://github-profile-trophy.vercel.app/?username=ryo-ma&amp;amp;column=6&amp;amp;rank=SSS,SS,S,AAA,AA,A,B,C&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;19 . &lt;a href=&#34;https://github.com/gazf/github-readme-twitter&#34;&gt;Github Readme Twitter&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add Twitter to your github readme &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/2fb269ef6a610e8170b5f17ed47455674ddc7662d3c8e9565b8dbe6123b0ce29/68747470733a2f2f6769746875622d726561646d652d747769747465722e67617a662e76657263656c2e6170702f6170693f69643d74776974746572&#34; alt=&#34;github-readme-twitter&#34; data-canonical-src=&#34;https://github-readme-twitter.gazf.vercel.app/api?id=twitter&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;20 . &lt;a href=&#34;https://github.com/techytushar/random-memer&#34;&gt;Random Memer&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Returns random meme images scraped from Memedroid &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;21 . &lt;a href=&#34;https://github.com/rishavanand/github-profilinator&#34;&gt;Github Profilinator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This tool contains mini GUI components that you can hook together to automatically generate markdown code for a perfect readme. &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rishavanand/github-profilinator/master/src/images/demo.gif&#34; style=&#34;width: 80%; max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;22 . &lt;a href=&#34;https://github.com/ankurparihar/readme-pagespeed-insights&#34;&gt;Readme Pagespeed Insights&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Google lighthouse stats of your website that you can put in readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/ankurparihar/readme-pagespeed-insights/master/assets/banner.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;800px&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;23 . &lt;a href=&#34;https://github.com/khalby786/REHeader&#34;&gt;REHeader&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate beautiful header images for your GitHub profile READMEs.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/59e8ef4da1462be13abb2865a3503da9d8611c38f99e9d70b41a26218526cb97/68747470733a2f2f63646e2e676c697463682e636f6d2f30613466363732652d376435632d343235342d386635612d38343763323932346264663625324653637265656e25323053686f74253230323032302d30372d31372532306174253230352e31392e3138253230504d2e706e673f763d31353934393931393934353038&#34; alt=&#34;Another image which is a use case of this generator - again you shouldn&#39;t be seeing this&#34; data-canonical-src=&#34;https://cdn.glitch.com/0a4f672e-7d5c-4254-8f5a-847c2924bdf6%2FScreen%20Shot%202020-07-17%20at%205.19.18%20PM.png?v=1594991994508&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;24 . &lt;a href=&#34;https://github.com/theFr1nge/goodreads-readme&#34;&gt;Goodreads Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This project provides a badge for sharing your current book in your github profile.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/b0ef9e82ab336e6938b5f2bc878958d5130a22ea5196244e4fb8f0e713099bf8/68747470733a2f2f676f6f6472656164732d726561646d652e76657263656c2e6170702f6170692f626f6f6b&#34; alt=&#34;GoodReads&#34; data-canonical-src=&#34;https://goodreads-readme.vercel.app/api/book&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;25 . &lt;a href=&#34;https://github.com/DenverCoder1/readme-typing-svg&#34;&gt;Readme Typing svg&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated, customizable SVG that gives the appearance of typing and deleting text. Typing SVGs can be used as a bio on your Github profile readme or repository.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/21f4ff7dadd9c5bb09f90942dc78f02bd49c67939c17a403253d2e3690dcb758/68747470733a2f2f726561646d652d747970696e672d7376672e6865726f6b756170702e636f6d2f3f6c696e65733d547970652b6d657373616765732b65766572797768657265213b4164642b612b62696f2b746f2b796f75722b70726f66696c65213b4164642b612b6465736372697074696f6e2b746f2b796f75722b7265706f213b4d616b652b796f75722b726561646d652b7374616e642b6f75742126666f6e743d46697261253230436f64652663656e7465723d747275652677696474683d333830266865696768743d3530&#34; data-canonical-src=&#34;https://readme-typing-svg.herokuapp.com/?lines=Type+messages+everywhere!;Add+a+bio+to+your+profile!;Add+a+description+to+your+repo!;Make+your+readme+stand+out!&amp;amp;font=Fira%20Code&amp;amp;center=true&amp;amp;width=380&amp;amp;height=50&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;26 . &lt;a href=&#34;https://github.com/durgeshsamariya/awesome-github-profile-readme-templates&#34;&gt;Awesome Github Profile Readme Templates&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This repository contains best profile readme&#39;s for your reference.&lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;27 . &lt;a href=&#34;https://github.com/tipsy/profile-summary-for-github&#34;&gt;Profile Summary For Github&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Tool for visualizing GitHub profiles&lt;br&gt; &lt;br&gt; 📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/1521451/34072014-4451dbf6-e280-11e7-90a7-32ad1f313541.PNG&#34; alt=&#34;screenshot&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;28 . &lt;a href=&#34;https://github.com/vn7n24fzkq/github-profile-summary-cards&#34;&gt;Github Profile Summary Cards&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A tool to generate your github summary card for profile README &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/0-profile-details.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/0-profile-details.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/1-repos-per-language.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/1-repos-per-language.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/2-most-commit-language.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/2-most-commit-language.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/3-stats.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/3-stats.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/4-productive-time.svg&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/vn7n24fzkq/vn7n24fzkq/master/profile-summary-card-output/solarized/4-productive-time.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;29 . &lt;a href=&#34;https://github.com/marketplace/actions/generate-snake-game-from-github-contribution-grid&#34;&gt;Generate Snake Game From Github Contribution Grid&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generates a snake game from a github user contributions graph&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/Platane/snk/raw/output/github-contribution-grid-snake.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;30 . &lt;a href=&#34;https://github.com/rahulbanerjee26/githubProfileReadmeGenerator&#34;&gt;githubProfileReadmeGenerator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate a cool README/About me page for your Github Profile&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/rahulbanerjee26/githubProfileReadmeGenerator/raw/main/screencast_ghub_profile_gen_v1.gif&#34; alt=&#34;Screencast of Github AboutMe/Profile ReadMe Generator&#34; title=&#34;Go to web app&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;31 . &lt;a href=&#34;https://github.com/rahul-jha98/github-stats-transparent&#34;&gt;Github Stats Transparent&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Automatically generate summary GitHub statistics images for your profile using Actions, no server required&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/rahul-jha98/github-stats-transparent/output/generated/overview.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt; &lt;img src=&#34;https://raw.githubusercontent.com/rahul-jha98/github-stats-transparent/output/generated/languages.svg?sanitize=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;32 . &lt;a href=&#34;https://github.com/ironmaniiith/Github-profile-name-writer&#34;&gt;Github Profile Name Writer&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Write your name using the github commits and make your profile awesome&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/ironmaniiith/Github-profile-name-writer/raw/master/extras/ironmanGithub.jpg&#34; alt=&#34;Image of Ironman on github Profile&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;33 . &lt;a href=&#34;https://github.com/IonicaBizau/github-profile-languages&#34;&gt;Github Profile Languages&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Create a nice pie chart with the user&#39;s programming languages from their GitHub profile.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/6353b997c388ea9e649e46ccb0bdf18475c40cfdb4a7c8857b05c2af7c6c96e0/687474703a2f2f692e696d6775722e636f6d2f514736476835492e706e67&#34; alt=&#34;github-profile-languages&#34; data-canonical-src=&#34;http://i.imgur.com/QG6Gh5I.png&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;34 . &lt;a href=&#34;https://github.com/VishwaGauravIn/github-profile-readme-maker&#34;&gt;Github Profile Readme Maker&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Best Profile Generator, Create your perfect GitHub Profile ReadMe in the best possible way. Lots of features and tools included, all for free !&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/VishwaGauravIn/Images/raw/main/screencapture-gprm.png?raw=true&#34; alt=&#34;&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;35 . &lt;a href=&#34;https://github.com/yoshi389111/github-profile-3d-contrib&#34;&gt;Github Profile 3d Contrib&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This GitHub Action creates a GitHub contribution calendar on a 3D profile image.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/yoshi389111/github-profile-3d-contrib/main/docs/demo/profile-green-animate.svg?sanitize=true&#34; alt=&#34;svg&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;36 . &lt;a href=&#34;https://github.com/leviarista/github-profile-header-generator&#34;&gt;Github Profile Header Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A header image generator for your Github profile Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/leviarista/github-profile-header-generator/main/social/examples/example-1.png&#34; alt=&#34;Example 1&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;37 . &lt;a href=&#34;https://github.com/lowlighter/metrics&#34;&gt;metrics&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;An infographics generator with 30+ plugins and 200+ options to display stats about your GitHub account and render them as SVG, Markdown, PDF or JSON!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;tbody&gt;&#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;For user accounts&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;For organization accounts&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.classic.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.classic.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.organization.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.organization.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3 dir=&#34;auto&#34;&gt;&lt;a id=&#34;user-content--customizable-with-40-plugins-and-258-options&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34; href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/#-customizable-with-40-plugins-and-258-options&#34;&gt;&#xA;      &lt;svg class=&#34;octicon octicon-link&#34; viewbox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&#xA;       &lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&#34;&gt;&lt;/path&gt;&#xA;      &lt;/svg&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/README.md#-plugins&#34;&gt;&#xA;      &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;jigsaw&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f9e9.png&#34;&gt;&#xA;       🧩&#xA;      &lt;/g-emoji&gt; Customizable with 40 plugins and 258 options!&lt;/a&gt;&lt;/h3&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/isocalendar/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;date&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png&#34;&gt;&#xA;      📅&#xA;     &lt;/g-emoji&gt; Isometric commit calendar&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/languages/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;u6708&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f237.png&#34;&gt;&#xA;      🈷️&#xA;     &lt;/g-emoji&gt; Most used languages&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Full year calendar&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.isocalendar.fullyear.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.isocalendar.fullyear.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Half year calendar&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.isocalendar.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.isocalendar.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Indepth analysis (clone and analyze repositories)&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.indepth.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.indepth.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Recently used (analyze recent activity events)&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.recent.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.recent.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Default algorithm&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Default algorithm (with details)&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.details.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.languages.details.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/topics/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;pushpin&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png&#34;&gt;&#xA;      📌&#xA;     &lt;/g-emoji&gt; Starred topics&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/stars/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;star2&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png&#34;&gt;&#xA;      🌟&#xA;     &lt;/g-emoji&gt; Recently starred repositories&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;With icons&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.topics.icons.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.topics.icons.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;With labels&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.topics.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.topics.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stars.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stars.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/licenses/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;scroll&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4dc.png&#34;&gt;&#xA;      📜&#xA;     &lt;/g-emoji&gt; Repository licenses&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/habits/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;bulb&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png&#34;&gt;&#xA;      💡&#xA;     &lt;/g-emoji&gt; Coding habits&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Permissions, limitations and conditions&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.licenses.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.licenses.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Licenses overview&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.licenses.ratio.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.licenses.ratio.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Recent activity charts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.habits.charts.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.habits.charts.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Midly interesting facts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.habits.facts.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.habits.facts.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/contributors/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;medal_sports&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3c5.png&#34;&gt;&#xA;      🏅&#xA;     &lt;/g-emoji&gt; Repository contributors&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/followup/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;tickets&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f39f.png&#34;&gt;&#xA;      🎟️&#xA;     &lt;/g-emoji&gt; Follow-up of issues and pull requests&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;By contribution types&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.contributors.categories.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.contributors.categories.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;By number of contributions&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.contributors.contributions.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.contributors.contributions.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Indepth analysis&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.indepth.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.indepth.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Created on a user&#39;s repositories&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Created by a user&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.user.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.followup.user.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/reactions/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;performing_arts&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3ad.png&#34;&gt;&#xA;      🎭&#xA;     &lt;/g-emoji&gt; Comment reactions&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/people/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;people_holding_hands&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f9d1-1f91d-1f9d1.png&#34;&gt;&#xA;      🧑‍🤝‍🧑&#xA;     &lt;/g-emoji&gt; People plugin&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.reactions.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.reactions.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Related to a user&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.people.followers.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.people.followers.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Related to a repository&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.people.repository.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.people.repository.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/stargazers/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;sparkles&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/2728.png&#34;&gt;&#xA;      ✨&#xA;     &lt;/g-emoji&gt; Stargazers over last weeks&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/projects/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;card_index_dividers&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f5c2.png&#34;&gt;&#xA;      🗂️&#xA;     &lt;/g-emoji&gt; Active projects&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Classic charts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stargazers.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stargazers.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Chartist charts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stargazers.chartist.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stargazers.chartist.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.projects.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.projects.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/code/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;sagittarius&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/2650.png&#34;&gt;&#xA;      ♐&#xA;     &lt;/g-emoji&gt; Code snippet of the day&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/activity/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;newspaper&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4f0.png&#34;&gt;&#xA;      📰&#xA;     &lt;/g-emoji&gt; Recent activity&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.code.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.code.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.activity.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.activity.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/achievements/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;trophy&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png&#34;&gt;&#xA;      🏆&#xA;     &lt;/g-emoji&gt; Achievements&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/notable/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;tophat&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3a9.png&#34;&gt;&#xA;      🎩&#xA;     &lt;/g-emoji&gt; Notable contributions&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Compact display&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.achievements.compact.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.achievements.compact.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Detailed display&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.achievements.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.achievements.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Indepth analysis&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.notable.indepth.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.notable.indepth.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Contributions in organizations only&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.notable.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.notable.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/discussions/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;speech_balloon&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png&#34;&gt;&#xA;      💬&#xA;     &lt;/g-emoji&gt; Discussions&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/support/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;thought_balloon&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4ad.png&#34;&gt;&#xA;      💭&#xA;     &lt;/g-emoji&gt; GitHub Community Support&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.discussions.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.discussions.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.support.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.support.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/lines/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;man_technologist&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f4bb.png&#34;&gt;&#xA;      👨‍💻&#xA;     &lt;/g-emoji&gt; Lines of code changed&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/traffic/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;abacus&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f9ee.png&#34;&gt;&#xA;      🧮&#xA;     &lt;/g-emoji&gt; Repositories traffic&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.lines.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.lines.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.traffic.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.traffic.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/repositories/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;notebook&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d3.png&#34;&gt;&#xA;      📓&#xA;     &lt;/g-emoji&gt; Repositories&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/gists/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;ticket&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3ab.png&#34;&gt;&#xA;      🎫&#xA;     &lt;/g-emoji&gt; Gists&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.repositories.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.repositories.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.gists.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.gists.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/introduction/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;raising_hand&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f64b.png&#34;&gt;&#xA;      🙋&#xA;     &lt;/g-emoji&gt; Introduction&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/sponsors/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;two_hearts&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f495.png&#34;&gt;&#xA;      💕&#xA;     &lt;/g-emoji&gt; GitHub Sponsors&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;For a user or an organization&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.introduction.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.introduction.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;For a repository&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.introduction.repository.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.introduction.repository.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;GitHub sponsors card&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.sponsors.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.sponsors.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;GitHub sponsors full introduction&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.sponsors.full.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.sponsors.full.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/starlists/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;dizzy&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4ab.png&#34;&gt;&#xA;      💫&#xA;     &lt;/g-emoji&gt; Starlists&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/calendar/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;calendar&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4c6.png&#34;&gt;&#xA;      📆&#xA;     &lt;/g-emoji&gt; Calendar&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Repositories from star lists&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.starlists.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.starlists.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Languages from star lists&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.starlists.languages.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.starlists.languages.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Current year&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.calendar.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.calendar.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Full history&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.calendar.full.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.calendar.full.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/skyline/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;city_sunrise&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f307.png&#34;&gt;&#xA;      🌇&#xA;     &lt;/g-emoji&gt; GitHub Skyline 3D calendar&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/pagespeed/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;stopwatch&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/23f1.png&#34;&gt;&#xA;      ⏱️&#xA;     &lt;/g-emoji&gt; Website performances&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.skyline.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.skyline.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;PageSpeed scores&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;PageSpeed scores with detailed report&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.detailed.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.detailed.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;PageSpeed scores with a website screenshot&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.screenshot.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.pagespeed.screenshot.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/stackoverflow/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;left_speech_bubble&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f5e8.png&#34;&gt;&#xA;      🗨️&#xA;     &lt;/g-emoji&gt; StackOverflow plugin&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/anilist/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;cherry_blossom&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f338.png&#34;&gt;&#xA;      🌸&#xA;     &lt;/g-emoji&gt; Anilist watch list and reading list&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stackoverflow.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.stackoverflow.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;For anime watchers&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;For manga readers&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.manga.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.manga.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;For waifus simp&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.characters.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.anilist.characters.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/tweets/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;baby_chick&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f424.png&#34;&gt;&#xA;      🐤&#xA;     &lt;/g-emoji&gt; Latest tweets&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/posts/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;black_nib&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/2712.png&#34;&gt;&#xA;      ✒️&#xA;     &lt;/g-emoji&gt; Recent posts&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Latest tweets with attachments&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.tweets.attachments.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.tweets.attachments.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Latest tweets&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.tweets.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.tweets.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Latest posts width description and cover image&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.posts.full.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.posts.full.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details&gt;&#xA;     &lt;summary&gt;Latest posts&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.posts.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.posts.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/music/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;musical_score&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3bc.png&#34;&gt;&#xA;      🎼&#xA;     &lt;/g-emoji&gt; Music plugin&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/rss/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;tokyo_tower&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f5fc.png&#34;&gt;&#xA;      🗼&#xA;     &lt;/g-emoji&gt; Rss feed&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Random tracks from a playlist&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.music.playlist.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.music.playlist.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &#xA;    &lt;details open&gt;&#xA;     &lt;summary&gt;Recently listened&lt;/summary&gt;&#xA;     &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.music.recent.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.music.recent.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt;&#xA;    &lt;/details&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.rss.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.rss.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/wakatime/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;alarm_clock&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/23f0.png&#34;&gt;&#xA;      ⏰&#xA;     &lt;/g-emoji&gt; WakaTime plugin&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.wakatime.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.plugin.wakatime.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/plugins/community/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;game_die&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f3b2.png&#34;&gt;&#xA;      🎲&#xA;     &lt;/g-emoji&gt; See also community plugins&lt;/a&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34; align=&#34;center&#34;&gt; &lt;h3 dir=&#34;auto&#34;&gt;&lt;a id=&#34;user-content-️-and-even-more-with-4-templates&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34; href=&#34;#️-and-even-more-with-4-templates&#34;&gt;&#xA;      &lt;svg class=&#34;octicon octicon-link&#34; viewbox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&#xA;       &lt;path fill-rule=&#34;evenodd&#34; d=&#34;M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z&#34;&gt;&lt;/path&gt;&#xA;      &lt;/svg&gt;&lt;/a&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/README.md#%EF%B8%8F-templates&#34;&gt;&#xA;      &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;framed_picture&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f5bc.png&#34;&gt;&#xA;       🖼️&#xA;      &lt;/g-emoji&gt; And even more with 4+ templates!&lt;/a&gt;&lt;/h3&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/classic/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;green_book&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d7.png&#34;&gt;&#xA;      📗&#xA;     &lt;/g-emoji&gt; Classic template&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/repository/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;blue_book&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png&#34;&gt;&#xA;      📘&#xA;     &lt;/g-emoji&gt; Repository template&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.classic.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.classic.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.repository.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.repository.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/terminal/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;orange_book&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d9.png&#34;&gt;&#xA;      📙&#xA;     &lt;/g-emoji&gt; Terminal template&lt;/a&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/markdown/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;ledger&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d2.png&#34;&gt;&#xA;      📒&#xA;     &lt;/g-emoji&gt; Markdown template&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.terminal.svg&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.terminal.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.markdown.png&#34;&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/lowlighter/metrics/raw/examples/metrics.markdown.png&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt;&lt;/a&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;&#34;&gt;&lt;img alt=&#34;&#34; style=&#34;max-width: 100%;&#34; width=&#34;900&#34; height=&#34;1&#34;&gt;&lt;/a&gt; &lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th colspan=&#34;2&#34;&gt;&lt;a href=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/lowlighter/metrics/blob/master/source/templates/community/README.md&#34;&gt;&#xA;     &lt;g-emoji class=&#34;g-emoji&#34; alias=&#34;closed_book&#34; fallback-src=&#34;https://github.githubassets.com/images/icons/emoji/unicode/1f4d5.png&#34;&gt;&#xA;      📕&#xA;     &lt;/g-emoji&gt; See also community templates&lt;/a&gt;&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt;&#xA;&lt;/table&gt; &#xA;&lt;br&gt; &#xA;&lt;br&gt; &#xA;&lt;h4&gt;38 . &lt;a href=&#34;https://github.com/dailydotdev/action-devcard&#34;&gt;Action Devcard&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;GitHub Action to download the devcard from &lt;a href=&#34;https://daily.dev&#34;&gt;https://daily.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://app.daily.dev/rzashakeri&#34;&gt;&lt;img src=&#34;https://api.daily.dev/devcards/6ae35a9240b4445ab6b12d50bea77589.png?r=fpe&#34; width=&#34;200&#34; alt=&#34;Reza Shakeri&#39;s Dev Card&#34;&gt;&lt;/a&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;39 . &lt;a href=&#34;https://github.com/joshdsouza8/pimp-my-readme&#34;&gt;Pimp My Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Pimp my README is an open source profile builder that you can use to add some cool components to your README profile - Made with &amp;lt;3 by webapp.io :)&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://pimp-my-readme.webapp.io&#34; rel=&#34;nofollow&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/88bddfba73d62d64c703ef1c75bbe2a2dc2deb4c214e851f5e7a882332a755fd/68747470733a2f2f70696d702d6d792d726561646d652e7765626170702e696f2f70696d702d6d792d726561646d652f776176792d62616e6e65723f7375627469746c653d416e2532306f70656e253230736f7572636525323070726f6a656374253230253341253239267469746c653d50696d702532306d79253230524541444d45&#34; alt=&#34;Pimp my README, An open source project :)&#34; data-canonical-src=&#34;https://pimp-my-readme.webapp.io/pimp-my-readme/wavy-banner?subtitle=An%20open%20source%20project%20%3A%29&amp;amp;title=Pimp%20my%20README&#34; style=&#34;max-width: 100%;&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/433c5a2daa0061aa3be92b6233f904ea1b2176e219a2130ddfccd4d3a4a43a27/68747470733a2f2f70696d702d6d792d726561646d652e7765626170702e696f2f70696d702d6d792d726561646d652f736c6964696e672d746578743f656d6f6a69733d31663931662d31663366655f31663630655f31663630385f316639393526746578743d50696d702532353230796f75722532353230524541444d45&#34; alt=&#34;Pimp my README&#34; data-canonical-src=&#34;https://pimp-my-readme.webapp.io/pimp-my-readme/sliding-text?emojis=1f91f-1f3fe_1f60e_1f608_1f995&amp;amp;text=Pimp%2520your%2520README&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/0fae9cc46100cdf2fc60208b147d5febb0d83bfc5264f0a7179c95ad655967ad/68747470733a2f2f70696d702d6d792d726561646d652e7765626170702e696f2f70696d702d6d792d726561646d652f76697369746f722d636f756e7465723f706167653d70696d702d6d792d726561646d65&#34; alt=&#34;Visitor Counter for pimp-my-readme&#34; data-canonical-src=&#34;https://pimp-my-readme.webapp.io/pimp-my-readme/visitor-counter?page=pimp-my-readme&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/5ad62aa314f320a330c539e266964d5371a3b0f5efdbdfbb270000688a977f35/68747470733a2f2f70696d702d6d792d726561646d652e7765626170702e696f2f70696d702d6d792d726561646d652f746563686e6f6c6f67793f746563686e6f6c6f67793d4a6176615363726970745f48544d4c5f4353535f4e6f64654a535f457870726573735f&#34; alt=&#34;JavaScript_HTML_CSS_NodeJS_Express_&#34; data-canonical-src=&#34;https://pimp-my-readme.webapp.io/pimp-my-readme/technology?technology=JavaScript_HTML_CSS_NodeJS_Express_&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;40 . &lt;a href=&#34;https://github.com/sallar/github-contributions-chart&#34;&gt;GitHub Contribution Chart Generator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate an image of all your Github contributions&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/sallar/github-contributions-chart/master/screenshot.png&#34; style=&#34;max-width: 100%;&#34; width=&#34;676&#34;&gt; &#xA;&lt;h4&gt;41 . &lt;a href=&#34;https://github.com/neat-run/wrapped&#34;&gt;Wrapped&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;GitHub Wrapped, inspired by Spotify Wrapped&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/rzashakeri/beautify-github-profile/master/wrapped.png&#34; style=&#34;max-width: 100%;&#34; max-width=&#34;100%&#34;&gt; &#xA;&lt;h4&gt;42 . &lt;a href=&#34;https://github.com/Annihil/github-spray&#34;&gt;GitHub Spray&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Draw on your GitHub contribution graph ░▒▓█&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34; align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/40946537f361459961c2f65d966d301b105ed19134588bdc275f14af14bbe948/68747470733a2f2f692e696d6775722e636f6d2f6e505a79474e6f2e676966&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/40946537f361459961c2f65d966d301b105ed19134588bdc275f14af14bbe948/68747470733a2f2f692e696d6775722e636f6d2f6e505a79474e6f2e676966&#34; alt=&#34;GitHub Spray logo&#34; data-canonical-src=&#34;https://i.imgur.com/nPZyGNo.gif&#34; style=&#34;max-width: 100%;&#34; width=&#34;200&#34; height=&#34;200&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4&gt;43 . &lt;a href=&#34;https://github.com/avgupta456/github-trends&#34;&gt;Github Trends&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Level up your GitHub profile readme with customizable cards including LOC statistics!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/16708871/143486536-83e85294-2839-4cf1-9e14-685c05da918b.png&#34; alt=&#34;image&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;44 . &lt;a href=&#34;https://github.com/shravan20/github-readme-quotes&#34;&gt;Github Readme Quotes&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamic quote generator for your GitHub readmes | Give a poetic touch to readmes&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/4f89632167b7a39fb7f92d4f634da0ce577b0a5c5ceee4578c71d12fc4417c77/68747470733a2f2f6769746875622d726561646d652d71756f7465732e6865726f6b756170702e636f6d2f71756f74653f7468656d653d6461726b&#34; alt=&#34;Quote&#34; data-canonical-src=&#34;https://github-readme-quotes.herokuapp.com/quote?theme=dark&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;45 . &lt;a href=&#34;https://github.com/JeffreyCA/spotify-recently-played-readme&#34;&gt;Spotify Recently Played Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Display your recently played Spotify tracks on your GitHub profile README.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/1676021262b12981eddcf68a66a9565b75ce82d4d1d1d8f3dd173d28c3cbf5f3/68747470733a2f2f73706f746966792d726563656e746c792d706c617965642d726561646d652e76657263656c2e6170702f6170693f757365723d6a65666672657963613136&#34; alt=&#34;Spotify recently played&#34; data-canonical-src=&#34;https://spotify-recently-played-readme.vercel.app/api?user=jeffreyca16&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;46 . &lt;a href=&#34;https://github.com/rajk3770/Github-Profile-Readme-Creator&#34;&gt;Github Profile Readme Creator&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate user-friendly, intuitive and dynamic markdown for your profile README, in less than a minute!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://github.com/rajk3770/Github-Profile-Readme-Creator/raw/master/screenshots/Demo.gif&#34; alt=&#34;Demo&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;47 . &lt;a href=&#34;https://github.com/th3c0d3br34ker/github-readme-info&#34;&gt;Github Readme Info&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;This GitHub action helps to add cool Stats to your GitHub profile README.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;pre class=&#34;notranslate&#34; style=&#34;position: relative;&#34; lang=&#34;text&#34;&gt;&lt;code class=&#34;notranslate&#34;&gt;I&#39;m a night 🦉&#xA;&#xA;🌞 Morning    57 commits     ████░░░░░░░░░░░░░░░░░░░░░   16.76%&#xA;🌆 Daytime    85 commits     ██████░░░░░░░░░░░░░░░░░░░   25.0%&#xA;🌃 Evening    128 commits    █████████░░░░░░░░░░░░░░░░   37.65%&#xA;🌙 Night      70 commits     █████░░░░░░░░░░░░░░░░░░░░   20.59%&#xA;&#xA;&lt;/code&gt;&#xA; &lt;div class=&#34;open_grepper_editor&#34; title=&#34;Edit &amp;amp; Save To Grepper&#34;&gt;&lt;/div&gt;&lt;/pre&gt; &#xA;&lt;h4&gt;48 . &lt;a href=&#34;https://github.com/bxcodec/github-readme-medium-recent-article&#34;&gt;Github Readme Medium Recent Article&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add Your Recently Published Medium Articles to Your GitHub Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/d788a9c92a195880c6bbb59a2be51537808cafd3ffd943505eec3cd9b4b5734f/68747470733a2f2f6769746875622d726561646d652d6d656469756d2d726563656e742d61727469636c652e76657263656c2e6170702f6d656469756d2f40696d616e74756d6f72616e672f30&#34; alt=&#34;Recent Article 0&#34; data-canonical-src=&#34;https://github-readme-medium-recent-article.vercel.app/medium/@imantumorang/0&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;49 . &lt;a href=&#34;https://github.com/Jurredr/github-widgetbox&#34;&gt;Github Widgetbox&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Beautiful, dynamic widgets for GitHub Readme pages. (Statistics, Skills, etc.)&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/33fa2f9d71dd331c729c8a3bac1bc1b0c3ded069d4602b29559925c843b48ce0/68747470733a2f2f6769746875622d776964676574626f782e76657263656c2e6170702f6170692f70726f66696c653f757365726e616d653d4a75727265647226646174613d666f6c6c6f776572732c7265706f7369746f726965732c73746172732c636f6d6d697473&#34; alt=&#34;GitHub WidgetBox&#34; data-canonical-src=&#34;https://github-widgetbox.vercel.app/api/profile?username=Jurredr&amp;amp;data=followers,repositories,stars,commits&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;50 . &lt;a href=&#34;https://github.com/JeffreyCA/lastfm-recently-played-readme&#34;&gt;lastfm Recently Played Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Display your recent Last.fm scrobbles on your GitHub profile README.&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/6b9790cabcaa9e6515761c7817ba08db06e3f1b60a34751acfcd45ed9c475e3a/68747470733a2f2f6c617374666d2d726563656e746c792d706c617965642e76657263656c2e6170702f6170693f757365723d4a65666672657943413031&#34; alt=&#34;My scrobbles&#34; data-canonical-src=&#34;https://lastfm-recently-played.vercel.app/api?user=JeffreyCA01&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;51 . &lt;a href=&#34;https://github.com/yogeshwaran01/github-stats-terminal-style&#34;&gt;Github Stats Terminal Style&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Generate &lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;) Stats as like Terminal Interface with typing effects dynamically for your profile Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/yogeshwaran01/github-stats-terminal-style/master/github_stats.svg?sanitize=true&#34; style=&#34;max-width: 100%;&#34; align=&#34;middle&#34;&gt; &#xA;&lt;h4&gt;52 . &lt;a href=&#34;https://github.com/KnlnKS/leetcode-stats&#34;&gt;leetcode Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated LeetCode stats for your GitHub READMEs!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img alt=&#34;LeetCode Stat Card&#34; src=&#34;https://camo.githubusercontent.com/1eebccd44222e88e734e4b4972493af998af8fa27f2008244f3e9b90f85497d4/68747470733a2f2f6170753572683867786b2e657865637574652d6170692e75732d656173742d312e616d617a6f6e6177732e636f6d2f64656661756c742f6c656574636f64652d73746174733f757365726e616d653d4b6e6c6e4b53267468656d653d6461726b&#34; data-canonical-src=&#34;https://apu5rh8gxk.execute-api.us-east-1.amazonaws.com/default/leetcode-stats?username=KnlnKS&amp;amp;theme=dark&#34; style=&#34;max-width: 100%;&#34; width=&#34;400&#34;&gt; &#xA;&lt;h4&gt;53 . &lt;a href=&#34;https://github.com/siddharth2016/quote-readme&#34;&gt;Quote Readme&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A GitHub Action that allows you to place a random quote/fun-fact on your README file, from a collection of famous computer science quotes/facts !&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/siddharth2016/quote-readme/main/images/result.png&#34; alt=&#34;Random Quote On Readme Result&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;54 . &lt;a href=&#34;https://github.com/ajmeese7/readme-ascii&#34;&gt;Readme Ascii&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;A GitHub Action that allows you to place a random quote/fun-fact on your README file, from a collection of famous computer science quotes/facts !&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://user-images.githubusercontent.com/17814535/88974985-14ced400-d27f-11ea-83a8-065d86dd8d26.png&#34; alt=&#34;readme-ascii&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;55 . &lt;a href=&#34;https://github.com/mayankchaudhary26/Cool-Readme-ideas&#34;&gt;Cool Readme profile items&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Some cool ideas for your readme profile, enjoy :) and You can access cool gifs through this repository&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p dir=&#34;auto&#34; align=&#34;center&#34;&gt; &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/ece04e9e6d8e7370a88024f41d544915e01ce71b5457326c08349cc282ccf2d4/68747470733a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6c6e377a32655772696951416c6c6656636e2f323030772e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/ece04e9e6d8e7370a88024f41d544915e01ce71b5457326c08349cc282ccf2d4/68747470733a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6c6e377a32655772696951416c6c6656636e2f323030772e77656270&#34; data-canonical-src=&#34;https://media3.giphy.com/media/ln7z2eWriiQAllfVcn/200w.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/a3ccfae79c559d3ff0c7ece89882c93bf278d01f0d2a1d908e19497630dca49d/68747470733a2f2f692e67697068792e636f6d2f6d656469612f4c4d7439363338644f38646674416a74636f2f3230302e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/a3ccfae79c559d3ff0c7ece89882c93bf278d01f0d2a1d908e19497630dca49d/68747470733a2f2f692e67697068792e636f6d2f6d656469612f4c4d7439363338644f38646674416a74636f2f3230302e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/LMt9638dO8dftAjtco/200.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/cda2bff49eb0cd388393e08dd91cc3cf461f095e387d3fdcb8648ab0418010aa/68747470733a2f2f692e67697068792e636f6d2f6d656469612f654e41736a4f353574506267616f72376d612f323030772e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/cda2bff49eb0cd388393e08dd91cc3cf461f095e387d3fdcb8648ab0418010aa/68747470733a2f2f692e67697068792e636f6d2f6d656469612f654e41736a4f353574506267616f72376d612f323030772e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/eNAsjO55tPbgaor7ma/200w.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/3cc5769614aa5306d6452456e393b58ecfe23c4a904ca52dece5341e0794cbe9/68747470733a2f2f692e67697068792e636f6d2f6d656469612f56674774686b68557647674f6974375939692f3230302e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/3cc5769614aa5306d6452456e393b58ecfe23c4a904ca52dece5341e0794cbe9/68747470733a2f2f692e67697068792e636f6d2f6d656469612f56674774686b68557647674f6974375939692f3230302e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/VgGthkhUvGgOit7Y9i/200.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/bb12151c6b0cad592b4b7449df388a6db7aa7ceae45ef7cc03c9d4cab56dc90e/68747470733a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6b64466338667562675333316238447356752f67697068792e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/bb12151c6b0cad592b4b7449df388a6db7aa7ceae45ef7cc03c9d4cab56dc90e/68747470733a2f2f6d65646961332e67697068792e636f6d2f6d656469612f6b64466338667562675333316238447356752f67697068792e77656270&#34; data-canonical-src=&#34;https://media3.giphy.com/media/kdFc8fubgS31b8DsVu/giphy.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/0cad3f969b0946abd0e5f16e9ed1ff78a2495a40c2bb5c6414aefd4be76505aa/68747470733a2f2f692e67697068792e636f6d2f6d656469612f4b7a4a6b7a6a676766474e355079366e6b542f3230302e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/0cad3f969b0946abd0e5f16e9ed1ff78a2495a40c2bb5c6414aefd4be76505aa/68747470733a2f2f692e67697068792e636f6d2f6d656469612f4b7a4a6b7a6a676766474e355079366e6b542f3230302e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/KzJkzjggfGN5Py6nkT/200.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://camo.githubusercontent.com/4d67389739aa53e876a878719fa61eeebea468ae0be6af71903fa8c4c9b72018/68747470733a2f2f692e67697068792e636f6d2f6d656469612f49647941514a564e326b56504e55726f6a4d2f3230302e77656270&#34;&gt;&lt;img src=&#34;https://camo.githubusercontent.com/4d67389739aa53e876a878719fa61eeebea468ae0be6af71903fa8c4c9b72018/68747470733a2f2f692e67697068792e636f6d2f6d656469612f49647941514a564e326b56504e55726f6a4d2f3230302e77656270&#34; data-canonical-src=&#34;https://i.giphy.com/media/IdyAQJVN2kVPNUrojM/200.webp&#34; style=&#34;max-width: 100%;&#34; width=&#34;100&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h4&gt;56 . &lt;a href=&#34;https://github.com/kyechan99/capsule-render&#34;&gt;Capsule Render&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamic Coloful Image Render&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/0da1f68bf3ed97f972472f31e1dbf68514bc3f72761bf300f8474f53ffab7932/68747470733a2f2f63617073756c652d72656e6465722e76657263656c2e6170702f6170693f747970653d776176696e6726636f6c6f723d6175746f266865696768743d3330302673656374696f6e3d68656164657226746578743d63617073756c6525323072656e64657226666f6e7453697a653d393026616e696d6174696f6e3d66616465496e26666f6e74416c69676e593d333826646573633d4465636f7261746525323047697448756225323050726f66696c652532306f72253230616e792532305265706f2532306c696b652532306d65212664657363416c69676e593d35312664657363416c69676e3d3632&#34; alt=&#34;header&#34; data-canonical-src=&#34;https://capsule-render.vercel.app/api?type=waving&amp;amp;color=auto&amp;amp;height=300&amp;amp;section=header&amp;amp;text=capsule%20render&amp;amp;fontSize=90&amp;amp;animation=fadeIn&amp;amp;fontAlignY=38&amp;amp;desc=Decorate%20GitHub%20Profile%20or%20any%20Repo%20like%20me!&amp;amp;descAlignY=51&amp;amp;descAlign=62&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;57 . &lt;a href=&#34;https://github.com/maddhruv/github-readme-npm-downloads&#34;&gt;Github Readme npm Downloads&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Show npm packages downloads ⏬ in GitHub README&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Downloads&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/post-merge-install&#34; rel=&#34;nofollow&#34;&gt;post-merge-install&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;185021&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/types-directory&#34; rel=&#34;nofollow&#34;&gt;types-directory&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;59207&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/install-types&#34; rel=&#34;nofollow&#34;&gt;install-types&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;23071&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/engines-ok&#34; rel=&#34;nofollow&#34;&gt;engines-ok&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;19752&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.npmjs.com/package/npmtotal&#34; rel=&#34;nofollow&#34;&gt;npmtotal&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;18267&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h4&gt;58 . &lt;a href=&#34;https://github.com/LordDashMe/github-contribution-stats&#34;&gt;Github Contribution Stats&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated Github Contribution Stats. 📈 📆&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;img src=&#34;https://camo.githubusercontent.com/b553f4908c78ff3c44d05538fea89b83080611887afee4896d0bd5b1f65b2108/68747470733a2f2f6769746875622d636f6e747269627574696f6e2d73746174732e76657263656c2e6170702f6170692f3f757365726e616d653d6d686576657279&#34; alt=&#34;Contribution Stats&#34; data-canonical-src=&#34;https://github-contribution-stats.vercel.app/api/?username=mhevery&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;59 . &lt;a href=&#34;https://github.com/bytebase/star-history&#34;&gt;Github Star History&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Dynamically generated GitHub repository star chart. 📈 ⭐️&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://star-history.com/#rzashakeri/beautify-github-profile&amp;amp;Date&#34;&gt;&lt;img src=&#34;https://api.star-history.com/svg?repos=rzashakeri/beautify-github-profile&amp;amp;type=Date&#34; alt=&#34;Star History Chart&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h4&gt;60 . &lt;a href=&#34;https://github.com/hmu332233/moon.svg&#34;&gt;Moon.svg&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add real-time moon on your github profile!&lt;br&gt; Moon.svg shows the current moon phase in real time!&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;a href=&#34;https://moon-svg.minung.dev&#34;&gt; &lt;img src=&#34;https://moon-svg.minung.dev/moon.svg?theme=basic&#34; alt=&#34;moon.svg&#34;&gt; &lt;/a&gt; &#xA;&lt;a href=&#34;https://moon-svg.minung.dev&#34;&gt; &lt;img src=&#34;https://moon-svg.minung.dev/moon.svg?theme=ray&#34; alt=&#34;moon.svg&#34;&gt; &lt;/a&gt; &#xA;&lt;h4&gt;61 . &lt;a href=&#34;https://github.com/johannchopin/stackoverflow-readme-profile&#34;&gt;Stackoverflow Readme Profile&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Easily share your Stackoverflow&#39;s profile on your README&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/johannchopin/stackoverflow-readme-profile/main/docs/profile/themes/dark.svg?sanitize=true&#34; alt=&#34;profile&#34; style=&#34;max-width: 100%;&#34;&gt; &#xA;&lt;h4&gt;62 . &lt;a href=&#34;https://github.com/PiyushSuthar/github-readme-quotes&#34;&gt;Github Readme Programming Quotes&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Add Programming Quotes To Your GitHub Readme&lt;/p&gt; &#xA;&lt;p&gt;📍 For example :&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/piyushsuthar/github-readme-quotes&#34;&gt;&lt;img src=&#34;https://quotes-github-readme.vercel.app/api?type=horizontal&amp;amp;theme=dark&#34; alt=&#34;Readme Quotes&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;✅ Icons 👇&lt;/h2&gt; &#xA;&lt;h4&gt;1 . &lt;a href=&#34;https://simpleicons.org/&#34;&gt;Simple Icons&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;2246 Free SVG icons for popular brands &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;&#xA; &lt;svg role=&#34;img&#34; width=&#34;50&#34; viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;  &lt;path d=&#34;M10.51,10.013V7.299c0-0.306,0.248-0.554,0.554-0.554h1.911c0.306,0,0.554,0.248,0.554,0.554v4.968 c0,0.076-0.038,0.134-0.076,0.191l-0.478,0.478c-0.115,0.115-0.115,0.287,0,0.382l0.478,0.478c0.057,0.057,0.076,0.115,0.076,0.191 v2.713c0,0.306-0.248,0.554-0.554,0.554h-1.911c-0.306,0-0.554-0.248-0.554-0.554v-4.968c0-0.076,0.038-0.134,0.076-0.191 l0.478-0.478c0.115-0.115,0.115-0.287,0-0.382l-0.478-0.478C10.529,10.146,10.51,10.089,10.51,10.013z M19.127,12 c0-3.936-3.191-7.127-7.127-7.127S4.873,8.064,4.873,12S8.064,19.127,12,19.127S19.127,15.936,19.127,12z M21.382,12 c0,5.178-4.204,9.363-9.363,9.363c-5.178,0-9.363-4.204-9.363-9.363c0-5.178,4.204-9.363,9.363-9.363 C17.178,2.637,21.382,6.822,21.382,12z M0.764,12c0,6.21,5.025,11.236,11.236,11.236S23.236,18.21,23.236,12S18.21,0.764,12,0.764 S0.764,5.79,0.764,12z M0,12C0,5.369,5.369,0,12,0c6.631,0,12,5.369,12,12s-5.369,12-12,12S0,18.631,0,12z&#34; /&gt;&#xA; &lt;/svg&gt; &amp;nbsp; &#xA; &lt;svg role=&#34;img&#34; width=&#34;50&#34; viewbox=&#34;0 0 24 24&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;  &lt;path d=&#34;M11.964 0L.672 3.974l1.784 14.794L11.976 24l9.568-5.303 1.784-14.794zm-.027 1.258l10.265 3.5-1.663 13.232-8.602 4.76-8.469-4.697L1.939 4.822zm0 .78L4.957 17.57l2.604-.048 1.4-3.501h6.257l1.532 3.55 2.492.046zm.02 4.98l2.355 4.93H9.878Z&#34; /&gt;&#xA; &lt;/svg&gt; &lt;br&gt; &lt;br&gt;&lt;/p&gt; &#xA;&lt;h4&gt;2 . &lt;a href=&#34;https://github.com/tandpfun/skill-icons&#34;&gt;Skill Icons&lt;/a&gt;&lt;/h4&gt; &#xA;&lt;p&gt;Showcase your skills on your Github readme or resumé with ease ✨ &lt;br&gt;&lt;/p&gt; &#xA;&lt;p&gt;📍 For example : &amp;nbsp; &lt;br&gt;&lt;/p&gt; &#xA;&lt;img src=&#34;https://skillicons.dev/icons?i=all&#34;&gt; &#xA;&lt;hr&gt; &#xA;&lt;h3&gt;If you like, you can also help me develop this repository so that from now on we have more beautiful github profiles 💙&lt;/h3&gt; &#xA;&lt;h1&gt;Give A Star ⭐&lt;/h1&gt; &#xA;&lt;p&gt;You can also give this repository a star to show more people and they can use this repository&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>nocobase/nocobase</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/nocobase/nocobase</id>
    <link href="https://github.com/nocobase/nocobase" rel="alternate"></link>
    <summary type="html">&lt;p&gt;NocoBase is a scalability-first, open-source no-code/low-code development platform.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;English | &lt;a href=&#34;https://raw.githubusercontent.com/nocobase/nocobase/main/README.zh-CN.md&#34;&gt;中文&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://nocobase.oss-cn-beijing.aliyuncs.com/bbcedd403d31cd1ccc4e9709581f5c2f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;What is NocoBase&lt;/h2&gt; &#xA;&lt;p&gt;NocoBase is a scalability-first, open-source no-code development platform. No programming required, build your own collaboration platform, management system with NocoBase in minutes.&lt;/p&gt; &#xA;&lt;p&gt;Homepage:&lt;br&gt; &lt;a href=&#34;https://www.nocobase.com/&#34;&gt;https://www.nocobase.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Online Demo:&lt;br&gt; &lt;a href=&#34;https://demo.nocobase.com/new&#34;&gt;https://demo.nocobase.com/new&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Documents:&lt;br&gt; &lt;a href=&#34;https://docs.nocobase.com/&#34;&gt;https://docs.nocobase.com/&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;Contact Us:&lt;br&gt; &lt;a href=&#34;mailto:hello@nocobase.com&#34;&gt;hello@nocobase.com&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Who is NocoBase for&lt;/h2&gt; &#xA;&lt;p&gt;NocoBase is designed for you if you have the following needs.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Develop an internal management system&lt;/li&gt; &#xA; &lt;li&gt;Meet most of your business needs with no-code development&lt;/li&gt; &#xA; &lt;li&gt;Meet particular needs with regular development&lt;/li&gt; &#xA; &lt;li&gt;The system requires frequent changes&lt;/li&gt; &#xA; &lt;li&gt;Private deployment with full control of code and data&lt;/li&gt; &#xA; &lt;li&gt;Free to use or pay for more technical support&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Why choose NocoBase&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Open source and free&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Unrestricted commercial use under the Apache-2.0 license&lt;/li&gt; &#xA;   &lt;li&gt;Full code ownership, private deployment, private and secure data&lt;/li&gt; &#xA;   &lt;li&gt;Free to expand and develop for actual needs&lt;/li&gt; &#xA;   &lt;li&gt;Good ecological support&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strong no-code capability&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Data Model &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Create independent data models using dozens of field types such as text, date, number, attachment, option, icon, etc., and various association relationships such as one-to-one, one-to-many, many-to-many, etc.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Block &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Display and manipulate data within a page using a free combination of block types such as tables, forms, kanban, calendars, details, etc.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;ACL &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Role-based control of user&#39;s system configuration rights, data action rights and menu access rights.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Workflow &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Repetitive tasks are replaced by automation to increase efficiency. Manual approval is required for important matters.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Menu &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;You can group menus, support adding pages and links, and support unlimited submenus.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Action &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt;Support filtering, exporting, adding, deleting, modifying, viewing and other operations to process data, which can be extended to more types.&lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Built for extended development&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Microkernel architecture, flexible and easy to extend, with a robust plug-in system&lt;/li&gt; &#xA;   &lt;li&gt;Node.js-based, with popular frameworks and technologies, including Koa, Sequelize, React, Formily, Ant Design, etc.&lt;/li&gt; &#xA;   &lt;li&gt;Progressive development, easy for getting-started, friendly to newcomers&lt;/li&gt; &#xA;   &lt;li&gt;No binding, no strong dependencies, can be used in any combination or extensions, can be used in existing projects&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Architecture&lt;/h2&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://www.nocobase.com/images/NocoBaseMindMapLite.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.nocobase.com/images/NocoBaseMindMap.png&#34;&gt;Click here to view the full image&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;p&gt;NocoBase supports three installation methods:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://docs.nocobase.com/getting-started/installation/docker-compose&#34;&gt;Installing With Docker (👍Recommended)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Suitable for no-code scenarios, no code to write. When upgrading, just download the latest image and reboot.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://docs.nocobase.com/getting-started/installation/create-nocobase-app&#34;&gt;Installing from create-nocobase-app CLI&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The business code of the project is completely independent and supports low-code development.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;p&gt;&lt;a target=&#34;_blank&#34; href=&#34;https://docs.nocobase.com/getting-started/installation/git-clone&#34;&gt;Installing from Git source code&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you want to experience the latest unreleased version, or want to participate in the contribution, you need to make changes and debug on the source code, it is recommended to choose this installation method, which requires a high level of development skills, and if the code has been updated, you can git pull the latest code.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>rolling-scopes-school/tasks</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/rolling-scopes-school/tasks</id>
    <link href="https://github.com/rolling-scopes-school/tasks" rel="alternate"></link>
    <summary type="html">&lt;p&gt;&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Курс JS/Frontend-разработка&lt;/h1&gt; &#xA;&lt;p&gt;Это бесплатный курс по JavaScript / Front-end, проводимый сообществом с 2013 года. В RS School может учиться каждый, независимо от возраста, профессии, места жительства. Новый набор студентов стартует каждые полгода и насчитывает около 6000-7000 человек. Для продуктивного обучения студентам помогают 250+ менторов.&lt;/p&gt; &#xA;&lt;p&gt;Цель курса — получение студентами знаний и опыта, достаточного для трудоустройства на позицию Junior Software Engineer в области JavaScript / Front-end.&lt;/p&gt; &#xA;&lt;p&gt;За период с 1 октября 2020 по 1 июня 2021 только в компанию EPAM Systems трудоустроилось 208 выпускников нашего курса.&lt;/p&gt; &#xA;&lt;p&gt;Больше информации о RS School находится тут: &lt;a href=&#34;https://docs.rs.school/#/&#34;&gt;https://docs.rs.school/#/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Продолжительность обучения&lt;/h3&gt; &#xA;&lt;p&gt;5-7 месяцев. Для успешного прохождения программы вам потребуется 20-40 часов в неделю.&lt;/p&gt; &#xA;&lt;h3&gt;Программа обучения&lt;/h3&gt; &#xA;&lt;p&gt;Программа обучения находится &lt;a href=&#34;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/roadmap.md&#34;&gt;тут&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h1&gt;Регистрация&lt;/h1&gt; &#xA;&lt;p&gt;Мы предлагаем два варианта регистрации в зависимости от уровня вашей подготовки.&lt;/p&gt; &#xA;&lt;h3&gt;Регистрация на подготовительный курс&lt;/h3&gt; &#xA;&lt;p&gt;Подготовительный курс предназначен для тех, кто мало знаком или незнаком с программированием, но хотел бы в дальнейшем учиться на основном курсе JavaScript / Front-end.&lt;/p&gt; &#xA;&lt;p&gt;Программу обучения подготовительного курса можно посмотреть &lt;a href=&#34;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/stage0/&#34;&gt;тут&lt;/a&gt;. Регистрацию на ближайший запуск можно найти тут: &lt;a href=&#34;https://rs.school/js-stage0/&#34;&gt;https://rs.school/js-stage0/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Регистрация на основной курс JavaScript / Front-end&lt;/h3&gt; &#xA;&lt;p&gt;&lt;strong&gt;Внимание!&lt;/strong&gt; Основной курс требует наличия у студентов базовых знаний:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;понимание основ HTML и CSS, наличие практических навыков вёрстки;&lt;/li&gt; &#xA; &lt;li&gt;знание основ JavaScript (типы данных, операторы, циклы, условные констуркции, функции);&lt;/li&gt; &#xA; &lt;li&gt;знание структуры данных и их организации (массив, список, стек, очередь, дерево и т.д.);&lt;/li&gt; &#xA; &lt;li&gt;умение реализовать достаточно простой алгоритм на языке программирования JavaScript. Например, сортировку или поиск элементов массива;&lt;/li&gt; &#xA; &lt;li&gt;умение решать задачи уровня 8-7 kyu на сайте &lt;a href=&#34;https://www.codewars.com/&#34;&gt;https://www.codewars.com/&lt;/a&gt;;&lt;/li&gt; &#xA; &lt;li&gt;(желательно) английский язык уровня Pre-intermediate.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Программу обучения можно посмотреть &lt;a href=&#34;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/roadmap.md&#34;&gt;тут&lt;/a&gt;. Регистрацию на ближайший запуск можно найти тут: &lt;a href=&#34;https://rs.school/js/&#34;&gt;https://rs.school/js/&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;FAQ&lt;/h2&gt; &#xA;&lt;h3&gt;Где можно задать вопрос?&lt;/h3&gt; &#xA;&lt;p&gt;Вопросы можно задать в Discord чате: &lt;a href=&#34;https://discord.gg/8Dv4bAw6Hx&#34;&gt;https://discord.gg/8Dv4bAw6Hx&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Имеет ли значения город проживания? Можно ли пройти курс полностью онлайн?&lt;/h3&gt; &#xA;&lt;p&gt;Город проживания значения не имеет. Все этапы обучения можно пройти онлайн.&lt;/p&gt; &#xA;&lt;h3&gt;Что делать до старта обучения?&lt;/h3&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Выполнить задания и тесты &lt;a href=&#34;https://raw.githubusercontent.com/rolling-scopes-school/tasks/master/stage0/&#34;&gt;подготовительного курса&lt;/a&gt;.&lt;/li&gt; &#xA; &lt;li&gt;Пойти на курсы английского языка до получения уровня Pre-Intermediate (Минимум A2).&lt;/li&gt; &#xA;&lt;/ol&gt;</summary>
  </entry>
  <entry>
    <title>521xueweihan/HelloGitHub</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/521xueweihan/HelloGitHub</id>
    <link href="https://github.com/521xueweihan/HelloGitHub" rel="alternate"></link>
    <summary type="html">&lt;p&gt;分享 GitHub 上有趣、入门级的开源项目。Share interesting, entry-level open source projects on GitHub.&lt;/p&gt;&lt;hr&gt;&lt;p align=&#34;center&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/readme.gif&#34;&gt; &lt;br&gt;中文 | &lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/README_en.md&#34;&gt;English&lt;/a&gt; &lt;br&gt;分享 GitHub 上有趣、入门级的开源项目。&lt;br&gt;兴趣是最好的老师，这里能够帮你找到编程的兴趣！ &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/weixin.png&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/Talk-%E5%BE%AE%E4%BF%A1%E7%BE%A4-brightgreen.svg?style=popout-square&#34; alt=&#34;WeiXin&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/stargazers&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/stars/521xueweihan/HelloGitHub.svg?style=popout-square&#34; alt=&#34;GitHub stars&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/issues&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/issues/521xueweihan/HelloGitHub.svg?style=popout-square&#34; alt=&#34;GitHub issues&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://weibo.com/hellogithub&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/%E6%96%B0%E6%B5%AA-Weibo-red.svg?style=popout-square&#34; alt=&#34;Sina Weibo&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;h2&gt;简介&lt;/h2&gt; &#xA;&lt;p&gt;HelloGitHub 分享 GitHub 上有趣、入门级的开源项目。&lt;strong&gt;每月 28 号&lt;/strong&gt;以月刊的形式&lt;a href=&#34;https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MzYyNzQ0MQ==&amp;amp;action=getalbum&amp;amp;album_id=1331197538447310849#wechat_redirect&#34;&gt;更新发布&lt;/a&gt;，内容包括：&lt;strong&gt;有趣、入门级的开源项目&lt;/strong&gt;、&lt;strong&gt;开源书籍&lt;/strong&gt;、&lt;strong&gt;实战项目&lt;/strong&gt;、&lt;strong&gt;企业级项目&lt;/strong&gt;等，让你用很短时间感受到开源的魅力，爱上开源！&lt;/p&gt; &#xA;&lt;h2&gt;内容&lt;/h2&gt; &#xA;&lt;p&gt;获得更好的阅读体验 &lt;a href=&#34;https://hellogithub.com&#34;&gt;官网&lt;/a&gt; 或 &lt;a href=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/weixin.png&#34;&gt;HelloGitHub 公众号&lt;/a&gt;&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;&lt;span&gt;📇&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🎃&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🍺&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;span&gt;🍥&lt;/span&gt;&lt;/th&gt; &#xA;   &lt;th&gt;&lt;img alt=&#34;octocat&#34; src=&#34;https://github.githubassets.com/images/icons/emoji/octocat.png?v8&#34;&gt;)&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/74/HelloGitHub74.md&#34;&gt;第 74 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/73/HelloGitHub73.md&#34;&gt;第 73 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/72/HelloGitHub72.md&#34;&gt;第 72 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/71/HelloGitHub71.md&#34;&gt;第 71 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/70/HelloGitHub70.md&#34;&gt;第 70 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/69/HelloGitHub69.md&#34;&gt;第 69 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/68/HelloGitHub68.md&#34;&gt;第 68 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/67/HelloGitHub67.md&#34;&gt;第 67 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/66/HelloGitHub66.md&#34;&gt;第 66 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/65/HelloGitHub65.md&#34;&gt;第 65 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/64/HelloGitHub64.md&#34;&gt;第 64 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/63/HelloGitHub63.md&#34;&gt;第 63 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/62/HelloGitHub62.md&#34;&gt;第 62 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/61/HelloGitHub61.md&#34;&gt;第 61 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/60/HelloGitHub60.md&#34;&gt;第 60 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/59/HelloGitHub59.md&#34;&gt;第 59 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/58/HelloGitHub58.md&#34;&gt;第 58 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/57/HelloGitHub57.md&#34;&gt;第 57 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/56/HelloGitHub56.md&#34;&gt;第 56 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/55/HelloGitHub55.md&#34;&gt;第 55 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/54/HelloGitHub54.md&#34;&gt;第 54 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/53/HelloGitHub53.md&#34;&gt;第 53 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/52/HelloGitHub52.md&#34;&gt;第 52 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/51/HelloGitHub51.md&#34;&gt;第 51 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/50/HelloGitHub50.md&#34;&gt;第 50 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/49/HelloGitHub49.md&#34;&gt;第 49 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/48/HelloGitHub48.md&#34;&gt;第 48 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/47/HelloGitHub47.md&#34;&gt;第 47 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/46/HelloGitHub46.md&#34;&gt;第 46 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/45/HelloGitHub45.md&#34;&gt;第 45 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/44/HelloGitHub44.md&#34;&gt;第 44 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/43/HelloGitHub43.md&#34;&gt;第 43 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/42/HelloGitHub42.md&#34;&gt;第 42 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/41/HelloGitHub41.md&#34;&gt;第 41 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/40/HelloGitHub40.md&#34;&gt;第 40 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/39/HelloGitHub39.md&#34;&gt;第 39 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/38/HelloGitHub38.md&#34;&gt;第 38 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/37/HelloGitHub37.md&#34;&gt;第 37 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/36/HelloGitHub36.md&#34;&gt;第 36 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/35/HelloGitHub35.md&#34;&gt;第 35 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/34/HelloGitHub34.md&#34;&gt;第 34 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/33/HelloGitHub33.md&#34;&gt;第 33 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/32/HelloGitHub32.md&#34;&gt;第 32 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/31/HelloGitHub31.md&#34;&gt;第 31 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/05/HelloGitHub05.md&#34;&gt;第 05 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/04/HelloGitHub04.md&#34;&gt;第 04 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/03/HelloGitHub03.md&#34;&gt;第 03 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/02/HelloGitHub02.md&#34;&gt;第 02 期&lt;/a&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/521xueweihan/HelloGitHub/master/content/01/HelloGitHub01.md&#34;&gt;第 01 期&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;p&gt;欢迎&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/issues/new&#34;&gt;推荐或自荐&lt;/a&gt;项目成为 &lt;strong&gt;HelloGitHub&lt;/strong&gt; 的&lt;a href=&#34;https://github.com/521xueweihan/HelloGitHub/raw/master/content/contributors.md&#34;&gt;贡献者&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h2&gt;赞助&lt;/h2&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://www.ucloud.cn/site/active/kuaijie.html?invitation_code=C1xF2ECA89A2592&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/ucloud.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;云主机&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;仅 4 元/月&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://www.upyun.com/&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/upyun.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;CDN&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;开启全网加速&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34; style=&#34;width: 80px;&#34;&gt; &lt;a href=&#34;https://doc.rentsoft.cn/&#34;&gt; &lt;img src=&#34;https://cdn.jsdelivr.net/gh/521xueweihan/img_logo@main/logo/im.png&#34; width=&#34;60px&#34;&gt;&lt;br&gt; &lt;sub&gt;OpenIM&lt;/sub&gt;&lt;br&gt; &lt;sub&gt;开源IM力争No.1&lt;/sub&gt; &lt;/a&gt; &lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;声明&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;&lt;img alt=&#34;知识共享许可协议&#34; style=&#34;border-width: 0&#34; src=&#34;https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png&#34;&gt;&lt;/a&gt;&lt;br&gt;本作品采用 &lt;a rel=&#34;license&#34; href=&#34;https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh&#34;&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 进行许可。&lt;a href=&#34;mailto:595666367@qq.com&#34;&gt;联系我&lt;/a&gt;&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>matthiasjost/dotnet-content-creators</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/matthiasjost/dotnet-content-creators</id>
    <link href="https://github.com/matthiasjost/dotnet-content-creators" rel="alternate"></link>
    <summary type="html">&lt;p&gt;⚡A list of .NET content creators&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;span&gt;⚡&lt;/span&gt; My Favourite .NET Content Creators&lt;/h1&gt; &#xA;&lt;p&gt;With creators I mean enthusiasts creating content for Blogs, YouTube, Twitch, Books, tutorial platforms (e.g. Pluralsight)&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;span&gt;🗣&lt;/span&gt; All creators listed here &lt;strong&gt;also create content in English or only create content in English&lt;/strong&gt;.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;✍&lt;/span&gt; Bloggers&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;📽&lt;/span&gt; YouTubers&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;📖&lt;/span&gt; Book authors&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🧾&lt;/span&gt; Free or paid content&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🗺&lt;/span&gt; The country doesn&#39;t matter as well, but I thought it is an excellent way to divide the list into sections and to challenge everyone to find good creators from all countries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;span&gt;🧭&lt;/span&gt; What I call the &#34;main channel&#34; is just what seems to be the most updated and well-known channel from where you would find all the other work from your creator best.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;&lt;span&gt;📆&lt;/span&gt; 2022&lt;/h2&gt; &#xA;&lt;p&gt;All creators under this section must have published something in 2022.&lt;/p&gt; &#xA;&lt;h3&gt;Australia&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/au.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Les Jackson&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/binarythistle&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rahul Nath&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/RahulNath&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Belgium&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/be.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Maarten Balliauw&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.maartenballiauw.be/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Canada&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/ca.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Derek Comartin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/channel/UC3RKA4vunFAfrfxiJhPEplw&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Frank Liu&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/FrankLiuSoftware/&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Richard Campbell&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.dotnetrocks.com/&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;France&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/fr.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Daniel Lawson&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://github.com/danylaws/my-twitter-threads&#34;&gt;Twitter Threads&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Germany&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/de.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Holger Schwichtenberg&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/DOTNETDOKTOR&#34;&gt;Twitter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Thomas Claudius Huber&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://app.pluralsight.com/profile/author/thomas-huber&#34;&gt;Pluralsight&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tim Cadenbach&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.tcdev.de/blog&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;India&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/in.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Anto Subash&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/AntoSubash&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://blog.antosubash.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mukesh Murugan&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://codewithmukesh.com/blog&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nouman Rahman&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://programmingfire.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Saineshwar Bageri&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://tutexchange.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shailendra Chauhan&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCuYuSB7JzDslrwwh8EM-4JA&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shreyas Jejurkar&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://shreyasjejurkar.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Italy&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/it.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Davide Bellone&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.code4it.dev&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Lebanon&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/lb.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Ahmad Mozaffar&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCRs-PO48PbbS0l7bBhbu5CA&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Malawi&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/mw.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Simuzeche Kaluwa&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCQw4zDb735eezImafcyYlWg&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Mauritius&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/mu.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Patrick Smacchia&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.ndepend.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Netherlands&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/nl.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gerald Versluis&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/GeraldVersluis&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Marc Duiker&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/marcduiker-serverless&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://blog.marcduiker.nl&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Max Hamulyák&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://kaylumah.nl/blog&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Roland Guijt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://app.pluralsight.com/profile/author/roland-guijt&#34;&gt;Pluralsight&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Norway&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/no.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kris Devochko&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://kristhecodingunicorn.com/post/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Poland&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/pl.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Szymon Kulec&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.scooletz.com/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Oleg Kyrylchuk&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.okyrylchuk.dev/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Oskar Dudycz&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://event-driven.io/en/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Portugal&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/pt.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Guilherme Ferreira&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://gsferreira.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;João Antunes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/CodingMilitia&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Romania&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/ro.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dan Patrascu-Baba&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCyTPru-1gZ7-4qblcKM0TiQ&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Serbia&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/rs.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Marinko Spasojevic&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://code-maze.com/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Milan Jovanović&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.linkedin.com/in/milan-jovanovic&#34;&gt;LinkedIn&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Switzerland&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/ch.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Claudio Bernasconi&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://youtube.com/claudiobernasconi&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Damien Bowden&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://damienbod.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Emanuele Bartolesi&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dev.to/kasuken&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jürgen Gutsch&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://asp.net-hacker.rocks&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Steven Giesel&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://steven-giesel.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Turkey&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/tr.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sabit Kondakçı&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.linkedin.com/in/sabit-kondak%C3%A7%C4%B1/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;UK&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/gb.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Andrea Angella&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/AndreaAngella&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Andrew Lock&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://andrewlock.net/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Anton Wieslander&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/RawCoding&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dan Clarke&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://unhandledexceptionpodcast.com/&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Gavin Lon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/GavinLon/&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jamie Maguire&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://jamiemaguire.net/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jamie Taylor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dotnetcore.show&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jon Hilton&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://jonhilton.net/&#34;&gt;Blog&lt;/a&gt;, &lt;a href=&#34;https://practicaldotnet.io&#34;&gt;Courses&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jon P Smith&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.thereformedprogrammer.net&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Layla Porter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.twitch.tv/laylacodesit&#34;&gt;Twitch&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mark Heath&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://app.pluralsight.com/profile/author/mark-heath&#34;&gt;Pluralsight&lt;/a&gt;, &lt;a href=&#34;https://markheath.net&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Mohamad Lawand&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/MohamadLawand&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Nick Chapsas&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/Elfocrash&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Paul Michaels&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://pmichaels.net&#34;&gt;Site&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Peter Morris&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blazor-university.com&#34;&gt;Site&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scott Wlaschin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://fsharpforfunandprofit.com&#34;&gt;Site&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Steve Gordon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://app.pluralsight.com/profile/author/steve-gordon&#34;&gt;Pluralsight&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;USA&lt;/h3&gt; &#xA;&lt;img src=&#34;https://raw.githubusercontent.com/matthiasjost/dotnet-content-creators/main/4x3/us.svg?sanitize=true&#34; height=&#34;35&#34;&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Bryan Hogan&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://nodogmapodcast.bryanhogan.net/&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Chris Patterson&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/PhatBoyG&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Carl Franklin&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.dotnetrocks.com/&#34;&gt;Podcast&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/playlist?list=PL8h4jt35t1wjvwFnvcB2LlYL4jLRzRmoz&#34;&gt;BlazorTrain YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;David McCarter&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dotNetTips.com&#34;&gt;Blog&lt;/a&gt;, &lt;a href=&#34;https://www.c-sharpcorner.com/live/rockin-the-code-world-with-dotnetdave&#34;&gt;Live Show&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Hassan Rezk Habib&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.linkedin.com/in/hassanrezkhabib/recent-activity/shares/&#34;&gt;LinkedIn&lt;/a&gt;, &lt;a href=&#34;https://linktr.ee/hassanrezkhabib&#34;&gt;linktree&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;John Savill&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/NTFAQGuy&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;James Montemagno&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/JamesMontemagno&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://www.mergeconflict.fm/&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jeffrey T. Fritz&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/csharpfritz/&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://www.twitch.tv/csharpfritz&#34;&gt;Twitch&lt;/a&gt;, &lt;a href=&#34;https://linktr.ee/csharpfritz&#34;&gt;linktree&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Jimmy Bogard&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://jimmybogard.com/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Julie Lerman&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/julielerman&#34;&gt;Twitter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kendra Havens&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://twitter.com/gotheap&#34;&gt;Twitter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kevin Bost&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/KevinBost&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Khalid Abuhakmeh&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://khalidabuhakmeh.com/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Niels Swimberghe&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://swimburger.net&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Richard Campbell&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.dotnetrocks.com&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Rockford Lhotka&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.lhotka.net&#34;&gt;Blog&lt;/a&gt;, &lt;a href=&#34;https://www.twitter.com/rockylhotka&#34;&gt;Twitter&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Scott Hanselman&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCL-fHOdarou-CR2XUmK48Og&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://www.hanselminutes.com/&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Sean Killeen&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://seankilleen.com/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Shawn Wildermuth&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://app.pluralsight.com/profile/author/shawn-wildermuth&#34;&gt;Pluralsight&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;SingletonSean&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/SingletonSean&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Steve Ardalis Smith&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://ardalis.com/blog&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Tim Corey&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://youtube.com/user/IAmTimCorey&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://iamtimcorey.com/p/podcast&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Wes Doyle&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://youtube.com/c/WesDoyle&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Official MSFT / .NET Foundation content resources / Xamarin&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.NET Microsoft Channels&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://devblogs.microsoft.com/dotnet&#34;&gt;Blog&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/c/dotNET&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://docs.microsoft.com/en-us/dotnet&#34;&gt;Documentation&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.NET Foundation&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/NETFoundation&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Microsoft Visual Studio&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/visualstudio&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://devblogs.microsoft.com/visualstudio/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Xamarin Developers&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/XamarinDevelopers&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;  &#xA;&lt;h3&gt;Multi-Creator Channels / Creator Name Unkown&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6 Figure Developer Podcast&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://6figuredev.com/category/podcast/&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Code Maze&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.code-maze.com&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Coding Blocks&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.codingblocks.net/&#34;&gt;Podcast&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Curious Drive&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/CuriousDrive&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;C# Corner&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.c-sharpcorner.com/&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DevMentors&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/DevMentors&#34;&gt;YouTube&lt;/a&gt;, &lt;a href=&#34;https://devmentors.io&#34;&gt;Site&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Dotnetos&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dotnetos.org/blog&#34;&gt;Blog&lt;/a&gt;, &lt;a href=&#34;https://youtube.com/c/Dotnetos&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;DotNet Core Central&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/DotNetCoreCentral&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Kudvenkat/Pragim&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.youtube.com/c/Csharp-video-tutorialsBlogspot&#34;&gt;YouTube&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ExceptionNotFound&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.exceptionnotfound.net&#34;&gt;Blog&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt;  &#xA;&lt;h3&gt;Aggregator Sites&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th&gt;Main Channel&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;Discover.NET&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://discoverdot.net&#34;&gt;Site&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;.NET Ketchup&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://dotnetketchup.com&#34;&gt;Site&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;The Morning Brew by Chris Alcock, UK&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://blog.cwa.me.uk/&#34;&gt;Site&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;The Morning Dew by Alvin Ashcraft, USA&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://www.alvinashcraft.com/&#34;&gt;Site&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;🪴 Contribute&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;No matter if huge or a small following: The quality matters.&lt;/li&gt; &#xA; &lt;li&gt;Please add your favourite creators!&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;🙏Credits&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Special thanks &lt;a href=&#34;https://twitter.com/ShreyasJejurkar&#34;&gt;Shreyas Jejurkar&lt;/a&gt; for sharing a lot of awesome YouTube channels that I didn&#39;t know: &lt;a href=&#34;https://shreyasjejurkar.com/?p=728&#34;&gt;List of YouTube channels for .NET C# developers&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;Special thanks to the &lt;a href=&#34;https://twitter.com/i/communities/1488624124817666051&#34;&gt;dotnet Twitter Community&lt;/a&gt; for suggesting creators&lt;/li&gt; &#xA; &lt;li&gt;Flags copied from: &lt;a href=&#34;https://flagicons.lipis.dev&#34;&gt;https://flagicons.lipis.dev&lt;/a&gt; / &lt;a href=&#34;https://github.com/lipis/flag-icons&#34;&gt;https://github.com/lipis/flag-icons&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>dotnet/maui</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/dotnet/maui</id>
    <link href="https://github.com/dotnet/maui" rel="alternate"></link>
    <summary type="html">&lt;p&gt;.NET MAUI is the .NET Multi-platform App UI, a framework for building native device applications spanning mobile, tablet, and desktop.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;.NET Multi-platform App UI (.NET MAUI)&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dev.azure.com/xamarin/public/_build/latest?definitionId=57&amp;amp;repoName=dotnet%2Fmaui&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://dev.azure.com/xamarin/public/_apis/build/status/MAUI-public?repoName=dotnet%2Fmaui&amp;amp;branchName=main&amp;amp;label=Public&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://devdiv.visualstudio.com/DevDiv/_build/latest?definitionId=13330&amp;amp;repoName=dotnet%2Fmaui&amp;amp;branchName=main&#34;&gt;&lt;img src=&#34;https://devdiv.visualstudio.com/DevDiv/_apis/build/status/MAUI?repoName=dotnet%2Fmaui&amp;amp;branchName=main&amp;amp;label=Private&#34; alt=&#34;Build Status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://dotnet.microsoft.com/en-us/apps/maui&#34;&gt;.NET Multi-platform App UI (.NET MAUI)&lt;/a&gt; is a cross-platform framework for creating mobile and desktop apps with C# and XAML. Using .NET MAUI, you can develop apps that can run on Android, iOS, iPadOS, macOS, and Windows from a single shared codebase.&lt;/p&gt; &#xA;&lt;h2&gt;Getting Started&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://dot.net/maui&#34;&gt;Install .NET MAUI&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://docs.microsoft.com/dotnet/maui&#34;&gt;.NET MAUI Documentation&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/dotnet/maui-samples&#34;&gt;.NET MAUI Samples&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/DEVELOPMENT.md&#34;&gt;Development Guide&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Overview&lt;/h2&gt; &#xA;&lt;p&gt;.NET Multi-platform App UI (.NET MAUI) is the evolution of Xamarin.Forms that expands capabilities beyond mobile Android and iOS into desktop apps for Windows and macOS. With .NET MAUI, you can build apps that perform great for any device that runs Windows, macOS, Android, &amp;amp; iOS from a single codebase. Coupled with Visual Studio productivity tools and emulators, .NET and Visual Studio significantly speed up the development process for building apps that target the widest possible set of devices. Use a single development stack that supports the best of breed solutions for all modern workloads with a unified SDK, base class libraries, and toolchain. &lt;a href=&#34;https://docs.microsoft.com/dotnet/maui/what-is-maui&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/dotnet/maui/main/Assets/maui-weather-hero-sm.png&#34; alt=&#34;.NET MAUI Weather App on all platforms&#34;&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Current News&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;May 10, 2022 - &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/dotnet-maui-rc-3/&#34;&gt;.NET MAUI Release Candidate 3&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;April 26, 2022 - &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/dotnet-maui-rc-2/&#34;&gt;.NET MAUI Release Candidate 2&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;April 12, 2022 - &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/dotnet-maui-rc-1/&#34;&gt;.NET MAUI Release Candidate - Ready for Cross-Platform App Development&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Follow the &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/category/net-maui/&#34;&gt;.NET MAUI Blog&lt;/a&gt; and visit the &lt;a href=&#34;https://github.com/dotnet/maui/wiki/News&#34;&gt;News&lt;/a&gt; wiki page for more news and updates.&lt;/p&gt; &#xA;&lt;h2&gt;FAQs&lt;/h2&gt; &#xA;&lt;p&gt;Do you have questions? Do not worry, we have prepared a complete &lt;a href=&#34;https://github.com/dotnet/maui/wiki/FAQs&#34;&gt;FAQ&lt;/a&gt; answering the most common questions.&lt;/p&gt; &#xA;&lt;h2&gt;How to Engage, Contribute, and Give Feedback&lt;/h2&gt; &#xA;&lt;p&gt;Some of the best ways to &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/CONTRIBUTING.md&#34;&gt;contribute&lt;/a&gt; are to try things out, file issues, join in design conversations, and make pull-requests. Proposals for changes specific to MAUI can be found &lt;a href=&#34;https://github.com/dotnet/maui/issues&#34;&gt;here for discussion&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/CODE_OF_CONDUCT.md&#34;&gt;CODE-OF-CONDUCT&lt;/a&gt; and the &lt;a href=&#34;https://raw.githubusercontent.com/dotnet/maui/main/.github/DEVELOPMENT.md&#34;&gt;Development Guide&lt;/a&gt;.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>trekhleb/javascript-algorithms</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/trekhleb/javascript-algorithms</id>
    <link href="https://github.com/trekhleb/javascript-algorithms" rel="alternate"></link>
    <summary type="html">&lt;p&gt;📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;🇺🇦 UKRAINE &lt;a href=&#34;https://twitter.com/MFA_Ukraine&#34;&gt;IS BEING ATTACKED&lt;/a&gt; BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.&lt;/p&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;Help Ukraine via &lt;a href=&#34;https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi&#34;&gt;National Bank of Ukraine&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;li&gt;Help Ukraine via &lt;a href=&#34;https://savelife.in.ua/en/donate/&#34;&gt;SaveLife&lt;/a&gt; fund&lt;/li&gt; &#xA;  &lt;li&gt;More info on &lt;a href=&#34;https://war.ukraine.ua/&#34;&gt;war.ukraine.ua&lt;/a&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster&#34;&gt;&lt;img src=&#34;https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true&#34; alt=&#34;CI&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/trekhleb/javascript-algorithms&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;codecov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; &#xA;&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md&#34;&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md&#34;&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md&#34;&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md&#34;&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md&#34;&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md&#34;&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md&#34;&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md&#34;&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md&#34;&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md&#34;&gt;&lt;em&gt;Türk&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md&#34;&gt;&lt;em&gt;Italiana&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md&#34;&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md&#34;&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md&#34;&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.vi-VN.md&#34;&gt;&lt;em&gt;Tiếng Việt&lt;/em&gt;&lt;/a&gt;, &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md&#34;&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Data Structures&lt;/h2&gt; &#xA;&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list&#34;&gt;Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list&#34;&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue&#34;&gt;Queue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack&#34;&gt;Stack&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table&#34;&gt;Hash Table&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap&#34;&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue&#34;&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie&#34;&gt;Trie&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree&#34;&gt;Tree&lt;/a&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree&#34;&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree&#34;&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree&#34;&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree&#34;&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree&#34;&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph&#34;&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set&#34;&gt;Disjoint Set&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter&#34;&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Algorithms&lt;/h2&gt; &#xA;&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; &#xA;&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; &#xA;&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits&#34;&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/binary-floating-point&#34;&gt;Binary Floating Point&lt;/a&gt; - binary representation of the floating-point numbers.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial&#34;&gt;Factorial&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&#34;&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors&#34;&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan&#39;s theorem&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test&#34;&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&#34;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple&#34;&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes&#34;&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two&#34;&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&#34;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number&#34;&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian&#34;&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&#34;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method&#34;&gt;Horner&#39;s method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&#34;&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance&#34;&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&#34;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root&#34;&gt;Square Root&lt;/a&gt; - Newton&#39;s method&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui&#34;&gt;Liu Hui π Algorithm&lt;/a&gt; - approximate π calculations based on N-gons&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&#34;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product&#34;&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates&#34;&gt;Fisher–Yates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&#34;&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise and backtracking solutions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&#34;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&#34;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&#34;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&#34;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&#34;&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&#34;&gt;Knapsack Problem&lt;/a&gt; - &#34;0/1&#34; and &#34;Unbound&#34; ones&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&#34;&gt;Maximum Subarray&lt;/a&gt; - &#34;Brute Force&#34; and &#34;Dynamic Programming&#34; (Kadane&#39;s) versions&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&#34;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance&#34;&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/palindrome&#34;&gt;Palindrome&lt;/a&gt; - check if the string is the same in reverse&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&#34;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt&#34;&gt;Knuth–Morris–Pratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm&#34;&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp&#34;&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&#34;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&#34;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&#34;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search&#34;&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&#34;&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search&#34;&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort&#34;&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort&#34;&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort&#34;&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort&#34;&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&#34;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&#34;&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort&#34;&gt;Shellsort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort&#34;&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort&#34;&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal&#34;&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal&#34;&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&#34;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search&#34;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&#34;&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search&#34;&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&#34;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&#34;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&#34;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&#34;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle&#34;&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&#34;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting&#34;&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points&#34;&gt;Articulation Points&lt;/a&gt; - Tarjan&#39;s algorithm (DFS based)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges&#34;&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path&#34;&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury&#39;s algorithm - Visit every edge exactly once&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&#34;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components&#34;&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju&#39;s algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&#34;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash&#34;&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher&#34;&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher&#34;&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher&#34;&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://github.com/trekhleb/nano-neuron&#34;&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn&#34;&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means&#34;&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&#34;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Statistics&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/statistics/weighted-random&#34;&gt;Weighted Random&lt;/a&gt; - select the random item from the list based on items&#39; weights&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Evolutionary algorithms&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://github.com/trekhleb/self-parking-car-evolution&#34;&gt;Genetic algorithm&lt;/a&gt; - example of how the genetic algorithm may be applied for training the self-parking cars&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&#34;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation&#34;&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&#34;&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal&#39;s Triangle based examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&#34;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&#34;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&#34;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&#34;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&#34;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; &#xA;&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search&#34;&gt;Linear Search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&#34;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&#34;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&#34;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman&#34;&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform&#34;&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&#34;&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra&#34;&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim&#34;&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal&#34;&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search&#34;&gt;Binary Search&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower&#34;&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle&#34;&gt;Pascal&#39;s Triangle&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm&#34;&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort&#34;&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort&#34;&gt;Quicksort&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search&#34;&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search&#34;&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix&#34;&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering&#34;&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks&#34;&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations&#34;&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations&#34;&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&#34;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci&#34;&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&#34;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces&#34;&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase&#34;&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving&#34;&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance&#34;&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence&#34;&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring&#34;&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence&#34;&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence&#34;&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem&#34;&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition&#34;&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray&#34;&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford&#34;&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall&#34;&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching&#34;&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate next solution you test if it satisfies all conditions, and only then continue generating subsequent solutions. Otherwise, backtrack, and go on a different path of finding a solution. Normally the DFS traversal of state-space is being used. &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game&#34;&gt;Jump Game&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths&#34;&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set&#34;&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle&#34;&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens&#34;&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour&#34;&gt;Knight&#39;s Tour&lt;/a&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum&#34;&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA; &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem, in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;How to use this repository&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm run lint&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test -- &#39;LinkedList&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;In case if linting or testing is failing try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules&#xA;npm i&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Also make sure that you&#39;re using a correct Node version (&lt;code&gt;&amp;gt;=14.16.0&lt;/code&gt;). If you&#39;re using &lt;a href=&#34;https://github.com/nvm-sh/nvm&#34;&gt;nvm&lt;/a&gt; for Node version management you may run &lt;code&gt;nvm use&lt;/code&gt; from the root folder of the project and the correct version will be picked up.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Then just simply run the following command to test if your playground code works as expected:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;npm test -- &#39;playground&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Useful Information&lt;/h2&gt; &#xA;&lt;h3&gt;References&lt;/h3&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8&#34;&gt;▶ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/p&gt; &#xA;&lt;h3&gt;Big O Notation&lt;/h3&gt; &#xA;&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below you may find most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png&#34; alt=&#34;Big O graphs&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;Source: &lt;a href=&#34;http://bigocheatsheet.com/&#34;&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Big O Notation&lt;/th&gt; &#xA;   &lt;th&gt;Type&lt;/th&gt; &#xA;   &lt;th&gt;Computations for 10 elements&lt;/th&gt; &#xA;   &lt;th&gt;Computations for 100 elements&lt;/th&gt; &#xA;   &lt;th&gt;Computations for 1000 elements&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Constant&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Logarithmic&lt;/td&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Linear&lt;/td&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;1000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;n log(n)&lt;/td&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td&gt;600&lt;/td&gt; &#xA;   &lt;td&gt;9000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Quadratic&lt;/td&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;10000&lt;/td&gt; &#xA;   &lt;td&gt;1000000&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Exponential&lt;/td&gt; &#xA;   &lt;td&gt;1024&lt;/td&gt; &#xA;   &lt;td&gt;1.26e+29&lt;/td&gt; &#xA;   &lt;td&gt;1.07e+301&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td&gt;Factorial&lt;/td&gt; &#xA;   &lt;td&gt;3628800&lt;/td&gt; &#xA;   &lt;td&gt;9.3e+157&lt;/td&gt; &#xA;   &lt;td&gt;4.02e+2567&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Data Structure&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Access&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Search&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Insertion&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Deletion&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;-&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;False positives are possible while searching&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Name&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Best&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Average&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Worst&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Memory&lt;/th&gt; &#xA;   &lt;th align=&#34;center&#34;&gt;Stable&lt;/th&gt; &#xA;   &lt;th align=&#34;left&#34;&gt;Comments&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;Quicksort is usually done in-place with O(log(n)) stack space&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;log(n)&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;depends on gap sequence&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;1&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;No&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + r&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;r - biggest number in array&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n * k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n * k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n * k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;n + k&lt;/td&gt; &#xA;   &lt;td align=&#34;center&#34;&gt;Yes&lt;/td&gt; &#xA;   &lt;td align=&#34;left&#34;&gt;k - length of longest key&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Project Backers&lt;/h2&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;You may support this project via ❤️️ &lt;a href=&#34;https://github.com/sponsors/trekhleb&#34;&gt;GitHub&lt;/a&gt; or ❤️️ &lt;a href=&#34;https://www.patreon.com/trekhleb&#34;&gt;Patreon&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md&#34;&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;∑ = 0&lt;/code&gt;&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;ℹ️ A few more &lt;a href=&#34;https://trekhleb.dev/projects/&#34;&gt;projects&lt;/a&gt; and &lt;a href=&#34;https://trekhleb.dev/blog/&#34;&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href=&#34;https://trekhleb.dev&#34;&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt; &#xA;&lt;/blockquote&gt;</summary>
  </entry>
  <entry>
    <title>ruanyf/weekly</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/ruanyf/weekly</id>
    <link href="https://github.com/ruanyf/weekly" rel="alternate"></link>
    <summary type="html">&lt;p&gt;科技爱好者周刊，每周五发布&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;科技爱好者周刊&lt;/h1&gt; &#xA;&lt;p&gt;记录每周值得分享的科技内容，周五发布。&lt;/p&gt; &#xA;&lt;p&gt;欢迎投稿，推荐或自荐文章/软件/资源，请&lt;a href=&#34;https://github.com/ruanyf/weekly/issues&#34;&gt;提交 issue&lt;/a&gt; 。&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;P.S. 讨论区的&lt;a href=&#34;https://github.com/ruanyf/weekly/issues/2356&#34;&gt;《谁在招人》&lt;/a&gt;，是一个免费的程序员招聘帖，提供大量就业信息，欢迎访问或发布工作/实习岗位。&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;h2&gt;如何搜索&lt;/h2&gt; &#xA;&lt;p&gt;周刊已经沉淀了大量内容，可以使用下面的几种方法进行搜索。&lt;/p&gt; &#xA;&lt;p&gt;1、使用 GitHub 自带的网页搜索。&lt;/p&gt; &#xA;&lt;p&gt;2、使用 &lt;a href=&#34;https://sourcegraph.com/github.com/ruanyf/weekly&#34;&gt;Sourcegraph.com&lt;/a&gt; 进行搜索。&lt;/p&gt; &#xA;&lt;p&gt;3、将这个仓库克隆到本地，然后在仓库目录使用下面的命令。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ grep -nri [搜索词] docs | cat --number&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;比如，搜索 CSS 相关内容。&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ grep -nri css docs | cat --number&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;2022&lt;/h2&gt; &#xA;&lt;p&gt;五月&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 208 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-208.md&#34;&gt;晋升制度的问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 207 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-207.md&#34;&gt;汽车行业的顶峰可能过去了&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 206 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-206.md&#34;&gt;如何走出失望和怀疑&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 205 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-205.md&#34;&gt;互联网风口过去了吗？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;四月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 204 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-204.md&#34;&gt;如何度过疫情、裁员、还有战争&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 203 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-203.md&#34;&gt;英国的名校签证，伯克利的计算机教育&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 202 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-202.md&#34;&gt;三个有启发的学习方法&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 201 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-201.md&#34;&gt;中国需要成立半导体部&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;三月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 200 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-200.md&#34;&gt;低期望，多尝试&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 199 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-199.md&#34;&gt;俄罗斯的 HTTPS 证书问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 198 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-198.md&#34;&gt;美国制造是否可能&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 197 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-197.md&#34;&gt;如果这个世界有快乐机&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;二月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 196 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-196.md&#34;&gt;掌机的未来&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 195 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-195.md&#34;&gt;你做过不在乎结果的项目吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 194 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-194.md&#34;&gt;悲观者正确，乐观者成功&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;一月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 193 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-193.md&#34;&gt;前端与后端，谁更难？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 192 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-192.md&#34;&gt;最大的机会来自新技术&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 191 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-191.md&#34;&gt;一个程序员的财务独立之路&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2021&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;十二月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 190 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-190.md&#34;&gt;产品化思维&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 189 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-189.md&#34;&gt;下一个内卷的行业&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 188 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-188.md&#34;&gt;音乐是反社交&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 187 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-187.md&#34;&gt;元宇宙会成功吗&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 186 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-186.md&#34;&gt;低纬度，高海拔，气候优势&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;十一月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 185 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-185.md&#34;&gt;美国宪法拍卖，一个区块链案例&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 184 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-184.md&#34;&gt;政府的存储需求有多大？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 183 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-183.md&#34;&gt;腾讯的员工退休福利&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 182 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-182.md&#34;&gt;新人优惠的风险&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;十月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 181 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-181.md&#34;&gt;移动支付应该怎么设计？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 180 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-180.md&#34;&gt;你想住在中国哪里？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 179 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-179.md&#34;&gt;AR 技术的打开方式&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 178 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-178.md&#34;&gt;家庭太阳能发电的春天&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;九月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 177 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-177.md&#34;&gt;iPad 的真正用途&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 176 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-176.md&#34;&gt;中国法院承认 GPL 吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 175 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-175.md&#34;&gt;知识广度 vs 知识深度&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 174 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-174.md&#34;&gt;全能程序员 vs 特长程序员&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;八月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 173 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-173.md&#34;&gt;网络收音机的设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 172 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-172.md&#34;&gt;我们会死于气候灾难吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 171 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-171.md&#34;&gt;云服务流量有多贵？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 170 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-170.md&#34;&gt;软件订阅制的胜利&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;七月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 169 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-169.md&#34;&gt;五菱汽车的产品设计&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 168 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-168.md&#34;&gt;游戏《底特律：变人》&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 167 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-167.md&#34;&gt;广告拦截器太过分了&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 166 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-166.md&#34;&gt;视频学习胜过读书吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 165 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-165.md&#34;&gt;全端 App 的时代&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;六月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 164 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-164.md&#34;&gt;培训班 vs 大学，求职成功率比较&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 163 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-163.md&#34;&gt;你的城市有多少张病床？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 162 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-162.md&#34;&gt;生活就像《吃豆人》游戏&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 161 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-161.md&#34;&gt;再见了，学术硕士&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;五月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 160 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-160.md&#34;&gt;中年码农的危机&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 159 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-159.md&#34;&gt;游戏开发者的年薪&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 158 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-158.md&#34;&gt;内容渠道的贬值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 157 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-157.md&#34;&gt;KK 给年轻人的建议&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;四月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 156 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-156.md&#34;&gt;显卡缺货与异业竞争&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 155 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-155.md&#34;&gt;数字货币是打破美元霸权的武器吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 154 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-154.md&#34;&gt;1982年的信息社会预言&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 153 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-153.md&#34;&gt;机器翻译是对译者的侮辱吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 152 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-152.md&#34;&gt;从北大到技校&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;三月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 151 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-151.md&#34;&gt;NFT 是什么，听说能赚钱&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 150 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-150.md&#34;&gt;当音乐还是稀缺的时候&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 149 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-149.md&#34;&gt;新能源汽车，谁会是赢家？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 148 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-148.md&#34;&gt;微增长时代&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;二月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 147 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-147.md&#34;&gt;寻找你愿意忍受的痛苦&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 146 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-146.md&#34;&gt;网课应该怎么上？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 145 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-145.md&#34;&gt;大家不出门，经济怎么办？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;一月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 144 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-144.md&#34;&gt;提高收入的根本途径&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 143 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-143.md&#34;&gt;世界尽头与冷酷仙境&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 142 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-142.md&#34;&gt;2020年才是21世纪元年&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 141 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-141.md&#34;&gt;封闭系统的胜利&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2020&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;十二月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 140 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-140.md&#34;&gt;印度人的工资是多少？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 139 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-139.md&#34;&gt;生物学的可怕进展&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 138 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-138.md&#34;&gt;失业难以避免，重构人生规划&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 137 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-137.md&#34;&gt;Slack 被收购，以及企业的技术选型&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 136 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-136.md&#34;&gt;利特伍德奇迹定律&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;十一月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 135 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-135.md&#34;&gt;什么行业适合创业？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 134 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-134.md&#34;&gt;未来的游戏业比现在大100倍&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 133 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-133.md&#34;&gt;贵州变瑞士，有没有可能？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 132 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-132.md&#34;&gt;快能力和慢能力&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;十月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 131 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-131.md&#34;&gt;你的头脑是二值逻辑，还是三值逻辑？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 130 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-130.md&#34;&gt;低龄化的互联网&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 129 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-129.md&#34;&gt;创业的凸函数与凹函数&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 128 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-128.md&#34;&gt;这个社会是否正在变成“赛博朋克”？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;九月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 127 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-127.md&#34;&gt;未来人人开发软件，几乎没人编码&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 126 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-126.md&#34;&gt;内卷化是什么？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 125 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-125.md&#34;&gt;数字人民币要取代谁&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 124 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-124.md&#34;&gt;华为如何考核员工&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 123 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-123.md&#34;&gt;互联网公司与湘军的军制&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;八月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 122 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-122.md&#34;&gt;谈谈互联网公司的高估值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 121 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-121.md&#34;&gt;为什么人类没有越来越闲？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 120 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-120.md&#34;&gt;只有开放才能打败封锁&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 119 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-119.md&#34;&gt;降雨量和保险博弈&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;七月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 118 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-118.md&#34;&gt;高考志愿怎么填&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 117 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-117.md&#34;&gt;我不想让你记住我的脸&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 116 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-116.md&#34;&gt;世界的未来就是一个火药桶&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 115 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-115.md&#34;&gt;保护你的 DNA，不要泄漏&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 114 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-114.md&#34;&gt;U 盘化生存和 Uber-job&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;六月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 113 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-113.md&#34;&gt;暴力犯罪为什么越来越少？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 112 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-112.md&#34;&gt;如何培养领导力&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 111 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-111.md&#34;&gt;智能电视的误区&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 110 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-110.md&#34;&gt;如果不能去美国上市&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;五月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 109 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-109.md&#34;&gt;播客的价值&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 108 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-108.md&#34;&gt;阵地战与奇袭战&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 107 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-107.md&#34;&gt;致富与杠杆&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 106 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-106.md&#34;&gt;数字游民&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;四月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 105 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-105.md&#34;&gt;线上行业会赢&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 104 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-104.md&#34;&gt;语音合成的用途&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 103 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-103.md&#34;&gt;信息的半衰期&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 102 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-102.md&#34;&gt;工作热情从何而来？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 101 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-101.md&#34;&gt;互联网不再稀缺&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;三月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 100 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-100.md&#34;&gt;零利率时代&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 99 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-99.md&#34;&gt;疫情导致的研究生扩招&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 98 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-98.md&#34;&gt;怎样清晰地表达自己的观点？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 97 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-97.md&#34;&gt;那些为了考试拼搏的年轻人&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;二月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 96 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-96.md&#34;&gt;在线教育不等于录制视频&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 95 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-95.md&#34;&gt;远程办公暴露冗余岗位&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 94 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-94.md&#34;&gt;既懂得制造，又懂得销售&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 93 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-93.md&#34;&gt;漫游类的游戏，将会越来越多&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;一月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 92 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-92.md&#34;&gt;听觉暂留&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 91 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-91.md&#34;&gt;印度孟买的房价，为什么跟北京一样高？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 90 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-90.md&#34;&gt;管人和技术是两种不同的能力&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 89 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-89.md&#34;&gt;不下雨的地方，不要去卖伞&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2019&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;十二月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 88 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-88.md&#34;&gt;如果你遇到一条蛇&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 87 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-87.md&#34;&gt;新人要为团队写文档&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 86 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-86.md&#34;&gt;千万不要当完美主义者&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 85 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-85.md&#34;&gt;美国为什么不是乱哄哄？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;十一月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 84 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-84.md&#34;&gt;一次性工作招聘，用完你就丢&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 83 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-83.md&#34;&gt;技术解决不了人类的对立&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 82 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-82.md&#34;&gt;就业要选发展最快的行业&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 81 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-81.md&#34;&gt;子辈能大幅超越父辈吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 80 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-80.md&#34;&gt;企业软件创业，为什么在中国不容易成功？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;十月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 79 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-79.md&#34;&gt;我们的生活越来越依赖机器&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 78 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-78.md&#34;&gt;下一个风口是什么行业？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 77 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-77.md&#34;&gt;韩剧《阿尔布拉罕宫的回忆》&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 76 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-76.md&#34;&gt;任何爱好都能变成职业，只要你会拍视频&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;九月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 75 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-75.md&#34;&gt;电子取代机械，对就业有何影响？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 74 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-74.md&#34;&gt;信息的商业模式为什么不是收费&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 73 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-73.md&#34;&gt;数据统计的威力&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 72 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-72.md&#34;&gt;当代人不再有手稿&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;八月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 71 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-71.md&#34;&gt;名校毕业，不容易创业&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 70 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-70.md&#34;&gt;世界进入负利率时代，这意味什么&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 69 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-69.md&#34;&gt;做得好 vs 做得快&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 68 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-68.md&#34;&gt;关注能力的成长，胜于关注待遇&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 67 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-67.md&#34;&gt;复杂系统无法维护，侏罗纪公园必定失败&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;七月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 66 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-66.md&#34;&gt;创业不是零和游戏&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 65 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-65.md&#34;&gt;周刊开设“谁在招人”的招聘服务&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 64 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-64.md&#34;&gt;新人如何进入互联网行业？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 63 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-63.md&#34;&gt;互联网市场的集中化趋势&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;六月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 62 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-62.md&#34;&gt;日本电影《编舟记》&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 61 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-61.md&#34;&gt;转行前端越来越难&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 60 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-60.md&#34;&gt;一本介绍人类起源的学术自传&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 59 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-59.md&#34;&gt;互联网时代很难交朋友&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;五月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 58 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-58.md&#34;&gt;软件推广可以像化妆品那样吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 57 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-57.md&#34;&gt;分享知识是否违反人性？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 56 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-56.md&#34;&gt;文科生为什么不容易就业？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 55 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-55.md&#34;&gt;不是反对 996，而要提倡远程办公&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 54 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-54.md&#34;&gt;可扩展性最好的活动&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;四月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 53 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-53.md&#34;&gt;DNA 相亲会&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 52 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-52.md&#34;&gt;人脸识别与课堂监控&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 51 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-51.md&#34;&gt;为什么过去10年，笔记本硬件发展缓慢？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 50 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-50.md&#34;&gt;&#34;时间换收入&#34;是一个陷阱&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;三月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 49 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-49.md&#34;&gt;学会有所不为&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 48 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-48.md&#34;&gt;著名程序员 Bill Joy 的人生启示&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 47 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-47.md&#34;&gt;吃播算不算正式工作？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 46 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-46.md&#34;&gt;推荐算法的副作用&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 45 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-45.md&#34;&gt;阿西莫夫回忆录《人生舞台》&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;二月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 44 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-44.md&#34;&gt;高校“唯论文”导向的后果&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 43 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-43.md&#34;&gt;一篇好玩的论文&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 42 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-42.md&#34;&gt;什么领域，你可以做到出类拔萃？&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;一月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 41 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-41.md&#34;&gt;如何看待互联网公司裁员？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 40 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-40.md&#34;&gt;手动咖啡不属于电子时代&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 39 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-39.md&#34;&gt;苹果公司的两封公开信&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 38 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-38.md&#34;&gt;使用越方便，技术实现越复杂&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;2018&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;十二月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 37 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-37.md&#34;&gt;小说家的时代，永远地过去了&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 36 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-36.md&#34;&gt;程序员将来会不会过剩？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 35 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-35.md&#34;&gt;“一人份”的服务越来越多&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 34 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-34.md&#34;&gt;身份证的最终解决方案：人体植入芯片&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;十一月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 33 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-33.md&#34;&gt;现场投票不如网络投票&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 32 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-32.md&#34;&gt;砌砖头的三种角度&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 31 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-31.md&#34;&gt;程序员的退休信号&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 30 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-30.md&#34;&gt;为什么谷歌做不好社交软件？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 29 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-29.md&#34;&gt;公司的组织架构，决定了软件的复杂性&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;十月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 28 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-28.md&#34;&gt;软件开发是真正的知识吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 27 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-27.md&#34;&gt;乔布斯的“热情假设”对不对？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 26 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-26.md&#34;&gt;DHH 的新书《工作何必疯狂》&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 25 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-25.md&#34;&gt;安卓手机十周年的感想&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;九月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 24 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-24.md&#34;&gt;新人进入软件行业的建议&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 23 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-23.md&#34;&gt;统计学上的人生最大决定因素&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 22 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-22.md&#34;&gt;猴子自拍，版权归谁&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 21 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-21.md&#34;&gt;人生的水平运动和垂直运动&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;八月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 20 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-20.md&#34;&gt;不读大学的替代方案&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 19 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-19.md&#34;&gt;电影《头号玩家》描绘未来的虚拟世界&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 18 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-18.md&#34;&gt;无人机攻击，难以防范&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 17 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-17.md&#34;&gt;全球变暖，在劫难逃&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 16 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-16.md&#34;&gt;科技改变死亡的模式&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;七月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 15 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-15.md&#34;&gt;周刊的内容从何而来？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 14 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-14.md&#34;&gt;马斯克的人生才是梦想家的人生&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 13 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-13.md&#34;&gt;周刊为什么只谈技术？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 12 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-12.md&#34;&gt;人口老龄化，养老金不够&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;六月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 11 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-11.md&#34;&gt;编程语言越发复杂&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 10 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-10.md&#34;&gt;30岁以后谨慎转行前端&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 9 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-9.md&#34;&gt;身份证可以植入人体&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 8 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-8.md&#34;&gt;实验室会生产人吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 7 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-7.md&#34;&gt;垃圾填埋不是解决办法&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;五月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 6 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-6.md&#34;&gt;未来还需要苦学外语吗？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 5 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-5.md&#34;&gt;互联网时代，做一个好人是划算的&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 4 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-4.md&#34;&gt;马克思研究的问题&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 3 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-3.md&#34;&gt;周刊的风格&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;四月&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;第 2 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-2.md&#34;&gt;为什么写周刊？&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;第 1 期：&lt;a href=&#34;https://raw.githubusercontent.com/ruanyf/weekly/master/docs/issue-1.md&#34;&gt;创刊号&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt;</summary>
  </entry>
  <entry>
    <title>sudheerj/reactjs-interview-questions</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/sudheerj/reactjs-interview-questions</id>
    <link href="https://github.com/sudheerj/reactjs-interview-questions" rel="alternate"></link>
    <summary type="html">&lt;p&gt;List of top 500 ReactJS Interview Questions &amp; Answers....Coding exercise questions are coming soon!!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;React Interview Questions &amp;amp; Answers&lt;/h1&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Click &lt;span&gt;⭐&lt;/span&gt;if you like the project. Pull Request are highly appreciated. Follow me &lt;a href=&#34;https://twitter.com/SudheerJonna&#34;&gt;@SudheerJonna&lt;/a&gt; for technical updates.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;hr&gt; &#xA;&lt;div&gt;&#xA;  Learn to code and get hired with &#xA; &lt;a href=&#34;https://zerotomastery.io/?utm_source=github&amp;amp;utm_medium=sponsor&amp;amp;utm_campaign=reactjs-interview-questions&#34;&gt;Zero To Mastery:&lt;/a&gt; &#xA; &lt;ol&gt; &#xA;  &lt;li&gt;This &lt;a href=&#34;https://links.zerotomastery.io/react_sudheer&#34;&gt;React course&lt;/a&gt; is good if you’re struggling to learn React beyond the basics&lt;/li&gt; &#xA;  &lt;li&gt;This &lt;a href=&#34;http://links.zerotomastery.io/mci_sudheer&#34;&gt;coding interview bootcamp&lt;/a&gt; is helpful if you’re serious about getting hired as a developer&lt;/li&gt; &#xA; &lt;/ol&gt; &#xA;&lt;/div&gt; &#xA;&lt;hr&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This repository is specific to ReactJS. Please check &lt;a href=&#34;https://github.com/sudheerj/javascript-interview-questions&#34;&gt;Javascript Interview questions&lt;/a&gt; for core javascript questions.&lt;/p&gt; &#xA;&lt;h2&gt;Downloading PDF/Epub formats&lt;/h2&gt; &#xA;&lt;p&gt;You can download the PDF and Epub version of this repository from the latest run on the &lt;a href=&#34;https://github.com/sudheerj/reactjs-interview-questions/actions&#34;&gt;actions tab&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Table of Contents&lt;/h3&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;No.&lt;/th&gt; &#xA;   &lt;th&gt;Questions&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Core React&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;1&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react&#34;&gt;What is React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;2&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-major-features-of-react&#34;&gt;What are the major features of React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;3&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jsx&#34;&gt;What is JSX?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;4&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-element-and-component&#34;&gt;What is the difference between Element and Component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;5&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-components-in-react&#34;&gt;How to create components in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;6&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-to-use-a-class-component-over-a-function-component&#34;&gt;When to use a Class Component over a Function Component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;7&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-pure-components&#34;&gt;What are Pure Components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;8&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-state-in-react&#34;&gt;What is state in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;9&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-props-in-react&#34;&gt;What are props in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;10&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-state-and-props&#34;&gt;What is the difference between state and props?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;11&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-we-not-update-the-state-directly&#34;&gt;Why should we not update the state directly?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;12&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-callback-function-as-an-argument-of-setstate&#34;&gt;What is the purpose of callback function as an argument of setState()?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;13&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-html-and-react-event-handling&#34;&gt;What is the difference between HTML and React event handling?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;14&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-bind-methods-or-event-handlers-in-jsx-callbacks&#34;&gt;How to bind methods or event handlers in JSX callbacks?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;15&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-a-parameter-to-an-event-handler-or-callback&#34;&gt;How to pass a parameter to an event handler or callback?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;16&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-synthetic-events-in-react&#34;&gt;What are synthetic events in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;17&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-inline-conditional-expressions&#34;&gt;What are inline conditional expressions?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;18&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-key-prop-and-what-is-the-benefit-of-using-it-in-arrays-of-elements&#34;&gt;What is &#34;key&#34; prop and what is the benefit of using it in arrays of elements?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;19&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-refs&#34;&gt;What is the use of refs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;20&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-refs&#34;&gt;How to create refs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;21&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-forward-refs&#34;&gt;What are forward refs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;22&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#which-is-preferred-option-with-in-callback-refs-and-finddomnode&#34;&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;23&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-string-refs-legacy&#34;&gt;Why are String Refs legacy?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;24&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-virtual-dom&#34;&gt;What is Virtual DOM?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;25&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-virtual-dom-works&#34;&gt;How Virtual DOM works?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;26&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-shadow-dom-and-virtual-dom&#34;&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;27&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-fiber&#34;&gt;What is React Fiber?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;28&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-goal-of-react-fiber&#34;&gt;What is the main goal of React Fiber?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;29&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-controlled-components&#34;&gt;What are controlled components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;30&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-uncontrolled-components&#34;&gt;What are uncontrolled components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;31&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-createelement-and-cloneelement&#34;&gt;What is the difference between createElement and cloneElement?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;32&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-lifting-state-up-in-react&#34;&gt;What is Lifting State Up in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;33&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-phases-of-component-lifecycle&#34;&gt;What are the different phases of component lifecycle?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;34&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-of-react&#34;&gt;What are the lifecycle methods of React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;35&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-higher-order-components&#34;&gt;What are Higher-Order components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;36&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-props-proxy-for-hoc-component&#34;&gt;How to create props proxy for HOC component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;37&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-context&#34;&gt;What is context?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;38&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-children-prop&#34;&gt;What is children prop?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;39&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-write-comments-in-react&#34;&gt;How to write comments in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;40&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-using-super-constructor-with-props-argument&#34;&gt;What is the purpose of using super constructor with props argument?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;41&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reconciliation&#34;&gt;What is reconciliation?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;42&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-state-with-a-dynamic-key-name&#34;&gt;How to set state with a dynamic key name?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;43&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-would-be-the-common-mistake-of-function-being-called-every-time-the-component-renders&#34;&gt;What would be the common mistake of function being called every time the component renders?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;44&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-lazy-function-supports-named-exports&#34;&gt;Is lazy function supports named exports?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;45&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-uses-classname-over-class-attribute&#34;&gt;Why React uses className over class attribute?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;46&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-fragments&#34;&gt;What are fragments?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;47&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-fragments-are-better-than-container-divs&#34;&gt;Why fragments are better than container divs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;48&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-portals-in-react&#34;&gt;What are portals in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;49&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateless-components&#34;&gt;What are stateless components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;50&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-stateful-components&#34;&gt;What are stateful components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;51&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-apply-validation-on-props-in-react&#34;&gt;How to apply validation on props in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;52&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react&#34;&gt;What are the advantages of React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;53&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-of-react&#34;&gt;What are the limitations of React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;54&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-error-boundaries-in-react-v16&#34;&gt;What are error boundaries in React v16&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;55&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-error-boundaries-handled-in-react-v15&#34;&gt;How error boundaries handled in React v15?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;56&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-recommended-ways-for-static-type-checking&#34;&gt;What are the recommended ways for static type checking?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;57&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-react-dom-package&#34;&gt;What is the use of react-dom package?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;58&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-render-method-of-react-dom&#34;&gt;What is the purpose of render method of react-dom?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;59&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reactdomserver&#34;&gt;What is ReactDOMServer?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;60&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-innerhtml-in-react&#34;&gt;How to use InnerHtml in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;61&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-styles-in-react&#34;&gt;How to use styles in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;62&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-events-are-different-in-react&#34;&gt;How events are different in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;63&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-setstate-in-constructor&#34;&gt;What will happen if you use setState in constructor?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-impact-of-indexes-as-keys&#34;&gt;What is the impact of indexes as keys?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;65&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-setstate-in-componentwillmount-method&#34;&gt;Is it good to use setState() in componentWillMount() method?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;66&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-will-happen-if-you-use-props-in-initial-state&#34;&gt;What will happen if you use props in initial state?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;67&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-conditionally-render-components&#34;&gt;How do you conditionally render components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;68&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-be-careful-when-spreading-props-on-dom-elements&#34;&gt;Why we need to be careful when spreading props on DOM elements??&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;69&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-use-decorators-in-react&#34;&gt;How you use decorators in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;70&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-memoize-a-component&#34;&gt;How do you memoize a component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;71&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-you-implement-server-side-rendering-or-ssr&#34;&gt;How you implement Server-Side Rendering or SSR?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;72&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-enable-production-mode-in-react&#34;&gt;How to enable production mode in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;73&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-cra-and-its-benefits&#34;&gt;What is CRA and its benefits?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;74&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-lifecycle-methods-order-in-mounting&#34;&gt;What is the lifecycle methods order in mounting?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;75&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-lifecycle-methods-going-to-be-deprecated-in-react-v16&#34;&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;76&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromprops-lifecycle-method&#34;&gt;What is the purpose of getDerivedStateFromProps() lifecycle method?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;77&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getsnapshotbeforeupdate-lifecycle-method&#34;&gt;What is the purpose of getSnapshotBeforeUpdate() lifecycle method?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;78&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-hooks-replace-render-props-and-higher-order-components&#34;&gt;Do Hooks replace render props and higher order components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;79&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-way-for-naming-components&#34;&gt;What is the recommended way for naming components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;80&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-ordering-of-methods-in-component-class&#34;&gt;What is the recommended ordering of methods in component class?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;81&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-switching-component&#34;&gt;What is a switching component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;82&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-we-need-to-pass-a-function-to-setstate&#34;&gt;Why we need to pass a function to setState()?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;83&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-strict-mode-in-react&#34;&gt;What is strict mode in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;84&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-mixins&#34;&gt;What are React Mixins?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;85&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-ismounted-an-anti-pattern-and-what-is-the-proper-solution&#34;&gt;Why is isMounted() an anti-pattern and what is the proper solution?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;86&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-pointer-events-supported-in-react&#34;&gt;What are the Pointer Events supported in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;87&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-component-names-start-with-capital-letter&#34;&gt;Why should component names start with capital letter?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;88&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-custom-dom-attributes-supported-in-react-v16&#34;&gt;Are custom DOM attributes supported in React v16?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;89&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-constructor-and-getinitialstate&#34;&gt;What is the difference between constructor and getInitialState?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;90&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-force-a-component-to-re-render-without-calling-setstate&#34;&gt;Can you force a component to re-render without calling setState?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;91&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-super-and-superprops-in-react-using-es6-classes&#34;&gt;What is the difference between super() and super(props) in React using ES6 classes?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;92&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-loop-inside-jsx&#34;&gt;How to loop inside JSX?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;93&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-props-in-attribute-quotes&#34;&gt;How do you access props in attribute quotes?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;94&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-proptype-array-with-shape&#34;&gt;What is React PropType array with shape?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;95&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-conditionally-apply-class-attributes&#34;&gt;How to conditionally apply class attributes?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;96&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-reactdom&#34;&gt;What is the difference between React and ReactDOM?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;97&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-reactdom-is-separated-from-react&#34;&gt;Why ReactDOM is separated from React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;98&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-react-label-element&#34;&gt;How to use React label element?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;99&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-combine-multiple-inline-style-objects&#34;&gt;How to combine multiple inline style objects?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;100&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-re-render-the-view-when-the-browser-is-resized&#34;&gt;How to re-render the view when the browser is resized?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;101&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-setstate-and-replacestate-methods&#34;&gt;What is the difference between setState and replaceState methods?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;102&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-listen-to-state-changes&#34;&gt;How to listen to state changes?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;103&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-recommended-approach-of-removing-an-array-element-in-react-state&#34;&gt;What is the recommended approach of removing an array element in react state?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;104&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-rendering-html&#34;&gt;Is it possible to use React without rendering HTML?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;105&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pretty-print-json-with-react&#34;&gt;How to pretty print JSON with React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;106&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-cant-update-props-in-react&#34;&gt;Why you can&#39;t update props in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;107&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-focus-an-input-element-on-page-load&#34;&gt;How to focus an input element on page load?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;108&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-ways-of-updating-objects-in-state&#34;&gt;What are the possible ways of updating objects in state?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;110&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-can-we-find-the-version-of-react-at-runtime-in-the-browser&#34;&gt;How can we find the version of React at runtime in the browser?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;111&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-approaches-to-include-polyfills-in-your-create-react-app&#34;&gt;What are the approaches to include polyfills in your create-react-app?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;112&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-https-instead-of-http-in-create-react-app&#34;&gt;How to use https instead of http in create-react-app?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;113&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-avoid-using-relative-path-imports-in-create-react-app&#34;&gt;How to avoid using relative path imports in create-react-app?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;114&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-google-analytics-for-react-router&#34;&gt;How to add Google Analytics for react-router?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;115&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-update-a-component-every-second&#34;&gt;How to update a component every second?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;116&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-apply-vendor-prefixes-to-inline-styles-in-react&#34;&gt;How do you apply vendor prefixes to inline styles in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;117&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-import-and-export-components-using-react-and-es6&#34;&gt;How to import and export components using react and ES6?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;118&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-exceptions-on-react-component-naming&#34;&gt;What are the exceptions on React component naming?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;119&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-a-component-constructor-called-only-once&#34;&gt;Why is a component constructor called only once?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;120&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-define-constants-in-react&#34;&gt;How to define constants in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;121&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-programmatically-trigger-click-event-in-react&#34;&gt;How to programmatically trigger click event in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;122&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-asyncawait-in-plain-react&#34;&gt;Is it possible to use async/await in plain React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;123&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-common-folder-structures-for-react&#34;&gt;What are the common folder structures for React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;124&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-packages-for-animation&#34;&gt;What are the popular packages for animation?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;125&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-styles-modules&#34;&gt;What is the benefit of styles modules?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;126&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-popular-react-specific-linters&#34;&gt;What are the popular React-specific linters?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;127&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-call-and-in-which-component-lifecycle-methods-should-i-make-an-ajax-call&#34;&gt;How to make AJAX call and In which component lifecycle methods should I make an AJAX call?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;128&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-render-props&#34;&gt;What are render props?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;React Router&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;129&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-router&#34;&gt;What is React Router?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;130&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-router-is-different-from-history-library&#34;&gt;How React Router is different from history library?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;131&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-router-components-of-react-router-v4&#34;&gt;What are the &amp;lt;Router&amp;gt; components of React Router v4?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;132&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-push-and-replace-methods-of-history&#34;&gt;What is the purpose of push and replace methods of history?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;133&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-programmatically-navigate-using-react-router-v4&#34;&gt;How do you programmatically navigate using React router v4?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;134&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-query-parameters-in-react-router-v4&#34;&gt;How to get query parameters in React Router v4&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;135&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-you-get-router-may-have-only-one-child-element-warning&#34;&gt;Why you get &#34;Router may have only one child element&#34; warning?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;136&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-params-to-historypush-method-in-react-router-v4&#34;&gt;How to pass params to history.push method in React Router v4?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;137&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-implement-default-or-notfound-page&#34;&gt;How to implement default or NotFound page?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;138&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-get-history-on-react-router-v4&#34;&gt;How to get history on React Router v4?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;139&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-perform-automatic-redirect-after-login&#34;&gt;How to perform automatic redirect after login?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;React Internationalization&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;140&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-intl&#34;&gt;What is React-Intl?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;141&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-react-intl&#34;&gt;What are the main features of React Intl?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;142&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-two-ways-of-formatting-in-react-intl&#34;&gt;What are the two ways of formatting in React Intl?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;143&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-formattedmessage-as-placeholder-using-react-intl&#34;&gt;How to use FormattedMessage as placeholder using React Intl?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;144&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-current-locale-with-react-intl&#34;&gt;How to access current locale with React Intl&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;145&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-format-date-using-react-intl&#34;&gt;How to format date using React Intl?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;React Testing&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;146&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-shallow-renderer-in-react-testing&#34;&gt;What is Shallow Renderer in React testing?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;147&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-testrenderer-package-in-react&#34;&gt;What is TestRenderer package in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;148&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-reacttestutils-package&#34;&gt;What is the purpose of ReactTestUtils package?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;149&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-jest&#34;&gt;What is Jest?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;150&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-jest-over-jasmine&#34;&gt;What are the advantages of Jest over Jasmine?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;151&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-a-simple-example-of-jest-test-case&#34;&gt;Give a simple example of Jest test case&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;React Redux&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;152&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flux&#34;&gt;What is Flux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;153&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux&#34;&gt;What is Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;154&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-core-principles-of-redux&#34;&gt;What are the core principles of Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;155&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-downsides-of-redux-compared-to-flux&#34;&gt;What are the downsides of Redux compared to Flux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;156&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-mapstatetoprops-and-mapdispatchtoprops&#34;&gt;What is the difference between mapStateToProps() and mapDispatchToProps()?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;157&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-dispatch-an-action-in-reducer&#34;&gt;Can I dispatch an action in reducer?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;158&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-access-redux-store-outside-a-component&#34;&gt;How to access Redux store outside a component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;159&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-drawbacks-of-mvw-pattern&#34;&gt;What are the drawbacks of MVW pattern&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;160&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#are-there-any-similarities-between-redux-and-rxjs&#34;&gt;Are there any similarities between Redux and RxJS?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;161&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-dispatch-an-action-on-load&#34;&gt;How to dispatch an action on load?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;162&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-connect-from-react-redux&#34;&gt;How to use connect from React Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;163&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-reset-state-in-redux&#34;&gt;How to reset state in Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;164&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#whats-the-purpose-of-at-symbol-in-the-redux-connect-decorator&#34;&gt;Whats the purpose of at symbol in the redux connect decorator?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;165&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-context-and-react-redux&#34;&gt;What is the difference between React context and React Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;166&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-redux-state-functions-called-reducers&#34;&gt;Why are Redux state functions called reducers?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;167&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-make-ajax-request-in-redux&#34;&gt;How to make AJAX request in Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;168&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-keep-all-components-state-in-redux-store&#34;&gt;Should I keep all component&#39;s state in Redux store?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;169&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-way-to-access-redux-store&#34;&gt;What is the proper way to access Redux store?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;170&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-component-and-container-in-react-redux&#34;&gt;What is the difference between component and container in React Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;171&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-the-constants-in-redux&#34;&gt;What is the purpose of the constants in Redux? &lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;172&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-different-ways-to-write-mapdispatchtoprops&#34;&gt;What are the different ways to write mapDispatchToProps()?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;173&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-use-of-the-ownprops-parameter-in-mapstatetoprops-and-mapdispatchtoprops&#34;&gt;What is the use of the ownProps parameter in mapStateToProps() and mapDispatchToProps()?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;174&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-structure-redux-top-level-directories&#34;&gt;How to structure Redux top level directories?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;175&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-saga&#34;&gt;What is redux-saga?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;176&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-mental-model-of-redux-saga&#34;&gt;What is the mental model of redux-saga?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;177&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-call-and-put-in-redux-saga&#34;&gt;What are the differences between call and put in redux-saga&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;178&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-thunk&#34;&gt;What is Redux Thunk?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;179&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-saga-and-redux-thunk&#34;&gt;What are the differences between redux-saga and redux-thunk&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;180&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-devtools&#34;&gt;What is Redux DevTools?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;181&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-redux-devtools&#34;&gt;What are the features of Redux DevTools?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;182&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-redux-selectors-and-why-to-use-them&#34;&gt;What are Redux selectors and Why to use them?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;183&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-redux-form&#34;&gt;What is Redux Form?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;184&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-redux-form&#34;&gt;What are the main features of Redux Form?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;185&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-multiple-middlewares-to-redux&#34;&gt;How to add multiple middlewares to Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;186&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-set-initial-state-in-redux&#34;&gt;How to set initial state in Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;187&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-relay-is-different-from-redux&#34;&gt;How Relay is different from Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;188&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-an-action-in-redux&#34;&gt;What is an action in Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;React Native&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;188&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-native-and-react&#34;&gt;What is the difference between React Native and React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;189&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-test-react-native-apps&#34;&gt;How to test React Native apps?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;190&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-do-logging-in-react-native&#34;&gt;How to do logging in React Native?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;191&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-your-react-native&#34;&gt;How to debug your React Native?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;React supported libraries and Integration&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;192&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-reselect-and-how-it-works&#34;&gt;What is reselect and how it works?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;193&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-flow&#34;&gt;What is Flow?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;194&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-flow-and-proptypes&#34;&gt;What is the difference between Flow and PropTypes?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;195&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-font-awesome-icons-in-react&#34;&gt;How to use font-awesome icons in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;196&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-dev-tools&#34;&gt;What is React Dev Tools?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;197&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-is-devtools-not-loading-in-chrome-for-local-files&#34;&gt;Why is DevTools not loading in Chrome for local files?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;198&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-polymer-in-react&#34;&gt;How to use Polymer in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;199&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-react-over-vuejs&#34;&gt;What are the advantages of React over Vue.js?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;200&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-react-and-angular&#34;&gt;What is the difference between React and Angular?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;201&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-react-tab-is-not-showing-up-in-devtools&#34;&gt;Why React tab is not showing up in DevTools?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;202&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-styled-components&#34;&gt;What are styled components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;203&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-styled-components&#34;&gt;Give an example of Styled Components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;204&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-relay&#34;&gt;What is Relay?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;205&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-typescript-in-create-react-app-application&#34;&gt;How to use TypeScript in create-react-app application?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;strong&gt;Miscellaneous&lt;/strong&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;206&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-main-features-of-reselect-library&#34;&gt;What are the main features of reselect library?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;207&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-of-reselect-usage&#34;&gt;Give an example of reselect usage?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;209&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-the-statics-object-work-with-es6-classes-in-react&#34;&gt;Does the statics object work with ES6 classes in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;210&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-redux-only-be-used-with-react&#34;&gt;Can Redux only be used with React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;211&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-you-need-to-have-a-particular-build-tool-to-use-redux&#34;&gt;Do you need to have a particular build tool to use Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;212&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-redux-form-initialvalues-get-updated-from-state&#34;&gt;How Redux Form initialValues get updated from state?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;213&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-react-proptypes-allow-different-types-for-one-prop&#34;&gt;How React PropTypes allow different type for one prop?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;214&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-import-an-svg-file-as-react-component&#34;&gt;Can I import an SVG file as react component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;215&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-are-inline-ref-callbacks-or-functions-not-recommended&#34;&gt;Why are inline ref callbacks or functions not recommended?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;216&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-render-hijacking-in-react&#34;&gt;What is render hijacking in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;217&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hoc-factory-implementations&#34;&gt;What are HOC factory implementations?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;218&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-pass-numbers-to-react-component&#34;&gt;How to pass numbers to React component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;219&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-keep-all-my-state-into-redux-should-i-ever-use-react-internal-state&#34;&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;220&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-registerserviceworker-in-react&#34;&gt;What is the purpose of registerServiceWorker in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;221&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-memo-function&#34;&gt;What is React memo function?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;222&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-lazy-function&#34;&gt;What is React lazy function?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;223&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-unnecessary-updates-using-setstate&#34;&gt;How to prevent unnecessary updates using setState?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;224&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-render-array-strings-and-numbers-in-react-16-version&#34;&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;225&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-use-class-field-declarations-syntax-in-react-classes&#34;&gt;How to use class field declarations syntax in React classes?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;226&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-hooks&#34;&gt;What are hooks?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;227&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-rules-need-to-be-followed-for-hooks&#34;&gt;What rules need to be followed for hooks?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;228&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-ensure-hooks-followed-the-rules-in-your-project&#34;&gt;How to ensure hooks followed the rules in your project?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;229&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-flux-and-redux&#34;&gt;What are the differences between Flux and Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;230&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-react-router-v4&#34;&gt;What are the benefits of React Router V4?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;231&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-describe-about-componentdidcatch-lifecycle-method-signature&#34;&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;232&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#in-which-scenarios-error-boundaries-do-not-catch-errors&#34;&gt;In which scenarios error boundaries do not catch errors?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;233&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-not-need-error-boundaries-for-event-handlers&#34;&gt;Why do you not need error boundaries for event handlers?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;234&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-try-catch-block-and-error-boundaries&#34;&gt;What is the difference between try catch block and error boundaries?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;235&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-behavior-of-uncaught-errors-in-react-16&#34;&gt;What is the behavior of uncaught errors in react 16?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;236&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-proper-placement-for-error-boundaries&#34;&gt;What is the proper placement for error boundaries?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;237&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-component-stack-trace-from-error-boundary&#34;&gt;What is the benefit of component stack trace from error boundary?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;238&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-required-method-to-be-defined-for-a-class-component&#34;&gt;What is the required method to be defined for a class component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;239&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-possible-return-types-of-render-method&#34;&gt;What are the possible return types of render method?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;240&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-main-purpose-of-constructor&#34;&gt;What is the main purpose of constructor?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;241&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-mandatory-to-define-constructor-for-react-component&#34;&gt;Is it mandatory to define constructor for React component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;242&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-default-props&#34;&gt;What are default props?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;243&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-should-not-call-setstate-in-componentwillunmount&#34;&gt;Why should not call setState in componentWillUnmount?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;244&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-getderivedstatefromerror&#34;&gt;What is the purpose of getDerivedStateFromError?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;245&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-methods-order-when-component-re-rendered&#34;&gt;What is the methods order when component re-rendered?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;246&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-methods-invoked-during-error-handling&#34;&gt;What are the methods invoked during error handling?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;247&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-displayname-class-property&#34;&gt;What is the purpose of displayName class property?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;248&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-browser-support-for-react-applications&#34;&gt;What is the browser support for react applications?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;249&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-unmountcomponentatnode-method&#34;&gt;What is the purpose of unmountComponentAtNode method?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;250&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-code-splitting&#34;&gt;What is code-splitting?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;251&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-benefit-of-strict-mode&#34;&gt;What is the benefit of strict mode?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;252&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-keyed-fragments&#34;&gt;What are Keyed Fragments?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;253&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#does-react-support-all-html-attributes&#34;&gt;Does React support all HTML attributes?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;254&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-limitations-with-hocs&#34;&gt;What are the limitations with HOCs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;255&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-debug-forwardrefs-in-devtools&#34;&gt;How to debug forwardRefs in DevTools?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;256&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-component-props-defaults-to-true&#34;&gt;When component props defaults to true?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;257&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-nextjs-and-major-features-of-it&#34;&gt;What is NextJS and major features of it?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;258&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-an-event-handler-to-a-component&#34;&gt;How do you pass an event handler to a component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;259&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-good-to-use-arrow-functions-in-render-methods&#34;&gt;Is it good to use arrow functions in render methods?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;260&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-a-function-from-being-called-multiple-times&#34;&gt;How to prevent a function from being called multiple times?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;261&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-jsx-prevents-injection-attacks&#34;&gt;How JSX prevents Injection Attacks?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;262&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-update-rendered-elements&#34;&gt;How do you update rendered elements?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;263&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-props-are-read-only&#34;&gt;How do you say that props are read only?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;264&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-say-that-state-updates-are-merged&#34;&gt;How do you say that state updates are merged?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;265&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-pass-arguments-to-an-event-handler&#34;&gt;How do you pass arguments to an event handler?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;266&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-prevent-component-from-rendering&#34;&gt;How to prevent component from rendering?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;267&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-conditions-to-safely-use-the-index-as-a-key&#34;&gt;What are the conditions to safely use the index as a key?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;268&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-keys-should-be-globally-unique&#34;&gt;Is it keys should be globally unique?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;269&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-popular-choice-for-form-handling&#34;&gt;What is the popular choice for form handling?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;270&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-advantages-of-formik-over-redux-form-library&#34;&gt;What are the advantages of formik over redux form library?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;271&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-not-required-to-use-inheritance&#34;&gt;Why do you not required to use inheritance?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;272&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-web-components-in-react-application&#34;&gt;Can I use web components in react application?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;273&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-dynamic-import&#34;&gt;What is dynamic import?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;274&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-loadable-components&#34;&gt;What are loadable components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;275&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-suspense-component&#34;&gt;What is suspense component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;276&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-route-based-code-splitting&#34;&gt;What is route based code splitting?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;277&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#give-an-example-on-how-to-use-context&#34;&gt;Give an example on How to use context?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;278&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-default-value-in-context&#34;&gt;What is the purpose of default value in context?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;279&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-use-contexttype&#34;&gt;How do you use contextType?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;280&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-a-consumer&#34;&gt;What is a consumer?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;281&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-solve-performance-corner-cases-while-using-context&#34;&gt;How do you solve performance corner cases while using context?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;282&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-forward-ref-in-hocs&#34;&gt;What is the purpose of forward ref in HOCs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;283&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-ref-argument-available-for-all-functions-or-class-components&#34;&gt;Is it ref argument available for all functions or class components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;284&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-you-need-additional-care-for-component-libraries-while-using-forward-refs&#34;&gt;Why do you need additional care for component libraries while using forward refs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;285&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-create-react-class-components-without-es6&#34;&gt;How to create react class components without ES6?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;286&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-possible-to-use-react-without-jsx&#34;&gt;Is it possible to use react without JSX?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;287&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-diffing-algorithm&#34;&gt;What is diffing algorithm?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;288&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-rules-covered-by-diffing-algorithm&#34;&gt;What are the rules covered by diffing algorithm?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;289&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#when-do-you-need-to-use-refs&#34;&gt;When do you need to use refs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;290&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-prop-must-be-named-as-render-for-render-props&#34;&gt;Is it prop must be named as render for render props?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;291&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-problems-of-using-render-props-with-pure-components&#34;&gt;What are the problems of using render props with pure components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;292&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-create-hoc-using-render-props&#34;&gt;How do you create HOC using render props?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;293&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-windowing-technique&#34;&gt;What is windowing technique?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;294&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-print-falsy-values-in-jsx&#34;&gt;How do you print falsy values in JSX?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;295&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-typical-use-case-of-portals&#34;&gt;What is the typical use case of portals?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;296&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-set-default-value-for-uncontrolled-component&#34;&gt;How do you set default value for uncontrolled component?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;297&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-your-favorite-react-stack&#34;&gt;What is your favorite React stack?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;298&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-real-dom-and-virtual-dom&#34;&gt;What is the difference between Real DOM and Virtual DOM?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;299&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-add-bootstrap-to-a-react-application&#34;&gt;How to add Bootstrap to a react application?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;300&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-you-list-down-top-websites-or-applications-using-react-as-front-end-framework&#34;&gt;Can you list down top websites or applications using react as front end framework?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;301&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-it-recommended-to-use-css-in-js-technique-in-react&#34;&gt;Is it recommended to use CSS In JS technique in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;302&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-i-need-to-rewrite-all-my-class-components-with-hooks&#34;&gt;Do I need to rewrite all my class components with hooks?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;303&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-to-fetch-data-with-react-hooks&#34;&gt;How to fetch data with React Hooks?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;304&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#is-hooks-cover-all-use-cases-for-classes&#34;&gt;Is Hooks cover all use cases for classes?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;305&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-stable-release-for-hooks-support&#34;&gt;What is the stable release for hooks support?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;306&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#why-do-we-use-array-destructuring-square-brackets-notation-in-usestate&#34;&gt;Why do we use array destructuring (square brackets notation) in useState?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;307&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-sources-used-for-introducing-hooks&#34;&gt;What are the sources used for introducing hooks?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;308&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-access-imperative-api-of-web-components&#34;&gt;How do you access imperative API of web components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;309&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-formik&#34;&gt;What is formik?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;310&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-typical-middleware-choices-for-handling-asynchronous-calls-in-redux&#34;&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;311&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#do-browsers-understand-jsx-code&#34;&gt;Do browsers understand JSX code?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;312&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#describe-about-data-flow-in-react&#34;&gt;Describe about data flow in react?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;313&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-react-scripts&#34;&gt;What is react scripts?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;314&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-features-of-create-react-app&#34;&gt;What are the features of create react app?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;315&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-rendertonodestream-method&#34;&gt;What is the purpose of renderToNodeStream method?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;316&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-mobx&#34;&gt;What is MobX?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;317&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-differences-between-redux-and-mobx&#34;&gt;What are the differences between Redux and MobX?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;318&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#should-i-learn-es6-before-learning-reactjs&#34;&gt;Should I learn ES6 before learning ReactJS?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;319&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-concurrent-rendering&#34;&gt;What is Concurrent Rendering?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;320&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-async-mode-and-concurrent-mode&#34;&gt;What is the difference between async mode and concurrent mode?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;321&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#can-i-use-javascript-urls-in-react169&#34;&gt;Can I use javascript urls in react16.9?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;322&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-purpose-of-eslint-plugin-for-hooks&#34;&gt;What is the purpose of eslint plugin for hooks?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;323&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-imperative-and-declarative-in-react&#34;&gt;What is the difference between Imperative and Declarative in React?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;324&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-using-typescript-with-reactjs&#34;&gt;What are the benefits of using typescript with reactjs?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;325&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-make-sure-that-user-remains-authenticated-on-page-refresh-while-using-context-api-state-management&#34;&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;326&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-the-benefits-of-new-jsx-transform&#34;&gt;What are the benefits of new JSX transform?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;327&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-does-new-jsx-transform-different-from-old-transform&#34;&gt;How does new JSX transform different from old transform?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;328&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#how-do-you-get-redux-scaffolding-using-create-react-app&#34;&gt;How do you get redux scaffolding using create-react-app?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;329&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-are-react-server-components&#34;&gt;What are React Server components?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;330&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-prop-drilling&#34;&gt;What is prop drilling?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;331&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-state-mutation-and-how-to-prevent-it&#34;&gt;What is state mutation and how to prevent it?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;332&lt;/td&gt; &#xA;   &lt;td&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#what-is-the-difference-between-usestate-and-useref-hook&#34;&gt;What is the difference between useState and useRef hook?&lt;/a&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Core React&lt;/h2&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is React?&lt;/h3&gt; &lt;p&gt;React is an &lt;strong&gt;open-source front-end JavaScript library&lt;/strong&gt; that is used for building user interfaces, especially for single-page applications. It is used for handling view layer for web and mobile apps. React was created by &lt;a href=&#34;https://github.com/jordwalke&#34;&gt;Jordan Walke&lt;/a&gt;, a software engineer working for Facebook. React was first deployed on Facebook&#39;s News Feed in 2011 and on Instagram in 2012.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the major features of React?&lt;/h3&gt; &lt;p&gt;The major features of React are:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;It uses &lt;strong&gt;VirtualDOM&lt;/strong&gt; instead of RealDOM considering that RealDOM manipulations are expensive.&lt;/li&gt; &#xA;   &lt;li&gt;Supports &lt;strong&gt;server-side rendering&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Follows &lt;strong&gt;Unidirectional&lt;/strong&gt; data flow or data binding.&lt;/li&gt; &#xA;   &lt;li&gt;Uses &lt;strong&gt;reusable/composable&lt;/strong&gt; UI components to develop the view.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is JSX?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;JSX&lt;/em&gt; is a XML-like syntax extension to ECMAScript (the acronym stands for &lt;em&gt;JavaScript XML&lt;/em&gt;). Basically it just provides syntactic sugar for the &lt;code&gt;React.createElement()&lt;/code&gt; function, giving us expressiveness of JavaScript along with HTML like template syntax.&lt;/p&gt; &lt;p&gt;In the example below text inside &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag is returned as JavaScript function to the render function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class App extends React.Component {&#xA;  render() {&#xA;    return(&#xA;      &amp;lt;div&amp;gt;&#xA;        &amp;lt;h1&amp;gt;{&#39;Welcome to React world!&#39;}&amp;lt;/h1&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between Element and Component?&lt;/h3&gt; &lt;p&gt;An &lt;em&gt;Element&lt;/em&gt; is a plain object describing what you want to appear on the screen in terms of the DOM nodes or other components. &lt;em&gt;Elements&lt;/em&gt; can contain other &lt;em&gt;Elements&lt;/em&gt; in their props. Creating a React element is cheap. Once an element is created, it is never mutated.&lt;/p&gt; &lt;p&gt;The object representation of React Element would be as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const element = React.createElement(&#xA;  &#39;div&#39;,&#xA;  {id: &#39;login-btn&#39;},&#xA;  &#39;Login&#39;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above &lt;code&gt;React.createElement()&lt;/code&gt; function returns an object:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{&#xA;  type: &#39;div&#39;,&#xA;  props: {&#xA;    children: &#39;Login&#39;,&#xA;    id: &#39;login-btn&#39;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And finally it renders to the DOM using &lt;code&gt;ReactDOM.render()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&#39;login-btn&#39;&amp;gt;Login&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas a &lt;strong&gt;component&lt;/strong&gt; can be declared in several different ways. It can be a class with a &lt;code&gt;render()&lt;/code&gt; method or it can be defined as a function. In either case, it takes props as an input, and returns a JSX tree as the output:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Button = ({ onLogin }) =&amp;gt;&#xA;  &amp;lt;div id={&#39;login-btn&#39;} onClick={onLogin}&amp;gt;Login&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then JSX gets transpiled to a &lt;code&gt;React.createElement()&lt;/code&gt; function tree:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const Button = ({ onLogin }) =&amp;gt; React.createElement(&#xA;  &#39;div&#39;,&#xA;  { id: &#39;login-btn&#39;, onClick: onLogin },&#xA;  &#39;Login&#39;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to create components in React?&lt;/h3&gt; &lt;p&gt;There are two possible ways to create a component.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function Components:&lt;/strong&gt; This is the simplest way to create a component. Those are pure JavaScript functions that accept props object as the first parameter and return React elements:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;function Greeting({ message }) {&#xA;  return &amp;lt;h1&amp;gt;{`Hello, ${message}`}&amp;lt;/h1&amp;gt;&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Class Components:&lt;/strong&gt; You can also use ES6 class to define a component. The above function component can be written as:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class Greeting extends React.Component {&#xA;  render() {&#xA;    return &amp;lt;h1&amp;gt;{`Hello, ${this.props.message}`}&amp;lt;/h1&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;When to use a Class Component over a Function Component?&lt;/h3&gt; &lt;p&gt;If the component needs &lt;em&gt;state or lifecycle methods&lt;/em&gt; then use class component otherwise use function component. &lt;em&gt;However, from React 16.8 with the addition of Hooks, you could use state , lifecycle methods and other features that were only available in class component right in your function component.&lt;/em&gt; *So, it is always recommended to use Function components, unless you need a React functionality whose Function component equivalent is not present yet, like Error Boundaries *&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are Pure Components?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;&lt;code&gt;React.PureComponent&lt;/code&gt;&lt;/em&gt; is exactly the same as &lt;em&gt;&lt;code&gt;React.Component&lt;/code&gt;&lt;/em&gt; except that it handles the &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; method for you. When props or state changes, &lt;em&gt;PureComponent&lt;/em&gt; will do a shallow comparison on both props and state. &lt;em&gt;Component&lt;/em&gt; on the other hand won&#39;t compare current props and state to next out of the box. Thus, the component will re-render by default whenever &lt;code&gt;shouldComponentUpdate&lt;/code&gt; is called.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is state in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;State&lt;/em&gt; of a component is an object that holds some information that may change over the lifetime of the component. We should always try to make our state as simple as possible and minimize the number of stateful components.&lt;/p&gt; &lt;p&gt;Let&#39;s create a user component with message state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class User extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;&#xA;    this.state = {&#xA;      message: &#39;Welcome to React world&#39;&#xA;    }&#xA;  }&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;div&amp;gt;&#xA;        &amp;lt;h1&amp;gt;{this.state.message}&amp;lt;/h1&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/state.jpg&#34; alt=&#34;state&#34;&gt;&lt;/p&gt; &lt;p&gt;State is similar to props, but it is private and fully controlled by the component ,i.e., it is not accessible to any other component till the owner component decides to pass it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are props in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Props&lt;/em&gt; are inputs to components. They are single values or objects containing a set of values that are passed to components on creation using a naming convention similar to HTML-tag attributes. They are data passed down from a parent component to a child component.&lt;/p&gt; &lt;p&gt;The primary purpose of props in React is to provide following component functionality:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Pass custom data to your component.&lt;/li&gt; &#xA;   &lt;li&gt;Trigger state changes.&lt;/li&gt; &#xA;   &lt;li&gt;Use via &lt;code&gt;this.props.reactProp&lt;/code&gt; inside component&#39;s &lt;code&gt;render()&lt;/code&gt; method.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;For example, let us create an element with &lt;code&gt;reactProp&lt;/code&gt; property:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;Element reactProp={&#39;1&#39;} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This &lt;code&gt;reactProp&lt;/code&gt; (or whatever you came up with) name then becomes a property attached to React&#39;s native props object which originally already exists on all components created using React library.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;props.reactProp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between state and props?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;props&lt;/em&gt; and &lt;em&gt;state&lt;/em&gt; are plain JavaScript objects. While both of them hold information that influences the output of render, they are different in their functionality with respect to component. Props get passed to the component similar to function parameters whereas state is managed within the component similar to variables declared within a function.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;11&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why should we not update the state directly?&lt;/h3&gt; &lt;p&gt;If you try to update the state directly then it won&#39;t re-render the component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//Wrong&#xA;this.state.message = &#39;Hello world&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead use &lt;code&gt;setState()&lt;/code&gt; method. It schedules an update to a component&#39;s state object. When state changes, the component responds by re-rendering.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//Correct&#xA;this.setState({ message: &#39;Hello World&#39; })&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can directly assign to the state object either in &lt;em&gt;constructor&lt;/em&gt; or using latest javascript&#39;s class field declaration syntax.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;12&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of callback function as an argument of &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;The callback function is invoked when setState finished and the component gets rendered. Since &lt;code&gt;setState()&lt;/code&gt; is &lt;strong&gt;asynchronous&lt;/strong&gt; the callback function is used for any post action.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is recommended to use lifecycle method rather than this callback function.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;setState({ name: &#39;John&#39; }, () =&amp;gt; console.log(&#39;The name has updated and component re-rendered&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;13&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between HTML and React event handling?&lt;/h3&gt; &lt;p&gt;Below are some of the main differences between HTML and React event handling,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;In HTML, the event name usually represents in &lt;em&gt;lowercase&lt;/em&gt; as a convention:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;button onclick=&#39;activateLasers()&#39;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React it follows &lt;em&gt;camelCase&lt;/em&gt; convention:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;button onClick={activateLasers}&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;In HTML, you can return &lt;code&gt;false&lt;/code&gt; to prevent default behavior:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&#39;#&#39; onclick=&#39;console.log(&#34;The link was clicked.&#34;); return false;&#39; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas in React you must call &lt;code&gt;preventDefault()&lt;/code&gt; explicitly:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function handleClick(event) {&#xA;  event.preventDefault()&#xA;  console.log(&#39;The link was clicked.&#39;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;In HTML, you need to invoke the function by appending &lt;code&gt;()&lt;/code&gt; Whereas in react you should not append &lt;code&gt;()&lt;/code&gt; with the function name. (refer &#34;activateLasers&#34; function in the first point for example)&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;14&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to bind methods or event handlers in JSX callbacks?&lt;/h3&gt; &lt;p&gt;There are 3 possible ways to achieve this:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Binding in Constructor:&lt;/strong&gt; In JavaScript classes, the methods are not bound by default. The same thing applies for React event handlers defined as class methods. Normally we bind them in constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Foo extends Component {&#xA;  constructor(props) {&#xA;    super(props);&#xA;    this.handleClick = this.handleClick.bind(this);&#xA;  }&#xA;  handleClick() {&#xA;    console.log(&#39;Click happened&#39;);&#xA;  }&#xA;  render() {&#xA;    return &amp;lt;button onClick={this.handleClick}&amp;gt;Click Me&amp;lt;/button&amp;gt;;&#xA;  }&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Public class fields syntax:&lt;/strong&gt; If you don&#39;t like to use bind approach then &lt;em&gt;public class fields syntax&lt;/em&gt; can be used to correctly bind callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;handleClick = () =&amp;gt; {&#xA;  console.log(&#39;this is:&#39;, this)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;&#xA;  {&#39;Click me&#39;}&#xA;&amp;lt;/button&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Arrow functions in callbacks:&lt;/strong&gt; You can use &lt;em&gt;arrow functions&lt;/em&gt; directly in the callbacks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;handleClick() {&#xA;    console.log(&#39;Click happened&#39;);&#xA;}&#xA;render() {&#xA;    return &amp;lt;button onClick={() =&amp;gt; this.handleClick()}&amp;gt;Click Me&amp;lt;/button&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If the callback is passed as prop to child components, those components might do an extra re-rendering. In those cases, it is preferred to go with &lt;code&gt;.bind()&lt;/code&gt; or &lt;em&gt;public class fields syntax&lt;/em&gt; approach considering performance.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;15&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to pass a parameter to an event handler or callback?&lt;/h3&gt; &lt;p&gt;You can use an &lt;em&gt;arrow function&lt;/em&gt; to wrap around an &lt;em&gt;event handler&lt;/em&gt; and pass parameters:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;button onClick={() =&amp;gt; this.handleClick(id)} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is an equivalent to calling &lt;code&gt;.bind&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;button onClick={this.handleClick.bind(this, id)} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Apart from these two approaches, you can also pass arguments to a function which is defined as arrow function&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;button onClick={this.handleClick(id)} /&amp;gt;&#xA;handleClick = (id) =&amp;gt; () =&amp;gt; {&#xA;    console.log(&#34;Hello, your ticket number is&#34;, id)&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;16&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are synthetic events in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;SyntheticEvent&lt;/code&gt; is a cross-browser wrapper around the browser&#39;s native event. Its API is same as the browser&#39;s native event, including &lt;code&gt;stopPropagation()&lt;/code&gt; and &lt;code&gt;preventDefault()&lt;/code&gt;, except the events work identically across all browsers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;17&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are inline conditional expressions?&lt;/h3&gt; &lt;p&gt;You can use either &lt;em&gt;if statements&lt;/em&gt; or &lt;em&gt;ternary expressions&lt;/em&gt; which are available from JS to conditionally render expressions. Apart from these approaches, you can also embed any expressions in JSX by wrapping them in curly braces and then followed by JS logical operator &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;h1&amp;gt;Hello!&amp;lt;/h1&amp;gt;&#xA;{&#xA;    messages.length &amp;gt; 0 &amp;amp;&amp;amp; !isLogin?&#xA;      &amp;lt;h2&amp;gt;&#xA;          You have {messages.length} unread messages.&#xA;      &amp;lt;/h2&amp;gt;&#xA;      :&#xA;      &amp;lt;h2&amp;gt;&#xA;          You don&#39;t have unread messages.&#xA;      &amp;lt;/h2&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;18&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is &#34;key&#34; prop and what is the benefit of using it in arrays of elements?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;key&lt;/code&gt; is a special string attribute you &lt;strong&gt;should&lt;/strong&gt; include when creating arrays of elements. &lt;em&gt;Key&lt;/em&gt; prop helps React identify which items have changed, are added, or are removed.&lt;/p&gt; &lt;p&gt;Most often we use ID from our data as &lt;em&gt;key&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const todoItems = todos.map((todo) =&amp;gt;&#xA;  &amp;lt;li key={todo.id}&amp;gt;&#xA;    {todo.text}&#xA;  &amp;lt;/li&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When you don&#39;t have stable IDs for rendered items, you may use the item &lt;em&gt;index&lt;/em&gt; as a &lt;em&gt;key&lt;/em&gt; as a last resort:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const todoItems = todos.map((todo, index) =&amp;gt;&#xA;  &amp;lt;li key={index}&amp;gt;&#xA;    {todo.text}&#xA;  &amp;lt;/li&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Using &lt;em&gt;indexes&lt;/em&gt; for &lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;not recommended&lt;/strong&gt; if the order of items may change. This can negatively impact performance and may cause issues with component state.&lt;/li&gt; &#xA;   &lt;li&gt;If you extract list item as separate component then apply &lt;em&gt;keys&lt;/em&gt; on list component instead of &lt;code&gt;li&lt;/code&gt; tag.&lt;/li&gt; &#xA;   &lt;li&gt;There will be a warning message in the console if the &lt;code&gt;key&lt;/code&gt; prop is not present on list items.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;19&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the use of refs?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;ref&lt;/em&gt; is used to return a reference to the element. They &lt;em&gt;should be avoided&lt;/em&gt; in most cases, however, they can be useful when you need a direct access to the DOM element or an instance of a component.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;20&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to create refs?&lt;/h3&gt; &lt;p&gt;There are two approaches&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;This is a recently added approach. &lt;em&gt;Refs&lt;/em&gt; are created using &lt;code&gt;React.createRef()&lt;/code&gt; method and attached to React elements via the &lt;code&gt;ref&lt;/code&gt; attribute. In order to use &lt;em&gt;refs&lt;/em&gt; throughout the component, just assign the &lt;em&gt;ref&lt;/em&gt; to the instance property within constructor.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;    this.myRef = React.createRef()&#xA;  }&#xA;  render() {&#xA;    return &amp;lt;div ref={this.myRef} /&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;You can also use ref callbacks approach regardless of React version. For example, the search bar component&#39;s input element is accessed as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class SearchBar extends Component {&#xA;   constructor(props) {&#xA;      super(props);&#xA;      this.txtSearch = null;&#xA;      this.state = { term: &#39;&#39; };&#xA;      this.setInputSearchRef = e =&amp;gt; {&#xA;         this.txtSearch = e;&#xA;      }&#xA;   }&#xA;   onInputChange(event) {&#xA;      this.setState({ term: this.txtSearch.value });&#xA;   }&#xA;   render() {&#xA;      return (&#xA;         &amp;lt;input&#xA;            value={this.state.term}&#xA;            onChange={this.onInputChange.bind(this)}&#xA;            ref={this.setInputSearchRef} /&amp;gt;&#xA;      );&#xA;   }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;You can also use &lt;em&gt;refs&lt;/em&gt; in function components using &lt;strong&gt;closures&lt;/strong&gt;. &lt;strong&gt;Note&lt;/strong&gt;: You can also use inline ref callbacks even though it is not a recommended approach.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;21&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are forward refs?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Ref forwarding&lt;/em&gt; is a feature that lets some components take a &lt;em&gt;ref&lt;/em&gt; they receive, and pass it further down to a child.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const ButtonElement = React.forwardRef((props, ref) =&amp;gt; (&#xA;  &amp;lt;button ref={ref} className=&#34;CustomButton&#34;&amp;gt;&#xA;    {props.children}&#xA;  &amp;lt;/button&amp;gt;&#xA;));&#xA;&#xA;// Create ref to the DOM button:&#xA;const ref = React.createRef();&#xA;&amp;lt;ButtonElement ref={ref}&amp;gt;{&#39;Forward Ref&#39;}&amp;lt;/ButtonElement&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;22&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Which is preferred option with in callback refs and findDOMNode()?&lt;/h3&gt; &lt;p&gt;It is preferred to use &lt;em&gt;callback refs&lt;/em&gt; over &lt;code&gt;findDOMNode()&lt;/code&gt; API. Because &lt;code&gt;findDOMNode()&lt;/code&gt; prevents certain improvements in React in the future.&lt;/p&gt; &lt;p&gt;The &lt;strong&gt;legacy&lt;/strong&gt; approach of using &lt;code&gt;findDOMNode&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends Component {&#xA;  componentDidMount() {&#xA;    findDOMNode(this).scrollIntoView()&#xA;  }&#xA;&#xA;  render() {&#xA;    return &amp;lt;div /&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The recommended approach is:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends Component {&#xA;  constructor(props){&#xA;    super(props);&#xA;    this.node = createRef();&#xA;  }&#xA;  componentDidMount() {&#xA;    this.node.current.scrollIntoView();&#xA;  }&#xA;&#xA;  render() {&#xA;    return &amp;lt;div ref={this.node} /&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;23&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why are String Refs legacy?&lt;/h3&gt; &lt;p&gt;If you worked with React before, you might be familiar with an older API where the &lt;code&gt;ref&lt;/code&gt; attribute is a string, like &lt;code&gt;ref={&#39;textInput&#39;}&lt;/code&gt;, and the DOM node is accessed as &lt;code&gt;this.refs.textInput&lt;/code&gt;. We advise against it because &lt;em&gt;string refs have below issues&lt;/em&gt;, and are considered legacy. String refs were &lt;strong&gt;removed in React v16&lt;/strong&gt;.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;They &lt;em&gt;force React to keep track of currently executing component&lt;/em&gt;. This is problematic because it makes react module stateful, and thus causes weird errors when react module is duplicated in the bundle.&lt;/li&gt; &#xA;   &lt;li&gt;They are &lt;em&gt;not composable&lt;/em&gt; — if a library puts a ref on the passed child, the user can&#39;t put another ref on it. Callback refs are perfectly composable.&lt;/li&gt; &#xA;   &lt;li&gt;They &lt;em&gt;don&#39;t work with static analysis&lt;/em&gt; like Flow. Flow can&#39;t guess the magic that framework does to make the string ref appear on &lt;code&gt;this.refs&lt;/code&gt;, as well as its type (which could be different). Callback refs are friendlier to static analysis.&lt;/li&gt; &#xA;   &lt;li&gt;It doesn&#39;t work as most people would expect with the &#34;render callback&#34; pattern (e.g. &#xA;    &lt;datagrid renderRow=&#34;{this.renderRow}&#34; /&gt;) &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class MyComponent extends Component {&#xA;  renderRow = (index) =&amp;gt; {&#xA;    // This won&#39;t work. Ref will get attached to DataTable rather than MyComponent:&#xA;    return &amp;lt;input ref={&#39;input-&#39; + index} /&amp;gt;;&#xA;&#xA;    // This would work though! Callback refs are awesome.&#xA;    return &amp;lt;input ref={input =&amp;gt; this[&#39;input-&#39; + index] = input} /&amp;gt;;&#xA;  }&#xA;&#xA;  render() {&#xA;    return &amp;lt;DataTable data={this.props.data} renderRow={this.renderRow} /&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;24&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; (VDOM) is an in-memory representation of &lt;em&gt;Real DOM&lt;/em&gt;. The representation of a UI is kept in memory and synced with the &#34;real&#34; DOM. It&#39;s a step that happens between the render function being called and the displaying of elements on the screen. This entire process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;25&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How Virtual DOM works?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Virtual DOM&lt;/em&gt; works in three simple steps.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Whenever any underlying data changes, the entire UI is re-rendered in Virtual DOM representation.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom1.png&#34; alt=&#34;vdom&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Then the difference between the previous DOM representation and the new one is calculated.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom2.png&#34; alt=&#34;vdom2&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Once the calculations are done, the real DOM will be updated with only the things that have actually changed.&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/vdom3.png&#34; alt=&#34;vdom3&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;26&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between Shadow DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;Shadow DOM&lt;/em&gt; is a browser technology designed primarily for scoping variables and CSS in &lt;em&gt;web components&lt;/em&gt;. The &lt;em&gt;Virtual DOM&lt;/em&gt; is a concept implemented by libraries in JavaScript on top of browser APIs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;27&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is React Fiber?&lt;/h3&gt; &lt;p&gt;Fiber is the new &lt;em&gt;reconciliation&lt;/em&gt; engine or reimplementation of core algorithm in React v16. The goal of React Fiber is to increase its suitability for areas like animation, layout, gestures, ability to pause, abort, or reuse work and assign priority to different types of updates; and new concurrency primitives.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;28&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the main goal of React Fiber?&lt;/h3&gt; &lt;p&gt;The goal of &lt;em&gt;React Fiber&lt;/em&gt; is to increase its suitability for areas like animation, layout, and gestures. Its headline feature is &lt;strong&gt;incremental rendering&lt;/strong&gt;: the ability to split rendering work into chunks and spread it out over multiple frames.&lt;/p&gt; &lt;p&gt;&lt;em&gt;from documentation&lt;/em&gt;&lt;/p&gt; &lt;p&gt;Its main goals are:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Ability to split interruptible work in chunks.&lt;/li&gt; &#xA;   &lt;li&gt;Ability to prioritize, rebase and reuse work in progress.&lt;/li&gt; &#xA;   &lt;li&gt;Ability to yield back and forth between parents and children to support layout in React.&lt;/li&gt; &#xA;   &lt;li&gt;Ability to return multiple elements from render().&lt;/li&gt; &#xA;   &lt;li&gt;Better support for error boundaries.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;29&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are controlled components?&lt;/h3&gt; &lt;p&gt;A component that controls the input elements within the forms on subsequent user input is called &lt;strong&gt;Controlled Component&lt;/strong&gt;, i.e, every state mutation will have an associated handler function.&lt;/p&gt; &lt;p&gt;For example, to write all the names in uppercase letters, we use handleChange as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;handleChange(event) {&#xA;  this.setState({value: event.target.value.toUpperCase()})&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;30&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are uncontrolled components?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;Uncontrolled Components&lt;/strong&gt; are the ones that store their own state internally, and you query the DOM using a ref to find its current value when you need it. This is a bit more like traditional HTML.&lt;/p&gt; &lt;p&gt;In the below UserProfile component, the &lt;code&gt;name&lt;/code&gt; input is accessed using ref.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class UserProfile extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;    this.handleSubmit = this.handleSubmit.bind(this)&#xA;    this.input = React.createRef()&#xA;  }&#xA;&#xA;  handleSubmit(event) {&#xA;    alert(&#39;A name was submitted: &#39; + this.input.current.value)&#xA;    event.preventDefault()&#xA;  }&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;&#xA;        &amp;lt;label&amp;gt;&#xA;          {&#39;Name:&#39;}&#xA;          &amp;lt;input type=&#34;text&#34; ref={this.input} /&amp;gt;&#xA;        &amp;lt;/label&amp;gt;&#xA;        &amp;lt;input type=&#34;submit&#34; value=&#34;Submit&#34; /&amp;gt;&#xA;      &amp;lt;/form&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In most cases, it&#39;s recommend to use controlled components to implement forms. In a controlled component, form data is handled by a React component. The alternative is uncontrolled components, where form data is handled by the DOM itself.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;31&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between createElement and cloneElement?&lt;/h3&gt; &lt;p&gt;JSX elements will be transpiled to &lt;code&gt;React.createElement()&lt;/code&gt; functions to create React elements which are going to be used for the object representation of UI. Whereas &lt;code&gt;cloneElement&lt;/code&gt; is used to clone an element and pass it new props.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;32&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Lifting State Up in React?&lt;/h3&gt; &lt;p&gt;When several components need to share the same changing data then it is recommended to &lt;em&gt;lift the shared state up&lt;/em&gt; to their closest common ancestor. That means if two child components share the same data from its parent, then move the state to parent instead of maintaining local state in both of the child components.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;33&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the different phases of component lifecycle?&lt;/h3&gt; &lt;p&gt;The component lifecycle has three distinct lifecycle phases:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mounting:&lt;/strong&gt; The component is ready to mount in the browser DOM. This phase covers initialization from &lt;code&gt;constructor()&lt;/code&gt;, &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, and &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Updating:&lt;/strong&gt; In this phase, the component gets updated in two ways, sending the new props and updating the state either from &lt;code&gt;setState()&lt;/code&gt; or &lt;code&gt;forceUpdate()&lt;/code&gt;. This phase covers &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt;, &lt;code&gt;shouldComponentUpdate()&lt;/code&gt;, &lt;code&gt;render()&lt;/code&gt;, &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; and &lt;code&gt;componentDidUpdate()&lt;/code&gt; lifecycle methods.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unmounting:&lt;/strong&gt; In this last phase, the component is not needed and gets unmounted from the browser DOM. This phase includes &lt;code&gt;componentWillUnmount()&lt;/code&gt; lifecycle method.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;It&#39;s worth mentioning that React internally has a concept of phases when applying changes to the DOM. They are separated as follows&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Render&lt;/strong&gt; The component will render without any side effects. This applies to Pure components and in this phase, React can pause, abort, or restart the render.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Pre-commit&lt;/strong&gt; Before the component actually applies the changes to the DOM, there is a moment that allows React to read from the DOM through the &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Commit&lt;/strong&gt; React works with the DOM and executes the final lifecycles respectively &lt;code&gt;componentDidMount()&lt;/code&gt; for mounting, &lt;code&gt;componentDidUpdate()&lt;/code&gt; for updating, and &lt;code&gt;componentWillUnmount()&lt;/code&gt; for unmounting.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;React 16.3+ Phases (or an &lt;a href=&#34;http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&#34;&gt;interactive version&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases16.4.png&#34; alt=&#34;phases 16.4+&#34;&gt;&lt;/p&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/phases.png&#34; alt=&#34;phases 16.2&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;34&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the lifecycle methods of React?&lt;/h3&gt; &lt;p&gt;Before React 16.3&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentWillMount:&lt;/strong&gt; Executed before rendering and is used for App level configuration in your root component.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and here all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentWillReceiveProps:&lt;/strong&gt; Executed when particular prop updates to trigger state transitions.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn&#39;t need to render after state or props are updated, you can return false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives new prop.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentWillUpdate:&lt;/strong&gt; Executed before re-rendering the component when there are props &amp;amp; state changes confirmed by &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; which returns true.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentWillUnmount:&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;React 16.3+&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;&lt;strong&gt;getDerivedStateFromProps:&lt;/strong&gt; Invoked right before calling &lt;code&gt;render()&lt;/code&gt; and is invoked on &lt;em&gt;every&lt;/em&gt; render. This exists for rare use cases where you need a derived state. Worth reading &lt;a href=&#34;https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html&#34;&gt;if you need derived state&lt;/a&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentDidMount:&lt;/strong&gt; Executed after first rendering and where all AJAX requests, DOM or state updates, and set up event listeners should occur.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;shouldComponentUpdate:&lt;/strong&gt; Determines if the component will be updated or not. By default, it returns &lt;code&gt;true&lt;/code&gt;. If you are sure that the component doesn&#39;t need to render after the state or props are updated, you can return a false value. It is a great place to improve performance as it allows you to prevent a re-render if component receives a new prop.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;getSnapshotBeforeUpdate:&lt;/strong&gt; Executed right before rendered output is committed to the DOM. Any value returned by this will be passed into &lt;code&gt;componentDidUpdate()&lt;/code&gt;. This is useful to capture information from the DOM i.e. scroll position.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentDidUpdate:&lt;/strong&gt; Mostly it is used to update the DOM in response to prop or state changes. This will not fire if &lt;code&gt;shouldComponentUpdate()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;componentWillUnmount&lt;/strong&gt; It will be used to cancel any outgoing network requests, or remove all event listeners associated with the component.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;35&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are Higher-Order Components?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;higher-order component&lt;/em&gt; (&lt;em&gt;HOC&lt;/em&gt;) is a function that takes a component and returns a new component. Basically, it&#39;s a pattern that is derived from React&#39;s compositional nature.&lt;/p&gt; &lt;p&gt;We call them &lt;strong&gt;pure components&lt;/strong&gt; because they can accept any dynamically provided child component but they won&#39;t modify or copy any behavior from their input components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const EnhancedComponent = higherOrderComponent(WrappedComponent)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;HOC can be used for many use cases:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Code reuse, logic and bootstrap abstraction.&lt;/li&gt; &#xA;   &lt;li&gt;Render hijacking.&lt;/li&gt; &#xA;   &lt;li&gt;State abstraction and manipulation.&lt;/li&gt; &#xA;   &lt;li&gt;Props manipulation.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;36&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to create props proxy for HOC component?&lt;/h3&gt; &lt;p&gt;You can add/edit props passed to the component using &lt;em&gt;props proxy&lt;/em&gt; pattern like this:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;function HOC(WrappedComponent) {&#xA;  return class Test extends Component {&#xA;    render() {&#xA;      const newProps = {&#xA;        title: &#39;New Header&#39;,&#xA;        footer: false,&#xA;        showFeatureX: false,&#xA;        showFeatureY: true&#xA;      }&#xA;&#xA;      return &amp;lt;WrappedComponent {...this.props} {...newProps} /&amp;gt;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;37&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is context?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Context&lt;/em&gt; provides a way to pass data through the component tree without having to pass props down manually at every level.&lt;/p&gt; &lt;p&gt;For example, authenticated users, locale preferences, UI themes need to be accessed in the application by many components.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const {Provider, Consumer} = React.createContext(defaultValue)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;38&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is children prop?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Children&lt;/em&gt; is a prop (&lt;code&gt;this.props.children&lt;/code&gt;) that allows you to pass components as data to other components, just like any other prop you use. Component tree put between component&#39;s opening and closing tag will be passed to that component as &lt;code&gt;children&lt;/code&gt; prop.&lt;/p&gt; &lt;p&gt;There are several methods available in the React API to work with this prop. These include &lt;code&gt;React.Children.map&lt;/code&gt;, &lt;code&gt;React.Children.forEach&lt;/code&gt;, &lt;code&gt;React.Children.count&lt;/code&gt;, &lt;code&gt;React.Children.only&lt;/code&gt;, &lt;code&gt;React.Children.toArray&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;A simple usage of children prop looks as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const MyDiv = React.createClass({&#xA;  render: function() {&#xA;    return &amp;lt;div&amp;gt;{this.props.children}&amp;lt;/div&amp;gt;&#xA;  }&#xA;})&#xA;&#xA;ReactDOM.render(&#xA;  &amp;lt;MyDiv&amp;gt;&#xA;    &amp;lt;span&amp;gt;{&#39;Hello&#39;}&amp;lt;/span&amp;gt;&#xA;    &amp;lt;span&amp;gt;{&#39;World&#39;}&amp;lt;/span&amp;gt;&#xA;  &amp;lt;/MyDiv&amp;gt;,&#xA;  node&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;39&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to write comments in React?&lt;/h3&gt; &lt;p&gt;The comments in React/JSX are similar to JavaScript Multiline comments but are wrapped in curly braces.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Single-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;div&amp;gt;&#xA;  {/* Single-line comments(In vanilla JavaScript, the single-line comments are represented by double slash(//)) */}&#xA;  {`Welcome ${user}, let&#39;s play React`}&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Multi-line comments:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;div&amp;gt;&#xA;  {/* Multi-line comments for more than&#xA;   one line */}&#xA;  {`Welcome ${user}, let&#39;s play React`}&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;40&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of using super constructor with props argument?&lt;/h3&gt; &lt;p&gt;A child class constructor cannot make use of &lt;code&gt;this&lt;/code&gt; reference until the &lt;code&gt;super()&lt;/code&gt; method has been called. The same applies to ES6 sub-classes as well. The main reason for passing props parameter to &lt;code&gt;super()&lt;/code&gt; call is to access &lt;code&gt;this.props&lt;/code&gt; in your child constructors.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;&#xA;    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Not passing props:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super()&#xA;&#xA;    console.log(this.props) // prints undefined&#xA;&#xA;    // but props parameter is still available&#xA;    console.log(props) // prints { name: &#39;John&#39;, age: 42 }&#xA;  }&#xA;&#xA;  render() {&#xA;    // no difference outside constructor&#xA;    console.log(this.props) // prints { name: &#39;John&#39;, age: 42 }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code snippets reveals that &lt;code&gt;this.props&lt;/code&gt; is different only within the constructor. It would be the same outside the constructor.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;41&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is reconciliation?&lt;/h3&gt; &lt;p&gt;When a component&#39;s props or state change, React decides whether an actual DOM update is necessary by comparing the newly returned element with the previously rendered one. When they are not equal, React will update the DOM. This process is called &lt;em&gt;reconciliation&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;42&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to set state with a dynamic key name?&lt;/h3&gt; &lt;p&gt;If you are using ES6 or the Babel transpiler to transform your JSX code then you can accomplish this with &lt;em&gt;computed property names&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;handleInputChange(event) {&#xA;  this.setState({ [event.target.id]: event.target.value })&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;43&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What would be the common mistake of function being called every time the component renders?&lt;/h3&gt; &lt;p&gt;You need to make sure that function is not being called while passing the function as a parameter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  // Wrong: handleClick is called instead of passed as a reference!&#xA;  return &amp;lt;button onClick={this.handleClick()}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead, pass the function itself without parenthesis:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  // Correct: handleClick is passed as a reference!&#xA;  return &amp;lt;button onClick={this.handleClick}&amp;gt;{&#39;Click Me&#39;}&amp;lt;/button&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;44&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is lazy function supports named exports?&lt;/h3&gt; No, currently &lt;code&gt;React.lazy&lt;/code&gt; function supports default exports only. If you would like to import modules which are named exports, you can create an intermediate module that reexports it as the default. It also ensures that tree shaking keeps working and don’t pull unused components. Let&#39;s take a component file which exports multiple named components, &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// MoreComponents.js&#xA;export const SomeComponent = /* ... */;&#xA;export const UnusedComponent = /* ... */;&#xA;&lt;/code&gt;&lt;/pre&gt; and reexport &lt;code&gt;MoreComponents.js&lt;/code&gt; components in an intermediate file &lt;code&gt;IntermediateComponent.js&lt;/code&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// IntermediateComponent.js&#xA;export { SomeComponent as default } from &#34;./MoreComponents.js&#34;;&#xA;&lt;/code&gt;&lt;/pre&gt; Now you can import the module using lazy function as below, &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React, { lazy } from &#39;react&#39;;&#xA;const SomeComponent = lazy(() =&amp;gt; import(&#34;./IntermediateComponent.js&#34;));&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;45&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why React uses &lt;code&gt;className&lt;/code&gt; over &lt;code&gt;class&lt;/code&gt; attribute?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;class&lt;/code&gt; is a keyword in JavaScript, and JSX is an extension of JavaScript. That&#39;s the principal reason why React uses &lt;code&gt;className&lt;/code&gt; instead of &lt;code&gt;class&lt;/code&gt;. Pass a string as the &lt;code&gt;className&lt;/code&gt; prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return &amp;lt;span className={&#39;menu navigation-menu&#39;}&amp;gt;{&#39;Menu&#39;}&amp;lt;/span&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;46&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are fragments?&lt;/h3&gt; &lt;p&gt;It&#39;s a common pattern in React which is used for a component to return multiple elements. &lt;em&gt;Fragments&lt;/em&gt; let you group a list of children without adding extra nodes to the DOM.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return (&#xA;    &amp;lt;React.Fragment&amp;gt;&#xA;      &amp;lt;ChildA /&amp;gt;&#xA;      &amp;lt;ChildB /&amp;gt;&#xA;      &amp;lt;ChildC /&amp;gt;&#xA;    &amp;lt;/React.Fragment&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There is also a &lt;em&gt;shorter syntax&lt;/em&gt;, but it&#39;s not supported in many tools:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return (&#xA;    &amp;lt;&amp;gt;&#xA;      &amp;lt;ChildA /&amp;gt;&#xA;      &amp;lt;ChildB /&amp;gt;&#xA;      &amp;lt;ChildC /&amp;gt;&#xA;    &amp;lt;/&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;47&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why fragments are better than container divs?&lt;/h3&gt; &lt;p&gt;Below are the list of reasons,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Fragments are a bit faster and use less memory by not creating an extra DOM node. This only has a real benefit on very large and deep trees.&lt;/li&gt; &#xA;   &lt;li&gt;Some CSS mechanisms like &lt;em&gt;Flexbox&lt;/em&gt; and &lt;em&gt;CSS Grid&lt;/em&gt; have a special parent-child relationships, and adding divs in the middle makes it hard to keep the desired layout.&lt;/li&gt; &#xA;   &lt;li&gt;The DOM Inspector is less cluttered.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;48&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are portals in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Portal&lt;/em&gt; is a recommended way to render children into a DOM node that exists outside the DOM hierarchy of the parent component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;ReactDOM.createPortal(child, container)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The first argument is any render-able React child, such as an element, string, or fragment. The second argument is a DOM element.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;49&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are stateless components?&lt;/h3&gt; &lt;p&gt;If the behaviour is independent of its state then it can be a stateless component. You can use either a function or a class for creating stateless components. But unless you need to use a lifecycle hook in your components, you should go for function components. There are a lot of benefits if you decide to use function components here; they are easy to write, understand, and test, a little faster, and you can avoid the &lt;code&gt;this&lt;/code&gt; keyword altogether.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;50&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are stateful components?&lt;/h3&gt; &lt;p&gt;If the behaviour of a component is dependent on the &lt;em&gt;state&lt;/em&gt; of the component then it can be termed as stateful component. These &lt;em&gt;stateful components&lt;/em&gt; are always &lt;em&gt;class components&lt;/em&gt; and have a state that gets initialized in the &lt;code&gt;constructor&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class App extends Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;    this.state = { count: 0 }&#xA;  }&#xA;&#xA;  render() {&#xA;    // ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;React 16.8 Update:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Hooks let you use state and other React features without writing classes.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt; import React, {useState} from &#39;react&#39;;&#xA;&#xA; const App = (props) =&amp;gt; {&#xA;   const [count, setCount] = useState(0);&#xA;&#xA;   return (&#xA;     // JSX&#xA;   )&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;51&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to apply validation on props in React?&lt;/h3&gt; &lt;p&gt;When the application is running in &lt;em&gt;development mode&lt;/em&gt;, React will automatically check all props that we set on components to make sure they have &lt;em&gt;correct type&lt;/em&gt;. If the type is incorrect, React will generate warning messages in the console. It&#39;s disabled in &lt;em&gt;production mode&lt;/em&gt; due to performance impact. The mandatory props are defined with &lt;code&gt;isRequired&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The set of predefined prop types:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.number&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.string&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.array&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.object&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.func&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.node&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.element&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.bool&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.symbol&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;PropTypes.any&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;We can define &lt;code&gt;propTypes&lt;/code&gt; for &lt;code&gt;User&lt;/code&gt; component as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React from &#39;react&#39;&#xA;import PropTypes from &#39;prop-types&#39;&#xA;&#xA;class User extends React.Component {&#xA;  static propTypes = {&#xA;    name: PropTypes.string.isRequired,&#xA;    age: PropTypes.number.isRequired&#xA;  }&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;&amp;gt;&#xA;        &amp;lt;h1&amp;gt;{`Welcome, ${this.props.name}`}&amp;lt;/h1&amp;gt;&#xA;        &amp;lt;h2&amp;gt;{`Age, ${this.props.age}`}&amp;lt;/h2&amp;gt;&#xA;      &amp;lt;/&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In React v15.5 &lt;em&gt;PropTypes&lt;/em&gt; were moved from &lt;code&gt;React.PropTypes&lt;/code&gt; to &lt;code&gt;prop-types&lt;/code&gt; library.&lt;/p&gt; &lt;p&gt;&lt;em&gt;The Equivalent Functional Component&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React from &#39;react&#39;&#xA;import PropTypes from &#39;prop-types&#39;&#xA;&#xA;function User({name, age}) {&#xA;  return (&#xA;    &amp;lt;&amp;gt;&#xA;      &amp;lt;h1&amp;gt;{`Welcome, ${name}`}&amp;lt;/h1&amp;gt;&#xA;      &amp;lt;h2&amp;gt;{`Age, ${age}`}&amp;lt;/h2&amp;gt;&#xA;    &amp;lt;/&amp;gt;&#xA;  )&#xA;}&#xA;&#xA;User.propTypes = {&#xA;    name: PropTypes.string.isRequired,&#xA;    age: PropTypes.number.isRequired&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;52&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the advantages of React?&lt;/h3&gt; &lt;p&gt;Below are the list of main advantages of React,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Increases the application&#39;s performance with &lt;em&gt;Virtual DOM&lt;/em&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;JSX makes code easy to read and write.&lt;/li&gt; &#xA;   &lt;li&gt;It renders both on client and server side (&lt;em&gt;SSR&lt;/em&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;Easy to integrate with frameworks (Angular, Backbone) since it is only a view library.&lt;/li&gt; &#xA;   &lt;li&gt;Easy to write unit and integration tests with tools such as Jest.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;53&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the limitations of React?&lt;/h3&gt; &lt;p&gt;Apart from the advantages, there are few limitations of React too,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;React is just a view library, not a full framework.&lt;/li&gt; &#xA;   &lt;li&gt;There is a learning curve for beginners who are new to web development.&lt;/li&gt; &#xA;   &lt;li&gt;Integrating React into a traditional MVC framework requires some additional configuration.&lt;/li&gt; &#xA;   &lt;li&gt;The code complexity increases with inline templating and JSX.&lt;/li&gt; &#xA;   &lt;li&gt;Too many smaller components leading to over engineering or boilerplate.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;54&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are error boundaries in React v16?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Error boundaries&lt;/em&gt; are components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of the component tree that crashed.&lt;/p&gt; &lt;p&gt;A class component becomes an error boundary if it defines a new lifecycle method called &lt;code&gt;componentDidCatch(error, info)&lt;/code&gt; or &lt;code&gt;static getDerivedStateFromError() &lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class ErrorBoundary extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;    this.state = { hasError: false }&#xA;  }&#xA;&#xA;  componentDidCatch(error, info) {&#xA;    // You can also log the error to an error reporting service&#xA;    logErrorToMyService(error, info)&#xA;  }&#xA;&#xA;  static getDerivedStateFromError(error) {&#xA;     // Update state so the next render will show the fallback UI.&#xA;     return { hasError: true };&#xA;   }&#xA;&#xA;  render() {&#xA;    if (this.state.hasError) {&#xA;      // You can render any custom fallback UI&#xA;      return &amp;lt;h1&amp;gt;{&#39;Something went wrong.&#39;}&amp;lt;/h1&amp;gt;&#xA;    }&#xA;    return this.props.children&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that use it as a regular component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;ErrorBoundary&amp;gt;&#xA;  &amp;lt;MyWidget /&amp;gt;&#xA;&amp;lt;/ErrorBoundary&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;55&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How error boundaries handled in React v15?&lt;/h3&gt; &lt;p&gt;React v15 provided very basic support for &lt;em&gt;error boundaries&lt;/em&gt; using &lt;code&gt;unstable_handleError&lt;/code&gt; method. It has been renamed to &lt;code&gt;componentDidCatch&lt;/code&gt; in React v16.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;56&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the recommended ways for static type checking?&lt;/h3&gt; &lt;p&gt;Normally we use &lt;em&gt;PropTypes library&lt;/em&gt; (&lt;code&gt;React.PropTypes&lt;/code&gt; moved to a &lt;code&gt;prop-types&lt;/code&gt; package since React v15.5) for &lt;em&gt;type checking&lt;/em&gt; in the React applications. For large code bases, it is recommended to use &lt;em&gt;static type checkers&lt;/em&gt; such as Flow or TypeScript, that perform type checking at compile time and provide auto-completion features.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;57&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the use of &lt;code&gt;react-dom&lt;/code&gt; package?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-dom&lt;/code&gt; package provides &lt;em&gt;DOM-specific methods&lt;/em&gt; that can be used at the top level of your app. Most of the components are not required to use this module. Some of the methods of this package are:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;hydrate()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;unmountComponentAtNode()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;findDOMNode()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;createPortal()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;58&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of render method of &lt;code&gt;react-dom&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;This method is used to render a React element into the DOM in the supplied container and return a reference to the component. If the React element was previously rendered into container, it will perform an update on it and only mutate the DOM as necessary to reflect the latest changes.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ReactDOM.render(element, container[, callback])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the optional callback is provided, it will be executed after the component is rendered or updated.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;59&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is ReactDOMServer?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;ReactDOMServer&lt;/code&gt; object enables you to render components to static markup (typically used on node server). This object is mainly used for &lt;em&gt;server-side rendering&lt;/em&gt; (SSR). The following methods can be used in both the server and browser environments:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;renderToString()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;renderToStaticMarkup()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;For example, you generally run a Node-based web server like Express, Hapi, or Koa, and you call &lt;code&gt;renderToString&lt;/code&gt; to render your root component to a string, which you then send as response.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// using Express&#xA;import { renderToString } from &#39;react-dom/server&#39;&#xA;import MyPage from &#39;./MyPage&#39;&#xA;&#xA;app.get(&#39;/&#39;, (req, res) =&amp;gt; {&#xA;  res.write(&#39;&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;My Page&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;&#39;)&#xA;  res.write(&#39;&amp;lt;div id=&#34;content&#34;&amp;gt;&#39;)&#xA;  res.write(renderToString(&amp;lt;MyPage/&amp;gt;))&#xA;  res.write(&#39;&amp;lt;/div&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;)&#xA;  res.end()&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;60&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use innerHTML in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute is React&#39;s replacement for using &lt;code&gt;innerHTML&lt;/code&gt; in the browser DOM. Just like &lt;code&gt;innerHTML&lt;/code&gt;, it is risky to use this attribute considering cross-site scripting (XSS) attacks. You just need to pass a &lt;code&gt;__html&lt;/code&gt; object as key and HTML text as value.&lt;/p&gt; &lt;p&gt;In this example MyComponent uses &lt;code&gt;dangerouslySetInnerHTML&lt;/code&gt; attribute for setting HTML markup:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;function createMarkup() {&#xA;  return { __html: &#39;First &amp;amp;middot; Second&#39; }&#xA;}&#xA;&#xA;function MyComponent() {&#xA;  return &amp;lt;div dangerouslySetInnerHTML={createMarkup()} /&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;61&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use styles in React?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;style&lt;/code&gt; attribute accepts a JavaScript object with camelCased properties rather than a CSS string. This is consistent with the DOM style JavaScript property, is more efficient, and prevents XSS security holes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const divStyle = {&#xA;  color: &#39;blue&#39;,&#xA;  backgroundImage: &#39;url(&#39; + imgUrl + &#39;)&#39;&#xA;};&#xA;&#xA;function HelloWorldComponent() {&#xA;  return &amp;lt;div style={divStyle}&amp;gt;Hello World!&amp;lt;/div&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Style keys are camelCased in order to be consistent with accessing the properties on DOM nodes in JavaScript (e.g. &lt;code&gt;node.style.backgroundImage&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;62&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How events are different in React?&lt;/h3&gt; &lt;p&gt;Handling events in React elements has some syntactic differences:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;React event handlers are named using camelCase, rather than lowercase.&lt;/li&gt; &#xA;   &lt;li&gt;With JSX you pass a function as the event handler, rather than a string.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;63&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What will happen if you use &lt;code&gt;setState()&lt;/code&gt; in constructor?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt;, then apart from assigning to the object state React also re-renders the component and all its children. You would get error like this: &lt;em&gt;Can only update a mounted or mounting component.&lt;/em&gt; So we need to use &lt;code&gt;this.state&lt;/code&gt; to initialize variables inside constructor.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;64&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the impact of indexes as keys?&lt;/h3&gt; &lt;p&gt;Keys should be stable, predictable, and unique so that React can keep track of elements.&lt;/p&gt; &lt;p&gt;In the below code snippet each element&#39;s key will be based on ordering, rather than tied to the data that is being represented. This limits the optimizations that React can do.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;{todos.map((todo, index) =&amp;gt;&#xA;  &amp;lt;Todo&#xA;    {...todo}&#xA;    key={index}&#xA;  /&amp;gt;&#xA;)}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you use element data for unique key, assuming todo.id is unique to this list and stable, React would be able to reorder elements without needing to reevaluate them as much.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;{todos.map((todo) =&amp;gt;&#xA;  &amp;lt;Todo {...todo}&#xA;    key={todo.id} /&amp;gt;&#xA;)}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;65&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is it good to use &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillMount()&lt;/code&gt; method?&lt;/h3&gt; &lt;p&gt;Yes, it is safe to use &lt;code&gt;setState()&lt;/code&gt; inside &lt;code&gt;componentWillMount()&lt;/code&gt; method. But at the same it is recommended to avoid async initialization in &lt;code&gt;componentWillMount()&lt;/code&gt; lifecycle method. &lt;code&gt;componentWillMount()&lt;/code&gt; is invoked immediately before mounting occurs. It is called before &lt;code&gt;render()&lt;/code&gt;, therefore setting state in this method will not trigger a re-render. Avoid introducing any side-effects or subscriptions in this method. We need to make sure async calls for component initialization happened in &lt;code&gt;componentDidMount()&lt;/code&gt; instead of &lt;code&gt;componentWillMount()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;componentDidMount() {&#xA;  axios.get(`api/todos`)&#xA;    .then((result) =&amp;gt; {&#xA;      this.setState({&#xA;        messages: [...result.data]&#xA;      })&#xA;    })&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;66&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What will happen if you use props in initial state?&lt;/h3&gt; &lt;p&gt;If the props on the component are changed without the component being refreshed, the new prop value will never be displayed because the constructor function will never update the current state of the component. The initialization of state from props only runs when the component is first created.&lt;/p&gt; &lt;p&gt;The below component won&#39;t display the updated input value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;&#xA;    this.state = {&#xA;      records: [],&#xA;      inputValue: this.props.inputValue&#xA;    };&#xA;  }&#xA;&#xA;  render() {&#xA;    return &amp;lt;div&amp;gt;{this.state.inputValue}&amp;lt;/div&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using props inside render method will update the value:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;&#xA;    this.state = {&#xA;      record: []&#xA;    }&#xA;  }&#xA;&#xA;  render() {&#xA;    return &amp;lt;div&amp;gt;{this.props.inputValue}&amp;lt;/div&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;67&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you conditionally render components?&lt;/h3&gt; &lt;p&gt;In some cases you want to render different components depending on some state. JSX does not render &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, so you can use conditional &lt;em&gt;short-circuiting&lt;/em&gt; to render a given part of your component only if a certain condition is true.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const MyComponent = ({ name, address }) =&amp;gt; (&#xA;  &amp;lt;div&amp;gt;&#xA;    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;&#xA;    {address &amp;amp;&amp;amp;&#xA;      &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;&#xA;    }&#xA;  &amp;lt;/div&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you need an &lt;code&gt;if-else&lt;/code&gt; condition then use &lt;em&gt;ternary operator&lt;/em&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const MyComponent = ({ name, address }) =&amp;gt; (&#xA;  &amp;lt;div&amp;gt;&#xA;    &amp;lt;h2&amp;gt;{name}&amp;lt;/h2&amp;gt;&#xA;    {address&#xA;      ? &amp;lt;p&amp;gt;{address}&amp;lt;/p&amp;gt;&#xA;      : &amp;lt;p&amp;gt;{&#39;Address is not available&#39;}&amp;lt;/p&amp;gt;&#xA;    }&#xA;  &amp;lt;/div&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;68&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why we need to be careful when spreading props on DOM elements?&lt;/h3&gt; &lt;p&gt;When we &lt;em&gt;spread props&lt;/em&gt; we run into the risk of adding unknown HTML attributes, which is a bad practice. Instead we can use prop destructuring with &lt;code&gt;...rest&lt;/code&gt; operator, so it will add only required props.&lt;/p&gt; &lt;p&gt;For example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const ComponentA = () =&amp;gt;&#xA;  &amp;lt;ComponentB isDisplay={true} className={&#39;componentStyle&#39;} /&amp;gt;&#xA;&#xA;const ComponentB = ({ isDisplay, ...domProps }) =&amp;gt;&#xA;  &amp;lt;div {...domProps}&amp;gt;{&#39;ComponentB&#39;}&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;69&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How you use decorators in React?&lt;/h3&gt; &lt;p&gt;You can &lt;em&gt;decorate&lt;/em&gt; your &lt;em&gt;class&lt;/em&gt; components, which is the same as passing the component into a function. &lt;strong&gt;Decorators&lt;/strong&gt; are flexible and readable way of modifying component functionality.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;@setTitle(&#39;Profile&#39;)&#xA;class Profile extends React.Component {&#xA;    //....&#xA;}&#xA;&#xA;/*&#xA;  title is a string that will be set as a document title&#xA;  WrappedComponent is what our decorator will receive when&#xA;  put directly above a component class as seen in the example above&#xA;*/&#xA;const setTitle = (title) =&amp;gt; (WrappedComponent) =&amp;gt; {&#xA;  return class extends React.Component {&#xA;    componentDidMount() {&#xA;      document.title = title&#xA;    }&#xA;&#xA;    render() {&#xA;      return &amp;lt;WrappedComponent {...this.props} /&amp;gt;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Decorators are a feature that didn&#39;t make it into ES7, but are currently a &lt;em&gt;stage 2 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;70&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you memoize a component?&lt;/h3&gt; &lt;p&gt;There are memoize libraries available which can be used on function components.&lt;/p&gt; &lt;p&gt;For example &lt;code&gt;moize&lt;/code&gt; library can memoize the component in another component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import moize from &#39;moize&#39;&#xA;import Component from &#39;./components/Component&#39; // this module exports a non-memoized component&#xA;&#xA;const MemoizedFoo = moize.react(Component)&#xA;&#xA;const Consumer = () =&amp;gt; {&#xA;  &amp;lt;div&amp;gt;&#xA;    {&#39;I will memoize the following entry:&#39;}&#xA;    &amp;lt;MemoizedFoo/&amp;gt;&#xA;  &amp;lt;/div&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Since React v16.6.0, we have a &lt;code&gt;React.memo&lt;/code&gt;. It provides a higher order component which memoizes component unless the props change. To use it, simply wrap the component using React.memo before you use it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  const MemoComponent = React.memo(function MemoComponent(props) {&#xA;    /* render using props */&#xA;  });&#xA;  OR&#xA;  export default React.memo(MyFunctionComponent);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;71&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How you implement Server Side Rendering or SSR?&lt;/h3&gt; &lt;p&gt;React is already equipped to handle rendering on Node servers. A special version of the DOM renderer is available, which follows the same pattern as on the client side.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import ReactDOMServer from &#39;react-dom/server&#39;&#xA;import App from &#39;./App&#39;&#xA;&#xA;ReactDOMServer.renderToString(&amp;lt;App /&amp;gt;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This method will output the regular HTML as a string, which can be then placed inside a page body as part of the server response. On the client side, React detects the pre-rendered content and seamlessly picks up where it left off.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;72&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to enable production mode in React?&lt;/h3&gt; &lt;p&gt;You should use Webpack&#39;s &lt;code&gt;DefinePlugin&lt;/code&gt; method to set &lt;code&gt;NODE_ENV&lt;/code&gt; to &lt;code&gt;production&lt;/code&gt;, by which it strip out things like propType validation and extra warnings. Apart from this, if you minify the code, for example, Uglify&#39;s dead-code elimination to strip out development only code and comments, it will drastically reduce the size of your bundle.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;73&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is CRA and its benefits?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;create-react-app&lt;/code&gt; CLI tool allows you to quickly create &amp;amp; run React applications with no configuration step.&lt;/p&gt; &lt;p&gt;Let&#39;s create Todo App using &lt;em&gt;CRA&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# Installation&#xA;$ npm install -g create-react-app&#xA;&#xA;# Create new project&#xA;$ create-react-app todo-app&#xA;$ cd todo-app&#xA;&#xA;# Build, test and run&#xA;$ npm run build&#xA;$ npm run test&#xA;$ npm start&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It includes everything we need to build a React app:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;React, JSX, ES6, and Flow syntax support.&lt;/li&gt; &#xA;   &lt;li&gt;Language extras beyond ES6 like the object spread operator.&lt;/li&gt; &#xA;   &lt;li&gt;Autoprefixed CSS, so you don’t need -webkit- or other prefixes.&lt;/li&gt; &#xA;   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting.&lt;/li&gt; &#xA;   &lt;li&gt;A live development server that warns about common mistakes.&lt;/li&gt; &#xA;   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;74&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the lifecycle methods order in mounting?&lt;/h3&gt; &lt;p&gt;The lifecycle methods are called in the following order when an instance of a component is being created and inserted into the DOM.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;static getDerivedStateFromProps()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;75&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the lifecycle methods going to be deprecated in React v16?&lt;/h3&gt; &lt;p&gt;The following lifecycle methods going to be unsafe coding practices and will be more problematic with async rendering.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;Starting with React v16.3 these methods are aliased with &lt;code&gt;UNSAFE_&lt;/code&gt; prefix, and the unprefixed version will be removed in React v17.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;76&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new static &lt;code&gt;getDerivedStateFromProps()&lt;/code&gt; lifecycle method is invoked after a component is instantiated as well as before it is re-rendered. It can return an object to update state, or &lt;code&gt;null&lt;/code&gt; to indicate that the new props do not require any state updates.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  static getDerivedStateFromProps(props, state) {&#xA;    // ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillReceiveProps()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;77&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method?&lt;/h3&gt; &lt;p&gt;The new &lt;code&gt;getSnapshotBeforeUpdate()&lt;/code&gt; lifecycle method is called right before DOM updates. The return value from this method will be passed as the third parameter to &lt;code&gt;componentDidUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  getSnapshotBeforeUpdate(prevProps, prevState) {&#xA;    // ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This lifecycle method along with &lt;code&gt;componentDidUpdate()&lt;/code&gt; covers all the use cases of &lt;code&gt;componentWillUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;78&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Do Hooks replace render props and higher order components?&lt;/h3&gt; &lt;p&gt;Both render props and higher-order components render only a single child but in most of the cases Hooks are a simpler way to serve this by reducing nesting in your tree.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;79&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the recommended way for naming components?&lt;/h3&gt; &lt;p&gt;It is recommended to name the component by reference instead of using &lt;code&gt;displayName&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Using &lt;code&gt;displayName&lt;/code&gt; for naming component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export default React.createClass({&#xA;  displayName: &#39;TodoApp&#39;,&#xA;  // ...&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;strong&gt;recommended&lt;/strong&gt; approach:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export default class TodoApp extends React.Component {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;also&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const TodoApp = () =&amp;gt; {&#xA; //...&#xA;}&#xA;export default TodoApp;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;80&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the recommended ordering of methods in component class?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Recommended&lt;/em&gt; ordering of methods from &lt;em&gt;mounting&lt;/em&gt; to &lt;em&gt;render stage&lt;/em&gt;:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;static&lt;/code&gt; methods&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;constructor()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;getChildContext()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentWillMount()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentDidMount()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentWillReceiveProps()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;shouldComponentUpdate()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentWillUpdate()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentDidUpdate()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;componentWillUnmount()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;click handlers or event handlers like &lt;code&gt;onClickSubmit()&lt;/code&gt; or &lt;code&gt;onChangeDescription()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;getter methods for render like &lt;code&gt;getSelectReason()&lt;/code&gt; or &lt;code&gt;getFooterContent()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;optional render methods like &lt;code&gt;renderNavigation()&lt;/code&gt; or &lt;code&gt;renderProfilePicture()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;render()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;81&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is a switching component?&lt;/h3&gt; &lt;p&gt;A &lt;em&gt;switching component&lt;/em&gt; is a component that renders one of many components. We need to use object to map prop values to components.&lt;/p&gt; &lt;p&gt;For example, a switching component to display different pages based on &lt;code&gt;page&lt;/code&gt; prop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import HomePage from &#39;./HomePage&#39;&#xA;import AboutPage from &#39;./AboutPage&#39;&#xA;import ServicesPage from &#39;./ServicesPage&#39;&#xA;import ContactPage from &#39;./ContactPage&#39;&#xA;&#xA;const PAGES = {&#xA;  home: HomePage,&#xA;  about: AboutPage,&#xA;  services: ServicesPage,&#xA;  contact: ContactPage&#xA;}&#xA;&#xA;const Page = (props) =&amp;gt; {&#xA;  const Handler = PAGES[props.page] || ContactPage&#xA;&#xA;  return &amp;lt;Handler {...props} /&amp;gt;&#xA;}&#xA;&#xA;// The keys of the PAGES object can be used in the prop types to catch dev-time errors.&#xA;Page.propTypes = {&#xA;  page: PropTypes.oneOf(Object.keys(PAGES)).isRequired&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;82&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why we need to pass a function to setState()?&lt;/h3&gt; &lt;p&gt;The reason behind for this is that &lt;code&gt;setState()&lt;/code&gt; is an asynchronous operation. React batches state changes for performance reasons, so the state may not change immediately after &lt;code&gt;setState()&lt;/code&gt; is called. That means you should not rely on the current state when calling &lt;code&gt;setState()&lt;/code&gt; since you can&#39;t be sure what that state will be. The solution is to pass a function to &lt;code&gt;setState()&lt;/code&gt;, with the previous state as an argument. By doing this you can avoid issues with the user getting the old state value on access due to the asynchronous nature of &lt;code&gt;setState()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Let&#39;s say the initial count value is zero. After three consecutive increment operations, the value is going to be incremented only by one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// assuming this.state.count === 0&#xA;this.setState({ count: this.state.count + 1 })&#xA;this.setState({ count: this.state.count + 1 })&#xA;this.setState({ count: this.state.count + 1 })&#xA;// this.state.count === 1, not 3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we pass a function to &lt;code&gt;setState()&lt;/code&gt;, the count gets incremented correctly.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;this.setState((prevState, props) =&amp;gt; ({&#xA;  count: prevState.count + props.increment&#xA;}))&#xA;// this.state.count === 3 as expected&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;(OR)&lt;/strong&gt;&lt;/p&gt; &lt;h3&gt;Why function is preferred over object for &lt;code&gt;setState()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;React may batch multiple &lt;code&gt;setState()&lt;/code&gt; calls into a single update for performance. Because &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; may be updated asynchronously, you should not rely on their values for calculating the next state.&lt;/p&gt; &lt;p&gt;This counter example will fail to update as expected:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Wrong&#xA;this.setState({&#xA;  counter: this.state.counter + this.props.increment,&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The preferred approach is to call &lt;code&gt;setState()&lt;/code&gt; with function rather than object. That function will receive the previous state as the first argument, and the props at the time the update is applied as the second argument.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Correct&#xA;this.setState((prevState, props) =&amp;gt; ({&#xA;  counter: prevState.counter + props.increment&#xA;}))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;83&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is strict mode in React?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;React.StrictMode&lt;/code&gt; is a useful component for highlighting potential problems in an application. Just like &lt;code&gt;&amp;lt;Fragment&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;StrictMode&amp;gt;&lt;/code&gt; does not render any extra DOM elements. It activates additional checks and warnings for its descendants. These checks apply for &lt;em&gt;development mode&lt;/em&gt; only.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React from &#39;react&#39;&#xA;&#xA;function ExampleApplication() {&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;Header /&amp;gt;&#xA;      &amp;lt;React.StrictMode&amp;gt;&#xA;        &amp;lt;div&amp;gt;&#xA;          &amp;lt;ComponentOne /&amp;gt;&#xA;          &amp;lt;ComponentTwo /&amp;gt;&#xA;        &amp;lt;/div&amp;gt;&#xA;      &amp;lt;/React.StrictMode&amp;gt;&#xA;      &amp;lt;Header /&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the example above, the &lt;em&gt;strict mode&lt;/em&gt; checks apply to &lt;code&gt;&amp;lt;ComponentOne&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ComponentTwo&amp;gt;&lt;/code&gt; components only.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;84&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are React Mixins?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Mixins&lt;/em&gt; are a way to totally separate components to have a common functionality. Mixins &lt;strong&gt;should not be used&lt;/strong&gt; and can be replaced with &lt;em&gt;higher-order components&lt;/em&gt; or &lt;em&gt;decorators&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;One of the most commonly used mixins is &lt;code&gt;PureRenderMixin&lt;/code&gt;. You might be using it in some components to prevent unnecessary re-renders when the props and state are shallowly equal to the previous props and state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const PureRenderMixin = require(&#39;react-addons-pure-render-mixin&#39;)&#xA;&#xA;const Button = React.createClass({&#xA;  mixins: [PureRenderMixin],&#xA;  // ...&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;!-- TODO: mixins are deprecated --&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;85&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why is &lt;code&gt;isMounted()&lt;/code&gt; an anti-pattern and what is the proper solution?&lt;/h3&gt; &lt;p&gt;The primary use case for &lt;code&gt;isMounted()&lt;/code&gt; is to avoid calling &lt;code&gt;setState()&lt;/code&gt; after a component has been unmounted, because it will emit a warning.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;if (this.isMounted()) {&#xA;  this.setState({...})&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Checking &lt;code&gt;isMounted()&lt;/code&gt; before calling &lt;code&gt;setState()&lt;/code&gt; does eliminate the warning, but it also defeats the purpose of the warning. Using &lt;code&gt;isMounted()&lt;/code&gt; is a code smell because the only reason you would check is because you think you might be holding a reference after the component has unmounted.&lt;/p&gt; &lt;p&gt;An optimal solution would be to find places where &lt;code&gt;setState()&lt;/code&gt; might be called after a component has unmounted, and fix them. Such situations most commonly occur due to callbacks, when a component is waiting for some data and gets unmounted before the data arrives. Ideally, any callbacks should be canceled in &lt;code&gt;componentWillUnmount()&lt;/code&gt;, prior to unmounting.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;86&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the Pointer Events supported in React?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Pointer Events&lt;/em&gt; provide a unified way of handling all input events. In the old days we had a mouse and respective event listeners to handle them but nowadays we have many devices which don&#39;t correlate to having a mouse, like phones with touch surface or pens. We need to remember that these events will only work in browsers that support the &lt;em&gt;Pointer Events&lt;/em&gt; specification.&lt;/p&gt; &lt;p&gt;The following event types are now available in &lt;em&gt;React DOM&lt;/em&gt;:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;onPointerDown&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onPointerMove&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onPointerUp&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onPointerCancel&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onGotPointerCapture&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onLostPointerCapture&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onPointerEnter&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onPointerLeave&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onPointerOver&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;onPointerOut&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;87&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why should component names start with capital letter?&lt;/h3&gt; &lt;p&gt;If you are rendering your component using JSX, the name of that component has to begin with a capital letter otherwise React will throw an error as an unrecognized tag. This convention is because only HTML elements and SVG tags can begin with a lowercase letter.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class SomeComponent extends Component {&#xA; // Code goes here&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can define component class which name starts with lowercase letter, but when it&#39;s imported it should have capital letter. Here lowercase is fine:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class myComponent extends Component {&#xA;  render() {&#xA;    return &amp;lt;div /&amp;gt;&#xA;  }&#xA;}&#xA;&#xA;export default myComponent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While when imported in another file it should start with capital letter:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import MyComponent from &#39;./MyComponent&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;h4&gt;What are the exceptions on React component naming?&lt;/h4&gt; &lt;p&gt;The component names should start with an uppercase letter but there are few exceptions to this convention. The lowercase tag names with a dot (property accessors) are still considered as valid component names. For example, the below tag can be compiled to a valid component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;     render() {&#xA;          return (&#xA;            &amp;lt;obj.component/&amp;gt; // `React.createElement(obj.component)`&#xA;          )&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;88&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Are custom DOM attributes supported in React v16?&lt;/h3&gt; &lt;p&gt;Yes. In the past, React used to ignore unknown DOM attributes. If you wrote JSX with an attribute that React doesn&#39;t recognize, React would just skip it.&lt;/p&gt; &lt;p&gt;For example, let&#39;s take a look at the below attribute:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;div mycustomattribute={&#39;something&#39;} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Would render an empty div to the DOM with React v15:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In React v16 any unknown attributes will end up in the DOM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div mycustomattribute=&#39;something&#39; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is useful for supplying browser-specific non-standard attributes, trying new DOM APIs, and integrating with opinionated third-party libraries.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;89&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between constructor and getInitialState?&lt;/h3&gt; &lt;p&gt;You should initialize state in the constructor when using ES6 classes, and &lt;code&gt;getInitialState()&lt;/code&gt; method when using &lt;code&gt;React.createClass()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using ES6 classes:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;    this.state = { /* initial state */ }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const MyComponent = React.createClass({&#xA;  getInitialState() {&#xA;    return { /* initial state */ }&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;React.createClass()&lt;/code&gt; is deprecated and removed in React v16. Use plain JavaScript classes instead.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;90&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Can you force a component to re-render without calling setState?&lt;/h3&gt; &lt;p&gt;By default, when your component&#39;s state or props change, your component will re-render. If your &lt;code&gt;render()&lt;/code&gt; method depends on some other data, you can tell React that the component needs re-rendering by calling &lt;code&gt;forceUpdate()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;component.forceUpdate(callback)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is recommended to avoid all uses of &lt;code&gt;forceUpdate()&lt;/code&gt; and only read from &lt;code&gt;this.props&lt;/code&gt; and &lt;code&gt;this.state&lt;/code&gt; in &lt;code&gt;render()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;91&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;super()&lt;/code&gt; and &lt;code&gt;super(props)&lt;/code&gt; in React using ES6 classes?&lt;/h3&gt; &lt;p&gt;When you want to access &lt;code&gt;this.props&lt;/code&gt; in &lt;code&gt;constructor()&lt;/code&gt; then you should pass props to &lt;code&gt;super()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super(props)&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;    console.log(this.props) // { name: &#39;John&#39;, ... }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;super()&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super()&#xA;    console.log(this.props) // undefined&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Outside &lt;code&gt;constructor()&lt;/code&gt; both will display same value for &lt;code&gt;this.props&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;92&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to loop inside JSX?&lt;/h3&gt; &lt;p&gt;You can simply use &lt;code&gt;Array.prototype.map&lt;/code&gt; with ES6 &lt;em&gt;arrow function&lt;/em&gt; syntax.&lt;/p&gt; &lt;p&gt;For example, the &lt;code&gt;items&lt;/code&gt; array of objects is mapped into an array of components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;tbody&amp;gt;&#xA;  {items.map(item =&amp;gt; &amp;lt;SomeComponent key={item.id} name={item.name} /&amp;gt;)}&#xA;&amp;lt;/tbody&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can&#39;t iterate using &lt;code&gt;for&lt;/code&gt; loop:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;tbody&amp;gt;&#xA;  for (let i = 0; i &amp;lt; items.length; i++) {&#xA;    &amp;lt;SomeComponent key={items[i].id} name={items[i].name} /&amp;gt;&#xA;  }&#xA;&amp;lt;/tbody&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is because JSX tags are transpiled into &lt;em&gt;function calls&lt;/em&gt;, and you can&#39;t use statements inside expressions. This may change thanks to &lt;code&gt;do&lt;/code&gt; expressions which are &lt;em&gt;stage 1 proposal&lt;/em&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;93&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you access props in attribute quotes?&lt;/h3&gt; &lt;p&gt;React (or JSX) doesn&#39;t support variable interpolation inside an attribute value. The below representation won&#39;t work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;img className=&#39;image&#39; src=&#39;images/{this.props.image}&#39; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can put any JS expression inside curly braces as the entire attribute value. So the below expression works:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;img className=&#39;image&#39; src={&#39;images/&#39; + this.props.image} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Using &lt;em&gt;template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;img className=&#39;image&#39; src={`images/${this.props.image}`} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;94&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is React proptype array with shape?&lt;/h3&gt; &lt;p&gt;If you want to pass an array of objects to a component with a particular shape then use &lt;code&gt;React.PropTypes.shape()&lt;/code&gt; as an argument to &lt;code&gt;React.PropTypes.arrayOf()&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;ReactComponent.propTypes = {&#xA;  arrayWithShape: React.PropTypes.arrayOf(React.PropTypes.shape({&#xA;    color: React.PropTypes.string.isRequired,&#xA;    fontSize: React.PropTypes.number.isRequired&#xA;  })).isRequired&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;95&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to conditionally apply class attributes?&lt;/h3&gt; &lt;p&gt;You shouldn&#39;t use curly braces inside quotes because it is going to be evaluated as a string.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;div className=&#34;btn-panel {this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}&#34;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Instead you need to move curly braces outside (don&#39;t forget to include spaces between class names):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;div className={&#39;btn-panel &#39; + (this.props.visible ? &#39;show&#39; : &#39;hidden&#39;)}&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Template strings&lt;/em&gt; will also work:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;div className={`btn-panel ${this.props.visible ? &#39;show&#39; : &#39;hidden&#39;}`}&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;96&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between React and ReactDOM?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react&lt;/code&gt; package contains &lt;code&gt;React.createElement()&lt;/code&gt;, &lt;code&gt;React.Component&lt;/code&gt;, &lt;code&gt;React.Children&lt;/code&gt;, and other helpers related to elements and component classes. You can think of these as the isomorphic or universal helpers that you need to build components. The &lt;code&gt;react-dom&lt;/code&gt; package contains &lt;code&gt;ReactDOM.render()&lt;/code&gt;, and in &lt;code&gt;react-dom/server&lt;/code&gt; we have &lt;em&gt;server-side rendering&lt;/em&gt; support with &lt;code&gt;ReactDOMServer.renderToString()&lt;/code&gt; and &lt;code&gt;ReactDOMServer.renderToStaticMarkup()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;97&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why ReactDOM is separated from React?&lt;/h3&gt; &lt;p&gt;The React team worked on extracting all DOM-related features into a separate library called &lt;em&gt;ReactDOM&lt;/em&gt;. React v0.14 is the first release in which the libraries are split. By looking at some of the packages, &lt;code&gt;react-native&lt;/code&gt;, &lt;code&gt;react-art&lt;/code&gt;, &lt;code&gt;react-canvas&lt;/code&gt;, and &lt;code&gt;react-three&lt;/code&gt;, it has become clear that the beauty and essence of React has nothing to do with browsers or the DOM.&lt;/p&gt; &lt;p&gt;To build more environments that React can render to, React team planned to split the main React package into two: &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt;. This paves the way to writing components that can be shared between the web version of React and React Native.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;98&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use React label element?&lt;/h3&gt; &lt;p&gt;If you try to render a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element bound to a text input using the standard &lt;code&gt;for&lt;/code&gt; attribute, then it produces HTML missing that attribute and prints a warning to the console.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;label for={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;&#xA;&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since &lt;code&gt;for&lt;/code&gt; is a reserved keyword in JavaScript, use &lt;code&gt;htmlFor&lt;/code&gt; instead.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;label htmlFor={&#39;user&#39;}&amp;gt;{&#39;User&#39;}&amp;lt;/label&amp;gt;&#xA;&amp;lt;input type={&#39;text&#39;} id={&#39;user&#39;} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;99&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to combine multiple inline style objects?&lt;/h3&gt; &lt;p&gt;You can use &lt;em&gt;spread operator&lt;/em&gt; in regular React:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt; &amp;lt;button style={{...styles.panel.button, ...styles.panel.submitButton}}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you&#39;re using React Native then you can use the array notation:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;button style={[styles.panel.button, styles.panel.submitButton]}&amp;gt;{&#39;Submit&#39;}&amp;lt;/button&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;100&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to re-render the view when the browser is resized?&lt;/h3&gt; &lt;p&gt;You can listen to the &lt;code&gt;resize&lt;/code&gt; event in &lt;code&gt;componentDidMount()&lt;/code&gt; and then update the dimensions (&lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;). You should remove the listener in &lt;code&gt;componentWillUnmount()&lt;/code&gt; method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class WindowDimensions extends React.Component {&#xA;  constructor(props){&#xA;    super(props);&#xA;    this.updateDimensions = this.updateDimensions.bind(this);&#xA;  }&#xA;   &#xA;  componentWillMount() {&#xA;    this.updateDimensions()&#xA;  }&#xA;&#xA;  componentDidMount() {&#xA;    window.addEventListener(&#39;resize&#39;, this.updateDimensions)&#xA;  }&#xA;&#xA;  componentWillUnmount() {&#xA;    window.removeEventListener(&#39;resize&#39;, this.updateDimensions)&#xA;  }&#xA;&#xA;  updateDimensions() {&#xA;    this.setState({width: window.innerWidth, height: window.innerHeight})&#xA;  }&#xA;&#xA;  render() {&#xA;    return &amp;lt;span&amp;gt;{this.state.width} x {this.state.height}&amp;lt;/span&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;101&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;setState()&lt;/code&gt; and &lt;code&gt;replaceState()&lt;/code&gt; methods?&lt;/h3&gt; &lt;p&gt;When you use &lt;code&gt;setState()&lt;/code&gt; the current and previous states are merged. &lt;code&gt;replaceState()&lt;/code&gt; throws out the current state, and replaces it with only what you provide. Usually &lt;code&gt;setState()&lt;/code&gt; is used unless you really need to remove all previous keys for some reason. You can also set state to &lt;code&gt;false&lt;/code&gt;/&lt;code&gt;null&lt;/code&gt; in &lt;code&gt;setState()&lt;/code&gt; instead of using &lt;code&gt;replaceState()&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;102&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to listen to state changes?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;componentDidUpdate&lt;/code&gt; lifecycle method will be called when state changes. You can compare provided state and props values with current state and props to determine if something meaningful changed.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;componentDidUpdate(object prevProps, object prevState)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The previous releases of ReactJS also uses &lt;code&gt;componentWillUpdate(object nextProps, object nextState)&lt;/code&gt; for state changes. It has been deprecated in latest releases.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;103&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the recommended approach of removing an array element in React state?&lt;/h3&gt; &lt;p&gt;The better approach is to use &lt;code&gt;Array.prototype.filter()&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;For example, let&#39;s create a &lt;code&gt;removeItem()&lt;/code&gt; method for updating the state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;removeItem(index) {&#xA;  this.setState({&#xA;    data: this.state.data.filter((item, i) =&amp;gt; i !== index)&#xA;  })&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;104&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is it possible to use React without rendering HTML?&lt;/h3&gt; &lt;p&gt;It is possible with latest version (&amp;gt;=16.2). Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return false&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return null&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return []&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return &amp;lt;React.Fragment&amp;gt;&amp;lt;/React.Fragment&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA;  return &amp;lt;&amp;gt;&amp;lt;/&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Returning &lt;code&gt;undefined&lt;/code&gt; won&#39;t work.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;105&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to pretty print JSON with React?&lt;/h3&gt; &lt;p&gt;We can use &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; tag so that the formatting of the &lt;code&gt;JSON.stringify()&lt;/code&gt; is retained:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const data = { name: &#39;John&#39;, age: 42 }&#xA;&#xA;class User extends React.Component {&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;pre&amp;gt;&#xA;        {JSON.stringify(data, null, 2)}&#xA;      &amp;lt;/pre&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&#xA;React.render(&amp;lt;User /&amp;gt;, document.getElementById(&#39;container&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;106&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why you can&#39;t update props in React?&lt;/h3&gt; &lt;p&gt;The React philosophy is that props should be &lt;em&gt;immutable&lt;/em&gt; and &lt;em&gt;top-down&lt;/em&gt;. This means that a parent can send any prop values to a child, but the child can&#39;t modify received props.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;107&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to focus an input element on page load?&lt;/h3&gt; &lt;p&gt;You can do it by creating &lt;em&gt;ref&lt;/em&gt; for &lt;code&gt;input&lt;/code&gt; element and using it in &lt;code&gt;componentDidMount()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class App extends React.Component{&#xA;  componentDidMount() {&#xA;    this.nameInput.focus()&#xA;  }&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;div&amp;gt;&#xA;        &amp;lt;input&#xA;          defaultValue={&#39;Won\&#39;t focus&#39;}&#xA;        /&amp;gt;&#xA;        &amp;lt;input&#xA;          ref={(input) =&amp;gt; this.nameInput = input}&#xA;          defaultValue={&#39;Will focus&#39;}&#xA;        /&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&#xA;ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;app&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Also in Functional component (react 16.08 and above)&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React, {useEffect, useRef} from &#39;react&#39;;&#xA;&#xA;const App = () =&amp;gt; {&#xA;  const inputElRef = useRef(null)&#xA;  &#xA;  useEffect(()=&amp;gt;{&#xA;    inputElRef.current.focus()&#xA;  }, [])&#xA;  &#xA;  return(&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;input&#xA;        defaultValue={&#39;Won\&#39;t focus&#39;}&#xA;      /&amp;gt;&#xA;      &amp;lt;input&#xA;        ref={inputElRef}&#xA;        defaultValue={&#39;Will focus&#39;}&#xA;      /&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  )&#xA;}&#xA;&#xA;ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;app&#39;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;108&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the possible ways of updating objects in state?&lt;/h3&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with an object to merge with state:&lt;/strong&gt;&lt;/p&gt; &#xA;    &lt;ul&gt; &#xA;     &lt;li&gt; &lt;p&gt;Using &lt;code&gt;Object.assign()&lt;/code&gt; to create a copy of the object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const user = Object.assign({}, this.state.user, { age: 42 })&#xA;this.setState({ user })&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;     &lt;li&gt; &lt;p&gt;Using &lt;em&gt;spread operator&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const user = { ...this.state.user, age: 42 }&#xA;this.setState({ user })&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;    &lt;/ul&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Calling &lt;code&gt;setState()&lt;/code&gt; with a function:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;this.setState(prevState =&amp;gt; ({&#xA;  user: {&#xA;    ...prevState.user,&#xA;    age: 42&#xA;  }&#xA;}))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;110&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How can we find the version of React at runtime in the browser?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;React.version&lt;/code&gt; to get the version.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const REACT_VERSION = React.version&#xA;&#xA;ReactDOM.render(&#xA;  &amp;lt;div&amp;gt;{`React version: ${REACT_VERSION}`}&amp;lt;/div&amp;gt;,&#xA;  document.getElementById(&#39;app&#39;)&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;111&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the approaches to include polyfills in your &lt;code&gt;create-react-app&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are approaches to include polyfills in create-react-app,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Manual import from &lt;code&gt;core-js&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Create a file called (something like) &lt;code&gt;polyfills.js&lt;/code&gt; and import it into root &lt;code&gt;index.js&lt;/code&gt; file. Run &lt;code&gt;npm install core-js&lt;/code&gt; or &lt;code&gt;yarn add core-js&lt;/code&gt; and import your specific required features.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import &#39;core-js/fn/array/find&#39;&#xA;import &#39;core-js/fn/array/includes&#39;&#xA;import &#39;core-js/fn/number/is-nan&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using Polyfill service:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use the polyfill.io CDN to retrieve custom, browser-specific polyfills by adding this line to &lt;code&gt;index.html&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&#39;https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.includes&#39;&amp;gt;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above script we had to explicitly request the &lt;code&gt;Array.prototype.includes&lt;/code&gt; feature as it is not included in the default feature set.&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;112&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use https instead of http in create-react-app?&lt;/h3&gt; &lt;p&gt;You just need to use &lt;code&gt;HTTPS=true&lt;/code&gt; configuration. You can edit your &lt;code&gt;package.json&lt;/code&gt; scripts section:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;&#34;scripts&#34;: {&#xA;  &#34;start&#34;: &#34;set HTTPS=true &amp;amp;&amp;amp; react-scripts start&#34;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or just run &lt;code&gt;set HTTPS=true &amp;amp;&amp;amp; npm start&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;113&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to avoid using relative path imports in create-react-app?&lt;/h3&gt; &lt;p&gt;Create a file called &lt;code&gt;.env&lt;/code&gt; in the project root and write the import path:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;NODE_PATH=src/app&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;After that restart the development server. Now you should be able to import anything inside &lt;code&gt;src/app&lt;/code&gt; without relative paths.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;114&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to add Google Analytics for React Router?&lt;/h3&gt; &lt;p&gt;Add a listener on the &lt;code&gt;history&lt;/code&gt; object to record each page view:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;history.listen(function (location) {&#xA;  window.ga(&#39;set&#39;, &#39;page&#39;, location.pathname + location.search)&#xA;  window.ga(&#39;send&#39;, &#39;pageview&#39;, location.pathname + location.search)&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;115&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to update a component every second?&lt;/h3&gt; &lt;p&gt;You need to use &lt;code&gt;setInterval()&lt;/code&gt; to trigger the change, but you also need to clear the timer when the component unmounts to prevent errors and memory leaks.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;componentDidMount() {&#xA;  this.interval = setInterval(() =&amp;gt; this.setState({ time: Date.now() }), 1000)&#xA;}&#xA;&#xA;componentWillUnmount() {&#xA;  clearInterval(this.interval)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;116&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you apply vendor prefixes to inline styles in React?&lt;/h3&gt; &lt;p&gt;React &lt;em&gt;does not&lt;/em&gt; apply &lt;em&gt;vendor prefixes&lt;/em&gt; automatically. You need to add vendor prefixes manually.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;div style={{&#xA;  transform: &#39;rotate(90deg)&#39;,&#xA;  WebkitTransform: &#39;rotate(90deg)&#39;, // note the capital &#39;W&#39; here&#xA;  msTransform: &#39;rotate(90deg)&#39; // &#39;ms&#39; is the only lowercase vendor prefix&#xA;}} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;117&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to import and export components using React and ES6?&lt;/h3&gt; &lt;p&gt;You should use default for exporting the components&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React from &#39;react&#39;&#xA;import User from &#39;user&#39;&#xA;&#xA;export default class MyProfile extends React.Component {&#xA;  render(){&#xA;    return (&#xA;      &amp;lt;User type=&#34;customer&#34;&amp;gt;&#xA;        //...&#xA;      &amp;lt;/User&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;With the export specifier, the MyProfile is going to be the member and exported to this module and the same can be imported without mentioning the name in other components.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;119&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why is a component constructor called only once?&lt;/h3&gt; &lt;p&gt;React&#39;s &lt;em&gt;reconciliation&lt;/em&gt; algorithm assumes that without any information to the contrary, if a custom component appears in the same place on subsequent renders, it&#39;s the same component as before, so reuses the previous instance rather than creating a new one.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;120&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to define constants in React?&lt;/h3&gt; &lt;p&gt;You can use ES7 &lt;code&gt;static&lt;/code&gt; field to define constant.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  static DEFAULT_PAGINATION = 10&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;121&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to programmatically trigger click event in React?&lt;/h3&gt; &lt;p&gt;You could use the ref prop to acquire a reference to the underlying &lt;code&gt;HTMLInputElement&lt;/code&gt; object through a callback, store the reference as a class property, then use that reference to later trigger a click from your event handlers using the &lt;code&gt;HTMLElement.click&lt;/code&gt; method.&lt;/p&gt; &lt;p&gt;This can be done in two steps:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Create ref in render method:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;input ref={input =&amp;gt; this.inputElement = input} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Apply click event in your event handler:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;this.inputElement.click()&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;122&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is it possible to use async/await in plain React?&lt;/h3&gt; &lt;p&gt;If you want to use &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; in React, you will need &lt;em&gt;Babel&lt;/em&gt; and &lt;a href=&#34;https://babeljs.io/docs/en/babel-plugin-transform-async-to-generator&#34;&gt;transform-async-to-generator&lt;/a&gt; plugin. React Native ships with Babel and a set of transforms.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;123&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the common folder structures for React?&lt;/h3&gt; &lt;p&gt;There are two common practices for React project file structure.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by features or routes:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;One common way to structure projects is locate CSS, JS, and tests together, grouped by feature or route.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;common/&#xA;├─ Avatar.js&#xA;├─ Avatar.css&#xA;├─ APIUtils.js&#xA;└─ APIUtils.test.js&#xA;feed/&#xA;├─ index.js&#xA;├─ Feed.js&#xA;├─ Feed.css&#xA;├─ FeedStory.js&#xA;├─ FeedStory.test.js&#xA;└─ FeedAPI.js&#xA;profile/&#xA;├─ index.js&#xA;├─ Profile.js&#xA;├─ ProfileHeader.js&#xA;├─ ProfileHeader.css&#xA;└─ ProfileAPI.js&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Grouping by file type:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Another popular way to structure projects is to group similar files together.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;api/&#xA;├─ APIUtils.js&#xA;├─ APIUtils.test.js&#xA;├─ ProfileAPI.js&#xA;└─ UserAPI.js&#xA;components/&#xA;├─ Avatar.js&#xA;├─ Avatar.css&#xA;├─ Feed.js&#xA;├─ Feed.css&#xA;├─ FeedStory.js&#xA;├─ FeedStory.test.js&#xA;├─ Profile.js&#xA;├─ ProfileHeader.js&#xA;└─ ProfileHeader.css&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;124&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the popular packages for animation?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Transition Group&lt;/em&gt; and &lt;em&gt;React Motion&lt;/em&gt; are popular animation packages in React ecosystem.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;125&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the benefit of styles modules?&lt;/h3&gt; &lt;p&gt;It is recommended to avoid hard coding style values in components. Any values that are likely to be used across different UI components should be extracted into their own modules.&lt;/p&gt; &lt;p&gt;For example, these styles could be extracted into a separate component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export const colors = {&#xA;  white,&#xA;  black,&#xA;  blue&#xA;}&#xA;&#xA;export const space = [&#xA;  0,&#xA;  8,&#xA;  16,&#xA;  32,&#xA;  64&#xA;]&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then imported individually in other components:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { space, colors } from &#39;./styles&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;126&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the popular React-specific linters?&lt;/h3&gt; &lt;p&gt;ESLint is a popular JavaScript linter. There are plugins available that analyse specific code styles. One of the most common for React is an npm package called &lt;code&gt;eslint-plugin-react&lt;/code&gt;. By default, it will check a number of best practices, with rules checking things from keys in iterators to a complete set of prop types.&lt;/p&gt; &lt;p&gt;Another popular plugin is &lt;code&gt;eslint-plugin-jsx-a11y&lt;/code&gt;, which will help fix common issues with accessibility. As JSX offers slightly different syntax to regular HTML, issues with &lt;code&gt;alt&lt;/code&gt; text and &lt;code&gt;tabindex&lt;/code&gt;, for example, will not be picked up by regular plugins.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;127&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to make AJAX call and in which component lifecycle methods should I make an AJAX call?&lt;/h3&gt; &lt;p&gt;You can use AJAX libraries such as Axios, jQuery AJAX, and the browser built-in &lt;code&gt;fetch&lt;/code&gt;. You should fetch data in the &lt;code&gt;componentDidMount()&lt;/code&gt; lifecycle method. This is so you can use &lt;code&gt;setState()&lt;/code&gt; to update your component when the data is retrieved.&lt;/p&gt; &lt;p&gt;For example, the employees list fetched from API and set local state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super(props)&#xA;    this.state = {&#xA;      employees: [],&#xA;      error: null&#xA;    }&#xA;  }&#xA;&#xA;  componentDidMount() {&#xA;    fetch(&#39;https://api.example.com/items&#39;)&#xA;      .then(res =&amp;gt; res.json())&#xA;      .then(&#xA;        (result) =&amp;gt; {&#xA;          this.setState({&#xA;            employees: result.employees&#xA;          })&#xA;        },&#xA;        (error) =&amp;gt; {&#xA;          this.setState({ error })&#xA;        }&#xA;      )&#xA;  }&#xA;&#xA;  render() {&#xA;    const { error, employees } = this.state&#xA;    if (error) {&#xA;      return &amp;lt;div&amp;gt;Error: {error.message}&amp;lt;/div&amp;gt;;&#xA;    } else {&#xA;      return (&#xA;        &amp;lt;ul&amp;gt;&#xA;          {employees.map(employee =&amp;gt; (&#xA;            &amp;lt;li key={employee.name}&amp;gt;&#xA;              {employee.name}-{employee.experience}&#xA;            &amp;lt;/li&amp;gt;&#xA;          ))}&#xA;        &amp;lt;/ul&amp;gt;&#xA;      )&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;128&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are render props?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Render Props&lt;/strong&gt; is a simple technique for sharing code between components using a prop whose value is a function. The below component uses render prop which returns a React element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;DataProvider render={data =&amp;gt; (&#xA;  &amp;lt;h1&amp;gt;{`Hello ${data.target}`}&amp;lt;/h1&amp;gt;&#xA;)}/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Libraries such as React Router and DownShift are using this pattern.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;React Router&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;129&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is React Router?&lt;/h3&gt; &lt;p&gt;React Router is a powerful routing library built on top of React that helps you add new screens and flows to your application incredibly quickly, all while keeping the URL in sync with what&#39;s being displayed on the page.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;130&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How React Router is different from history library?&lt;/h3&gt; &lt;p&gt;React Router is a wrapper around the &lt;code&gt;history&lt;/code&gt; library which handles interaction with the browser&#39;s &lt;code&gt;window.history&lt;/code&gt; with its browser and hash histories. It also provides memory history which is useful for environments that don&#39;t have global history, such as mobile app development (React Native) and unit testing with Node.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;131&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components of React Router v4?&lt;/h3&gt; &lt;p&gt;React Router v4 provides below 3 &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; components:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;lt;HashRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;&amp;lt;MemoryRouter&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;The above components will create &lt;em&gt;browser&lt;/em&gt;, &lt;em&gt;hash&lt;/em&gt;, and &lt;em&gt;memory&lt;/em&gt; history instances. React Router v4 makes the properties and methods of the &lt;code&gt;history&lt;/code&gt; instance associated with your router available through the context in the &lt;code&gt;router&lt;/code&gt; object.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;132&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods of &lt;code&gt;history&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;A history instance has two methods for navigation purpose.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;If you think of the history as an array of visited locations, &lt;code&gt;push()&lt;/code&gt; will add a new location to the array and &lt;code&gt;replace()&lt;/code&gt; will replace the current location in the array with the new one.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;133&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you programmatically navigate using React Router v4?&lt;/h3&gt; &lt;p&gt;There are three different ways to achieve programmatic routing/navigation within components.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using the &lt;code&gt;withRouter()&lt;/code&gt; higher-order function:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;withRouter()&lt;/code&gt; higher-order function will inject the history object as a prop of the component. This object provides &lt;code&gt;push()&lt;/code&gt; and &lt;code&gt;replace()&lt;/code&gt; methods to avoid the usage of context.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { withRouter } from &#39;react-router-dom&#39; // this also works with &#39;react-router-native&#39;&#xA;&#xA;const Button = withRouter(({ history }) =&amp;gt; (&#xA;  &amp;lt;button&#xA;    type=&#39;button&#39;&#xA;    onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}&#xA;  &amp;gt;&#xA;    {&#39;Click Me!&#39;}&#xA;  &amp;lt;/button&amp;gt;&#xA;))&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component and render props pattern:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; component passes the same props as &lt;code&gt;withRouter()&lt;/code&gt;, so you will be able to access the history methods through the history prop.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Route } from &#39;react-router-dom&#39;&#xA;&#xA;const Button = () =&amp;gt; (&#xA;  &amp;lt;Route render={({ history }) =&amp;gt; (&#xA;    &amp;lt;button&#xA;      type=&#39;button&#39;&#xA;      onClick={() =&amp;gt; { history.push(&#39;/new-location&#39;) }}&#xA;    &amp;gt;&#xA;      {&#39;Click Me!&#39;}&#xA;    &amp;lt;/button&amp;gt;&#xA;  )} /&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using context:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This option is not recommended and treated as unstable API.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const Button = (props, context) =&amp;gt; (&#xA;  &amp;lt;button&#xA;    type=&#39;button&#39;&#xA;    onClick={() =&amp;gt; {&#xA;      context.history.push(&#39;/new-location&#39;)&#xA;    }}&#xA;  &amp;gt;&#xA;    {&#39;Click Me!&#39;}&#xA;  &amp;lt;/button&amp;gt;&#xA;)&#xA;&#xA;Button.contextTypes = {&#xA;  history: React.PropTypes.shape({&#xA;    push: React.PropTypes.func.isRequired&#xA;  })&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;134&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to get query parameters in React Router v4?&lt;/h3&gt; &lt;p&gt;The ability to parse query strings was taken out of React Router v4 because there have been user requests over the years to support different implementation. So the decision has been given to users to choose the implementation they like. The recommended approach is to use query strings library.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const queryString = require(&#39;query-string&#39;);&#xA;const parsed = queryString.parse(props.location.search);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also use &lt;code&gt;URLSearchParams&lt;/code&gt; if you want something native:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const params = new URLSearchParams(props.location.search)&#xA;const foo = params.get(&#39;name&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should use a &lt;em&gt;polyfill&lt;/em&gt; for IE11.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;135&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why you get &#34;Router may have only one child element&#34; warning?&lt;/h3&gt; &lt;p&gt;You have to wrap your Route&#39;s in a &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block because &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; is unique in that it renders a route exclusively.&lt;/p&gt; &lt;p&gt;At first you need to add &lt;code&gt;Switch&lt;/code&gt; to your imports:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { Switch, Router, Route } from &#39;react-router&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then define the routes within &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; block:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;Router&amp;gt;&#xA;  &amp;lt;Switch&amp;gt;&#xA;    &amp;lt;Route {/* ... */} /&amp;gt;&#xA;    &amp;lt;Route {/* ... */} /&amp;gt;&#xA;  &amp;lt;/Switch&amp;gt;&#xA;&amp;lt;/Router&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;136&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to pass params to &lt;code&gt;history.push&lt;/code&gt; method in React Router v4?&lt;/h3&gt; &lt;p&gt;While navigating you can pass props to the &lt;code&gt;history&lt;/code&gt; object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;this.props.history.push({&#xA;  pathname: &#39;/template&#39;,&#xA;  search: &#39;?name=sudheer&#39;,&#xA;  state: { detail: response.data }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;search&lt;/code&gt; property is used to pass query params in &lt;code&gt;push()&lt;/code&gt; method.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;137&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to implement &lt;em&gt;default&lt;/em&gt; or &lt;em&gt;NotFound&lt;/em&gt; page?&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;&amp;lt;Switch&amp;gt;&lt;/code&gt; renders the first child &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; that matches. A &lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt; with no path always matches. So you just need to simply drop path attribute as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;Switch&amp;gt;&#xA;  &amp;lt;Route exact path=&#34;/&#34; component={Home}/&amp;gt;&#xA;  &amp;lt;Route path=&#34;/user&#34; component={User}/&amp;gt;&#xA;  &amp;lt;Route component={NotFound} /&amp;gt;&#xA;&amp;lt;/Switch&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;138&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to get history on React Router v4?&lt;/h3&gt; &lt;p&gt;Below are the list of steps to get history object on React Router v4,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Create a module that exports a &lt;code&gt;history&lt;/code&gt; object and import this module across the project.&lt;/p&gt; &lt;p&gt;For example, create &lt;code&gt;history.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { createBrowserHistory } from &#39;history&#39;&#xA;&#xA;export default createBrowserHistory({&#xA;  /* pass a configuration object here if needed */&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;You should use the &lt;code&gt;&amp;lt;Router&amp;gt;&lt;/code&gt; component instead of built-in routers. Import the above &lt;code&gt;history.js&lt;/code&gt; inside &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { Router } from &#39;react-router-dom&#39;&#xA;import history from &#39;./history&#39;&#xA;import App from &#39;./App&#39;&#xA;&#xA;ReactDOM.render((&#xA;  &amp;lt;Router history={history}&amp;gt;&#xA;    &amp;lt;App /&amp;gt;&#xA;  &amp;lt;/Router&amp;gt;&#xA;), holder)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;You can also use push method of &lt;code&gt;history&lt;/code&gt; object similar to built-in history object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// some-other-file.js&#xA;import history from &#39;./history&#39;&#xA;&#xA;history.push(&#39;/go-here&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;139&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to perform automatic redirect after login?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;react-router&lt;/code&gt; package provides &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; component in React Router. Rendering a &lt;code&gt;&amp;lt;Redirect&amp;gt;&lt;/code&gt; will navigate to a new location. Like server-side redirects, the new location will override the current location in the history stack.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React, { Component } from &#39;react&#39;&#xA;import { Redirect } from &#39;react-router&#39;&#xA;&#xA;export default class LoginComponent extends Component {&#xA;  render() {&#xA;    if (this.state.isLoggedIn === true) {&#xA;      return &amp;lt;Redirect to=&#34;/your/redirect/page&#34; /&amp;gt;&#xA;    } else {&#xA;      return &amp;lt;div&amp;gt;{&#39;Login Please&#39;}&amp;lt;/div&amp;gt;&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;React Internationalization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;140&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;em&gt;React Intl&lt;/em&gt; library makes internalization in React straightforward, with off-the-shelf components and an API that can handle everything from formatting strings, dates, and numbers, to pluralization. React Intl is part of &lt;em&gt;FormatJS&lt;/em&gt; which provides bindings to React via its components and API.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;141&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the main features of React Intl?&lt;/h3&gt; &lt;p&gt;Below are the main features of React Intl,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Display numbers with separators.&lt;/li&gt; &#xA;   &lt;li&gt;Display dates and times correctly.&lt;/li&gt; &#xA;   &lt;li&gt;Display dates relative to &#34;now&#34;.&lt;/li&gt; &#xA;   &lt;li&gt;Pluralize labels in strings.&lt;/li&gt; &#xA;   &lt;li&gt;Support for 150+ languages.&lt;/li&gt; &#xA;   &lt;li&gt;Runs in the browser and Node.&lt;/li&gt; &#xA;   &lt;li&gt;Built on standards.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;142&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the two ways of formatting in React Intl?&lt;/h3&gt; &lt;p&gt;The library provides two ways to format strings, numbers, and dates:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using react components:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;FormattedMessage&#xA;  id={&#39;account&#39;}&#xA;  defaultMessage={&#39;The amount is less than minimum balance.&#39;}&#xA;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using an API:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const messages = defineMessages({&#xA;  accountMessage: {&#xA;    id: &#39;account&#39;,&#xA;    defaultMessage: &#39;The amount is less than minimum balance.&#39;,&#xA;  }&#xA;})&#xA;&#xA;formatMessage(messages.accountMessage)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;143&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;&amp;lt;FormattedMessage&amp;gt;&lt;/code&gt; as placeholder using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;&amp;lt;Formatted... /&amp;gt;&lt;/code&gt; components from &lt;code&gt;react-intl&lt;/code&gt; return elements, not plain text, so they can&#39;t be used for placeholders, alt text, etc. In that case, you should use lower level API &lt;code&gt;formatMessage()&lt;/code&gt;. You can inject the &lt;code&gt;intl&lt;/code&gt; object into your component using &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component and then format the message using &lt;code&gt;formatMessage()&lt;/code&gt; available on that object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React from &#39;react&#39;&#xA;import { injectIntl, intlShape } from &#39;react-intl&#39;&#xA;&#xA;const MyComponent = ({ intl }) =&amp;gt; {&#xA;  const placeholder = intl.formatMessage({id: &#39;messageId&#39;})&#xA;  return &amp;lt;input placeholder={placeholder} /&amp;gt;&#xA;}&#xA;&#xA;MyComponent.propTypes = {&#xA;  intl: intlShape.isRequired&#xA;}&#xA;&#xA;export default injectIntl(MyComponent)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;144&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to access current locale with React Intl?&lt;/h3&gt; &lt;p&gt;You can get the current locale in any component of your application using &lt;code&gt;injectIntl()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;&#xA;&#xA;const MyComponent = ({ intl }) =&amp;gt; (&#xA;  &amp;lt;div&amp;gt;{`The current locale is ${intl.locale}`}&amp;lt;/div&amp;gt;&#xA;)&#xA;&#xA;MyComponent.propTypes = {&#xA;  intl: intlShape.isRequired&#xA;}&#xA;&#xA;export default injectIntl(MyComponent)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;145&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to format date using React Intl?&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;injectIntl()&lt;/code&gt; higher-order component will give you access to the &lt;code&gt;formatDate()&lt;/code&gt; method via the props in your component. The method is used internally by instances of &lt;code&gt;FormattedDate&lt;/code&gt; and it returns the string representation of the formatted date.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { injectIntl, intlShape } from &#39;react-intl&#39;&#xA;&#xA;const stringDate = this.props.intl.formatDate(date, {&#xA;  year: &#39;numeric&#39;,&#xA;  month: &#39;numeric&#39;,&#xA;  day: &#39;numeric&#39;&#xA;})&#xA;&#xA;const MyComponent = ({intl}) =&amp;gt; (&#xA;  &amp;lt;div&amp;gt;{`The formatted date is ${stringDate}`}&amp;lt;/div&amp;gt;&#xA;)&#xA;&#xA;MyComponent.propTypes = {&#xA;  intl: intlShape.isRequired&#xA;}&#xA;&#xA;export default injectIntl(MyComponent)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;React Testing&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;146&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Shallow Renderer in React testing?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Shallow rendering&lt;/em&gt; is useful for writing unit test cases in React. It lets you render a component &lt;em&gt;one level deep&lt;/em&gt; and assert facts about what its render method returns, without worrying about the behavior of child components, which are not instantiated or rendered.&lt;/p&gt; &lt;p&gt;For example, if you have the following component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function MyComponent() {&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;&#xA;      &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Then you can assert as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import ShallowRenderer from &#39;react-test-renderer/shallow&#39;&#xA;&#xA;// in your test&#xA;const renderer = new ShallowRenderer()&#xA;renderer.render(&amp;lt;MyComponent /&amp;gt;)&#xA;&#xA;const result = renderer.getRenderOutput()&#xA;&#xA;expect(result.type).toBe(&#39;div&#39;)&#xA;expect(result.props.children).toEqual([&#xA;  &amp;lt;span className={&#39;heading&#39;}&amp;gt;{&#39;Title&#39;}&amp;lt;/span&amp;gt;,&#xA;  &amp;lt;span className={&#39;description&#39;}&amp;gt;{&#39;Description&#39;}&amp;lt;/span&amp;gt;&#xA;])&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;147&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is &lt;code&gt;TestRenderer&lt;/code&gt; package in React?&lt;/h3&gt; &lt;p&gt;This package provides a renderer that can be used to render components to pure JavaScript objects, without depending on the DOM or a native mobile environment. This package makes it easy to grab a snapshot of the platform view hierarchy (similar to a DOM tree) rendered by a ReactDOM or React Native without using a browser or &lt;code&gt;jsdom&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import TestRenderer from &#39;react-test-renderer&#39;&#xA;&#xA;const Link = ({page, children}) =&amp;gt; &amp;lt;a href={page}&amp;gt;{children}&amp;lt;/a&amp;gt;&#xA;&#xA;const testRenderer = TestRenderer.create(&#xA;  &amp;lt;Link page={&#39;https://www.facebook.com/&#39;}&amp;gt;{&#39;Facebook&#39;}&amp;lt;/Link&amp;gt;&#xA;)&#xA;&#xA;console.log(testRenderer.toJSON())&#xA;// {&#xA;//   type: &#39;a&#39;,&#xA;//   props: { href: &#39;https://www.facebook.com/&#39; },&#xA;//   children: [ &#39;Facebook&#39; ]&#xA;// }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;148&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of ReactTestUtils package?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;ReactTestUtils&lt;/em&gt; are provided in the &lt;code&gt;with-addons&lt;/code&gt; package and allow you to perform actions against a simulated DOM for the purpose of unit testing.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;149&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Jest?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Jest&lt;/em&gt; is a JavaScript unit testing framework created by Facebook based on Jasmine and provides automated mock creation and a &lt;code&gt;jsdom&lt;/code&gt; environment. It&#39;s often used for testing components.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;150&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the advantages of Jest over Jasmine?&lt;/h3&gt; &lt;p&gt;There are couple of advantages compared to Jasmine:&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt;Automatically finds tests to execute in your source code.&lt;/li&gt; &#xA;   &lt;li&gt;Automatically mocks dependencies when running your tests.&lt;/li&gt; &#xA;   &lt;li&gt;Allows you to test asynchronous code synchronously.&lt;/li&gt; &#xA;   &lt;li&gt;Runs your tests with a fake DOM implementation (via &lt;code&gt;jsdom&lt;/code&gt;) so that your tests can be run on the command line.&lt;/li&gt; &#xA;   &lt;li&gt;Runs tests in parallel processes so that they finish sooner.&lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;151&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Give a simple example of Jest test case&lt;/h3&gt; &lt;p&gt;Let&#39;s write a test for a function that adds two numbers in &lt;code&gt;sum.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const sum = (a, b) =&amp;gt; a + b&#xA;&#xA;export default sum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Create a file named &lt;code&gt;sum.test.js&lt;/code&gt; which contains actual test:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import sum from &#39;./sum&#39;&#xA;&#xA;test(&#39;adds 1 + 2 to equal 3&#39;, () =&amp;gt; {&#xA;  expect(sum(1, 2)).toBe(3)&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And then add the following section to your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{&#xA;  &#34;scripts&#34;: {&#xA;    &#34;test&#34;: &#34;jest&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Finally, run &lt;code&gt;yarn test&lt;/code&gt; or &lt;code&gt;npm test&lt;/code&gt; and Jest will print a result:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ yarn test&#xA;PASS ./sum.test.js&#xA;✓ adds 1 + 2 to equal 3 (2ms)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;React Redux&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;152&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is flux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flux&lt;/em&gt; is an &lt;em&gt;application design paradigm&lt;/em&gt; used as a replacement for the more traditional MVC pattern. It is not a framework or a library but a new kind of architecture that complements React and the concept of Unidirectional Data Flow. Facebook uses this pattern internally when working with React.&lt;/p&gt; &lt;p&gt;The workflow between dispatcher, stores and views components with distinct inputs and outputs as follows:&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/flux.png&#34; alt=&#34;flux&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;153&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux&lt;/em&gt; is a predictable state container for JavaScript apps based on the &lt;em&gt;Flux design pattern&lt;/em&gt;. Redux can be used together with React, or with any other view library. It is tiny (about 2kB) and has no dependencies.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;154&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the core principles of Redux?&lt;/h3&gt; &lt;p&gt;Redux follows three fundamental principles:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Single source of truth:&lt;/strong&gt; The state of your whole application is stored in an object tree within a single store. The single state tree makes it easier to keep track of changes over time and debug or inspect the application.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;State is read-only:&lt;/strong&gt; The only way to change the state is to emit an action, an object describing what happened. This ensures that neither the views nor the network callbacks will ever write directly to the state.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Changes are made with pure functions:&lt;/strong&gt; To specify how the state tree is transformed by actions, you write reducers. Reducers are just pure functions that take the previous state and an action as parameters, and return the next state.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;155&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the downsides of Redux compared to Flux?&lt;/h3&gt; &lt;p&gt;Instead of saying downsides we can say that there are few compromises of using Redux over Flux. Those are as follows:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;You will need to learn to avoid mutations:&lt;/strong&gt; Flux is un-opinionated about mutating data, but Redux doesn&#39;t like mutations and many packages complementary to Redux assume you never mutate the state. You can enforce this with dev-only packages like &lt;code&gt;redux-immutable-state-invariant&lt;/code&gt;, Immutable.js, or instructing your team to write non-mutating code.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;You&#39;re going to have to carefully pick your packages:&lt;/strong&gt; While Flux explicitly doesn&#39;t try to solve problems such as undo/redo, persistence, or forms, Redux has extension points such as middleware and store enhancers, and it has spawned a rich ecosystem.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;There is no nice Flow integration yet:&lt;/strong&gt; Flux currently lets you do very impressive static type checks which Redux doesn&#39;t support yet.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;156&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;mapStateToProps()&lt;/code&gt; is a utility which helps your component get updated state (which is updated by some other components):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const mapStateToProps = (state) =&amp;gt; {&#xA;  return {&#xA;    todos: getVisibleTodos(state.todos, state.visibilityFilter)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;code&gt;mapDispatchToProps()&lt;/code&gt; is a utility which will help your component to fire an action event (dispatching action which may cause change of application state):&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; {&#xA;  return {&#xA;    onTodoClick: (id) =&amp;gt; {&#xA;      dispatch(toggleTodo(id))&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;It is recommended to always use the “object shorthand” form for the &lt;code&gt;mapDispatchToProps&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Redux wraps it in another function that looks like (…args) =&amp;gt; dispatch(onTodoClick(…args)), and pass that wrapper function as a prop to your component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt; const mapDispatchToProps = ({&#xA;   onTodoClick&#xA; })&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;157&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Can I dispatch an action in reducer?&lt;/h3&gt; &lt;p&gt;Dispatching an action within a reducer is an &lt;strong&gt;anti-pattern&lt;/strong&gt;. Your reducer should be &lt;em&gt;without side effects&lt;/em&gt;, simply digesting the action payload and returning a new state object. Adding listeners and dispatching actions within the reducer can lead to chained actions and other side effects.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;158&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to access Redux store outside a component?&lt;/h3&gt; &lt;p&gt;You just need to export the store from the module where it created with &lt;code&gt;createStore()&lt;/code&gt;. Also, it shouldn&#39;t pollute the global window object.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;store = createStore(myReducer)&#xA;&#xA;export default store&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;159&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the drawbacks of MVW pattern?&lt;/h3&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;DOM manipulation is very expensive which causes applications to behave slow and inefficient.&lt;/li&gt; &#xA;   &lt;li&gt;Due to circular dependencies, a complicated model was created around models and views.&lt;/li&gt; &#xA;   &lt;li&gt;Lot of data changes happens for collaborative applications(like Google Docs).&lt;/li&gt; &#xA;   &lt;li&gt;No way to do undo (travel back in time) easily without adding so much extra code.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;160&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Are there any similarities between Redux and RxJS?&lt;/h3&gt; &lt;p&gt;These libraries are very different for very different purposes, but there are some vague similarities.&lt;/p&gt; &lt;p&gt;Redux is a tool for managing state throughout the application. It is usually used as an architecture for UIs. Think of it as an alternative to (half of) Angular. RxJS is a reactive programming library. It is usually used as a tool to accomplish asynchronous tasks in JavaScript. Think of it as an alternative to Promises. Redux uses the Reactive paradigm because the Store is reactive. The Store observes actions from a distance, and changes itself. RxJS also uses the Reactive paradigm, but instead of being an architecture, it gives you basic building blocks, Observables, to accomplish this pattern.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;161&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to dispatch an action on load?&lt;/h3&gt; &lt;p&gt;You can dispatch an action in &lt;code&gt;componentDidMount()&lt;/code&gt; method and in &lt;code&gt;render()&lt;/code&gt; method you can verify the data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class App extends Component {&#xA;  componentDidMount() {&#xA;    this.props.fetchData()&#xA;  }&#xA;&#xA;  render() {&#xA;    return this.props.isLoaded&#xA;      ? &amp;lt;div&amp;gt;{&#39;Loaded&#39;}&amp;lt;/div&amp;gt;&#xA;      : &amp;lt;div&amp;gt;{&#39;Not Loaded&#39;}&amp;lt;/div&amp;gt;&#xA;  }&#xA;}&#xA;&#xA;const mapStateToProps = (state) =&amp;gt; ({&#xA;  isLoaded: state.isLoaded&#xA;})&#xA;&#xA;const mapDispatchToProps = { fetchData }&#xA;&#xA;export default connect(mapStateToProps, mapDispatchToProps)(App)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;162&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use &lt;code&gt;connect()&lt;/code&gt; from React Redux?&lt;/h3&gt; &lt;p&gt;You need to follow two steps to use your store in your container:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use &lt;code&gt;mapStateToProps()&lt;/code&gt;:&lt;/strong&gt; It maps the state variables from your store to the props that you specify.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect the above props to your container:&lt;/strong&gt; The object returned by the &lt;code&gt;mapStateToProps&lt;/code&gt; function is connected to the container. You can import &lt;code&gt;connect()&lt;/code&gt; from &lt;code&gt;react-redux&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import React from &#39;react&#39;&#xA;import { connect } from &#39;react-redux&#39;&#xA;&#xA;class App extends React.Component {&#xA;  render() {&#xA;    return &amp;lt;div&amp;gt;{this.props.containerData}&amp;lt;/div&amp;gt;&#xA;  }&#xA;}&#xA;&#xA;function mapStateToProps(state) {&#xA;  return { containerData: state.data }&#xA;}&#xA;&#xA;export default connect(mapStateToProps)(App)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;163&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to reset state in Redux?&lt;/h3&gt; &lt;p&gt;You need to write a &lt;em&gt;root reducer&lt;/em&gt; in your application which delegate handling the action to the reducer generated by &lt;code&gt;combineReducers()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take &lt;code&gt;rootReducer()&lt;/code&gt; to return the initial state after &lt;code&gt;USER_LOGOUT&lt;/code&gt; action. As we know, reducers are supposed to return the initial state when they are called with &lt;code&gt;undefined&lt;/code&gt; as the first argument, no matter the action.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const appReducer = combineReducers({&#xA;  /* your app&#39;s top-level reducers */&#xA;})&#xA;&#xA;const rootReducer = (state, action) =&amp;gt; {&#xA;  if (action.type === &#39;USER_LOGOUT&#39;) {&#xA;    state = undefined&#xA;  }&#xA;&#xA;  return appReducer(state, action)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In case of using &lt;code&gt;redux-persist&lt;/code&gt;, you may also need to clean your storage. &lt;code&gt;redux-persist&lt;/code&gt; keeps a copy of your state in a storage engine. First, you need to import the appropriate storage engine and then, to parse the state before setting it to undefined and clean each storage state key.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const appReducer = combineReducers({&#xA;  /* your app&#39;s top-level reducers */&#xA;})&#xA;&#xA;const rootReducer = (state, action) =&amp;gt; {&#xA;  if (action.type === &#39;USER_LOGOUT&#39;) {&#xA;    Object.keys(state).forEach(key =&amp;gt; {&#xA;      storage.removeItem(`persist:${key}`)&#xA;    })&#xA;&#xA;    state = undefined&#xA;  }&#xA;&#xA;  return appReducer(state, action)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;164&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Whats the purpose of &lt;code&gt;at&lt;/code&gt; symbol in the Redux connect decorator?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;@&lt;/strong&gt; symbol is in fact a JavaScript expression used to signify decorators. &lt;em&gt;Decorators&lt;/em&gt; make it possible to annotate and modify classes and properties at design time.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example setting up Redux without and with a decorator.&lt;/p&gt; &#xA;  &lt;ul&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Without decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React from &#39;react&#39;&#xA;import * as actionCreators from &#39;./actionCreators&#39;&#xA;import { bindActionCreators } from &#39;redux&#39;&#xA;import { connect } from &#39;react-redux&#39;&#xA;&#xA;function mapStateToProps(state) {&#xA;  return { todos: state.todos }&#xA;}&#xA;&#xA;function mapDispatchToProps(dispatch) {&#xA;  return { actions: bindActionCreators(actionCreators, dispatch) }&#xA;}&#xA;&#xA;class MyApp extends React.Component {&#xA;  // ...define your main app here&#xA;}&#xA;&#xA;export default connect(mapStateToProps, mapDispatchToProps)(MyApp)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;With decorator:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React from &#39;react&#39;&#xA;import * as actionCreators from &#39;./actionCreators&#39;&#xA;import { bindActionCreators } from &#39;redux&#39;&#xA;import { connect } from &#39;react-redux&#39;&#xA;&#xA;function mapStateToProps(state) {&#xA;  return { todos: state.todos }&#xA;}&#xA;&#xA;function mapDispatchToProps(dispatch) {&#xA;  return { actions: bindActionCreators(actionCreators, dispatch) }&#xA;}&#xA;&#xA;@connect(mapStateToProps, mapDispatchToProps)&#xA;export default class MyApp extends React.Component {&#xA;  // ...define your main app here&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ul&gt; &lt;p&gt;The above examples are almost similar except the usage of decorator. The decorator syntax isn&#39;t built into any JavaScript runtimes yet, and is still experimental and subject to change. You can use babel for the decorators support.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;165&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between React context and React Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;strong&gt;Context&lt;/strong&gt; in your application directly and is going to be great for passing down data to deeply nested components which what it was designed for.&lt;/p&gt; &lt;p&gt;Whereas &lt;strong&gt;Redux&lt;/strong&gt; is much more powerful and provides a large number of features that the Context API doesn&#39;t provide. Also, React Redux uses context internally but it doesn&#39;t expose this fact in the public API.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;166&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why are Redux state functions called reducers?&lt;/h3&gt; &lt;p&gt;Reducers always return the accumulation of the state (based on all previous and current actions). Therefore, they act as a reducer of state. Each time a Redux reducer is called, the state and action are passed as parameters. This state is then reduced (or accumulated) based on the action, and then the next state is returned. You could &lt;em&gt;reduce&lt;/em&gt; a collection of actions and an initial state (of the store) on which to perform these actions to get the resulting final state.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;167&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to make AJAX request in Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;redux-thunk&lt;/code&gt; middleware which allows you to define async actions.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of fetching specific account as an AJAX call using &lt;em&gt;fetch API&lt;/em&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export function fetchAccount(id) {&#xA;  return dispatch =&amp;gt; {&#xA;    dispatch(setLoadingAccountState()) // Show a loading spinner&#xA;    fetch(`/account/${id}`, (response) =&amp;gt; {&#xA;      dispatch(doneFetchingAccount()) // Hide loading spinner&#xA;      if (response.status === 200) {&#xA;        dispatch(setAccount(response.json)) // Use a normal function to set the received state&#xA;      } else {&#xA;        dispatch(someError)&#xA;      }&#xA;    })&#xA;  }&#xA;}&#xA;&#xA;function setAccount(data) {&#xA; return { type: &#39;SET_Account&#39;, data: data }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;168&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Should I keep all component&#39;s state in Redux store?&lt;/h3&gt; &lt;p&gt;Keep your data in the Redux store, and the UI related state internally in the component.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;169&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the proper way to access Redux store?&lt;/h3&gt; &lt;p&gt;The best way to access your store in a component is to use the &lt;code&gt;connect()&lt;/code&gt; function, that creates a new component that wraps around your existing one. This pattern is called &lt;em&gt;Higher-Order Components&lt;/em&gt;, and is generally the preferred way of extending a component&#39;s functionality in React. This allows you to map state and action creators to your component, and have them passed in automatically as your store updates.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of &lt;code&gt;&amp;lt;FilterLink&amp;gt;&lt;/code&gt; component using connect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { connect } from &#39;react-redux&#39;&#xA;import { setVisibilityFilter } from &#39;../actions&#39;&#xA;import Link from &#39;../components/Link&#39;&#xA;&#xA;const mapStateToProps = (state, ownProps) =&amp;gt; ({&#xA;  active: ownProps.filter === state.visibilityFilter&#xA;})&#xA;&#xA;const mapDispatchToProps = (dispatch, ownProps) =&amp;gt; ({&#xA;  onClick: () =&amp;gt; dispatch(setVisibilityFilter(ownProps.filter))&#xA;})&#xA;&#xA;const FilterLink = connect(&#xA;  mapStateToProps,&#xA;  mapDispatchToProps&#xA;)(Link)&#xA;&#xA;export default FilterLink&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Due to it having quite a few performance optimizations and generally being less likely to cause bugs, the Redux developers almost always recommend using &lt;code&gt;connect()&lt;/code&gt; over accessing the store directly (using context API).&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent {&#xA;  someMethod() {&#xA;    doSomethingWith(this.context.store)&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;170&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between component and container in React Redux?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Component&lt;/strong&gt; is a class or function component that describes the presentational part of your application.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Container&lt;/strong&gt; is an informal term for a component that is connected to a Redux store. Containers &lt;em&gt;subscribe&lt;/em&gt; to Redux state updates and &lt;em&gt;dispatch&lt;/em&gt; actions, and they usually don&#39;t render DOM elements; they delegate rendering to presentational child components.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;171&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of the constants in Redux?&lt;/h3&gt; &lt;p&gt;Constants allows you to easily find all usages of that specific functionality across the project when you use an IDE. It also prevents you from introducing silly bugs caused by typos – in which case, you will get a &lt;code&gt;ReferenceError&lt;/code&gt; immediately.&lt;/p&gt; &lt;p&gt;Normally we will save them in a single file (&lt;code&gt;constants.js&lt;/code&gt; or &lt;code&gt;actionTypes.js&lt;/code&gt;).&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export const ADD_TODO = &#39;ADD_TODO&#39;&#xA;export const DELETE_TODO = &#39;DELETE_TODO&#39;&#xA;export const EDIT_TODO = &#39;EDIT_TODO&#39;&#xA;export const COMPLETE_TODO = &#39;COMPLETE_TODO&#39;&#xA;export const COMPLETE_ALL = &#39;COMPLETE_ALL&#39;&#xA;export const CLEAR_COMPLETED = &#39;CLEAR_COMPLETED&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In Redux, you use them in two places:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;During action creation:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s take &lt;code&gt;actions.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;;&#xA;&#xA;export function addTodo(text) {&#xA;  return { type: ADD_TODO, text }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;In reducers:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Let&#39;s create &lt;code&gt;reducer.js&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { ADD_TODO } from &#39;./actionTypes&#39;&#xA;&#xA;export default (state = [], action) =&amp;gt; {&#xA;  switch (action.type) {&#xA;    case ADD_TODO:&#xA;      return [&#xA;        ...state,&#xA;        {&#xA;          text: action.text,&#xA;          completed: false&#xA;        }&#xA;      ];&#xA;    default:&#xA;      return state&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;172&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the different ways to write &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;There are a few ways of binding &lt;em&gt;action creators&lt;/em&gt; to &lt;code&gt;dispatch()&lt;/code&gt; in &lt;code&gt;mapDispatchToProps()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Below are the possible options:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({&#xA; action: () =&amp;gt; dispatch(action())&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const mapDispatchToProps = (dispatch) =&amp;gt; ({&#xA; action: bindActionCreators(action, dispatch)&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const mapDispatchToProps = { action }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The third option is just a shorthand for the first one.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;173&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the use of the &lt;code&gt;ownProps&lt;/code&gt; parameter in &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;If the &lt;code&gt;ownProps&lt;/code&gt; parameter is specified, React Redux will pass the props that were passed to the component into your &lt;em&gt;connect&lt;/em&gt; functions. So, if you use a connected component:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import ConnectedComponent from &#39;./containers/ConnectedComponent&#39;;&#xA;&#xA;&amp;lt;ConnectedComponent user={&#39;john&#39;} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;ownProps&lt;/code&gt; inside your &lt;code&gt;mapStateToProps()&lt;/code&gt; and &lt;code&gt;mapDispatchToProps()&lt;/code&gt; functions will be an object:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{ user: &#39;john&#39; }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can use this object to decide what to return from those functions.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;174&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to structure Redux top level directories?&lt;/h3&gt; &lt;p&gt;Most of the applications has several top-level directories as below:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Components&lt;/strong&gt;: Used for &lt;em&gt;dumb&lt;/em&gt; components unaware of Redux.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Containers&lt;/strong&gt;: Used for &lt;em&gt;smart&lt;/em&gt; components connected to Redux.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt;: Used for all action creators, where file names correspond to part of the app.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Reducers&lt;/strong&gt;: Used for all reducers, where files name correspond to state key.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt;: Used for store initialization.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;This structure works well for small and medium size apps.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;175&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;redux-saga&lt;/code&gt; is a library that aims to make side effects (asynchronous things like data fetching and impure things like accessing the browser cache) in React/Redux applications easier and better.&lt;/p&gt; &lt;p&gt;It is available in NPM:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install --save redux-saga&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;176&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the mental model of redux-saga?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Saga&lt;/em&gt; is like a separate thread in your application, that&#39;s solely responsible for side effects. &lt;code&gt;redux-saga&lt;/code&gt; is a redux &lt;em&gt;middleware&lt;/em&gt;, which means this thread can be started, paused and cancelled from the main application with normal Redux actions, it has access to the full Redux application state and it can dispatch Redux actions as well.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;177&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; in redux-saga?&lt;/h3&gt; &lt;p&gt;Both &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;put()&lt;/code&gt; are effect creator functions. &lt;code&gt;call()&lt;/code&gt; function is used to create effect description, which instructs middleware to call the promise. &lt;code&gt;put()&lt;/code&gt; function creates an effect, which instructs middleware to dispatch an action to the store.&lt;/p&gt; &lt;p&gt;Let&#39;s take example of how these effects work for fetching particular user data.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function* fetchUserSaga(action) {&#xA;  // `call` function accepts rest arguments, which will be passed to `api.fetchUser` function.&#xA;  // Instructing middleware to call promise, it resolved value will be assigned to `userData` variable&#xA;  const userData = yield call(api.fetchUser, action.userId)&#xA;&#xA;  // Instructing middleware to dispatch corresponding action.&#xA;  yield put({&#xA;    type: &#39;FETCH_USER_SUCCESS&#39;,&#xA;    userData&#xA;  })&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;178&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Redux Thunk?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Thunk&lt;/em&gt; middleware allows you to write action creators that return a function instead of an action. The thunk can be used to delay the dispatch of an action, or to dispatch only if a certain condition is met. The inner function receives the store methods &lt;code&gt;dispatch()&lt;/code&gt; and &lt;code&gt;getState()&lt;/code&gt; as parameters.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;179&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the differences between &lt;code&gt;redux-saga&lt;/code&gt; and &lt;code&gt;redux-thunk&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;Both &lt;em&gt;Redux Thunk&lt;/em&gt; and &lt;em&gt;Redux Saga&lt;/em&gt; take care of dealing with side effects. In most of the scenarios, Thunk uses &lt;em&gt;Promises&lt;/em&gt; to deal with them, whereas Saga uses &lt;em&gt;Generators&lt;/em&gt;. Thunk is simple to use and Promises are familiar to many developers, Sagas/Generators are more powerful but you will need to learn them. But both middleware can coexist, so you can start with Thunks and introduce Sagas when/if you need them.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;180&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Redux DevTools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux DevTools&lt;/em&gt; is a live-editing time travel environment for Redux with hot reloading, action replay, and customizable UI. If you don&#39;t want to bother with installing Redux DevTools and integrating it into your project, consider using Redux DevTools Extension for Chrome and Firefox.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;181&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the features of Redux DevTools?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux DevTools are below,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Lets you inspect every state and action payload.&lt;/li&gt; &#xA;   &lt;li&gt;Lets you go back in time by &lt;em&gt;cancelling&lt;/em&gt; actions.&lt;/li&gt; &#xA;   &lt;li&gt;If you change the reducer code, each &lt;em&gt;staged&lt;/em&gt; action will be re-evaluated.&lt;/li&gt; &#xA;   &lt;li&gt;If the reducers throw, you will see during which action this happened, and what the error was.&lt;/li&gt; &#xA;   &lt;li&gt;With &lt;code&gt;persistState()&lt;/code&gt; store enhancer, you can persist debug sessions across page reloads.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;182&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are Redux selectors and why to use them?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Selectors&lt;/em&gt; are functions that take Redux state as an argument and return some data to pass to the component.&lt;/p&gt; &lt;p&gt;For example, to get user details from the state:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const getUserData = state =&amp;gt; state.user.data&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These selectors have two main benefits,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The selector can compute derived data, allowing Redux to store the minimal possible state&lt;/li&gt; &#xA;   &lt;li&gt;The selector is not recomputed unless one of its arguments changes&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;183&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Redux Form?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Redux Form&lt;/em&gt; works with React and Redux to enable a form in React to use Redux to store all of its state. Redux Form can be used with raw HTML5 inputs, but it also works very well with common UI frameworks like Material UI, React Widgets and React Bootstrap.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;184&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the main features of Redux Form?&lt;/h3&gt; &lt;p&gt;Some of the main features of Redux Form are:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Field values persistence via Redux store.&lt;/li&gt; &#xA;   &lt;li&gt;Validation (sync/async) and submission.&lt;/li&gt; &#xA;   &lt;li&gt;Formatting, parsing and normalization of field values.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;185&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to add multiple middlewares to Redux?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;applyMiddleware()&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, you can add &lt;code&gt;redux-thunk&lt;/code&gt; and &lt;code&gt;logger&lt;/code&gt; passing them as arguments to &lt;code&gt;applyMiddleware()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { createStore, applyMiddleware } from &#39;redux&#39;&#xA;const createStoreWithMiddleware = applyMiddleware(ReduxThunk, logger)(createStore)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;186&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to set initial state in Redux?&lt;/h3&gt; &lt;p&gt;You need to pass initial state as second argument to createStore:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const rootReducer = combineReducers({&#xA;  todos: todos,&#xA;  visibilityFilter: visibilityFilter&#xA;})&#xA;&#xA;const initialState = {&#xA;  todos: [{ id: 123, name: &#39;example&#39;, completed: false }]&#xA;}&#xA;&#xA;const store = createStore(&#xA;  rootReducer,&#xA;  initialState&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;187&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How Relay is different from Redux?&lt;/h3&gt; &lt;p&gt;Relay is similar to Redux in that they both use a single store. The main difference is that relay only manages state originated from the server, and all access to the state is used via &lt;em&gt;GraphQL&lt;/em&gt; queries (for reading data) and mutations (for changing data). Relay caches the data for you and optimizes data fetching for you, by fetching only changed data and nothing more.&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is an action in Redux?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Actions&lt;/em&gt; are plain JavaScript objects or payloads of information that send data from your application to your store. They are the only source of information for the store. Actions must have a type property that indicates the type of action being performed.&lt;/p&gt; &lt;p&gt;For example, let&#39;s take an action which represents adding a new todo item:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;{&#xA;  type: ADD_TODO,&#xA;  text: &#39;Add todo item&#39;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;React Native&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;188&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between React Native and React?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React&lt;/strong&gt; is a JavaScript library, supporting both front end web and being run on the server, for building user interfaces and web applications.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;React Native&lt;/strong&gt; is a mobile framework that compiles to native app components, allowing you to build native mobile applications (iOS, Android, and Windows) in JavaScript that allows you to use React to build your components, and implements React under the hood.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;189&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to test React Native apps?&lt;/h3&gt; &lt;p&gt;React Native can be tested only in mobile simulators like iOS and Android. You can run the app in your mobile using expo app (&lt;a href=&#34;https://expo.io&#34;&gt;https://expo.io&lt;/a&gt;) Where it syncs using QR code, your mobile and computer should be in same wireless network.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;190&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to do logging in React Native?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;console.warn&lt;/code&gt;, etc. As of React Native v0.29 you can simply run the following to see logs in the console:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;$ react-native log-ios&#xA;$ react-native log-android&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;191&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to debug your React Native?&lt;/h3&gt; &lt;p&gt;Follow the below steps to debug React Native app:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Run your application in the iOS simulator.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;code&gt;Command + D&lt;/code&gt; and a webpage should open up at &lt;code&gt;http://localhost:8081/debugger-ui&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Enable &lt;em&gt;Pause On Caught Exceptions&lt;/em&gt; for a better debugging experience.&lt;/li&gt; &#xA;   &lt;li&gt;Press &lt;code&gt;Command + Option + I&lt;/code&gt; to open the Chrome Developer tools, or open it via &lt;code&gt;View&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer&lt;/code&gt; -&amp;gt; &lt;code&gt;Developer Tools&lt;/code&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;You should now be able to debug as you normally would.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;React supported libraries &amp;amp; Integration&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;192&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is reselect and how it works?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Reselect&lt;/em&gt; is a &lt;strong&gt;selector library&lt;/strong&gt; (for Redux) which uses &lt;em&gt;memoization&lt;/em&gt; concept. It was originally written to compute derived data from Redux-like applications state, but it can&#39;t be tied to any architecture or library.&lt;/p&gt; &lt;p&gt;Reselect keeps a copy of the last inputs/outputs of the last call, and recomputes the result only if one of the inputs changes. If the the same inputs are provided twice in a row, Reselect returns the cached output. It&#39;s memoization and cache are fully customizable.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;193&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Flow?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;Flow&lt;/em&gt; is a &lt;em&gt;static type checker&lt;/em&gt; designed to find type errors in JavaScript. Flow types can express much more fine-grained distinctions than traditional type systems. For example, Flow helps you catch errors involving &lt;code&gt;null&lt;/code&gt;, unlike most type systems.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;194&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between Flow and PropTypes?&lt;/h3&gt; &lt;p&gt;Flow is a &lt;em&gt;static analysis tool&lt;/em&gt; (static checker) which uses a superset of the language, allowing you to add type annotations to all of your code and catch an entire class of bugs at compile time.&lt;/p&gt; &lt;p&gt;PropTypes is a &lt;em&gt;basic type checker&lt;/em&gt; (runtime checker) which has been patched onto React. It can&#39;t check anything other than the types of the props being passed to a given component. If you want more flexible typechecking for your entire project Flow/TypeScript are appropriate choices.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;195&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use Font Awesome icons in React?&lt;/h3&gt; &lt;p&gt;The below steps followed to include Font Awesome in React:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Install &lt;code&gt;font-awesome&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ npm install --save font-awesome&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Import &lt;code&gt;font-awesome&lt;/code&gt; in your &lt;code&gt;index.js&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import &#39;font-awesome/css/font-awesome.min.css&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Add Font Awesome classes in &lt;code&gt;className&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;render() {&#xA;  return &amp;lt;div&amp;gt;&amp;lt;i className={&#39;fa fa-spinner&#39;} /&amp;gt;&amp;lt;/div&amp;gt;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;196&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is React Dev Tools?&lt;/h3&gt; &lt;p&gt;&lt;em&gt;React Developer Tools&lt;/em&gt; let you inspect the component hierarchy, including component props and state. It exists both as a browser extension (for Chrome and Firefox), and as a standalone app (works with other environments including Safari, IE, and React Native).&lt;/p&gt; &lt;p&gt;The official extensions available for different browsers or environments.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Chrome extension&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Firefox extension&lt;/strong&gt;&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Standalone app&lt;/strong&gt; (Safari, React Native, etc)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;197&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why is DevTools not loading in Chrome for local files?&lt;/h3&gt; &lt;p&gt;If you opened a local HTML file in your browser (&lt;code&gt;file://...&lt;/code&gt;) then you must first open &lt;em&gt;Chrome Extensions&lt;/em&gt; and check &lt;code&gt;Allow access to file URLs&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;198&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use Polymer in React?&lt;/h3&gt; &lt;p&gt;You need to follow below steps to use Polymer in React,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;Create a Polymer element:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;../../bower_components/polymer/polymer.html&#39; /&amp;gt;&#xA;Polymer({&#xA;  is: &#39;calender-element&#39;,&#xA;  ready: function() {&#xA;    this.textContent = &#39;I am a calender&#39;&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Create the Polymer component HTML tag by importing it in a HTML document, e.g. import it in the &lt;code&gt;index.html&lt;/code&gt; of your React application:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&#39;import&#39; href=&#39;./src/polymer-components/calender-element.html&#39;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;Use that element in the JSX file:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React from &#39;react&#39;&#xA;&#xA;class MyComponent extends React.Component {&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;calender-element /&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&#xA;export default MyComponent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;199&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the advantages of React over Vue.js?&lt;/h3&gt; &lt;p&gt;React has the following advantages over Vue.js:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Gives more flexibility in large apps developing.&lt;/li&gt; &#xA;   &lt;li&gt;Easier to test.&lt;/li&gt; &#xA;   &lt;li&gt;Suitable for mobile apps creating.&lt;/li&gt; &#xA;   &lt;li&gt;More information and solutions available.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of advantages are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;200&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between React and Angular?&lt;/h3&gt; &lt;p&gt;Let&#39;s see the difference between React and Angular in a table format.&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;React&lt;/th&gt; &#xA;     &lt;th&gt;Angular&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;React is a library and has only the View layer&lt;/td&gt; &#xA;     &lt;td&gt;Angular is a framework and has complete MVC functionality&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;React handles rendering on the server side&lt;/td&gt; &#xA;     &lt;td&gt;AngularJS renders only on the client side but Angular 2 and above renders on the server side&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;React uses JSX that looks like HTML in JS which can be confusing&lt;/td&gt; &#xA;     &lt;td&gt;Angular follows the template approach for HTML, which makes code shorter and easy to understand&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;React Native, which is a React type to build mobile applications are faster and more stable&lt;/td&gt; &#xA;     &lt;td&gt;Ionic, Angular&#39;s mobile native app is relatively less stable and slower&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;In React, data flows only in one way and hence debugging is easy&lt;/td&gt; &#xA;     &lt;td&gt;In Angular, data flows both way i.e it has two-way data binding between children and parent and hence debugging is often difficult&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The above list of differences are purely opinionated and it vary based on the professional experience. But they are helpful as base parameters.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;201&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why React tab is not showing up in DevTools?&lt;/h3&gt; &lt;p&gt;When the page loads, &lt;em&gt;React DevTools&lt;/em&gt; sets a global named &lt;code&gt;__REACT_DEVTOOLS_GLOBAL_HOOK__&lt;/code&gt;, then React communicates with that hook during initialization. If the website is not using React or if React fails to communicate with DevTools then it won&#39;t show up the tab.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;202&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are Styled Components?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;styled-components&lt;/code&gt; is a JavaScript library for styling React applications. It removes the mapping between styles and components, and lets you write actual CSS augmented with JavaScript.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;203&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Give an example of Styled Components?&lt;/h3&gt; &lt;p&gt;Lets create &lt;code&gt;&amp;lt;Title&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Wrapper&amp;gt;&lt;/code&gt; components with specific styles for each.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React from &#39;react&#39;&#xA;import styled from &#39;styled-components&#39;&#xA;&#xA;// Create a &amp;lt;Title&amp;gt; component that renders an &amp;lt;h1&amp;gt; which is centered, red and sized at 1.5em&#xA;const Title = styled.h1`&#xA;  font-size: 1.5em;&#xA;  text-align: center;&#xA;  color: palevioletred;&#xA;`&#xA;&#xA;// Create a &amp;lt;Wrapper&amp;gt; component that renders a &amp;lt;section&amp;gt; with some padding and a papayawhip background&#xA;const Wrapper = styled.section`&#xA;  padding: 4em;&#xA;  background: papayawhip;&#xA;`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These two variables, &lt;code&gt;Title&lt;/code&gt; and &lt;code&gt;Wrapper&lt;/code&gt;, are now components that you can render just like any other react component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&amp;lt;Wrapper&amp;gt;&#xA;  &amp;lt;Title&amp;gt;{&#39;Lets start first styled component!&#39;}&amp;lt;/Title&amp;gt;&#xA;&amp;lt;/Wrapper&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;204&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Relay?&lt;/h3&gt; &lt;p&gt;Relay is a JavaScript framework for providing a data layer and client-server communication to web applications using the React view layer.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;205&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use TypeScript in &lt;code&gt;create-react-app&lt;/code&gt; application?&lt;/h3&gt; &lt;p&gt;Starting from react-scripts@2.1.0 or higher, there is a built-in support for typescript. i.e, &lt;code&gt;create-react-app&lt;/code&gt; now supports typescript natively. You can just pass &lt;code&gt;--typescript&lt;/code&gt; option as below&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx create-react-app my-app --typescript&#xA;&#xA;# or&#xA;&#xA;yarn create react-app my-app --typescript&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But for lower versions of react scripts, just supply &lt;code&gt;--scripts-version&lt;/code&gt; option as &lt;code&gt;react-scripts-ts&lt;/code&gt; while you create a new project. &lt;code&gt;react-scripts-ts&lt;/code&gt; is a set of adjustments to take the standard &lt;code&gt;create-react-app&lt;/code&gt; project pipeline and bring TypeScript into the mix.&lt;/p&gt; &lt;p&gt;Now the project layout should look like the following:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;my-app/&#xA;├─ .gitignore&#xA;├─ images.d.ts&#xA;├─ node_modules/&#xA;├─ public/&#xA;├─ src/&#xA;│  └─ ...&#xA;├─ package.json&#xA;├─ tsconfig.json&#xA;├─ tsconfig.prod.json&#xA;├─ tsconfig.test.json&#xA;└─ tslint.json&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Miscellaneous&lt;/h2&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;206&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the main features of Reselect library?&lt;/h3&gt; &lt;p&gt;Let&#39;s see the main features of Reselect library,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Selectors can compute derived data, allowing Redux to store the minimal possible state.&lt;/li&gt; &#xA;   &lt;li&gt;Selectors are efficient. A selector is not recomputed unless one of its arguments changes.&lt;/li&gt; &#xA;   &lt;li&gt;Selectors are composable. They can be used as input to other selectors.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h4&gt;Give an example of Reselect usage?&lt;/h4&gt; &lt;p&gt;Let&#39;s take calculations and different amounts of a shipment order with the simplified usage of Reselect:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { createSelector } from &#39;reselect&#39;&#xA;&#xA;const shopItemsSelector = state =&amp;gt; state.shop.items&#xA;const taxPercentSelector = state =&amp;gt; state.shop.taxPercent&#xA;&#xA;const subtotalSelector = createSelector(&#xA;  shopItemsSelector,&#xA;  items =&amp;gt; items.reduce((acc, item) =&amp;gt; acc + item.value, 0)&#xA;)&#xA;&#xA;const taxSelector = createSelector(&#xA;  subtotalSelector,&#xA;  taxPercentSelector,&#xA;  (subtotal, taxPercent) =&amp;gt; subtotal * (taxPercent / 100)&#xA;)&#xA;&#xA;export const totalSelector = createSelector(&#xA;  subtotalSelector,&#xA;  taxSelector,&#xA;  (subtotal, tax) =&amp;gt; ({ total: subtotal + tax })&#xA;)&#xA;&#xA;let exampleState = {&#xA;  shop: {&#xA;    taxPercent: 8,&#xA;    items: [&#xA;      { name: &#39;apple&#39;, value: 1.20 },&#xA;      { name: &#39;orange&#39;, value: 0.95 },&#xA;    ]&#xA;  }&#xA;}&#xA;&#xA;console.log(subtotalSelector(exampleState)) // 2.15&#xA;console.log(taxSelector(exampleState))      // 0.172&#xA;console.log(totalSelector(exampleState))    // { total: 2.322 }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;209&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Does the statics object work with ES6 classes in React?&lt;/h3&gt; &lt;p&gt;No, &lt;code&gt;statics&lt;/code&gt; only works with &lt;code&gt;React.createClass()&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;someComponent= React.createClass({&#xA;  statics: {&#xA;    someMethod: function() {&#xA;      // ..&#xA;    }&#xA;  }&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But you can write statics inside ES6+ classes as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Component extends React.Component {&#xA;  static propTypes = {&#xA;    // ...&#xA;  }&#xA;&#xA;  static someMethod() {&#xA;    // ...&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or writing them outside class as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Component extends React.Component {&#xA;   ....&#xA;}&#xA;&#xA;Component.propTypes = {...}&#xA;Component.someMethod = function(){....}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;210&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Can Redux only be used with React?&lt;/h3&gt; &lt;p&gt;Redux can be used as a data store for any UI layer. The most common usage is with React and React Native, but there are bindings available for Angular, Angular 2, Vue, Mithril, and more. Redux simply provides a subscription mechanism which can be used by any other code.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;211&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Do you need to have a particular build tool to use Redux?&lt;/h3&gt; &lt;p&gt;Redux is originally written in ES6 and transpiled for production into ES5 with Webpack and Babel. You should be able to use it regardless of your JavaScript build process. Redux also offers a UMD build that can be used directly without any build process at all.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;212&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How Redux Form &lt;code&gt;initialValues&lt;/code&gt; get updated from state?&lt;/h3&gt; &lt;p&gt;You need to add &lt;code&gt;enableReinitialize : true&lt;/code&gt; setting.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const InitializeFromStateForm = reduxForm({&#xA;  form: &#39;initializeFromState&#39;,&#xA;  enableReinitialize : true&#xA;})(UserEdit)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If your &lt;code&gt;initialValues&lt;/code&gt; prop gets updated, your form will update too.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;213&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How React PropTypes allow different types for one prop?&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;oneOfType()&lt;/code&gt; method of &lt;code&gt;PropTypes&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, the height property can be defined with either &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; type as below:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Component.propTypes = {&#xA;  size: PropTypes.oneOfType([&#xA;    PropTypes.string,&#xA;    PropTypes.number&#xA;  ])&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;214&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Can I import an SVG file as react component?&lt;/h3&gt; &lt;p&gt;You can import SVG directly as component instead of loading it as a file. This feature is available with &lt;code&gt;react-scripts@2.0.0&lt;/code&gt; and higher.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { ReactComponent as Logo } from &#39;./logo.svg&#39;&#xA;&#xA;const App = () =&amp;gt; (&#xA;  &amp;lt;div&amp;gt;&#xA;    {/* Logo is an actual react component */}&#xA;    &amp;lt;Logo /&amp;gt;&#xA;  &amp;lt;/div&amp;gt;&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Don&#39;t forget about the curly braces in the import.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;215&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why are inline ref callbacks or functions not recommended?&lt;/h3&gt; &lt;p&gt;If the ref callback is defined as an inline function, it will get called twice during updates, first with null and then again with the DOM element. This is because a new instance of the function is created with each render, so React needs to clear the old ref and set up the new one.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class UserForm extends Component {&#xA;  handleSubmit = () =&amp;gt; {&#xA;    console.log(&#34;Input Value is: &#34;, this.input.value)&#xA;  }&#xA;&#xA;&#xA;  render () {&#xA;   return (&#xA;     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;&#xA;       &amp;lt;input&#xA;         type=&#39;text&#39;&#xA;         ref={(input) =&amp;gt; this.input = input} /&amp;gt; // Access DOM input in handle submit&#xA;       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;&#xA;     &amp;lt;/form&amp;gt;&#xA;   )&#xA; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But our expectation is for the ref callback to get called once, when the component mounts. One quick fix is to use the ES7 class property syntax to define the function&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class UserForm extends Component {&#xA; handleSubmit = () =&amp;gt; {&#xA;   console.log(&#34;Input Value is: &#34;, this.input.value)&#xA; }&#xA;&#xA; setSearchInput = (input) =&amp;gt; {&#xA;   this.input = input&#xA; }&#xA;&#xA; render () {&#xA;   return (&#xA;     &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;&#xA;       &amp;lt;input&#xA;         type=&#39;text&#39;&#xA;         ref={this.setSearchInput} /&amp;gt; // Access DOM input in handle submit&#xA;       &amp;lt;button type=&#39;submit&#39;&amp;gt;Submit&amp;lt;/button&amp;gt;&#xA;     &amp;lt;/form&amp;gt;&#xA;   )&#xA; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;pre&gt;&lt;code&gt;**Note:** In React v16.3,&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;216&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is render hijacking in react?&lt;/h3&gt; &lt;p&gt;The concept of render hijacking is the ability to control what a component will output from another component. It means that you decorate your component by wrapping it into a Higher-Order component. By wrapping, you can inject additional props or make other changes, which can cause changing logic of rendering. It does not actually enable hijacking, but by using HOC you make your component behave differently.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;217&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are HOC factory implementations?&lt;/h3&gt; &lt;p&gt;There are two main ways of implementing HOCs in React.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Props Proxy (PP) and&lt;/li&gt; &#xA;   &lt;li&gt;Inheritance Inversion (II).&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;But they follow different approaches for manipulating the &lt;em&gt;WrappedComponent&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Props Proxy&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the render method of the HOC returns a React Element of the type of the WrappedComponent. We also pass through the props that the HOC receives, hence the name &lt;strong&gt;Props Proxy&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;&#xA;function ppHOC(WrappedComponent) {&#xA; return class PP extends React.Component {&#xA;   render() {&#xA;     return &amp;lt;WrappedComponent {...this.props}/&amp;gt;&#xA;   }&#xA; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Inheritance Inversion&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this approach, the returned HOC class (Enhancer) extends the WrappedComponent. It is called Inheritance Inversion because instead of the WrappedComponent extending some Enhancer class, it is passively extended by the Enhancer. In this way the relationship between them seems &lt;strong&gt;inverse&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;function iiHOC(WrappedComponent) {&#xA; return class Enhancer extends WrappedComponent {&#xA;   render() {&#xA;     return super.render()&#xA;   }&#xA; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;218&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to pass numbers to React component?&lt;/h3&gt; &lt;p&gt;You should be passing the numbers via curly braces({}) where as strings in quotes&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;   React.render(&amp;lt;User age={30} department={&#34;IT&#34;} /&amp;gt;, document.getElementById(&#39;container&#39;));&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;219&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Do I need to keep all my state into Redux? Should I ever use react internal state?&lt;/h3&gt; &lt;p&gt;It is up to the developer&#39;s decision, i.e., it is developer&#39;s job to determine what kinds of state make up your application, and where each piece of state should live. Some users prefer to keep every single piece of data in Redux, to maintain a fully serializable and controlled version of their application at all times. Others prefer to keep non-critical or UI state, such as “is this dropdown currently open”, inside a component&#39;s internal state.&lt;/p&gt; &lt;p&gt;Below are the thumb rules to determine what kind of data should be put into Redux&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Do other parts of the application care about this data?&lt;/li&gt; &#xA;   &lt;li&gt;Do you need to be able to create further derived data based on this original data?&lt;/li&gt; &#xA;   &lt;li&gt;Is the same data being used to drive multiple components?&lt;/li&gt; &#xA;   &lt;li&gt;Is there value to you in being able to restore this state to a given point in time (ie, time travel debugging)?&lt;/li&gt; &#xA;   &lt;li&gt;Do you want to cache the data (i.e, use what&#39;s in state if it&#39;s already there instead of re-requesting it)?&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;220&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of registerServiceWorker in React?&lt;/h3&gt; &lt;p&gt;React creates a service worker for you without any configuration by default. The service worker is a web API that helps you cache your assets and other files so that when the user is offline or on a slow network, he/she can still see results on the screen, as such, it helps you build a better user experience, that&#39;s what you should know about service worker for now. It&#39;s all about adding offline capabilities to your site.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;   import React from &#39;react&#39;;&#xA;   import ReactDOM from &#39;react-dom&#39;;&#xA;   import App from &#39;./App&#39;;&#xA;   import registerServiceWorker from &#39;./registerServiceWorker&#39;;&#xA;&#xA;   ReactDOM.render(&amp;lt;App /&amp;gt;, document.getElementById(&#39;root&#39;));&#xA;   registerServiceWorker();&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;221&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is React memo function?&lt;/h3&gt; &lt;p&gt;Class components can be restricted from re-rendering when their input props are the same using &lt;strong&gt;PureComponent or shouldComponentUpdate&lt;/strong&gt;. Now you can do the same with function components by wrapping them in &lt;strong&gt;React.memo&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const MyComponent = React.memo(function MyComponent(props) {&#xA; /* only rerenders if props change */&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;222&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is React lazy function?&lt;/h3&gt; The &lt;code&gt;React.lazy&lt;/code&gt; function lets you render a dynamic import as a regular component. It will automatically load the bundle containing the &lt;code&gt;OtherComponent&lt;/code&gt; when the component gets rendered. This must return a Promise which resolves to a module with a default export containing a React component. &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));&#xA;&#xA;function MyComponent() {&#xA; return (&#xA;   &amp;lt;div&amp;gt;&#xA;     &amp;lt;OtherComponent /&amp;gt;&#xA;   &amp;lt;/div&amp;gt;&#xA; );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;React.lazy&lt;/code&gt; and &lt;code&gt;Suspense&lt;/code&gt; is not yet available for server-side rendering. If you want to do code-splitting in a server rendered app, we still recommend React Loadable.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;223&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to prevent unnecessary updates using setState?&lt;/h3&gt; &lt;p&gt;You can compare the current value of the state with an existing state value and decide whether to rerender the page or not. If the values are the same then you need to return &lt;strong&gt;null&lt;/strong&gt; to stop re-rendering otherwise return the latest state value.&lt;/p&gt; &lt;p&gt;For example, the user profile information is conditionally rendered as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;getUserProfile = user =&amp;gt; {&#xA;  const latestAddress = user.address;&#xA;  this.setState(state =&amp;gt; {&#xA;    if (state.address === latestAddress) {&#xA;      return null;&#xA;    } else {&#xA;      return { title: latestAddress };&#xA;    }&#xA;  });&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;224&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you render Array, Strings and Numbers in React 16 Version?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Arrays&lt;/strong&gt;: Unlike older releases, you don&#39;t need to make sure &lt;strong&gt;render&lt;/strong&gt; method return a single element in React16. You are able to return multiple sibling elements without a wrapping element by returning an array.&lt;/p&gt; &lt;p&gt;For example, let us take the below list of developers,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const ReactJSDevs = () =&amp;gt; {&#xA;  return [&#xA;    &amp;lt;li key=&#34;1&#34;&amp;gt;John&amp;lt;/li&amp;gt;,&#xA;    &amp;lt;li key=&#34;2&#34;&amp;gt;Jackie&amp;lt;/li&amp;gt;,&#xA;    &amp;lt;li key=&#34;3&#34;&amp;gt;Jordan&amp;lt;/li&amp;gt;&#xA;  ];&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can also merge this array of items in another array component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;const JSDevs = () =&amp;gt; {&#xA;  return (&#xA;    &amp;lt;ul&amp;gt;&#xA;      &amp;lt;li&amp;gt;Brad&amp;lt;/li&amp;gt;&#xA;      &amp;lt;li&amp;gt;Brodge&amp;lt;/li&amp;gt;&#xA;      &amp;lt;ReactJSDevs/&amp;gt;&#xA;      &amp;lt;li&amp;gt;Brandon&amp;lt;/li&amp;gt;&#xA;    &amp;lt;/ul&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Strings and Numbers:&lt;/strong&gt; You can also return string and number type from the render method.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;render() {&#xA; return &#39;Welcome to ReactJS questions&#39;;&#xA;}&#xA;// Number&#xA;render() {&#xA; return 2018;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;225&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to use class field declarations syntax in React classes?&lt;/h3&gt; &lt;p&gt;React Class Components can be made much more concise using the class field declarations. You can initialize the local state without using the constructor and declare class methods by using arrow functions without the extra need to bind them.&lt;/p&gt; &lt;p&gt;Let&#39;s take a counter example to demonstrate class field declarations for state without using constructor and methods without binding,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;class Counter extends Component {&#xA;  state = { value: 0 };&#xA;&#xA;  handleIncrement = () =&amp;gt; {&#xA;    this.setState(prevState =&amp;gt; ({&#xA;      value: prevState.value + 1&#xA;    }));&#xA;  };&#xA;&#xA;  handleDecrement = () =&amp;gt; {&#xA;    this.setState(prevState =&amp;gt; ({&#xA;      value: prevState.value - 1&#xA;    }));&#xA;  };&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;div&amp;gt;&#xA;        {this.state.value}&#xA;&#xA;        &amp;lt;button onClick={this.handleIncrement}&amp;gt;+&amp;lt;/button&amp;gt;&#xA;        &amp;lt;button onClick={this.handleDecrement}&amp;gt;-&amp;lt;/button&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    )&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;226&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are hooks?&lt;/h3&gt; &lt;p&gt;Hooks is a new feature(React 16.8) that lets you use state and other React features without writing a class.&lt;/p&gt; &lt;p&gt;Let&#39;s see an example of useState hook:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-jsx&#34;&gt;import { useState } from &#39;react&#39;;&#xA;&#xA;function Example() {&#xA;  // Declare a new state variable, which we&#39;ll call &#34;count&#34;&#xA;  const [count, setCount] = useState(0);&#xA;&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;p&amp;gt;You clicked {count} times&amp;lt;/p&amp;gt;&#xA;      &amp;lt;button onClick={() =&amp;gt; setCount(count + 1)}&amp;gt;&#xA;        Click me&#xA;      &amp;lt;/button&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;227&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What rules need to be followed for hooks?&lt;/h3&gt; &lt;p&gt;You need to follow two rules in order to use hooks,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Call Hooks only at the top level of your react functions. i.e, You shouldn’t call Hooks inside loops, conditions, or nested functions. This will ensure that Hooks are called in the same order each time a component renders and it preserves the state of Hooks between multiple useState and useEffect calls.&lt;/li&gt; &#xA;   &lt;li&gt;Call Hooks from React Functions only. i.e, You shouldn’t call Hooks from regular JavaScript functions.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;228&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to ensure hooks followed the rules in your project?&lt;/h3&gt; React team released an ESLint plugin called &lt;strong&gt;eslint-plugin-react-hooks&lt;/strong&gt; that enforces these two rules. You can add this plugin to your project using the below command, &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;npm install eslint-plugin-react-hooks@next&#xA;&lt;/code&gt;&lt;/pre&gt; And apply the below config in your ESLint config file, &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Your ESLint configuration&#xA;{&#xA;  &#34;plugins&#34;: [&#xA;    // ...&#xA;    &#34;react-hooks&#34;&#xA;  ],&#xA;  &#34;rules&#34;: {&#xA;    // ...&#xA;    &#34;react-hooks/rules-of-hooks&#34;: &#34;error&#34;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;strong&gt;Note:&lt;/strong&gt; This plugin is intended to use in Create React App by default.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;229&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the differences between Flux and Redux?&lt;/h3&gt; &lt;p&gt;Below are the major differences between Flux and Redux&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Flux&lt;/th&gt; &#xA;     &lt;th&gt;Redux&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;State is mutable&lt;/td&gt; &#xA;     &lt;td&gt;State is immutable&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;The Store contains both state and change logic&lt;/td&gt; &#xA;     &lt;td&gt;The Store and change logic are separate&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;There are multiple stores exist&lt;/td&gt; &#xA;     &lt;td&gt;There is only one store exist&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;All the stores are disconnected and flat&lt;/td&gt; &#xA;     &lt;td&gt;Single store with hierarchical reducers&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;It has a singleton dispatcher&lt;/td&gt; &#xA;     &lt;td&gt;There is no concept of dispatcher&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;React components subscribe to the store&lt;/td&gt; &#xA;     &lt;td&gt;Container components uses connect function&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;230&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the benefits of React Router V4?&lt;/h3&gt; &lt;p&gt;Below are the main benefits of React Router V4 module,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;In React Router v4(version 4), the API is completely about components. A router can be visualized as a single component(&lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt;) which wraps specific child router components(&lt;code&gt;&amp;lt;Route&amp;gt;&lt;/code&gt;).&lt;/li&gt; &#xA;   &lt;li&gt;You don&#39;t need to manually set history. The router module will take care history by wrapping routes with &lt;code&gt;&amp;lt;BrowserRouter&amp;gt;&lt;/code&gt; component.&lt;/li&gt; &#xA;   &lt;li&gt;The application size is reduced by adding only the specific router module(Web, core, or native)&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;231&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Can you describe about componentDidCatch lifecycle method signature?&lt;/h3&gt; &lt;p&gt;The &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycle method is invoked after an error has been thrown by a descendant component. The method receives two parameters,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;error: - The error object which was thrown&lt;/li&gt; &#xA;   &lt;li&gt;info: - An object with a componentStack key contains the information about which component threw the error.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;The method structure would be as follows&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;componentDidCatch(error, info)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;232&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;In which scenarios error boundaries do not catch errors?&lt;/h3&gt; &lt;p&gt;Below are the cases in which error boundaries doesn&#39;t work,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Inside Event handlers&lt;/li&gt; &#xA;   &lt;li&gt;Asynchronous code using &lt;strong&gt;setTimeout or requestAnimationFrame&lt;/strong&gt; callbacks&lt;/li&gt; &#xA;   &lt;li&gt;During Server side rendering&lt;/li&gt; &#xA;   &lt;li&gt;When errors thrown in the error boundary code itself&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;233&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why do you not need error boundaries for event handlers?&lt;/h3&gt; &lt;p&gt;Error boundaries do not catch errors inside event handlers.&lt;/p&gt; &lt;p&gt;React doesn’t need error boundaries to recover from errors in event handlers. Unlike the render method and lifecycle methods, the event handlers don’t happen during rendering. So if they throw, React still knows what to display on the screen.&lt;/p&gt; &lt;p&gt;If you need to catch an error inside an event handler, use the regular JavaScript try / catch statement:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyComponent extends React.Component {&#xA;  constructor(props) {&#xA;    super(props);&#xA;    this.state = { error: null };&#xA;    this.handleClick = this.handleClick.bind(this);&#xA;  }&#xA;&#xA;  handleClick() {&#xA;    try {&#xA;      // Do something that could throw&#xA;    } catch (error) {&#xA;      this.setState({ error });&#xA;    }&#xA;  }&#xA;&#xA;  render() {&#xA;    if (this.state.error) {&#xA;      return &amp;lt;h1&amp;gt;Caught an error.&amp;lt;/h1&amp;gt;&#xA;    }&#xA;    return &amp;lt;button onClick={this.handleClick}&amp;gt;Click Me&amp;lt;/button&amp;gt;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note that the above example is demonstrating regular JavaScript behavior and doesn’t use error boundaries.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;234&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between try catch block and error boundaries?&lt;/h3&gt; &lt;p&gt;Try catch block works with imperative code whereas error boundaries are meant for declarative code to render on the screen.&lt;/p&gt; &lt;p&gt;For example, the try catch block used for below imperative code&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;try {&#xA;  showButton();&#xA;} catch (error) {&#xA;  // ...&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas error boundaries wrap declarative code as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;ErrorBoundary&amp;gt;&#xA;  &amp;lt;MyComponent /&amp;gt;&#xA;&amp;lt;/ErrorBoundary&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;So if an error occurs in a &lt;strong&gt;componentDidUpdate&lt;/strong&gt; method caused by a &lt;strong&gt;setState&lt;/strong&gt; somewhere deep in the tree, it will still correctly propagate to the closest error boundary.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;235&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the behavior of uncaught errors in react 16?&lt;/h3&gt; In React 16, errors that were not caught by any error boundary will result in unmounting of the whole React component tree. The reason behind this decision is that it is worse to leave corrupted UI in place than to completely remove it. For example, it is worse for a payments app to display a wrong amount than to render nothing.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;236&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the proper placement for error boundaries?&lt;/h3&gt; The granularity of error boundaries usage is up to the developer based on project needs. You can follow either of these approaches, &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;You can wrap top-level route components to display a generic error message for the entire application.&lt;/li&gt; &#xA;   &lt;li&gt;You can also wrap individual components in an error boundary to protect them from crashing the rest of the application.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;237&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the benefit of component stack trace from error boundary?&lt;/h3&gt; &lt;p&gt;Apart from error messages and javascript stack, React16 will display the component stack trace with file names and line numbers using error boundary concept.&lt;/p&gt; &lt;p&gt;For example, BuggyCounter component displays the component stack trace as below,&lt;/p&gt; &lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/images/error_boundary.png&#34; alt=&#34;stacktrace&#34;&gt;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;238&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the required method to be defined for a class component?&lt;/h3&gt; The &lt;code&gt;render()&lt;/code&gt; method is the only required method in a class component. i.e, All methods other than render method are optional for a class component.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;239&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the possible return types of render method?&lt;/h3&gt; &lt;p&gt;Below are the list of following types used and return from render method,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;React elements:&lt;/strong&gt; Elements that instruct React to render a DOM node. It includes html elements such as &lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt; and user defined elements.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Arrays and fragments:&lt;/strong&gt; Return multiple elements to render as Arrays and Fragments to wrap multiple elements&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Portals:&lt;/strong&gt; Render children into a different DOM subtree.&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;String and numbers:&lt;/strong&gt; Render both Strings and Numbers as text nodes in the DOM&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Booleans or null:&lt;/strong&gt; Doesn&#39;t render anything but these types are used to conditionally render content.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;240&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the main purpose of constructor?&lt;/h3&gt; &lt;p&gt;The constructor is mainly used for two purposes,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;To initialize local state by assigning object to this.state&lt;/li&gt; &#xA;   &lt;li&gt;For binding event handler methods to the instance For example, the below code covers both the above cases,&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;constructor(props) {&#xA;  super(props);&#xA;  // Don&#39;t call this.setState() here!&#xA;  this.state = { counter: 0 };&#xA;  this.handleClick = this.handleClick.bind(this);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;241&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is it mandatory to define constructor for React component?&lt;/h3&gt; No, it is not mandatory. i.e, If you don’t initialize state and you don’t bind methods, you don’t need to implement a constructor for your React component.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;242&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are default props?&lt;/h3&gt; &lt;p&gt;The defaultProps are defined as a property on the component class to set the default props for the class. This is used for undefined props, but not for null props.&lt;/p&gt; &lt;p&gt;For example, let us create color default prop for the button component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyButton extends React.Component {&#xA;  // ...&#xA;}&#xA;&#xA;MyButton.defaultProps = {&#xA;  color: &#39;red&#39;&#xA;};&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If &lt;code&gt;props.color&lt;/code&gt; is not provided then it will set the default value to &#39;red&#39;. i.e, Whenever you try to access the color prop it uses default value&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;render() {&#xA;   return &amp;lt;MyButton /&amp;gt; ; // props.color will be set to red&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you provide null value then it remains null value.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;243&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why should not call setState in componentWillUnmount?&lt;/h3&gt; You should not call &lt;code&gt;setState()&lt;/code&gt; in &lt;code&gt;componentWillUnmount()&lt;/code&gt; because once a component instance is unmounted, it will never be mounted again.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;244&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of getDerivedStateFromError?&lt;/h3&gt; &lt;p&gt;This lifecycle method is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.&lt;/p&gt; &lt;p&gt;The signature of the lifecycle method is as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;static getDerivedStateFromError(error)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let us take error boundary use case with the above lifecycle method for demonstration purpose,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class ErrorBoundary extends React.Component {&#xA;  constructor(props) {&#xA;    super(props);&#xA;    this.state = { hasError: false };&#xA;  }&#xA;&#xA;  static getDerivedStateFromError(error) {&#xA;    // Update state so the next render will show the fallback UI.&#xA;    return { hasError: true };&#xA;  }&#xA;&#xA;  render() {&#xA;    if (this.state.hasError) {&#xA;      // You can render any custom fallback UI&#xA;      return &amp;lt;h1&amp;gt;Something went wrong.&amp;lt;/h1&amp;gt;;&#xA;    }&#xA;&#xA;    return this.props.children;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;245&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the methods order when component re-rendered?&lt;/h3&gt; &lt;p&gt;An update can be caused by changes to props or state. The below methods are called in the following order when a component is being re-rendered.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;static getDerivedStateFromProps()&lt;/li&gt; &#xA;   &lt;li&gt;shouldComponentUpdate()&lt;/li&gt; &#xA;   &lt;li&gt;render()&lt;/li&gt; &#xA;   &lt;li&gt;getSnapshotBeforeUpdate()&lt;/li&gt; &#xA;   &lt;li&gt;componentDidUpdate()&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;246&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the methods invoked during error handling?&lt;/h3&gt; &lt;p&gt;Below methods are called when there is an error during rendering, in a lifecycle method, or in the constructor of any child component.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;static getDerivedStateFromError()&lt;/li&gt; &#xA;   &lt;li&gt;componentDidCatch()&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;247&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of displayName class property?&lt;/h3&gt; &lt;p&gt;The displayName string is used in debugging messages. Usually, you don’t need to set it explicitly because it’s inferred from the name of the function or class that defines the component. You might want to set it explicitly if you want to display a different name for debugging purposes or when you create a higher-order component.&lt;/p&gt; &lt;p&gt;For example, To ease debugging, choose a display name that communicates that it’s the result of a withSubscription HOC.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function withSubscription(WrappedComponent) {&#xA;  class WithSubscription extends React.Component {/* ... */}&#xA;  WithSubscription.displayName = `WithSubscription(${getDisplayName(WrappedComponent)})`;&#xA;  return WithSubscription;&#xA;}&#xA;function getDisplayName(WrappedComponent) {&#xA;  return WrappedComponent.displayName || WrappedComponent.name || &#39;Component&#39;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;248&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the browser support for react applications?&lt;/h3&gt; React supports all popular browsers, including Internet Explorer 9 and above, although some polyfills are required for older browsers such as IE 9 and IE 10. If you use &lt;strong&gt;es5-shim and es5-sham&lt;/strong&gt; polyfill then it even support old browsers that doesn&#39;t support ES5 methods.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;249&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of unmountComponentAtNode method?&lt;/h3&gt; &lt;p&gt;This method is available from react-dom package and it removes a mounted React component from the DOM and clean up its event handlers and state. If no component was mounted in the container, calling this function does nothing. Returns true if a component was unmounted and false if there was no component to unmount.&lt;/p&gt; &lt;p&gt;The method signature would be as follows,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;ReactDOM.unmountComponentAtNode(container)&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;250&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is code-splitting?&lt;/h3&gt; &lt;p&gt;Code-Splitting is a feature supported by bundlers like Webpack and Browserify which can create multiple bundles that can be dynamically loaded at runtime. The react project supports code splitting via dynamic import() feature.&lt;/p&gt; &lt;p&gt;For example, in the below code snippets, it will make moduleA.js and all its unique dependencies as a separate chunk that only loads after the user clicks the &#39;Load&#39; button. &lt;strong&gt;moduleA.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const moduleA = &#39;Hello&#39;;&#xA;&#xA;export { moduleA };&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React, { Component } from &#39;react&#39;;&#xA;&#xA;class App extends Component {&#xA;  handleClick = () =&amp;gt; {&#xA;    import(&#39;./moduleA&#39;)&#xA;      .then(({ moduleA }) =&amp;gt; {&#xA;        // Use moduleA&#xA;      })&#xA;      .catch(err =&amp;gt; {&#xA;        // Handle failure&#xA;      });&#xA;  };&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;div&amp;gt;&#xA;        &amp;lt;button onClick={this.handleClick}&amp;gt;Load&amp;lt;/button&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;export default App;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;251&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the benefit of strict mode?&lt;/h3&gt; &lt;p&gt;The &#xA;   &lt;strictmode&gt;&#xA;     will be helpful in the below cases&#xA;   &lt;/strictmode&gt;&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Identifying components with &lt;strong&gt;unsafe lifecycle methods&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Warning about &lt;strong&gt;legacy string ref&lt;/strong&gt; API usage.&lt;/li&gt; &#xA;   &lt;li&gt;Detecting unexpected &lt;strong&gt;side effects&lt;/strong&gt;.&lt;/li&gt; &#xA;   &lt;li&gt;Detecting &lt;strong&gt;legacy context&lt;/strong&gt; API.&lt;/li&gt; &#xA;   &lt;li&gt;Warning about deprecated findDOMNode usage&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;252&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are Keyed Fragments?&lt;/h3&gt; &lt;p&gt;The Fragments declared with the explicit &amp;lt;React.Fragment&amp;gt; syntax may have keys. The general use case is mapping a collection to an array of fragments as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function Glossary(props) {&#xA;  return (&#xA;    &amp;lt;dl&amp;gt;&#xA;      {props.items.map(item =&amp;gt; (&#xA;        // Without the `key`, React will fire a key warning&#xA;        &amp;lt;React.Fragment key={item.id}&amp;gt;&#xA;          &amp;lt;dt&amp;gt;{item.term}&amp;lt;/dt&amp;gt;&#xA;          &amp;lt;dd&amp;gt;{item.description}&amp;lt;/dd&amp;gt;&#xA;        &amp;lt;/React.Fragment&amp;gt;&#xA;      ))}&#xA;    &amp;lt;/dl&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; key is the only attribute that can be passed to Fragment. In the future, there might be a support for additional attributes, such as event handlers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;253&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Does React support all HTML attributes?&lt;/h3&gt; &lt;p&gt;As of React 16, both standard or custom DOM attributes are fully supported. Since React components often take both custom and DOM-related props, React uses the camelCase convention just like the DOM APIs.&lt;/p&gt; &lt;p&gt;Let us take few props with respect to standard HTML attributes,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;div tabIndex=&#34;-1&#34; /&amp;gt;      // Just like node.tabIndex DOM API&#xA;&amp;lt;div className=&#34;Button&#34; /&amp;gt; // Just like node.className DOM API&#xA;&amp;lt;input readOnly={true} /&amp;gt;  // Just like node.readOnly DOM API&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;These props work similarly to the corresponding HTML attributes, with the exception of the special cases. It also support all SVG attributes.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;254&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the limitations with HOCs?&lt;/h3&gt; &lt;p&gt;Higher-order components come with a few caveats apart from its benefits. Below are the few listed in an order,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Don’t use HOCs inside the render method:&lt;/strong&gt; It is not recommended to apply a HOC to a component within the render method of a component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;render() {&#xA;  // A new version of EnhancedComponent is created on every render&#xA;  // EnhancedComponent1 !== EnhancedComponent2&#xA;  const EnhancedComponent = enhance(MyComponent);&#xA;  // That causes the entire subtree to unmount/remount each time!&#xA;  return &amp;lt;EnhancedComponent /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above code impacts on performance by remounting a component that causes the state of that component and all of its children to be lost. Instead, apply HOCs outside the component definition so that the resulting component is created only once.&lt;/p&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static methods must be copied over:&lt;/strong&gt; When you apply a HOC to a component the new component does not have any of the static methods of the original component&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Define a static method&#xA;WrappedComponent.staticMethod = function() {/*...*/}&#xA;// Now apply a HOC&#xA;const EnhancedComponent = enhance(WrappedComponent);&#xA;&#xA;// The enhanced component has no static method&#xA;typeof EnhancedComponent.staticMethod === &#39;undefined&#39; // true&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can overcome this by copying the methods onto the container before returning it,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function enhance(WrappedComponent) {&#xA;  class Enhance extends React.Component {/*...*/}&#xA;  // Must know exactly which method(s) to copy :(&#xA;  Enhance.staticMethod = WrappedComponent.staticMethod;&#xA;  return Enhance;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Refs aren’t passed through:&lt;/strong&gt; For HOCs you need to pass through all props to the wrapped component but this does not work for refs. This is because ref is not really a prop similar to key. In this case you need to use the React.forwardRef API&lt;/p&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;255&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to debug forwardRefs in DevTools?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;React.forwardRef&lt;/strong&gt; accepts a render function as parameter and DevTools uses this function to determine what to display for the ref forwarding component.&lt;/p&gt; &lt;p&gt;For example, If you don&#39;t name the render function or not using displayName property then it will appear as ”ForwardRef” in the DevTools,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const WrappedComponent = React.forwardRef((props, ref) =&amp;gt; {&#xA;  return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But If you name the render function then it will appear as &lt;strong&gt;”ForwardRef(myFunction)”&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const WrappedComponent = React.forwardRef(&#xA;  function myFunction(props, ref) {&#xA;    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;&#xA;  }&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As an alternative, You can also set displayName property for forwardRef function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function logProps(Component) {&#xA;  class LogProps extends React.Component {&#xA;    // ...&#xA;  }&#xA;&#xA;  function forwardRef(props, ref) {&#xA;    return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;&#xA;  }&#xA;&#xA;  // Give this component a more helpful display name in DevTools.&#xA;  // e.g. &#34;ForwardRef(logProps(MyComponent))&#34;&#xA;  const name = Component.displayName || Component.name;&#xA;  forwardRef.displayName = `logProps(${name})`;&#xA;&#xA;  return React.forwardRef(forwardRef);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;256&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;When component props defaults to true?&lt;/h3&gt; &lt;p&gt;If you pass no value for a prop, it defaults to true. This behavior is available so that it matches the behavior of HTML.&lt;/p&gt; &lt;p&gt;For example, below expressions are equivalent,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;MyInput autocomplete /&amp;gt;&#xA;&#xA;&amp;lt;MyInput autocomplete={true} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It is not recommended to use this approach because it can be confused with the ES6 object shorthand (example, &lt;code&gt;{name}&lt;/code&gt; which is short for &lt;code&gt;{name: name}&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;257&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is NextJS and major features of it?&lt;/h3&gt; &lt;p&gt;Next.js is a popular and lightweight framework for static and server‑rendered applications built with React. It also provides styling and routing solutions. Below are the major features provided by NextJS,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Server-rendered by default&lt;/li&gt; &#xA;   &lt;li&gt;Automatic code splitting for faster page loads&lt;/li&gt; &#xA;   &lt;li&gt;Simple client-side routing (page based)&lt;/li&gt; &#xA;   &lt;li&gt;Webpack-based dev environment which supports (HMR)&lt;/li&gt; &#xA;   &lt;li&gt;Able to implement with Express or any other Node.js HTTP server&lt;/li&gt; &#xA;   &lt;li&gt;Customizable with your own Babel and Webpack configurations&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;258&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you pass an event handler to a component?&lt;/h3&gt; &lt;p&gt;You can pass event handlers and other functions as props to child components. It can be used in child component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;button onClick={this.handleClick}&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;259&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is it good to use arrow functions in render methods?&lt;/h3&gt; &lt;p&gt;Yes, You can use. It is often the easiest way to pass parameters to callback functions. But you need to optimize the performance while using it.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Foo extends Component {&#xA;  handleClick() {&#xA;    console.log(&#39;Click happened&#39;);&#xA;  }&#xA;  render() {&#xA;    return &amp;lt;button onClick={() =&amp;gt; this.handleClick()}&amp;gt;Click Me&amp;lt;/button&amp;gt;;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Using an arrow function in render method creates a new function each time the component renders, which may have performance implications&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;260&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to prevent a function from being called multiple times?&lt;/h3&gt; &lt;p&gt;If you use an event handler such as &lt;strong&gt;onClick or onScroll&lt;/strong&gt; and want to prevent the callback from being fired too quickly, then you can limit the rate at which callback is executed. This can be achieved in the below possible ways,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Throttling:&lt;/strong&gt; Changes based on a time based frequency. For example, it can be used using _.throttle lodash function&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Debouncing:&lt;/strong&gt; Publish changes after a period of inactivity. For example, it can be used using _.debounce lodash function&lt;/li&gt; &#xA;   &lt;li&gt;&lt;strong&gt;RequestAnimationFrame throttling:&lt;/strong&gt; Changes based on requestAnimationFrame. For example, it can be used using raf-schd lodash function&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;261&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How JSX prevents Injection Attacks?&lt;/h3&gt; &lt;p&gt;React DOM escapes any values embedded in JSX before rendering them. Thus it ensures that you can never inject anything that’s not explicitly written in your application. Everything is converted to a string before being rendered.&lt;/p&gt; &lt;p&gt;For example, you can embed user input as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const name = response.potentiallyMaliciousInput;&#xA;const element = &amp;lt;h1&amp;gt;{name}&amp;lt;/h1&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way you can prevent XSS(Cross-site-scripting) attacks in the application.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;262&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you update rendered elements?&lt;/h3&gt; &lt;p&gt;You can update UI(represented by rendered element) by passing the newly created element to ReactDOM&#39;s render method.&lt;/p&gt; &lt;p&gt;For example, lets take a ticking clock example, where it updates the time by calling render method multiple times,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function tick() {&#xA;  const element = (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;h1&amp;gt;Hello, world!&amp;lt;/h1&amp;gt;&#xA;      &amp;lt;h2&amp;gt;It is {new Date().toLocaleTimeString()}.&amp;lt;/h2&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;  ReactDOM.render(element, document.getElementById(&#39;root&#39;));&#xA;}&#xA;&#xA;setInterval(tick, 1000);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;263&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you say that props are readonly?&lt;/h3&gt; &lt;p&gt;When you declare a component as a function or a class, it must never modify its own props.&lt;/p&gt; &lt;p&gt;Let us take a below capital function,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function capital(amount, interest) {&#xA;   return amount + interest;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above function is called “pure” because it does not attempt to change their inputs, and always return the same result for the same inputs. Hence, React has a single rule saying &#34;All React components must act like pure functions with respect to their props.&#34;&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;264&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you say that state updates are merged?&lt;/h3&gt; &lt;p&gt;When you call setState() in the component, React merges the object you provide into the current state.&lt;/p&gt; &lt;p&gt;For example, let us take a facebook user with posts and comments details as state variables,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  constructor(props) {&#xA;    super(props);&#xA;    this.state = {&#xA;      posts: [],&#xA;      comments: []&#xA;    };&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now you can update them independently with separate &lt;code&gt;setState()&lt;/code&gt; calls as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt; componentDidMount() {&#xA;    fetchPosts().then(response =&amp;gt; {&#xA;      this.setState({&#xA;        posts: response.posts&#xA;      });&#xA;    });&#xA;&#xA;    fetchComments().then(response =&amp;gt; {&#xA;      this.setState({&#xA;        comments: response.comments&#xA;      });&#xA;    });&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code snippets, &lt;code&gt;this.setState({comments})&lt;/code&gt; updates only comments variable without modifying or replacing &lt;code&gt;posts&lt;/code&gt; variable.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;265&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you pass arguments to an event handler?&lt;/h3&gt; &lt;p&gt;During iterations or loops, it is common to pass an extra parameter to an event handler. This can be achieved through arrow functions or bind method.&lt;/p&gt; &lt;p&gt;Let us take an example of user details updated in a grid,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;button onClick={(e) =&amp;gt; this.updateUser(userId, e)}&amp;gt;Update User details&amp;lt;/button&amp;gt;&#xA;&amp;lt;button onClick={this.updateUser.bind(this, userId)}&amp;gt;Update User details&amp;lt;/button&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the both approaches, the synthetic argument &lt;code&gt;e&lt;/code&gt; is passed as a second argument. You need to pass it explicitly for arrow functions and it will be passed automatically for &lt;code&gt;bind&lt;/code&gt; method.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;266&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to prevent component from rendering?&lt;/h3&gt; &lt;p&gt;You can prevent component from rendering by returning null based on specific condition. This way it can conditionally render component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function Greeting(props) {&#xA;  if (!props.loggedIn) {&#xA;    return null;&#xA;  }&#xA;&#xA;  return (&#xA;    &amp;lt;div className=&#34;greeting&#34;&amp;gt;&#xA;      welcome, {props.name}&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class User extends React.Component {&#xA;  constructor(props) {&#xA;    super(props);&#xA;    this.state = {loggedIn: false, name: &#39;John&#39;};&#xA;  }&#xA;&#xA;  render() {&#xA;   return (&#xA;       &amp;lt;div&amp;gt;&#xA;         //Prevent component render if it is not loggedIn&#xA;         &amp;lt;Greeting loggedIn={this.state.loggedIn} /&amp;gt;&#xA;         &amp;lt;UserDetails name={this.state.name}&amp;gt;&#xA;       &amp;lt;/div&amp;gt;&#xA;   );&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above example, the &lt;code&gt;greeting&lt;/code&gt; component skips its rendering section by applying condition and returning null value.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;267&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the conditions to safely use the index as a key?&lt;/h3&gt; &lt;p&gt;There are three conditions to make sure, it is safe use the index as a key.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The list and items are static– they are not computed and do not change&lt;/li&gt; &#xA;   &lt;li&gt;The items in the list have no ids&lt;/li&gt; &#xA;   &lt;li&gt;The list is never reordered or filtered.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;268&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Should keys be globally unique?&lt;/h3&gt; &lt;p&gt;The keys used within arrays should be unique among their siblings but they don’t need to be globally unique. i.e, You can use the same keys with two different arrays.&lt;/p&gt; &lt;p&gt;For example, the below &lt;code&gt;Book&lt;/code&gt; component uses two arrays with different arrays,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function Book(props) {&#xA;  const index = (&#xA;    &amp;lt;ul&amp;gt;&#xA;      {props.pages.map((page) =&amp;gt;&#xA;        &amp;lt;li key={page.id}&amp;gt;&#xA;          {page.title}&#xA;        &amp;lt;/li&amp;gt;&#xA;      )}&#xA;    &amp;lt;/ul&amp;gt;&#xA;  );&#xA;  const content = props.pages.map((page) =&amp;gt;&#xA;    &amp;lt;div key={page.id}&amp;gt;&#xA;      &amp;lt;h3&amp;gt;{page.title}&amp;lt;/h3&amp;gt;&#xA;      &amp;lt;p&amp;gt;{page.content}&amp;lt;/p&amp;gt;&#xA;      &amp;lt;p&amp;gt;{page.pageNumber}&amp;lt;/p&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      {index}&#xA;      &amp;lt;hr /&amp;gt;&#xA;      {content}&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;269&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the popular choice for form handling?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;Formik&lt;/code&gt; is a form library for react which provides solutions such as validation, keeping track of the visited fields, and handling form submission.&lt;/p&gt; &lt;p&gt;In detail, You can categorize them as follows,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; &#xA;   &lt;li&gt;Validation and error messages&lt;/li&gt; &#xA;   &lt;li&gt;Handling form submission&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;It is used to create a scalable, performant, form helper with a minimal API to solve annoying stuff.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;270&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the advantages of formik over redux form library?&lt;/h3&gt; &lt;p&gt;Below are the main reasons to recommend formik over redux form library,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;The form state is inherently short-term and local, so tracking it in Redux (or any kind of Flux library) is unnecessary.&lt;/li&gt; &#xA;   &lt;li&gt;Redux-Form calls your entire top-level Redux reducer multiple times ON EVERY SINGLE KEYSTROKE. This way it increases input latency for large apps.&lt;/li&gt; &#xA;   &lt;li&gt;Redux-Form is 22.5 kB minified gzipped whereas Formik is 12.7 kB&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;271&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why are you not required to use inheritance?&lt;/h3&gt; In React, it is recommended to use composition over inheritance to reuse code between components. Both Props and composition give you all the flexibility you need to customize a component’s look and behavior explicitly and safely. Whereas, If you want to reuse non-UI functionality between components, it is suggested to extract it into a separate JavaScript module. Later components import it and use that function, object, or class, without extending it.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;272&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Can I use web components in react application?&lt;/h3&gt; &lt;p&gt;Yes, you can use web components in a react application. Even though many developers won&#39;t use this combination, it may require especially if you are using third-party UI components that are written using Web Components.&lt;/p&gt; &lt;p&gt;For example, let us use &lt;code&gt;Vaadin&lt;/code&gt; date picker web component as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React, { Component } from &#39;react&#39;;&#xA;import &#39;./App.css&#39;;&#xA;import &#39;@vaadin/vaadin-date-picker&#39;;&#xA;class App extends Component {&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;div className=&#34;App&#34;&amp;gt;&#xA;        &amp;lt;vaadin-date-picker label=&#34;When were you born?&#34;&amp;gt;&amp;lt;/vaadin-date-picker&amp;gt;&#xA;      &amp;lt;/div&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;export default App;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;273&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is dynamic import?&lt;/h3&gt; &lt;p&gt;You can achieve code-splitting in your app using dynamic import.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example of addition,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Normal Import&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { add } from &#39;./math&#39;;&#xA;console.log(add(10, 20));&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Dynamic Import&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import(&#34;./math&#34;).then(math =&amp;gt; {&#xA;  console.log(math.add(10, 20));&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;274&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are loadable components?&lt;/h3&gt; &lt;p&gt;If you want to do code-splitting in a server rendered app, it is recommend to use Loadable Components because React.lazy and Suspense is not yet available for server-side rendering. Loadable lets you render a dynamic import as a regular component.&lt;/p&gt; &lt;p&gt;Lets take an example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import loadable from &#39;@loadable/component&#39;&#xA;&#xA;const OtherComponent = loadable(() =&amp;gt; import(&#39;./OtherComponent&#39;))&#xA;&#xA;function MyComponent() {&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;OtherComponent /&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  )&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now OtherComponent will be loaded in a separated bundle&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;275&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is suspense component?&lt;/h3&gt; &lt;p&gt;If the module containing the dynamic import is not yet loaded by the time parent component renders, you must show some fallback content while you’re waiting for it to load using a loading indicator. This can be done using &lt;strong&gt;Suspense&lt;/strong&gt; component.&lt;/p&gt; &lt;p&gt;For example, the below code uses suspense component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const OtherComponent = React.lazy(() =&amp;gt; import(&#39;./OtherComponent&#39;));&#xA;&#xA;function MyComponent() {&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;&#xA;        &amp;lt;OtherComponent /&amp;gt;&#xA;      &amp;lt;/Suspense&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As mentioned in the above code, Suspense is wrapped above the lazy component.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;276&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is route based code splitting?&lt;/h3&gt; &lt;p&gt;One of the best place to do code splitting is with routes. The entire page is going to re-render at once so users are unlikely to interact with other elements in the page at the same time. Due to this, the user experience won&#39;t be disturbed.&lt;/p&gt; &lt;p&gt;Let us take an example of route based website using libraries like React Router with React.lazy,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import { BrowserRouter as Router, Route, Switch } from &#39;react-router-dom&#39;;&#xA;import React, { Suspense, lazy } from &#39;react&#39;;&#xA;&#xA;const Home = lazy(() =&amp;gt; import(&#39;./routes/Home&#39;));&#xA;const About = lazy(() =&amp;gt; import(&#39;./routes/About&#39;));&#xA;&#xA;const App = () =&amp;gt; (&#xA;  &amp;lt;Router&amp;gt;&#xA;    &amp;lt;Suspense fallback={&amp;lt;div&amp;gt;Loading...&amp;lt;/div&amp;gt;}&amp;gt;&#xA;      &amp;lt;Switch&amp;gt;&#xA;        &amp;lt;Route exact path=&#34;/&#34; component={Home}/&amp;gt;&#xA;        &amp;lt;Route path=&#34;/about&#34; component={About}/&amp;gt;&#xA;      &amp;lt;/Switch&amp;gt;&#xA;    &amp;lt;/Suspense&amp;gt;&#xA;  &amp;lt;/Router&amp;gt;&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In the above code, the code splitting will happen at each route level.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;277&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Give an example on How to use context?&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt; is designed to share data that can be considered &lt;strong&gt;global&lt;/strong&gt; for a tree of React components.&lt;/p&gt; &lt;p&gt;For example, in the code below lets manually thread through a “theme” prop in order to style the Button component.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;//Lets create a context with a default theme value &#34;luna&#34;&#xA;const ThemeContext = React.createContext(&#39;luna&#39;);&#xA;// Create App component where it uses provider to pass theme value in the tree&#xA;class App extends React.Component {&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;ThemeContext.Provider value=&#34;nova&#34;&amp;gt;&#xA;        &amp;lt;Toolbar /&amp;gt;&#xA;      &amp;lt;/ThemeContext.Provider&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;// A middle component where you don&#39;t need to pass theme prop anymore&#xA;function Toolbar(props) {&#xA;  return (&#xA;    &amp;lt;div&amp;gt;&#xA;      &amp;lt;ThemedButton /&amp;gt;&#xA;    &amp;lt;/div&amp;gt;&#xA;  );&#xA;}&#xA;// Lets read theme value in the button component to use&#xA;class ThemedButton extends React.Component {&#xA;  static contextType = ThemeContext;&#xA;  render() {&#xA;    return &amp;lt;Button theme={this.context} /&amp;gt;;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;278&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of default value in context?&lt;/h3&gt; &lt;p&gt;The defaultValue argument is only used when a component does not have a matching Provider above it in the tree. This can be helpful for testing components in isolation without wrapping them.&lt;/p&gt; &lt;p&gt;Below code snippet provides default theme value as Luna.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const MyContext = React.createContext(defaultValue);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;279&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you use contextType?&lt;/h3&gt; &lt;p&gt;ContextType is used to consume the context object. The contextType property can be used in two ways,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;contextType as property of class:&lt;/strong&gt; The contextType property on a class can be assigned a Context object created by React.createContext(). After that, you can consume the nearest current value of that Context type using this.context in any of the lifecycle methods and render function.&lt;/p&gt; &lt;p&gt;Lets assign contextType property on MyClass as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyClass extends React.Component {&#xA;  componentDidMount() {&#xA;    let value = this.context;&#xA;    /* perform a side-effect at mount using the value of MyContext */&#xA;  }&#xA;  componentDidUpdate() {&#xA;    let value = this.context;&#xA;    /* ... */&#xA;  }&#xA;  componentWillUnmount() {&#xA;    let value = this.context;&#xA;    /* ... */&#xA;  }&#xA;  render() {&#xA;    let value = this.context;&#xA;    /* render something based on the value of MyContext */&#xA;  }&#xA;}&#xA;MyClass.contextType = MyContext;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Static field&lt;/strong&gt; You can use a static class field to initialize your contextType using public class field syntax.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class MyClass extends React.Component {&#xA;  static contextType = MyContext;&#xA;  render() {&#xA;    let value = this.context;&#xA;    /* render something based on the value */&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;280&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is a consumer?&lt;/h3&gt; &lt;p&gt;A Consumer is a React component that subscribes to context changes. It requires a function as a child which receives current context value as argument and returns a react node. The value argument passed to the function will be equal to the value prop of the closest Provider for this context above in the tree.&lt;/p&gt; &lt;p&gt;Lets take a simple example,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;MyContext.Consumer&amp;gt;&#xA;  {value =&amp;gt; /* render something based on the context value */}&#xA;&amp;lt;/MyContext.Consumer&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;281&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you solve performance corner cases while using context?&lt;/h3&gt; &lt;p&gt;The context uses reference identity to determine when to re-render, there are some gotchas that could trigger unintentional renders in consumers when a provider’s parent re-renders.&lt;/p&gt; &lt;p&gt;For example, the code below will re-render all consumers every time the Provider re-renders because a new object is always created for value.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class App extends React.Component {&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;Provider value={{something: &#39;something&#39;}}&amp;gt;&#xA;        &amp;lt;Toolbar /&amp;gt;&#xA;      &amp;lt;/Provider&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This can be solved by lifting up the value to parent state,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class App extends React.Component {&#xA;  constructor(props) {&#xA;    super(props);&#xA;    this.state = {&#xA;      value: {something: &#39;something&#39;},&#xA;    };&#xA;  }&#xA;&#xA;  render() {&#xA;    return (&#xA;      &amp;lt;Provider value={this.state.value}&amp;gt;&#xA;        &amp;lt;Toolbar /&amp;gt;&#xA;      &amp;lt;/Provider&amp;gt;&#xA;    );&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;282&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of forward ref in HOCs?&lt;/h3&gt; &lt;p&gt;Refs will not get passed through because ref is not a prop. It is handled differently by React just like &lt;strong&gt;key&lt;/strong&gt;. If you add a ref to a HOC, the ref will refer to the outermost container component, not the wrapped component. In this case, you can use Forward Ref API. For example, we can explicitly forward refs to the inner FancyButton component using the React.forwardRef API.&lt;/p&gt; &lt;p&gt;The below HOC logs all props,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;    function logProps(Component) {&#xA;      class LogProps extends React.Component {&#xA;        componentDidUpdate(prevProps) {&#xA;          console.log(&#39;old props:&#39;, prevProps);&#xA;          console.log(&#39;new props:&#39;, this.props);&#xA;        }&#xA;&#xA;        render() {&#xA;          const {forwardedRef, ...rest} = this.props;&#xA;&#xA;          // Assign the custom prop &#34;forwardedRef&#34; as a ref&#xA;          return &amp;lt;Component ref={forwardedRef} {...rest} /&amp;gt;;&#xA;        }&#xA;      }&#xA;&#xA;      return React.forwardRef((props, ref) =&amp;gt; {&#xA;        return &amp;lt;LogProps {...props} forwardedRef={ref} /&amp;gt;;&#xA;      });&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&#39;s use this HOC to log all props that get passed to our “fancy button” component,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;    class FancyButton extends React.Component {&#xA;      focus() {&#xA;        // ...&#xA;      }&#xA;&#xA;      // ...&#xA;    }&#xA;    export default logProps(FancyButton);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now let&#39;s create a ref and pass it to FancyButton component. In this case, you can set focus to button element.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;    import FancyButton from &#39;./FancyButton&#39;;&#xA;&#xA;    const ref = React.createRef();&#xA;    ref.current.focus();&#xA;    &amp;lt;FancyButton&#xA;      label=&#34;Click Me&#34;&#xA;      handleClick={handleClick}&#xA;      ref={ref}&#xA;    /&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;283&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is ref argument available for all functions or class components?&lt;/h3&gt; Regular function or class components don’t receive the ref argument, and ref is not available in props either. The second ref argument only exists when you define a component with React.forwardRef call.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;284&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why do you need additional care for component libraries while using forward refs?&lt;/h3&gt; When you start using forwardRef in a component library, you should treat it as a breaking change and release a new major version of your library. This is because your library likely has a different behavior such as what refs get assigned to, and what types are exported. These changes can break apps and other libraries that depend on the old behavior.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;285&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to create react class components without ES6?&lt;/h3&gt; &lt;p&gt;If you don’t use ES6 then you may need to use the create-react-class module instead. For default props, you need to define getDefaultProps() as a function on the passed object. Whereas for initial state, you have to provide a separate getInitialState method that returns the initial state.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var Greeting = createReactClass({&#xA;  getDefaultProps: function() {&#xA;      return {&#xA;        name: &#39;Jhohn&#39;&#xA;      };&#xA;    },&#xA;  getInitialState: function() {&#xA;      return {message: this.props.message};&#xA;    },&#xA;  handleClick: function() {&#xA;     console.log(this.state.message);&#xA;  },&#xA;  render: function() {&#xA;    return &amp;lt;h1&amp;gt;Hello, {this.props.name}&amp;lt;/h1&amp;gt;;&#xA;  }&#xA;});&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you use createReactClass then auto binding is available for all methods. i.e, You don&#39;t need to use &lt;code&gt;.bind(this)&lt;/code&gt; with in constructor for event handlers.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;286&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is it possible to use react without JSX?&lt;/h3&gt; &lt;p&gt;Yes, JSX is not mandatory for using React. Actually it is convenient when you don’t want to set up compilation in your build environment. Each JSX element is just syntactic sugar for calling &lt;code&gt;React.createElement(component, props, ...children)&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, let us take a greeting example with JSX,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Greeting extends React.Component {&#xA;  render() {&#xA;    return &amp;lt;div&amp;gt;Hello {this.props.message}&amp;lt;/div&amp;gt;;&#xA;  }&#xA;}&#xA;&#xA;ReactDOM.render(&#xA;  &amp;lt;Greeting message=&#34;World&#34; /&amp;gt;,&#xA;  document.getElementById(&#39;root&#39;)&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can write the same code without JSX as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class Greeting extends React.Component {&#xA;  render() {&#xA;    return React.createElement(&#39;div&#39;, null, `Hello ${this.props.message}`);&#xA;  }&#xA;}&#xA;&#xA;ReactDOM.render(&#xA;  React.createElement(Greeting, {message: &#39;World&#39;}, null),&#xA;  document.getElementById(&#39;root&#39;)&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;287&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is diffing algorithm?&lt;/h3&gt; &lt;p&gt;React needs to use algorithms to find out how to efficiently update the UI to match the most recent tree. The diffing algorithms is generating the minimum number of operations to transform one tree into another. However, the algorithms have a complexity in the order of O(n3) where n is the number of elements in the tree.&lt;/p&gt; &lt;p&gt;In this case, displaying 1000 elements would require in the order of one billion comparisons. This is far too expensive. Instead, React implements a heuristic O(n) algorithm based on two assumptions:&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Two elements of different types will produce different trees.&lt;/li&gt; &#xA;   &lt;li&gt;The developer can hint at which child elements may be stable across different renders with a key prop.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;288&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the rules covered by diffing algorithm?&lt;/h3&gt; &lt;p&gt;When diffing two trees, React first compares the two root elements. The behavior is different depending on the types of the root elements. It covers the below rules during reconciliation algorithm,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Elements Of Different Types:&lt;/strong&gt; Whenever the root elements have different types, React will tear down the old tree and build the new tree from scratch. For example, elements &lt;a&gt; to &lt;img&gt;, or from &#xA;     &lt;article&gt;&#xA;       to &#xA;      &lt;comment&gt;&#xA;        of different types lead a full rebuild.&#xA;      &lt;/comment&gt;&#xA;     &lt;/article&gt;&lt;/a&gt;&lt;/li&gt;&#xA;   &lt;a&gt; &lt;li&gt;&lt;strong&gt;DOM Elements Of The Same Type:&lt;/strong&gt; When comparing two React DOM elements of the same type, React looks at the attributes of both, keeps the same underlying DOM node, and only updates the changed attributes. Lets take an example with same DOM elements except className attribute, &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;div className=&#34;show&#34; title=&#34;ReactJS&#34; /&amp;gt;&#xA;&#xA;&amp;lt;div className=&#34;hide&#34; title=&#34;ReactJS&#34; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Component Elements Of The Same Type:&lt;/strong&gt; When a component updates, the instance stays the same, so that state is maintained across renders. React updates the props of the underlying component instance to match the new element, and calls componentWillReceiveProps() and componentWillUpdate() on the underlying instance. After that, the render() method is called and the diff algorithm recurses on the previous result and the new result.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Recursing On Children:&lt;/strong&gt; when recursing on the children of a DOM node, React just iterates over both lists of children at the same time and generates a mutation whenever there’s a difference. For example, when adding an element at the end of the children, converting between these two trees works well. &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;ul&amp;gt;&#xA;  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;&#xA;  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;&#xA;&amp;lt;/ul&amp;gt;&#xA;&#xA;&amp;lt;ul&amp;gt;&#xA;  &amp;lt;li&amp;gt;first&amp;lt;/li&amp;gt;&#xA;  &amp;lt;li&amp;gt;second&amp;lt;/li&amp;gt;&#xA;  &amp;lt;li&amp;gt;third&amp;lt;/li&amp;gt;&#xA;&amp;lt;/ul&amp;gt;&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Handling keys:&lt;/strong&gt; React supports a key attribute. When children have keys, React uses the key to match children in the original tree with children in the subsequent tree. For example, adding a key can make the tree conversion efficient,&lt;/li&gt; &lt;/a&gt;&#xA;  &lt;/ol&gt;&lt;a&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;ul&amp;gt;&#xA;  &amp;lt;li key=&#34;2015&#34;&amp;gt;Duke&amp;lt;/li&amp;gt;&#xA;  &amp;lt;li key=&#34;2016&#34;&amp;gt;Villanova&amp;lt;/li&amp;gt;&#xA;&amp;lt;/ul&amp;gt;&#xA;&#xA;&amp;lt;ul&amp;gt;&#xA;  &amp;lt;li key=&#34;2014&#34;&amp;gt;Connecticut&amp;lt;/li&amp;gt;&#xA;  &amp;lt;li key=&#34;2015&#34;&amp;gt;Duke&amp;lt;/li&amp;gt;&#xA;  &amp;lt;li key=&#34;2016&#34;&amp;gt;Villanova&amp;lt;/li&amp;gt;&#xA;&amp;lt;/ul&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/a&gt;&lt;/li&gt;&#xA; &lt;a&gt; &lt;/a&gt;&#xA;&lt;/ol&gt;&#xA;&lt;a&gt; &lt;/a&gt;&#xA;&lt;p&gt;&lt;a&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;289&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;When do you need to use refs?&lt;/h3&gt; &lt;p&gt;There are few use cases to go for refs,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Managing focus, text selection, or media playback.&lt;/li&gt; &#xA;   &lt;li&gt;Triggering imperative animations.&lt;/li&gt; &#xA;   &lt;li&gt;Integrating with third-party DOM libraries.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;290&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Must prop be named as render for render props?&lt;/h3&gt; &lt;p&gt;Even though the pattern named render props, you don’t have to use a prop named render to use this pattern. i.e, Any prop that is a function that a component uses to know what to render is technically a “render prop”. Lets take an example with the children prop for render props,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Mouse children={mouse =&amp;gt; (&#xA;  &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;&#xA;)}/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Actually children prop doesn’t need to be named in the list of “attributes” in JSX element. Instead, you can keep it directly inside element,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;Mouse&amp;gt;&#xA;  {mouse =&amp;gt; (&#xA;    &amp;lt;p&amp;gt;The mouse position is {mouse.x}, {mouse.y}&amp;lt;/p&amp;gt;&#xA;  )}&#xA;&amp;lt;/Mouse&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;While using this above technique(without any name), explicitly state that children should be a function in your propTypes.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;Mouse.propTypes = {&#xA;  children: PropTypes.func.isRequired&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;291&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the problems of using render props with pure components?&lt;/h3&gt; If you create a function inside a render method, it negates the purpose of pure component. Because the shallow prop comparison will always return false for new props, and each render in this case will generate a new value for the render prop. You can solve this issue by defining the render function as instance method.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;292&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you create HOC using render props?&lt;/h3&gt; &lt;p&gt;You can implement most higher-order components (HOC) using a regular component with a render prop. For example, if you would prefer to have a withMouse HOC instead of a &#xA;   &lt;mouse&gt;&#xA;     component, you could easily create one using a regular &#xA;    &lt;mouse&gt;&#xA;      with a render prop.&#xA;    &lt;/mouse&gt;&#xA;   &lt;/mouse&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function withMouse(Component) {&#xA;  return class extends React.Component {&#xA;    render() {&#xA;      return (&#xA;        &amp;lt;Mouse render={mouse =&amp;gt; (&#xA;          &amp;lt;Component {...this.props} mouse={mouse} /&amp;gt;&#xA;        )}/&amp;gt;&#xA;      );&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This way render props gives the flexibility of using either pattern.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;293&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is windowing technique?&lt;/h3&gt; Windowing is a technique that only renders a small subset of your rows at any given time, and can dramatically reduce the time it takes to re-render the components as well as the number of DOM nodes created. If your application renders long lists of data then this technique is recommended. Both react-window and react-virtualized are popular windowing libraries which provides several reusable components for displaying lists, grids, and tabular data.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;294&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you print falsy values in JSX?&lt;/h3&gt; &lt;p&gt;The falsy values such as false, null, undefined, and true are valid children but they don&#39;t render anything. If you still want to display them then you need to convert it to string. Let&#39;s take an example on how to convert to a string,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;lt;div&amp;gt;&#xA;  My JavaScript variable is {String(myVariable)}.&#xA;&amp;lt;/div&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;295&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the typical use case of portals?&lt;/h3&gt; &lt;p&gt;React portals are very useful when a parent component has overflow: hidden or has properties that affect the stacking context (e.g. z-index, position, opacity) and you need to visually “break out” of its container.&lt;/p&gt; &lt;p&gt;For example, dialogs, global message notifications, hovercards, and tooltips.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;296&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you set default value for uncontrolled component?&lt;/h3&gt; &lt;p&gt;In React, the value attribute on form elements will override the value in the DOM. With an uncontrolled component, you might want React to specify the initial value, but leave subsequent updates uncontrolled. To handle this case, you can specify a &lt;strong&gt;defaultValue&lt;/strong&gt; attribute instead of &lt;strong&gt;value&lt;/strong&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;render() {&#xA;  return (&#xA;    &amp;lt;form onSubmit={this.handleSubmit}&amp;gt;&#xA;      &amp;lt;label&amp;gt;&#xA;        User Name:&#xA;        &amp;lt;input&#xA;          defaultValue=&#34;John&#34;&#xA;          type=&#34;text&#34;&#xA;          ref={this.input} /&amp;gt;&#xA;      &amp;lt;/label&amp;gt;&#xA;      &amp;lt;input type=&#34;submit&#34; value=&#34;Submit&#34; /&amp;gt;&#xA;    &amp;lt;/form&amp;gt;&#xA;  );&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The same applies for &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;textArea&lt;/code&gt; inputs. But you need to use &lt;strong&gt;defaultChecked&lt;/strong&gt; for &lt;code&gt;checkbox&lt;/code&gt; and &lt;code&gt;radio&lt;/code&gt; inputs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;297&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is your favorite React stack?&lt;/h3&gt; Even though the tech stack varies from developer to developer, the most popular stack is used in react boilerplate project code. It mainly uses Redux and redux-saga for state management and asynchronous side-effects, react-router for routing purpose, styled-components for styling react components, axios for invoking REST api, and other supported stack such as webpack, reselect, ESNext, Babel. You can clone the project &lt;a href=&#34;https://github.com/react-boilerplate/react-boilerplate&#34;&gt;https://github.com/react-boilerplate/react-boilerplate&lt;/a&gt; and start working on any new react project.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;298&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between Real DOM and Virtual DOM?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Real DOM and Virtual DOM,&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Real DOM&lt;/th&gt; &#xA;     &lt;th&gt;Virtual DOM&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Updates are slow&lt;/td&gt; &#xA;     &lt;td&gt;Updates are fast&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;DOM manipulation is very expensive.&lt;/td&gt; &#xA;     &lt;td&gt;DOM manipulation is very easy&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;You can update HTML directly.&lt;/td&gt; &#xA;     &lt;td&gt;You Can’t directly update HTML&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;It causes too much of memory wastage&lt;/td&gt; &#xA;     &lt;td&gt;There is no memory wastage&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Creates a new DOM if element updates&lt;/td&gt; &#xA;     &lt;td&gt;It updates the JSX if element update&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;299&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to add Bootstrap to a react application?&lt;/h3&gt; &lt;p&gt;Bootstrap can be added to your React app in a three possible ways,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Using the Bootstrap CDN: This is the easiest way to add bootstrap. Add both bootstrap CSS and JS resources in a head tag.&lt;/li&gt; &#xA;   &lt;li&gt;Bootstrap as Dependency: If you are using a build tool or a module bundler such as Webpack, then this is the preferred option for adding Bootstrap to your React application &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;npm install bootstrap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;React Bootstrap Package: In this case, you can add Bootstrap to our React app is by using a package that has rebuilt Bootstrap components to work particularly as React components. Below packages are popular in this category, &#xA;    &lt;ol&gt; &#xA;     &lt;li&gt;react-bootstrap&lt;/li&gt; &#xA;     &lt;li&gt;reactstrap&lt;/li&gt; &#xA;    &lt;/ol&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;300&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Can you list down top websites or applications using react as front end framework?&lt;/h3&gt; &lt;p&gt;Below are the &lt;code&gt;top 10 websites&lt;/code&gt; using React as their front-end framework,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Facebook&lt;/li&gt; &#xA;   &lt;li&gt;Uber&lt;/li&gt; &#xA;   &lt;li&gt;Instagram&lt;/li&gt; &#xA;   &lt;li&gt;WhatsApp&lt;/li&gt; &#xA;   &lt;li&gt;Khan Academy&lt;/li&gt; &#xA;   &lt;li&gt;Airbnb&lt;/li&gt; &#xA;   &lt;li&gt;Dropbox&lt;/li&gt; &#xA;   &lt;li&gt;Flipboard&lt;/li&gt; &#xA;   &lt;li&gt;Netflix&lt;/li&gt; &#xA;   &lt;li&gt;PayPal&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;301&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is it recommended to use CSS In JS technique in React?&lt;/h3&gt; React does not have any opinion about how styles are defined but if you are a beginner then good starting point is to define your styles in a separate *.css file as usual and refer to them using className. This functionality is not part of React but came from third-party libraries. But If you want to try a different approach(CSS-In-JS) then styled-components library is a good option.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;302&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Do I need to rewrite all my class components with hooks?&lt;/h3&gt; No. But you can try Hooks in a few components(or new components) without rewriting any existing code. Because there are no plans to remove classes in ReactJS.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;303&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How to fetch data with React Hooks?&lt;/h3&gt; &lt;p&gt;The effect hook called &lt;code&gt;useEffect&lt;/code&gt; is used to fetch the data with axios from the API and to set the data in the local state of the component with the state hook’s update function.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example in which it fetches list of react articles from the API&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import React, { useState, useEffect } from &#39;react&#39;;&#xA;import axios from &#39;axios&#39;;&#xA;&#xA;function App() {&#xA;  const [data, setData] = useState({ hits: [] });&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    (async () =&amp;gt; {&#xA;      const result = await axios(&#xA;        &#39;http://hn.algolia.com/api/v1/search?query=react&#39;,&#xA;      );&#xA;&#xA;      setData(result.data);&#xA;    })()&#xA;  }, []);&#xA;&#xA;  return (&#xA;    &amp;lt;ul&amp;gt;&#xA;      {data.hits.map(item =&amp;gt; (&#xA;        &amp;lt;li key={item.objectID}&amp;gt;&#xA;          &amp;lt;a href={item.url}&amp;gt;{item.title}&amp;lt;/a&amp;gt;&#xA;        &amp;lt;/li&amp;gt;&#xA;      ))}&#xA;    &amp;lt;/ul&amp;gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember we provided an empty array as second argument to the effect hook to avoid activating it on component updates but only on mounting of the component. i.e, It fetches only on component mount.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;304&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Is Hooks cover all use cases for classes?&lt;/h3&gt; Hooks doesn&#39;t cover all use cases of classes but there is a plan to add them soon. Currently there are no Hook equivalents to the uncommon &lt;strong&gt;getSnapshotBeforeUpdate&lt;/strong&gt; and &lt;strong&gt;componentDidCatch&lt;/strong&gt; lifecycles yet.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;305&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the stable release for hooks support?&lt;/h3&gt; &lt;p&gt;React includes a stable implementation of React Hooks in 16.8 release for below packages&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;React DOM&lt;/li&gt; &#xA;   &lt;li&gt;React DOM Server&lt;/li&gt; &#xA;   &lt;li&gt;React Test Renderer&lt;/li&gt; &#xA;   &lt;li&gt;React Shallow Renderer&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;306&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Why do we use array destructuring (square brackets notation) in &lt;code&gt;useState&lt;/code&gt;?&lt;/h3&gt; &lt;p&gt;When we declare a state variable with &lt;code&gt;useState&lt;/code&gt;, it returns a pair — an array with two items. The first item is the current value, and the second is a function that updates the value. Using [0] and [1] to access them is a bit confusing because they have a specific meaning. This is why we use array destructuring instead.&lt;/p&gt; &lt;p&gt;For example, the array index access would look as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt; var userStateVariable = useState(&#39;userProfile&#39;); // Returns an array pair&#xA; var user = userStateVariable[0]; // Access first item&#xA; var setUser = userStateVariable[1]; // Access second item&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whereas with array destructuring the variables can be accessed as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const [user, setUser] = useState(&#39;userProfile&#39;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the sources used for introducing hooks?&lt;/h3&gt; &lt;p&gt;Hooks got the ideas from several different sources. Below are some of them,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Previous experiments with functional APIs in the react-future repository&lt;/li&gt; &#xA;   &lt;li&gt;Community experiments with render prop APIs such as Reactions Component&lt;/li&gt; &#xA;   &lt;li&gt;State variables and state cells in DisplayScript.&lt;/li&gt; &#xA;   &lt;li&gt;Subscriptions in Rx.&lt;/li&gt; &#xA;   &lt;li&gt;Reducer components in ReasonReact.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;308&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you access imperative API of web components?&lt;/h3&gt; Web Components often expose an imperative API to implement its functions. You will need to use a &lt;strong&gt;ref&lt;/strong&gt; to interact with the DOM node directly if you want to access imperative API of a web component. But if you are using third-party Web Components, the best solution is to write a React component that behaves as a &lt;strong&gt;wrapper&lt;/strong&gt; for your Web Component.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;309&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is formik?&lt;/h3&gt; &lt;p&gt;Formik is a small react form library that helps you with the three major problems,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Getting values in and out of form state&lt;/li&gt; &#xA;   &lt;li&gt;Validation and error messages&lt;/li&gt; &#xA;   &lt;li&gt;Handling form submission&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;310&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are typical middleware choices for handling asynchronous calls in Redux?&lt;/h3&gt; Some of the popular middleware choices for handling asynchronous calls in Redux eco system are &lt;code&gt;Redux Thunk, Redux Promise, Redux Saga&lt;/code&gt;.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;311&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Do browsers understand JSX code?&lt;/h3&gt; No, browsers can&#39;t understand JSX code. You need a transpiler to convert your JSX to regular Javascript that browsers can understand. The most widely used transpiler right now is Babel.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;312&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Describe about data flow in react?&lt;/h3&gt; React implements one-way reactive data flow using props which reduce boilerplate and is easier to understand than traditional two-way data binding.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;313&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is react scripts?&lt;/h3&gt; The &lt;code&gt;react-scripts&lt;/code&gt; package is a set of scripts from the create-react-app starter pack which helps you kick off projects without configuring. The &lt;code&gt;react-scripts start&lt;/code&gt; command sets up the development environment and starts a server, as well as hot module reloading.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;314&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the features of create react app?&lt;/h3&gt; &lt;p&gt;Below are the list of some of the features provided by create react app.&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;React, JSX, ES6, Typescript and Flow syntax support.&lt;/li&gt; &#xA;   &lt;li&gt;Autoprefixed CSS&lt;/li&gt; &#xA;   &lt;li&gt;CSS Reset/Normalize&lt;/li&gt; &#xA;   &lt;li&gt;A live development server&lt;/li&gt; &#xA;   &lt;li&gt;A fast interactive unit test runner with built-in support for coverage reporting&lt;/li&gt; &#xA;   &lt;li&gt;A build script to bundle JS, CSS, and images for production, with hashes and sourcemaps&lt;/li&gt; &#xA;   &lt;li&gt;An offline-first service worker and a web app manifest, meeting all the Progressive Web App criteria.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;315&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of renderToNodeStream method?&lt;/h3&gt; The &lt;code&gt;ReactDOMServer#renderToNodeStream&lt;/code&gt; method is used to generate HTML on the server and send the markup down on the initial request for faster page loads. It also helps search engines to crawl your pages easily for SEO purposes. &lt;strong&gt;Note:&lt;/strong&gt; Remember this method is not available in the browser but only server.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;316&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is MobX?&lt;/h3&gt; MobX is a simple, scalable and battle tested state management solution for applying functional reactive programming (TFRP). For reactJs application, you need to install below packages, &lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install mobx --save&#xA;npm install mobx-react --save&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;317&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the differences between Redux and MobX?&lt;/h3&gt; &lt;p&gt;Below are the main differences between Redux and MobX,&lt;/p&gt; &#xA;  &lt;table&gt; &#xA;   &lt;thead&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;th&gt;Topic&lt;/th&gt; &#xA;     &lt;th&gt;Redux&lt;/th&gt; &#xA;     &lt;th&gt;MobX&lt;/th&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/thead&gt; &#xA;   &lt;tbody&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Definition&lt;/td&gt; &#xA;     &lt;td&gt;It is a javascript library for managing the application state&lt;/td&gt; &#xA;     &lt;td&gt;It is a library for reactively managing the state of your applications&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Programming&lt;/td&gt; &#xA;     &lt;td&gt;It is mainly written in ES6&lt;/td&gt; &#xA;     &lt;td&gt;It is written in JavaScript(ES5)&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Data Store&lt;/td&gt; &#xA;     &lt;td&gt;There is only one large store exist for data storage&lt;/td&gt; &#xA;     &lt;td&gt;There is more than one store for storage&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Usage&lt;/td&gt; &#xA;     &lt;td&gt;Mainly used for large and complex applications&lt;/td&gt; &#xA;     &lt;td&gt;Used for simple applications&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;Performance&lt;/td&gt; &#xA;     &lt;td&gt;Need to be improved&lt;/td&gt; &#xA;     &lt;td&gt;Provides better performance&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;    &lt;tr&gt; &#xA;     &lt;td&gt;How it stores&lt;/td&gt; &#xA;     &lt;td&gt;Uses JS Object to store&lt;/td&gt; &#xA;     &lt;td&gt;Uses observable to store the data&lt;/td&gt; &#xA;    &lt;/tr&gt; &#xA;   &lt;/tbody&gt; &#xA;  &lt;/table&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;318&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Should I learn ES6 before learning ReactJS?&lt;/h3&gt; &lt;p&gt;No, you don’t have to learn es2015/es6 to learn react. But you may find many resources or React ecosystem uses ES6 extensively. Let&#39;s see some of the frequently used ES6 features,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Destructuring:&lt;/strong&gt; To get props and use them in a component &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// in es 5&#xA; var someData = this.props.someData&#xA; var dispatch = this.props.dispatch&#xA;&#xA;// in es6&#xA;const { someData, dispatch } = this.props&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Spread operator: Helps in passing props down into a component &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// in es 5&#xA;&amp;lt;SomeComponent someData={this.props.someData} dispatch={this.props.dispatch} /&amp;gt;&#xA;&#xA;// in es6&#xA;&amp;lt;SomeComponent {...this.props} /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;   &lt;li&gt;Arrow functions: Makes compact syntax &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// es 5&#xA;var users = usersList.map(function (user) {&#xA; return &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;&#xA;})&#xA;// es 6&#xA;const users = usersList.map(user =&amp;gt; &amp;lt;li&amp;gt;{user.name}&amp;lt;/li&amp;gt;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;319&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is Concurrent Rendering?&lt;/h3&gt; &lt;p&gt;The Concurrent rendering makes React apps to be more responsive by rendering component trees without blocking the main UI thread. It allows React to interrupt a long-running render to handle a high-priority event. i.e, When you enabled concurrent Mode, React will keep an eye on other tasks that need to be done, and if there&#39;s something with a higher priority it will pause what it is currently rendering and let the other task finish first. You can enable this in two ways,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// 1. Part of an app by wrapping with ConcurrentMode&#xA;&amp;lt;React.unstable_ConcurrentMode&amp;gt;&#xA;  &amp;lt;Something /&amp;gt;&#xA;&amp;lt;/React.unstable_ConcurrentMode&amp;gt;&#xA;&#xA;// 2. Whole app using createRoot&#xA;ReactDOM.unstable_createRoot(domNode).render(&amp;lt;App /&amp;gt;);&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;320&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between async mode and concurrent mode?&lt;/h3&gt; Both refers the same thing. Previously concurrent Mode being referred to as &#34;Async Mode&#34; by React team. The name has been changed to highlight React’s ability to perform work on different priority levels. So it avoids the confusion from other approaches to Async Rendering.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;321&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;Can I use javascript urls in react16.9?&lt;/h3&gt; &lt;p&gt;Yes, you can use javascript: URLs but it will log a warning in the console. Because URLs starting with javascript: are dangerous by including unsanitized output in a tag like &lt;code&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; and create a security hole.&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;const companyProfile = {&#xA;  website: &#34;javascript: alert(&#39;Your website is hacked&#39;)&#34;,&#xA;};&#xA;// It will log a warning&#xA;&amp;lt;a href={companyProfile.website}&amp;gt;More details&amp;lt;/a&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Remember that the future versions will throw an error for javascript URLs.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;322&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the purpose of eslint plugin for hooks?&lt;/h3&gt; &lt;p&gt;The ESLint plugin enforces rules of Hooks to avoid bugs. It assumes that any function starting with ”use” and a capital letter right after it is a Hook. In particular, the rule enforces that,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Calls to Hooks are either inside a PascalCase function (assumed to be a component) or another useSomething function (assumed to be a custom Hook).&lt;/li&gt; &#xA;   &lt;li&gt;Hooks are called in the same order on every render.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;323&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between Imperative and Declarative in React?&lt;/h3&gt; &lt;p&gt;Imagine a simple UI component, such as a &#34;Like&#34; button. When you tap it, it turns blue if it was previously grey, and grey if it was previously blue.&lt;/p&gt; &lt;p&gt;The imperative way of doing this would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;if( user.likes() ) {&#xA;    if( hasBlue() ) {&#xA;        removeBlue();&#xA;        addGrey();&#xA;    } else {&#xA;        removeGrey();&#xA;        addBlue();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Basically, you have to check what is currently on the screen and handle all the changes necessary to redraw it with the current state, including undoing the changes from the previous state. You can imagine how complex this could be in a real-world scenario.&lt;/p&gt; &lt;p&gt;In contrast, the declarative approach would be:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;if( this.state.liked ) {&#xA;    return &amp;lt;blueLike /&amp;gt;;&#xA;} else {&#xA;    return &amp;lt;greyLike /&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Because the declarative approach separates concerns, this part of it only needs to handle how the UI should look in a sepecific state, and is therefore much simpler to understand.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;324&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the benefits of using typescript with reactjs?&lt;/h3&gt; &lt;p&gt;Below are some of the benefits of using typescript with Reactjs,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;It is possible to use latest JavaScript features&lt;/li&gt; &#xA;   &lt;li&gt;Use of interfaces for complex type definitions&lt;/li&gt; &#xA;   &lt;li&gt;IDEs such as VS Code was made for TypeScript&lt;/li&gt; &#xA;   &lt;li&gt;Avoid bugs with the ease of readability and Validation&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you make sure that user remains authenticated on page refresh while using Context API State Management?&lt;/h3&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;When a user logs in and reload, to persist the state generally we add the load user action in the useEffect hooks in the main App.js. While using Redux, loadUser action can be easily accessed.&lt;/p&gt; &#xA;&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import {loadUser}  from &#39;../actions/auth&#39;;&#xA;store.dispatch(loadUser());&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;But while using &lt;strong&gt;Context API&lt;/strong&gt;, to access context in App.js, wrap the AuthState in index.js so that App.js can access the auth context. Now whenever the page reloads, no matter what route you are on, the user will be authenticated as &lt;strong&gt;loadUser&lt;/strong&gt; action will be triggered on each re-render.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;&lt;strong&gt;index.js&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React from &#39;react&#39;;&#xA;import ReactDOM from &#39;react-dom&#39;;&#xA;import App from &#39;./App&#39;;&#xA;import AuthState from &#39;./context/auth/AuthState&#39;&#xA;&#xA;ReactDOM.render(&#xA;  &amp;lt;React.StrictMode&amp;gt;&#xA;    &amp;lt;AuthState&amp;gt;&#xA;      &amp;lt;App /&amp;gt;&#xA;    &amp;lt;/AuthState&amp;gt;&#xA;  &amp;lt;/React.StrictMode&amp;gt;,&#xA;  document.getElementById(&#39;root&#39;)&#xA;);&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;  const authContext = useContext(AuthContext);&#xA;&#xA;  const { loadUser } = authContext;&#xA;&#xA;  useEffect(() =&amp;gt; {&#xA;    loadUser();&#xA;  },[])&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;loadUser&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;    const loadUser = async () =&amp;gt; {&#xA;        const token = sessionStorage.getItem(&#39;token&#39;);&#xA;&#xA;        if(!token){&#xA;            dispatch({&#xA;                type: ERROR&#xA;            })&#xA;        }&#xA;        setAuthToken(token);&#xA;&#xA;        try {&#xA;            const res = await axios(&#39;/api/auth&#39;); &#xA;&#xA;            dispatch({&#xA;                type: USER_LOADED,&#xA;                payload: res.data.data&#xA;            })&#xA;            &#xA;        } catch (err) {&#xA;           console.error(err); &#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;326&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are the benefits of new JSX transform?&lt;/h3&gt; &lt;p&gt;There are three major benefits of new JSX transform,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;It is possible to use JSX without importing React packages&lt;/li&gt; &#xA;   &lt;li&gt;The compiled output might improve the bundle size in a small amount&lt;/li&gt; &#xA;   &lt;li&gt;The future improvements provides the flexibility to reduce the number of concepts to learn React.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;327&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How does new JSX transform different from old transform?&lt;/h3&gt; &lt;p&gt;The new JSX transform doesn’t require React to be in scope. i.e, You don&#39;t need to import React package for simple scenarios.&lt;/p&gt; &lt;p&gt;Let&#39;s take an example to look at the main differences between the old and the new transform,&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Old Transform:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React from &#39;react&#39;;&#xA;&#xA;function App() {&#xA;  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now JSX transform convert the above code into regular JavaScript as below,&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import React from &#39;react&#39;;&#xA;&#xA;function App() {&#xA;  return React.createElement(&#39;h1&#39;, null, &#39;Good morning!!&#39;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;New Transform:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The new JSX transform doesn&#39;t require any React imports&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;function App() {&#xA;  return &amp;lt;h1&amp;gt;Good morning!!&amp;lt;/h1&amp;gt;;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Under the hood JSX transform compiles to below code&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;import {jsx as _jsx} from &#39;react/jsx-runtime&#39;;&#xA;&#xA;function App() {&#xA;  return _jsx(&#39;h1&#39;, { children: &#39;Good morning!!&#39; });&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You still need to import React to use Hooks.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;328&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;How do you get redux scaffolding using create-react-app?&lt;/h3&gt; &lt;p&gt;Redux team has provided official redux+js or redux+typescript templates for create-react-app project. The generated project setup includes,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Redux Toolkit and React-Redux dependencies&lt;/li&gt; &#xA;   &lt;li&gt;Create and configure Redux store&lt;/li&gt; &#xA;   &lt;li&gt;React-Redux &lt;code&gt;&amp;lt;Provider&amp;gt;&lt;/code&gt; passing the store to React components&lt;/li&gt; &#xA;   &lt;li&gt;Small &#34;counter&#34; example to demo how to add redux logic and React-Redux hooks API to interact with the store from components&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;p&gt;The below commands need to be executed along with template option as below,&lt;/p&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Javascript template:&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;npx create-react-app my-app --template redux&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;  &lt;ol start=&#34;2&#34;&gt; &#xA;   &lt;li&gt;&lt;strong&gt;Typescript template:&lt;/strong&gt;&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;npx create-react-app my-app --template redux-typescript&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;329&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What are React Server components?&lt;/h3&gt; &lt;p&gt;React Server Component is a way to write React component that gets rendered in the server-side with the purpose of improving React app performance. These components allow us to load components from the backend.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; React Server Components is still under development and not recommended for production yet.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;330&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is prop drilling?&lt;/h3&gt; Prop Drilling is the process by which you pass data from one component of the React Component tree to another by going through other components that do not need the data but only help in passing it around.&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;331&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is state mutation and how to prevent it?&lt;/h3&gt; &lt;p&gt;&lt;code&gt;State mutation&lt;/code&gt; happens when you try to update the state of a component without actually using &lt;code&gt;setState&lt;/code&gt; function. This can happen when you are trying to do some computations using a state variable and unknowingly save the result in the same state variable. This is the main reason why it is advised to return new instances of state variables from the reducers by using Object.assign({}, ...) or spread syntax.&lt;/p&gt; &lt;p&gt;This can cause unknown issues in the UI as the value of the state variable got updated without telling React to check what all components were being affected from this update and it can cause UI bugs.&lt;/p&gt; &lt;p&gt;Ex:&lt;/p&gt; &lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;class A extends React.component {&#xA;  constructor(props) {&#xA;    super(props);&#xA;    this.state = {&#xA;      loading: false&#xA;    }&#xA; }&#xA;&#xA;componentDidMount() {&#xA;  let { loading } = this.state;&#xA;  loading = (() =&amp;gt; true)(); // Trying to perform an operation and directly saving in a state variable&#xA;}&#xA;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;How to prevent it:&lt;/strong&gt; Make sure your state variables are immutable by either enforcing immutability by using plugins like Immutable.js, always using &lt;code&gt;setState&lt;/code&gt; to make updates, and returning new instances in reducers when sending updated state values.&lt;/p&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;ol start=&#34;332&#34;&gt; &#xA; &lt;li&gt; &lt;h3&gt;What is the difference between useState and useRef hook?&lt;/h3&gt; &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;useState causes components to re-render after state updates whereas useRef doesn’t cause a component to re-render when the value or state changes. Essentially, useRef is like a “box” that can hold a mutable value in its (.current) property.&lt;/li&gt; &#xA;   &lt;li&gt;useState allows us to update the state inside components. While useRef allows refrencing DOM elements.&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://raw.githubusercontent.com/sudheerj/reactjs-interview-questions/master/#table-of-contents&#34;&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &#xA;&lt;h2&gt;Disclaimer&lt;/h2&gt; &#xA;&lt;p&gt;The questions provided in this repository are the summary of frequently asked questions across numerous companies. We cannot guarantee that these questions will actually be asked during your interview process, nor should you focus on memorizing all of them. The primary purpose is for you to get a sense of what some companies might ask — do not get discouraged if you don&#39;t know the answer to all of them ⁠— that is ok!&lt;/p&gt; &#xA;&lt;p&gt;Good luck with your interview 😊&lt;/p&gt; &#xA;&lt;hr&gt;</summary>
  </entry>
  <entry>
    <title>uutils/coreutils</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/uutils/coreutils</id>
    <link href="https://github.com/uutils/coreutils" rel="alternate"></link>
    <summary type="html">&lt;p&gt;Cross-platform Rust rewrite of the GNU coreutils&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;uutils coreutils&lt;/h1&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://crates.io/crates/coreutils&#34;&gt;&lt;img src=&#34;https://img.shields.io/crates/v/coreutils.svg?sanitize=true&#34; alt=&#34;Crates.io&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://discord.gg/wQVJbvJ&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/discord-join-7289DA.svg?logo=discord&amp;amp;longCache=true&amp;amp;style=flat&#34; alt=&#34;Discord&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/uutils/coreutils/raw/main/LICENSE&#34;&gt;&lt;img src=&#34;http://img.shields.io/badge/license-MIT-blue.svg?sanitize=true&#34; alt=&#34;License&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/Aaronepower/tokei&#34;&gt;&lt;img src=&#34;https://tokei.rs/b1/github/uutils/coreutils?category=code&#34; alt=&#34;LOC&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://deps.rs/repo/github/uutils/coreutils&#34;&gt;&lt;img src=&#34;https://deps.rs/repo/github/uutils/coreutils/status.svg?sanitize=true&#34; alt=&#34;dependency status&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://cirrus-ci.com/github/uutils/coreutils/master&#34;&gt;&lt;img src=&#34;https://api.cirrus-ci.com/github/uutils/coreutils.svg?sanitize=true&#34; alt=&#34;Build Status (FreeBSD)&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://codecov.io/gh/uutils/coreutils&#34;&gt;&lt;img src=&#34;https://codecov.io/gh/uutils/coreutils/branch/master/graph/badge.svg?sanitize=true&#34; alt=&#34;CodeCov&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;!-- markdownlint-disable commands-show-output no-duplicate-heading --&gt; &#xA;&lt;!-- spell-checker:ignore markdownlint ; (options) DESTDIR RUNTEST UTILNAME --&gt; &#xA;&lt;p&gt;uutils is an attempt at writing universal (as in cross-platform) CLI utilities in &lt;a href=&#34;http://www.rust-lang.org&#34;&gt;Rust&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To install it:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code&gt;$ cargo install coreutils&#xA;$ ~/.cargo/bin/coreutils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Why?&lt;/h2&gt; &#xA;&lt;p&gt;uutils aims to work on as many platforms as possible, to be able to use the same utils on Linux, Mac, Windows and other platforms. This ensures, for example, that scripts can be easily transferred between platforms. Rust was chosen not only because it is fast and safe, but is also excellent for writing cross-platform code.&lt;/p&gt; &#xA;&lt;h2&gt;Documentation&lt;/h2&gt; &#xA;&lt;p&gt;uutils has both user and developer documentation available:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://uutils.github.io/coreutils-docs/user/&#34;&gt;User Manual&lt;/a&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://uutils.github.io/coreutils-docs/dev/coreutils/&#34;&gt;Developer Documentation&lt;/a&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;Both can also be generated locally, the instructions for that can be found in the &lt;a href=&#34;https://github.com/uutils/coreutils-docs&#34;&gt;coreutils docs&lt;/a&gt; repository.&lt;/p&gt; &#xA;&lt;!-- ANCHOR: installation (this mark is needed for mdbook) --&gt; &#xA;&lt;h2&gt;Requirements&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Rust (&lt;code&gt;cargo&lt;/code&gt;, &lt;code&gt;rustc&lt;/code&gt;)&lt;/li&gt; &#xA; &lt;li&gt;GNU Make (optional)&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h3&gt;Rust Version&lt;/h3&gt; &#xA;&lt;p&gt;uutils follows Rust&#39;s release channels and is tested against stable, beta and nightly. The current oldest supported version of the Rust compiler is &lt;code&gt;1.56&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Building&lt;/h2&gt; &#xA;&lt;p&gt;There are currently two methods to build the uutils binaries: either Cargo or GNU Make.&lt;/p&gt; &#xA;&lt;blockquote&gt; &#xA; &lt;p&gt;Building the full package, including all documentation, requires both Cargo and Gnu Make on a Unix platform.&lt;/p&gt; &#xA;&lt;/blockquote&gt; &#xA;&lt;p&gt;For either method, we first need to fetch the repository:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git clone https://github.com/uutils/coreutils&#xA;$ cd coreutils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Cargo&lt;/h3&gt; &#xA;&lt;p&gt;Building uutils using Cargo is easy because the process is the same as for every other Rust program:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo build --release&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command builds the most portable common core set of uutils into a multicall (BusyBox-type) binary, named &#39;coreutils&#39;, on most Rust-supported platforms.&lt;/p&gt; &#xA;&lt;p&gt;Additional platform-specific uutils are often available. Building these expanded sets of uutils for a platform (on that platform) is as simple as specifying it as a feature:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo build --release --features macos&#xA;# or ...&#xA;$ cargo build --release --features windows&#xA;# or ...&#xA;$ cargo build --release --features unix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t want to build every utility available on your platform into the final binary, you can also specify which ones you want to build manually. For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo build --features &#34;base32 cat echo rm&#34; --no-default-features&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you don&#39;t want to build the multicall binary and would prefer to build the utilities as individual binaries, that is also possible. Each utility is contained in its own package within the main repository, named &#34;uu_UTILNAME&#34;. To build individual utilities, use cargo to build just the specific packages (using the &lt;code&gt;--package&lt;/code&gt; [aka &lt;code&gt;-p&lt;/code&gt;] option). For example:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo build -p uu_base32 -p uu_cat -p uu_echo -p uu_rm&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GNU Make&lt;/h3&gt; &#xA;&lt;p&gt;Building using &lt;code&gt;make&lt;/code&gt; is a simple process as well.&lt;/p&gt; &#xA;&lt;p&gt;To simply build all available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build all but a few of the available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make SKIP_UTILS=&#39;UTILITY_1 UTILITY_2&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To build only a few of the available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make UTILS=&#39;UTILITY_1 UTILITY_2&#39;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Installation&lt;/h2&gt; &#xA;&lt;h3&gt;Cargo&lt;/h3&gt; &#xA;&lt;p&gt;Likewise, installing can simply be done using:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo install --path .&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;This command will install uutils into Cargo&#39;s &lt;em&gt;bin&lt;/em&gt; folder (&lt;em&gt;e.g.&lt;/em&gt; &lt;code&gt;$HOME/.cargo/bin&lt;/code&gt;).&lt;/p&gt; &#xA;&lt;p&gt;This does not install files necessary for shell completion. For shell completion to work, use &lt;code&gt;GNU Make&lt;/code&gt; or see &lt;code&gt;Manually install shell completions&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;GNU Make&lt;/h3&gt; &#xA;&lt;p&gt;To install all available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install using &lt;code&gt;sudo&lt;/code&gt; switch &lt;code&gt;-E&lt;/code&gt; must be used:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo -E make install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install all but a few of the available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make SKIP_UTILS=&#39;UTILITY_1 UTILITY_2&#39; install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install only a few of the available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make UTILS=&#39;UTILITY_1 UTILITY_2&#39; install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install every program with a prefix (e.g. uu-echo uu-cat):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make PROG_PREFIX=PREFIX_GOES_HERE install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To install the multicall binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make MULTICALL=y install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Set install parent directory (default value is /usr/local):&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# DESTDIR is also supported&#xA;$ make PREFIX=/my/path install&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Installing with &lt;code&gt;make&lt;/code&gt; installs shell completions for all installed utilities for &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;fish&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt;. Completions for &lt;code&gt;elvish&lt;/code&gt; and &lt;code&gt;powershell&lt;/code&gt; can also be generated; See &lt;code&gt;Manually install shell completions&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;NixOS&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;a href=&#34;https://nixos.org/nixpkgs/manual/&#34;&gt;standard package set&lt;/a&gt; of &lt;a href=&#34;https://nixos.org/&#34;&gt;NixOS&lt;/a&gt; provides this package out of the box since 18.03:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ nix-env -iA nixos.uutils-coreutils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Manually install shell completions&lt;/h3&gt; &#xA;&lt;p&gt;The &lt;code&gt;coreutils&lt;/code&gt; binary can generate completions for the &lt;code&gt;bash&lt;/code&gt;, &lt;code&gt;elvish&lt;/code&gt;, &lt;code&gt;fish&lt;/code&gt;, &lt;code&gt;powershell&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt; shells. It prints the result to stdout.&lt;/p&gt; &#xA;&lt;p&gt;The syntax is:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo run completion &amp;lt;utility&amp;gt; &amp;lt;shell&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;So, to install completions for &lt;code&gt;ls&lt;/code&gt; on &lt;code&gt;bash&lt;/code&gt; to &lt;code&gt;/usr/local/share/bash-completion/completions/ls&lt;/code&gt;, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cargo run completion ls bash &amp;gt; /usr/local/share/bash-completion/completions/ls&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h2&gt;Un-installation&lt;/h2&gt; &#xA;&lt;p&gt;Un-installation differs depending on how you have installed uutils. If you used Cargo to install, use Cargo to uninstall. If you used GNU Make to install, use Make to uninstall.&lt;/p&gt; &#xA;&lt;h3&gt;Cargo&lt;/h3&gt; &#xA;&lt;p&gt;To uninstall uutils:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo uninstall uutils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GNU Make&lt;/h3&gt; &#xA;&lt;p&gt;To uninstall all utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall every program with a set prefix:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make PROG_PREFIX=PREFIX_GOES_HERE uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall the multicall binary:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make MULTICALL=y uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To uninstall from a custom parent directory:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# DESTDIR is also supported&#xA;$ make PREFIX=/my/path uninstall&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;!-- ANCHOR_END: installation (this mark is needed for mdbook) --&gt; &#xA;&lt;h2&gt;Testing&lt;/h2&gt; &#xA;&lt;p&gt;Testing can be done using either Cargo or &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;h3&gt;Cargo&lt;/h3&gt; &#xA;&lt;p&gt;Just like with building, we follow the standard procedure for testing using Cargo:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;By default, &lt;code&gt;cargo test&lt;/code&gt; only runs the common programs. To run also platform specific tests, run:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo test --features unix&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you would prefer to test a select few utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo test --features &#34;chmod mv tail&#34; --no-default-features&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;If you also want to test the core utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cargo test  -p uucore -p coreutils&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To debug:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gdb --args target/debug/coreutils ls&#xA;(gdb) b ls.rs:79&#xA;(gdb) run&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;GNU Make&lt;/h3&gt; &#xA;&lt;p&gt;To simply test all available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To test all but a few of the available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make SKIP_UTILS=&#39;UTILITY_1 UTILITY_2&#39; test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To test only a few of the available utilities:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make UTILS=&#39;UTILITY_1 UTILITY_2&#39; test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To include tests for unimplemented behavior:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make UTILS=&#39;UTILITY_1 UTILITY_2&#39; SPEC=y test&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Run Busybox Tests&lt;/h3&gt; &#xA;&lt;p&gt;This testing functionality is only available on *nix operating systems and requires &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; &#xA;&lt;p&gt;To run busybox tests for all utilities for which busybox has tests&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make busytest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To run busybox tests for a few of the available utilities&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make UTILS=&#39;UTILITY_1 UTILITY_2&#39; busytest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;To pass an argument like &#34;-v&#34; to the busybox test runtime&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ make UTILS=&#39;UTILITY_1 UTILITY_2&#39; RUNTEST_ARGS=&#39;-v&#39; busytest&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;h3&gt;Comparing with GNU&lt;/h3&gt; &#xA;&lt;p&gt;Below is the evolution of how many GNU tests uutils passes. A more detailed breakdown of the GNU test results of the main branch can be found &lt;a href=&#34;https://uutils.github.io/coreutils-docs/user/test_coverage.html&#34;&gt;in the user manual&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;p&gt;&lt;img src=&#34;https://github.com/uutils/coreutils-tracking/raw/main/gnu-results.png?raw=true&#34; alt=&#34;Evolution over time&#34;&gt;&lt;/p&gt; &#xA;&lt;p&gt;To run locally:&lt;/p&gt; &#xA;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ bash util/build-gnu.sh&#xA;$ bash util/run-gnu-test.sh&#xA;# To run a single test:&#xA;$ bash util/run-gnu-test.sh tests/touch/not-owner.sh # for example&#xA;&lt;/code&gt;&lt;/pre&gt; &#xA;&lt;p&gt;Note that it relies on individual utilities (not the multicall binary).&lt;/p&gt; &#xA;&lt;h3&gt;Improving the GNU compatibility&lt;/h3&gt; &#xA;&lt;p&gt;The Python script &lt;code&gt;./util/remaining-gnu-error.py&lt;/code&gt; shows the list of failing tests in the CI.&lt;/p&gt; &#xA;&lt;p&gt;To improve the GNU compatibility, the following process is recommended:&lt;/p&gt; &#xA;&lt;ol&gt; &#xA; &lt;li&gt;Identify a test (the smaller, the better) on a program that you understand or is easy to understand. You can use the &lt;code&gt;./util/remaining-gnu-error.py&lt;/code&gt; script to help with this decision.&lt;/li&gt; &#xA; &lt;li&gt;Build both the GNU and Rust coreutils using: &lt;code&gt;bash util/build-gnu.sh&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Run the test with &lt;code&gt;bash util/run-gnu-test.sh &amp;lt;your test&amp;gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;li&gt;Start to modify &lt;code&gt;&amp;lt;your test&amp;gt;&lt;/code&gt; to understand what is wrong. Examples: &#xA;  &lt;ol&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;set -v&lt;/code&gt; to have the bash verbose mode&lt;/li&gt; &#xA;   &lt;li&gt;Add &lt;code&gt;echo $?&lt;/code&gt; where needed&lt;/li&gt; &#xA;   &lt;li&gt;When the variable &lt;code&gt;fail&lt;/code&gt; is used in the test, &lt;code&gt;echo $fail&lt;/code&gt; to see when the test started to fail&lt;/li&gt; &#xA;   &lt;li&gt;Bump the content of the output (ex: &lt;code&gt;cat err&lt;/code&gt;)&lt;/li&gt; &#xA;   &lt;li&gt;...&lt;/li&gt; &#xA;  &lt;/ol&gt; &lt;/li&gt; &#xA; &lt;li&gt;Or, if the test is simple, extract the relevant information to create a new test case running both GNU &amp;amp; Rust implementation&lt;/li&gt; &#xA; &lt;li&gt;Start to modify the Rust implementation to match the expected behavior&lt;/li&gt; &#xA; &lt;li&gt;Add a test to make sure that we don&#39;t regress (our test suite is super quick)&lt;/li&gt; &#xA;&lt;/ol&gt; &#xA;&lt;h2&gt;Contributing&lt;/h2&gt; &#xA;&lt;p&gt;To contribute to uutils, please see &lt;a href=&#34;https://raw.githubusercontent.com/uutils/coreutils/main/CONTRIBUTING.md&#34;&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt; &#xA;&lt;h2&gt;Utilities&lt;/h2&gt; &#xA;&lt;p&gt;Please note that this is not fully accurate:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Some new options can be added / removed in the GNU implementation;&lt;/li&gt; &#xA; &lt;li&gt;Some error management might be missing;&lt;/li&gt; &#xA; &lt;li&gt;Some behaviors might be different.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;See &lt;a href=&#34;https://github.com/uutils/coreutils/issues/3336&#34;&gt;https://github.com/uutils/coreutils/issues/3336&lt;/a&gt; for the main meta bugs (many are missing).&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;Done&lt;/th&gt; &#xA;   &lt;th&gt;WIP&lt;/th&gt; &#xA;   &lt;th&gt;To Do&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;arch&lt;/td&gt; &#xA;   &lt;td&gt;cp&lt;/td&gt; &#xA;   &lt;td&gt;stty&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;base32&lt;/td&gt; &#xA;   &lt;td&gt;date&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;base64&lt;/td&gt; &#xA;   &lt;td&gt;dd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;basename&lt;/td&gt; &#xA;   &lt;td&gt;df&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;basenc&lt;/td&gt; &#xA;   &lt;td&gt;expr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cat&lt;/td&gt; &#xA;   &lt;td&gt;install&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chcon&lt;/td&gt; &#xA;   &lt;td&gt;ls&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chgrp&lt;/td&gt; &#xA;   &lt;td&gt;more&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chmod&lt;/td&gt; &#xA;   &lt;td&gt;numfmt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chown&lt;/td&gt; &#xA;   &lt;td&gt;od (&lt;code&gt;--strings&lt;/code&gt; and 128-bit data types missing)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;chroot&lt;/td&gt; &#xA;   &lt;td&gt;pr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cksum&lt;/td&gt; &#xA;   &lt;td&gt;printf&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;comm&lt;/td&gt; &#xA;   &lt;td&gt;sort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;csplit&lt;/td&gt; &#xA;   &lt;td&gt;split&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;cut&lt;/td&gt; &#xA;   &lt;td&gt;tac&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dircolors&lt;/td&gt; &#xA;   &lt;td&gt;tail&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;dirname&lt;/td&gt; &#xA;   &lt;td&gt;test&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;du&lt;/td&gt; &#xA;   &lt;td&gt;dir&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;echo&lt;/td&gt; &#xA;   &lt;td&gt;vdir&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;env&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;expand&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;factor&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;false&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fmt&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fold&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;groups&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hashsum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;head&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hostid&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;hostname&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;id&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;join&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;kill&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;link&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ln&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;logname&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;md5sum&lt;/del&gt; (replaced by &lt;a href=&#34;https://github.com/uutils/coreutils/raw/main/src/uu/hashsum/src/hashsum.rs&#34;&gt;hashsum&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;sha1sum&lt;/del&gt; (replaced by &lt;a href=&#34;https://github.com/uutils/coreutils/raw/main/src/uu/hashsum/src/hashsum.rs&#34;&gt;hashsum&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;sha224sum&lt;/del&gt; (replaced by &lt;a href=&#34;https://github.com/uutils/coreutils/raw/main/src/uu/hashsum/src/hashsum.rs&#34;&gt;hashsum&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;sha256sum&lt;/del&gt; (replaced by &lt;a href=&#34;https://github.com/uutils/coreutils/raw/main/src/uu/hashsum/src/hashsum.rs&#34;&gt;hashsum&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;sha384sum&lt;/del&gt; (replaced by &lt;a href=&#34;https://github.com/uutils/coreutils/raw/main/src/uu/hashsum/src/hashsum.rs&#34;&gt;hashsum&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;&lt;del&gt;sha512sum&lt;/del&gt; (replaced by &lt;a href=&#34;https://github.com/uutils/coreutils/raw/main/src/uu/hashsum/src/hashsum.rs&#34;&gt;hashsum&lt;/a&gt;)&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mkdir&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mkfifo&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mknod&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mktemp&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;mv&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nice&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nl&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nohup&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;nproc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;paste&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pathchk&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pinky&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;printenv&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;ptx&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;pwd&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;readlink&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;realpath&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;relpath&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rm&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;rmdir&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;runcon&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;seq&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;shred&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;shuf&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sleep&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stat&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;stdbuf&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sum&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;sync&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tee&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;timeout&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;touch&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tr&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;true&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;truncate&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tsort&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;tty&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uname&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;unexpand&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uniq&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;unlink&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;uptime&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;users&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;who&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;whoami&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;yes&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;Targets that compile&lt;/h2&gt; &#xA;&lt;p&gt;This is an auto-generated table showing which binaries compile for each target-triple. Note that this &lt;strong&gt;does not&lt;/strong&gt; indicate that they are fully implemented, or that the tests pass.&lt;/p&gt; &#xA;&lt;table&gt; &#xA; &lt;thead&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;th&gt;######OS######&lt;/th&gt; &#xA;   &lt;th&gt;###ARCH####&lt;/th&gt; &#xA;   &lt;th&gt;arch&lt;/th&gt; &#xA;   &lt;th&gt;base32&lt;/th&gt; &#xA;   &lt;th&gt;base64&lt;/th&gt; &#xA;   &lt;th&gt;basename&lt;/th&gt; &#xA;   &lt;th&gt;cat&lt;/th&gt; &#xA;   &lt;th&gt;chgrp&lt;/th&gt; &#xA;   &lt;th&gt;chmod&lt;/th&gt; &#xA;   &lt;th&gt;chown&lt;/th&gt; &#xA;   &lt;th&gt;chroot&lt;/th&gt; &#xA;   &lt;th&gt;cksum&lt;/th&gt; &#xA;   &lt;th&gt;comm&lt;/th&gt; &#xA;   &lt;th&gt;cp&lt;/th&gt; &#xA;   &lt;th&gt;csplit&lt;/th&gt; &#xA;   &lt;th&gt;cut&lt;/th&gt; &#xA;   &lt;th&gt;date&lt;/th&gt; &#xA;   &lt;th&gt;df&lt;/th&gt; &#xA;   &lt;th&gt;dircolors&lt;/th&gt; &#xA;   &lt;th&gt;dirname&lt;/th&gt; &#xA;   &lt;th&gt;du&lt;/th&gt; &#xA;   &lt;th&gt;echo&lt;/th&gt; &#xA;   &lt;th&gt;env&lt;/th&gt; &#xA;   &lt;th&gt;expand&lt;/th&gt; &#xA;   &lt;th&gt;expr&lt;/th&gt; &#xA;   &lt;th&gt;factor&lt;/th&gt; &#xA;   &lt;th&gt;false&lt;/th&gt; &#xA;   &lt;th&gt;fmt&lt;/th&gt; &#xA;   &lt;th&gt;fold&lt;/th&gt; &#xA;   &lt;th&gt;groups&lt;/th&gt; &#xA;   &lt;th&gt;hashsum&lt;/th&gt; &#xA;   &lt;th&gt;head&lt;/th&gt; &#xA;   &lt;th&gt;hostid&lt;/th&gt; &#xA;   &lt;th&gt;hostname&lt;/th&gt; &#xA;   &lt;th&gt;id&lt;/th&gt; &#xA;   &lt;th&gt;install&lt;/th&gt; &#xA;   &lt;th&gt;join&lt;/th&gt; &#xA;   &lt;th&gt;kill&lt;/th&gt; &#xA;   &lt;th&gt;link&lt;/th&gt; &#xA;   &lt;th&gt;ln&lt;/th&gt; &#xA;   &lt;th&gt;logname&lt;/th&gt; &#xA;   &lt;th&gt;ls&lt;/th&gt; &#xA;   &lt;th&gt;mkdir&lt;/th&gt; &#xA;   &lt;th&gt;mkfifo&lt;/th&gt; &#xA;   &lt;th&gt;mknod&lt;/th&gt; &#xA;   &lt;th&gt;mktemp&lt;/th&gt; &#xA;   &lt;th&gt;more&lt;/th&gt; &#xA;   &lt;th&gt;mv&lt;/th&gt; &#xA;   &lt;th&gt;nice&lt;/th&gt; &#xA;   &lt;th&gt;nl&lt;/th&gt; &#xA;   &lt;th&gt;nohup&lt;/th&gt; &#xA;   &lt;th&gt;nproc&lt;/th&gt; &#xA;   &lt;th&gt;numfmt&lt;/th&gt; &#xA;   &lt;th&gt;od&lt;/th&gt; &#xA;   &lt;th&gt;paste&lt;/th&gt; &#xA;   &lt;th&gt;pathchk&lt;/th&gt; &#xA;   &lt;th&gt;pinky&lt;/th&gt; &#xA;   &lt;th&gt;printenv&lt;/th&gt; &#xA;   &lt;th&gt;printf&lt;/th&gt; &#xA;   &lt;th&gt;ptx&lt;/th&gt; &#xA;   &lt;th&gt;pwd&lt;/th&gt; &#xA;   &lt;th&gt;readlink&lt;/th&gt; &#xA;   &lt;th&gt;realpath&lt;/th&gt; &#xA;   &lt;th&gt;relpath&lt;/th&gt; &#xA;   &lt;th&gt;rm&lt;/th&gt; &#xA;   &lt;th&gt;rmdir&lt;/th&gt; &#xA;   &lt;th&gt;seq&lt;/th&gt; &#xA;   &lt;th&gt;shred&lt;/th&gt; &#xA;   &lt;th&gt;shuf&lt;/th&gt; &#xA;   &lt;th&gt;sleep&lt;/th&gt; &#xA;   &lt;th&gt;sort&lt;/th&gt; &#xA;   &lt;th&gt;split&lt;/th&gt; &#xA;   &lt;th&gt;stat&lt;/th&gt; &#xA;   &lt;th&gt;stdbuf&lt;/th&gt; &#xA;   &lt;th&gt;sum&lt;/th&gt; &#xA;   &lt;th&gt;sync&lt;/th&gt; &#xA;   &lt;th&gt;tac&lt;/th&gt; &#xA;   &lt;th&gt;tail&lt;/th&gt; &#xA;   &lt;th&gt;tee&lt;/th&gt; &#xA;   &lt;th&gt;test&lt;/th&gt; &#xA;   &lt;th&gt;timeout&lt;/th&gt; &#xA;   &lt;th&gt;touch&lt;/th&gt; &#xA;   &lt;th&gt;tr&lt;/th&gt; &#xA;   &lt;th&gt;true&lt;/th&gt; &#xA;   &lt;th&gt;truncate&lt;/th&gt; &#xA;   &lt;th&gt;tsort&lt;/th&gt; &#xA;   &lt;th&gt;tty&lt;/th&gt; &#xA;   &lt;th&gt;uname&lt;/th&gt; &#xA;   &lt;th&gt;unexpand&lt;/th&gt; &#xA;   &lt;th&gt;uniq&lt;/th&gt; &#xA;   &lt;th&gt;unlink&lt;/th&gt; &#xA;   &lt;th&gt;uptime&lt;/th&gt; &#xA;   &lt;th&gt;users&lt;/th&gt; &#xA;   &lt;th&gt;wc&lt;/th&gt; &#xA;   &lt;th&gt;who&lt;/th&gt; &#xA;   &lt;th&gt;whoami&lt;/th&gt; &#xA;   &lt;th&gt;yes&lt;/th&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/thead&gt; &#xA; &lt;tbody&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;linux-gnu&lt;/td&gt; &#xA;   &lt;td&gt;aarch64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;linux-gnu&lt;/td&gt; &#xA;   &lt;td&gt;i686&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;linux-gnu&lt;/td&gt; &#xA;   &lt;td&gt;powerpc64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;linux-gnu&lt;/td&gt; &#xA;   &lt;td&gt;riscv64gc&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;linux-gnu&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;windows-msvc&lt;/td&gt; &#xA;   &lt;td&gt;aarch64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;windows-gnu&lt;/td&gt; &#xA;   &lt;td&gt;i686&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;windows-msvc&lt;/td&gt; &#xA;   &lt;td&gt;i686&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;windows-gnu&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;windows-msvc&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple MacOS&lt;/td&gt; &#xA;   &lt;td&gt;aarch64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;apple MacOS&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;freebsd&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;netbsd&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android&lt;/td&gt; &#xA;   &lt;td&gt;aarch64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;android&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;   &lt;td&gt;y&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;solaris&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;wasi&lt;/td&gt; &#xA;   &lt;td&gt;wasm32&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;redox&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fuchsia&lt;/td&gt; &#xA;   &lt;td&gt;aarch64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA;  &lt;tr&gt; &#xA;   &lt;td&gt;fuchsia&lt;/td&gt; &#xA;   &lt;td&gt;x86_64&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;   &lt;td&gt;&lt;/td&gt; &#xA;  &lt;/tr&gt; &#xA; &lt;/tbody&gt; &#xA;&lt;/table&gt; &#xA;&lt;h2&gt;License&lt;/h2&gt; &#xA;&lt;p&gt;uutils is licensed under the MIT License - see the &lt;code&gt;LICENSE&lt;/code&gt; file for details&lt;/p&gt; &#xA;&lt;p&gt;GNU Coreutils is licensed under the GPL 3.0 or later.&lt;/p&gt;</summary>
  </entry>
  <entry>
    <title>ml-tooling/best-of-ml-python</title>
    <updated>2022-05-29T01:31:41Z</updated>
    <id>tag:github.com,2022-05-29:/ml-tooling/best-of-ml-python</id>
    <link href="https://github.com/ml-tooling/best-of-ml-python" rel="alternate"></link>
    <summary type="html">&lt;p&gt;🏆 A ranked list of awesome machine learning Python libraries. Updated weekly.&lt;/p&gt;&lt;hr&gt;&lt;h1 align=&#34;center&#34;&gt; Best-of Machine Learning with Python &lt;br&gt; &lt;/h1&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;strong&gt;🏆&amp;nbsp; A ranked list of awesome machine learning Python libraries. Updated weekly.&lt;/strong&gt; &lt;/p&gt; &#xA;&lt;p align=&#34;center&#34;&gt; &lt;a href=&#34;https://github.com/ml-tooling/best-of&#34; title=&#34;Best-of-badge&#34;&gt;&lt;img src=&#34;http://bit.ly/3o3EHNN&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#Contents&#34; title=&#34;Project Count&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/projects-900-blue.svg?color=5ac4bf&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#Contribution&#34; title=&#34;Contributions are welcome&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/contributions-welcome-green.svg?sanitize=true&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/releases&#34; title=&#34;Best-of Updates&#34;&gt;&lt;img src=&#34;https://img.shields.io/github/release-date/ml-tooling/best-of-ml-python?color=green&amp;amp;label=updated&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://mltooling.substack.com/subscribe&#34; title=&#34;Subscribe to newsletter&#34;&gt;&lt;img src=&#34;http://bit.ly/2Md9rxM&#34;&gt;&lt;/a&gt; &lt;a href=&#34;https://twitter.com/mltooling&#34; title=&#34;Follow on Twitter&#34;&gt;&lt;img src=&#34;https://img.shields.io/twitter/follow/mltooling.svg?style=social&amp;amp;label=Follow&#34;&gt;&lt;/a&gt; &lt;/p&gt; &#xA;&lt;p&gt;This curated list contains 900 awesome open-source projects with a total of 3.4M stars grouped into 34 categories. All projects are ranked by a project-quality score, which is calculated based on various metrics automatically collected from GitHub and different package managers. If you like to add or update projects, feel free to open an &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/issues/new/choose&#34;&gt;issue&lt;/a&gt;, submit a &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/pulls&#34;&gt;pull request&lt;/a&gt;, or directly edit the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/edit/main/projects.yaml&#34;&gt;projects.yaml&lt;/a&gt;. Contributions are very welcome!&lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;p align=&#34;center&#34;&gt; 🧙‍♂️&amp;nbsp; Discover other &lt;a href=&#34;https://best-of.org&#34;&gt;best-of lists&lt;/a&gt; or create &lt;a href=&#34;https://github.com/best-of-lists/best-of/raw/main/create-best-of-list.md&#34;&gt;your own&lt;/a&gt;.&lt;br&gt; 📫&amp;nbsp; Subscribe to our &lt;a href=&#34;https://mltooling.substack.com/subscribe&#34;&gt;newsletter&lt;/a&gt; for updates and trending projects. &lt;/p&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Contents&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#machine-learning-frameworks&#34;&gt;Machine Learning Frameworks&lt;/a&gt; &lt;em&gt;56 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-visualization&#34;&gt;Data Visualization&lt;/a&gt; &lt;em&gt;51 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#text-data--nlp&#34;&gt;Text Data &amp;amp; NLP&lt;/a&gt; &lt;em&gt;96 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#image-data&#34;&gt;Image Data&lt;/a&gt; &lt;em&gt;60 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#graph-data&#34;&gt;Graph Data&lt;/a&gt; &lt;em&gt;36 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#audio-data&#34;&gt;Audio Data&lt;/a&gt; &lt;em&gt;28 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#geospatial-data&#34;&gt;Geospatial Data&lt;/a&gt; &lt;em&gt;22 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#financial-data&#34;&gt;Financial Data&lt;/a&gt; &lt;em&gt;25 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#time-series-data&#34;&gt;Time Series Data&lt;/a&gt; &lt;em&gt;26 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#medical-data&#34;&gt;Medical Data&lt;/a&gt; &lt;em&gt;19 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#tabular-data&#34;&gt;Tabular Data&lt;/a&gt; &lt;em&gt;5 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#optical-character-recognition&#34;&gt;Optical Character Recognition&lt;/a&gt; &lt;em&gt;12 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-containers--structures&#34;&gt;Data Containers &amp;amp; Structures&lt;/a&gt; &lt;em&gt;0 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-loading--extraction&#34;&gt;Data Loading &amp;amp; Extraction&lt;/a&gt; &lt;em&gt;2 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#web-scraping--crawling&#34;&gt;Web Scraping &amp;amp; Crawling&lt;/a&gt; &lt;em&gt;1 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#data-pipelines--streaming&#34;&gt;Data Pipelines &amp;amp; Streaming&lt;/a&gt; &lt;em&gt;43 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#distributed-machine-learning&#34;&gt;Distributed Machine Learning&lt;/a&gt; &lt;em&gt;33 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#hyperparameter-optimization--automl&#34;&gt;Hyperparameter Optimization &amp;amp; AutoML&lt;/a&gt; &lt;em&gt;47 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#reinforcement-learning&#34;&gt;Reinforcement Learning&lt;/a&gt; &lt;em&gt;23 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#recommender-systems&#34;&gt;Recommender Systems&lt;/a&gt; &lt;em&gt;16 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#privacy-machine-learning&#34;&gt;Privacy Machine Learning&lt;/a&gt; &lt;em&gt;6 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#workflow--experiment-tracking&#34;&gt;Workflow &amp;amp; Experiment Tracking&lt;/a&gt; &lt;em&gt;39 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#model-serialization--deployment&#34;&gt;Model Serialization &amp;amp; Deployment&lt;/a&gt; &lt;em&gt;16 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#model-interpretability&#34;&gt;Model Interpretability&lt;/a&gt; &lt;em&gt;52 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#vector-similarity-search-ann&#34;&gt;Vector Similarity Search (ANN)&lt;/a&gt; &lt;em&gt;12 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#probabilistics--statistics&#34;&gt;Probabilistics &amp;amp; Statistics&lt;/a&gt; &lt;em&gt;22 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#adversarial-robustness&#34;&gt;Adversarial Robustness&lt;/a&gt; &lt;em&gt;9 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#gpu-utilities&#34;&gt;GPU Utilities&lt;/a&gt; &lt;em&gt;18 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#tensorflow-utilities&#34;&gt;Tensorflow Utilities&lt;/a&gt; &lt;em&gt;15 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#jax-utilities&#34;&gt;Jax Utilities&lt;/a&gt; &lt;em&gt;2 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#sklearn-utilities&#34;&gt;Sklearn Utilities&lt;/a&gt; &lt;em&gt;17 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#pytorch-utilities&#34;&gt;Pytorch Utilities&lt;/a&gt; &lt;em&gt;32 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#database-clients&#34;&gt;Database Clients&lt;/a&gt; &lt;em&gt;1 projects&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#others&#34;&gt;Others&lt;/a&gt; &lt;em&gt;61 projects&lt;/em&gt;&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Explanation&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;🥇🥈🥉&amp;nbsp; Combined project-quality score&lt;/li&gt; &#xA; &lt;li&gt;⭐️&amp;nbsp; Star count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;🐣&amp;nbsp; New project &lt;em&gt;(less than 6 months old)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;💤&amp;nbsp; Inactive project &lt;em&gt;(6 months no activity)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;💀&amp;nbsp; Dead project &lt;em&gt;(12 months no activity)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;📈📉&amp;nbsp; Project is trending up or down&lt;/li&gt; &#xA; &lt;li&gt;➕&amp;nbsp; Project was recently added&lt;/li&gt; &#xA; &lt;li&gt;❗️&amp;nbsp; Warning &lt;em&gt;(e.g. missing/risky license)&lt;/em&gt;&lt;/li&gt; &#xA; &lt;li&gt;👨‍💻&amp;nbsp; Contributors count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;🔀&amp;nbsp; Fork count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;📋&amp;nbsp; Issue count from GitHub&lt;/li&gt; &#xA; &lt;li&gt;⏱️&amp;nbsp; Last update timestamp on package manager&lt;/li&gt; &#xA; &lt;li&gt;📥&amp;nbsp; Download count from package manager&lt;/li&gt; &#xA; &lt;li&gt;📦&amp;nbsp; Number of dependent projects&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Tensorflow related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Sklearn related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; PyTorch related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; MxNet related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Apache Spark related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Jupyter related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; PaddlePaddle related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Pandas related project&lt;/li&gt; &#xA; &lt;li&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&amp;nbsp; Jax related project&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Machine Learning Frameworks&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose machine learning and deep learning frameworks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;Tensorflow&lt;/a&gt;&lt;/b&gt; (🥇55 · ⭐ 170K) - An Open Source Machine Learning Framework for Everyone. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4K · 🔀 87K · 📦 200K · 📋 35K - 6% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow&#34;&gt;PyPi&lt;/a&gt; (📥 17M / month · 📦 14K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow&#34;&gt;Conda&lt;/a&gt; (📥 3.3M · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/tensorflow/tensorflow&#34;&gt;Docker Hub&lt;/a&gt; (📥 66M · ⭐ 2K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull tensorflow/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn/scikit-learn&#34;&gt;scikit-learn&lt;/a&gt;&lt;/b&gt; (🥇51 · ⭐ 50K) - scikit-learn: machine learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn/scikit-learn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2.6K · 🔀 23K · 📥 800 · 📦 350K · 📋 10K - 22% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn/scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-learn&#34;&gt;PyPi&lt;/a&gt; (📥 34M / month · 📦 25K · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-learn&#34;&gt;Conda&lt;/a&gt; (📥 13M · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;PyTorch&lt;/a&gt;&lt;/b&gt; (🥇49 · ⭐ 56K) - Tensors and Dynamic neural networks in Python with strong GPU.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3.3K · 🔀 16K · 📥 3.5K · 📋 28K - 35% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch&#34;&gt;PyPi&lt;/a&gt; (📥 9.3M / month · 📦 7K · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/pytorch&#34;&gt;Conda&lt;/a&gt; (📥 17M · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras&#34;&gt;Keras&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 55K) - Deep Learning for humans. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.1K · 🔀 19K · 📋 11K - 2% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras&#34;&gt;PyPi&lt;/a&gt; (📥 10M / month · 📦 300 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras&#34;&gt;Conda&lt;/a&gt; (📥 2.3M · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/xgboost&#34;&gt;XGBoost&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 23K) - Scalable, Portable and Distributed Gradient Boosting (GBDT, GBRT or.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/xgboost&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 560 · 🔀 8.4K · 📥 4.2K · 📦 31K · 📋 4.4K - 6% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/xgboost&#34;&gt;PyPi&lt;/a&gt; (📥 9.9M / month · 📦 1.3K · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/xgboost&#34;&gt;Conda&lt;/a&gt; (📥 2.6M · ⏱️ 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge xgboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/jax&#34;&gt;jax&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 18K) - Composable transformations of Python+NumPy programs: differentiate,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/jax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 400 · 🔀 1.6K · 📦 4.4K · 📋 3.3K - 32% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jax&#34;&gt;PyPi&lt;/a&gt; (📥 440K / month · 📦 300 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jaxlib&#34;&gt;Conda&lt;/a&gt; (📥 320K · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jaxlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/pytorch-lightning&#34;&gt;pytorch-lightning&lt;/a&gt;&lt;/b&gt; (🥈43 · ⭐ 19K) - The lightweight PyTorch wrapper for high-performance.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/pytorch-lightning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 680 · 🔀 2.3K · 📥 6.8K · 📦 9.1K · 📋 5K - 9% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-lightning&#34;&gt;PyPi&lt;/a&gt; (📥 3.8M / month · 📦 360 · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-lightning&#34;&gt;Conda&lt;/a&gt; (📥 440K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/statsmodels/statsmodels&#34;&gt;StatsModels&lt;/a&gt;&lt;/b&gt; (🥈43 · ⭐ 7.4K) - Statsmodels: statistical modeling and econometrics in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/statsmodels/statsmodels&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 370 · 🔀 2.4K · 📥 26 · 📦 64K · 📋 4.8K - 47% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/statsmodels/statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/statsmodels&#34;&gt;PyPi&lt;/a&gt; (📥 11M / month · 📦 4.5K · ⏱️ 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/statsmodels&#34;&gt;Conda&lt;/a&gt; (📥 6.2M · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge statsmodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/spark&#34;&gt;PySpark&lt;/a&gt;&lt;/b&gt; (🥈42 · ⭐ 33K) - Apache Spark Python API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/spark&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2.7K · 🔀 26K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/spark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyspark&#34;&gt;PyPi&lt;/a&gt; (📥 21M / month · 📦 830 · ⏱️ 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyspark&#34;&gt;Conda&lt;/a&gt; (📥 1.6M · ⏱️ 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/LightGBM&#34;&gt;LightGBM&lt;/a&gt;&lt;/b&gt; (🥈42 · ⭐ 14K) - A fast, distributed, high performance gradient boosting (GBT, GBDT, GBRT,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/LightGBM&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 260 · 🔀 3.5K · 📥 150K · 📦 13K · 📋 2.7K - 8% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/LightGBM&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightgbm&#34;&gt;PyPi&lt;/a&gt; (📥 7.1M / month · 📦 630 · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightgbm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightgbm&#34;&gt;Conda&lt;/a&gt; (📥 1M · ⏱️ 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightgbm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;PaddlePaddle&lt;/a&gt;&lt;/b&gt; (🥈41 · ⭐ 18K) - PArallel Distributed Deep LEarning: Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/Paddle&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 740 · 🔀 4.5K · 📥 15K · 📦 120 · 📋 16K - 18% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/Paddle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddlepaddle&#34;&gt;PyPi&lt;/a&gt; (📥 99K / month · 📦 48 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddlepaddle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/incubator-mxnet&#34;&gt;MXNet&lt;/a&gt;&lt;/b&gt; (🥈40 · ⭐ 20K) - Lightweight, Portable, Flexible Distributed/Mobile Deep Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/incubator-mxnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 970 · 🔀 6.9K · 📥 25K · 📋 9.7K - 20% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/incubator-mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mxnet&#34;&gt;PyPi&lt;/a&gt; (📥 330K / month · 📦 280 · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/mxnet&#34;&gt;Conda&lt;/a&gt; (📥 7.5K · 📦 5 · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda mxnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/catboost/catboost&#34;&gt;Catboost&lt;/a&gt;&lt;/b&gt; (🥈40 · ⭐ 6.5K) - A fast, scalable, high performance Gradient Boosting on Decision.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/catboost/catboost&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 990 · 🔀 1K · 📥 80K · 📋 1.8K - 21% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/catboost/catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/catboost&#34;&gt;PyPi&lt;/a&gt; (📥 2.6M / month · 📦 230 · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/catboost&#34;&gt;Conda&lt;/a&gt; (📥 1M · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge catboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fastai/fastai&#34;&gt;Fastai&lt;/a&gt;&lt;/b&gt; (🥈39 · ⭐ 22K) - The fastai deep learning library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fastai/fastai&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 610 · 🔀 7.2K · 📋 1.6K - 7% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fastai/fastai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fastai&#34;&gt;PyPi&lt;/a&gt; (📥 280K / month · 📦 300 · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fastai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;Jina&lt;/a&gt;&lt;/b&gt; (🥈38 · ⭐ 15K) - Cloud-native neural search framework for kind of data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jina-ai/jina&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 1.9K · 📦 280 · 📋 1.5K - 4% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jina-ai/jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jina&#34;&gt;PyPi&lt;/a&gt; (📥 60K / month · 📦 2 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jina-core&#34;&gt;Conda&lt;/a&gt; (📥 5.2K · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jina-core&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/jinaai/jina&#34;&gt;Docker Hub&lt;/a&gt; (📥 1.1M · ⭐ 7 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull jinaai/jina&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Theano/Theano&#34;&gt;Theano&lt;/a&gt;&lt;/b&gt; (🥈38 · ⭐ 9.6K) - Theano was a Python library that allows you to define, optimize, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Theano/Theano&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 380 · 🔀 2.5K · 📦 13K · 📋 2.8K - 24% open · ⏱️ 23.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Theano/Theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/theano&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 2.8K · ⏱️ 27.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/theano&#34;&gt;Conda&lt;/a&gt; (📥 2M · ⏱️ 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge theano&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/thinc&#34;&gt;Thinc&lt;/a&gt;&lt;/b&gt; (🥈37 · ⭐ 2.5K) - A refreshing functional take on deep learning, compatible with your favorite.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/thinc&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 51 · 🔀 250 · 📦 21K · 📋 120 - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/thinc&#34;&gt;PyPi&lt;/a&gt; (📥 5.7M / month · 📦 620 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/thinc&#34;&gt;Conda&lt;/a&gt; (📥 2M · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge thinc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/flink&#34;&gt;PyFlink&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 19K) - Apache Flink Python API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/flink&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.5K · 🔀 11K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/flink&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-flink&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 15 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-flink&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainer&#34;&gt;Chainer&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 5.7K) - A flexible framework of neural networks for deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chainer/chainer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 320 · 🔀 1.4K · 📦 2.6K · 📋 2K - 0% open · ⏱️ 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/chainer/chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chainer&#34;&gt;PyPi&lt;/a&gt; (📥 17K / month · 📦 400 · ⏱️ 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/chainer&#34;&gt;Conda&lt;/a&gt; (📥 7.6K · ⏱️ 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge chainer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/flax&#34;&gt;Flax&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 3K) - Flax is a neural network library for JAX that is designed for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/flax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 340 · 📥 42 · 📦 960 · 📋 520 - 22% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/flax&#34;&gt;PyPi&lt;/a&gt; (📥 180K / month · 📦 69 · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/flax&#34;&gt;Conda&lt;/a&gt; (📥 4.1K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge flax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/VowpalWabbit/vowpal_wabbit&#34;&gt;Vowpal Wabbit&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 8K) - Vowpal Wabbit is a machine learning system which pushes the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/VowpalWabbit/vowpal_wabbit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 320 · 🔀 1.8K · 📋 1.2K - 11% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/VowpalWabbit/vowpal_wabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vowpalwabbit&#34;&gt;PyPi&lt;/a&gt; (📥 58K / month · 📦 30 · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vowpalwabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vowpalwabbit&#34;&gt;Conda&lt;/a&gt; (📥 60K · ⏱️ 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vowpalwabbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ludwig-ai/ludwig&#34;&gt;Ludwig&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 8.3K) - Data-centric declarative deep learning framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ludwig-ai/ludwig&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 980 · 📦 120 · 📋 740 - 27% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ludwig-ai/ludwig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ludwig&#34;&gt;PyPi&lt;/a&gt; (📥 3.7K / month · 📦 9 · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ludwig&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#34;&gt;tensorflow-upstream&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 590 · 📉) - TensorFlow ROCm port. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4K · 🔀 68 · 📥 20 · 📋 330 - 17% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ROCmSoftwarePlatform/tensorflow-upstream&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-rocm&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 5 · ⏱️ 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-rocm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apple/turicreate&#34;&gt;Turi Create&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 11K) - Turi Create simplifies the development of custom machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apple/turicreate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 85 · 🔀 1.1K · 📥 6.1K · 📦 310 · 📋 1.8K - 27% open · ⏱️ 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apple/turicreate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/turicreate&#34;&gt;PyPi&lt;/a&gt; (📥 31K / month · 📦 19 · ⏱️ 30.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install turicreate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorpack/tensorpack&#34;&gt;tensorpack&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 6.2K) - A Neural Net Training Interface on TensorFlow, with focus.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorpack/tensorpack&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 58 · 🔀 1.8K · 📥 130 · 📦 1K · 📋 1.3K - 0% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorpack/tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorpack&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 46 · ⏱️ 22.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorpack&#34;&gt;Conda&lt;/a&gt; (📥 1.2K · ⏱️ 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mlpack/mlpack&#34;&gt;mlpack&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 4K) - mlpack: a scalable C++ machine learning library --. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mlpack/mlpack&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 290 · 🔀 1.4K · 📋 1.5K - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mlpack/mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlpack&#34;&gt;PyPi&lt;/a&gt; (📥 260 / month · 📦 1 · ⏱️ 28.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlpack&#34;&gt;Conda&lt;/a&gt; (📥 100K · ⏱️ 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlpack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/ignite&#34;&gt;Ignite&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 4K · 📉) - High-level library to help with training and evaluating neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/ignite&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 540 · 📋 1.1K - 12% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-ignite&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 81 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/ignite&#34;&gt;Conda&lt;/a&gt; (📥 88K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch ignite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/sonnet&#34;&gt;Sonnet&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 9.3K) - TensorFlow-based neural network library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/sonnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 53 · 🔀 1.3K · 📦 840 · 📋 180 - 13% open · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-sonnet&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 52 · ⏱️ 27.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sonnet&#34;&gt;Conda&lt;/a&gt; (📥 14K · ⏱️ 14.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sonnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arogozhnikov/einops&#34;&gt;einops&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 5.1K) - Deep learning operations reinvented (for pytorch, tensorflow, jax and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arogozhnikov/einops&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 220 · 📦 2.8K · 📋 110 - 29% open · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arogozhnikov/einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/einops&#34;&gt;PyPi&lt;/a&gt; (📥 3.2M / month · 📦 200 · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/einops&#34;&gt;Conda&lt;/a&gt; (📥 16K · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge einops&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/clab/dynet&#34;&gt;dyNET&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 3.3K) - DyNet: The Dynamic Neural Network Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/clab/dynet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 160 · 🔀 700 · 📥 5.8K · 📦 210 · 📋 920 - 28% open · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/clab/dynet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dyNET&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 28 · ⏱️ 21.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dyNET&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/dm-haiku&#34;&gt;Haiku&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 1.9K) - JAX-based neural network library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/dm-haiku&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 150 · 📦 440 · 📋 160 - 22% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-haiku&#34;&gt;PyPi&lt;/a&gt; (📥 96K / month · 📦 30 · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dm-haiku&#34;&gt;Conda&lt;/a&gt; (📥 2.7K · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dm-haiku&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amaiya/ktrain&#34;&gt;ktrain&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 1K) - ktrain is a Python library that makes deep learning and AI more.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amaiya/ktrain&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 240 · 📦 290 · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/amaiya/ktrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ktrain&#34;&gt;PyPi&lt;/a&gt; (📥 27K / month · 📦 3 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ktrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sony/nnabla&#34;&gt;Neural Network Libraries&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 2.5K) - Neural Network Libraries. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sony/nnabla&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 320 · 📥 540 · 📋 80 - 41% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sony/nnabla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nnabla&#34;&gt;PyPi&lt;/a&gt; (📥 3.6K / month · 📦 53 · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nnabla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/skorch-dev/skorch&#34;&gt;skorch&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 4.5K) - A scikit-learn compatible neural network library that wraps.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/skorch-dev/skorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 300 · 📦 510 · 📋 440 - 11% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/skorch-dev/skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/skorch&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 33 · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/skorch&#34;&gt;Conda&lt;/a&gt; (📥 550K · ⏱️ 30.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge skorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/neural-tangents&#34;&gt;Neural Tangents&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.8K) - Fast and Easy Infinite Neural Networks in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/neural-tangents&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 200 · 📥 230 · 📦 36 · 📋 120 - 35% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/neural-tangents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neural-tangents&#34;&gt;PyPi&lt;/a&gt; (📥 2.6K / month · 📦 1 · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neural-tangents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/XiaoMi/mace&#34;&gt;mace&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 4.6K) - MACE is a deep learning inference framework optimized for mobile.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/XiaoMi/mace&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 63 · 🔀 800 · 📥 1.4K · 📋 670 - 7% open · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/XiaoMi/mace&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nubank/fklearn&#34;&gt;fklearn&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.4K) - fklearn: Functional Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nubank/fklearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 43 · 🔀 160 · 📦 12 · 📋 45 - 51% open · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nubank/fklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fklearn&#34;&gt;PyPi&lt;/a&gt; (📥 7.1K / month · ⏱️ 30.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/towhee-io/towhee&#34;&gt;Towhee&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 500) - A framework that provides a simple API for developing ML-driven data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/towhee-io/towhee&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 89 · 📥 17 · 📋 340 - 13% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/towhee-io/towhee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/towhee&#34;&gt;PyPi&lt;/a&gt; (📥 450 / month · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install towhee&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/objax&#34;&gt;Objax&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 690) - Objax is a machine learning framework that provides an Object.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/objax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 59 · 📦 21 · 📋 100 - 43% open · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/objax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/objax&#34;&gt;PyPi&lt;/a&gt; (📥 260 / month · 📦 2 · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install objax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/neoml-lib/neoml&#34;&gt;NeoML&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 680) - Machine learning framework for both deep learning and traditional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/neoml-lib/neoml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 31 · 🔀 110 · 📋 71 - 38% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/neoml-lib/neoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neoml&#34;&gt;PyPi&lt;/a&gt; (📥 320 / month · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundersvm&#34;&gt;ThunderSVM&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.4K) - ThunderSVM: A Fast SVM Library on GPUs and CPUs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundersvm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 34 · 🔀 190 · 📥 2.4K · 📋 210 - 29% open · ⏱️ 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Xtra-Computing/thundersvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/thundersvm&#34;&gt;PyPi&lt;/a&gt; (📥 890 / month · ⏱️ 13.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install thundersvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serengil/chefboost&#34;&gt;chefboost&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 330 · 📈) - A Lightweight Decision Tree Framework supporting regular.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serengil/chefboost&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 87 · 📦 23 · 📋 29 - 17% open · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serengil/chefboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chefboost&#34;&gt;PyPi&lt;/a&gt; (📥 760 / month · ⏱️ 16.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chefboost&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/poets-ai/elegy&#34;&gt;elegy&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 370) - A High Level API for Deep Learning in JAX. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/poets-ai/elegy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 24 · 📋 96 - 31% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/poets-ai/elegy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/elegy&#34;&gt;PyPi&lt;/a&gt; (📥 600 / month · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install elegy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 13 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/davisking/dlib&#34;&gt;dlib&lt;/a&gt;&lt;/b&gt; (🥈38 · ⭐ 11K) - A toolkit for making real world machine learning and data analysis.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSL-1.0&#34;&gt;❗️BSL-1.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tflearn/tflearn&#34;&gt;TFlearn&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 9.6K · 💀) - Deep learning library featuring a higher-level API for TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/CNTK&#34;&gt;CNTK&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 17K · 💀) - Microsoft Cognitive Toolkit (CNTK), an open source deep-learning toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Lasagne/Lasagne&#34;&gt;Lasagne&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 3.8K · 💀) - Lightweight library to build and train neural networks in Theano. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mindsdb/mindsdb&#34;&gt;MindsDB&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 7K) - In-Database Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/numenta/nupic&#34;&gt;NuPIC&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 6.3K · 💀) - Numenta Platform for Intelligent Computing is an implementation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shogun-toolbox/shogun&#34;&gt;SHOGUN&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2.9K · 💀) - Unified and efficient Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aksnzhy/xlearn&#34;&gt;xLearn&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3K · 💀) - High performance, easy-to-use, and scalable machine learning (ML).. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/itdxer/neupy&#34;&gt;NeuPy&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 710 · 💀) - NeuPy is a Tensorflow based python library for prototyping and building.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NervanaSystems/neon&#34;&gt;neon&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 3.9K · 💀) - Intel Nervana reference deep learning framework committed to best.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorchbearer/torchbearer&#34;&gt;Torchbearer&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 630 · 💀) - torchbearer: A model fitting library for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Xtra-Computing/thundergbm&#34;&gt;ThunderGBM&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 620 · 💀) - ThunderGBM: Fast GBDTs and Random Forests on GPUs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/StarSpace&#34;&gt;StarSpace&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 3.8K · 💀) - Learning embeddings for classification, retrieval and ranking. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Visualization&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose and task-specific data visualization libraries.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/matplotlib/matplotlib&#34;&gt;Matplotlib&lt;/a&gt;&lt;/b&gt; (🥇49 · ⭐ 16K) - matplotlib: plotting with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/35wkF7y&#34;&gt;Python-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/matplotlib/matplotlib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.4K · 🔀 6.4K · 📦 560K · 📋 8.9K - 20% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/matplotlib/matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/matplotlib&#34;&gt;PyPi&lt;/a&gt; (📥 29M / month · 📦 55K · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/matplotlib&#34;&gt;Conda&lt;/a&gt; (📥 12M · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge matplotlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;Bokeh&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 16K · 📉) - Interactive Data Visualization in the browser, from Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bokeh/bokeh&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 600 · 🔀 3.9K · 📦 52K · 📋 6.9K - 10% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bokeh/bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bokeh&#34;&gt;PyPi&lt;/a&gt; (📥 2.5M / month · 📦 3.5K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bokeh&#34;&gt;Conda&lt;/a&gt; (📥 7.3M · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mwaskom/seaborn&#34;&gt;Seaborn&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 9.5K) - Statistical data visualization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mwaskom/seaborn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 1.6K · 📥 220 · 📦 160K · 📋 2K - 5% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mwaskom/seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/seaborn&#34;&gt;PyPi&lt;/a&gt; (📥 9.5M / month · 📦 8.8K · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/seaborn&#34;&gt;Conda&lt;/a&gt; (📥 3.8M · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge seaborn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plotly/plotly.py&#34;&gt;Plotly&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 12K) - The interactive graphing library for Python (includes Plotly Express). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/plotly/plotly.py&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 200 · 🔀 2.1K · 📦 10 · 📋 2.4K - 49% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/plotly/plotly.py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/plotly&#34;&gt;PyPi&lt;/a&gt; (📥 7.7M / month · 📦 4K · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install plotly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/plotly&#34;&gt;Conda&lt;/a&gt; (📥 2.6M · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge plotly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/plotlywidget&#34;&gt;npm&lt;/a&gt; (📥 45K / month · 📦 4 · ⏱️ 12.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install plotlywidget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plotly/dash&#34;&gt;dash&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 17K) - Analytical Web Apps for Python, R, Julia, and Jupyter. No JavaScript Required. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/plotly/dash&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 1.7K · 📦 190 · 📋 1.3K - 47% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/plotly/dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dash&#34;&gt;PyPi&lt;/a&gt; (📥 870K / month · 📦 1.2K · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dash&#34;&gt;Conda&lt;/a&gt; (📥 460K · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/altair-viz/altair&#34;&gt;Altair&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 7.5K) - Declarative statistical visualization library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/altair-viz/altair&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 660 · 📦 27K · 📋 1.6K - 14% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/altair-viz/altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/altair&#34;&gt;PyPi&lt;/a&gt; (📥 8.3M / month · 📦 340 · ⏱️ 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/altair&#34;&gt;Conda&lt;/a&gt; (📥 1.2M · ⏱️ 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge altair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ydataai/pandas-profiling&#34;&gt;pandas-profiling&lt;/a&gt;&lt;/b&gt; (🥈38 · ⭐ 9K) - Create HTML profiling reports from pandas DataFrame.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ydataai/pandas-profiling&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 88 · 🔀 1.3K · 📦 7.9K · 📋 570 - 19% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ydataai/pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-profiling&#34;&gt;PyPi&lt;/a&gt; (📥 1.1M / month · 📦 160 · ⏱️ 27.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pandas-profiling&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pandas-profiling&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/xflr6/graphviz&#34;&gt;Graphviz&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 1.2K) - Simple Python interface for Graphviz. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/xflr6/graphviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 180 · 📦 31K · 📋 140 - 4% open · ⏱️ 17.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/xflr6/graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphviz&#34;&gt;PyPi&lt;/a&gt; (📥 11M / month · 📦 3K · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/python-graphviz&#34;&gt;Conda&lt;/a&gt; (📥 20K · ⏱️ 04.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda python-graphviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyecharts/pyecharts&#34;&gt;pyecharts&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 12K) - Python Echarts Plotting Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyecharts/pyecharts&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 2.7K · 📦 2.3K · 📋 1.6K - 0% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyecharts/pyecharts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyecharts&#34;&gt;PyPi&lt;/a&gt; (📥 89K / month · 📦 220 · ⏱️ 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyecharts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lmcinnes/umap&#34;&gt;UMAP&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 5.6K) - Uniform Manifold Approximation and Projection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lmcinnes/umap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 640 · 📦 5.3K · 📋 620 - 53% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lmcinnes/umap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/umap-learn&#34;&gt;PyPi&lt;/a&gt; (📥 740K / month · 📦 320 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install umap-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/umap-learn&#34;&gt;Conda&lt;/a&gt; (📥 1.1M · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge umap-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyqtgraph/pyqtgraph&#34;&gt;PyQtGraph&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 2.8K) - Fast data visualization and GUI tools for scientific / engineering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyqtgraph/pyqtgraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 220 · 🔀 920 · 📋 1K - 31% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyqtgraph/pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyqtgraph&#34;&gt;PyPi&lt;/a&gt; (📥 91K / month · 📦 790 · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyqtgraph&#34;&gt;Conda&lt;/a&gt; (📥 250K · ⏱️ 05.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyqtgraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/holoviews&#34;&gt;HoloViews&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 2.2K) - With Holoviews, your data visualizes itself. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/holoviews&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 360 · 📋 2.8K - 31% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/holoviews&#34;&gt;PyPi&lt;/a&gt; (📥 340K / month · 📦 210 · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/holoviews&#34;&gt;Conda&lt;/a&gt; (📥 720K · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge holoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@pyviz/jupyterlab_pyviz&#34;&gt;npm&lt;/a&gt; (📥 1.7K / month · ⏱️ 24.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install @pyviz/jupyterlab_pyviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyvista/pyvista&#34;&gt;PyVista&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 1.3K) - 3D plotting and mesh analysis through a streamlined interface for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyvista/pyvista&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 91 · 🔀 250 · 📥 650 · 📦 760 · 📋 810 - 30% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyvista/pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyvista&#34;&gt;PyPi&lt;/a&gt; (📥 75K / month · 📦 100 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyvista&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyvista&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/voxel51/fiftyone&#34;&gt;FiftyOne&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.3K) - Visualize, create, and debug image and video datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/voxel51/fiftyone&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 38 · 🔀 170 · 📦 110 · 📋 780 - 32% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/voxel51/fiftyone&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fiftyone&#34;&gt;PyPi&lt;/a&gt; (📥 18K / month · 📦 1 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fiftyone&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amueller/word_cloud&#34;&gt;wordcloud&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 8.8K) - A little word cloud generator in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/amueller/word_cloud&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 65 · 🔀 2.2K · 📋 480 - 23% open · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/amueller/word_cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wordcloud&#34;&gt;PyPi&lt;/a&gt; (📥 740K / month · 📦 710 · ⏱️ 11.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wordcloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wordcloud&#34;&gt;Conda&lt;/a&gt; (📥 280K · ⏱️ 15.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wordcloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/finos/perspective&#34;&gt;Perspective&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 4.5K) - A data visualization and analytics component, especially.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/finos/perspective&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 69 · 🔀 470 · 📦 250 · 📋 520 - 16% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/finos/perspective&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/perspective-python&#34;&gt;PyPi&lt;/a&gt; (📥 3K / month · 📦 9 · ⏱️ 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install perspective-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/perspective&#34;&gt;Conda&lt;/a&gt; (📥 64K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge perspective&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/@finos/perspective-jupyterlab&#34;&gt;npm&lt;/a&gt; (📥 2.7K / month · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install @finos/perspective-jupyterlab&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/has2k1/plotnine&#34;&gt;plotnine&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 3.1K) - A grammar of graphics for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/has2k1/plotnine&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 95 · 🔀 170 · 📋 490 - 12% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/has2k1/plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/plotnine&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 200 · ⏱️ 25.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/plotnine&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 25.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge plotnine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vispy/vispy&#34;&gt;VisPy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.9K) - High-performance interactive 2D/3D data visualization library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vispy/vispy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 590 · 📦 750 · 📋 1.3K - 21% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vispy/vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vispy&#34;&gt;PyPi&lt;/a&gt; (📥 51K / month · 📦 96 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vispy&#34;&gt;Conda&lt;/a&gt; (📥 230K · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/vispy&#34;&gt;npm&lt;/a&gt; (📥 40 / month · ⏱️ 15.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install vispy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/datashader&#34;&gt;datashader&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.8K) - Quickly and accurately render even the largest data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/datashader&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 47 · 🔀 350 · 📦 1.1K · 📋 500 - 25% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datashader&#34;&gt;PyPi&lt;/a&gt; (📥 44K / month · 📦 95 · ⏱️ 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datashader&#34;&gt;Conda&lt;/a&gt; (📥 300K · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datashader&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bqplot/bqplot&#34;&gt;bqplot&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 3.3K) - Plotting library for IPython/Jupyter notebooks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bqplot/bqplot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 57 · 🔀 460 · 📦 30 · 📋 580 - 38% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bqplot/bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bqplot&#34;&gt;PyPi&lt;/a&gt; (📥 81K / month · 📦 92 · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bqplot&#34;&gt;Conda&lt;/a&gt; (📥 970K · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/bqplot&#34;&gt;npm&lt;/a&gt; (📥 26K / month · 📦 10 · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install bqplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/man-group/dtale&#34;&gt;D-Tale&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 3.4K) - Visualizer for pandas data structures. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=LGPL-2.1&#34;&gt;❗️LGPL-2.1&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/man-group/dtale&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 270 · 📦 370 · 📋 460 - 8% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/man-group/dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dtale&#34;&gt;PyPi&lt;/a&gt; (📥 65K / month · 📦 12 · ⏱️ 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dtale&#34;&gt;Conda&lt;/a&gt; (📥 120K · ⏱️ 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dtale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ResidentMario/missingno&#34;&gt;missingno&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 3.2K) - Missing data visualization module for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ResidentMario/missingno&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 410 · 📦 7.4K · 📋 120 - 5% open · ⏱️ 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ResidentMario/missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/missingno&#34;&gt;PyPi&lt;/a&gt; (📥 1M / month · 📦 120 · ⏱️ 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/missingno&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 15.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge missingno&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/data-validation&#34;&gt;data-validation&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 640) - Library for exploring and validating machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/data-validation&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 120 · 📥 360 · 📦 480 · 📋 160 - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/data-validation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-data-validation&#34;&gt;PyPi&lt;/a&gt; (📥 1.3M / month · 📦 27 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-data-validation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/hvplot&#34;&gt;hvPlot&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 560) - A high-level plotting API for pandas, dask, xarray, and networkx built on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/hvplot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 68 · 📦 1.3K · 📋 420 - 34% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hvplot&#34;&gt;PyPi&lt;/a&gt; (📥 130K / month · 📦 62 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hvplot&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hvplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/facets&#34;&gt;Facets Overview&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 6.9K · 💤) - Visualizations for machine learning datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/facets&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 840 · 📦 120 · 📋 150 - 50% open · ⏱️ 06.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pair-code/facets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/facets-overview&#34;&gt;PyPi&lt;/a&gt; (📥 280K / month · 📦 4 · ⏱️ 24.07.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install facets-overview&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/pythreejs&#34;&gt;pythreejs&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 820) - A Jupyter - Three.js bridge. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/pythreejs&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 180 · 📦 19 · 📋 220 - 33% open · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jupyter-widgets/pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pythreejs&#34;&gt;PyPi&lt;/a&gt; (📥 56K / month · 📦 38 · ⏱️ 26.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pythreejs&#34;&gt;Conda&lt;/a&gt; (📥 390K · ⏱️ 02.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pythreejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/jupyter-threejs&#34;&gt;npm&lt;/a&gt; (📥 5.6K / month · 📦 7 · ⏱️ 26.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install jupyter-threejs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ContextLab/hypertools&#34;&gt;HyperTools&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.7K) - A Python toolbox for gaining geometric insights into high-dimensional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ContextLab/hypertools&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 160 · 📥 14 · 📦 190 · 📋 190 - 35% open · ⏱️ 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ContextLab/hypertools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hypertools&#34;&gt;PyPi&lt;/a&gt; (📥 810 / month · 📦 10 · ⏱️ 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hypertools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pavlin-policar/openTSNE&#34;&gt;openTSNE&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1K) - Extensible, parallel implementations of t-SNE. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pavlin-policar/openTSNE&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 120 · 📦 340 · 📋 100 - 3% open · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pavlin-policar/openTSNE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opentsne&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 9 · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opentsne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opentsne&#34;&gt;Conda&lt;/a&gt; (📥 140K · ⏱️ 13.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opentsne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JetBrains/lets-plot&#34;&gt;lets-plot&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 740) - An open-source plotting library for statistical data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JetBrains/lets-plot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 33 · 📥 260 · 📦 16 · 📋 250 - 29% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JetBrains/lets-plot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lets-plot&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 1 · ⏱️ 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lets-plot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vega/ipyvega&#34;&gt;vega&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 330) - IPython/Jupyter notebook module for Vega and Vega-Lite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vega/ipyvega&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 59 · 📋 94 - 12% open · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vega/ipyvega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vega&#34;&gt;PyPi&lt;/a&gt; (📥 5.7K / month · 📦 84 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vega&#34;&gt;Conda&lt;/a&gt; (📥 480K · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vega&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/AutoViz&#34;&gt;AutoViz&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 700) - Automatically Visualize any dataset, any size with a single line of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/AutoViz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 100 · 📦 190 · 📋 54 - 7% open · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/AutoViz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autoviz&#34;&gt;PyPi&lt;/a&gt; (📥 55K / month · 📦 6 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autoviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/autoviz&#34;&gt;Conda&lt;/a&gt; (📥 4.7K · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge autoviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/hiplot&#34;&gt;HiPlot&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.3K) - HiPlot makes understanding high dimensional data easy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/hiplot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 120 · 📦 4 · 📋 77 - 15% open · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hiplot&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 11 · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hiplot&#34;&gt;Conda&lt;/a&gt; (📥 85K · ⏱️ 05.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hiplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fbdesignpro/sweetviz&#34;&gt;Sweetviz&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2K · 💤) - Visualize and compare datasets, target values and associations, with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fbdesignpro/sweetviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 200 · 📋 99 - 28% open · ⏱️ 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fbdesignpro/sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sweetviz&#34;&gt;PyPi&lt;/a&gt; (📥 91K / month · 📦 5 · ⏱️ 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sweetviz&#34;&gt;Conda&lt;/a&gt; (📥 10K · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sweetviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PatrikHlobil/Pandas-Bokeh&#34;&gt;Pandas-Bokeh&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 780) - Bokeh Plotting Backend for Pandas and GeoPandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PatrikHlobil/Pandas-Bokeh&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 100 · 📋 97 - 31% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PatrikHlobil/Pandas-Bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-bokeh&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 11 · ⏱️ 11.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-bokeh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcharper/python-ternary&#34;&gt;python-ternary&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 560) - Ternary plotting library for python with matplotlib. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcharper/python-ternary&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 140 · 📥 17 · 📦 93 · 📋 120 - 22% open · ⏱️ 27.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcharper/python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/python-ternary&#34;&gt;PyPi&lt;/a&gt; (📥 15K / month · 📦 21 · ⏱️ 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-ternary&#34;&gt;Conda&lt;/a&gt; (📥 62K · ⏱️ 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-ternary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ing-bank/popmon&#34;&gt;Popmon&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 300) - Monitor the stability of a Pandas or Spark dataframe. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ing-bank/popmon&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 19 · 📥 14 · 📦 11 · 📋 38 - 55% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ing-bank/popmon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/popmon&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 2 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install popmon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/leotac/joypy&#34;&gt;joypy&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 420) - Joyplots in Python with matplotlib &amp;amp; pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/leotac/joypy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 47 · 📦 160 · 📋 48 - 22% open · ⏱️ 19.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/leotac/joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/joypy&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 5 · ⏱️ 19.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/joypy&#34;&gt;Conda&lt;/a&gt; (📥 13K · ⏱️ 28.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge joypy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gyli/PyWaffle&#34;&gt;PyWaffle&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 490) - Make Waffle Charts in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gyli/PyWaffle&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 88 · 📦 130 · 📋 16 - 25% open · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gyli/PyWaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pywaffle&#34;&gt;PyPi&lt;/a&gt; (📥 3K / month · 📦 1 · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pywaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pywaffle&#34;&gt;Conda&lt;/a&gt; (📥 4.5K · ⏱️ 22.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pywaffle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 13 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SciTools/cartopy&#34;&gt;cartopy&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.1K) - Cartopy - a cartographic python library with matplotlib support. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/santosjorge/cufflinks&#34;&gt;Cufflinks&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 2.6K · 💀) - Productivity Tools for Plotly + Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DmitryUlyanov/Multicore-TSNE&#34;&gt;Multicore-TSNE&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.7K · 💀) - Parallel t-SNE implementation with Python and Torch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/chartify&#34;&gt;Chartify&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.2K · 💀) - Python library that makes it easy for data scientists to create.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolaskruchten/jupyter_pivottablejs&#34;&gt;pivottablejs&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 460 · 💀) - Dragndrop Pivot Tables and Charts for Jupyter/IPython.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adamerose/PandasGUI&#34;&gt;PandasGUI&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.6K) - A GUI for Pandas DataFrames. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=MIT-0&#34;&gt;❗️MIT-0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SauceCat/PDPbox&#34;&gt;PDPbox&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 680 · 💀) - python partial dependence plot toolbox. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/beringresearch/ivis&#34;&gt;ivis&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 260) - Dimensionality reduction in very large datasets using Siamese.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/t-makaro/animatplot&#34;&gt;animatplot&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 390 · 💀) - A python package for animating plots build on matplotlib. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/altair-viz/pdvega&#34;&gt;pdvega&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 340 · 💀) - Interactive plotting for Pandas using Vega-Lite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/data-describe/data-describe&#34;&gt;data-describe&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 290) - datadescribe: Pythonic EDA Accelerator for Data Science. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Zsailer/nx_altair&#34;&gt;nx-altair&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 190 · 💀) - Draw interactive NetworkX graphs with Altair. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/biovault/nptsne&#34;&gt;nptsne&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 28 · 💀) - nptsne is a numpy compatible python binary package that offers a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Text Data &amp;amp; NLP&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing, cleaning, manipulating, and analyzing text data as well as libraries for NLP tasks such as language detection, fuzzy matching, classification, seq2seq learning, conversational AI, keyword extraction, and translation.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;transformers&lt;/a&gt;&lt;/b&gt; (🥇49 · ⭐ 64K) - Transformers: State-of-the-art Machine Learning for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/transformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.3K · 🔀 15K · 📥 1.5K · 📦 28K · 📋 9.5K - 5% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/transformers&#34;&gt;PyPi&lt;/a&gt; (📥 7.1M / month · 📦 900 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/transformers&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nltk/nltk&#34;&gt;nltk&lt;/a&gt;&lt;/b&gt; (🥇45 · ⭐ 11K · 📈) - Suite of libraries and programs for symbolic and statistical natural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nltk/nltk&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 420 · 🔀 2.6K · 📦 140K · 📋 1.6K - 13% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nltk/nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nltk&#34;&gt;PyPi&lt;/a&gt; (📥 14M / month · 📦 12K · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nltk&#34;&gt;Conda&lt;/a&gt; (📥 1.3M · ⏱️ 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/spaCy&#34;&gt;spaCy&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 23K) - Industrial-strength Natural Language Processing (NLP) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/spaCy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 680 · 🔀 3.8K · 📥 3.1K · 📦 39K · 📋 5.1K - 1% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/spaCy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spacy&#34;&gt;PyPi&lt;/a&gt; (📥 6.3M / month · 📦 2.3K · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spacy&#34;&gt;Conda&lt;/a&gt; (📥 2.6M · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RaRe-Technologies/gensim&#34;&gt;gensim&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 13K) - Topic Modelling for Humans. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=LGPL-2.1&#34;&gt;❗️LGPL-2.1&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RaRe-Technologies/gensim&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 430 · 🔀 4.2K · 📥 3.8K · 📦 33K · 📋 1.8K - 21% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RaRe-Technologies/gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gensim&#34;&gt;PyPi&lt;/a&gt; (📥 6.8M / month · 📦 2.9K · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gensim&#34;&gt;Conda&lt;/a&gt; (📥 800K · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gensim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RasaHQ/rasa&#34;&gt;Rasa&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 14K) - Open source machine learning framework to automate text- and voice-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RasaHQ/rasa&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 540 · 🔀 4K · 📋 6.6K - 14% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RasaHQ/rasa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rasa&#34;&gt;PyPi&lt;/a&gt; (📥 160K / month · 📦 59 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rasa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/flairNLP/flair&#34;&gt;flair&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 12K) - A very simple framework for state-of-the-art Natural Language Processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/flairNLP/flair&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 230 · 🔀 1.9K · 📦 1.4K · 📋 1.9K - 5% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/flairNLP/flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/flair&#34;&gt;PyPi&lt;/a&gt; (📥 88K / month · 📦 72 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-flair&#34;&gt;Conda&lt;/a&gt; (📥 7.7K · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-flair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allenai/allennlp&#34;&gt;AllenNLP&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 11K) - An open-source NLP research library, built on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allenai/allennlp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 260 · 🔀 2.2K · 📥 46 · 📦 2.5K · 📋 2.5K - 3% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allenai/allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/allennlp&#34;&gt;PyPi&lt;/a&gt; (📥 59K / month · 📦 180 · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/allennlp&#34;&gt;Conda&lt;/a&gt; (📥 58K · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge allennlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairseq&#34;&gt;fairseq&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 17K) - Facebook AI Research Sequence-to-Sequence Toolkit written in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairseq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 390 · 🔀 4.5K · 📥 240 · 📦 800 · 📋 3.4K - 16% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairseq&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · 📦 37 · ⏱️ 05.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairseq&#34;&gt;Conda&lt;/a&gt; (📥 14K · ⏱️ 28.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gunthercox/ChatterBot&#34;&gt;ChatterBot&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 12K · 💤) - ChatterBot is a machine learning, conversational dialog engine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gunthercox/ChatterBot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 4.1K · 📦 4.4K · 📋 1.6K - 20% open · ⏱️ 01.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gunthercox/ChatterBot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/chatterbot&#34;&gt;PyPi&lt;/a&gt; (📥 83K / month · 📦 350 · ⏱️ 22.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install chatterbot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ParlAI&#34;&gt;ParlAI&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 8.8K) - A framework for training and evaluating AI models on a variety of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ParlAI&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 180 · 🔀 1.8K · 📦 77 · 📋 1.3K - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ParlAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parlai&#34;&gt;PyPi&lt;/a&gt; (📥 1.8K / month · 📦 3 · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parlai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/UKPLab/sentence-transformers&#34;&gt;sentence-transformers&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 7.8K) - Multilingual Sentence &amp;amp; Image Embeddings with BERT. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/UKPLab/sentence-transformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 79 · 🔀 1.5K · 📦 3.3K · 📋 1.4K - 51% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/UKPLab/sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sentence-transformers&#34;&gt;PyPi&lt;/a&gt; (📥 3.3M / month · 📦 110 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sentence-transformers&#34;&gt;Conda&lt;/a&gt; (📥 21K · ⏱️ 20.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sentence-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stanfordnlp/stanza&#34;&gt;stanza&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 6.1K) - Official Stanford NLP Python Library for Many Human Languages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stanfordnlp/stanza&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 790 · 📦 1.1K · 📋 710 - 12% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stanfordnlp/stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stanza&#34;&gt;PyPi&lt;/a&gt; (📥 440K / month · 📦 67 · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/stanfordnlp/stanza&#34;&gt;Conda&lt;/a&gt; (📥 5.1K · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c stanfordnlp stanza&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JohnSnowLabs/spark-nlp&#34;&gt;spark-nlp&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 2.7K) - State of the Art Natural Language Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JohnSnowLabs/spark-nlp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 560 · 📋 680 - 8% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JohnSnowLabs/spark-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spark-nlp&#34;&gt;PyPi&lt;/a&gt; (📥 1.6M / month · 📦 11 · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spark-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sloria/TextBlob&#34;&gt;TextBlob&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 8.2K · 💤) - Simple, Pythonic, text processing--Sentiment analysis, part-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sloria/TextBlob&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 35 · 🔀 1.1K · 📥 99 · 📦 20K · 📋 260 - 39% open · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sloria/TextBlob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textblob&#34;&gt;PyPi&lt;/a&gt; (📥 940K / month · 📦 1.4K · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textblob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textblob&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 24.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textblob&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;sentencepiece&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 5.9K) - Unsupervised text tokenizer for Neural Network-based text.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 810 · 📥 21K · 📦 15K · 📋 520 - 7% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sentencepiece&#34;&gt;PyPi&lt;/a&gt; (📥 6.9M / month · 📦 390 · ⏱️ 18.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sentencepiece&#34;&gt;Conda&lt;/a&gt; (📥 190K · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sentencepiece&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/tokenizers&#34;&gt;Tokenizers&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 5.6K) - Fast State-of-the-Art Tokenizers optimized for Research and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/tokenizers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 56 · 🔀 470 · 📦 49 · 📋 630 - 30% open · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tokenizers&#34;&gt;PyPi&lt;/a&gt; (📥 7.2M / month · 📦 120 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tokenizers&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tokenizers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fastText&#34;&gt;fastText&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 24K) - Library for fast text representation and classification. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fastText&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 59 · 🔀 4.4K · 📦 2.9K · 📋 1.1K - 43% open · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/fastText&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fasttext&#34;&gt;PyPi&lt;/a&gt; (📥 510K / month · 📦 180 · ⏱️ 28.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fasttext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fasttext&#34;&gt;Conda&lt;/a&gt; (📥 30K · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fasttext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dedupeio/dedupe&#34;&gt;Dedupe&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 3.4K) - A python library for accurate and scalable fuzzy matching, record.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dedupeio/dedupe&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 64 · 🔀 480 · 📦 220 · 📋 730 - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dedupeio/dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dedupe&#34;&gt;PyPi&lt;/a&gt; (📥 310K / month · 📦 48 · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dedupe&#34;&gt;Conda&lt;/a&gt; (📥 3.9K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dedupe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/text&#34;&gt;torchtext&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 3K) - Data loaders and abstractions for text and NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/text&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 720 · 📋 720 - 45% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchtext&#34;&gt;PyPi&lt;/a&gt; (📥 150K / month · 📦 440 · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchtext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/text&#34;&gt;TensorFlow Text&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 940) - Making text a first-class citizen in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/text&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 87 · 🔀 220 · 📦 1.8K · 📋 220 - 40% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-text&#34;&gt;PyPi&lt;/a&gt; (📥 4.1M / month · 📦 78 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OpenNMT/OpenNMT-py&#34;&gt;OpenNMT&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 5.6K) - Open Source Neural Machine Translation in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OpenNMT/OpenNMT-py&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 2.1K · 📦 140 · 📋 1.3K - 8% open · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OpenNMT/OpenNMT-py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/OpenNMT-py&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 9 · ⏱️ 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install OpenNMT-py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmipt/DeepPavlov&#34;&gt;DeepPavlov&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 5.7K) - An open source library for deep learning end-to-end dialog.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmipt/DeepPavlov&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 67 · 🔀 1K · 📦 270 · 📋 630 - 12% open · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmipt/DeepPavlov&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deeppavlov&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 6 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deeppavlov&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepset-ai/haystack&#34;&gt;haystack&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.7K) - Haystack is an open source NLP framework that leverages Transformer.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepset-ai/haystack&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 760 · 📥 13 · 📋 1.4K - 15% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepset-ai/haystack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/haystack&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · 📦 85 · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install haystack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jamesturk/jellyfish&#34;&gt;jellyfish&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.7K) - a python library for doing approximate and phonetic matching of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jamesturk/jellyfish&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 150 · 📦 3.7K · 📋 110 - 9% open · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jamesturk/jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jellyfish&#34;&gt;PyPi&lt;/a&gt; (📥 2.1M / month · 📦 400 · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jellyfish&#34;&gt;Conda&lt;/a&gt; (📥 220K · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jellyfish&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snowballstem/snowball&#34;&gt;snowballstemmer&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 560) - Snowball compiler and stemming algorithms. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snowballstem/snowball&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 160 · 📦 4 · 📋 77 - 42% open · ⏱️ 17.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snowballstem/snowball&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snowballstemmer&#34;&gt;PyPi&lt;/a&gt; (📥 6.8M / month · 📦 6.7K · ⏱️ 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snowballstemmer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/snowballstemmer&#34;&gt;Conda&lt;/a&gt; (📥 4.3M · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge snowballstemmer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/makcedward/nlpaug&#34;&gt;nlpaug&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 3.3K) - Data augmentation for NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/makcedward/nlpaug&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 360 · 📦 330 · 📋 180 - 20% open · ⏱️ 03.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/makcedward/nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nlpaug&#34;&gt;PyPi&lt;/a&gt; (📥 80K / month · 📦 14 · ⏱️ 23.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nlpaug&#34;&gt;Conda&lt;/a&gt; (📥 1.8K · ⏱️ 25.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nlpaug&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rspeer/python-ftfy&#34;&gt;ftfy&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 3.2K) - Fixes mojibake and other glitches in Unicode text, after the fact. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rspeer/python-ftfy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 110 · 📦 5.7K · 📋 130 - 9% open · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rspeer/python-ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ftfy&#34;&gt;PyPi&lt;/a&gt; (📥 1.8M / month · 📦 490 · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ftfy&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ftfy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allenai/scispacy&#34;&gt;SciSpacy&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.2K) - A full spaCy pipeline and models for scientific/biomedical documents. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allenai/scispacy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 150 · 📦 460 · 📋 260 - 14% open · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allenai/scispacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scispacy&#34;&gt;PyPi&lt;/a&gt; (📥 25K / month · 📦 17 · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scispacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/NeMo&#34;&gt;NeMo&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4.3K) - NeMo: a toolkit for conversational AI. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/NeMo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 960 · 📥 5.3K · 📋 1.1K - 6% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/NeMo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nemo-toolkit&#34;&gt;PyPi&lt;/a&gt; (📥 18K / month · 📦 7 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nemo-toolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/miso-belica/sumy&#34;&gt;Sumy&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.8K) - Module for automatic summarization of text documents and HTML pages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/miso-belica/sumy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 470 · 📦 1.2K · 📋 100 - 13% open · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/miso-belica/sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sumy&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 100 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sumy&#34;&gt;Conda&lt;/a&gt; (📥 950 · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sumy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytext&#34;&gt;PyText&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 6.3K) - A natural language modeling framework based on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytext&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 230 · 🔀 800 · 📥 290 · 📦 110 · 📋 220 - 66% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pytext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytext-nlp&#34;&gt;PyPi&lt;/a&gt; (📥 320 / month · 📦 1 · ⏱️ 08.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytext-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cjhutto/vaderSentiment&#34;&gt;vaderSentiment&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.6K) - VADER Sentiment Analysis. VADER (Valence Aware Dictionary and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cjhutto/vaderSentiment&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 860 · 📦 3.8K · 📋 110 - 30% open · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cjhutto/vaderSentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vadersentiment&#34;&gt;PyPi&lt;/a&gt; (📥 190K / month · 📦 170 · ⏱️ 22.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vadersentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/vadersentiment&#34;&gt;Conda&lt;/a&gt; (📥 8.6K · ⏱️ 22.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge vadersentiment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/life4/textdistance&#34;&gt;TextDistance&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.8K) - Compute distance between sequences. 30+ algorithms, pure python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/life4/textdistance&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 230 · 📥 650 · 📦 2.2K · ⏱️ 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/life4/textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textdistance&#34;&gt;PyPi&lt;/a&gt; (📥 520K / month · 📦 39 · ⏱️ 27.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textdistance&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 27.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textdistance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/neuralcoref&#34;&gt;neuralcoref&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.5K · 💤) - Fast Coreference Resolution in spaCy with Neural Networks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/neuralcoref&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 440 · 📥 400 · 📦 490 · 📋 300 - 16% open · ⏱️ 22.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuralcoref&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 14 · ⏱️ 08.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/neuralcoref&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 21.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge neuralcoref&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-nlp&#34;&gt;GluonNLP&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.4K · 💤) - Toolkit that enables easy text preprocessing, datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-nlp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 82 · 🔀 520 · 📦 810 · 📋 560 - 46% open · ⏱️ 24.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/gluon-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluonnlp&#34;&gt;PyPi&lt;/a&gt; (📥 47K / month · 📦 22 · ⏱️ 13.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluonnlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chartbeat-labs/textacy&#34;&gt;textacy&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.9K) - NLP, before and after spaCy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/chartbeat-labs/textacy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 230 · 📋 250 - 11% open · ⏱️ 06.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/chartbeat-labs/textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textacy&#34;&gt;PyPi&lt;/a&gt; (📥 43K / month · 📦 100 · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textacy&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DerwenAI/pytextrank&#34;&gt;PyTextRank&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.8K) - Python implementation of TextRank algorithms (textgraphs) for phrase.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/DerwenAI/pytextrank&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 330 · 📦 260 · 📋 86 - 29% open · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/DerwenAI/pytextrank&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytextrank&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 13 · ⏱️ 06.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytextrank&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cltk/cltk&#34;&gt;CLTK&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 720) - The Classical Language Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cltk/cltk&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 310 · 📥 25 · 📦 200 · 📋 520 - 4% open · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cltk/cltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cltk&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 42 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cltk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ciphey/Ciphey&#34;&gt;Ciphey&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 9.9K) - Automatically decrypt encryptions without knowing the key or cipher,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Ciphey/Ciphey&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 46 · 🔀 610 · 📋 290 - 17% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Ciphey/Ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ciphey&#34;&gt;PyPi&lt;/a&gt; (📥 17K / month · ⏱️ 06.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/remnux/ciphey&#34;&gt;Docker Hub&lt;/a&gt; (📥 15K · ⭐ 7 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull remnux/ciphey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/text-to-text-transfer-transformer&#34;&gt;T5&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 4.2K) - Code for the paper Exploring the Limits of Transfer Learning with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/text-to-text-transfer-transformer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 570 · 📦 99 · 📋 400 - 15% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/text-to-text-transfer-transformer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/t5&#34;&gt;PyPi&lt;/a&gt; (📥 7.9K / month · 📦 2 · ⏱️ 18.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install t5&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fastnlp/fastNLP&#34;&gt;fastNLP&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2.6K) - fastNLP: A Modularized and Extensible NLP Framework. Currently still.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fastnlp/fastNLP&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 54 · 🔀 420 · 📥 66 · 📦 79 · 📋 200 - 23% open · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fastnlp/fastNLP&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fastnlp&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 3 · ⏱️ 04.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fastnlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/spacy-transformers&#34;&gt;spacy-transformers&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.1K) - Use pretrained transformers like BERT, XLNet and GPT-2.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/spacy-transformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 140 · 📦 510 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spacy-transformers&#34;&gt;PyPi&lt;/a&gt; (📥 99K / month · 📦 17 · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spacy-transformers&#34;&gt;Conda&lt;/a&gt; (📥 1.3K · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spacy-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dwyl/english-words&#34;&gt;english-words&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 7.1K) - A text file containing 479k English words for all your.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rvuUlR&#34;&gt;Unlicense&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dwyl/english-words&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 1.4K · 📋 92 - 68% open · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dwyl/english-words&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/english-words&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 6 · ⏱️ 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install english-words&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snipsco/snips-nlu&#34;&gt;Snips NLU&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3.7K · 💤) - Snips Python library to extract meaning from text. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snipsco/snips-nlu&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 500 · 📋 260 - 23% open · ⏱️ 03.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snipsco/snips-nlu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snips-nlu&#34;&gt;PyPi&lt;/a&gt; (📥 2.9K / month · 📦 11 · ⏱️ 15.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snips-nlu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JasonKessler/scattertext&#34;&gt;scattertext&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.8K) - Beautiful visualizations of how language differs among document.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JasonKessler/scattertext&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 250 · 📦 280 · 📋 87 - 19% open · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JasonKessler/scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scattertext&#34;&gt;PyPi&lt;/a&gt; (📥 4.2K / month · 📦 10 · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scattertext&#34;&gt;Conda&lt;/a&gt; (📥 61K · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scattertext&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NTMC-Community/MatchZoo&#34;&gt;MatchZoo&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.7K · 💤) - Facilitating the design, comparison and sharing of deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NTMC-Community/MatchZoo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 910 · 📦 10 · 📋 460 - 6% open · ⏱️ 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NTMC-Community/MatchZoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/matchzoo&#34;&gt;PyPi&lt;/a&gt; (📥 94 / month · ⏱️ 24.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install matchzoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PetrochukM/PyTorch-NLP&#34;&gt;pytorch-nlp&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 2.1K · 💤) - Basic Utilities for PyTorch Natural Language Processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PetrochukM/PyTorch-NLP&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 250 · 📦 380 · 📋 67 - 26% open · ⏱️ 10.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PetrochukM/PyTorch-NLP&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-nlp&#34;&gt;PyPi&lt;/a&gt; (📥 6.7K / month · 📦 17 · ⏱️ 04.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/utterworks/fast-bert&#34;&gt;fast-bert&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.7K) - Super easy library for BERT based NLP models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/utterworks/fast-bert&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 330 · 📋 250 - 61% open · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/utterworks/fast-bert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fast-bert&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 2 · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fast-bert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple&#34;&gt;gpt-2-simple&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.9K · 📈) - Python package to easily retrain OpenAIs GPT-2 text-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/minimaxir/gpt-2-simple&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 590 · 📥 300 · 📋 250 - 61% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/minimaxir/gpt-2-simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpt-2-simple&#34;&gt;PyPi&lt;/a&gt; (📥 5.6K / month · 📦 5 · ⏱️ 18.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpt-2-simple&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BrikerMan/Kashgari&#34;&gt;Kashgari&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.3K · 💤) - Kashgari is a production-level NLP Transfer learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BrikerMan/Kashgari&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 430 · 📦 52 · 📋 370 - 10% open · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BrikerMan/Kashgari&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kashgari-tf&#34;&gt;PyPi&lt;/a&gt; (📥 66 / month · 📦 2 · ⏱️ 18.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kashgari-tf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/sense2vec&#34;&gt;sense2vec&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.4K · 💤) - Contextually-keyed word vectors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/explosion/sense2vec&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 230 · 📥 30K · 📦 140 · 📋 110 - 18% open · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/explosion/sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sense2vec&#34;&gt;PyPi&lt;/a&gt; (📥 4K / month · 📦 8 · ⏱️ 19.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sense2vec&#34;&gt;Conda&lt;/a&gt; (📥 25K · ⏱️ 14.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sense2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/sockeye&#34;&gt;Sockeye&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.1K) - Sequence-to-sequence framework with a focus on Neural Machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/sockeye&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 56 · 🔀 310 · 📥 14 · 📋 280 - 2% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/sockeye&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sockeye&#34;&gt;PyPi&lt;/a&gt; (📥 1K / month · 📦 2 · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sockeye&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jbesomi/texthero&#34;&gt;Texthero&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.5K · 💤) - Text preprocessing, representation and visualization from zero to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jbesomi/texthero&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 210 · 📥 90 · 📋 140 - 55% open · ⏱️ 19.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jbesomi/texthero&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/texthero&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 4 · ⏱️ 01.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install texthero&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;qdrant&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.7K) - Qdrant - vector similarity search engine with extended filtering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/qdrant/qdrant&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 92 · 📋 200 - 23% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/qdrant/qdrant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepset-ai/FARM&#34;&gt;FARM&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.5K) - Fast &amp;amp; easy transfer learning for NLP. Harvesting language models.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepset-ai/FARM&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 37 · 🔀 220 · 📋 440 - 8% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepset-ai/FARM&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/farm&#34;&gt;PyPi&lt;/a&gt; (📥 4K / month · 📦 2 · ⏱️ 10.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install farm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/farm&#34;&gt;Conda&lt;/a&gt; (📥 1.1K · ⏱️ 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge farm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenPrompt&#34;&gt;OpenPrompt&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.5K) - An Open-Source Framework for Prompt-Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/thunlp/OpenPrompt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 150 · 📦 9 · 📋 120 - 7% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/thunlp/OpenPrompt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/openprompt&#34;&gt;PyPi&lt;/a&gt; (📥 650 / month · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install openprompt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/recognai/rubrix&#34;&gt;rubrix&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.1K) - Rubrix, open-source framework for data-centric NLP. Data annotation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/recognai/rubrix&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 91 · 📋 570 - 12% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/recognai/rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rubrix&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rubrix&#34;&gt;Conda&lt;/a&gt; (📥 1.4K · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rubrix&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/unitaryai/detoxify&#34;&gt;detoxify&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 430) - Trained models &amp;amp; code to predict toxic comments on all 3 Jigsaw.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/unitaryai/detoxify&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 51 · 📥 44K · 📦 90 · 📋 34 - 50% open · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/unitaryai/detoxify&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/detoxify&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 2 · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install detoxify&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/anhaidgroup/deepmatcher&#34;&gt;DeepMatcher&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 4.2K · 💤) - Python package for performing Entity and Text Matching using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/anhaidgroup/deepmatcher&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 1.6K · 📦 19 · 📋 83 - 73% open · ⏱️ 13.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/anhaidgroup/deepmatcher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepmatcher&#34;&gt;PyPi&lt;/a&gt; (📥 840 / month · ⏱️ 13.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepmatcher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IntelLabs/nlp-architect&#34;&gt;NLP Architect&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.8K · 💤) - A model library for exploring state-of-the-art deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IntelLabs/nlp-architect&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 37 · 🔀 440 · 📦 8 · 📋 130 - 15% open · ⏱️ 12.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IntelLabs/nlp-architect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nlp-architect&#34;&gt;PyPi&lt;/a&gt; (📥 110 / month · ⏱️ 12.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nlp-architect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bytedance/lightseq&#34;&gt;lightseq&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.1K) - LightSeq: A High Performance Library for Sequence Processing and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bytedance/lightseq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 220 · 📥 620 · 📋 180 - 54% open · ⏱️ 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bytedance/lightseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightseq&#34;&gt;PyPi&lt;/a&gt; (📥 790 / month · ⏱️ 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nyu-mll/jiant&#34;&gt;jiant&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1.4K) - jiant is an nlp toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nyu-mll/jiant&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 57 · 🔀 270 · 📦 2 · 📋 550 - 11% open · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nyu-mll/jiant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jiant&#34;&gt;PyPi&lt;/a&gt; (📥 57 / month · ⏱️ 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jiant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IndicoDataSolutions/finetune&#34;&gt;finetune&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 660) - Scikit-learn style model finetuning for NLP. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IndicoDataSolutions/finetune&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 71 · 📦 9 · 📋 140 - 15% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IndicoDataSolutions/finetune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finetune&#34;&gt;PyPi&lt;/a&gt; (📥 120 / month · 📦 2 · ⏱️ 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finetune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RUCAIBox/TextBox&#34;&gt;TextBox&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 360) - TextBox is an open-source library for building text generation system. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RUCAIBox/TextBox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 64 · 📦 5 · 📋 20 - 15% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RUCAIBox/TextBox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textbox&#34;&gt;PyPi&lt;/a&gt; (📥 77 / month · ⏱️ 15.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNRE&#34;&gt;OpenNRE&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 3.7K) - An Open-Source Package for Neural Relation Extraction (NRE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNRE&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 940 · 📋 350 - 5% open · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/thunlp/OpenNRE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PKSHATechnology-Research/camphr&#34;&gt;Camphr&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 340 · 💤) - Camphr - NLP libary for creating pipeline components. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PKSHATechnology-Research/camphr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 18 · 📋 28 - 7% open · ⏱️ 18.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PKSHATechnology-Research/camphr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/camphr&#34;&gt;PyPi&lt;/a&gt; (📥 190 / month · 📦 2 · ⏱️ 28.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install camphr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/translate&#34;&gt;Translate&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 740) - Translate - a PyTorch Language Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/translate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 87 · 🔀 170 · 📋 93 - 70% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/translate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-translate&#34;&gt;PyPi&lt;/a&gt; (📥 4 / month · ⏱️ 01.05.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-translate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/vizseq&#34;&gt;VizSeq&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 400) - An Analysis Toolkit for Natural Language Generation (Translation,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/vizseq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 47 · 📦 6 · 📋 16 - 43% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/vizseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vizseq&#34;&gt;PyPi&lt;/a&gt; (📥 69 / month · ⏱️ 07.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vizseq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 28 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/seatgeek/fuzzywuzzy&#34;&gt;fuzzywuzzy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 8.7K · 💤) - Fuzzy String Matching in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;❗️GPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/saffsd/langid.py&#34;&gt;langid&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2K · 💀) - Stand-alone language identification system. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aboSamoor/polyglot&#34;&gt;polyglot&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2K · 💀) - Multilingual text (NLP) processing toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vi3k6i5/flashtext&#34;&gt;flashtext&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 5.2K · 💀) - Extract Keywords from sentence or Replace keywords in sentences. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/textgenrnn&#34;&gt;textgenrnn&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 4.7K · 💀) - Easily train your own text-generating neural network of any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mchaput/whoosh&#34;&gt;whoosh&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 230) - Pure-Python full-text search library. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/VKCOM/YouTokenToMe&#34;&gt;YouTokenToMe&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 800 · 💀) - Unsupervised text tokenizer focused on computational efficiency. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipunsadvilkar/pySBD&#34;&gt;pySBD&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 440 · 💀) - pySBD (Python Sentence Boundary Disambiguation) is a rule-based sentence.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/asyml/texar&#34;&gt;Texar&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.3K · 💀) - Toolkit for Machine Learning, Natural Language Processing, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Hironsan/anago&#34;&gt;anaGo&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.4K · 💀) - Bidirectional LSTM-CRF and ELMo for Named-Entity Recognition,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Delta-ML/delta&#34;&gt;DELTA&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1.5K · 💀) - DELTA is a deep learning based natural language and speech.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EricFillion/happy-transformer&#34;&gt;happy-transformer&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 290) - A package built on top of Hugging Faces transformers.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Alir3z4/python-stop-words&#34;&gt;stop-words&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 140 · 💀) - Get list of common stop words in various languages in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ki6an/fastT5&#34;&gt;fastT5&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 300) - boost inference speed of T5 models by 5x &amp;amp; reduce the model size by 3x. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vrasneur/pyfasttext&#34;&gt;pyfasttext&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 230 · 💀) - Yet another Python binding for fastText. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textpipe/textpipe&#34;&gt;textpipe&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 300 · 💤) - Textpipe: clean and extract metadata from text. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Franck-Dernoncourt/NeuroNER&#34;&gt;NeuroNER&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1.6K · 💀) - Named-entity recognition using neural networks. Easy-to-use and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shaypal5/skift&#34;&gt;skift&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 230) - scikit-learn wrappers for Python fastText. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/koursaros-ai/nboost&#34;&gt;nboost&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 620 · 💀) - NBoost is a scalable, search-api-boosting platform for deploying.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dsfsi/textaugment&#34;&gt;textaugment&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 240) - TextAugment: Text Augmentation Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/BLINK&#34;&gt;BLINK&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 880 · 💀) - Entity Linker solution. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/victordibia/neuralqa&#34;&gt;NeuralQA&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 220 · 💀) - NeuralQA: A Usable Library for Question Answering on Large Datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/as-ideas/headliner&#34;&gt;Headliner&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 230 · 💀) - Easy training and deployment of seq2seq models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jaidevd/numerizer&#34;&gt;numerizer&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 140) - A Python module to convert natural language numerics into ints and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MartinoMensio/spacy-dbpedia-spotlight&#34;&gt;spacy-dbpedia-spotlight&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 61) - A spaCy wrapper for DBpedia Spotlight. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;spacy&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/feedly/transfer-nlp&#34;&gt;TransferNLP&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 290 · 💀) - NLP library designed for reproducible experimentation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abelriboulot/onnxt5&#34;&gt;ONNX-T5&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 200 · 💀) - Summarization, translation, sentiment-analysis, text-generation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textvec/textvec&#34;&gt;textvec&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 180 · 💀) - Text vectorization tool to outperform TFIDF for classification.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Image Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for image &amp;amp; video processing, manipulation, and augmentation as well as libraries for computer vision tasks such as facial recognition, object detection, and classification.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-pillow/Pillow&#34;&gt;Pillow&lt;/a&gt;&lt;/b&gt; (🥇45 · ⭐ 9.8K) - The friendly PIL fork (Python Imaging Library). &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=PIL&#34;&gt;❗️PIL&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-pillow/Pillow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 400 · 🔀 1.9K · 📋 2.5K - 5% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-pillow/Pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/Pillow&#34;&gt;PyPi&lt;/a&gt; (📥 46M / month · 📦 63K · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install Pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pillow&#34;&gt;Conda&lt;/a&gt; (📥 15M · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pillow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-image/scikit-image&#34;&gt;scikit-image&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 4.9K) - Image processing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-image/scikit-image&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 550 · 🔀 2K · 📦 100K · 📋 2.4K - 25% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-image/scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-image&#34;&gt;PyPi&lt;/a&gt; (📥 8.9M / month · 📦 9.3K · ⏱️ 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-image&#34;&gt;Conda&lt;/a&gt; (📥 3.4M · ⏱️ 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-image&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/vision&#34;&gt;torchvision&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 12K) - Datasets, Transforms and Models specific to Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/vision&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 490 · 🔀 5.9K · 📥 5.7K · 📋 2.5K - 28% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchvision&#34;&gt;PyPi&lt;/a&gt; (📥 5.3M / month · 📦 3.6K · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchvision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchvision&#34;&gt;Conda&lt;/a&gt; (📥 240K · ⏱️ 29.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchvision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rwightman/pytorch-image-models&#34;&gt;PyTorch Image Models&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 19K) - PyTorch image models, scripts, pretrained weights --.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rwightman/pytorch-image-models&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 75 · 🔀 3.1K · 📥 1.2M · 📦 3K · 📋 510 - 12% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rwightman/pytorch-image-models&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/timm&#34;&gt;PyPi&lt;/a&gt; (📥 3.3M / month · 📦 94 · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install timm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/timm&#34;&gt;Conda&lt;/a&gt; (📥 17K · ⏱️ 30.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge timm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;MMDetection&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 20K) - OpenMMLab Detection Toolbox and Benchmark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmdetection&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 340 · 🔀 7.3K · 📦 380 · 📋 5.9K - 9% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/open-mmlab/mmdetection&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmdet&#34;&gt;PyPi&lt;/a&gt; (📥 38K / month · 📦 9 · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmdet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Zulko/moviepy&#34;&gt;MoviePy&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 9.2K) - Video editing with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Zulko/moviepy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 1.2K · 📦 16K · 📋 1.2K - 24% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Zulko/moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/moviepy&#34;&gt;PyPi&lt;/a&gt; (📥 4.7M / month · 📦 750 · ⏱️ 05.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/moviepy&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge moviepy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/imageio/imageio&#34;&gt;imageio&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 1K) - Python library for reading and writing image data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/imageio/imageio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 90 · 🔀 210 · 📥 240 · 📦 62K · 📋 450 - 13% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/imageio/imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imageio&#34;&gt;PyPi&lt;/a&gt; (📥 18M / month · 📦 2.6K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imageio&#34;&gt;Conda&lt;/a&gt; (📥 2.9M · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imageio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kornia/kornia&#34;&gt;Kornia&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 6.6K) - Open Source Differentiable Computer Vision Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kornia/kornia&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 650 · 📥 310 · 📦 1.3K · 📋 590 - 27% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kornia/kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kornia&#34;&gt;PyPi&lt;/a&gt; (📥 320K / month · 📦 54 · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/kornia&#34;&gt;Conda&lt;/a&gt; (📥 16K · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge kornia&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepinsight/insightface&#34;&gt;InsightFace&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 12K) - State-of-the-art 2D and 3D Face Analysis Project. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepinsight/insightface&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 3.8K · 📦 160 · 📋 1.9K - 54% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepinsight/insightface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/insightface&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 5 · ⏱️ 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install insightface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/opencv/opencv-python&#34;&gt;opencv-python&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 2.8K) - Automated CI toolchain to produce precompiled opencv-python,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/opencv/opencv-python&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 38 · 🔀 540 · 📋 540 - 7% open · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/opencv/opencv-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opencv-python&#34;&gt;PyPi&lt;/a&gt; (📥 5.5M / month · 📦 8.9K · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opencv-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition&#34;&gt;Face Recognition&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 44K · 💤) - The worlds simplest facial recognition api for Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ageitgey/face_recognition&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 47 · 🔀 12K · 📥 460 · 📋 1.2K - 54% open · ⏱️ 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ageitgey/face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/face_recognition&#34;&gt;PyPi&lt;/a&gt; (📥 56K / month · 📦 210 · ⏱️ 21.08.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/face_recognition&#34;&gt;Conda&lt;/a&gt; (📥 6.5K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge face_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/detectron2&#34;&gt;detectron2&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 21K) - Detectron2 is a platform for object detection, segmentation.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/detectron2&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 210 · 🔀 5.7K · 📦 620 · 📋 3K - 7% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/detectron2&#34;&gt;PyPi&lt;/a&gt; (📥 1 / month · 📦 3 · ⏱️ 06.02.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/detectron2&#34;&gt;Conda&lt;/a&gt; (📥 53K · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge detectron2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/albumentations-team/albumentations&#34;&gt;Albumentations&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 10K) - Fast image augmentation library and an easy-to-use wrapper.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/albumentations-team/albumentations&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 1.3K · 📦 7.9K · 📋 640 - 45% open · ⏱️ 13.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/albumentations-team/albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/albumentations&#34;&gt;PyPi&lt;/a&gt; (📥 260K / month · 📦 210 · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/albumentations&#34;&gt;Conda&lt;/a&gt; (📥 37K · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge albumentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-cv&#34;&gt;GluonCV&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 5.2K) - Gluon CV Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/gluon-cv&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 1.2K · 📦 750 · 📋 820 - 7% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/gluon-cv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluoncv&#34;&gt;PyPi&lt;/a&gt; (📥 590K / month · 📦 59 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluoncv&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/emcconville/wand&#34;&gt;Wand&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.2K) - The ctypes-based simple ImageMagick binding for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/emcconville/wand&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 98 · 🔀 200 · 📥 7.6K · 📦 11K · 📋 370 - 4% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/emcconville/wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wand&#34;&gt;PyPi&lt;/a&gt; (📥 380K / month · 📦 690 · ⏱️ 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wand&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wand&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection&#34;&gt;PaddleDetection&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 7.8K) - Object Detection toolkit based on PaddlePaddle. It.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleDetection&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 97 · 🔀 2K · 📦 18 · 📋 3.5K - 21% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleDetection&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddledet&#34;&gt;PyPi&lt;/a&gt; (📥 260 / month · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddledet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSeg&#34;&gt;PaddleSeg&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.8K) - Easy-to-use image segmentation library with awesome pre-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleSeg&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 1.1K · 📦 560 · 📋 1.1K - 50% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleSeg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddleseg&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 2 · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddleseg&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyImageSearch/imutils&#34;&gt;imutils&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.1K) - A series of convenience functions to make basic image processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyImageSearch/imutils&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 960 · 📦 25K · 📋 220 - 65% open · ⏱️ 27.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyImageSearch/imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imutils&#34;&gt;PyPi&lt;/a&gt; (📥 290K / month · 📦 760 · ⏱️ 15.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imutils&#34;&gt;Conda&lt;/a&gt; (📥 85K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imutils&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serengil/deepface&#34;&gt;deepface&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 3.9K) - A Lightweight Face Recognition and Facial Attribute Analysis (Age,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serengil/deepface&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 870 · 📦 570 · 📋 460 - 1% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serengil/deepface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepface&#34;&gt;PyPi&lt;/a&gt; (📥 33K / month · 📦 3 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepface&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OlafenwaMoses/ImageAI&#34;&gt;imageai&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 7K · 💤) - A python library built to empower developers to build applications and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OlafenwaMoses/ImageAI&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 1.9K · 📥 750K · 📦 1.1K · 📋 680 - 37% open · ⏱️ 08.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OlafenwaMoses/ImageAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imageai&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 16 · ⏱️ 05.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imageai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imageai&#34;&gt;Conda&lt;/a&gt; (📥 2.7K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imageai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JohannesBuchner/imagehash&#34;&gt;ImageHash&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.4K · 💤) - A Python Perceptual Image Hashing Module. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JohannesBuchner/imagehash&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 300 · 📦 5.1K · 📋 110 - 12% open · ⏱️ 07.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JohannesBuchner/imagehash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ImageHash&#34;&gt;PyPi&lt;/a&gt; (📥 1.4M / month · 📦 320 · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ImageHash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imagehash&#34;&gt;Conda&lt;/a&gt; (📥 180K · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imagehash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/vit-pytorch&#34;&gt;vit-pytorch&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 10K) - Implementation of Vision Transformer, a simple way to achieve.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/vit-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 1.6K · 📦 110 · 📋 180 - 47% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/vit-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vit-pytorch&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 3 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vit-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mdbloice/Augmentor&#34;&gt;Augmentor&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 4.7K) - Image augmentation library in Python for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mdbloice/Augmentor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 850 · 📦 460 · 📋 200 - 63% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mdbloice/Augmentor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/Augmentor&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 29 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install Augmentor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/1adrianb/face-alignment&#34;&gt;Face Alignment&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 5.7K · 💤) - 2D and 3D Face alignment library build using pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/1adrianb/face-alignment&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 1.2K · 📋 270 - 19% open · ⏱️ 04.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/1adrianb/face-alignment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/face-alignment&#34;&gt;PyPi&lt;/a&gt; (📥 10K / month · 📦 8 · ⏱️ 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install face-alignment&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abhiTronix/vidgear&#34;&gt;vidgear&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2.2K) - A High-performance cross-platform Video Processing Python framework.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/abhiTronix/vidgear&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 180 · 📥 590 · 📦 200 · 📋 220 - 0% open · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/abhiTronix/vidgear&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vidgear&#34;&gt;PyPi&lt;/a&gt; (📥 4.4K / month · 📦 5 · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vidgear&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/obss/sahi&#34;&gt;sahi&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.6K) - A lightweight vision library for performing large scale object detection/.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/obss/sahi&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 240 · 📥 270 · 📦 61 · 📋 150 - 13% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/obss/sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sahi&#34;&gt;PyPi&lt;/a&gt; (📥 21K / month · 📦 5 · ⏱️ 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sahi&#34;&gt;Conda&lt;/a&gt; (📥 2.9K · ⏱️ 08.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sahi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Layout-Parser/layout-parser&#34;&gt;layout-parser&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 3K) - A Unified Toolkit for Deep Learning Based Document Image.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Layout-Parser/layout-parser&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 290 · 📦 70 · 📋 93 - 48% open · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Layout-Parser/layout-parser&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/layoutparser&#34;&gt;PyPi&lt;/a&gt; (📥 5.1K / month · 📦 2 · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install layoutparser&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ipazc/mtcnn&#34;&gt;mtcnn&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.8K · 💤) - MTCNN face detection implementation for TensorFlow, as a PIP.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ipazc/mtcnn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 450 · 📦 2.2K · 📋 100 - 62% open · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ipazc/mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mtcnn&#34;&gt;PyPi&lt;/a&gt; (📥 30K / month · 📦 43 · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mtcnn&#34;&gt;Conda&lt;/a&gt; (📥 4.8K · ⏱️ 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mtcnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lightly-ai/lightly&#34;&gt;lightly&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.6K) - A python library for self-supervised learning on images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lightly-ai/lightly&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 120 · 📦 36 · 📋 320 - 19% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lightly-ai/lightly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightly&#34;&gt;PyPi&lt;/a&gt; (📥 3.1K / month · 📦 1 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/luispedro/mahotas&#34;&gt;mahotas&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 750) - Computer Vision in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/luispedro/mahotas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 140 · 📦 820 · 📋 78 - 21% open · ⏱️ 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/luispedro/mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mahotas&#34;&gt;PyPi&lt;/a&gt; (📥 9.9K / month · 📦 110 · ⏱️ 14.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mahotas&#34;&gt;Conda&lt;/a&gt; (📥 320K · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mahotas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/libvips/pyvips&#34;&gt;pyvips&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 400) - python binding for libvips using cffi. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/libvips/pyvips&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 39 · 📦 320 · 📋 280 - 37% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/libvips/pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyvips&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 39 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyvips&#34;&gt;Conda&lt;/a&gt; (📥 19K · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyvips&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/mmf&#34;&gt;MMF&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 4.9K) - A modular framework for vision &amp;amp; language multimodal research from.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/mmf&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 820 · 📦 12 · 📋 620 - 30% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/mmf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmf&#34;&gt;PyPi&lt;/a&gt; (📥 460 / month · 📦 1 · ⏱️ 12.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/timesler/facenet-pytorch&#34;&gt;facenet-pytorch&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.9K) - Pretrained Pytorch face detection (MTCNN) and facial.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/timesler/facenet-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 640 · 📥 300K · 📦 770 · 📋 150 - 40% open · ⏱️ 13.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/timesler/facenet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/facenet-pytorch&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 11 · ⏱️ 10.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install facenet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorchvideo&#34;&gt;pytorchvideo&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.4K) - A deep learning library for video understanding research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorchvideo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 260 · 📋 130 - 41% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pytorchvideo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorchvideo&#34;&gt;PyPi&lt;/a&gt; (📥 17K / month · 📦 5 · ⏱️ 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorchvideo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/graphics&#34;&gt;tensorflow-graphics&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 2.6K) - TensorFlow Graphics: Differentiable Graphics Layers.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/graphics&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 340 · 📋 220 - 59% open · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/graphics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-graphics&#34;&gt;PyPi&lt;/a&gt; (📥 3.4K / month · 📦 4 · ⏱️ 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-graphics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airctic/icevision&#34;&gt;icevision&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 690) - An Agnostic Computer Vision Framework - Pluggable to any Training.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/airctic/icevision&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 98 · 📋 640 - 21% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/airctic/icevision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/icevision&#34;&gt;PyPi&lt;/a&gt; (📥 3.9K / month · 📦 5 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install icevision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CellProfiler/CellProfiler&#34;&gt;CellProfiler&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 670) - An open-source application for biological image analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CellProfiler/CellProfiler&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 310 · 📥 2.7K · 📦 8 · 📋 3.1K - 6% open · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CellProfiler/CellProfiler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cellprofiler&#34;&gt;PyPi&lt;/a&gt; (📥 800 / month · ⏱️ 04.09.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cellprofiler&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/deep-daze&#34;&gt;deep-daze&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 4.2K) - Simple command line tool for text to image generation using OpenAIs.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/deep-daze&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 310 · 📦 38 · 📋 160 - 55% open · ⏱️ 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/deep-daze&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deep-daze&#34;&gt;PyPi&lt;/a&gt; (📥 2.1K / month · ⏱️ 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deep-daze&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/idealo/image-super-resolution&#34;&gt;Image Super-Resolution&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 3.6K · 💤) - Super-scale your images and run experiments with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/idealo/image-super-resolution&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 620 · 📦 83 · 📋 200 - 44% open · ⏱️ 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/idealo/image-super-resolution&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ISR&#34;&gt;PyPi&lt;/a&gt; (📥 4.5K / month · 📦 5 · ⏱️ 08.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ISR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/idealo/image-super-resolution-gpu&#34;&gt;Docker Hub&lt;/a&gt; (📥 210 · ⏱️ 01.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull idealo/image-super-resolution-gpu&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/vissl&#34;&gt;vissl&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.6K) - VISSL is FAIRs library of extensible, modular and scalable components.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/vissl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 270 · 📦 7 · 📋 140 - 33% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/vissl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vissl&#34;&gt;PyPi&lt;/a&gt; (📥 760 / month · 📦 1 · ⏱️ 02.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vissl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ClassyVision&#34;&gt;Classy Vision&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.5K) - An end-to-end PyTorch framework for image and video.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ClassyVision&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 75 · 🔀 260 · 📋 110 - 46% open · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ClassyVision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/classy_vision&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · 📦 2 · ⏱️ 09.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install classy_vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/classy_vision&#34;&gt;Conda&lt;/a&gt; (📥 13K · ⏱️ 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge classy_vision&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tryolabs/norfair&#34;&gt;Norfair&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.4K) - Lightweight Python library for adding real-time object tracking to any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tryolabs/norfair&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 130 · 📥 100 · 📋 57 - 31% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tryolabs/norfair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/norfair&#34;&gt;PyPi&lt;/a&gt; (📥 3.6K / month · 📦 1 · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install norfair&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ProvenanceLabs/image-match&#34;&gt;image-match&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.7K · 💤) - Quickly search over billions of images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ProvenanceLabs/image-match&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 400 · 📋 110 - 57% open · ⏱️ 21.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ProvenanceLabs/image-match&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/image_match&#34;&gt;PyPi&lt;/a&gt; (📥 560 / month · 📦 4 · ⏱️ 13.02.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install image_match&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pycls&#34;&gt;pycls&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.9K) - Codebase for Image Classification Research, written in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/pycls&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 220 · 📦 5 · 📋 81 - 30% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/pycls&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycls&#34;&gt;PyPi&lt;/a&gt; (📥 510 / month · ⏱️ 05.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycls&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/detr&#34;&gt;DE⫶TR&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 8.9K) - End-to-End Object Detection with Transformers. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/detr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 1.6K · 📋 430 - 37% open · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/detr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/SlowFast&#34;&gt;PySlowFast&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 4.8K) - PySlowFast: video understanding codebase from FAIR for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/SlowFast&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 920 · 📦 7 · 📋 510 - 50% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/SlowFast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyslowfast&#34;&gt;PyPi&lt;/a&gt; (📥 9 / month · ⏱️ 15.01.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyslowfast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/scenic&#34;&gt;scenic&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 980) - Scenic: A Jax Library for Computer Vision Research and Beyond. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/scenic&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 110 · 📦 16 · 📋 62 - 54% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/scenic&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jasmcaus/caer&#34;&gt;Caer&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 620 · 💤) - A lightweight Computer Vision library. Scale your models, not boilerplate. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jasmcaus/caer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 110 · 📥 19 · 📋 15 - 13% open · ⏱️ 13.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jasmcaus/caer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/caer&#34;&gt;PyPi&lt;/a&gt; (📥 3.3K / month · 📦 1 · ⏱️ 13.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install caer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/glfw/glfw&#34;&gt;glfw&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 9.1K) - A multi-platform library for OpenGL, OpenGL ES, Vulkan, window and input. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=Zlib&#34;&gt;❗️Zlib&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aleju/imgaug&#34;&gt;imgaug&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 13K · 💀) - Image augmentation for machine learning experiments. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pytorch3d&#34;&gt;PyTorch3D&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 6K) - PyTorch3D is FAIRs library of reusable components for deep.. &lt;code&gt;❗Unlicensed&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uploadcare/pillow-simd&#34;&gt;Pillow-SIMD&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 1.8K) - The friendly PIL fork. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=PIL&#34;&gt;❗️PIL&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainercv&#34;&gt;chainercv&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.5K · 💀) - ChainerCV: a Library for Deep Learning in Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qubvel/segmentation_models&#34;&gt;segmentation_models&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 3.9K · 💀) - Segmentation models with pretrained backbones. Keras.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/idealo/imagededup&#34;&gt;Image Deduplicator&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 4K · 💀) - Finding duplicate images made easy!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tryolabs/luminoth&#34;&gt;Luminoth&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.4K · 💀) - Deep Learning toolkit for Computer Vision. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hhatto/nude.py&#34;&gt;nude.py&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 860 · 💀) - Nudity detection with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Oulu-IMEDS/solt&#34;&gt;solt&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 260 · 💀) - Streaming over lightweight data transformations. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qanastek/HugsVision&#34;&gt;HugsVision&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 160) - HugsVision is a easy to use huggingface wrapper for state-of-the-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolas-chaulet/torch-points3d&#34;&gt;Torch Points 3D&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 61 · 🐣) - Pytorch framework for doing deep learning on point.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Graph Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for graph processing, clustering, embedding, and machine learning tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/networkx/networkx&#34;&gt;networkx&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 11K) - Network Analysis in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/networkx/networkx&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 590 · 🔀 2.6K · 📥 60 · 📦 110K · 📋 2.9K - 12% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/networkx/networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/networkx&#34;&gt;PyPi&lt;/a&gt; (📥 22M / month · 📦 13K · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/networkx&#34;&gt;Conda&lt;/a&gt; (📥 6.5M · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge networkx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyg-team/pytorch_geometric&#34;&gt;PyTorch Geometric&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 15K) - Graph Neural Network Library for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyg-team/pytorch_geometric&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 270 · 🔀 2.6K · 📋 2.6K - 37% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyg-team/pytorch_geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-geometric&#34;&gt;PyPi&lt;/a&gt; (📥 88K / month · 📦 43 · ⏱️ 12.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_geometric&#34;&gt;Conda&lt;/a&gt; (📥 6.5K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_geometric&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmlc/dgl&#34;&gt;dgl&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 9.6K) - Python package built to ease deep learning on graph, on top of existing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dmlc/dgl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 210 · 🔀 2.3K · 📦 6 · 📋 1.6K - 15% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dmlc/dgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dgl&#34;&gt;PyPi&lt;/a&gt; (📥 26K / month · 📦 45 · ⏱️ 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stellargraph/stellargraph&#34;&gt;StellarGraph&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.4K · 💤) - StellarGraph - Machine Learning on Graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stellargraph/stellargraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 360 · 📦 140 · 📋 1K - 27% open · ⏱️ 29.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stellargraph/stellargraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stellargraph&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 5 · ⏱️ 30.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stellargraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/graphistry/pygraphistry&#34;&gt;pygraphistry&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.6K) - PyGraphistry is a Python library to quickly load, shape,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/graphistry/pygraphistry&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 160 · 📦 69 · 📋 210 - 42% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/graphistry/pygraphistry&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphistry&#34;&gt;PyPi&lt;/a&gt; (📥 2.9K / month · 📦 4 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphistry&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/ogb&#34;&gt;ogb&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.3K) - Benchmark datasets, data loaders, and evaluators for graph machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/ogb&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 290 · 📦 300 · 📋 210 - 3% open · ⏱️ 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ogb&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 13 · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ogb&#34;&gt;Conda&lt;/a&gt; (📥 7.9K · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ogb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PGL&#34;&gt;Paddle Graph Learning&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.3K) - Paddle Graph Learning (PGL) is an efficient and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PGL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 240 · 📦 26 · 📋 120 - 39% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PGL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pgl&#34;&gt;PyPi&lt;/a&gt; (📥 7.1K / month · 📦 2 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pgl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/danielegrattarola/spektral&#34;&gt;Spektral&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 2.1K) - Graph Neural Networks with Keras and Tensorflow 2. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/danielegrattarola/spektral&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 280 · 📦 120 · 📋 230 - 19% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/danielegrattarola/spektral&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spektral&#34;&gt;PyPi&lt;/a&gt; (📥 6.8K / month · 📦 2 · ⏱️ 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spektral&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pykeen/pykeen&#34;&gt;PyKEEN&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 860) - A Python library for learning and evaluating knowledge graph embeddings. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pykeen/pykeen&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 120 · 📥 140 · 📋 400 - 30% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pykeen/pykeen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pykeen&#34;&gt;PyPi&lt;/a&gt; (📥 1.6K / month · 📦 3 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pykeen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/PyTorch-BigGraph&#34;&gt;PyTorch-BigGraph&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 3.1K) - Generate embeddings from large-scale graph-structured.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/PyTorch-BigGraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 410 · 📥 130 · 📋 190 - 28% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/PyTorch-BigGraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchbiggraph&#34;&gt;PyPi&lt;/a&gt; (📥 280K / month · 📦 3 · ⏱️ 01.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchbiggraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#34;&gt;pytorch_geometric_temporal&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 1.6K) - PyTorch Geometric Temporal: Spatiotemporal Signal.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 230 · 📋 110 - 10% open · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/benedekrozemberczki/pytorch_geometric_temporal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-geometric-temporal&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · 📦 2 · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-geometric-temporal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Accenture/AmpliGraph&#34;&gt;AmpliGraph&lt;/a&gt;&lt;/b&gt; (🥈24 · ⭐ 1.8K · 💤) - Python library for Representation Learning on Knowledge.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Accenture/AmpliGraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 200 · 📦 20 · 📋 200 - 10% open · ⏱️ 25.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Accenture/AmpliGraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ampligraph&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · ⏱️ 25.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ampligraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/graph4ai/graph4nlp&#34;&gt;graph4nlp&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.3K) - Graph4nlp is the library for the easy use of Graph Neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/graph4ai/graph4nlp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 160 · 📋 150 - 9% open · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/graph4ai/graph4nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graph4nlp&#34;&gt;PyPi&lt;/a&gt; (📥 100 / month · ⏱️ 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graph4nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/eliorc/node2vec&#34;&gt;Node2Vec&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 910) - Implementation of the node2vec algorithm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eliorc/node2vec&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 210 · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/eliorc/node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/node2vec&#34;&gt;PyPi&lt;/a&gt; (📥 150K / month · 📦 15 · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/node2vec&#34;&gt;Conda&lt;/a&gt; (📥 21K · ⏱️ 25.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge node2vec&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_cluster&#34;&gt;torch-cluster&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 520) - PyTorch Extension Library of Optimized Graph Cluster.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_cluster&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 95 · 📋 100 - 13% open · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-cluster&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 27 · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_cluster&#34;&gt;Conda&lt;/a&gt; (📥 31K · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_cluster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/jraph&#34;&gt;jraph&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 900) - A Graph Neural Network Library in Jax. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/jraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 58 · 📦 18 · 📋 22 - 45% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/jraph&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 2 · ⏱️ 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/jraph&#34;&gt;Conda&lt;/a&gt; (📥 390 · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge jraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/deepsnap&#34;&gt;deepsnap&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 420 · 💤) - Python library assists deep learning on graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/deepsnap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 46 · 📥 8 · 📦 21 · 📋 39 - 38% open · ⏱️ 19.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/deepsnap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepsnap&#34;&gt;PyPi&lt;/a&gt; (📥 430 / month · 📦 1 · ⏱️ 05.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepsnap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/THUMNLab/AutoGL&#34;&gt;AutoGL&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 800) - An autoML framework &amp;amp; toolkit for machine learning on graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/THUMNLab/AutoGL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 91 · 📋 20 - 30% open · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/THUMNLab/AutoGL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-graph-learning&#34;&gt;PyPi&lt;/a&gt; (📥 6 / month · ⏱️ 23.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-graph-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snap-stanford/GraphGym&#34;&gt;GraphGym&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 1K) - Platform for designing and evaluating Graph Neural Networks (GNN). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snap-stanford/GraphGym&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 120 · 📥 13 · 📦 2 · 📋 26 - 15% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snap-stanford/GraphGym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/graphgym&#34;&gt;PyPi&lt;/a&gt; (📥 56 / month · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install graphgym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vaticle/kglib&#34;&gt;kglib&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 500 · 💤) - Grakn Knowledge Graph Library (ML R&amp;amp;D). &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/vaticle/kglib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 88 · 📥 210 · 📋 62 - 19% open · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/vaticle/kglib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/grakn-kglib&#34;&gt;PyPi&lt;/a&gt; (📥 44 / month · ⏱️ 19.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install grakn-kglib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/ptgnn&#34;&gt;ptgnn&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 320) - A PyTorch Graph Neural Network Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/ptgnn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 38 · 📦 1 · 📋 7 - 28% open · ⏱️ 01.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/ptgnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ptgnn&#34;&gt;PyPi&lt;/a&gt; (📥 97 / month · ⏱️ 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ptgnn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 15 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/igraph/python-igraph&#34;&gt;igraph&lt;/a&gt;&lt;/b&gt; (🥇31 · ⭐ 970) - Python interface for igraph. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;❗️GPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Kozea/pygal&#34;&gt;pygal&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.5K) - PYthon svg GrAph plotting Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benedekrozemberczki/karateclub&#34;&gt;Karate Club&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.6K) - Karate Club: An API Oriented Open-source Python Framework for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/divelab/DIG&#34;&gt;DIG&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.1K) - A library for graph deep learning research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/phanein/deepwalk&#34;&gt;DeepWalk&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.4K · 💀) - DeepWalk - Deep Learning for Graphs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/graph_nets&#34;&gt;graph-nets&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 5.1K · 💀) - Build Graph Nets in Tensorflow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IBCNServices/pyRDF2Vec&#34;&gt;pyRDF2Vec&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 150) - Python Implementation and Extension of RDF2Vec. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gsi-upm/sematch&#34;&gt;Sematch&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 390 · 💀) - semantic similarity framework for knowledge graph. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepgraph/deepgraph&#34;&gt;DeepGraph&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 250 · 💤) - Analyze Data with Pandas-based Networks. Documentation:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shenweichen/GraphEmbedding&#34;&gt;GraphEmbedding&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 2.8K · 💀) - Implementation and experiments of graph embedding.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenKE&#34;&gt;OpenKE&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 3K · 💀) - An Open-Source Package for Knowledge Embedding (KE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alibaba/euler&#34;&gt;Euler&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 2.8K · 💀) - A distributed graph deep learning framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/williamleif/GraphSAGE&#34;&gt;GraphSAGE&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 2.7K · 💀) - Representation learning on large graphs using stochastic.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thunlp/OpenNE&#34;&gt;OpenNE&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 1.6K · 💀) - An Open-Source Package for Network Embedding (NE). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DeepGraphLearning/graphvite&#34;&gt;GraphVite&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 1K · 💀) - GraphVite: A General and High-performance Graph Embedding System. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Audio Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for audio analysis, manipulation, transformation, and extraction, as well as speech recognition and music generation tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/espnet/espnet&#34;&gt;espnet&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 5.1K) - End-to-End Speech Processing Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/espnet/espnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 270 · 🔀 1.6K · 📥 76 · 📦 50 · 📋 1.8K - 17% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/espnet/espnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/espnet&#34;&gt;PyPi&lt;/a&gt; (📥 8.1K / month · 📦 1 · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install espnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mozilla/DeepSpeech&#34;&gt;DeepSpeech&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 20K) - DeepSpeech is an open source embedded (offline, on-device).. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mozilla/DeepSpeech&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 160 · 🔀 3.5K · 📥 840K · 📦 750 · 📋 2.1K - 5% open · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mozilla/DeepSpeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepspeech&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 37 · ⏱️ 19.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepspeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/deepspeech&#34;&gt;Conda&lt;/a&gt; (📥 520 · ⏱️ 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge deepspeech&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/audio&#34;&gt;torchaudio&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 1.7K) - Data manipulation and transformation for audio signal.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/audio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 160 · 🔀 420 · 📋 640 - 27% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/audio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchaudio&#34;&gt;PyPi&lt;/a&gt; (📥 510K / month · 📦 140 · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchaudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/magenta/magenta&#34;&gt;Magenta&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 18K) - Magenta: Music and Art Generation with Machine Intelligence. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/magenta/magenta&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 3.6K · 📦 360 · 📋 920 - 37% open · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/magenta/magenta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/magenta&#34;&gt;PyPi&lt;/a&gt; (📥 4.7K / month · 📦 36 · ⏱️ 12.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install magenta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/librosa/librosa&#34;&gt;librosa&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 5.2K) - Python library for audio and music analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/librosa/librosa&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 96 · 🔀 800 · 📋 970 - 4% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/librosa/librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/librosa&#34;&gt;PyPi&lt;/a&gt; (📥 950K / month · 📦 1.2K · ⏱️ 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/librosa&#34;&gt;Conda&lt;/a&gt; (📥 460K · ⏱️ 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge librosa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/speechbrain/speechbrain&#34;&gt;speechbrain&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 4.1K) - A PyTorch-based Speech Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/speechbrain/speechbrain&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 160 · 🔀 760 · 📦 180 · 📋 670 - 21% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/speechbrain/speechbrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/speechbrain&#34;&gt;PyPi&lt;/a&gt; (📥 9.4K / month · 📦 2 · ⏱️ 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install speechbrain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Uberi/speech_recognition&#34;&gt;SpeechRecognition&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 6.3K) - Speech recognition module for Python, supporting several.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Uberi/speech_recognition&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 45 · 🔀 2K · 📋 520 - 45% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Uberi/speech_recognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/SpeechRecognition&#34;&gt;PyPi&lt;/a&gt; (📥 270K / month · 📦 700 · ⏱️ 05.12.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install SpeechRecognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/speechrecognition&#34;&gt;Conda&lt;/a&gt; (📥 140K · ⏱️ 13.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge speechrecognition&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jiaaro/pydub&#34;&gt;Pydub&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 6.1K) - Manipulate audio with a simple and easy high level interface. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jiaaro/pydub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 92 · 🔀 810 · 📦 12K · 📋 480 - 45% open · ⏱️ 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jiaaro/pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pydub&#34;&gt;PyPi&lt;/a&gt; (📥 1.9M / month · 📦 900 · ⏱️ 10.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pydub&#34;&gt;Conda&lt;/a&gt; (📥 23K · ⏱️ 13.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pydub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tyiannak/pyAudioAnalysis&#34;&gt;pyAudioAnalysis&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4.8K) - Python Audio Analysis Library: Feature Extraction,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tyiannak/pyAudioAnalysis&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 1.1K · 📦 270 · 📋 290 - 59% open · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tyiannak/pyAudioAnalysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyAudioAnalysis&#34;&gt;PyPi&lt;/a&gt; (📥 27K / month · 📦 19 · ⏱️ 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyAudioAnalysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;Coqui TTS&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 4.9K) - - a deep learning toolkit for Text-to-Speech, battle-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coqui-ai/TTS&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 88 · 🔀 500 · 📥 160K · 📋 330 - 8% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/coqui-ai/TTS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tts&#34;&gt;PyPi&lt;/a&gt; (📥 6K / month · ⏱️ 14.07.2017):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tts&#34;&gt;Conda&lt;/a&gt; (📥 1.7K · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Picovoice/porcupine&#34;&gt;Porcupine&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.7K) - On-device wake word detection powered by deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Picovoice/porcupine&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 31 · 🔀 390 · 📦 9 · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Picovoice/Porcupine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pvporcupine&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · 📦 11 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pvporcupine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/devsnd/tinytag&#34;&gt;tinytag&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 530) - Read audio and music meta data and duration of MP3, OGG, OPUS, MP4, M4A,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/devsnd/tinytag&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 89 · 📦 520 · 📋 90 - 12% open · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/devsnd/tinytag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tinytag&#34;&gt;PyPi&lt;/a&gt; (📥 94K / month · 📦 70 · ⏱️ 12.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tinytag&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/beetbox/audioread&#34;&gt;audioread&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 400) - cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/beetbox/audioread&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 93 · 📦 8.5K · 📋 79 - 39% open · ⏱️ 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/beetbox/audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/audioread&#34;&gt;PyPi&lt;/a&gt; (📥 920K / month · 📦 320 · ⏱️ 20.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/audioread&#34;&gt;Conda&lt;/a&gt; (📥 430K · ⏱️ 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge audioread&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;spleeter&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 20K) - Deezer source separation library including pretrained models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deezer/spleeter&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 2.2K · 📥 1.7M · 📋 680 - 20% open · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deezer/spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/spleeter&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 5 · ⏱️ 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/spleeter&#34;&gt;Conda&lt;/a&gt; (📥 64K · ⏱️ 30.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge spleeter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/magenta/ddsp&#34;&gt;DDSP&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2.2K) - DDSP: Differentiable Digital Signal Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/magenta/ddsp&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 31 · 🔀 250 · 📦 26 · 📋 140 - 17% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/magenta/ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ddsp&#34;&gt;PyPi&lt;/a&gt; (📥 2.8K / month · 📦 1 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ddsp&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 08.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ddsp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iver56/audiomentations&#34;&gt;audiomentations&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 980) - A Python library for audio data augmentation. Inspired by.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iver56/audiomentations&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 120 · 📦 130 · 📋 120 - 24% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iver56/audiomentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/audiomentations&#34;&gt;PyPi&lt;/a&gt; (📥 4.5K / month · 📦 1 · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install audiomentations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CPJKU/madmom&#34;&gt;Madmom&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 900) - Python audio and music signal processing library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CPJKU/madmom&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 150 · 📦 200 · 📋 260 - 21% open · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CPJKU/madmom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/madmom&#34;&gt;PyPi&lt;/a&gt; (📥 2.7K / month · 📦 27 · ⏱️ 14.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install madmom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bastibe/python-soundfile&#34;&gt;python-soundfile&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 450) - SoundFile is an audio library based on libsndfile, CFFI, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bastibe/python-soundfile&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 68 · 📥 3.2K · 📋 170 - 39% open · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bastibe/python-soundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/soundfile&#34;&gt;PyPi&lt;/a&gt; (📥 1M / month · 📦 540 · ⏱️ 27.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install soundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/pysoundfile&#34;&gt;Conda&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda pysoundfile&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keunwoochoi/kapre&#34;&gt;kapre&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 820) - kapre: Keras Audio Preprocessors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keunwoochoi/kapre&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 140 · 📥 22 · 📦 1.6K · 📋 94 - 12% open · ⏱️ 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keunwoochoi/kapre&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kapre&#34;&gt;PyPi&lt;/a&gt; (📥 3.7K / month · 📦 14 · ⏱️ 21.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kapre&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KinWaiCheuk/nnAudio&#34;&gt;nnAudio&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 680) - Audio processing by using pytorch 1D convolution network. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KinWaiCheuk/nnAudio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 66 · 📦 53 · 📋 49 - 24% open · ⏱️ 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KinWaiCheuk/nnAudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nnAudio&#34;&gt;PyPi&lt;/a&gt; (📥 25K / month · 📦 1 · ⏱️ 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nnAudio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aubio/aubio&#34;&gt;aubio&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.7K) - a library for audio and music analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MTG/essentia&#34;&gt;Essentia&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2.1K) - C++ library for audio and music analysis, description and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jameslyons/python_speech_features&#34;&gt;python_speech_features&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 2.1K · 💀) - This library provides common speech features for ASR.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mozilla/TTS&#34;&gt;TTS&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 6K · 💀) - Deep learning for Text to Speech (Discussion forum:.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/worldveil/dejavu&#34;&gt;Dejavu&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 5.7K · 💀) - Audio fingerprinting and recognition in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Parisson/TimeSide&#34;&gt;TimeSide&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 320) - Scalable audio processing framework written in Python with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bmcfee/muda&#34;&gt;Muda&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 210 · 💤) - A library for augmenting annotated audio data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adefossez/julius&#34;&gt;Julius&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 270) - Fast PyTorch based DSP for audio and 1D signals. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Geospatial Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to load, process, analyze, and write geographic data as well as libraries for spatial analysis, map visualization, and geocoding.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/visgl/deck.gl&#34;&gt;pydeck&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 9.8K) - WebGL2 powered visualization framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/visgl/deck.gl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 200 · 🔀 1.8K · 📦 4.1K · 📋 2.4K - 6% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/visgl/deck.gl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pydeck&#34;&gt;PyPi&lt;/a&gt; (📥 970K / month · 📦 23 · ⏱️ 25.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pydeck&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pydeck&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pydeck&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/deck.gl&#34;&gt;npm&lt;/a&gt; (📥 310K / month · 📦 380 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install deck.gl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shapely/shapely&#34;&gt;Shapely&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 2.8K) - Manipulation and analysis of geometric objects. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shapely/shapely&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 460 · 📥 40 · 📦 30K · 📋 880 - 18% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/shapely/shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shapely&#34;&gt;PyPi&lt;/a&gt; (📥 6.8M / month · 📦 3.8K · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/shapely&#34;&gt;Conda&lt;/a&gt; (📥 3.7M · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge shapely&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasterio/rasterio&#34;&gt;Rasterio&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 1.7K) - Rasterio reads and writes geospatial raster datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasterio/rasterio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 470 · 📥 760 · 📦 4.9K · 📋 1.5K - 9% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasterio/rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rasterio&#34;&gt;PyPi&lt;/a&gt; (📥 740K / month · 📦 780 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rasterio&#34;&gt;Conda&lt;/a&gt; (📥 1.5M · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rasterio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-visualization/folium&#34;&gt;folium&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 5.8K) - Python Data. Leaflet.js Maps. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-visualization/folium&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 2.1K · 📦 16K · 📋 950 - 23% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-visualization/folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/folium&#34;&gt;PyPi&lt;/a&gt; (📥 960K / month · 📦 660 · ⏱️ 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/folium&#34;&gt;Conda&lt;/a&gt; (📥 780K · ⏱️ 03.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge folium&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geopandas/geopandas&#34;&gt;GeoPandas&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 3.2K) - Python tools for geographic data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geopandas/geopandas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 720 · 📥 1.5K · 📦 14K · 📋 1.3K - 30% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geopandas/geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geopandas&#34;&gt;PyPi&lt;/a&gt; (📥 2.3M / month · 📦 1.1K · ⏱️ 16.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geopandas&#34;&gt;Conda&lt;/a&gt; (📥 1.6M · ⏱️ 01.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyproj4/pyproj&#34;&gt;pyproj&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 760) - Python interface to PROJ (cartographic projections and coordinate.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyproj4/pyproj&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 180 · 📦 14K · 📋 490 - 2% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyproj4/pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyproj&#34;&gt;PyPi&lt;/a&gt; (📥 4.5M / month · 📦 1.7K · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyproj&#34;&gt;Conda&lt;/a&gt; (📥 3.4M · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyproj&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geopy/geopy&#34;&gt;geopy&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 3.6K) - Geocoding library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geopy/geopy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 570 · 📦 38K · 📋 260 - 10% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geopy/geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geopy&#34;&gt;PyPi&lt;/a&gt; (📥 3.6M / month · 📦 3.9K · ⏱️ 11.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geopy&#34;&gt;Conda&lt;/a&gt; (📥 710K · ⏱️ 12.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geopy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/ipyleaflet&#34;&gt;ipyleaflet&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.3K) - A Jupyter - Leaflet.js bridge. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jupyter-widgets/ipyleaflet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 330 · 📦 1.8K · 📋 490 - 38% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jupyter-widgets/ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ipyleaflet&#34;&gt;PyPi&lt;/a&gt; (📥 72K / month · 📦 110 · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ipyleaflet&#34;&gt;Conda&lt;/a&gt; (📥 820K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ipyleaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/jupyter-leaflet&#34;&gt;npm&lt;/a&gt; (📥 51K / month · 📦 2 · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install jupyter-leaflet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Toblerity/Fiona&#34;&gt;Fiona&lt;/a&gt;&lt;/b&gt; (🥉32 · ⭐ 920) - Fiona reads and writes geographic data files. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Toblerity/Fiona&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 180 · 📦 8.6K · 📋 680 - 11% open · ⏱️ 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Toblerity/Fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fiona&#34;&gt;PyPi&lt;/a&gt; (📥 2.6M / month · 📦 780 · ⏱️ 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fiona&#34;&gt;Conda&lt;/a&gt; (📥 2.9M · ⏱️ 26.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fiona&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Esri/arcgis-python-api&#34;&gt;ArcGIS API&lt;/a&gt;&lt;/b&gt; (🥉31 · ⭐ 1.3K) - Documentation and samples for ArcGIS API for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Esri/arcgis-python-api&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 80 · 🔀 880 · 📥 3.4K · 📋 520 - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Esri/arcgis-python-api&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arcgis&#34;&gt;PyPi&lt;/a&gt; (📥 75K / month · 📦 22 · ⏱️ 03.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arcgis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/esridocker/arcgis-api-python-notebook&#34;&gt;Docker Hub&lt;/a&gt; (📥 7K · ⭐ 33 · ⏱️ 04.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull esridocker/arcgis-api-python-notebook&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jazzband/geojson&#34;&gt;geojson&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 720) - Python bindings and utilities for GeoJSON. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jazzband/geojson&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 95 · 📦 9.3K · 📋 84 - 26% open · ⏱️ 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jazzband/geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geojson&#34;&gt;PyPi&lt;/a&gt; (📥 740K / month · 📦 1.1K · ⏱️ 09.08.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geojson&#34;&gt;Conda&lt;/a&gt; (📥 510K · ⏱️ 11.08.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geojson&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pysal/pysal&#34;&gt;PySAL&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1K) - PySAL: Python Spatial Analysis Library Meta-Package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pysal/pysal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 75 · 🔀 270 · 📋 610 - 1% open · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pysal/pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pysal&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 30 · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pysal&#34;&gt;Conda&lt;/a&gt; (📥 440K · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pysal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/holoviz/geoviews&#34;&gt;GeoViews&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 410) - Simple, concise geographical visualization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/holoviz/geoviews&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 68 · 📋 300 - 34% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/holoviz/geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geoviews&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 26 · ⏱️ 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/geoviews&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge geoviews&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/earthlab/earthpy&#34;&gt;EarthPy&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 360) - A package built to support working with spatial data using open source.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/earthlab/earthpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 40 · 🔀 140 · 📦 140 · 📋 220 - 8% open · ⏱️ 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/earthlab/earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/earthpy&#34;&gt;PyPi&lt;/a&gt; (📥 7.8K / month · 📦 7 · ⏱️ 01.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/earthpy&#34;&gt;Conda&lt;/a&gt; (📥 43K · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge earthpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DenisCarriere/geocoder&#34;&gt;Geocoder&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.4K · 💀) - Python Geocoder. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytroll/satpy&#34;&gt;Satpy&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 840) - Python package for earth-observing satellite data processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sentinelsat/sentinelsat&#34;&gt;Sentinelsat&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 760) - Search and download Copernicus Sentinel satellite images. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pbugnion/gmaps&#34;&gt;gmaps&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 740 · 💀) - Google maps for Jupyter notebooks. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mapbox/mapboxgl-jupyter&#34;&gt;Mapbox GL&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 610 · 💀) - Use Mapbox GL JS to visualize data in a Python Jupyter notebook. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geospace-code/pymap3d&#34;&gt;pymap3d&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 250) - pure-Python (Numpy optional) 3D coordinate conversions for geospace ecef.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/andrea-cuttone/geoplotlib&#34;&gt;geoplotlib&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 960 · 💀) - python toolbox for visualizing geographical data and making maps. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marceloprates/prettymaps&#34;&gt;prettymaps&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 8K) - A small set of Python functions to draw pretty maps from.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Financial Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for algorithmic stock/crypto trading, risk analytics, backtesting, technical analysis, and other tasks on financial data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ranaroussi/yfinance&#34;&gt;yfinance&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 7.1K) - Download market data from Yahoo! Finances API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ranaroussi/yfinance&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 53 · 🔀 1.5K · 📦 12K · 📋 780 - 56% open · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ranaroussi/yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/yfinance&#34;&gt;PyPi&lt;/a&gt; (📥 330K / month · 📦 120 · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/ranaroussi/yfinance&#34;&gt;Conda&lt;/a&gt; (📥 43K · ⏱️ 10.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c ranaroussi yfinance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/qlib&#34;&gt;Qlib&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 8.6K) - Qlib is an AI-oriented quantitative investment platform, which aims to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/qlib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 94 · 🔀 1.5K · 📥 280 · 📦 17 · 📋 550 - 29% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/qlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyqlib&#34;&gt;PyPi&lt;/a&gt; (📥 2.7K / month · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyqlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bukosabino/ta&#34;&gt;ta&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 3K) - Technical Analysis Library using Pandas and Numpy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bukosabino/ta&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 700 · 📦 1.2K · 📋 210 - 53% open · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bukosabino/ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ta&#34;&gt;PyPi&lt;/a&gt; (📥 76K / month · 📦 33 · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ta&#34;&gt;Conda&lt;/a&gt; (📥 3.1K · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RomelTorres/alpha_vantage&#34;&gt;Alpha Vantage&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 3.6K · 💤) - A python wrapper for Alpha Vantage API for financial data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RomelTorres/alpha_vantage&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 640 · 📋 260 - 5% open · ⏱️ 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RomelTorres/alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alpha_vantage&#34;&gt;PyPi&lt;/a&gt; (📥 15K / month · 📦 100 · ⏱️ 26.08.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/alpha_vantage&#34;&gt;Conda&lt;/a&gt; (📥 1.2K · ⏱️ 14.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge alpha_vantage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/erdewit/ib_insync&#34;&gt;IB-insync&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.8K) - Python sync/async framework for Interactive Brokers API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/erdewit/ib_insync&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 480 · 📋 400 - 1% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/erdewit/ib_insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ib_insync&#34;&gt;PyPi&lt;/a&gt; (📥 6.6K / month · 📦 19 · ⏱️ 28.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ib_insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ib-insync&#34;&gt;Conda&lt;/a&gt; (📥 16K · ⏱️ 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ib-insync&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pmorissette/ffn&#34;&gt;ffn&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.1K · 📈) - ffn - a financial function library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pmorissette/ffn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 200 · 📦 200 · 📋 97 - 17% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pmorissette/ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ffn&#34;&gt;PyPi&lt;/a&gt; (📥 29K / month · 📦 25 · ⏱️ 21.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ffn&#34;&gt;Conda&lt;/a&gt; (📥 840 · ⏱️ 22.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ffn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pmorissette/bt&#34;&gt;bt&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.4K) - bt - flexible backtesting for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pmorissette/bt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 310 · 📦 110 · 📋 280 - 19% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pmorissette/bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bt&#34;&gt;PyPi&lt;/a&gt; (📥 4.4K / month · 📦 21 · ⏱️ 21.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bt&#34;&gt;Conda&lt;/a&gt; (📥 4.3K · ⏱️ 18.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensortrade-org/tensortrade&#34;&gt;TensorTrade&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3.9K) - An open source reinforcement learning framework for training,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensortrade-org/tensortrade&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 880 · 📦 36 · 📋 230 - 14% open · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensortrade-org/tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensortrade&#34;&gt;PyPi&lt;/a&gt; (📥 550 / month · 📦 1 · ⏱️ 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensortrade&#34;&gt;Conda&lt;/a&gt; (📥 1.1K · ⏱️ 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensortrade&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scrtlabs/catalyst&#34;&gt;Enigma Catalyst&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.3K · 💤) - An Algorithmic Trading Library for Crypto-Assets in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scrtlabs/catalyst&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 700 · 📦 24 · 📋 490 - 27% open · ⏱️ 22.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scrtlabs/catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/enigma-catalyst&#34;&gt;PyPi&lt;/a&gt; (📥 560 / month · 📦 2 · ⏱️ 11.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install enigma-catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jealous/stockstats&#34;&gt;stockstats&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 990) - Supply a wrapper ``StockDataFrame`` based on the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jealous/stockstats&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 260 · 📦 460 · 📋 85 - 9% open · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jealous/stockstats&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stockstats&#34;&gt;PyPi&lt;/a&gt; (📥 8.2K / month · 📦 29 · ⏱️ 07.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stockstats&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/tf-quant-finance&#34;&gt;tf-quant-finance&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 3.1K) - High-performance TensorFlow library for quantitative.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/tf-quant-finance&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 420 · 📋 44 - 50% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/tf-quant-finance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-quant-finance&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 2 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-quant-finance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CryptoSignal/Crypto-Signal&#34;&gt;Crypto Signals&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 4K · 💤) - Github.com/CryptoSignal - #1 Quant Trading &amp;amp; Technical.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CryptoSignal/Crypto-Signal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 1K · 📋 260 - 20% open · ⏱️ 28.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CryptoSignal/crypto-signal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/shadowreaver/crypto-signal&#34;&gt;Docker Hub&lt;/a&gt; (📥 140K · ⭐ 7 · ⏱️ 03.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull shadowreaver/crypto-signal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cuemacro/finmarketpy&#34;&gt;finmarketpy&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 2.9K) - Python library for backtesting trading strategies &amp;amp; analyzing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cuemacro/finmarketpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 450 · 📥 40 · 📦 5 · 📋 26 - 88% open · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cuemacro/finmarketpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finmarketpy&#34;&gt;PyPi&lt;/a&gt; (📥 110 / month · ⏱️ 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finmarketpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/zipline&#34;&gt;zipline&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 15K · 💀) - Zipline, a Pythonic Algorithmic Trading Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mementum/backtrader&#34;&gt;backtrader&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 8.8K · 💤) - Python Backtesting library for trading strategies. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/pyfolio&#34;&gt;pyfolio&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4.4K · 💀) - Portfolio and risk analytics in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bashtage/arch&#34;&gt;arch&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 920) - ARCH models in Python. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=NCSA&#34;&gt;❗️NCSA&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/alphalens&#34;&gt;Alphalens&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 2.3K · 💀) - Performance analysis of predictive (alpha) stock factors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantopian/empyrical&#34;&gt;empyrical&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 920 · 💀) - Common financial risk and performance metrics. Used by zipline.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gbeced/pyalgotrade&#34;&gt;PyAlgoTrade&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3.7K · 💀) - Python Algorithmic Trading Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/peerchemist/finta&#34;&gt;FinTA&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.6K · 💤) - Common financial technical indicators implemented in Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kernc/backtesting.py&#34;&gt;Backtesting.py&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 2.5K) - Backtest trading strategies in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fmilthaler/FinQuant&#34;&gt;FinQuant&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 770 · 💀) - A program for financial portfolio management, analysis and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tradytics/surpriver&#34;&gt;surpriver&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 1.5K · 💀) - Find big moving stocks before they move using machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alvarobartt/pyrtfolio&#34;&gt;pyrtfolio&lt;/a&gt;&lt;/b&gt; (🥉7 · ⭐ 110 · 💀) - Python package to generate stock portfolios. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Time Series Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for forecasting, anomaly detection, feature extraction, and machine learning on time-series and sequential data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alan-turing-institute/sktime&#34;&gt;sktime&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 5.3K) - A unified framework for machine learning with time series. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alan-turing-institute/sktime&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 850 · 📥 76 · 📦 440 · 📋 1.2K - 35% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alan-turing-institute/sktime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sktime&#34;&gt;PyPi&lt;/a&gt; (📥 160K / month · 📦 23 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sktime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sktime-all-extras&#34;&gt;Conda&lt;/a&gt; (📥 4K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sktime-all-extras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebook/prophet&#34;&gt;Prophet&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 14K · 📈) - Tool for producing high quality forecasts for time series data that.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/prophet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 4.2K · 📥 650 · 📋 1.8K - 11% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebook/prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fbprophet&#34;&gt;PyPi&lt;/a&gt; (📥 1.4M / month · 📦 130 · ⏱️ 05.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fbprophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prophet&#34;&gt;Conda&lt;/a&gt; (📥 47K · ⏱️ 23.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alkaline-ml/pmdarima&#34;&gt;pmdarima&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 1.2K) - A statistical library designed to fill the void in Pythons time series.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alkaline-ml/pmdarima&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 210 · 📦 2.1K · 📋 280 - 9% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alkaline-ml/pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pmdarima&#34;&gt;PyPi&lt;/a&gt; (📥 1.2M / month · 📦 51 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pmdarima&#34;&gt;Conda&lt;/a&gt; (📥 39K · ⏱️ 24.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pmdarima&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ourownstory/neural_prophet&#34;&gt;NeuralProphet&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.3K) - NeuralProphet: A simple forecasting package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ourownstory/neural_prophet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 280 · 📦 82 · 📋 270 - 26% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ourownstory/neural_prophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuralprophet&#34;&gt;PyPi&lt;/a&gt; (📥 73K / month · ⏱️ 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuralprophet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tslearn-team/tslearn&#34;&gt;tslearn&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.1K) - A machine learning toolkit dedicated to time-series data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tslearn-team/tslearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 270 · 📦 490 · 📋 270 - 32% open · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tslearn-team/tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tslearn&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 19 · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tslearn&#34;&gt;Conda&lt;/a&gt; (📥 250K · ⏱️ 15.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tslearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jdb78/pytorch-forecasting&#34;&gt;pytorch-forecasting&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2K) - Time series forecasting with PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jdb78/pytorch-forecasting&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 320 · 📋 470 - 46% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jdb78/pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-forecasting&#34;&gt;PyPi&lt;/a&gt; (📥 62K / month · 📦 4 · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-forecasting&#34;&gt;Conda&lt;/a&gt; (📥 19K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-forecasting&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/blue-yonder/tsfresh&#34;&gt;tsfresh&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 6.4K) - Automatic extraction of relevant features from time series:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/blue-yonder/tsfresh&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 82 · 🔀 970 · 📋 480 - 8% open · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/blue-yonder/tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tsfresh&#34;&gt;PyPi&lt;/a&gt; (📥 410K / month · 📦 55 · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tsfresh&#34;&gt;Conda&lt;/a&gt; (📥 170K · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tsfresh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/unit8co/darts&#34;&gt;Darts&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4.1K · 📉) - A python library for easy manipulation and forecasting of time.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/unit8co/darts&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 53 · 🔀 410 · 📦 57 · 📋 460 - 35% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/unit8co/darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/u8darts&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 2 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install u8darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/u8darts-all&#34;&gt;Conda&lt;/a&gt; (📥 4.3K · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge u8darts-all&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/unit8/darts&#34;&gt;Docker Hub&lt;/a&gt; (📥 340 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull unit8/darts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TDAmeritrade/stumpy&#34;&gt;STUMPY&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.3K) - STUMPY is a powerful and scalable Python library for modern time series.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/TDAmeritrade/stumpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 220 · 📋 320 - 11% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/TDAmeritrade/stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stumpy&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 4 · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/stumpy&#34;&gt;Conda&lt;/a&gt; (📥 39K · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge stumpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/gluon-ts&#34;&gt;GluonTS&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.7K) - Probabilistic time series modeling in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/gluon-ts&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 86 · 🔀 560 · 📋 730 - 40% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/gluon-ts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gluonts&#34;&gt;PyPi&lt;/a&gt; (📥 85K / month · 📦 6 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gluonts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/gluonts&#34;&gt;Conda&lt;/a&gt; (📥 34 · ⏱️ 14.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda gluonts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/johannfaouzi/pyts&#34;&gt;pyts&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 1.3K) - A Python package for time series classification. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/johannfaouzi/pyts&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 130 · 📦 200 · 📋 61 - 57% open · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/johannfaouzi/pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyts&#34;&gt;PyPi&lt;/a&gt; (📥 140K / month · 📦 11 · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyts&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-streamz/streamz&#34;&gt;Streamz&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.1K) - Real-time stream processing for python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/python-streamz/streamz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 45 · 🔀 130 · 📦 290 · 📋 250 - 41% open · ⏱️ 24.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/python-streamz/streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamz&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 29 · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/streamz&#34;&gt;Conda&lt;/a&gt; (📥 300K · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge streamz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast&#34;&gt;StatsForecast&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 670 · 🐣) - Lightning fast forecasting with statistical and econometric.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Nixtla/statsforecast&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 41 · 📋 40 - 32% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Nixtla/statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/statsforecast&#34;&gt;PyPi&lt;/a&gt; (📥 47K / month · 📦 3 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/statsforecast&#34;&gt;Conda&lt;/a&gt; (📥 4.3K · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge statsforecast&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/linkedin/greykite&#34;&gt;greykite&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.5K) - A flexible, intuitive and fast forecasting library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/linkedin/greykite&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 68 · 📦 9 · 📋 61 - 14% open · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/linkedin/greykite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/greykite&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install greykite&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fraunhoferportugal/tsfel&#34;&gt;TSFEL&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 500) - An intuitive library to extract features from time series. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fraunhoferportugal/tsfel&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 65 · 📦 36 · 📋 50 - 14% open · ⏱️ 16.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fraunhoferportugal/tsfel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tsfel&#34;&gt;PyPi&lt;/a&gt; (📥 4.6K / month · ⏱️ 14.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tsfel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_TS&#34;&gt;Auto TS&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 430) - Automatically build ARIMA, SARIMAX, VAR, FB Prophet and XGBoost.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_TS&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 80 · 📋 72 - 13% open · ⏱️ 13.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/Auto_TS&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-ts&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-ts&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/firmai/atspy&#34;&gt;atspy&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 440) - AtsPy: Automated Time Series Models in Python (by @firmai). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/firmai/atspy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 85 · 📦 6 · 📋 20 - 90% open · ⏱️ 18.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/firmai/atspy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/atspy&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · ⏱️ 24.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install atspy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 9 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RJT1990/pyflux&#34;&gt;PyFlux&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 2K · 💀) - Open source time series library for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/linkedin/luminol&#34;&gt;luminol&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1K · 💀) - Anomaly Detection and Correlation library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dmbee/seglearn&#34;&gt;seglearn&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 520 · 💀) - Python module for machine learning time series:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/X-DataInitiative/tick&#34;&gt;tick&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 380 · 💀) - Module for statistical learning, with a particular emphasis on time-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Nixtla/neuralforecast&#34;&gt;NeuralForecast&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 610) - Scalable and user friendly neural forecasting algorithms.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wwrechard/pydlm&#34;&gt;pydlm&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 420 · 💀) - A python library for Bayesian time series modeling. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arundo/adtk&#34;&gt;ADTK&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 820 · 💀) - A Python toolkit for rule-based/unsupervised anomaly detection in time.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/target/matrixprofile-ts&#34;&gt;matrixprofile-ts&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 680 · 💀) - A Python library for detecting patterns and anomalies.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arundo/tsaug&#34;&gt;tsaug&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 240 · 💀) - A Python package for time series augmentation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Medical Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing and analyzing medical data such as MRIs, EEGs, genomic data, and other medical imaging formats.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mne-tools/mne-python&#34;&gt;MNE&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 1.9K) - MNE: Magnetoencephalography (MEG) and Electroencephalography (EEG) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mne-tools/mne-python&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 290 · 🔀 1K · 📦 1.6K · 📋 4.1K - 9% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mne-tools/mne-python&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mne&#34;&gt;PyPi&lt;/a&gt; (📥 51K / month · 📦 210 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mne&#34;&gt;Conda&lt;/a&gt; (📥 200K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mne&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nilearn/nilearn&#34;&gt;Nilearn&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 860) - Machine learning for NeuroImaging in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nilearn/nilearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 180 · 🔀 460 · 📥 58 · 📦 1.5K · 📋 1.6K - 17% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nilearn/nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nilearn&#34;&gt;PyPi&lt;/a&gt; (📥 21K / month · 📦 240 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nilearn&#34;&gt;Conda&lt;/a&gt; (📥 150K · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nilearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nipype&#34;&gt;NIPYPE&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 630 · 📉) - Workflows and interfaces for neuroimaging packages. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nipy/nipype&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 240 · 🔀 490 · 📦 930 · 📋 1.3K - 29% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nipy/nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nipype&#34;&gt;PyPi&lt;/a&gt; (📥 51K / month · 📦 160 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nipype&#34;&gt;Conda&lt;/a&gt; (📥 470K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nipype&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAI&#34;&gt;MONAI&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 3K) - AI Toolkit for Healthcare Imaging. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAI&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 96 · 🔀 590 · 📦 320 · 📋 1.7K - 12% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Project-MONAI/MONAI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/monai&#34;&gt;PyPi&lt;/a&gt; (📥 50K / month · 📦 17 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install monai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/monai&#34;&gt;Conda&lt;/a&gt; (📥 670 · ⏱️ 09.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge monai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/CamDavidsonPilon/lifelines&#34;&gt;Lifelines&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.9K) - Survival analysis in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/CamDavidsonPilon/lifelines&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 470 · 📦 890 · 📋 860 - 26% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/CamDavidsonPilon/lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lifelines&#34;&gt;PyPi&lt;/a&gt; (📥 330K / month · 📦 110 · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lifelines&#34;&gt;Conda&lt;/a&gt; (📥 190K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lifelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hail-is/hail&#34;&gt;Hail&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 800) - Scalable genomic data analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hail-is/hail&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 79 · 🔀 210 · 📦 68 · 📋 2K - 2% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hail-is/hail&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hail&#34;&gt;PyPi&lt;/a&gt; (📥 33K / month · 📦 11 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hail&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nibabel&#34;&gt;NiBabel&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 470) - Python package to access a cacophony of neuro-imaging file formats. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nipy/nibabel&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 95 · 🔀 230 · 📦 7.2K · 📋 460 - 30% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nipy/nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nibabel&#34;&gt;PyPi&lt;/a&gt; (📥 180K / month · 📦 970 · ⏱️ 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nibabel&#34;&gt;Conda&lt;/a&gt; (📥 430K · ⏱️ 07.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nibabel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dipy/dipy&#34;&gt;DIPY&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 510) - DIPY is the paragon 3D/4D+ imaging library in Python. Contains generic.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dipy/dipy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 360 · 📦 560 · 📋 810 - 18% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dipy/dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dipy&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 80 · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dipy&#34;&gt;Conda&lt;/a&gt; (📥 300K · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/deepvariant&#34;&gt;DeepVariant&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.5K) - DeepVariant is an analysis pipeline that uses a deep neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/deepvariant&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 610 · 📥 3.9K · 📋 490 - 0% open · ⏱️ 28.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/deepvariant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/bioconda/deepvariant&#34;&gt;Conda&lt;/a&gt; (📥 41K · ⏱️ 16.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c bioconda deepvariant&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#34;&gt;Medical Detection Toolkit&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 1.1K) - The Medical Detection Toolkit contains 2D + 3D.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 290 · 📋 130 - 33% open · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MIC-DKFZ/medicaldetectiontoolkit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 9 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NifTK/NiftyNet&#34;&gt;NiftyNet&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.3K · 💀) - [unmaintained] An open-source convolutional neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nipy/nipy&#34;&gt;NIPY&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 320 · 💀) - Neuroimaging in Python FMRI analysis package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/projectglow/glow&#34;&gt;Glow&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 200) - An open-source toolkit for large-scale genomic analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DLTK/DLTK&#34;&gt;DLTK&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.3K · 💀) - Deep Learning Toolkit for Medical Image Analysis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/loli/medpy&#34;&gt;MedPy&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 410 · 💀) - Medical image processing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/brainiak/brainiak&#34;&gt;Brainiak&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 270 · 💤) - Brain Imaging Analysis Kit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/perone/medicaltorch&#34;&gt;MedicalTorch&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 780 · 💀) - A medical imaging framework for Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/QTIM-Lab/DeepNeuro&#34;&gt;DeepNeuro&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 110 · 💀) - A deep learning python package for neuroimaging data. Made by:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Tencent/MedicalNet&#34;&gt;MedicalNet&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 1.4K · 💀) - Many studies have shown that the performance on deep learning is.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tabular Data&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for processing tabular and structured data.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carefree0910/carefree-learn&#34;&gt;carefree-learn&lt;/a&gt;&lt;/b&gt; (🥈19 · ⭐ 360) - Deep Learning PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/carefree0910/carefree-learn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 33 · 📦 2 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/carefree0910/carefree-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/carefree-learn&#34;&gt;PyPi&lt;/a&gt; (📥 120 / month · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install carefree-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/manujosephv/pytorch_tabular&#34;&gt;pytorch_tabular&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 590) - A standard framework for modelling Deep Learning Models.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/manujosephv/pytorch_tabular&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 61 · 📋 60 - 26% open · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/manujosephv/pytorch_tabular&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch_tabular&#34;&gt;PyPi&lt;/a&gt; (📥 2K / month · 📦 1 · ⏱️ 01.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch_tabular&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/firmai/deltapy&#34;&gt;deltapy&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 430) - DeltaPy - Tabular Data Augmentation (by @firmai). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/firmai/deltapy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 43 · 📦 2 · 📋 3 - 66% open · ⏱️ 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/firmai/deltapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deltapy&#34;&gt;PyPi&lt;/a&gt; (📥 130 / month · ⏱️ 09.04.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deltapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 2 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AnotherSamWilson/miceforest&#34;&gt;miceforest&lt;/a&gt;&lt;/b&gt; (🥇22 · ⭐ 160) - Multiple Imputation with Random Forests in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/upgini/upgini&#34;&gt;upgini&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 28 · 🐣) - Low-code feature search library for supervised machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Optical Character Recognition&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for optical character recognition (OCR) and text extraction from images or videos.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;PaddleOCR&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 22K · 📈) - Awesome multilingual OCR toolkits based on PaddlePaddle.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleOCR&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 4.5K · 📦 650 · 📋 4.6K - 24% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleOCR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddleocr&#34;&gt;PyPi&lt;/a&gt; (📥 62K / month · 📦 6 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddleocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JaidedAI/EasyOCR&#34;&gt;EasyOCR&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 15K) - Ready-to-use OCR with 80+ supported languages and all popular writing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/JaidedAI/EasyOCR&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 98 · 🔀 2.1K · 📥 1.6M · 📦 1.2K · 📋 560 - 19% open · ⏱️ 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/JaidedAI/EasyOCR&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/easyocr&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 30 · ⏱️ 09.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install easyocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/madmaze/pytesseract&#34;&gt;Tesseract&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 4.2K) - Python-tesseract is an optical character recognition (OCR) tool.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/madmaze/pytesseract&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 41 · 🔀 600 · 📋 300 - 5% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/madmaze/pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytesseract&#34;&gt;PyPi&lt;/a&gt; (📥 590K / month · 📦 940 · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytesseract&#34;&gt;Conda&lt;/a&gt; (📥 500K · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytesseract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF&#34;&gt;OCRmyPDF&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 6.4K) - OCRmyPDF adds an OCR text layer to scanned PDF files, allowing them.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ocrmypdf/OCRmyPDF&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 67 · 🔀 570 · 📋 870 - 10% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ocrmypdf/OCRmyPDF&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ocrmypdf&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 12 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ocrmypdf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ocrmypdf&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ocrmypdf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sirfz/tesserocr&#34;&gt;tesserocr&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.6K) - A Python wrapper for the tesseract-ocr API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sirfz/tesserocr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 220 · 📦 660 · 📋 250 - 32% open · ⏱️ 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sirfz/tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tesserocr&#34;&gt;PyPi&lt;/a&gt; (📥 63K / month · 📦 67 · ⏱️ 19.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tesserocr&#34;&gt;Conda&lt;/a&gt; (📥 70K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tesserocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr&#34;&gt;MMOCR&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 2.5K) - OpenMMLab Text Detection, Recognition and Understanding Toolbox. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/open-mmlab/mmocr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 50 · 🔀 440 · 📦 12 · 📋 550 - 16% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/open-mmlab/mmocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmocr&#34;&gt;PyPi&lt;/a&gt; (📥 2.7K / month · 📦 1 · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/faustomorales/keras-ocr&#34;&gt;keras-ocr&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1K) - A packaged and flexible version of the CRAFT text detector and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/faustomorales/keras-ocr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 270 · 📥 260K · 📋 170 - 38% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/faustomorales/keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-ocr&#34;&gt;PyPi&lt;/a&gt; (📥 6.5K / month · 📦 2 · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/keras-ocr&#34;&gt;Conda&lt;/a&gt; (📥 43 · ⏱️ 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda keras-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Calamari-OCR/calamari&#34;&gt;calamari&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 920) - Line based ATR Engine based on OCRopy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Calamari-OCR/calamari&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 190 · 📋 250 - 19% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Calamari-OCR/calamari&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/calamari_ocr&#34;&gt;PyPi&lt;/a&gt; (📥 720 / month · 📦 2 · ⏱️ 13.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install calamari_ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/emedvedev/attention-ocr&#34;&gt;attention-ocr&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 910 · 💤) - A Tensorflow model for text recognition (CNN + seq2seq.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/emedvedev/attention-ocr&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 240 · 📦 19 · 📋 150 - 16% open · ⏱️ 29.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/emedvedev/attention-ocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aocr&#34;&gt;PyPi&lt;/a&gt; (📥 200 / month · ⏱️ 19.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aocr&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/WZBSocialScienceCenter/pdftabextract&#34;&gt;pdftabextract&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 2K) - A set of tools for extracting tables from PDF files helping to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/WZBSocialScienceCenter/pdftabextract&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2 · 🔀 340 · 📦 39 · 📋 21 - 14% open · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/WZBSocialScienceCenter/pdftabextract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pdftabextract&#34;&gt;PyPi&lt;/a&gt; (📥 560 / month · 📦 1 · ⏱️ 09.01.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pdftabextract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aashrafh/Mozart&#34;&gt;Mozart&lt;/a&gt;&lt;/b&gt; (🥉10 · ⭐ 370 · 💤) - An optical music recognition (OMR) system. Converts sheet.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aashrafh/Mozart&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 56 · 📋 11 - 27% open · ⏱️ 05.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aashrafh/Mozart&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jlsutherland/doc2text&#34;&gt;doc2text&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 1.3K · 💀) - Detect text blocks and OCR poorly scanned PDFs in bulk. Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Containers &amp;amp; Structures&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;General-purpose data containers &amp;amp; structures as well as utilities &amp;amp; extensions for pandas.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Loading &amp;amp; Extraction&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for loading, collecting, and extracting data from a variety of data sources and formats.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#data-loading--extraction&#34;&gt;best-of-python - Data Extraction&lt;/a&gt;&lt;/b&gt; ( ⭐ 2.2K) - Collection of data-loading and -extraction libraries.&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#data-containers--dataframes&#34;&gt;best-of-python - Data Containers&lt;/a&gt;&lt;/b&gt; ( ⭐ 2.2K) - Collection of data-container, dataframe, and pandas-..&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Web Scraping &amp;amp; Crawling&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for web scraping, crawling, downloading, and mining as well as libraries.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-web-python#web-scraping--crawling&#34;&gt;best-of-web-python - Web Scraping&lt;/a&gt;&lt;/b&gt; ( ⭐ 1.5K) - Collection of web-scraping and crawling libraries.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Data Pipelines &amp;amp; Streaming&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for data batch- and stream-processing, workflow automation, job scheduling, and other data pipeline tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/celery/celery&#34;&gt;Celery&lt;/a&gt;&lt;/b&gt; (🥇46 · ⭐ 19K) - Asynchronous task queue/job queue based on distributed message passing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/celery/celery&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.2K · 🔀 4.3K · 📦 70K · 📋 4.7K - 11% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/celery/celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/celery&#34;&gt;PyPi&lt;/a&gt; (📥 5.3M / month · 📦 15K · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/celery&#34;&gt;Conda&lt;/a&gt; (📥 840K · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge celery&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;Airflow&lt;/a&gt;&lt;/b&gt; (🥇45 · ⭐ 26K) - Platform to programmatically author, schedule, and monitor workflows. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/airflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2.4K · 🔀 11K · 📥 290K · 📋 5.7K - 16% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-airflow&#34;&gt;PyPi&lt;/a&gt; (📥 6.6M / month · 📦 470 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/airflow&#34;&gt;Conda&lt;/a&gt; (📥 610K · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/airflow&#34;&gt;Docker Hub&lt;/a&gt; (📥 73M · ⭐ 340 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull apache/airflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rq/rq&#34;&gt;rq&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 8.3K · 📈) - Simple job queues for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rq/rq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 260 · 🔀 1.3K · 📦 10K · 📋 960 - 18% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rq/rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rq&#34;&gt;PyPi&lt;/a&gt; (📥 570K / month · 📦 1.7K · ⏱️ 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/rq&#34;&gt;Conda&lt;/a&gt; (📥 71K · ⏱️ 30.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge rq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/beam&#34;&gt;Beam&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 5.5K) - Unified programming model to define and execute data processing.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/beam&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.3K · 🔀 3.5K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/beam&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apache-beam&#34;&gt;PyPi&lt;/a&gt; (📥 7.1M / month · 📦 150 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apache-beam&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/apache-beam-with-aws&#34;&gt;Conda&lt;/a&gt; (📥 9.2K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge apache-beam-with-aws&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;luigi&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 16K) - Luigi is a Python module that helps you build complex pipelines of batch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/spotify/luigi&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 590 · 🔀 2.3K · 📦 1.7K · 📋 970 - 10% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/spotify/luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/luigi&#34;&gt;PyPi&lt;/a&gt; (📥 580K / month · 📦 400 · ⏱️ 23.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/luigi&#34;&gt;Conda&lt;/a&gt; (📥 10K · 📦 2 · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda luigi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PrefectHQ/prefect&#34;&gt;Prefect&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 9.2K) - The easiest way to automate your data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PrefectHQ/prefect&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 330 · 🔀 900 · 📦 790 · 📋 2.3K - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PrefectHQ/prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/prefect&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 64 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prefect&#34;&gt;Conda&lt;/a&gt; (📥 260K · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prefect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations&#34;&gt;Great Expectations&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 6.6K) - Always know what to expect from your data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/great-expectations/great_expectations&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 290 · 🔀 950 · 📋 1.3K - 15% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/great-expectations/great_expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/great_expectations&#34;&gt;PyPi&lt;/a&gt; (📥 6.4M / month · 📦 32 · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install great_expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/great-expectations&#34;&gt;Conda&lt;/a&gt; (📥 380K · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge great-expectations&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;Dagster&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 4.8K) - An orchestration platform for the development, production, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dagster-io/dagster&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 210 · 🔀 600 · 📦 380 · 📋 4.1K - 23% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dagster-io/dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dagster&#34;&gt;PyPi&lt;/a&gt; (📥 280K / month · 📦 88 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dagster&#34;&gt;Conda&lt;/a&gt; (📥 510K · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dagster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/joblib/joblib&#34;&gt;joblib&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 2.8K · 📉) - Computing with Python functions. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/joblib/joblib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 320 · 📦 190K · 📋 730 - 45% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/joblib/joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/joblib&#34;&gt;PyPi&lt;/a&gt; (📥 25M / month · 📦 4.9K · ⏱️ 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/joblib&#34;&gt;Conda&lt;/a&gt; (📥 8.9M · ⏱️ 07.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge joblib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dbt-labs/dbt-core&#34;&gt;dbt&lt;/a&gt;&lt;/b&gt; (🥈36 · ⭐ 4.9K) - dbt enables data analysts and engineers to transform their data using the.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dbt-labs/dbt-core&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 220 · 🔀 900 · 📥 360 · 📦 470 · 📋 2.8K - 12% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dbt-labs/dbt-core&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dbt&#34;&gt;PyPi&lt;/a&gt; (📥 1.5M / month · 📦 30 · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dbt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dbt&#34;&gt;Conda&lt;/a&gt; (📥 200K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dbt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kedro-org/kedro&#34;&gt;Kedro&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 7.2K) - A Python framework for creating reproducible, maintainable and modular.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kedro-org/kedro&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 660 · 📦 870 · 📋 770 - 14% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kedro-org/kedro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kedro&#34;&gt;PyPi&lt;/a&gt; (📥 320K / month · 📦 38 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kedro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/activeloopai/Hub&#34;&gt;Activeloop&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.5K) - Dataset format for AI. Build, manage, query &amp;amp; visualize datasets.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3postzC&#34;&gt;MPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/activeloopai/Hub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 97 · 🔀 380 · 📋 370 - 14% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/activeloopai/Hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hub&#34;&gt;PyPi&lt;/a&gt; (📥 5.6K / month · 📦 53 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/coleifer/huey&#34;&gt;huey&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4K) - a little task queue for python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/coleifer/huey&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 330 · 📦 930 · 📋 510 - 0% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/coleifer/huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/huey&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 160 · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/huey&#34;&gt;Conda&lt;/a&gt; (📥 24K · ⏱️ 16.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge huey&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ploomber/ploomber&#34;&gt;ploomber&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.4K) - The fastest way to build data pipelines. Develop iteratively,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ploomber/ploomber&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 160 · 📦 42 · 📋 700 - 27% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ploomber/ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ploomber&#34;&gt;PyPi&lt;/a&gt; (📥 4.2K / month · 📦 5 · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ploomber&#34;&gt;Conda&lt;/a&gt; (📥 7.4K · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ploomber&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tfx&#34;&gt;TFX&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.8K) - TFX is an end-to-end platform for deploying production ML pipelines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tfx&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 580 · 📋 770 - 32% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tfx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tfx&#34;&gt;PyPi&lt;/a&gt; (📥 360K / month · 📦 12 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tfx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/combust/mleap&#34;&gt;mleap&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.4K) - MLeap: Deploy ML Pipelines to Production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/combust/mleap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 73 · 🔀 300 · 📦 180 · 📋 440 - 20% open · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/combust/mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mleap&#34;&gt;PyPi&lt;/a&gt; (📥 230K / month · 📦 26 · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mleap&#34;&gt;Conda&lt;/a&gt; (📥 47K · ⏱️ 05.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mleap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/petl-developers/petl&#34;&gt;petl&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1K) - Python Extract Transform and Load Tables of Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/petl-developers/petl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 54 · 🔀 170 · 📦 720 · 📋 440 - 17% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/petl-developers/petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/petl&#34;&gt;PyPi&lt;/a&gt; (📥 190K / month · 📦 74 · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/petl&#34;&gt;Conda&lt;/a&gt; (📥 76K · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge petl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/zenml-io/zenml&#34;&gt;zenml&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2K) - ZenML : Build portable, production-ready MLOps pipelines... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/zenml-io/zenml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 160 · 📋 86 - 24% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/zenml-io/zenml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/zenml&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install zenml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hi-primus/optimus&#34;&gt;Optimus&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.2K) - Agile Data Preparation Workflows madeeasy with Pandas, Dask,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hi-primus/optimus&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 210 · 📋 230 - 13% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hi-primus/optimus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/optimuspyspark&#34;&gt;PyPi&lt;/a&gt; (📥 47K / month · ⏱️ 30.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install optimuspyspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EntilZha/PyFunctional&#34;&gt;PyFunctional&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2K) - Python library for creating data pipelines with chain functional.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/EntilZha/PyFunctional&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 120 · 📦 440 · 📋 130 - 6% open · ⏱️ 05.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/EntilZha/PyFunctional&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyfunctional&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 15 · ⏱️ 12.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyfunctional&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Parsely/streamparse&#34;&gt;streamparse&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.5K) - Run Python in Apache Storm topologies. Pythonic API, CLI.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Parsely/streamparse&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 42 · 🔀 220 · 📦 54 · 📋 330 - 21% open · ⏱️ 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Parsely/streamparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamparse&#34;&gt;PyPi&lt;/a&gt; (📥 3.8K / month · 📦 27 · ⏱️ 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/samuelcolvin/arq&#34;&gt;arq&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.2K) - Fast job queuing and RPC in python with asyncio and redis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/samuelcolvin/arq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 100 · 📦 230 · 📋 140 - 26% open · ⏱️ 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/samuelcolvin/arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arq&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 11 · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/arq&#34;&gt;Conda&lt;/a&gt; (📥 2.2K · ⏱️ 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge arq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/whylabs/whylogs&#34;&gt;whylogs&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.1K) - Open standard for end-to-end data and ML monitoring for any scale in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/whylabs/whylogs&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 56 · 📥 50 · 📋 160 - 39% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/whylabs/whylogs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/whylogs&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 2 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install whylogs&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/closeio/tasktiger&#34;&gt;TaskTiger&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.1K) - Python task queue using Redis. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/closeio/tasktiger&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 62 · 📦 22 · 📋 68 - 48% open · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/closeio/tasktiger&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tasktiger&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 10 · ⏱️ 02.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tasktiger&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cgarciae/pypeln&#34;&gt;Pypeline&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.3K) - Concurrent data pipelines in Python . &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cgarciae/pypeln&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 80 · 📋 58 - 25% open · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cgarciae/pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pypeln&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 9 · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pypeln&#34;&gt;Conda&lt;/a&gt; (📥 6.5K · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pypeln&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pdpipe/pdpipe&#34;&gt;pdpipe&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 670) - Easy pipelines for pandas DataFrames. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pdpipe/pdpipe&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 34 · 📦 40 · 📋 45 - 28% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pdpipe/pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pdpipe&#34;&gt;PyPi&lt;/a&gt; (📥 1.8K / month · 📦 5 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pdpipe&#34;&gt;Conda&lt;/a&gt; (📥 4.3K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pdpipe&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databricks/spark-deep-learning&#34;&gt;spark-deep-learning&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 1.9K) - Deep Learning Pipelines for Apache Spark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/databricks/spark-deep-learning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 460 · 📦 21 · 📋 100 - 74% open · ⏱️ 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/databricks/spark-deep-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nerevu/riko&#34;&gt;riko&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1.6K) - A Python stream processing engine modeled after Yahoo! Pipes. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nerevu/riko&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 75 · 📋 30 - 73% open · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nerevu/riko&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/riko&#34;&gt;PyPi&lt;/a&gt; (📥 140 / month · 📦 1 · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install riko&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/d6t/d6tflow&#34;&gt;Databolt Flow&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 940 · 💤) - Python library for building highly effective data science.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/d6t/d6tflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 70 · 📦 20 · 📋 23 - 43% open · ⏱️ 28.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/d6t/d6tflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/d6tflow&#34;&gt;PyPi&lt;/a&gt; (📥 360 / month · ⏱️ 06.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install d6tflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mara/mara-pipelines&#34;&gt;Mara Pipelines&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 1.9K) - A lightweight opinionated ETL framework, halfway between plain.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mara/mara-pipelines&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 89 · 📦 9 · 📋 27 - 48% open · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mara/mara-pipelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mara-pipelines&#34;&gt;PyPi&lt;/a&gt; (📥 270 / month · ⏱️ 23.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mara-pipelines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kubeflow-kale/kale&#34;&gt;kale&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 530 · 💤) - Kubeflows superfood for Data Scientists. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kubeflow-kale/kale&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 110 · 📋 160 - 52% open · ⏱️ 20.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kubeflow-kale/kale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kubeflow-kale&#34;&gt;PyPi&lt;/a&gt; (📥 990 / month · ⏱️ 19.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kubeflow-kale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 12 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Yelp/mrjob&#34;&gt;mrjob&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.6K · 💀) - Run MapReduce jobs on Hadoop or Amazon Web Services. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/robinhood/faust&#34;&gt;faust&lt;/a&gt;&lt;/b&gt; (🥉30 · ⭐ 6.2K · 💀) - Python Stream Processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databand-ai/dbnd&#34;&gt;dbnd&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 220) - DBND is an agile pipeline framework that helps data engineering teams.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/python-bonobo/bonobo&#34;&gt;bonobo&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.5K · 💀) - Extract Transform Load for Python 3.5+. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/douban/dpark&#34;&gt;dpark&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.7K · 💀) - Python clone of Spark, a MapReduce alike framework in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/svenkreiss/pysparkling&#34;&gt;pysparkling&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 250 · 💀) - A pure Python implementation of Apache Sparks RDD and DStream.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pricingassistant/mrq&#34;&gt;mrq&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 870 · 💀) - Mr. Queue - A distributed worker task queue in Python using Redis &amp;amp; gevent. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bodywork-ml/bodywork-core&#34;&gt;bodywork-core&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 340) - ML pipeline orchestration and model deployments on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/analysiscenter/batchflow&#34;&gt;BatchFlow&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 180) - BatchFlow helps you conveniently work with random or sequential.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/olirice/flupy&#34;&gt;flupy&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 170) - Fluent data pipelines for python and your shell. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kkyon/botflow&#34;&gt;Botflow&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 1.2K · 💀) - Python Fast Dataflow programming framework for Data pipeline work(.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vincentclaes/datajob&#34;&gt;datajob&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 91) - Build and deploy a serverless data pipeline on AWS with no effort. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Distributed Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that provide capabilities to distribute and parallelize machine learning tasks across large-scale compute infrastructure.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;Ray&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 21K) - An open source framework that provides a simple, universal API for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ray-project/ray&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 690 · 🔀 3.6K · 📦 4.9K · 📋 10K - 22% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ray-project/ray&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ray&#34;&gt;PyPi&lt;/a&gt; (📥 1.2M / month · 📦 270 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ray&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ray-tune&#34;&gt;Conda&lt;/a&gt; (📥 30K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ray-tune&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/dask&#34;&gt;dask&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 9.9K) - Parallel computing with task scheduling. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/dask&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 530 · 🔀 1.5K · 📦 37K · 📋 4.4K - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dask&#34;&gt;PyPi&lt;/a&gt; (📥 6.1M / month · 📦 2.6K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dask&#34;&gt;Conda&lt;/a&gt; (📥 5.6M · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dask&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/distributed&#34;&gt;dask.distributed&lt;/a&gt;&lt;/b&gt; (🥇41 · ⭐ 1.4K) - A distributed task scheduler for Dask. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/distributed&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 270 · 🔀 620 · 📦 24K · 📋 2.9K - 38% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/distributed&#34;&gt;PyPi&lt;/a&gt; (📥 5M / month · 📦 1.2K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/distributed&#34;&gt;Conda&lt;/a&gt; (📥 6.9M · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge distributed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/horovod/horovod&#34;&gt;horovod&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 12K) - Distributed training framework for TensorFlow, Keras, PyTorch, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/horovod/horovod&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 2K · 📦 590 · 📋 2K - 15% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/horovod/horovod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/horovod&#34;&gt;PyPi&lt;/a&gt; (📥 65K / month · 📦 30 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install horovod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/h2oai/h2o-3&#34;&gt;H2O-3&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 5.8K) - H2O is an Open Source, Distributed, Fast &amp;amp; Scalable Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/h2oai/h2o-3&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 220 · 🔀 1.9K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/h2oai/h2o-3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/h2o&#34;&gt;PyPi&lt;/a&gt; (📥 400K / month · 📦 75 · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install h2o&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/DeepSpeed&#34;&gt;DeepSpeed&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 6.8K) - DeepSpeed is a deep learning optimization library that makes.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/DeepSpeed&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 800 · 📦 260 · 📋 920 - 51% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/DeepSpeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepspeed&#34;&gt;PyPi&lt;/a&gt; (📥 120K / month · 📦 10 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepspeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/deepspeed/deepspeed&#34;&gt;Docker Hub&lt;/a&gt; (📥 14K · ⭐ 3 · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull deepspeed/deepspeed&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intel-analytics/BigDL&#34;&gt;BigDL&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 3.9K) - Building Large-Scale AI Applications for Distributed Big Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/intel-analytics/BigDL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 990 · 📦 36 · 📋 1.3K - 35% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/intel-analytics/BigDL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bigdl&#34;&gt;PyPi&lt;/a&gt; (📥 5.8K / month · 📦 1 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bigdl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://search.maven.org/artifact/com.intel.analytics.bigdl/bigdl-SPARK_2.4&#34;&gt;Maven&lt;/a&gt; (📦 4 · ⏱️ 20.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; &amp;lt;dependency&amp;gt;&#xA; &#x9;&amp;lt;groupId&amp;gt;com.intel.analytics.bigdl&amp;lt;/groupId&amp;gt;&#xA; &#x9;&amp;lt;artifactId&amp;gt;bigdl-SPARK_2.4&amp;lt;/artifactId&amp;gt;&#xA; &#x9;&amp;lt;version&amp;gt;[VERSION]&amp;lt;/version&amp;gt;&#xA; &amp;lt;/dependency&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ipython/ipyparallel&#34;&gt;ipyparallel&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.2K) - IPython Parallel: Interactive Parallel Computing in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ipython/ipyparallel&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 890 · 📋 330 - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ipython/ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ipyparallel&#34;&gt;PyPi&lt;/a&gt; (📥 48K / month · 📦 290 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ipyparallel&#34;&gt;Conda&lt;/a&gt; (📥 610K · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ipyparallel&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairscale&#34;&gt;FairScale&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.7K) - PyTorch extensions for high performance and large scale training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/fairscale&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 180 · 📦 290 · 📋 310 - 21% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairscale&#34;&gt;PyPi&lt;/a&gt; (📥 150K / month · 📦 15 · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairscale&#34;&gt;Conda&lt;/a&gt; (📥 18K · ⏱️ 22.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairscale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/metrics&#34;&gt;metrics&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 860) - Machine learning metrics for distributed, scalable PyTorch.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/metrics&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 180 · 📥 660 · 📦 3K · 📋 370 - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/metrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metrics&#34;&gt;PyPi&lt;/a&gt; (📥 3.2K / month · 📦 14 · ⏱️ 28.04.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchmetrics&#34;&gt;Conda&lt;/a&gt; (📥 350K · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dask/dask-ml&#34;&gt;dask-ml&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 800) - Scalable Machine Learning with Dask. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dask/dask-ml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 73 · 🔀 220 · 📦 620 · 📋 470 - 48% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dask/dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dask-ml&#34;&gt;PyPi&lt;/a&gt; (📥 86K / month · 📦 55 · ⏱️ 22.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dask-ml&#34;&gt;Conda&lt;/a&gt; (📥 320K · ⏱️ 22.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dask-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yahoo/TensorFlowOnSpark&#34;&gt;TensorFlowOnSpark&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.8K) - TensorFlowOnSpark brings TensorFlow programs to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yahoo/TensorFlowOnSpark&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 34 · 🔀 970 · 📋 360 - 1% open · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yahoo/TensorFlowOnSpark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflowonspark&#34;&gt;PyPi&lt;/a&gt; (📥 550K / month · 📦 5 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflowonspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflowonspark&#34;&gt;Conda&lt;/a&gt; (📥 10K · ⏱️ 27.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflowonspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;SynapseML&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.3K) - Simple and Distributed Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 92 · 🔀 670 · 📋 580 - 42% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/SynapseML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/synapseml&#34;&gt;PyPi&lt;/a&gt; (📥 32K / month · 📦 1 · ⏱️ 12.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install synapseml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/petastorm&#34;&gt;petastorm&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.4K) - Petastorm library enables single machine or distributed training.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/petastorm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 240 · 📥 310 · 📦 70 · 📋 280 - 50% open · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/petastorm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/petastorm&#34;&gt;PyPi&lt;/a&gt; (📥 86K / month · 📦 6 · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install petastorm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maxpumperla/elephas&#34;&gt;Elephas&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.5K) - Distributed Deep learning with Keras &amp;amp; Spark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;keras&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/maxpumperla/elephas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 300 · 📦 56 · 📋 160 - 11% open · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/maxpumperla/elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/elephas&#34;&gt;PyPi&lt;/a&gt; (📥 92K / month · 📦 3 · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/elephas&#34;&gt;Conda&lt;/a&gt; (📥 8.1K · ⏱️ 02.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge elephas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/mesh&#34;&gt;Mesh&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.3K) - Mesh TensorFlow: Model Parallelism Made Easier. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/mesh&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 220 · 📦 680 · 📋 110 - 87% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/mesh&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mesh-tensorflow&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 32 · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mesh-tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mpi4py/mpi4py&#34;&gt;mpi4py&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 540) - Python bindings for MPI. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mpi4py/mpi4py&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 77 · 📥 4.8K · 📋 77 - 16% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mpi4py/mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mpi4py&#34;&gt;PyPi&lt;/a&gt; (📥 180K / month · 📦 580 · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mpi4py&#34;&gt;Conda&lt;/a&gt; (📥 1.1M · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mpi4py&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intel-analytics/analytics-zoo&#34;&gt;analytics-zoo&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.5K) - Distributed Tensorflow, Keras and PyTorch on Apache.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/intel-analytics/analytics-zoo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 710 · 📦 3 · 📋 1.4K - 39% open · ⏱️ 29.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/intel-analytics/analytics-zoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/analytics-zoo&#34;&gt;PyPi&lt;/a&gt; (📥 4K / month · 📦 1 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install analytics-zoo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;MMLSpark&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.3K) - Simple and Distributed Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/SynapseML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 92 · 🔀 670 · 📋 580 - 42% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/SynapseML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mmlspark&#34;&gt;PyPi&lt;/a&gt; (📥 3 / month · ⏱️ 18.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mmlspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apache/singa&#34;&gt;Apache Singa&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 2.6K) - a distributed deep learning platform. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apache/singa&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 79 · 🔀 790 · 📦 1 · 📋 97 - 41% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apache/singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/nusdbsystem/singa&#34;&gt;Conda&lt;/a&gt; (📥 460 · ⏱️ 09.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c nusdbsystem singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/apache/singa&#34;&gt;Docker Hub&lt;/a&gt; (📥 280 · ⭐ 4 · ⏱️ 04.06.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull apache/singa&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookincubator/submitit&#34;&gt;Submit it&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 620) - Python 3.6+ toolbox for submitting jobs to Slurm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookincubator/submitit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 63 · 📋 66 - 31% open · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookincubator/submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/submitit&#34;&gt;PyPi&lt;/a&gt; (📥 21K / month · 📦 6 · ⏱️ 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/submitit&#34;&gt;Conda&lt;/a&gt; (📥 6K · ⏱️ 10.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge submitit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/learning-at-home/hivemind&#34;&gt;Hivemind&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1K) - Decentralized deep learning in PyTorch. Built to train models on thousands.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/learning-at-home/hivemind&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 61 · 📦 7 · 📋 120 - 35% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/learning-at-home/hivemind&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hivemind&#34;&gt;PyPi&lt;/a&gt; (📥 4.1K / month · 📦 1 · ⏱️ 20.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hivemind&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bytedance/byteps&#34;&gt;BytePS&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 3.2K) - A high performance and generic framework for distributed DNN training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bytedance/byteps&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 450 · 📋 260 - 38% open · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bytedance/byteps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/byteps&#34;&gt;PyPi&lt;/a&gt; (📥 56 / month · ⏱️ 02.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install byteps&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/bytepsimage/tensorflow&#34;&gt;Docker Hub&lt;/a&gt; (📥 1.3K · ⏱️ 03.03.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull bytepsimage/tensorflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kingoflolz/mesh-transformer-jax&#34;&gt;mesh-transformer-jax&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 4.1K) - Model parallel transformers in JAX and Haiku. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kingoflolz/mesh-transformer-jax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 530 · 📋 170 - 12% open · ⏱️ 28.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kingoflolz/mesh-transformer-jax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tunib-ai/parallelformers&#34;&gt;parallelformers&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 460) - Parallelformers: An Efficient Model Parallelization.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tunib-ai/parallelformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 28 · 📦 7 · 📋 18 - 38% open · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tunib-ai/parallelformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parallelformers&#34;&gt;PyPi&lt;/a&gt; (📥 190 / month · ⏱️ 29.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parallelformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DEAP/deap&#34;&gt;DEAP&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.7K) - Distributed Evolutionary Algorithms in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/launchpad&#34;&gt;launchpad&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 270) - Launchpad is a library that simplifies writing distributed.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/databricks/tensorframes&#34;&gt;TensorFrames&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 760 · 💀) - [DEPRECATED] Tensorflow wrapper for DataFrames on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Ibotta/sk-dist&#34;&gt;sk-dist&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 280 · 💤) - Distributed scikit-learn meta-estimators in PySpark. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/peterwittek/somoclu&#34;&gt;somoclu&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 240 · 💤) - Massively parallel self-organizing maps: accelerate training on.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/fiber&#34;&gt;Fiber&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 970 · 💀) - Distributed Computing for AI Made Simple. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/lazycluster&#34;&gt;LazyCluster&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 43 · 💤) - Distributed machine learning made simple. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/petuum/autodist&#34;&gt;autodist&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 120 · 💀) - Simple Distributed Deep Learning on TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Hyperparameter Optimization &amp;amp; AutoML&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for hyperparameter optimization, automl and neural architecture search.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/optuna/optuna&#34;&gt;Optuna&lt;/a&gt;&lt;/b&gt; (🥇39 · ⭐ 6.4K · 📈) - A hyperparameter optimization framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/optuna/optuna&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 200 · 🔀 700 · 📦 3.3K · 📋 1.2K - 11% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/optuna/optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/optuna&#34;&gt;PyPi&lt;/a&gt; (📥 3.5M / month · 📦 200 · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/optuna&#34;&gt;Conda&lt;/a&gt; (📥 280K · ⏱️ 04.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge optuna&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/nni&#34;&gt;NNI&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 11K) - An open source AutoML toolkit for automate machine learning lifecycle,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/nni&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 170 · 🔀 1.6K · 📦 230 · 📋 1.6K - 18% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/nni&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nni&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 30 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nni&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/autokeras&#34;&gt;AutoKeras&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 8.5K) - AutoML library for deep learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/autokeras&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 1.4K · 📥 4.4K · 📦 320 · 📋 820 - 10% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/autokeras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autokeras&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · 📦 10 · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autokeras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/auto-sklearn&#34;&gt;auto-sklearn&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 6.3K) - Automated Machine Learning with scikit-learn. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/automl/auto-sklearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 79 · 🔀 1.2K · 📥 35 · 📦 290 · 📋 890 - 12% open · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/automl/auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/auto-sklearn&#34;&gt;PyPi&lt;/a&gt; (📥 38K / month · 📦 30 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/auto-sklearn&#34;&gt;Conda&lt;/a&gt; (📥 4.5K · ⏱️ 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge auto-sklearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hyperopt/hyperopt&#34;&gt;Hyperopt&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 6.2K) - Distributed Asynchronous Hyperparameter Optimization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hyperopt/hyperopt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 93 · 🔀 970 · 📦 6.6K · 📋 610 - 61% open · ⏱️ 29.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hyperopt/hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperopt&#34;&gt;PyPi&lt;/a&gt; (📥 2.1M / month · 📦 420 · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hyperopt&#34;&gt;Conda&lt;/a&gt; (📥 410K · ⏱️ 30.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hyperopt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras-tuner&#34;&gt;Keras Tuner&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 2.5K) - Hyperparameter tuning for humans. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras-tuner&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 330 · 📦 1.4K · 📋 390 - 44% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-tuner&#34;&gt;PyPi&lt;/a&gt; (📥 650K / month · 📦 41 · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras-tuner&#34;&gt;Conda&lt;/a&gt; (📥 6.4K · ⏱️ 12.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras-tuner&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/botorch&#34;&gt;BoTorch&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 2.3K) - Bayesian optimization in PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/botorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 74 · 🔀 260 · 📦 250 · 📋 260 - 23% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/botorch&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 13 · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/botorch&#34;&gt;Conda&lt;/a&gt; (📥 25K · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge botorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alteryx/featuretools&#34;&gt;featuretools&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 6.2K) - An open source python library for automated feature engineering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/alteryx/featuretools&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 65 · 🔀 810 · 📋 800 - 20% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/alteryx/featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/featuretools&#34;&gt;PyPi&lt;/a&gt; (📥 130K / month · 📦 63 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/featuretools&#34;&gt;Conda&lt;/a&gt; (📥 85K · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge featuretools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebook/Ax&#34;&gt;Ax&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 1.8K) - Adaptive Experimentation Platform. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebook/Ax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 200 · 📦 280 · 📋 420 - 11% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebook/Ax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ax-platform&#34;&gt;PyPi&lt;/a&gt; (📥 150K / month · 📦 15 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ax-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ax-platform&#34;&gt;Conda&lt;/a&gt; (📥 1.3K · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ax-platform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/autogluon&#34;&gt;AutoGluon&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 4.5K) - AutoGluon: AutoML for Image, Text, and Tabular Data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/awslabs/autogluon&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 72 · 🔀 590 · 📦 120 · 📋 690 - 22% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/awslabs/autogluon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autogluon&#34;&gt;PyPi&lt;/a&gt; (📥 67K / month · 📦 4 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autogluon&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/nevergrad&#34;&gt;nevergrad&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 3.3K) - A Python toolbox for performing gradient-free optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/nevergrad&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 310 · 📦 330 · 📋 260 - 41% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nevergrad&#34;&gt;PyPi&lt;/a&gt; (📥 41K / month · 📦 18 · ⏱️ 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nevergrad&#34;&gt;Conda&lt;/a&gt; (📥 26K · ⏱️ 14.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nevergrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-optimize/scikit-optimize&#34;&gt;scikit-optimize&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.3K · 💤) - Sequential model-based optimization with a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-optimize/scikit-optimize&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 76 · 🔀 420 · 📦 2.7K · 📋 620 - 37% open · ⏱️ 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-optimize/scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-optimize&#34;&gt;PyPi&lt;/a&gt; (📥 910K / month · 📦 170 · ⏱️ 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-optimize&#34;&gt;Conda&lt;/a&gt; (📥 550K · ⏱️ 15.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-optimize&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/autonomio/talos&#34;&gt;Talos&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.5K) - Hyperparameter Optimization for TensorFlow, Keras and PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/autonomio/talos&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 260 · 📦 140 · 📋 390 - 5% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/autonomio/talos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/talos&#34;&gt;PyPi&lt;/a&gt; (📥 1.8K / month · 📦 6 · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install talos&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mljar/mljar-supervised&#34;&gt;mljar-supervised&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.9K) - Python package for AutoML on Tabular Data with Feature.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mljar/mljar-supervised&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 270 · 📦 45 · 📋 480 - 18% open · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mljar/mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mljar-supervised&#34;&gt;PyPi&lt;/a&gt; (📥 9.4K / month · 📦 2 · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mljar-supervised&#34;&gt;Conda&lt;/a&gt; (📥 1.6K · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mljar-supervised&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maxpumperla/hyperas&#34;&gt;Hyperas&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 2.1K) - Keras + Hyperopt: A very simple wrapper for convenient.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/maxpumperla/hyperas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 300 · 📦 240 · 📋 250 - 37% open · ⏱️ 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/maxpumperla/hyperas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperas&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 24 · ⏱️ 28.02.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/adanet&#34;&gt;AdaNet&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.4K · 💤) - Fast and flexible AutoML with learning guarantees. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/adanet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 520 · 📦 43 · 📋 110 - 57% open · ⏱️ 30.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/adanet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adanet&#34;&gt;PyPi&lt;/a&gt; (📥 680 / month · 📦 2 · ⏱️ 09.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adanet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Neuraxio/Neuraxle&#34;&gt;Neuraxle&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 520) - The worlds cleanest AutoML framework - Do hyperparameter tuning with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Neuraxio/Neuraxle&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 53 · 📦 32 · 📋 320 - 24% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Neuraxio/Neuraxle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neuraxle&#34;&gt;PyPi&lt;/a&gt; (📥 350 / month · 📦 1 · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neuraxle&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/HpBandSter&#34;&gt;HpBandSter&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 540) - a distributed Hyperband implementation on Steroids. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/automl/HpBandSter&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 110 · 📦 220 · 📋 92 - 61% open · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/automl/HpBandSter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hpbandster&#34;&gt;PyPi&lt;/a&gt; (📥 40K / month · 📦 10 · ⏱️ 06.11.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hpbandster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hpbandster&#34;&gt;Conda&lt;/a&gt; (📥 1.6K · ⏱️ 11.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hpbandster&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SimonBlanke/Hyperactive&#34;&gt;Hyperactive&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 400) - An optimization and data collection toolbox for convenient and fast.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SimonBlanke/Hyperactive&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 32 · 📥 100 · 📦 15 · 📋 45 - 11% open · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SimonBlanke/Hyperactive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hyperactive&#34;&gt;PyPi&lt;/a&gt; (📥 580 / month · 📦 3 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hyperactive&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/shankarpandala/lazypredict&#34;&gt;lazypredict&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 360) - Lazy Predict help build a lot of basic models without much code.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/shankarpandala/lazypredict&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 63 · 📦 290 · 📋 63 - 46% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/shankarpandala/lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lazypredict&#34;&gt;PyPi&lt;/a&gt; (📥 7.2K / month · ⏱️ 17.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lazypredict&#34;&gt;Conda&lt;/a&gt; (📥 400 · ⏱️ 24.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lazypredict&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_ViML&#34;&gt;Auto ViML&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 340) - Automatically Build Multiple ML Models with a Single Line of Code... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AutoViML/Auto_ViML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 77 · 📦 16 · 📋 20 - 25% open · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AutoViML/Auto_ViML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autoviml&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 2 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autoviml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rsteca/sklearn-deap&#34;&gt;sklearn-deap&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 700 · 💤) - Use evolutionary algorithms instead of gridsearch in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rsteca/sklearn-deap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 110 · 📦 31 · 📋 55 - 38% open · ⏱️ 30.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rsteca/sklearn-deap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-deap&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · 📦 2 · ⏱️ 30.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-deap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ScottfreeLLC/AlphaPy&#34;&gt;AlphaPy&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 780) - Automated Machine Learning [AutoML] with Python, scikit-learn, Keras,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ScottfreeLLC/AlphaPy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 160 · 📦 3 · 📋 41 - 29% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ScottfreeLLC/AlphaPy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alphapy&#34;&gt;PyPi&lt;/a&gt; (📥 81 / month · ⏱️ 29.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alphapy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/model_search&#34;&gt;model_search&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 3.2K) - AutoML algorithms for model architecture search at scale. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/model_search&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 360 · 📋 50 - 70% open · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/model_search&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 23 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EpistasisLab/tpot&#34;&gt;TPOT&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 8.6K) - A Python Automated Machine Learning tool that optimizes machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fmfn/BayesianOptimization&#34;&gt;Bayesian Optimization&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 6K · 💀) - A Python implementation of global optimization with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Epistimio/orion&#34;&gt;Orion&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 230) - Asynchronous Distributed Hyperparameter Optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SheffieldML/GPyOpt&#34;&gt;GPyOpt&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 810 · 💀) - Gaussian Process Optimization using GPy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/automl/SMAC3&#34;&gt;SMAC3&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 700) - Sequential Model-based Algorithm Configuration. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ClimbsRocks/auto_ml&#34;&gt;auto_ml&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.6K · 💀) - [UNMAINTAINED] Automated machine learning for analytics &amp;amp; production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AxeldeRomblay/MLBox&#34;&gt;MLBox&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.3K · 💀) - MLBox is a powerful Automated Machine Learning python library. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AutoViML/featurewiz&#34;&gt;featurewiz&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 230) - Use advanced feature engineering strategies and select best.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/claesenm/optunity&#34;&gt;optunity&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 390 · 💀) - optimization routines for hyperparameter tuning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/williamFalcon/test-tube&#34;&gt;Test Tube&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 720 · 💀) - Python library to easily log experiments and parallelize.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dragonfly/dragonfly&#34;&gt;Dragonfly&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 640 · 💀) - An open source python library for scalable Bayesian optimisation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HDI-Project/ATM&#34;&gt;Auto Tune Models&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 520 · 💀) - Auto Tune Models - A multi-tenant, multi-data system for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sherpa-ai/sherpa&#34;&gt;Sherpa&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 310 · 💀) - Hyperparameter optimization that enables researchers to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tobegit3hub/advisor&#34;&gt;Advisor&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 1.5K · 💀) - Open-source implementation of Google Vizier for hyper parameters.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/reiinakano/xcessiv&#34;&gt;Xcessiv&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 1.3K · 💀) - A web-based application for quick, scalable, and automated.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HunterMcGushion/hyperparameter_hunter&#34;&gt;HyperparameterHunter&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 690 · 💀) - Easy hyperparameter optimization and automatic result.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmcarpenter2/parfit&#34;&gt;Parfit&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 200 · 💀) - A package for parallelizing the fit and flexibly scoring of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minimaxir/automl-gs&#34;&gt;automl-gs&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 1.8K · 💀) - Provide an input CSV and a target field to predict, generate a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carpedm20/ENAS-pytorch&#34;&gt;ENAS&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 2.6K · 💀) - PyTorch implementation of Efficient Neural Architecture Search via.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/LGE-ARC-AdvancedAI/auptimizer&#34;&gt;Auptimizer&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 180 · 💀) - An automatic ML model optimization tool. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/joeddav/devol&#34;&gt;Devol&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 940 · 💀) - Genetic neural architecture search with Keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/electricbrainio/hypermax&#34;&gt;Hypermax&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 100 · 💀) - Better, faster hyper-parameter optimization. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gdikov/hypertunity&#34;&gt;Hypertunity&lt;/a&gt;&lt;/b&gt; (🥉9 · ⭐ 120 · 💀) - A toolset for black-box hyperparameter optimisation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Reinforcement Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for building and evaluating reinforcement learning &amp;amp; agent-based systems.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/gym&#34;&gt;OpenAI Gym&lt;/a&gt;&lt;/b&gt; (🥇42 · ⭐ 28K) - A toolkit for developing and comparing reinforcement learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openai/gym&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 360 · 🔀 7.8K · 📦 30K · 📋 1.7K - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/openai/gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gym&#34;&gt;PyPi&lt;/a&gt; (📥 640K / month · 📦 2.4K · ⏱️ 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gym&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gym&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/agents&#34;&gt;TF-Agents&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 2.3K) - TF-Agents: A reliable, scalable and easy to use TensorFlow.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/agents&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 630 · 📦 800 · 📋 560 - 23% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/agents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-agents&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 14 · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-agents&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;FinRL&lt;/a&gt;&lt;/b&gt; (🥇30 · ⭐ 5K) - FinRL: The first open-source project for financial reinforcement learning... &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/AI4Finance-Foundation/FinRL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 64 · 🔀 1.2K · 📦 11 · 📋 400 - 13% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/AI4Finance-Foundation/FinRL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/finrl&#34;&gt;PyPi&lt;/a&gt; (📥 280 / month · ⏱️ 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install finrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/dopamine&#34;&gt;Dopamine&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 9.8K) - Dopamine is a research framework for fast prototyping of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/dopamine&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 1.3K · 📋 170 - 51% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/dopamine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dopamine-rl&#34;&gt;PyPi&lt;/a&gt; (📥 46K / month · 📦 37 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dopamine-rl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/acme&#34;&gt;Acme&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.7K) - A library of reinforcement learning components and agents. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/acme&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 68 · 🔀 330 · 📦 78 · 📋 210 - 19% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dm-acme&#34;&gt;PyPi&lt;/a&gt; (📥 3.7K / month · 📦 2 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dm-acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dm-acme&#34;&gt;Conda&lt;/a&gt; (📥 2.3K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dm-acme&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mwydmuch/ViZDoom&#34;&gt;ViZDoom&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.4K) - Doom-based AI Research Platform for Reinforcement Learning from Raw.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mwydmuch/ViZDoom&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 47 · 🔀 340 · 📥 12K · 📦 140 · 📋 430 - 20% open · ⏱️ 07.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mwydmuch/ViZDoom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/vizdoom&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · 📦 14 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install vizdoom&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorlayer/TensorLayer&#34;&gt;TensorLayer&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 7K) - Deep Learning and Reinforcement Learning Library for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorlayer/TensorLayer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 1.6K · 📥 1.4K · 📋 470 - 5% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorlayer/tensorlayer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorlayer&#34;&gt;PyPi&lt;/a&gt; (📥 2.5K / month · 📦 40 · ⏱️ 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorlayer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PARL&#34;&gt;PARL&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 2.6K) - A high-performance distributed training framework for Reinforcement.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PARL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 710 · 📦 91 · 📋 380 - 19% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PARL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/parl&#34;&gt;PyPi&lt;/a&gt; (📥 830 / month · 📦 1 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install parl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorforce/tensorforce&#34;&gt;TensorForce&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 3.1K) - Tensorforce: a TensorFlow library for applied.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorforce/tensorforce&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 82 · 🔀 520 · 📋 640 - 2% open · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorforce/tensorforce&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorforce&#34;&gt;PyPi&lt;/a&gt; (📥 1.8K / month · 📦 27 · ⏱️ 07.09.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorforce&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hill-a/stable-baselines&#34;&gt;Stable Baselines&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 3.5K · 💤) - A fork of OpenAI Baselines, implementations of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hill-a/stable-baselines&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 690 · 📋 920 - 12% open · ⏱️ 25.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hill-a/stable-baselines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/stable-baselines&#34;&gt;PyPi&lt;/a&gt; (📥 8.9K / month · 📦 34 · ⏱️ 06.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install stable-baselines&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rlworkgroup/garage&#34;&gt;garage&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.4K) - A toolkit for reproducible reinforcement learning research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rlworkgroup/garage&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 260 · 📦 40 · 📋 1K - 20% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rlworkgroup/garage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/garage&#34;&gt;PyPi&lt;/a&gt; (📥 480 / month · 📦 2 · ⏱️ 23.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install garage&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/rlax&#34;&gt;RLax&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 800) - A library of reinforcement learning building blocks in JAX. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/rlax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 62 · 📦 50 · 📋 24 - 50% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/rlax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rlax&#34;&gt;PyPi&lt;/a&gt; (📥 4.2K / month · 📦 1 · ⏱️ 24.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rlax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/trfl&#34;&gt;TRFL&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 3.1K · 💤) - TensorFlow Reinforcement Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepmind/trfl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 380 · 📦 80 · 📋 22 - 27% open · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepmind/trfl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/trfl&#34;&gt;PyPi&lt;/a&gt; (📥 4.9K / month · 📦 3 · ⏱️ 16.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install trfl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pfnet/pfrl&#34;&gt;PFRL&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 850) - PFRL: a PyTorch-based deep reinforcement learning library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pfnet/pfrl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 110 · 📦 41 · 📋 66 - 40% open · ⏱️ 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pfnet/pfrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pfrl&#34;&gt;PyPi&lt;/a&gt; (📥 2.9K / month · 📦 1 · ⏱️ 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pfrl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/ReAgent&#34;&gt;ReAgent&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 3.2K) - A platform for Reasoning systems (Reinforcement Learning,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/ReAgent&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 440 · 📋 120 - 35% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/ReAgent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/reagent&#34;&gt;PyPi&lt;/a&gt; (📥 9 / month · ⏱️ 27.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install reagent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IntelLabs/coach&#34;&gt;Coach&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.2K · 💤) - Reinforcement Learning Coach by Intel AI Lab enables easy.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IntelLabs/coach&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 35 · 🔀 420 · 📋 270 - 32% open · ⏱️ 28.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IntelLabs/coach&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rl_coach&#34;&gt;PyPi&lt;/a&gt; (📥 160 / month · 📦 2 · ⏱️ 10.10.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rl_coach&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/rliable&#34;&gt;rliable&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 420) - [NeurIPS21 Outstanding Paper] Library for reliable evaluation on RL.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/rliable&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2 · 🔀 22 · 📦 10 · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/rliable&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/rliable%60&#34;&gt;PyPi&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install rliable`&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 6 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/baselines&#34;&gt;baselines&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 13K · 💀) - OpenAI Baselines: high-quality implementations of reinforcement.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-rl/keras-rl&#34;&gt;keras-rl&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 5.3K · 💀) - Deep Reinforcement Learning for Keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/chainer/chainerrl&#34;&gt;ChainerRL&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.1K · 💀) - ChainerRL is a deep reinforcement learning library built on top of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/lab&#34;&gt;DeepMind Lab&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 6.7K) - A customisable 3D platform for agent-based AI research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2KucAZR&#34;&gt;❗️GPL-2.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SerpentAI/SerpentAI&#34;&gt;SerpentAI&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 6.3K · 💀) - Game Agent Framework. Helping you create AIs / Bots that learn to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/enlite-ai/maze&#34;&gt;Maze&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 210) - Maze Applied Reinforcement Learning Framework. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=Custom&#34;&gt;❗️Custom&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Recommender Systems&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for building and evaluating recommendation systems.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/recommenders&#34;&gt;Recommenders&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 13K) - Best Practices on Recommendation Systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/recommenders&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 2.3K · 📥 170 · 📦 27 · 📋 690 - 19% open · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recommenders&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 2 · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/benfred/implicit&#34;&gt;implicit&lt;/a&gt;&lt;/b&gt; (🥇30 · ⭐ 2.8K) - Fast Python Collaborative Filtering for Implicit Feedback Datasets. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/benfred/implicit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 530 · 📦 600 · 📋 400 - 18% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/benfred/implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/implicit&#34;&gt;PyPi&lt;/a&gt; (📥 140K / month · 📦 31 · ⏱️ 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/implicit&#34;&gt;Conda&lt;/a&gt; (📥 350K · ⏱️ 29.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge implicit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lyst/lightfm&#34;&gt;lightfm&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 4K) - A Python implementation of LightFM, a hybrid recommendation algorithm. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lyst/lightfm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 620 · 📦 730 · 📋 450 - 22% open · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lyst/lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightfm&#34;&gt;PyPi&lt;/a&gt; (📥 400K / month · 📦 45 · ⏱️ 27.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightfm&#34;&gt;Conda&lt;/a&gt; (📥 120K · ⏱️ 09.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightfm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/recommenders&#34;&gt;TF Recommenders&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.3K) - TensorFlow Recommenders is a library for building.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/recommenders&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 33 · 🔀 190 · 📦 110 · 📋 270 - 55% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-recommenders&#34;&gt;PyPi&lt;/a&gt; (📥 2.4M / month · 📦 1 · ⏱️ 23.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-recommenders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/ranking&#34;&gt;TF Ranking&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.5K) - Learning to Rank in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/ranking&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 430 · 📋 290 - 18% open · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/ranking&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow_ranking&#34;&gt;PyPi&lt;/a&gt; (📥 62K / month · 📦 11 · ⏱️ 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow_ranking&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/RUCAIBox/RecBole&#34;&gt;RecBole&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.9K) - A unified, comprehensive and efficient recommendation library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/RUCAIBox/RecBole&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 45 · 🔀 350 · 📋 400 - 14% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/RUCAIBox/RecBole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recbole&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · ⏱️ 25.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recbole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/aibox/recbole&#34;&gt;Conda&lt;/a&gt; (📥 1.6K · ⏱️ 25.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c aibox recbole&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PreferredAI/cornac&#34;&gt;Cornac&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 580) - A Comparative Framework for Multimodal Recommender Systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PreferredAI/cornac&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 94 · 📦 110 · 📋 93 - 5% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PreferredAI/cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cornac&#34;&gt;PyPi&lt;/a&gt; (📥 120K / month · 📦 15 · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cornac&#34;&gt;Conda&lt;/a&gt; (📥 220K · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cornac&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/statisticianinstilettos/recmetrics&#34;&gt;recmetrics&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 390) - A library of metrics for evaluating recommender systems. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/statisticianinstilettos/recmetrics&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 85 · 📦 25 · 📋 21 - 42% open · ⏱️ 17.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/statisticianinstilettos/recmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/recmetrics&#34;&gt;PyPi&lt;/a&gt; (📥 910 / month · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install recmetrics&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/caserec/CaseRecommender&#34;&gt;Case Recommender&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 410) - Case Recommender: A Flexible and Extensible Python.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/caserec/CaseRecommender&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 79 · 📦 10 · 📋 27 - 25% open · ⏱️ 25.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/caserec/CaseRecommender&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/caserecommender&#34;&gt;PyPi&lt;/a&gt; (📥 180 / month · ⏱️ 25.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install caserecommender&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 7 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NicolasHug/Surprise&#34;&gt;scikit-surprise&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 5.4K · 💀) - A Python scikit for building and analyzing recommender.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jfkirk/tensorrec&#34;&gt;tensorrec&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.2K · 💀) - A TensorFlow recommendation algorithm and framework in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ibayer/fastFM&#34;&gt;fastFM&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 980 · 💀) - fastFM: A Library for Factorization Machines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lenskit/lkpy&#34;&gt;lkpy&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 200) - Python recommendation toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maciejkula/spotlight&#34;&gt;Spotlight&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 2.7K · 💀) - Deep recommender models using PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ylongqi/openrec&#34;&gt;OpenRec&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 390 · 💀) - OpenRec is an open-source and modular library for neural network-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ShopRunner/collie&#34;&gt;Collie&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 88) - A library for preparing, training, and evaluating scalable deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Privacy Machine Learning&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for encrypted and privacy-preserving machine learning using methods like federated learning &amp;amp; differential privacy.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/OpenMined/PySyft&#34;&gt;PySyft&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 8.1K) - A library for answering questions using data you cannot see. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/OpenMined/PySyft&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 440 · 🔀 1.8K · 📋 3.1K - 11% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/OpenMined/PySyft&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/syft&#34;&gt;PyPi&lt;/a&gt; (📥 4.5K / month · 📦 5 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install syft&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/FederatedAI/FATE&#34;&gt;FATE&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 4.3K) - An Industrial Grade Federated Learning Framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/FederatedAI/FATE&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 74 · 🔀 1.3K · 📋 1.2K - 33% open · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/FederatedAI/FATE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ETAF&#34;&gt;PyPi&lt;/a&gt; (📥 13 / month · ⏱️ 06.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ETAF&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/opacus&#34;&gt;Opacus&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 1.1K) - Training PyTorch models with differential privacy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/opacus&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 50 · 🔀 200 · 📥 45 · 📦 110 · 📋 180 - 21% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opacus&#34;&gt;PyPi&lt;/a&gt; (📥 5.4K / month · 📦 11 · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opacus&#34;&gt;Conda&lt;/a&gt; (📥 720 · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opacus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/privacy&#34;&gt;TensorFlow Privacy&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.6K) - Library for training machine learning models with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/privacy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 46 · 🔀 350 · 📥 71 · 📋 150 - 43% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/privacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-privacy&#34;&gt;PyPi&lt;/a&gt; (📥 33K / month · 📦 7 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-privacy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tf-encrypted/tf-encrypted&#34;&gt;TFEncrypted&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1K) - A Framework for Encrypted Machine Learning in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tf-encrypted/tf-encrypted&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 28 · 🔀 180 · 📦 61 · 📋 410 - 40% open · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tf-encrypted/tf-encrypted&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-encrypted&#34;&gt;PyPi&lt;/a&gt; (📥 700 / month · 📦 9 · ⏱️ 07.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-encrypted&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/CrypTen&#34;&gt;CrypTen&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.1K) - A framework for Privacy Preserving Machine Learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/CrypTen&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 170 · 📦 18 · 📋 150 - 16% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/CrypTen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/crypten&#34;&gt;PyPi&lt;/a&gt; (📥 240 / month · ⏱️ 09.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install crypten&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Workflow &amp;amp; Experiment Tracking&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to organize, track, and visualize machine learning experiments.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorboard&#34;&gt;Tensorboard&lt;/a&gt;&lt;/b&gt; (🥇43 · ⭐ 5.9K) - TensorFlows Visualization Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorboard&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 280 · 🔀 1.5K · 📦 110K · 📋 1.7K - 33% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorboard&#34;&gt;PyPi&lt;/a&gt; (📥 15M / month · 📦 2.4K · ⏱️ 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboard&#34;&gt;Conda&lt;/a&gt; (📥 2.9M · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mlflow/mlflow&#34;&gt;mlflow&lt;/a&gt;&lt;/b&gt; (🥇41 · ⭐ 12K) - Open source platform for the machine learning lifecycle. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mlflow/mlflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 410 · 🔀 2.7K · 📋 2.4K - 43% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mlflow/mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlflow&#34;&gt;PyPi&lt;/a&gt; (📥 11M / month · 📦 310 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlflow&#34;&gt;Conda&lt;/a&gt; (📥 570K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iterative/dvc&#34;&gt;DVC&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 9.7K) - Data Version Control | Git for Data &amp;amp; Models | ML Experiments Management. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iterative/dvc&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 270 · 🔀 930 · 📥 84K · 📋 3.7K - 17% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iterative/dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dvc&#34;&gt;PyPi&lt;/a&gt; (📥 520K / month · 📦 47 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dvc&#34;&gt;Conda&lt;/a&gt; (📥 1.1M · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dvc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret&#34;&gt;PyCaret&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 5.7K) - An open-source, low-code machine learning library in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pycaret/pycaret&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 1.3K · 📥 570 · 📦 2.1K · 📋 1.5K - 15% open · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pycaret/pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycaret&#34;&gt;PyPi&lt;/a&gt; (📥 450K / month · 📦 13 · ⏱️ 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pycaret&#34;&gt;Conda&lt;/a&gt; (📥 10K · ⏱️ 18.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pycaret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aws/sagemaker-python-sdk&#34;&gt;SageMaker SDK&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 1.6K) - A library for training and deploying machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aws/sagemaker-python-sdk&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 260 · 🔀 780 · 📦 1.4K · 📋 1K - 33% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aws/sagemaker-python-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sagemaker&#34;&gt;PyPi&lt;/a&gt; (📥 8.9M / month · 📦 50 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sagemaker&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sagemaker-python-sdk&#34;&gt;Conda&lt;/a&gt; (📥 270K · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sagemaker-python-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wandb/client&#34;&gt;wandb client&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 3.9K) - A tool for visualizing and tracking your machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wandb/client&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 320 · 📋 1.9K - 25% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wandb/client&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/wandb&#34;&gt;PyPi&lt;/a&gt; (📥 3.2M / month · 📦 260 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install wandb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/wandb&#34;&gt;Conda&lt;/a&gt; (📥 57K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge wandb&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Azure/MachineLearningNotebooks&#34;&gt;AzureML SDK&lt;/a&gt;&lt;/b&gt; (🥈35 · ⭐ 3.1K) - Python notebooks with ML and deep learning examples with Azure.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Azure/MachineLearningNotebooks&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 60 · 🔀 2.1K · 📥 460 · 📋 1.3K - 21% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Azure/MachineLearningNotebooks&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/azureml-sdk&#34;&gt;PyPi&lt;/a&gt; (📥 1.3M / month · 📦 46 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install azureml-sdk&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/allegroai/clearml&#34;&gt;ClearML&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 3.2K) - ClearML - Auto-Magical CI/CD to streamline your ML workflow... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/allegroai/clearml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 430 · 📥 430 · 📦 250 · 📋 540 - 41% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/allegroai/clearml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/clearml&#34;&gt;PyPi&lt;/a&gt; (📥 81K / month · 📦 8 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install clearml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/allegroai/trains&#34;&gt;Docker Hub&lt;/a&gt; (📥 30K · ⏱️ 05.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull allegroai/trains&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/snakemake/snakemake&#34;&gt;snakemake&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 1.4K · 📉) - This is the development home of the workflow management system.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/snakemake/snakemake&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 250 · 🔀 330 · 📦 1.1K · 📋 1K - 59% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/snakemake/snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/snakemake&#34;&gt;PyPi&lt;/a&gt; (📥 49K / month · 📦 210 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/bioconda/snakemake&#34;&gt;Conda&lt;/a&gt; (📥 440K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c bioconda snakemake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lanpa/tensorboardX&#34;&gt;tensorboardX&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 7.3K · 📉) - tensorboard for pytorch (and chainer, mxnet, numpy, ...). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lanpa/tensorboardX&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 71 · 🔀 850 · 📥 350 · 📦 19K · 📋 440 - 16% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lanpa/tensorboardX&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorboardX&#34;&gt;PyPi&lt;/a&gt; (📥 3M / month · 📦 880 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorboardX&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboardx&#34;&gt;Conda&lt;/a&gt; (📥 690K · ⏱️ 23.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboardx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Netflix/metaflow&#34;&gt;Metaflow&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 5.6K) - Build and manage real-life data science projects with ease!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Netflix/metaflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 52 · 🔀 510 · 📦 290 · 📋 450 - 49% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Netflix/metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metaflow&#34;&gt;PyPi&lt;/a&gt; (📥 52K / month · 📦 9 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/metaflow&#34;&gt;Conda&lt;/a&gt; (📥 40K · ⏱️ 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge metaflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/IDSIA/sacred&#34;&gt;sacred&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 3.8K) - Sacred is a tool to help you configure, organize, log and reproduce.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/IDSIA/sacred&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 97 · 🔀 340 · 📦 1.4K · 📋 540 - 16% open · ⏱️ 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/IDSIA/sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sacred&#34;&gt;PyPi&lt;/a&gt; (📥 35K / month · 📦 100 · ⏱️ 14.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sacred&#34;&gt;Conda&lt;/a&gt; (📥 420 · ⏱️ 14.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sacred&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/catalyst-team/catalyst&#34;&gt;Catalyst&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.9K) - Accelerated deep learning R&amp;amp;D. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/catalyst-team/catalyst&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 360 · 📦 550 · 📋 330 - 0% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/catalyst-team/catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/catalyst&#34;&gt;PyPi&lt;/a&gt; (📥 2.2M / month · 📦 29 · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install catalyst&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aimhubio/aim&#34;&gt;aim&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.4K) - Aim easy-to-use and performant open-source ML experiment tracker. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aimhubio/aim&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 37 · 🔀 150 · 📦 78 · 📋 540 - 33% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aimhubio/aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aim&#34;&gt;PyPi&lt;/a&gt; (📥 43K / month · 📦 4 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/aim&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 15.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge aim&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/VisualDL&#34;&gt;VisualDL&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 4.3K) - Deep Learning Visualization Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/VisualDL&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 31 · 🔀 580 · 📥 180 · 📦 1.1K · 📋 410 - 18% open · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/VisualDL&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/visualdl&#34;&gt;PyPi&lt;/a&gt; (📥 90K / month · 📦 23 · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install visualdl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/ml-metadata&#34;&gt;ml-metadata&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 470) - For recording and retrieving metadata associated with ML.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/ml-metadata&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 98 · 📥 1.7K · 📦 220 · 📋 87 - 28% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/ml-metadata&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ml-metadata&#34;&gt;PyPi&lt;/a&gt; (📥 730K / month · 📦 19 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ml-metadata&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/guildai/guildai&#34;&gt;Guild AI&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 700) - Experiment tracking, ML developer tools. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guildai/guildai&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 63 · 📥 1 · 📦 51 · 📋 360 - 43% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/guildai/guildai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/guildai&#34;&gt;PyPi&lt;/a&gt; (📥 3.2K / month · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install guildai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stared/livelossplot&#34;&gt;livelossplot&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.2K) - Live training loss plot in Jupyter Notebook for Keras,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/stared/livelossplot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 140 · 📦 790 · 📋 74 - 5% open · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/stared/livelossplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/livelossplot&#34;&gt;PyPi&lt;/a&gt; (📥 70K / month · 📦 11 · ⏱️ 04.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install livelossplot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/labmlai/labml&#34;&gt;Labml&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.1K) - Monitor deep learning model training and hardware usage from your mobile.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/labmlai/labml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 78 · 📦 47 · 📋 25 - 52% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/labmlai/labml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/labml&#34;&gt;PyPi&lt;/a&gt; (📥 4.1K / month · 📦 6 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install labml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/instacart/lore&#34;&gt;lore&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1.5K) - Lore makes machine learning approachable for Software Engineers and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/instacart/lore&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 26 · 🔀 130 · 📦 19 · 📋 45 - 57% open · ⏱️ 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/instacart/lore&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lore&#34;&gt;PyPi&lt;/a&gt; (📥 730 / month · 📦 1 · ⏱️ 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lore&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/studioml/studio&#34;&gt;Studio.ml&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 370 · 💤) - Studio: Simplify and expedite model building process. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/studioml/studio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 52 · 📦 5 · 📋 250 - 22% open · ⏱️ 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/studioml/studio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/studioml&#34;&gt;PyPi&lt;/a&gt; (📥 540 / month · ⏱️ 14.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install studioml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/replicate/keepsake&#34;&gt;keepsake&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1.6K) - Version control for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/replicate/keepsake&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 64 · 📋 190 - 65% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/replicate/keepsake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keepsake&#34;&gt;PyPi&lt;/a&gt; (📥 570 / month · ⏱️ 11.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keepsake&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/neptune-ai/neptune-client&#34;&gt;Neptune.ai&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 280) - Experiment tracking tool and model registry. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Kaggle/kaggle-api&#34;&gt;kaggle&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 4.7K · 💀) - Official Kaggle API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/knockknock&#34;&gt;knockknock&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 2.4K · 💀) - Knock Knock: Get notified when your training ends with only two.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/tnt&#34;&gt;TNT&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.4K · 💀) - Simple tools for logging and visualizing, loading and training. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EducationalTestingService/skll&#34;&gt;SKLL&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 530) - SciKit-Learn Laboratory (SKLL) makes it easy to run machine.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/m3dev/gokart&#34;&gt;gokart&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 250) - Gokart solves reproducibility, task dependencies, constraints of good code,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/tensorwatch&#34;&gt;TensorWatch&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 3.2K · 💀) - Debugging, monitoring and visualization for Python Machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/waleedka/hiddenlayer&#34;&gt;hiddenlayer&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 1.6K · 💀) - Neural network graphs and training metrics for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MrPowers/quinn&#34;&gt;quinn&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 330 · 💀) - pyspark methods to enhance developer productivity. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/tensorboard_logger&#34;&gt;TensorBoard Logger&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 620 · 💀) - Log TensorBoard events without touching TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/awslabs/mxboard&#34;&gt;MXBoard&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 330 · 💀) - Logging MXNet data for visualization in TensorBoard. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1X&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/datmo/datmo&#34;&gt;datmo&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 340 · 💀) - Open source production model management tool for data scientists. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gradsflow/chitra&#34;&gt;chitra&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 190) - A multi-functional library for full-stack Deep Learning. Simplifies.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minerva-ml/steppy&#34;&gt;steppy&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 130 · 💀) - Lightweight, Python library for fast and reproducible experimentation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/caliban&#34;&gt;caliban&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 430 · 💀) - Research workflows made easy, locally and in the Cloud. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ModelChimp/modelchimp&#34;&gt;ModelChimp&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 120 · 💤) - Experiment tracking for machine and deep learning projects. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jrieke/traintool&#34;&gt;traintool&lt;/a&gt;&lt;/b&gt; (🥉8 · ⭐ 9 · 💀) - Train off-the-shelf machine learning models in one.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Model Serialization &amp;amp; Deployment&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to serialize models to files, convert between a variety of model formats, and optimize models for deployment.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/onnx/onnx&#34;&gt;onnx&lt;/a&gt;&lt;/b&gt; (🥇41 · ⭐ 13K) - Open standard for machine learning interoperability. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/onnx/onnx&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 230 · 🔀 2.7K · 📥 18K · 📦 6.9K · 📋 2K - 13% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/onnx/onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/onnx&#34;&gt;PyPi&lt;/a&gt; (📥 1.1M / month · 📦 370 · ⏱️ 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/onnx&#34;&gt;Conda&lt;/a&gt; (📥 410K · ⏱️ 24.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge onnx&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/apple/coremltools&#34;&gt;Core ML Tools&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 2.7K) - Core ML tools contain supporting tools for Core ML model.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/apple/coremltools&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 400 · 📥 4.2K · 📦 910 · 📋 1K - 33% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/apple/coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/coremltools&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 140 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/coremltools&#34;&gt;Conda&lt;/a&gt; (📥 31K · ⏱️ 15.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge coremltools&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/huggingface_hub&#34;&gt;huggingface_hub&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 430) - All the open source things related to the Hugging Face Hub. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/huggingface_hub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 63 · 🔀 100 · 📋 240 - 34% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/huggingface_hub&#34;&gt;PyPi&lt;/a&gt; (📥 5.7M / month · 📦 82 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/huggingface_hub&#34;&gt;Conda&lt;/a&gt; (📥 140K · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge huggingface_hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/serve&#34;&gt;TorchServe&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.6K) - Serve, optimize and scale PyTorch models in production. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/serve&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 520 · 📥 1.8K · 📋 890 - 14% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/serve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchserve&#34;&gt;PyPi&lt;/a&gt; (📥 21K / month · 📦 9 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/pytorch/torchserve&#34;&gt;Conda&lt;/a&gt; (📥 23K · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c pytorch torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/pytorch/torchserve&#34;&gt;Docker Hub&lt;/a&gt; (📥 1M · ⭐ 12 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull pytorch/torchserve&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/openai/triton&#34;&gt;triton&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 3.6K) - Development repository for the Triton language and compiler. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/openai/triton&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 41 · 🔀 290 · 📦 100 · 📋 200 - 37% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/openai/triton&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/triton&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 3 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install triton&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bentoml/BentoML&#34;&gt;BentoML&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 3.5K) - The Unified Model Serving Framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bentoml/BentoML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 390 · 📥 1.5K · 📋 590 - 10% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bentoml/BentoML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bentoml&#34;&gt;PyPi&lt;/a&gt; (📥 32K / month · 📦 2 · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bentoml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/hummingbird&#34;&gt;Hummingbird&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 2.8K) - Hummingbird compiles trained ML models into tensor computation for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/hummingbird&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 220 · 📥 170 · 📦 32 · 📋 240 - 20% open · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/hummingbird&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hummingbird-ml&#34;&gt;PyPi&lt;/a&gt; (📥 2.4K / month · ⏱️ 25.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hummingbird-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hummingbird-ml&#34;&gt;Conda&lt;/a&gt; (📥 7.5K · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hummingbird-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BayesWitnesses/m2cgen&#34;&gt;m2cgen&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 2.1K) - Transform ML models into a native code (Java, C, Python, Go, JavaScript,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BayesWitnesses/m2cgen&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 190 · 📥 16 · 📦 34 · 📋 90 - 26% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BayesWitnesses/m2cgen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/m2cgen&#34;&gt;PyPi&lt;/a&gt; (📥 42K / month · 📦 3 · ⏱️ 26.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install m2cgen&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cortexlabs/cortex&#34;&gt;cortex&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 7.7K) - Production infrastructure for machine learning at scale. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cortexlabs/cortex&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 590 · 📋 1.1K - 9% open · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cortexlabs/cortex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cortex&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 1 · ⏱️ 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cortex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nok/sklearn-porter&#34;&gt;sklearn-porter&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.2K · 📈) - Transpile trained scikit-learn estimators to C, Java,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nok/sklearn-porter&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 160 · 📦 43 · 📋 76 - 55% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nok/sklearn-porter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-porter&#34;&gt;PyPi&lt;/a&gt; (📥 270 / month · 📦 1 · ⏱️ 18.12.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-porter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gmalivenko/pytorch2keras&#34;&gt;pytorch2keras&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 790 · 💤) - PyTorch to Keras model convertor. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gmalivenko/pytorch2keras&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 130 · 📦 46 · 📋 120 - 44% open · ⏱️ 06.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gmalivenko/pytorch2keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch2keras&#34;&gt;PyPi&lt;/a&gt; (📥 740 / month · 📦 1 · ⏱️ 14.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch2keras&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nebuly-ai/nebullvm&#34;&gt;nebullvm&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 1.1K · 🐣) - Easy-to-use library to boost AI inference leveraging state-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nebuly-ai/nebullvm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 52 · 📦 1 · 📋 38 - 60% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nebuly-ai/nebullvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nebullvm&#34;&gt;PyPi&lt;/a&gt; (📥 640 / month · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nebullvm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 4 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/MMdnn&#34;&gt;mmdnn&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 5.6K · 💀) - MMdnn is a set of tools to help users inter-operate among different deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/larq/compute-engine&#34;&gt;Larq Compute Engine&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 190) - Highly optimized inference engine for Binarized.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/riga/tfdeploy&#34;&gt;tfdeploy&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 350 · 💀) - Deploy tensorflow graphs for fast evaluation and export to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/backprop-ai/backprop&#34;&gt;backprop&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 230 · 💤) - Backprop makes it simple to use, finetune, and deploy state-of-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Model Interpretability&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries to visualize, explain, debug, evaluate, and interpret machine learning models.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/slundberg/shap&#34;&gt;shap&lt;/a&gt;&lt;/b&gt; (🥇40 · ⭐ 16K) - A game theoretic approach to explain the output of any machine learning model. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/slundberg/shap&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 180 · 🔀 2.4K · 📦 5.5K · 📋 1.9K - 69% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/slundberg/shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shap&#34;&gt;PyPi&lt;/a&gt; (📥 4.9M / month · 📦 220 · ⏱️ 20.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/shap&#34;&gt;Conda&lt;/a&gt; (📥 1.2M · ⏱️ 23.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge shap&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arviz-devs/arviz&#34;&gt;arviz&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 1.2K) - Exploratory analysis of Bayesian models with Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arviz-devs/arviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 120 · 🔀 280 · 📥 110 · 📦 2.3K · 📋 730 - 20% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arviz-devs/arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arviz&#34;&gt;PyPi&lt;/a&gt; (📥 450K / month · 📦 100 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/arviz&#34;&gt;Conda&lt;/a&gt; (📥 720K · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge arviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lutzroeder/netron&#34;&gt;Netron&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 19K) - Visualizer for neural network, deep learning, and machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lutzroeder/netron&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2 · 🔀 2.2K · 📥 43K · 📦 7 · 📋 800 - 2% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lutzroeder/netron&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/netron&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 65 · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install netron&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/lime&#34;&gt;Lime&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 9.8K · 💤) - Lime: Explaining the predictions of any machine learning classifier. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/lime&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 1.5K · 📦 2.3K · 📋 560 - 6% open · ⏱️ 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lime&#34;&gt;PyPi&lt;/a&gt; (📥 500K / month · 📦 110 · ⏱️ 26.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lime&#34;&gt;Conda&lt;/a&gt; (📥 100K · ⏱️ 28.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lime&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/interpret&#34;&gt;InterpretML&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 4.7K) - Fit interpretable models. Explain blackbox machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/interpret&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 580 · 📦 210 · 📋 290 - 32% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/interpret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/interpret&#34;&gt;PyPi&lt;/a&gt; (📥 90K / month · 📦 8 · ⏱️ 23.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install interpret&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pytorch/captum&#34;&gt;Captum&lt;/a&gt;&lt;/b&gt; (🥇31 · ⭐ 3.2K) - Model interpretability and understanding for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pytorch/captum&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 83 · 🔀 330 · 📦 550 · 📋 360 - 23% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pytorch/captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/captum&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · 📦 19 · ⏱️ 03.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/captum&#34;&gt;Conda&lt;/a&gt; (📥 920 · ⏱️ 04.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge captum&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-analysis&#34;&gt;Model Analysis&lt;/a&gt;&lt;/b&gt; (🥇31 · ⭐ 1.2K) - Model analysis tools for TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/model-analysis&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 43 · 🔀 250 · 📋 76 - 35% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/model-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-model-analysis&#34;&gt;PyPi&lt;/a&gt; (📥 930K / month · 📦 21 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-model-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MAIF/shapash&#34;&gt;shapash&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.7K) - Shapash makes Machine Learning models transparent and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MAIF/shapash&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 34 · 🔀 230 · 📦 74 · 📋 120 - 15% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MAIF/shapash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/shapash&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 1 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install shapash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi&#34;&gt;Alibi&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.6K) - Algorithms for explaining machine learning models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 190 · 📦 170 · 📋 300 - 42% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SeldonIO/alibi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alibi&#34;&gt;PyPi&lt;/a&gt; (📥 24K / month · 📦 24 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alibi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/DistrictDataLabs/yellowbrick&#34;&gt;yellowbrick&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 3.6K) - Visual analysis and diagnostic tools to facilitate machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/DistrictDataLabs/yellowbrick&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 520 · 📋 660 - 13% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/DistrictDataLabs/yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/yellowbrick&#34;&gt;PyPi&lt;/a&gt; (📥 640K / month · 📦 62 · ⏱️ 19.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/yellowbrick&#34;&gt;Conda&lt;/a&gt; (📥 27K · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge yellowbrick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/dowhy&#34;&gt;DoWhy&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.8K) - DoWhy is a Python library for causal inference that supports explicit.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/dowhy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 610 · 📥 29 · 📦 110 · 📋 200 - 27% open · ⏱️ 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Microsoft/dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dowhy&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 4 · ⏱️ 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dowhy&#34;&gt;Conda&lt;/a&gt; (📥 5.4K · ⏱️ 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dowhy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/dtreeviz&#34;&gt;dtreeviz&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.1K) - A python library for decision tree visualization and model interpretation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/parrt/dtreeviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 270 · 📦 380 · 📋 120 - 20% open · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/parrt/dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dtreeviz&#34;&gt;PyPi&lt;/a&gt; (📥 110K / month · 📦 14 · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/dtreeviz&#34;&gt;Conda&lt;/a&gt; (📥 11K · ⏱️ 29.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge dtreeviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fairlearn/fairlearn&#34;&gt;fairlearn&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.3K) - A Python package to assess and improve fairness of machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/fairlearn/fairlearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 67 · 🔀 310 · 📋 380 - 44% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/fairlearn/fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fairlearn&#34;&gt;PyPi&lt;/a&gt; (📥 96K / month · 📦 13 · ⏱️ 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/fairlearn&#34;&gt;Conda&lt;/a&gt; (📥 18K · ⏱️ 07.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge fairlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/oegedijk/explainerdashboard&#34;&gt;explainerdashboard&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.2K) - Quickly build Explainable AI dashboards that show the inner.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/oegedijk/explainerdashboard&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 160 · 📦 110 · 📋 180 - 6% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/oegedijk/explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/explainerdashboard&#34;&gt;PyPi&lt;/a&gt; (📥 40K / month · 📦 3 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/explainerdashboard&#34;&gt;Conda&lt;/a&gt; (📥 16K · ⏱️ 15.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge explainerdashboard&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIF360&#34;&gt;Fairness 360&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 1.7K) - A comprehensive set of fairness metrics for datasets and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIF360&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 550 · 📦 160 · 📋 140 - 55% open · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/AIF360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aif360&#34;&gt;PyPi&lt;/a&gt; (📥 8.5K / month · 📦 8 · ⏱️ 04.03.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aif360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/aif360&#34;&gt;Conda&lt;/a&gt; (📥 2.1K · ⏱️ 29.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge aif360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/microsoft/responsible-ai-toolbox&#34;&gt;responsible-ai-widgets&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 490) - This project provides responsible AI user interfaces.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/responsible-ai-toolbox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 120 · 📦 29 · 📋 260 - 19% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/microsoft/responsible-ai-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/raiwidgets&#34;&gt;PyPi&lt;/a&gt; (📥 11K / month · 📦 3 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install raiwidgets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/checklist&#34;&gt;checklist&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 1.7K · 💤) - Beyond Accuracy: Behavioral Testing of NLP models with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/checklist&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 160 · 📦 130 · 📋 92 - 13% open · ⏱️ 28.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/checklist&#34;&gt;PyPi&lt;/a&gt; (📥 41K / month · 📦 3 · ⏱️ 24.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/checklist&#34;&gt;Conda&lt;/a&gt; (📥 2.9K · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge checklist&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/quantumblacklabs/causalnex&#34;&gt;CausalNex&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.5K) - A Python library that helps data scientists to infer.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/quantumblacklabs/causalnex&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 170 · 📦 39 · 📋 110 - 19% open · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/quantumblacklabs/causalnex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/causalnex&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 2 · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install causalnex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIX360&#34;&gt;Explainability 360&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.1K) - Interpretability and explainability of data and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/AIX360&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 29 · 🔀 220 · 📦 45 · 📋 64 - 59% open · ⏱️ 18.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/AIX360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aix360&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · 📦 1 · ⏱️ 28.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aix360&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/csinva/imodels&#34;&gt;imodels&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 770) - Interpretable ML package for concise, transparent, and accurate predictive.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/csinva/imodels&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 74 · 📦 12 · 📋 33 - 27% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/csinva/imodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imodels&#34;&gt;PyPi&lt;/a&gt; (📥 3.2K / month · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imodels&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/lit&#34;&gt;LIT&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 2.9K) - The Language Interpretability Tool: Interactively analyze NLP models for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/lit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 300 · 📦 10 · 📋 130 - 48% open · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/lit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lit-nlp&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · ⏱️ 21.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lit-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lit-nlp&#34;&gt;Conda&lt;/a&gt; (📥 35K · ⏱️ 09.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lit-nlp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/philipperemy/keract&#34;&gt;keract&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 980) - Layers Outputs and Gradients in Keras. Made easy. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/philipperemy/keract&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 180 · 📦 140 · 📋 86 - 5% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/philipperemy/keract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keract&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · 📦 5 · ⏱️ 19.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keract&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kundajelab/deeplift&#34;&gt;deeplift&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 640) - Public facing deeplift repo. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kundajelab/deeplift&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 150 · 📦 59 · 📋 84 - 42% open · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kundajelab/deeplift&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deeplift&#34;&gt;PyPi&lt;/a&gt; (📥 750 / month · 📦 4 · ⏱️ 11.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deeplift&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sicara/tf-explain&#34;&gt;tf-explain&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 930) - Interpretability Methods for tf.keras models with Tensorflow 2.x. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sicara/tf-explain&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 98 · 📦 120 · 📋 91 - 43% open · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sicara/tf-explain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tf-explain&#34;&gt;PyPi&lt;/a&gt; (📥 2.2K / month · 📦 7 · ⏱️ 18.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tf-explain&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/DiCE&#34;&gt;DiCE&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 830) - Generate Diverse Counterfactual Explanations for any machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/DiCE&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 120 · 📋 120 - 44% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/DiCE&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/dice-ml&#34;&gt;PyPi&lt;/a&gt; (📥 53K / month · 📦 3 · ⏱️ 27.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install dice-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/what-if-tool&#34;&gt;What-If Tool&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 680) - Source code/webpage/demos for the What-If Tool. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/what-if-tool&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 130 · 📋 100 - 54% open · ⏱️ 05.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/what-if-tool&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/witwidget&#34;&gt;PyPi&lt;/a&gt; (📥 6.5K / month · 📦 3 · ⏱️ 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install witwidget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorboard-plugin-wit&#34;&gt;Conda&lt;/a&gt; (📥 990K · ⏱️ 06.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorboard-plugin-wit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://www.npmjs.com/package/wit-widget&#34;&gt;npm&lt;/a&gt; (📥 4.3K / month · ⏱️ 12.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; npm install wit-widget&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dssg/aequitas&#34;&gt;aequitas&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 480 · 💤) - Bias and Fairness Audit Toolkit. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dssg/aequitas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 88 · 📦 100 · 📋 59 - 64% open · ⏱️ 27.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dssg/aequitas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/aequitas&#34;&gt;PyPi&lt;/a&gt; (📥 2.5K / month · 📦 6 · ⏱️ 16.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install aequitas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/edublancas/sklearn-evaluation&#34;&gt;sklearn-evaluation&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 320) - Machine learning model evaluation made easy: plots,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/edublancas/sklearn-evaluation&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 8 · 🔀 31 · 📦 46 · 📋 39 - 23% open · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/edublancas/sklearn-evaluation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-evaluation&#34;&gt;PyPi&lt;/a&gt; (📥 1.3K / month · 📦 2 · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-evaluation&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jalammar/ecco&#34;&gt;ecco&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.4K) - Explain, analyze, and visualize NLP language models. Ecco creates.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jalammar/ecco&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 94 · 📥 16 · 📦 7 · 📋 36 - 38% open · ⏱️ 18.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jalammar/ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ecco&#34;&gt;PyPi&lt;/a&gt; (📥 290 / month · 📦 1 · ⏱️ 09.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/ecco&#34;&gt;Conda&lt;/a&gt; (📥 400 · ⏱️ 10.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge ecco&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/albermax/innvestigate&#34;&gt;iNNvestigate&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 980 · 💤) - A toolbox to iNNvestigate neural networks predictions!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/albermax/innvestigate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 220 · 📋 240 - 29% open · ⏱️ 03.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/albermax/innvestigate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/innvestigate&#34;&gt;PyPi&lt;/a&gt; (📥 370 / month · 📦 1 · ⏱️ 14.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install innvestigate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tcav&#34;&gt;tcav&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 520 · 💤) - Code for the TCAV ML interpretability project. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tcav&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 130 · 📦 12 · 📋 61 - 11% open · ⏱️ 16.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tcav&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tcav&#34;&gt;PyPi&lt;/a&gt; (📥 120 / month · 📦 3 · ⏱️ 23.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tcav&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EthicalML/xai&#34;&gt;XAI&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 820 · 💤) - XAI - An eXplainability toolbox for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/EthicalML/xai&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 120 · 📦 15 · 📋 9 - 22% open · ⏱️ 30.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/EthicalML/xai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/xai&#34;&gt;PyPi&lt;/a&gt; (📥 150 / month · 📦 6 · ⏱️ 30.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install xai&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/aerdem4/lofo-importance&#34;&gt;LOFO&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 470) - Leave One Feature Out Importance. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/aerdem4/lofo-importance&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 3 · 🔀 53 · 📦 19 · 📋 20 - 20% open · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/aerdem4/lofo-importance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lofo-importance&#34;&gt;PyPi&lt;/a&gt; (📥 480 / month · 📦 1 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lofo-importance&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/marcotcr/anchor&#34;&gt;Anchor&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 700) - Code for High-Precision Model-Agnostic Explanations paper. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/marcotcr/anchor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 97 · 📋 70 - 27% open · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/marcotcr/anchor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/anchor_exp&#34;&gt;PyPi&lt;/a&gt; (📥 1.2K / month · ⏱️ 26.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install anchor_exp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/interpretml/interpret-text&#34;&gt;interpret-text&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 320) - A library that incorporates state-of-the-art explainers for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/interpretml/interpret-text&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 57 · 📋 74 - 78% open · ⏱️ 06.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/interpretml/interpret-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/interpret-text&#34;&gt;PyPi&lt;/a&gt; (📥 100 / month · ⏱️ 07.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install interpret-text&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/eli5&#34;&gt;eli5&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.5K · 💀) - A library for debugging/inspecting machine learning classifiers and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bmabey/pyLDAvis&#34;&gt;pyLDAvis&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.6K · 💀) - Python library for interactive topic model visualization... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/lucid&#34;&gt;Lucid&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 4.4K · 💀) - A collection of infrastructure and tools for research in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/reiinakano/scikit-plot&#34;&gt;scikit-plot&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 2.2K · 💀) - An intuitive library to add plotting functionality to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepchecks/deepchecks&#34;&gt;Deep Checks&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 1.5K) - Test Suites for Validating ML Models &amp;amp; Data. Deepchecks is a.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/raghakot/keras-vis&#34;&gt;keras-vis&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 2.9K · 💀) - Neural network visualization toolkit for keras. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ModelOriented/DALEX&#34;&gt;DALEX&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1K) - moDel Agnostic Language for Exploration and eXplanation. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/andosa/treeinterpreter&#34;&gt;TreeInterpreter&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 710 · 💀) - Package for interpreting scikit-learns decision tree.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/random-forest-importances&#34;&gt;random-forest-importances&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 500 · 💀) - Code to compute permutation and drop-column.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/oracle/Skater&#34;&gt;Skater&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1K) - Python Library for Model Interpretation/Explanations. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=UPL-1.0&#34;&gt;❗️UPL-1.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/fairness-indicators&#34;&gt;fairness-indicators&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 260) - Tensorflows Fairness Evaluation and Visualization.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-card-toolkit&#34;&gt;model-card-toolkit&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 280) - a tool that leverages rich metadata and lineage.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MisaOgura/flashtorch&#34;&gt;FlashTorch&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 670 · 💀) - Visualization toolkit for neural networks in PyTorch! Demo --. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explainX/explainx&#34;&gt;ExplainX.ai&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 310 · 💀) - Explainable AI framework for data scientists. Explain &amp;amp; debug any.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SAP/contextual-ai&#34;&gt;contextual-ai&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 80) - Contextual AI adds explainability to different stages of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/suinleelab/attributionpriors&#34;&gt;Attribution Priors&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 98 · 💀) - Tools for training explainable models using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/intuit/bias-detector&#34;&gt;bias-detector&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 37) - Bias Detector is a python package for detecting bias in machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Vector Similarity Search (ANN)&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for Approximate Nearest Neighbor Search and Vector Indexing/Similarity Search.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/erikbern/ann-benchmarks&#34;&gt;ANN Benchmarks&lt;/a&gt;&lt;/b&gt; ( ⭐ 2.9K) - Benchmarks of approximate nearest neighbor libraries in Python.&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/milvus-io/milvus&#34;&gt;Milvus&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 10K) - An open-source vector database for scalable similarity search and AI.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/milvus-io/milvus&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 210 · 🔀 1.5K · 📥 29K · 📋 5.1K - 5% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/milvus-io/milvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymilvus&#34;&gt;PyPi&lt;/a&gt; (📥 40K / month · 📦 16 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymilvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/milvusdb/milvus&#34;&gt;Docker Hub&lt;/a&gt; (📥 960K · ⭐ 18 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull milvusdb/milvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;Faiss&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 17K) - A library for efficient similarity search and clustering of dense vectors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/faiss&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 98 · 🔀 2.6K · 📦 640 · 📋 1.8K - 9% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/faiss&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymilvus&#34;&gt;PyPi&lt;/a&gt; (📥 40K / month · 📦 16 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymilvus&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/faiss&#34;&gt;Conda&lt;/a&gt; (📥 320K · ⏱️ 09.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge faiss&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/spotify/annoy&#34;&gt;Annoy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 9.9K) - Approximate Nearest Neighbors in C++/Python optimized for memory usage.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/spotify/annoy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 81 · 🔀 1K · 📦 2.1K · 📋 340 - 10% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/spotify/annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/annoy&#34;&gt;PyPi&lt;/a&gt; (📥 1.3M / month · 📦 240 · ⏱️ 18.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/python-annoy&#34;&gt;Conda&lt;/a&gt; (📥 230K · ⏱️ 23.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge python-annoy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nmslib/nmslib&#34;&gt;NMSLIB&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 2.8K) - Non-Metric Space Library (NMSLIB): An efficient similarity search.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nmslib/nmslib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 48 · 🔀 380 · 📦 610 · 📋 400 - 15% open · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nmslib/nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/nmslib&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 47 · ⏱️ 03.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nmslib&#34;&gt;Conda&lt;/a&gt; (📥 52K · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nmslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nmslib/hnswlib&#34;&gt;hnswlib&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2K) - Header-only C++/python library for fast approximate nearest neighbors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nmslib/hnswlib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 56 · 🔀 360 · 📦 240 · 📋 250 - 51% open · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nmslib/hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hnswlib&#34;&gt;PyPi&lt;/a&gt; (📥 350K / month · 📦 24 · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hnswlib&#34;&gt;Conda&lt;/a&gt; (📥 40K · ⏱️ 16.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hnswlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lmcinnes/pynndescent&#34;&gt;PyNNDescent&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 620) - A Python nearest neighbor descent for approximate nearest neighbors. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lmcinnes/pynndescent&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 85 · 📦 1.6K · 📋 100 - 48% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lmcinnes/pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pynndescent&#34;&gt;PyPi&lt;/a&gt; (📥 2.8M / month · 📦 26 · ⏱️ 14.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pynndescent&#34;&gt;Conda&lt;/a&gt; (📥 620K · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pynndescent&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yahoojapan/NGT&#34;&gt;NGT&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 900) - Nearest Neighbor Search with Neighborhood Graph and Tree for High-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yahoojapan/NGT&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 91 · 📋 100 - 14% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yahoojapan/NGT&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/ngt&#34;&gt;PyPi&lt;/a&gt; (📥 17K / month · 📦 8 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install ngt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kakao/n2&#34;&gt;N2&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 520 · 💤) - TOROS N2 - lightweight approximate Nearest Neighbor library which runs.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/kakao/n2&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 18 · 🔀 64 · 📦 23 · 📋 39 - 43% open · ⏱️ 20.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/kakao/n2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/n2&#34;&gt;PyPi&lt;/a&gt; (📥 580 / month · 📦 3 · ⏱️ 16.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install n2&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 3 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/plasticityai/magnitude&#34;&gt;Magnitude&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.5K · 💀) - A fast, efficient universal vector embedding utility package. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pixelogik/NearPy&#34;&gt;NearPy&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 710 · 💀) - Python framework for fast (approximated) nearest neighbour search in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/pysparnn&#34;&gt;PySparNN&lt;/a&gt;&lt;/b&gt; (🥉11 · ⭐ 900 · 💀) - Approximate Nearest Neighbor Search for Sparse Data in Python!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Probabilistics &amp;amp; Statistics&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries providing capabilities for probabilistic programming/reasoning, bayesian inference, gaussian processes, or statistics.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pymc-devs/pymc&#34;&gt;PyMC3&lt;/a&gt;&lt;/b&gt; (🥇40 · ⭐ 6.6K) - Probabilistic Programming in Python: Bayesian Modeling and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pymc-devs/pymc&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 380 · 🔀 1.6K · 📥 1.9K · 📦 620 · 📋 2.7K - 7% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pymc-devs/pymc&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymc3&#34;&gt;PyPi&lt;/a&gt; (📥 360K / month · 📦 240 · ⏱️ 15.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymc3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pymc3&#34;&gt;Conda&lt;/a&gt; (📥 410K · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pymc3&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/probability&#34;&gt;tensorflow-probability&lt;/a&gt;&lt;/b&gt; (🥇37 · ⭐ 3.7K) - Probabilistic reasoning and statistical analysis in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/probability&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 450 · 🔀 970 · 📋 1.2K - 44% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-probability&#34;&gt;PyPi&lt;/a&gt; (📥 950K / month · 📦 310 · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-probability&#34;&gt;Conda&lt;/a&gt; (📥 57K · ⏱️ 26.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-probability&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyro-ppl/pyro&#34;&gt;Pyro&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 7.5K) - Deep universal probabilistic programming with Python and PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyro-ppl/pyro&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 920 · 📦 720 · 📋 980 - 22% open · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyro-ppl/pyro&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyro-ppl&#34;&gt;PyPi&lt;/a&gt; (📥 180K / month · 📦 59 · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyro-ppl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyro-ppl&#34;&gt;Conda&lt;/a&gt; (📥 8.9K · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyro-ppl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cornellius-gp/gpytorch&#34;&gt;GPyTorch&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.8K) - A highly efficient and modular implementation of Gaussian Processes.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cornellius-gp/gpytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 93 · 🔀 420 · 📦 580 · 📋 1.1K - 26% open · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cornellius-gp/gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpytorch&#34;&gt;PyPi&lt;/a&gt; (📥 190K / month · 📦 38 · ⏱️ 04.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpytorch&#34;&gt;Conda&lt;/a&gt; (📥 34K · ⏱️ 14.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/hmmlearn/hmmlearn&#34;&gt;hmmlearn&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.5K) - Hidden Markov Models in Python, with scikit-learn like API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/hmmlearn/hmmlearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 40 · 🔀 700 · 📦 1.3K · 📋 390 - 13% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/hmmlearn/hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hmmlearn&#34;&gt;PyPi&lt;/a&gt; (📥 390K / month · 📦 130 · ⏱️ 10.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hmmlearn&#34;&gt;Conda&lt;/a&gt; (📥 120K · ⏱️ 12.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hmmlearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rlabbe/filterpy&#34;&gt;filterpy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.3K · 💤) - Python Kalman filtering and optimal estimation library. Implements.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rlabbe/filterpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 510 · 📦 1.4K · 📋 210 - 26% open · ⏱️ 04.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rlabbe/filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/filterpy&#34;&gt;PyPi&lt;/a&gt; (📥 690K / month · 📦 130 · ⏱️ 10.10.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/filterpy&#34;&gt;Conda&lt;/a&gt; (📥 95K · ⏱️ 05.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge filterpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pgmpy/pgmpy&#34;&gt;pgmpy&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 2.1K) - Python Library for learning (Structure and Parameter), inference.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pgmpy/pgmpy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 110 · 🔀 630 · 📥 150 · 📦 360 · 📋 790 - 28% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pgmpy/pgmpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pgmpy&#34;&gt;PyPi&lt;/a&gt; (📥 97K / month · 📦 11 · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pgmpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/GPflow/GPflow&#34;&gt;GPflow&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 1.6K) - Gaussian processes in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/GPflow/GPflow&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 420 · 📦 360 · 📋 780 - 17% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/GPflow/GPflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpflow&#34;&gt;PyPi&lt;/a&gt; (📥 23K / month · 📦 29 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpflow&#34;&gt;Conda&lt;/a&gt; (📥 12K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpflow&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/twopirllc/pandas-ta&#34;&gt;pandas-ta&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.5K) - Technical Analysis Indicators - Pandas TA is an easy to use.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/twopirllc/pandas-ta&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 560 · 📦 660 · 📋 390 - 13% open · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/twopirllc/pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pandas-ta&#34;&gt;PyPi&lt;/a&gt; (📥 76K / month · 📦 16 · ⏱️ 28.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pandas-ta&#34;&gt;Conda&lt;/a&gt; (📥 800 · ⏱️ 05.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pandas-ta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pydata/patsy&#34;&gt;patsy&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 830 · 💤) - Describing statistical models in Python using symbolic formulas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pydata/patsy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 94 · 📦 52K · 📋 140 - 51% open · ⏱️ 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pydata/patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/patsy&#34;&gt;PyPi&lt;/a&gt; (📥 9.5M / month · 📦 2.6K · ⏱️ 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/patsy&#34;&gt;Conda&lt;/a&gt; (📥 4.8M · ⏱️ 26.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge patsy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmschrei/pomegranate&#34;&gt;pomegranate&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 2.9K) - Fast, flexible and easy to use probabilistic modelling in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jmschrei/pomegranate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 65 · 🔀 530 · 📦 690 · 📋 660 - 7% open · ⏱️ 21.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jmschrei/pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pomegranate&#34;&gt;PyPi&lt;/a&gt; (📥 35K / month · 📦 46 · ⏱️ 21.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pomegranate&#34;&gt;Conda&lt;/a&gt; (📥 86K · ⏱️ 16.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pomegranate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SALib/SALib&#34;&gt;SALib&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 590) - Sensitivity Analysis Library in Python. Contains Sobol, Morris, FAST, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SALib/SALib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 36 · 🔀 180 · 📋 280 - 16% open · ⏱️ 19.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SALib/SALib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/salib&#34;&gt;PyPi&lt;/a&gt; (📥 130K / month · 📦 58 · ⏱️ 06.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install salib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/salib&#34;&gt;Conda&lt;/a&gt; (📥 81K · ⏱️ 04.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge salib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/orbit&#34;&gt;Orbit&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.4K) - A Python package for Bayesian forecasting with object-oriented design.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/orbit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 99 · 📦 6 · 📋 370 - 16% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/orbit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/orbit-ml&#34;&gt;PyPi&lt;/a&gt; (📥 46K / month · 📦 1 · ⏱️ 28.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install orbit-ml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bambinos/bambi&#34;&gt;bambi&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 770) - BAyesian Model-Building Interface (Bambi) in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bambinos/bambi&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 86 · 📦 28 · 📋 250 - 15% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bambinos/bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/bambi&#34;&gt;PyPi&lt;/a&gt; (📥 4.6K / month · 📦 3 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/bambi&#34;&gt;Conda&lt;/a&gt; (📥 7.9K · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge bambi&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/baal-org/baal&#34;&gt;Baal&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 590) - Library to enable Bayesian active learning in your research or labeling.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/baal-org/baal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 54 · 📋 75 - 24% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ElementAI/baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/baal&#34;&gt;PyPi&lt;/a&gt; (📥 990 / month · 📦 1 · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/baal&#34;&gt;Conda&lt;/a&gt; (📥 1.5K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge baal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 7 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/blei-lab/edward&#34;&gt;Edward&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 4.7K · 💀) - A probabilistic programming language in TensorFlow. Deep.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/raphaelvallat/pingouin&#34;&gt;pingouin&lt;/a&gt;&lt;/b&gt; (🥉28 · ⭐ 1.1K) - Statistical package in Python based on Pandas. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stan-dev/pystan&#34;&gt;PyStan&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 190) - PyStan, a Python interface to Stan, a platform for statistical modeling... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3hkKRql&#34;&gt;ISC&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/maximtrp/scikit-posthocs&#34;&gt;scikit-posthocs&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 240) - Multiple Pairwise Comparisons (Post Hoc) Tests in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mattjj/pyhsmm&#34;&gt;pyhsmm&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 510 · 💀) - Bayesian inference in HSMMs and HMMs. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyro-ppl/funsor&#34;&gt;Funsor&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 190) - Functional tensors for probabilistic programming. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/thu-ml/zhusuan&#34;&gt;ZhuSuan&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 2.1K · 💀) - A probabilistic programming library for Bayesian deep learning,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Adversarial Robustness&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for testing the robustness of machine learning models against attacks with adversarial/malicious examples.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Trusted-AI/adversarial-robustness-toolbox&#34;&gt;ART&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 3K · 📉) - Adversarial Robustness Toolbox (ART) - Python Library for Machine Learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/Trusted-AI/adversarial-robustness-toolbox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 99 · 🔀 830 · 📦 220 · 📋 690 - 13% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Trusted-AI/adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adversarial-robustness-toolbox&#34;&gt;PyPi&lt;/a&gt; (📥 7.1K / month · 📦 7 · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/adversarial-robustness-toolbox&#34;&gt;Conda&lt;/a&gt; (📥 9.4K · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge adversarial-robustness-toolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/bethgelab/foolbox&#34;&gt;Foolbox&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.2K) - A Python toolbox to create adversarial examples that fool neural networks.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/bethgelab/foolbox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 32 · 🔀 400 · 📦 290 · 📋 350 - 6% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/bethgelab/foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/foolbox&#34;&gt;PyPi&lt;/a&gt; (📥 2.7K / month · 📦 13 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/foolbox&#34;&gt;Conda&lt;/a&gt; (📥 5.9K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge foolbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cleverhans-lab/cleverhans&#34;&gt;CleverHans&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 5.5K · 💤) - An adversarial example library for constructing attacks,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cleverhans-lab/cleverhans&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 130 · 🔀 1.3K · 📦 320 · 📋 450 - 5% open · ⏱️ 23.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cleverhans-lab/cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cleverhans&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · 📦 11 · ⏱️ 24.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cleverhans&#34;&gt;Conda&lt;/a&gt; (📥 3K · ⏱️ 29.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cleverhans&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/QData/TextAttack&#34;&gt;TextAttack&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2K) - TextAttack is a Python framework for adversarial attacks, data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/QData/TextAttack&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 51 · 🔀 250 · 📦 78 · 📋 200 - 20% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/QData/TextAttack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/textattack&#34;&gt;PyPi&lt;/a&gt; (📥 2.2K / month · 📦 7 · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install textattack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/textattack&#34;&gt;Conda&lt;/a&gt; (📥 2.8K · ⏱️ 29.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge textattack&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MadryLab/robustness&#34;&gt;robustness&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 700) - A library for experimenting with, training and evaluating neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MadryLab/robustness&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 140 · 📦 77 · 📋 74 - 24% open · ⏱️ 14.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MadryLab/robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/robustness&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · 📦 2 · ⏱️ 01.12.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/robustness&#34;&gt;Conda&lt;/a&gt; (📥 3.5K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge robustness&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/advboxes/AdvBox&#34;&gt;AdvBox&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1.2K) - Advbox is a toolbox to generate adversarial examples that fool neural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/advboxes/AdvBox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 240 · 📋 38 - 21% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/advboxes/AdvBox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/advbox&#34;&gt;PyPi&lt;/a&gt; (📥 21 / month · ⏱️ 05.12.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install advbox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 3 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BorealisAI/advertorch&#34;&gt;advertorch&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.1K) - A Toolbox for Adversarial Robustness Research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/textflint/textflint&#34;&gt;textflint&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 560) - Unified Multilingual Robustness Evaluation Toolkit for Natural.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airbnb/artificial-adversary&#34;&gt;Adversary&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 360 · 💀) - Tool to generate adversarial text examples and test machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;GPU Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that require and make use of CUDA/GPU system capabilities to optimize data handling and machine learning tasks.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cupy/cupy&#34;&gt;CuPy&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 6K) - NumPy &amp;amp; SciPy for GPU. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/cupy/cupy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 300 · 🔀 600 · 📥 31K · 📦 1K · 📋 1.8K - 22% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/cupy/cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cupy&#34;&gt;PyPi&lt;/a&gt; (📥 26K / month · 📦 160 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/cupy&#34;&gt;Conda&lt;/a&gt; (📥 1.4M · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://hub.docker.com/r/cupy/cupy&#34;&gt;Docker Hub&lt;/a&gt; (📥 55K · ⭐ 7 · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; docker pull cupy/cupy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cudf&#34;&gt;cuDF&lt;/a&gt;&lt;/b&gt; (🥇31 · ⭐ 4.8K) - cuDF - GPU DataFrame Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cudf&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 240 · 🔀 600 · 📋 4.6K - 15% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cudf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cudf&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 5 · ⏱️ 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cudf&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/arrayfire/arrayfire&#34;&gt;ArrayFire&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 3.8K · 📉) - ArrayFire: a general purpose GPU library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/arrayfire/arrayfire&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 81 · 🔀 490 · 📥 2.4K · 📋 1.5K - 15% open · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/arrayfire/arrayfire&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/arrayfire&#34;&gt;PyPi&lt;/a&gt; (📥 7K / month · 📦 5 · ⏱️ 22.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install arrayfire&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wookayin/gpustat&#34;&gt;gpustat&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.9K) - A simple command-line utility for querying and monitoring GPU status. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wookayin/gpustat&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 220 · 📦 1.9K · 📋 82 - 28% open · ⏱️ 07.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wookayin/gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gpustat&#34;&gt;PyPi&lt;/a&gt; (📥 620K / month · 📦 99 · ⏱️ 02.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gpustat&#34;&gt;Conda&lt;/a&gt; (📥 130K · ⏱️ 24.11.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gpustat&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cuml&#34;&gt;cuML&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 2.7K) - cuML - RAPIDS Machine Learning Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cuml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 150 · 🔀 400 · 📋 2K - 33% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cuml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cuml&#34;&gt;PyPi&lt;/a&gt; (📥 770 / month · 📦 3 · ⏱️ 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cuml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/inducer/pycuda&#34;&gt;PyCUDA&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 1.3K) - CUDA integration for Python, plus shiny features. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/inducer/pycuda&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 75 · 🔀 250 · 📦 1.3K · 📋 220 - 29% open · ⏱️ 03.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/inducer/pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycuda&#34;&gt;PyPi&lt;/a&gt; (📥 30K / month · 📦 190 · ⏱️ 03.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pycuda&#34;&gt;Conda&lt;/a&gt; (📥 67K · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pycuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/apex&#34;&gt;Apex&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 6.4K) - A PyTorch Extension: Tools for easy mixed precision and distributed.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/apex&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 93 · 🔀 1K · 📦 1K · 📋 1K - 58% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/apex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/nvidia-apex&#34;&gt;Conda&lt;/a&gt; (📥 84K · ⏱️ 06.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge nvidia-apex&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/NVIDIA/DALI&#34;&gt;DALI&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 3.9K) - A GPU-accelerated library containing highly optimized building blocks.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/NVIDIA/DALI&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 74 · 🔀 500 · 📋 1.2K - 16% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/NVIDIA/DALI&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cugraph&#34;&gt;cuGraph&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1K) - cuGraph - RAPIDS Graph Analytics Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cugraph&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 85 · 🔀 190 · 📋 820 - 12% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/cugraph&#34;&gt;PyPi&lt;/a&gt; (📥 210 / month · 📦 1 · ⏱️ 01.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install cugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/libcugraph&#34;&gt;Conda&lt;/a&gt; (📥 6.9K · ⏱️ 29.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge libcugraph&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lebedov/scikit-cuda&#34;&gt;scikit-cuda&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 890) - Python interface to GPU-powered libraries. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lebedov/scikit-cuda&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 46 · 🔀 170 · 📦 190 · 📋 220 - 22% open · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lebedov/scikit-cuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-cuda&#34;&gt;PyPi&lt;/a&gt; (📥 650 / month · 📦 44 · ⏱️ 27.05.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-cuda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BlazingDB/blazingsql&#34;&gt;BlazingSQL&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 1.8K · 💤) - BlazingSQL is a lightweight, GPU accelerated, SQL engine for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BlazingDB/blazingsql&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 170 · 📋 720 - 18% open · ⏱️ 30.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BlazingDB/blazingsql&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/blazingsql/blazingsql-protocol&#34;&gt;Conda&lt;/a&gt; (📥 940 · ⏱️ 11.11.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c blazingsql blazingsql-protocol&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KomputeProject/kompute&#34;&gt;Vulkan Kompute&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 870) - General purpose GPU compute framework built on Vulkan to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KomputeProject/kompute&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 61 · 📥 160 · 📦 3 · 📋 180 - 32% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KomputeProject/kompute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kp&#34;&gt;PyPi&lt;/a&gt; (📥 130 / month · ⏱️ 13.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kp&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rapidsai/cusignal&#34;&gt;cuSignal&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 600) - GPU accelerated signal processing. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rapidsai/cusignal&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 38 · 🔀 91 · 📋 130 - 11% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rapidsai/cusignal&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 5 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/anderskm/gputil&#34;&gt;GPUtil&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 870 · 💀) - A Python module for getting the GPU status from NVIDA GPUs using.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/fbcotter/py3nvml&#34;&gt;py3nvml&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 200) - Python 3 Bindings for NVML library. Get NVIDIA GPU status inside your.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicolargo/nvidia-ml-py3&#34;&gt;nvidia-ml-py3&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 79 · 💀) - Python 3 Bindings for the NVIDIA Management Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Santosh-Gupta/SpeedTorch&#34;&gt;SpeedTorch&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 650 · 💀) - Library for faster pinned CPU - GPU transfer in Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/stas00/ipyexperiments&#34;&gt;ipyexperiments&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 150) - jupyter/ipython experiment containers for GPU and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1E&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Tensorflow Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend TensorFlow with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/addons&#34;&gt;TF Addons&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 1.5K) - Useful extra functionality for TensorFlow 2.x maintained by.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/addons&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 190 · 🔀 510 · 📦 6.4K · 📋 930 - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/addons&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-addons&#34;&gt;PyPi&lt;/a&gt; (📥 1.4M / month · 📦 170 · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-addons&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/datasets&#34;&gt;TensorFlow Datasets&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 3.3K) - TFDS is a collection of datasets ready to use with.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/datasets&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 250 · 🔀 1.3K · 📋 1.2K - 47% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-datasets&#34;&gt;PyPi&lt;/a&gt; (📥 1.2M / month · 📦 160 · ⏱️ 31.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-datasets&#34;&gt;Conda&lt;/a&gt; (📥 4.6K · ⏱️ 17.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-datasets&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/hub&#34;&gt;tensorflow-hub&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 3.1K) - A library for transfer learning by reusing parts of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/hub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 90 · 🔀 1.6K · 📦 12K · 📋 640 - 2% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-hub&#34;&gt;PyPi&lt;/a&gt; (📥 5.3M / month · 📦 280 · ⏱️ 14.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorflow-hub&#34;&gt;Conda&lt;/a&gt; (📥 63K · ⏱️ 18.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorflow-hub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/tensor2tensor&#34;&gt;tensor2tensor&lt;/a&gt;&lt;/b&gt; (🥈34 · ⭐ 12K) - Library of deep learning models and datasets designed to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/tensor2tensor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 240 · 🔀 3K · 📦 1.2K · 📋 1.2K - 45% open · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/tensor2tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensor2tensor&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 93 · ⏱️ 17.06.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensor2tensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/transform&#34;&gt;TensorFlow Transform&lt;/a&gt;&lt;/b&gt; (🥈33 · ⭐ 920) - Input pipeline framework. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/transform&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 200 · 📦 870 · 📋 190 - 19% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/transform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-transform&#34;&gt;PyPi&lt;/a&gt; (📥 3.4M / month · 📦 56 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-transform&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/model-optimization&#34;&gt;TF Model Optimization&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 1.2K) - A toolkit to optimize ML models for deployment for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/model-optimization&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 67 · 🔀 280 · 📦 1.8K · 📋 320 - 52% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/model-optimization&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-model-optimization&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 20 · ⏱️ 18.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-model-optimization&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/keras-team/keras-preprocessing&#34;&gt;Keras-Preprocessing&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 1K) - Utilities for working with image data, text data, and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/keras-team/keras-preprocessing&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 52 · 🔀 440 · 📋 200 - 47% open · ⏱️ 17.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/keras-team/keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/keras-preprocessing&#34;&gt;PyPi&lt;/a&gt; (📥 10M / month · 📦 1.5K · ⏱️ 14.05.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/keras-preprocessing&#34;&gt;Conda&lt;/a&gt; (📥 1.3M · ⏱️ 15.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge keras-preprocessing&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/io&#34;&gt;TensorFlow I/O&lt;/a&gt;&lt;/b&gt; (🥉29 · ⭐ 560) - Dataset, streaming, and file system extensions.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/io&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 94 · 🔀 230 · 📋 520 - 35% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/io&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-io&#34;&gt;PyPi&lt;/a&gt; (📥 200K / month · 📦 24 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-io&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/qubvel/efficientnet&#34;&gt;efficientnet&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 2K · 💤) - Implementation of EfficientNet model. Keras and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/qubvel/efficientnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 460 · 📥 240K · 📦 1K · 📋 120 - 51% open · ⏱️ 16.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/qubvel/efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/efficientnet&#34;&gt;PyPi&lt;/a&gt; (📥 130K / month · 📦 10 · ⏱️ 15.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/efficientnet&#34;&gt;Conda&lt;/a&gt; (📥 58 · ⏱️ 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda efficientnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/neural-structured-learning&#34;&gt;Neural Structured Learning&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 920) - Training neural models with structured signals. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/neural-structured-learning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 33 · 🔀 170 · 📦 230 · 📋 62 - 4% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/neural-structured-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/neural-structured-learning&#34;&gt;PyPi&lt;/a&gt; (📥 16K / month · 📦 2 · ⏱️ 18.08.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install neural-structured-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/cloud&#34;&gt;TensorFlow Cloud&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 330) - The TensorFlow Cloud repository provides APIs that.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/cloud&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 27 · 🔀 69 · 📦 150 · 📋 81 - 67% open · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-cloud&#34;&gt;PyPi&lt;/a&gt; (📥 170K / month · 📦 1 · ⏱️ 17.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-cloud&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorflow/compression&#34;&gt;TF Compression&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 610) - Data compression in TensorFlow. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorflow/compression&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 210 · 📋 83 - 2% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorflow/compression&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorflow-compression&#34;&gt;PyPi&lt;/a&gt; (📥 1.1K / month · 📦 1 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorflow-compression&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geffy/tffm&#34;&gt;tffm&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 780) - TensorFlow implementation of an arbitrary order Factorization Machine. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geffy/tffm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 190 · 📦 11 · 📋 40 - 45% open · ⏱️ 17.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geffy/tffm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tffm&#34;&gt;PyPi&lt;/a&gt; (📥 1.9K / month · 📦 1 · ⏱️ 17.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tffm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PAIR-code/saliency&#34;&gt;Saliency&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 790) - Framework-agnostic implementation for state-of-the-art saliency.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PAIR-code/saliency&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 160 · 📦 28 · 📋 40 - 35% open · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PAIR-code/saliency&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/saliency&#34;&gt;PyPi&lt;/a&gt; (📥 630 / month · 📦 3 · ⏱️ 03.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install saliency&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/taehoonlee/tensornets&#34;&gt;TensorNets&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1K · 💀) - High level network definitions with pre-trained weights in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Jax Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend Jax with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/patrick-kidger/equinox&#34;&gt;equinox&lt;/a&gt;&lt;/b&gt; (🥇23 · ⭐ 560) - Callable PyTrees and filtered transforms = neural networks in.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/patrick-kidger/equinox&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 29 · 📦 19 · 📋 44 - 13% open · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/patrick-kidger/equinox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/equinox&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · 📦 4 · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install equinox&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 1 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ucl-bug/jaxdf&#34;&gt;jaxdf&lt;/a&gt;&lt;/b&gt; (🥉9 · ⭐ 50) - A JAX-based research framework for writing differentiable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://jax.readthedocs.io/en/latest/_static/favicon.png&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Sklearn Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend scikit-learn with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasbt/mlxtend&#34;&gt;MLxtend&lt;/a&gt;&lt;/b&gt; (🥇35 · ⭐ 3.9K) - A library of extension and helper modules for Pythons data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasbt/mlxtend&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 89 · 🔀 750 · 📦 6K · 📋 420 - 25% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasbt/mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/mlxtend&#34;&gt;PyPi&lt;/a&gt; (📥 1.4M / month · 📦 140 · ⏱️ 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/mlxtend&#34;&gt;Conda&lt;/a&gt; (📥 200K · ⏱️ 03.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge mlxtend&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/imbalanced-learn&#34;&gt;imbalanced-learn&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 5.9K) - A Python Package to Tackle the Curse of Imbalanced.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/imbalanced-learn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 63 · 🔀 1.2K · 📦 11K · 📋 510 - 9% open · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/imbalanced-learn&#34;&gt;PyPi&lt;/a&gt; (📥 2.7M / month · 📦 260 · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/imbalanced-learn&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 16.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge imbalanced-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/category_encoders&#34;&gt;category_encoders&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 1.9K) - A library of sklearn compatible categorical variable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/category_encoders&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 52 · 🔀 350 · 📦 3.4K · 📋 250 - 29% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/category_encoders&#34;&gt;PyPi&lt;/a&gt; (📥 3.3M / month · 📦 23 · ⏱️ 14.10.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/category_encoders&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge category_encoders&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/guofei9987/scikit-opt&#34;&gt;scikit-opt&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 3.2K) - Genetic Algorithm, Particle Swarm Optimization, Simulated.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/guofei9987/scikit-opt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 14 · 🔀 760 · 📦 74 · 📋 150 - 27% open · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/guofei9987/scikit-opt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-opt&#34;&gt;PyPi&lt;/a&gt; (📥 2.3K / month · 📦 6 · ⏱️ 14.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-opt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/iskandr/fancyimpute&#34;&gt;fancyimpute&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 1.1K · 💤) - Multivariate imputation and matrix completion.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/iskandr/fancyimpute&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 170 · 📦 1.2K · 📋 110 - 0% open · ⏱️ 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/iskandr/fancyimpute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/fancyimpute&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 29 · ⏱️ 21.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install fancyimpute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/koaning/scikit-lego&#34;&gt;scikit-lego&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 820) - Extra blocks for scikit-learn pipelines. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/koaning/scikit-lego&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 50 · 🔀 85 · 📦 48 · 📋 240 - 9% open · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/koaning/scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-lego&#34;&gt;PyPi&lt;/a&gt; (📥 15K / month · 📦 6 · ⏱️ 20.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scikit-lego&#34;&gt;Conda&lt;/a&gt; (📥 18K · ⏱️ 21.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scikit-lego&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/lightning&#34;&gt;sklearn-contrib-lightning&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 1.6K) - Large-scale linear classification, regression and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/lightning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 200 · 📥 230 · 📦 100 · 📋 93 - 54% open · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sklearn-contrib-lightning&#34;&gt;PyPi&lt;/a&gt; (📥 2K / month · 📦 6 · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sklearn-contrib-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sklearn-contrib-lightning&#34;&gt;Conda&lt;/a&gt; (📥 160K · ⏱️ 13.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sklearn-contrib-lightning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/combo&#34;&gt;combo&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 580 · 💤) - (AAAI 20) A Python Toolbox for Machine Learning Model.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;xgboost&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/combo&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 99 · 📦 460 · 📋 14 - 78% open · ⏱️ 02.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/combo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/combo&#34;&gt;PyPi&lt;/a&gt; (📥 33K / month · 📦 3 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install combo&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/trent-b/iterative-stratification&#34;&gt;iterative-stratification&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 650) - scikit-learn cross validators for iterative.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/trent-b/iterative-stratification&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 61 · 📦 210 · 📋 19 - 21% open · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/trent-b/iterative-stratification&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/iterative-stratification&#34;&gt;PyPi&lt;/a&gt; (📥 2.2M / month · 📦 8 · ⏱️ 03.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install iterative-stratification&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/DESlib&#34;&gt;DESlib&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 400 · 💤) - A Python library for dynamic classifier and ensemble selection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/DESlib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 13 · 🔀 73 · 📦 25 · 📋 140 - 11% open · ⏱️ 10.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/DESlib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deslib&#34;&gt;PyPi&lt;/a&gt; (📥 550 / month · 📦 2 · ⏱️ 08.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deslib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-tda/scikit-tda&#34;&gt;scikit-tda&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 340) - Topological Data Analysis for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-tda/scikit-tda&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 43 · 📦 31 · 📋 19 - 78% open · ⏱️ 13.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-tda/scikit-tda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scikit-tda&#34;&gt;PyPi&lt;/a&gt; (📥 1.4K / month · ⏱️ 03.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scikit-tda&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 6 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TeamHG-Memex/sklearn-crfsuite&#34;&gt;sklearn-crfsuite&lt;/a&gt;&lt;/b&gt; (🥈26 · ⭐ 400 · 💀) - scikit-learn inspired API for CRFsuite. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-multilearn/scikit-multilearn&#34;&gt;scikit-multilearn&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 750 · 💀) - A scikit-learn based module for multi-label et. al... &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/skope-rules&#34;&gt;skope-rules&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 460 · 💀) - machine learning with logical rules in Python. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=BSD-1-Clause&#34;&gt;❗️BSD-1-Clause&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mathurinm/celer&#34;&gt;celer&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 140) - Fast solver for L1-type problems: Lasso, sparse Logisitic regression,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/skggm/skggm&#34;&gt;skggm&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 200) - Scikit-learn compatible estimation of general graphical models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/amueller/dabl&#34;&gt;dabl&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 110 · 💤) - Data Analysis Baseline Library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Pytorch Utilities&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries that extend Pytorch with additional capabilities.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/KevinMusgrave/pytorch-metric-learning&#34;&gt;PML&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 4.4K) - The easiest way to use deep metric learning in your application. Modular,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/KevinMusgrave/pytorch-metric-learning&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 540 · 📦 260 · 📋 350 - 13% open · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/KevinMusgrave/pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-metric-learning&#34;&gt;PyPi&lt;/a&gt; (📥 2.2M / month · 📦 9 · ⏱️ 02.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/metric-learning/pytorch-metric-learning&#34;&gt;Conda&lt;/a&gt; (📥 6.9K · ⏱️ 30.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c metric-learning pytorch-metric-learning&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/huggingface/accelerate&#34;&gt;accelerate&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 2.5K) - A simple way to train and use PyTorch models with multi-.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/huggingface/accelerate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 44 · 🔀 170 · 📦 520 · 📋 230 - 37% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/huggingface/accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/accelerate&#34;&gt;PyPi&lt;/a&gt; (📥 2.3M / month · 📦 13 · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/accelerate&#34;&gt;Conda&lt;/a&gt; (📥 2.1K · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge accelerate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/lightning-flash&#34;&gt;lightning-flash&lt;/a&gt;&lt;/b&gt; (🥇29 · ⭐ 1.5K) - Your PyTorch AI Factory - Flash enables you to easily.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PyTorchLightning/lightning-flash&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 69 · 🔀 170 · 📦 79 · 📋 460 - 6% open · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PyTorchLightning/lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/lightning-flash&#34;&gt;PyPi&lt;/a&gt; (📥 6.4K / month · 📦 3 · ⏱️ 11.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/lightning-flash&#34;&gt;Conda&lt;/a&gt; (📥 1.6K · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge lightning-flash&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sksq96/pytorch-summary&#34;&gt;pytorch-summary&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 3.5K · 💤) - Model summary in PyTorch similar to `model.summary()`.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sksq96/pytorch-summary&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 390 · 📦 5.1K · 📋 160 - 73% open · ⏱️ 10.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sksq96/pytorch-summary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchsummary&#34;&gt;PyPi&lt;/a&gt; (📥 100K / month · 📦 71 · ⏱️ 26.09.2018):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchsummary&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jettify/pytorch-optimizer&#34;&gt;pytorch-optimizer&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 2.4K) - torch-optimizer -- collection of optimizers for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jettify/pytorch-optimizer&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 230 · 📦 600 · 📋 45 - 35% open · ⏱️ 11.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jettify/pytorch-optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch_optimizer&#34;&gt;PyPi&lt;/a&gt; (📥 54K / month · 📦 23 · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch_optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torch-optimizer&#34;&gt;Conda&lt;/a&gt; (📥 1.4K · ⏱️ 31.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torch-optimizer&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rtqichen/torchdiffeq&#34;&gt;torchdiffeq&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 4.1K) - Differentiable ODE solvers with full GPU support and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rtqichen/torchdiffeq&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 20 · 🔀 730 · 📦 250 · 📋 180 - 22% open · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rtqichen/torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchdiffeq&#34;&gt;PyPi&lt;/a&gt; (📥 6.5K / month · 📦 20 · ⏱️ 22.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchdiffeq&#34;&gt;Conda&lt;/a&gt; (📥 5.1K · ⏱️ 03.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchdiffeq&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_sparse&#34;&gt;PyTorch Sparse&lt;/a&gt;&lt;/b&gt; (🥈25 · ⭐ 640) - PyTorch Extension Library of Optimized Autograd Sparse.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_sparse&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 25 · 🔀 87 · 📋 180 - 17% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-sparse&#34;&gt;PyPi&lt;/a&gt; (📥 24K / month · 📦 37 · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_sparse&#34;&gt;Conda&lt;/a&gt; (📥 88K · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_sparse&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dreamquark-ai/tabnet&#34;&gt;TabNet&lt;/a&gt;&lt;/b&gt; (🥈24 · ⭐ 1.7K) - PyTorch implementation of TabNet paper :.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/dreamquark-ai/tabnet&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 340 · 📋 240 - 15% open · ⏱️ 23.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/dreamquark-ai/tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch-tabnet&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 7 · ⏱️ 02.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch-tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch-tabnet&#34;&gt;Conda&lt;/a&gt; (📥 490 · ⏱️ 30.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch-tabnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/BloodAxe/pytorch-toolbelt&#34;&gt;Pytorch Toolbelt&lt;/a&gt;&lt;/b&gt; (🥈24 · ⭐ 1.2K) - PyTorch extensions for fast R&amp;amp;D prototyping and Kaggle.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/BloodAxe/pytorch-toolbelt&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 7 · 🔀 94 · 📋 28 - 21% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/BloodAxe/pytorch-toolbelt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pytorch_toolbelt&#34;&gt;PyPi&lt;/a&gt; (📥 8.8K / month · 📦 6 · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pytorch_toolbelt&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_scatter&#34;&gt;torch-scatter&lt;/a&gt;&lt;/b&gt; (🥈24 · ⭐ 990) - PyTorch Extension Library of Optimized Scatter Operations. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rusty1s/pytorch_scatter&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 19 · 🔀 110 · 📋 260 - 9% open · ⏱️ 25.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rusty1s/pytorch_scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-scatter&#34;&gt;PyPi&lt;/a&gt; (📥 30K / month · 📦 43 · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pytorch_scatter&#34;&gt;Conda&lt;/a&gt; (📥 77K · ⏱️ 21.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pytorch_scatter&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/asappresearch/sru&#34;&gt;SRU&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 2K · 💤) - Training RNNs as Fast as CNNs (https://arxiv.org/abs/1709.02755). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/asappresearch/sru&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 300 · 📦 18 · 📋 120 - 46% open · ⏱️ 19.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/asappresearch/sru&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sru&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 3 · ⏱️ 17.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sru&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tristandeleu/pytorch-meta&#34;&gt;Torchmeta&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.6K · 💤) - A collection of extensions and data-loaders for few-shot.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tristandeleu/pytorch-meta&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 210 · 📦 90 · 📋 140 - 34% open · ⏱️ 20.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tristandeleu/pytorch-meta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchmeta&#34;&gt;PyPi&lt;/a&gt; (📥 2.6K / month · ⏱️ 20.09.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchmeta&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rwightman/gen-efficientnet-pytorch&#34;&gt;EfficientNets&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.5K · 💤) - Pretrained EfficientNet, EfficientNet-Lite, MixNet,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rwightman/gen-efficientnet-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 190 · 📦 100 · 📋 53 - 3% open · ⏱️ 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rwightman/gen-efficientnet-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/geffnet&#34;&gt;PyPi&lt;/a&gt; (📥 13K / month · 📦 1 · ⏱️ 08.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install geffnet&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/higher&#34;&gt;Higher&lt;/a&gt;&lt;/b&gt; (🥈23 · ⭐ 1.4K · 💤) - higher is a pytorch library allowing users to obtain higher.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/higher&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 9 · 🔀 98 · 📦 140 · 📋 99 - 49% open · ⏱️ 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/higher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/higher&#34;&gt;PyPi&lt;/a&gt; (📥 20K / month · 📦 2 · ⏱️ 14.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install higher&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/performer-pytorch&#34;&gt;Performer Pytorch&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 830) - An implementation of Performer, a linear attention-based.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/performer-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 110 · 📦 46 · 📋 76 - 43% open · ⏱️ 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/performer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/performer-pytorch&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 4 · ⏱️ 02.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install performer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/reformer-pytorch&#34;&gt;reformer-pytorch&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.7K) - Reformer, the efficient Transformer, in Pytorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/lucidrains/reformer-pytorch&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 230 · 📋 120 - 11% open · ⏱️ 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/lucidrains/reformer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/reformer-pytorch&#34;&gt;PyPi&lt;/a&gt; (📥 4.4K / month · ⏱️ 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install reformer-pytorch&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google-research/torchsde&#34;&gt;torchsde&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 980 · 💤) - Differentiable SDE solvers with GPU support and efficient.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google-research/torchsde&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 5 · 🔀 100 · 📦 15 · 📋 48 - 14% open · ⏱️ 26.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google-research/torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torchsde&#34;&gt;PyPi&lt;/a&gt; (📥 950 / month · ⏱️ 20.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/torchsde&#34;&gt;Conda&lt;/a&gt; (📥 9.3K · ⏱️ 12.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge torchsde&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/harvardnlp/pytorch-struct&#34;&gt;Torch-Struct&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 1K) - Fast, general, and tested differentiable structured prediction.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/harvardnlp/pytorch-struct&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 81 · 📋 54 - 44% open · ⏱️ 30.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/harvardnlp/pytorch-struct&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/torch-struct&#34;&gt;PyPi&lt;/a&gt; (📥 44K / month · ⏱️ 14.02.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install torch-struct&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/szagoruyko/pytorchviz&#34;&gt;pytorchviz&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 2.2K · 💤) - A small package to create visualizations of PyTorch execution.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/szagoruyko/pytorchviz&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 230 · 📦 670 · 📋 56 - 37% open · ⏱️ 15.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/szagoruyko/pytorchviz&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/abhishekkrthakur/tez&#34;&gt;Tez&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 1K) - Tez is a super-simple and lightweight Trainer for PyTorch. It also.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/abhishekkrthakur/tez&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 130 · 📦 25 · 📋 32 - 50% open · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/abhishekkrthakur/tez&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tez&#34;&gt;PyPi&lt;/a&gt; (📥 660 / month · 📦 2 · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tez&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/geohot/tinygrad&#34;&gt;tinygrad&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 6K) - You like pytorch? You like micrograd? You love tinygrad!. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/geohot/tinygrad&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 59 · 🔀 600 · 📦 2 · 📋 110 - 19% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/geohot/tinygrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/parrt/tensor-sensor&#34;&gt;Tensor Sensor&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 640) - The goal of this library is to generate more helpful.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/parrt/tensor-sensor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 33 · 📦 7 · 📋 23 - 34% open · ⏱️ 07.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/parrt/tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensor-sensor&#34;&gt;PyPi&lt;/a&gt; (📥 1.7K / month · ⏱️ 11.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensor-sensor&#34;&gt;Conda&lt;/a&gt; (📥 280 · ⏱️ 11.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensor-sensor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/madgrad&#34;&gt;madgrad&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 760) - MADGRAD Optimization Method. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/madgrad&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 2 · 🔀 55 · 📦 25 · 📋 8 - 12% open · ⏱️ 10.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/madgrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/madgrad&#34;&gt;PyPi&lt;/a&gt; (📥 7.6K / month · ⏱️ 08.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install madgrad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/achaiah/pywick&#34;&gt;Pywick&lt;/a&gt;&lt;/b&gt; (🥉15 · ⭐ 370 · 💤) - High-level batteries-included neural network training library for.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/achaiah/pywick&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 38 · 📦 6 · 📋 14 - 14% open · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/achaiah/pywick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pywick&#34;&gt;PyPi&lt;/a&gt; (📥 26 / month · ⏱️ 22.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pywick&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 8 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Cadene/pretrained-models.pytorch&#34;&gt;pretrainedmodels&lt;/a&gt;&lt;/b&gt; (🥇32 · ⭐ 8.5K · 💀) - Pretrained ConvNets for pytorch: NASNet, ResNeXt,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lukemelas/EfficientNet-PyTorch&#34;&gt;EfficientNet-PyTorch&lt;/a&gt;&lt;/b&gt; (🥈27 · ⭐ 7K · 💀) - A PyTorch implementation of EfficientNet and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/GRAAL-Research/poutyne&#34;&gt;Poutyne&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 520) - A simplified framework and utilities for PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/37RvQcA&#34;&gt;❗️LGPL-3.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Luolc/AdaBound&#34;&gt;AdaBound&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 2.9K · 💀) - An optimizer that trains as fast as Adam and as good as SGD. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adobe/antialiased-cnns&#34;&gt;Antialiased CNNs&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 1.5K · 💤) - pip install antialiased-cnns to improve stability and.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=CC%20BY-NC-SA%204.0&#34;&gt;❗️CC BY-NC-SA 4.0&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/lucidrains/lambda-networks&#34;&gt;Lambda Networks&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 1.5K · 💀) - Implementation of LambdaNetworks, a new approach to.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/karpathy/micrograd&#34;&gt;micrograd&lt;/a&gt;&lt;/b&gt; (🥉16 · ⭐ 2.1K · 💀) - A tiny scalar-valued autograd engine and a neural net library.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/TorchDrift/TorchDrift&#34;&gt;TorchDrift&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 210 · 💤) - Drift Detection for your PyTorch Models. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Database Clients&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;p&gt;&lt;em&gt;Libraries for connecting to, operating, and querying databases.&lt;/em&gt;&lt;/p&gt; &#xA;&lt;p&gt;🔗&amp;nbsp;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python#database-clients&#34;&gt;best-of-python - DB Clients&lt;/a&gt;&lt;/b&gt; ( ⭐ 2.2K) - Collection of database clients for python.&lt;/p&gt; &#xA;&lt;br&gt; &#xA;&lt;h2&gt;Others&lt;/h2&gt; &#xA;&lt;p&gt;&lt;a href=&#34;https://raw.githubusercontent.com/ml-tooling/best-of-ml-python/main/#contents&#34;&gt;&lt;img align=&#34;right&#34; width=&#34;15&#34; height=&#34;15&#34; src=&#34;https://git.io/JtehR&#34; alt=&#34;Back to top&#34;&gt;&lt;/a&gt;&lt;/p&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;scipy&lt;/a&gt;&lt;/b&gt; (🥇49 · ⭐ 9.7K) - Ecosystem of open-source software for mathematics, science, and engineering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scipy/scipy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.3K · 🔀 4.2K · 📥 350K · 📦 510K · 📋 8.5K - 20% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scipy/scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/scipy&#34;&gt;PyPi&lt;/a&gt; (📥 45M / month · 📦 58K · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/scipy&#34;&gt;Conda&lt;/a&gt; (📥 23M · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge scipy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sympy/sympy&#34;&gt;SymPy&lt;/a&gt;&lt;/b&gt; (🥇44 · ⭐ 9.2K) - A computer algebra system written in pure Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sympy/sympy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.1K · 🔀 3.7K · 📥 450K · 📦 42K · 📋 12K - 35% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sympy/sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/sympy&#34;&gt;PyPi&lt;/a&gt; (📥 1.7M / month · 📦 4.1K · ⏱️ 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/sympy&#34;&gt;Conda&lt;/a&gt; (📥 2.1M · ⏱️ 20.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge sympy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;Streamlit&lt;/a&gt;&lt;/b&gt; (🥇38 · ⭐ 19K) - Streamlit The fastest way to build data apps in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/streamlit/streamlit&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 1.7K · 📦 300 · 📋 2.4K - 23% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/streamlit/streamlit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/streamlit&#34;&gt;PyPi&lt;/a&gt; (📥 990K / month · 📦 370 · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install streamlit&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/pyod&#34;&gt;PyOD&lt;/a&gt;&lt;/b&gt; (🥇36 · ⭐ 5.7K) - A Comprehensive and Scalable Python Library for Outlier Detection (Anomaly.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/pyod&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 39 · 🔀 1.1K · 📦 1.3K · 📋 260 - 50% open · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyod&#34;&gt;PyPi&lt;/a&gt; (📥 500K / month · 📦 32 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyod&#34;&gt;Conda&lt;/a&gt; (📥 21K · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;Gradio&lt;/a&gt;&lt;/b&gt; (🥇34 · ⭐ 7.1K) - Wrap UIs around any model, share with anyone. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/gradio-app/gradio&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 72 · 🔀 450 · 📦 800 · 📋 690 - 20% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/gradio-app/gradio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gradio&#34;&gt;PyPi&lt;/a&gt; (📥 290K / month · 📦 20 · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gradio&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleHub&#34;&gt;PaddleHub&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 8K) - Awesome pre-trained models toolkit based on PaddlePaddle.(300+.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1M&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PaddlePaddle/PaddleHub&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 61 · 🔀 1.6K · 📥 570 · 📦 800 · 📋 1.1K - 40% open · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PaddlePaddle/PaddleHub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/paddlehub&#34;&gt;PyPi&lt;/a&gt; (📥 15K / month · 📦 5 · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install paddlehub&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/simonw/datasette&#34;&gt;Datasette&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 6.1K) - An open source multi-tool for exploring and publishing data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/simonw/datasette&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 63 · 🔀 410 · 📥 39 · 📦 660 · 📋 1.3K - 26% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/simonw/datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datasette&#34;&gt;PyPi&lt;/a&gt; (📥 250K / month · 📦 160 · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datasette&#34;&gt;Conda&lt;/a&gt; (📥 4K · ⏱️ 24.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datasette&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepchem/deepchem&#34;&gt;DeepChem&lt;/a&gt;&lt;/b&gt; (🥇33 · ⭐ 3.6K) - Democratizing Deep-Learning for Drug Discovery, Quantum Chemistry,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1A&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/deepchem/deepchem&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 190 · 🔀 1.3K · 📦 90 · 📋 1.5K - 31% open · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/deepchem/deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/deepchem&#34;&gt;PyPi&lt;/a&gt; (📥 7.6K / month · 📦 5 · ⏱️ 22.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/deepchem&#34;&gt;Conda&lt;/a&gt; (📥 9.9K · ⏱️ 19.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge deepchem&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/HIPS/autograd&#34;&gt;Autograd&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 5.8K) - Efficiently computes derivatives of numpy code. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/HIPS/autograd&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 51 · 🔀 820 · 📦 3.4K · 📋 390 - 42% open · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/HIPS/autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/autograd&#34;&gt;PyPi&lt;/a&gt; (📥 1.2M / month · 📦 280 · ⏱️ 08.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/autograd&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 25.07.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge autograd&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/datalad/datalad&#34;&gt;datalad&lt;/a&gt;&lt;/b&gt; (🥈32 · ⭐ 320) - Keep code, data, containers under control with git and git-annex. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/datalad/datalad&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 47 · 🔀 90 · 📋 3.5K - 13% open · ⏱️ 23.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/datalad/datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/datalad&#34;&gt;PyPi&lt;/a&gt; (📥 7.6K / month · 📦 54 · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/datalad&#34;&gt;Conda&lt;/a&gt; (📥 210K · ⏱️ 12.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge datalad&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/carla-simulator/carla&#34;&gt;carla&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 7.8K) - Open-source simulator for autonomous driving research. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/carla-simulator/carla&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 140 · 🔀 2.3K · 📦 180 · 📋 3.9K - 14% open · ⏱️ 19.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/carla-simulator/carla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/carla&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 3 · ⏱️ 17.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install carla&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/serge-sans-paille/pythran&#34;&gt;Pythran&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.7K) - Ahead of Time compiler for numeric kernels. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/serge-sans-paille/pythran&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 66 · 🔀 170 · 📦 140 · 📋 760 - 14% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/serge-sans-paille/pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pythran&#34;&gt;PyPi&lt;/a&gt; (📥 330K / month · 📦 14 · ⏱️ 14.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pythran&#34;&gt;Conda&lt;/a&gt; (📥 230K · ⏱️ 10.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pythran&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/wireservice/agate&#34;&gt;agate&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 1.1K · 💤) - A Python data analysis library that is optimized for humans instead of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/wireservice/agate&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 49 · 🔀 140 · 📦 920 · 📋 680 - 7% open · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/wireservice/agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/agate&#34;&gt;PyPi&lt;/a&gt; (📥 3.4M / month · 📦 130 · ⏱️ 15.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/agate&#34;&gt;Conda&lt;/a&gt; (📥 83K · ⏱️ 16.07.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge agate&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/inducer/pyopencl&#34;&gt;pyopencl&lt;/a&gt;&lt;/b&gt; (🥈31 · ⭐ 890) - OpenCL integration for Python, plus shiny features. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/inducer/pyopencl&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 91 · 🔀 230 · 📦 730 · 📋 310 - 22% open · ⏱️ 21.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/inducer/pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyopencl&#34;&gt;PyPi&lt;/a&gt; (📥 32K / month · 📦 190 · ⏱️ 19.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyopencl&#34;&gt;Conda&lt;/a&gt; (📥 600K · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyopencl&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/online-ml/river&#34;&gt;River&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 3.4K) - Online machine learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/online-ml/river&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 77 · 🔀 380 · 📦 120 · 📋 370 - 4% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/online-ml/river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/river&#34;&gt;PyPi&lt;/a&gt; (📥 6.4K / month · 📦 12 · ⏱️ 04.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/river&#34;&gt;Conda&lt;/a&gt; (📥 8.2K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge river&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/hdbscan&#34;&gt;hdbscan&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 2.2K) - A high performance implementation of HDBSCAN clustering. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/hdbscan&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 400 · 📦 1.4K · 📋 420 - 63% open · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/hdbscan&#34;&gt;PyPi&lt;/a&gt; (📥 400K / month · 📦 150 · ⏱️ 08.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/hdbscan&#34;&gt;Conda&lt;/a&gt; (📥 1.1M · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge hdbscan&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/PennyLaneAI/pennylane&#34;&gt;PennyLane&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.4K) - PennyLane is a cross-platform Python library for differentiable.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/PennyLaneAI/pennylane&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 98 · 🔀 360 · 📥 60 · 📋 700 - 25% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/PennyLaneAI/PennyLane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pennylane&#34;&gt;PyPi&lt;/a&gt; (📥 12K / month · 📦 32 · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pennylane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pennylane&#34;&gt;Conda&lt;/a&gt; (📥 1.1K · ⏱️ 01.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pennylane&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tensorly/tensorly&#34;&gt;tensorly&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1.2K) - TensorLy: Tensor Learning in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tensorly/tensorly&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 52 · 🔀 240 · 📦 260 · 📋 190 - 25% open · ⏱️ 06.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tensorly/tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tensorly&#34;&gt;PyPi&lt;/a&gt; (📥 5.1K / month · 📦 30 · ⏱️ 08.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/tensorly&#34;&gt;Conda&lt;/a&gt; (📥 240K · ⏱️ 09.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge tensorly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/nicodv/kmodes&#34;&gt;kmodes&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 1K) - Python implementations of the k-modes and k-prototypes clustering.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/nicodv/kmodes&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 21 · 🔀 370 · 📦 1.2K · 📋 150 - 10% open · ⏱️ 09.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/nicodv/kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/kmodes&#34;&gt;PyPi&lt;/a&gt; (📥 370K / month · 📦 26 · ⏱️ 14.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/kmodes&#34;&gt;Conda&lt;/a&gt; (📥 8.9K · ⏱️ 15.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge kmodes&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/adapter-hub/adapter-transformers&#34;&gt;adapter-transformers&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 820) - Huggingface Transformers + Adapters =. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;huggingface&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/adapter-hub/adapter-transformers&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1.3K · 🔀 140 · 📦 75 · 📋 180 - 29% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/Adapter-Hub/adapter-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/adapter-transformers&#34;&gt;PyPi&lt;/a&gt; (📥 39K / month · 📦 5 · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install adapter-transformers&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/uber/causalml&#34;&gt;causalml&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 3K) - Uplift modeling and causal inference with machine learning algorithms. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/uber/causalml&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 41 · 🔀 480 · 📦 50 · 📋 260 - 17% open · ⏱️ 20.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/uber/causalml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/causalml&#34;&gt;PyPi&lt;/a&gt; (📥 47K / month · 📦 1 · ⏱️ 14.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install causalml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pyjanitor-devs/pyjanitor&#34;&gt;pyjanitor&lt;/a&gt;&lt;/b&gt; (🥈29 · ⭐ 920) - Clean APIs for data cleaning. Python implementation of R package Janitor. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pyjanitor-devs/pyjanitor&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 100 · 🔀 150 · 📦 180 · 📋 470 - 22% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pyjanitor-devs/pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyjanitor&#34;&gt;PyPi&lt;/a&gt; (📥 22K / month · 📦 11 · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/pyjanitor&#34;&gt;Conda&lt;/a&gt; (📥 120K · ⏱️ 22.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge pyjanitor&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/mars-project/mars&#34;&gt;Mars&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 2.4K) - Mars is a tensor-based unified framework for large-scale data.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/mars-project/mars&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 45 · 🔀 300 · 📋 1.1K - 17% open · ⏱️ 26.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/mars-project/mars&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pymars&#34;&gt;PyPi&lt;/a&gt; (📥 26K / month · 📦 1 · ⏱️ 10.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pymars&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi-detect&#34;&gt;alibi-detect&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.3K) - Algorithms for outlier, adversarial and drift detection. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SeldonIO/alibi-detect&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 16 · 🔀 140 · 📦 90 · 📋 240 - 32% open · ⏱️ 24.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SeldonIO/alibi-detect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/alibi-detect&#34;&gt;PyPi&lt;/a&gt; (📥 28K / month · 📦 5 · ⏱️ 01.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install alibi-detect&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/tableau/TabPy&#34;&gt;TabPy&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.3K) - Execute Python code on the fly and display results in Tableau visualizations:. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/tableau/TabPy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 46 · 🔀 460 · 📦 90 · 📋 290 - 3% open · ⏱️ 31.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/tableau/TabPy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/tabpy&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 2 · ⏱️ 20.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install tabpy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/anaconda/tabpy-client&#34;&gt;Conda&lt;/a&gt; (📥 2.8K · ⏱️ 02.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c anaconda tabpy-client&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/trevorstephens/gplearn&#34;&gt;gplearn&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 1.1K) - Genetic Programming in Python, with a scikit-learn inspired API. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/trevorstephens/gplearn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 200 · 📦 250 · 📋 190 - 17% open · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/trevorstephens/gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/gplearn&#34;&gt;PyPi&lt;/a&gt; (📥 6.1K / month · 📦 10 · ⏱️ 03.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/gplearn&#34;&gt;Conda&lt;/a&gt; (📥 2.3K · ⏱️ 04.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge gplearn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/google/trax&#34;&gt;Trax&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 6.9K) - Trax Deep Learning with Clear Code and Speed. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/google/trax&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 78 · 🔀 700 · 📦 54 · 📋 210 - 41% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/google/trax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/trax&#34;&gt;PyPi&lt;/a&gt; (📥 4.2K / month · ⏱️ 26.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install trax&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/sepandhaghighi/pycm&#34;&gt;pycm&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.2K) - Multi-class confusion matrix library in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/sepandhaghighi/pycm&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 110 · 📦 140 · 📋 180 - 6% open · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/sepandhaghighi/pycm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pycm&#34;&gt;PyPi&lt;/a&gt; (📥 36K / month · 📦 13 · ⏱️ 27.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pycm&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/AugLy&#34;&gt;AugLy&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 4.5K) - A data augmentations library for audio, image, text, and video. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/facebookresearch/AugLy&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 23 · 🔀 240 · 📦 36 · 📋 66 - 19% open · ⏱️ 15.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/facebookresearch/AugLy&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/augly&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 3 · ⏱️ 28.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install augly&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/metric-learn&#34;&gt;metric-learn&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 1.2K) - Metric learning algorithms in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/scikit-learn-contrib/metric-learn&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 22 · 🔀 220 · 📦 200 · 📋 170 - 30% open · ⏱️ 11.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/scikit-learn-contrib/metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/metric-learn&#34;&gt;PyPi&lt;/a&gt; (📥 14K / month · 📦 11 · ⏱️ 02.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/metric-learn&#34;&gt;Conda&lt;/a&gt; (📥 5.7K · ⏱️ 02.07.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge metric-learn&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ContinualAI/avalanche&#34;&gt;avalanche&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 930) - Avalanche: an End-to-End Library for Continual Learning based on PyTorch. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ContinualAI/avalanche&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 56 · 🔀 150 · 📦 9 · 📋 510 - 14% open · ⏱️ 25.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ContinualAI/avalanche&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/avalanche-lib&#34;&gt;PyPi&lt;/a&gt; (📥 700 / month · ⏱️ 16.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install avalanche-lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ljvmiranda921/pyswarms&#34;&gt;PySwarms&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 920 · 💤) - A research toolkit for particle swarm optimization in Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ljvmiranda921/pyswarms&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 43 · 🔀 290 · 📦 170 · 📋 210 - 7% open · ⏱️ 23.06.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ljvmiranda921/pyswarms&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pyswarms&#34;&gt;PyPi&lt;/a&gt; (📥 19K / month · 📦 6 · ⏱️ 03.01.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pyswarms&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/astroML/astroML&#34;&gt;AstroML&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 820) - Machine learning, statistics, and data mining for astronomy and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/astroML/astroML&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 30 · 🔀 280 · 📋 150 - 40% open · ⏱️ 17.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/astroML/astroML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/astroML&#34;&gt;PyPi&lt;/a&gt; (📥 1.5K / month · 📦 33 · ⏱️ 01.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install astroML&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/astroml&#34;&gt;Conda&lt;/a&gt; (📥 29K · ⏱️ 02.03.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge astroml&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/MaxHalford/prince&#34;&gt;Prince&lt;/a&gt;&lt;/b&gt; (🥉25 · ⭐ 800) - Python factor analysis library (PCA, CA, MCA, MFA, FAMD). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/MaxHalford/prince&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 12 · 🔀 140 · 📦 210 · 📋 110 - 35% open · ⏱️ 28.12.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/MaxHalford/prince&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/prince&#34;&gt;PyPi&lt;/a&gt; (📥 79K / month · 📦 5 · ⏱️ 06.10.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install prince&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/prince-factor-analysis&#34;&gt;Conda&lt;/a&gt; (📥 9.8K · ⏱️ 30.04.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge prince-factor-analysis&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/rasbt/biopandas&#34;&gt;BioPandas&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 470) - Working with molecular structures in pandas DataFrames. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/rasbt/biopandas&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 10 · 🔀 98 · 📦 100 · 📋 43 - 39% open · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/rasbt/biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/biopandas&#34;&gt;PyPi&lt;/a&gt; (📥 4.5K / month · 📦 14 · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/biopandas&#34;&gt;Conda&lt;/a&gt; (📥 110K · ⏱️ 13.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge biopandas&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/minrk/findspark&#34;&gt;findspark&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 440) - Find pyspark to make it importable. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1N&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/minrk/findspark&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 15 · 🔀 67 · 📦 2.5K · 📋 23 - 52% open · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/minrk/findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/findspark&#34;&gt;PyPi&lt;/a&gt; (📥 2.3M / month · 📦 140 · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/findspark&#34;&gt;Conda&lt;/a&gt; (📥 640K · ⏱️ 11.02.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge findspark&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/solegalli/feature_engine&#34;&gt;Feature Engine&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 860 · 💤) - Feature engineering package with sklearn like functionality. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/solegalli/feature_engine&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 24 · 🔀 200 · ⏱️ 06.08.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/solegalli/feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/feature_engine&#34;&gt;PyPi&lt;/a&gt; (📥 76K / month · 📦 66 · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/feature_engine&#34;&gt;Conda&lt;/a&gt; (📥 9K · ⏱️ 05.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge feature_engine&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/airbnb/streamalert&#34;&gt;StreamAlert&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 2.7K) - StreamAlert is a serverless, realtime data analysis framework.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/airbnb/streamalert&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 33 · 🔀 320 · 📋 340 - 24% open · ⏱️ 04.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/airbnb/streamalert&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/ml-tooling/opyrator&#34;&gt;opyrator&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 2.6K · 💤) - Turns your machine learning code into microservices with web API,.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/ml-tooling/opyrator&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 120 · 📦 36 · 📋 26 - 7% open · ⏱️ 06.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/ml-tooling/opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/opyrator&#34;&gt;PyPi&lt;/a&gt; (📥 600 / month · ⏱️ 04.05.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://anaconda.org/conda-forge/opyrator&#34;&gt;Conda&lt;/a&gt; (📥 110 · ⏱️ 08.01.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; conda install -c conda-forge opyrator&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/eltonlaw/impyute&#34;&gt;impyute&lt;/a&gt;&lt;/b&gt; (🥉20 · ⭐ 320) - Data imputations library to preprocess datasets with missing data. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/eltonlaw/impyute&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 11 · 🔀 44 · 📦 140 · 📋 64 - 42% open · ⏱️ 06.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/eltonlaw/impyute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/impyute&#34;&gt;PyPi&lt;/a&gt; (📥 5K / month · 📦 3 · ⏱️ 29.04.2019):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install impyute&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/yzhao062/SUOD&#34;&gt;SUOD&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 320) - (MLSys 21) An Acceleration System for Large-scare Unsupervised Heterogeneous.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3rqEWVr&#34;&gt;BSD-2&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/yzhao062/SUOD&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 1 · 🔀 41 · 📦 420 · 📋 9 - 66% open · ⏱️ 11.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/yzhao062/SUOD&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/suod&#34;&gt;PyPi&lt;/a&gt; (📥 27K / month · ⏱️ 01.10.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install suod&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pykale/pykale&#34;&gt;pykale&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 340) - Knowledge-Aware machine LEarning (KALE): accessible machine learning.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/pykale/pykale&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 17 · 🔀 45 · 📋 98 - 14% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/pykale/pykale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/pykale&#34;&gt;PyPi&lt;/a&gt; (📥 56 / month · ⏱️ 12.04.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install pykale&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jmschrei/apricot&#34;&gt;apricot&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 420) - apricot implements submodular optimization for the purpose of selecting.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/jmschrei/apricot&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 4 · 🔀 40 · 📥 10 · 📦 25 · 📋 24 - 25% open · ⏱️ 18.11.2021):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/jmschrei/apricot&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/apricot-select&#34;&gt;PyPi&lt;/a&gt; (📥 390 / month · 📦 3 · ⏱️ 28.09.2020):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install apricot-select&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/SforAiDl/KD_Lib&#34;&gt;KD-Lib&lt;/a&gt;&lt;/b&gt; (🥉17 · ⭐ 390) - A Pytorch Knowledge Distillation library for benchmarking and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1Q&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://github.com/SforAiDl/KD_Lib&#34;&gt;GitHub&lt;/a&gt; (👨‍💻 6 · 🔀 34 · 📋 59 - 22% open · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; git clone https://github.com/SforAiDl/KD_Lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA;  &lt;li&gt; &lt;p&gt;&lt;a href=&#34;https://pypi.org/project/KD-Lib&#34;&gt;PyPi&lt;/a&gt; (📥 120 / month · ⏱️ 18.05.2022):&lt;/p&gt; &lt;pre&gt;&lt;code&gt; pip install KD-Lib&#xA;&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;details&gt;&#xA; &lt;summary&gt;Show 17 hidden projects...&lt;/summary&gt; &#xA; &lt;ul&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/explosion/cython-blis&#34;&gt;Cython BLIS&lt;/a&gt;&lt;/b&gt; (🥈30 · ⭐ 190) - Fast matrix-multiplication as a self-contained Python library no.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/deepmind/pysc2&#34;&gt;pysc2&lt;/a&gt;&lt;/b&gt; (🥈28 · ⭐ 7.5K · 💀) - StarCraft II Learning Environment. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/JustGlowing/minisom&#34;&gt;minisom&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 1.1K) - MiniSom is a minimalistic implementation of the Self Organizing.. &lt;code&gt;&lt;a href=&#34;https://tldrlegal.com/search?q=CC-BY-3.0&#34;&gt;❗️CC-BY-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/annoviko/pyclustering&#34;&gt;pyclustering&lt;/a&gt;&lt;/b&gt; (🥉27 · ⭐ 960 · 💀) - pyclustring is a Python, C++ data mining library. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/cleanlab/cleanlab&#34;&gt;cleanlab&lt;/a&gt;&lt;/b&gt; (🥉26 · ⭐ 3.4K) - The standard data-centric AI package for data quality and machine.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3pwmjO5&#34;&gt;❗️AGPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/modAL-python/modAL&#34;&gt;modAL&lt;/a&gt;&lt;/b&gt; (🥉24 · ⭐ 1.7K · 💀) - A modular active learning framework for Python. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Project-MONAI/MONAILabel&#34;&gt;MONAILabel&lt;/a&gt;&lt;/b&gt; (🥉23 · ⭐ 240) - MONAI Label is an intelligent open source image labeling and.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3nYMfla&#34;&gt;Apache-2&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/vecxoz/vecstack&#34;&gt;vecstack&lt;/a&gt;&lt;/b&gt; (🥉22 · ⭐ 660 · 💀) - Python package for stacking (machine learning technique). &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/flennerhag/mlens&#34;&gt;mlens&lt;/a&gt;&lt;/b&gt; (🥉21 · ⭐ 740 · 💀) - ML-Ensemble high performance ensemble learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/kLabUM/rrcf&#34;&gt;rrcf&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 380 · 💀) - Implementation of the Robust Random Cut Forest algorithm for anomaly.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/EpistasisLab/scikit-rebate&#34;&gt;scikit-rebate&lt;/a&gt;&lt;/b&gt; (🥉19 · ⭐ 360 · 💀) - A scikit-learn-compatible Python implementation of.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/alegonz/baikal&#34;&gt;baikal&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 590 · 💀) - A graph-based functional API for building complex scikit-learn.. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/pandas-ml/pandas-ml&#34;&gt;pandas-ml&lt;/a&gt;&lt;/b&gt; (🥉18 · ⭐ 290 · 💀) - pandas, scikit-learn, xgboost and seaborn integration. &lt;code&gt;&lt;a href=&#34;http://bit.ly/3aKzpTv&#34;&gt;BSD-3&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1F&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt; &lt;code&gt;&lt;img src=&#34;https://git.io/JLy1S&#34; style=&#34;display:inline;&#34; width=&#34;13&#34; height=&#34;13&#34;&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/facebookresearch/NeuralCompression&#34;&gt;NeuralCompression&lt;/a&gt;&lt;/b&gt; (🥉14 · ⭐ 250) - A collection of tools for neural compression enthusiasts. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/jrieke/traingenerator&#34;&gt;traingenerator&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 1.2K · 💀) - A web app to generate template code for machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/dstackai/dstack&#34;&gt;dstack&lt;/a&gt;&lt;/b&gt; (🥉13 · ⭐ 44 · 🐣) - dstack: continuous training in the cloud. &lt;code&gt;&lt;a href=&#34;http://bit.ly/2M0xdwT&#34;&gt;❗️GPL-3.0&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA;  &lt;li&gt;&lt;b&gt;&lt;a href=&#34;https://github.com/Palashio/nylon&#34;&gt;nylon&lt;/a&gt;&lt;/b&gt; (🥉12 · ⭐ 77 · 💤) - An intelligent, flexible grammar of machine learning. &lt;code&gt;&lt;a href=&#34;http://bit.ly/34MBwT8&#34;&gt;MIT&lt;/a&gt;&lt;/code&gt;&lt;/li&gt; &#xA; &lt;/ul&gt; &#xA;&lt;/details&gt; &#xA;&lt;hr&gt; &#xA;&lt;h2&gt;Related Resources&lt;/h2&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://paperswithcode.com&#34;&gt;&lt;strong&gt;Papers With Code&lt;/strong&gt;&lt;/a&gt;: Discover ML papers, code, and evaluation tables.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://sotabench.com&#34;&gt;&lt;strong&gt;Sotabench&lt;/strong&gt;&lt;/a&gt;: Discover &amp;amp; compare open-source ML models.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://toolbox.google.com/datasetsearch&#34;&gt;&lt;strong&gt;Google Dataset Search&lt;/strong&gt;&lt;/a&gt;: Dataset search engine by Google.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://www.datasetlist.com/&#34;&gt;&lt;strong&gt;Dataset List&lt;/strong&gt;&lt;/a&gt;: List of the biggest ML datasets from across the web.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/awesomedata/awesome-public-datasets&#34;&gt;&lt;strong&gt;Awesome Public Datasets&lt;/strong&gt;&lt;/a&gt;: A topic-centric list of open datasets.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://best-of.org&#34;&gt;&lt;strong&gt;Best-of lists&lt;/strong&gt;&lt;/a&gt;: Discover other best-of lists with awesome open-source projects on all kinds of topics.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-python-dev&#34;&gt;&lt;strong&gt;best-of-python-dev&lt;/strong&gt;&lt;/a&gt;: A ranked list of awesome python developer tools and libraries.&lt;/li&gt; &#xA; &lt;li&gt;&lt;a href=&#34;https://github.com/ml-tooling/best-of-web-python&#34;&gt;&lt;strong&gt;best-of-web-python&lt;/strong&gt;&lt;/a&gt;: A ranked list of awesome python libraries for web development.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;h2&gt;Contribution&lt;/h2&gt; &#xA;&lt;p&gt;Contributions are encouraged and always welcome! If you like to add or update projects, choose one of the following ways:&lt;/p&gt; &#xA;&lt;ul&gt; &#xA; &lt;li&gt;Open an issue by selecting one of the provided categories from the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/issues/new/choose&#34;&gt;issue page&lt;/a&gt; and fill in the requested information.&lt;/li&gt; &#xA; &lt;li&gt;Modify the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/raw/main/projects.yaml&#34;&gt;projects.yaml&lt;/a&gt; with your additions or changes, and submit a pull request. This can also be done directly via the &lt;a href=&#34;https://github.com/ml-tooling/best-of-ml-python/edit/main/projects.yaml&#34;&gt;Github UI&lt;/a&gt;.&lt;/li&gt; &#xA;&lt;/ul&gt; &#xA;&lt;p&gt;If you like to contribute to or share suggestions regarding the project metadata col&lt;/p&gt;</summary>
  </entry>
</feed>